{
  File translogFile=getResource("/org/elasticsearch/index/translog/translog-v1.binary");
  assertThat("test file should exist",translogFile.exists(),equalTo(true));
  TranslogStream stream=TranslogStreams.translogStreamFor(translogFile);
  assertThat("a version1 stream is returned",stream instanceof ChecksummedTranslogStream,equalTo(true));
  Translog.Operation operation=stream.read();
  assertThat("operation is the correct type correctly",operation.opType() == Translog.Operation.Type.CREATE,equalTo(true));
  Translog.Create op=(Translog.Create)operation;
  assertThat(op.id(),equalTo("Bwiq98KFSb6YjJQGeSpeiw"));
  assertThat(op.type(),equalTo("doc"));
  assertThat(op.source().toUtf8(),equalTo("{\"body\": \"foo\"}"));
  assertThat(op.routing(),equalTo(null));
  assertThat(op.parent(),equalTo(null));
  assertThat(op.version(),equalTo(1L));
  assertThat(op.timestamp(),equalTo(1408627184844L));
  assertThat(op.ttl(),equalTo(-1L));
  assertThat(op.versionType(),equalTo(VersionType.INTERNAL));
  int opNum=1;
  while (true) {
    try {
      stream.read();
      opNum++;
    }
 catch (    EOFException e) {
      break;
    }
  }
  assertThat("there should be 5 translog operations",opNum,equalTo(5));
  stream.close();
}
