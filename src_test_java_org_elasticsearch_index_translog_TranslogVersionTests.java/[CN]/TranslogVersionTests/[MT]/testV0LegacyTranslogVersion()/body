{
  Path translogFile=getResourcePath("/org/elasticsearch/index/translog/translog-v0.binary");
  assertThat("test file should exist",Files.exists(translogFile),equalTo(true));
  TranslogStream stream=TranslogStreams.translogStreamFor(translogFile);
  assertThat("a version0 stream is returned",stream instanceof LegacyTranslogStream,equalTo(true));
  StreamInput in=stream.openInput(translogFile);
  in.readInt();
  Translog.Operation operation=stream.read(in);
  assertThat("operation is the correct type correctly",operation.opType() == Translog.Operation.Type.SAVE,equalTo(true));
  Translog.Index op=(Translog.Index)operation;
  assertThat(op.id(),equalTo("1"));
  assertThat(op.type(),equalTo("doc"));
  assertThat(op.source().toUtf8(),equalTo("{\"body\": \"worda wordb wordc wordd \\\"worde\\\" wordf\"}"));
  assertThat(op.routing(),equalTo(null));
  assertThat(op.parent(),equalTo(null));
  assertThat(op.version(),equalTo(1L));
  assertThat(op.timestamp(),equalTo(1407312091791L));
  assertThat(op.ttl(),equalTo(-1L));
  assertThat(op.versionType(),equalTo(VersionType.INTERNAL));
  try {
    in.readInt();
    stream.read(in);
    fail("should have been the end of the file");
  }
 catch (  EOFException e) {
  }
}
