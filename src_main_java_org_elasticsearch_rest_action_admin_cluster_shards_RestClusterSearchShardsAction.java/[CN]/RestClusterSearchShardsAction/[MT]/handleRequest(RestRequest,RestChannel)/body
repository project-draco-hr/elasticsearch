{
  String[] indices=Strings.splitStringByCommaToArray(request.param("index"));
  final ClusterSearchShardsRequest clusterSearchShardsRequest=Requests.clusterSearchShardsRequest(indices);
  clusterSearchShardsRequest.local(request.paramAsBoolean("local",clusterSearchShardsRequest.local()));
  clusterSearchShardsRequest.listenerThreaded(false);
  clusterSearchShardsRequest.types(Strings.splitStringByCommaToArray(request.param("type")));
  clusterSearchShardsRequest.routing(request.param("routing"));
  clusterSearchShardsRequest.preference(request.param("preference"));
  if (request.hasParam("ignore_indices")) {
    clusterSearchShardsRequest.ignoreIndices(IgnoreIndices.fromString(request.param("ignore_indices")));
  }
  client.admin().cluster().searchShards(clusterSearchShardsRequest,new ActionListener<ClusterSearchShardsResponse>(){
    @Override public void onResponse(    ClusterSearchShardsResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        builder.field("ok",true);
        response.toXContent(builder,request);
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,RestStatus.OK,builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
