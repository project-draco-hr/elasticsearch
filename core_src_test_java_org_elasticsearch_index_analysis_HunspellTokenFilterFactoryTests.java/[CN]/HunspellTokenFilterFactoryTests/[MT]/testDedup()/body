{
  Settings settings=Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(),createTempDir().toString()).put(Environment.PATH_CONF_SETTING.getKey(),getDataPath("/indices/analyze/conf_dir")).put("index.analysis.filter.en_US.type","hunspell").put("index.analysis.filter.en_US.locale","en_US").build();
  TestAnalysis analysis=AnalysisTestsHelper.createTestAnalysisFromSettings(settings);
  TokenFilterFactory tokenFilter=analysis.tokenFilter.get("en_US");
  assertThat(tokenFilter,instanceOf(HunspellTokenFilterFactory.class));
  HunspellTokenFilterFactory hunspellTokenFilter=(HunspellTokenFilterFactory)tokenFilter;
  assertThat(hunspellTokenFilter.dedup(),is(true));
  settings=Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(),createTempDir().toString()).put(Environment.PATH_CONF_SETTING.getKey(),getDataPath("/indices/analyze/conf_dir")).put("index.analysis.filter.en_US.type","hunspell").put("index.analysis.filter.en_US.dedup",false).put("index.analysis.filter.en_US.locale","en_US").build();
  analysis=AnalysisTestsHelper.createTestAnalysisFromSettings(settings);
  tokenFilter=analysis.tokenFilter.get("en_US");
  assertThat(tokenFilter,instanceOf(HunspellTokenFilterFactory.class));
  hunspellTokenFilter=(HunspellTokenFilterFactory)tokenFilter;
  assertThat(hunspellTokenFilter.dedup(),is(false));
}
