{
  DocumentMapperParser parser=createIndex("test").mapperService().documentMapperParser();
  String objectMapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("obj").field("type","object").endObject().endObject().endObject().endObject().string();
  DocumentMapper objectMapper=parser.parse(objectMapping);
  String nestedMapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("obj").field("type","nested").endObject().endObject().endObject().endObject().string();
  DocumentMapper nestedMapper=parser.parse(nestedMapping);
  try {
    objectMapper.merge(nestedMapper.mapping(),true,false);
    fail();
  }
 catch (  IllegalArgumentException e) {
    assertThat(e.getMessage(),containsString("object mapping [obj] can't be changed from non-nested to nested"));
  }
  try {
    nestedMapper.merge(objectMapper.mapping(),true,false);
    fail();
  }
 catch (  IllegalArgumentException e) {
    assertThat(e.getMessage(),containsString("object mapping [obj] can't be changed from nested to non-nested"));
  }
}
