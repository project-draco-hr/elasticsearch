{
  DocumentMapperParser parser=createIndex("test").mapperService().documentMapperParser();
  String mapping1=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","string").field("analyzer","standard").field("search_analyzer","whitespace").endObject().endObject().endObject().endObject().string();
  String mapping2=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","string").field("analyzer","standard").field("ignore_above",14).endObject().endObject().endObject().endObject().string();
  DocumentMapper existing=parser.parse("type",new CompressedXContent(mapping1));
  DocumentMapper changed=parser.parse("type",new CompressedXContent(mapping2));
  assertThat(((NamedAnalyzer)existing.mappers().getMapper("field").fieldType().searchAnalyzer()).name(),equalTo("whitespace"));
  existing.merge(changed.mapping(),false,false);
  assertThat(((NamedAnalyzer)existing.mappers().getMapper("field").fieldType().searchAnalyzer()).name(),equalTo("standard"));
  assertThat(((StringFieldMapper)(existing.mappers().getMapper("field"))).getIgnoreAbove(),equalTo(14));
}
