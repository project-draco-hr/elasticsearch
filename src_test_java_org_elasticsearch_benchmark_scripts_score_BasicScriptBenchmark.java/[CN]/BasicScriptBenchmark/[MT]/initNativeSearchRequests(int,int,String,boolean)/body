{
  List<Entry<String,RequestInfo>> nativeSearchRequests=new ArrayList<>();
  for (int nTerms=minTerms; nTerms < maxTerms; nTerms++) {
    Map<String,Object> params=new HashMap<>();
    String[] terms=getTerms(nTerms + 1);
    params.put("text",terms);
    String infoString="Results for native script with " + (nTerms + 1) + " terms:";
    ScriptScoreFunctionBuilder scriptFunction=(langNative == true) ? scriptFunction(script,"native",params) : scriptFunction(script,params);
    SearchRequest request=searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().explain(false).size(0).query(functionScoreQuery(FilterBuilders.termsFilter("text",terms),scriptFunction).boostMode(CombineFunction.REPLACE)));
    nativeSearchRequests.add(new AbstractMap.SimpleEntry<>(infoString,new RequestInfo(request,nTerms + 1)));
  }
  return nativeSearchRequests;
}
