{
  ContextAndHeaderHolder contextAndHeaders=new ContextAndHeaderHolder();
  Settings.Builder builder=Settings.builder();
  if (rarely()) {
    builder.put("script.file",randomFrom(ScriptModesTests.ENABLE_VALUES));
  }
  if (rarely()) {
    builder.put("script.indexed",ScriptMode.SANDBOX);
  }
  if (rarely()) {
    builder.put("script.inline",ScriptMode.SANDBOX);
  }
  buildScriptService(builder.build());
  createFileScripts("groovy","mustache","test");
  for (  ScriptContext scriptContext : scriptContexts) {
    assertCompileRejected(GroovyScriptEngineService.NAME,"script",ScriptType.INLINE,scriptContext,contextAndHeaders);
    assertCompileRejected(GroovyScriptEngineService.NAME,"script",ScriptType.INDEXED,scriptContext,contextAndHeaders);
    assertCompileAccepted(GroovyScriptEngineService.NAME,"file_script",ScriptType.FILE,scriptContext,contextAndHeaders);
    assertCompileAccepted(MustacheScriptEngineService.NAME,"script",ScriptType.INLINE,scriptContext,contextAndHeaders);
    assertCompileAccepted(MustacheScriptEngineService.NAME,"script",ScriptType.INDEXED,scriptContext,contextAndHeaders);
    assertCompileAccepted(MustacheScriptEngineService.NAME,"file_script",ScriptType.FILE,scriptContext,contextAndHeaders);
    assertCompileAccepted("test","script",ScriptType.INLINE,scriptContext,contextAndHeaders);
    assertCompileAccepted("test","script",ScriptType.INDEXED,scriptContext,contextAndHeaders);
    assertCompileAccepted("test","file_script",ScriptType.FILE,scriptContext,contextAndHeaders);
  }
}
