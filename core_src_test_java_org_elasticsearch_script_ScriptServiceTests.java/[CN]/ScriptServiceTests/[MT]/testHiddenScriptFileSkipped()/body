{
  buildScriptService(Settings.EMPTY);
  Path testHiddenFile=scriptsFilePath.resolve(".hidden_file");
  Path testFile=scriptsFilePath.resolve("test_file.tst");
  Streams.copy("test_hidden_file".getBytes("UTF-8"),Files.newOutputStream(testHiddenFile));
  Streams.copy("test_file".getBytes("UTF-8"),Files.newOutputStream(testFile));
  resourceWatcherService.notifyNow();
  try {
    scriptService.compile(new Script("hidden_file",ScriptType.FILE,"test",null),ScriptContext.Standard.SEARCH,Collections.emptyMap());
    fail("the script hidden_file should not be processed");
  }
 catch (  IllegalArgumentException ex) {
    assertThat(ex.getMessage(),containsString("Unable to find on disk file script [hidden_file] using lang [test]"));
  }
  CompiledScript compiledScript=scriptService.compile(new Script("test_file",ScriptType.FILE,"test",null),ScriptContext.Standard.SEARCH,Collections.emptyMap());
  assertThat(compiledScript.compiled(),equalTo((Object)"compiled_test_file"));
  Files.delete(testHiddenFile);
  Files.delete(testFile);
  resourceWatcherService.notifyNow();
}
