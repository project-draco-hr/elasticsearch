{
  buildScriptService(Settings.EMPTY);
  Path testFileNoExt=scriptsFilePath.resolve("test_no_ext");
  Path testFileWithExt=scriptsFilePath.resolve("test_script.test");
  Streams.copy("test_file_no_ext".getBytes("UTF-8"),Files.newOutputStream(testFileNoExt));
  Streams.copy("test_file".getBytes("UTF-8"),Files.newOutputStream(testFileWithExt));
  resourceWatcherService.notifyNow();
  CompiledScript compiledScript=scriptService.compile(new Script("test_script",ScriptType.FILE,"test",null),ScriptContext.Standard.SEARCH,Collections.emptyMap(),emptyClusterState());
  assertThat(compiledScript.compiled(),equalTo((Object)"compiled_test_file"));
  Files.delete(testFileNoExt);
  Files.delete(testFileWithExt);
  resourceWatcherService.notifyNow();
  try {
    scriptService.compile(new Script("test_script",ScriptType.FILE,"test",null),ScriptContext.Standard.SEARCH,Collections.emptyMap(),emptyClusterState());
    fail("the script test_script should no longer exist");
  }
 catch (  IllegalArgumentException ex) {
    assertThat(ex.getMessage(),containsString("Unable to find on disk file script [test_script] using lang [test]"));
  }
}
