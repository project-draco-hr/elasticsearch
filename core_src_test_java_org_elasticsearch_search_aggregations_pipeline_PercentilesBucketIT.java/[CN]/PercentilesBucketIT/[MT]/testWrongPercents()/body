{
  SearchResponse response=client().prepareSearch("idx").addAggregation(terms("terms").field("tag").exclude("tag.*").subAggregation(sum("sum").field(SINGLE_VALUED_FIELD_NAME))).addAggregation(percentilesBucket("percentiles_bucket").setBucketsPaths("terms>sum").percents(PERCENTS)).execute().actionGet();
  assertSearchResponse(response);
  Terms terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  List<Terms.Bucket> buckets=terms.getBuckets();
  assertThat(buckets.size(),equalTo(0));
  PercentilesBucket percentilesBucketValue=response.getAggregations().get("percentiles_bucket");
  assertThat(percentilesBucketValue,notNullValue());
  assertThat(percentilesBucketValue.getName(),equalTo("percentiles_bucket"));
  try {
    percentilesBucketValue.percentile(2.0);
    fail("2.0 was not a valid percent, should have thrown exception");
  }
 catch (  IllegalArgumentException exception) {
  }
}
