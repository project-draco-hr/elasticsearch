{
  ShardCounter counter=new ShardCounter();
  RoutingTable.Builder routingTable=RoutingTable.builder();
  MetaData.Builder metaData=MetaData.builder();
  for (int i=randomInt(4); i >= 0; i--) {
    int numberOfShards=randomInt(3) + 1;
    int numberOfReplicas=randomInt(4);
    IndexMetaData indexMetaData=IndexMetaData.builder("test_" + Integer.toString(i)).numberOfShards(numberOfShards).numberOfReplicas(numberOfReplicas).build();
    IndexRoutingTable indexRoutingTable=genIndexRoutingTable(indexMetaData,counter);
    metaData.put(indexMetaData,true);
    routingTable.add(indexRoutingTable);
  }
  ClusterState clusterState=ClusterState.builder(ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).build();
  ClusterHealthResponse clusterHealth=new ClusterHealthResponse("bla",clusterState.metaData().concreteIndices(null,IndicesOptions.strictExpand()),clusterState);
  logger.info("cluster status: {}, expected {}",clusterHealth.getStatus(),counter.status());
  assertClusterHealth(clusterHealth,counter);
}
