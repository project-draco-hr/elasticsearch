{
  if (includeExclude != null) {
    return MAP.create(name,factories,valuesSource,estimatedBucketCount,requiredSize,shardSize,minDocCount,shardMinDocCount,includeExclude,aggregationContext,parent,termsAggregatorFactory);
  }
  return new SignificantStringTermsAggregator.WithOrdinals(name,factories,(ValuesSource.Bytes.WithOrdinals)valuesSource,estimatedBucketCount,requiredSize,shardSize,minDocCount,shardMinDocCount,aggregationContext,parent,termsAggregatorFactory);
}
