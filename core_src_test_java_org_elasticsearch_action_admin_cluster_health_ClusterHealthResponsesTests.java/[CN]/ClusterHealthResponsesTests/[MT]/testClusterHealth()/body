{
  ClusterState clusterState=ClusterState.builder(ClusterName.DEFAULT).build();
  int pendingTasks=randomIntBetween(0,200);
  int inFlight=randomIntBetween(0,200);
  int delayedUnassigned=randomIntBetween(0,200);
  TimeValue pendingTaskInQueueTime=TimeValue.timeValueMillis(randomIntBetween(1000,100000));
  ClusterHealthResponse clusterHealth=new ClusterHealthResponse("bla",new String[]{MetaData.ALL},clusterState,pendingTasks,inFlight,delayedUnassigned,pendingTaskInQueueTime);
  clusterHealth=maybeSerialize(clusterHealth);
  assertClusterHealth(clusterHealth);
  assertThat(clusterHealth.getNumberOfPendingTasks(),Matchers.equalTo(pendingTasks));
  assertThat(clusterHealth.getNumberOfInFlightFetch(),Matchers.equalTo(inFlight));
  assertThat(clusterHealth.getDelayedUnassignedShards(),Matchers.equalTo(delayedUnassigned));
  assertThat(clusterHealth.getTaskMaxWaitingTime().millis(),is(pendingTaskInQueueTime.millis()));
  assertThat(clusterHealth.getActiveShardsPercent(),is(allOf(greaterThanOrEqualTo(0.0),lessThanOrEqualTo(100.0))));
}
