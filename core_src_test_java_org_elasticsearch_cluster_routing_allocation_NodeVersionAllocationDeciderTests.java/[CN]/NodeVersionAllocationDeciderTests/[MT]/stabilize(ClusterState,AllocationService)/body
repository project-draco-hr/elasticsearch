{
  logger.trace("RoutingNodes: {}",clusterState.getRoutingNodes().prettyPrint());
  RoutingAllocation.Result routingResult=service.deassociateDeadNodes(clusterState,true,"reroute");
  clusterState=ClusterState.builder(clusterState).routingResult(routingResult).build();
  RoutingNodes routingNodes=clusterState.getRoutingNodes();
  assertRecoveryNodeVersions(routingNodes);
  logger.info("complete rebalancing");
  for (int i=0; i < 1000; i++) {
    logger.trace("RoutingNodes: {}",clusterState.getRoutingNodes().prettyPrint());
    routingResult=service.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING));
    clusterState=ClusterState.builder(clusterState).routingResult(routingResult).build();
    routingNodes=clusterState.getRoutingNodes();
    if (routingResult.changed() == false) {
      break;
    }
    assertRecoveryNodeVersions(routingNodes);
  }
  logger.info("stabilized success [{}]",routingResult.changed() == false);
  assertFalse(routingResult.changed());
  return clusterState;
}
