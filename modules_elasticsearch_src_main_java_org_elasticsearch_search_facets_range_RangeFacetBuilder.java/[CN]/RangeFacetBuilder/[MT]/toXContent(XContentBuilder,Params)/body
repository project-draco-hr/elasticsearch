{
  if (keyFieldName == null) {
    throw new SearchSourceBuilderException("field must be set on range facet for facet [" + name + "]");
  }
  if (entries.isEmpty()) {
    throw new SearchSourceBuilderException("at least one range must be defined for range facet [" + name + "]");
  }
  builder.startObject(name);
  builder.startObject(RangeFacetCollectorParser.NAME);
  if (valueFieldName != null && !keyFieldName.equals(valueFieldName)) {
    builder.field("key_field",keyFieldName);
    builder.field("value_field",valueFieldName);
  }
 else {
    builder.field("field",keyFieldName);
  }
  builder.startArray("ranges");
  for (  Entry entry : entries) {
    builder.startObject();
    if (entry.fromAsString != null) {
      builder.field("from",entry.fromAsString);
    }
 else     if (!Double.isInfinite(entry.from)) {
      builder.field("from",entry.from);
    }
    if (entry.toAsString != null) {
      builder.field("to",entry.toAsString);
    }
 else     if (!Double.isInfinite(entry.to)) {
      builder.field("to",entry.to);
    }
    builder.endObject();
  }
  builder.endArray();
  builder.endObject();
  addFilterFacetAndGlobal(builder,params);
  builder.endObject();
}
