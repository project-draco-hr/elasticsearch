{
  CommonTermsQuery commonTermsQuery=new CommonTermsQuery(BooleanClause.Occur.SHOULD,BooleanClause.Occur.SHOULD,128);
  commonTermsQuery.add(new Term("field","quick"));
  commonTermsQuery.add(new Term("field","brown"));
  commonTermsQuery.add(new Term("field","fox"));
  addPercolatorQuery("_id1",commonTermsQuery);
  BlendedTermQuery blendedTermQuery=BlendedTermQuery.booleanBlendedQuery(new Term[]{new Term("field","quick"),new Term("field","brown"),new Term("field","fox")},false);
  addPercolatorQuery("_id2",blendedTermQuery);
  SpanNearQuery spanNearQuery=new SpanNearQuery.Builder("field",true).addClause(new SpanTermQuery(new Term("field","quick"))).addClause(new SpanTermQuery(new Term("field","brown"))).addClause(new SpanTermQuery(new Term("field","fox"))).build();
  addPercolatorQuery("_id3",spanNearQuery);
  SpanNearQuery spanNearQuery2=new SpanNearQuery.Builder("field",true).addClause(new SpanTermQuery(new Term("field","the"))).addClause(new SpanTermQuery(new Term("field","lazy"))).addClause(new SpanTermQuery(new Term("field","doc"))).build();
  SpanOrQuery spanOrQuery=new SpanOrQuery(spanNearQuery,spanNearQuery2);
  addPercolatorQuery("_id4",spanOrQuery);
  SpanNotQuery spanNotQuery=new SpanNotQuery(spanNearQuery,spanNearQuery);
  addPercolatorQuery("_id5",spanNotQuery);
  indexWriter.close();
  directoryReader=DirectoryReader.open(directory);
  IndexSearcher shardSearcher=newSearcher(directoryReader);
  MemoryIndex memoryIndex=new MemoryIndex();
  memoryIndex.addField("field","the quick brown fox jumps over the lazy dog",new WhitespaceAnalyzer());
  duelRun(memoryIndex,shardSearcher);
}
