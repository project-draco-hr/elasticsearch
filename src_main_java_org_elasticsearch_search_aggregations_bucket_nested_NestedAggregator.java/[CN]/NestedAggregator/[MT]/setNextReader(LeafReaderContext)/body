{
  if (parentFilter == null) {
    Filter parentFilterNotCached=findClosestNestedPath(parentAggregator);
    if (parentFilterNotCached == null) {
      parentFilterNotCached=NonNestedDocsFilter.INSTANCE;
    }
    parentFilter=SearchContext.current().bitsetFilterCache().getBitDocIdSetFilter(parentFilterNotCached);
  }
  try {
    BitDocIdSet parentSet=parentFilter.getDocIdSet(reader);
    if (DocIdSets.isEmpty(parentSet)) {
      parentDocs=null;
    }
 else {
      parentDocs=parentSet.bits();
    }
    DocIdSet childDocIdSet=childFilter.getDocIdSet(reader,null);
    if (DocIdSets.isEmpty(childDocIdSet)) {
      childDocs=null;
    }
 else {
      childDocs=childDocIdSet.iterator();
    }
  }
 catch (  IOException ioe) {
    throw new AggregationExecutionException("Failed to aggregate [" + name + "]",ioe);
  }
}
