{
  int rootDocId=rootDocs.nextSetBit(parentDocId);
  if (currentRootDoc == rootDocId) {
    final IntArrayList childDocIdBuffer=childDocIdBuffers.get(parentDocId);
    if (childDocIdBuffer != null) {
      return childDocIdBuffer;
    }
 else {
      final IntArrayList newChildDocIdBuffer=new IntArrayList();
      childDocIdBuffers.put(parentDocId,newChildDocIdBuffer);
      int prevParentDoc=parentDocs.prevSetBit(parentDocId - 1);
      int childDocId;
      if (childDocs.docID() > prevParentDoc) {
        childDocId=childDocs.docID();
      }
 else {
        childDocId=childDocs.advance(prevParentDoc + 1);
      }
      for (; childDocId < parentDocId; childDocId=childDocs.nextDoc()) {
        newChildDocIdBuffer.add(childDocId);
      }
      return newChildDocIdBuffer;
    }
  }
 else {
    this.currentRootDoc=rootDocId;
    childDocIdBuffers.clear();
    return getChildren(parentDocId);
  }
}
