{
  boolean sameComparator=false;
  if (map instanceof SortedMap) {
    SortedMap<?,?> sortedMap=(SortedMap<?,?>)map;
    Comparator<?> comparator2=sortedMap.comparator();
    sameComparator=(comparator2 == null) ? comparator == NATURAL_ORDER : comparator.equals(comparator2);
  }
  if (sameComparator && (map instanceof ImmutableSortedMap)) {
    @SuppressWarnings("unchecked") ImmutableSortedMap<K,V> kvMap=(ImmutableSortedMap<K,V>)map;
    return kvMap;
  }
  List<Entry<?,?>> list=Lists.newArrayListWithCapacity(map.size());
  for (  Entry<? extends K,? extends V> entry : map.entrySet()) {
    list.add(entryOf(entry.getKey(),entry.getValue()));
  }
  Entry<?,?>[] entryArray=list.toArray(new Entry<?,?>[list.size()]);
  if (!sameComparator) {
    sortEntries(entryArray,comparator);
    validateEntries(entryArray,comparator);
  }
  return new ImmutableSortedMap<K,V>(entryArray,comparator);
}
