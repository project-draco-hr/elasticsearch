{
  CountDownLatch latch=new CountDownLatch(1);
  clusterService.submitStateUpdateTask("test setting state",new ClusterStateUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState) throws Exception {
      return ClusterState.builder(clusterState).version(currentState.version() + 1).build();
    }
    @Override public boolean runOnlyOnMaster(){
      return false;
    }
    @Override public void clusterStateProcessed(    String source,    ClusterState oldState,    ClusterState newState){
      latch.countDown();
    }
    @Override public void onFailure(    String source,    Throwable t){
      fail("unexpected exception" + t);
    }
  }
);
  try {
    latch.await();
  }
 catch (  InterruptedException e) {
    throw new ElasticsearchException("unexpected interruption",e);
  }
}
