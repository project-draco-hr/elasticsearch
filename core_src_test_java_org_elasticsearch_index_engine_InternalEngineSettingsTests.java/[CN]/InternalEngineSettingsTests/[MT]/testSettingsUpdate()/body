{
  final IndexService service=createIndex("foo");
  InternalEngine engine=((InternalEngine)EngineAccess.engine(service.getShardOrNull(0)));
  assertThat(engine.getCurrentIndexWriterConfig().getUseCompoundFile(),is(true));
  final int iters=between(1,20);
  for (int i=0; i < iters; i++) {
    long gcDeletes=random().nextLong() & (Long.MAX_VALUE >> 11);
    Settings build=Settings.builder().put(IndexSettings.INDEX_GC_DELETES_SETTING,gcDeletes,TimeUnit.MILLISECONDS).build();
    assertEquals(gcDeletes,build.getAsTime(IndexSettings.INDEX_GC_DELETES_SETTING,null).millis());
    client().admin().indices().prepareUpdateSettings("foo").setSettings(build).get();
    LiveIndexWriterConfig currentIndexWriterConfig=engine.getCurrentIndexWriterConfig();
    assertEquals(currentIndexWriterConfig.getUseCompoundFile(),true);
    assertEquals(engine.config().getIndexSettings().getGcDeletesInMillis(),gcDeletes);
    assertEquals(engine.getGcDeletesInMillis(),gcDeletes);
  }
  Settings settings=Settings.builder().put(IndexSettings.INDEX_GC_DELETES_SETTING,1000,TimeUnit.MILLISECONDS).build();
  client().admin().indices().prepareUpdateSettings("foo").setSettings(settings).get();
  assertEquals(engine.getGcDeletesInMillis(),1000);
  assertTrue(engine.config().isEnableGcDeletes());
  settings=Settings.builder().put(IndexSettings.INDEX_GC_DELETES_SETTING,"0ms").build();
  client().admin().indices().prepareUpdateSettings("foo").setSettings(settings).get();
  assertEquals(engine.getGcDeletesInMillis(),0);
  assertTrue(engine.config().isEnableGcDeletes());
  settings=Settings.builder().put(IndexSettings.INDEX_GC_DELETES_SETTING,1000,TimeUnit.MILLISECONDS).build();
  client().admin().indices().prepareUpdateSettings("foo").setSettings(settings).get();
  assertEquals(engine.getGcDeletesInMillis(),1000);
  assertTrue(engine.config().isEnableGcDeletes());
}
