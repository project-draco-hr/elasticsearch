{
  StringBuilder result=new StringBuilder(256);
  sortFields();
  int sumChars=0;
  int sumPositions=0;
  int sumTerms=0;
  for (int i=0; i < sortedFields.length; i++) {
    Map.Entry<String,Info> entry=sortedFields[i];
    String fieldName=entry.getKey();
    Info info=entry.getValue();
    info.sortTerms();
    result.append(fieldName + ":\n");
    int numChars=0;
    int numPositions=0;
    for (int j=0; j < info.sortedTerms.length; j++) {
      Map.Entry<String,ArrayIntList> e=info.sortedTerms[j];
      String term=e.getKey();
      ArrayIntList positions=e.getValue();
      result.append("\t'" + term + "':"+ numPositions(positions)+ ":");
      result.append(positions.toString(stride));
      result.append("\n");
      numPositions+=numPositions(positions);
      numChars+=term.length();
    }
    result.append("\tterms=" + info.sortedTerms.length);
    result.append(", positions=" + numPositions);
    result.append(", Kchars=" + (numChars / 1000.0f));
    result.append("\n");
    sumPositions+=numPositions;
    sumChars+=numChars;
    sumTerms+=info.sortedTerms.length;
  }
  result.append("\nfields=" + sortedFields.length);
  result.append(", terms=" + sumTerms);
  result.append(", positions=" + sumPositions);
  result.append(", Kchars=" + (sumChars / 1000.0f));
  return result.toString();
}
