{
  if (query == null)   throw new IllegalArgumentException("query must not be null");
  IndexSearcher searcher=createSearcher();
  try {
    final float[] scores=new float[1];
    searcher.search(query,new Collector(){
      private Scorer scorer;
      @Override public void collect(      int doc) throws IOException {
        scores[0]=scorer.score();
      }
      @Override public void setScorer(      Scorer scorer){
        this.scorer=scorer;
      }
      @Override public boolean acceptsDocsOutOfOrder(){
        return true;
      }
      @Override public void setNextReader(      AtomicReaderContext context){
      }
    }
);
    float score=scores[0];
    return score;
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
  }
}
