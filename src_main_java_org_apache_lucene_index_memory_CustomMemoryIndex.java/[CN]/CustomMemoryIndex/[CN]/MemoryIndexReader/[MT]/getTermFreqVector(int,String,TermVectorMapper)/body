{
  if (DEBUG)   System.err.println("MemoryIndexReader.getTermFreqVector");
  final Info info=getInfo(field);
  if (info == null) {
    return;
  }
  info.sortTerms();
  mapper.setExpectations(field,info.sortedTerms.length,stride != 1,true);
  for (int i=info.sortedTerms.length; --i >= 0; ) {
    ArrayIntList positions=info.sortedTerms[i].getValue();
    int size=positions.size();
    org.apache.lucene.index.TermVectorOffsetInfo[] offsets=new org.apache.lucene.index.TermVectorOffsetInfo[size / stride];
    for (int k=0, j=1; j < size; k++, j+=stride) {
      int start=positions.get(j);
      int end=positions.get(j + 1);
      offsets[k]=new org.apache.lucene.index.TermVectorOffsetInfo(start,end);
    }
    mapper.map(info.sortedTerms[i].getKey(),numPositions(info.sortedTerms[i].getValue()),offsets,(info.sortedTerms[i].getValue()).toArray(stride));
  }
}
