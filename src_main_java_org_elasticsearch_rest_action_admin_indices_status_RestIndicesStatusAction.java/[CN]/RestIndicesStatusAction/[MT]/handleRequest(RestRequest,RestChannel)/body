{
  IndicesStatusRequest indicesStatusRequest=new IndicesStatusRequest(splitIndices(request.param("index")));
  indicesStatusRequest.setListenerThreaded(false);
  if (request.hasParam("ignore_indices")) {
    indicesStatusRequest.setIgnoreIndices(IgnoreIndices.fromString(request.param("ignore_indices")));
  }
  indicesStatusRequest.setRecovery(request.paramAsBoolean("recovery",indicesStatusRequest.isRecovery()));
  indicesStatusRequest.setSnapshot(request.paramAsBoolean("snapshot",indicesStatusRequest.isSnapshot()));
  BroadcastOperationThreading operationThreading=BroadcastOperationThreading.fromString(request.param("operation_threading"),BroadcastOperationThreading.SINGLE_THREAD);
  if (operationThreading == BroadcastOperationThreading.NO_THREADS) {
    operationThreading=BroadcastOperationThreading.SINGLE_THREAD;
  }
  indicesStatusRequest.setOperationThreading(operationThreading);
  client.admin().indices().status(indicesStatusRequest,new ActionListener<IndicesStatusResponse>(){
    @Override public void onResponse(    IndicesStatusResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        builder.field("ok",true);
        buildBroadcastShardsHeader(builder,response);
        response.toXContent(builder,request,settingsFilter);
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
