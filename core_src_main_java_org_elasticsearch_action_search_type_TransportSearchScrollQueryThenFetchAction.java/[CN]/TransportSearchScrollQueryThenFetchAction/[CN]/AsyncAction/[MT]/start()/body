{
  if (scrollId.getContext().length == 0) {
    listener.onFailure(new SearchPhaseExecutionException("query","no nodes to search on",null));
    return;
  }
  final AtomicInteger counter=new AtomicInteger(scrollId.getContext().length);
  ScrollIdForNode[] context=scrollId.getContext();
  for (int i=0; i < context.length; i++) {
    ScrollIdForNode target=context[i];
    DiscoveryNode node=nodes.get(target.getNode());
    if (node != null) {
      executeQueryPhase(i,counter,node,target.getScrollId());
    }
 else {
      if (logger.isDebugEnabled()) {
        logger.debug("Node [" + target.getNode() + "] not available for scroll request ["+ scrollId.getSource()+ "]");
      }
      successfulOps.decrementAndGet();
      if (counter.decrementAndGet() == 0) {
        try {
          executeFetchPhase();
        }
 catch (        Throwable e) {
          listener.onFailure(new SearchPhaseExecutionException("query","Fetch failed",e,null));
          return;
        }
      }
    }
  }
}
