{
  super(settings);
  settingsFilter.addFilter(new AzureSettingsFilter());
  subscriptionId=componentSettings.get(Fields.SUBSCRIPTION_ID,settings.get("cloud.azure." + Fields.SUBSCRIPTION_ID_DEPRECATED));
  serviceName=componentSettings.get(Fields.SERVICE_NAME,settings.get("cloud.azure." + Fields.SERVICE_NAME_DEPRECATED));
  keystorePath=componentSettings.get(Fields.KEYSTORE_PATH,settings.get("cloud.azure." + Fields.KEYSTORE_DEPRECATED));
  keystorePassword=componentSettings.get(Fields.KEYSTORE_PASSWORD,settings.get("cloud.azure." + Fields.PASSWORD_DEPRECATED));
  String portName=settings.get("cloud.azure." + Fields.PORT_NAME_DEPRECATED);
  if (portName != null) {
    logger.warn("setting [cloud.azure.{}] has been deprecated. please replace with [discovery.azure.{}].",Fields.PORT_NAME_DEPRECATED,Fields.ENDPOINT_NAME);
    this.publicEndpointName=portName;
  }
 else {
    this.publicEndpointName=componentSettings.get(Fields.ENDPOINT_NAME,"elasticsearch");
  }
  try {
    socketFactory=getSocketFactory(keystorePath,keystorePassword);
    logger.trace("creating new Azure client for [{}], [{}], [{}]",subscriptionId,serviceName,portName);
  }
 catch (  Exception e) {
    logger.error("can not start azure client: {}",e.getMessage());
    socketFactory=null;
  }
}
