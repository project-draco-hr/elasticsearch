{
  super(settings);
  settingsFilter.addFilter(new AzureSettingsFilter());
  String subscriptionId=componentSettings.get(Fields.SUBSCRIPTION_ID,settings.get("cloud.azure." + Fields.SUBSCRIPTION_ID_DEPRECATED));
  serviceName=componentSettings.get(Fields.SERVICE_NAME,settings.get("cloud.azure." + Fields.SERVICE_NAME_DEPRECATED));
  String keystorePath=componentSettings.get(Fields.KEYSTORE_PATH,settings.get("cloud.azure." + Fields.KEYSTORE_DEPRECATED));
  String keystorePassword=componentSettings.get(Fields.KEYSTORE_PASSWORD,settings.get("cloud.azure." + Fields.PASSWORD_DEPRECATED));
  String strKeyStoreType=componentSettings.get(Fields.KEYSTORE_TYPE,KeyStoreType.pkcs12.name());
  KeyStoreType tmpKeyStoreType=KeyStoreType.pkcs12;
  try {
    tmpKeyStoreType=KeyStoreType.fromString(strKeyStoreType);
  }
 catch (  Exception e) {
    logger.warn("wrong value for [{}]: [{}]. falling back to [{}]...",Fields.KEYSTORE_TYPE,strKeyStoreType,KeyStoreType.pkcs12.name());
  }
  KeyStoreType keystoreType=tmpKeyStoreType;
  Configuration configuration;
  try {
    configuration=ManagementConfiguration.configure(new URI(Azure.ENDPOINT),subscriptionId,keystorePath,keystorePassword,keystoreType);
  }
 catch (  IOException|URISyntaxException e) {
    logger.error("can not start azure client: {}",e.getMessage());
    computeManagementClient=null;
    return;
  }
  logger.trace("creating new Azure client for [{}], [{}]",subscriptionId,serviceName);
  computeManagementClient=ComputeManagementService.create(configuration);
}
