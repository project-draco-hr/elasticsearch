{
  expected.setText(one);
  actual.setText(two);
  assertEquals(expected.current(),actual.current());
  int v=expected.current();
  while (v != BreakIterator.DONE) {
    assertEquals(v=expected.next(),actual.next());
    assertEquals(expected.current(),actual.current());
  }
  assertEquals(expected.first(),actual.first());
  assertEquals(expected.current(),actual.current());
  assertEquals(expected.last(),actual.last());
  assertEquals(expected.current(),actual.current());
  v=expected.current();
  while (v != BreakIterator.DONE) {
    assertEquals(v=expected.previous(),actual.previous());
    assertEquals(expected.current(),actual.current());
  }
  for (int i=one.getBeginIndex(); i <= one.getEndIndex(); i++) {
    expected.first();
    actual.first();
    assertEquals(expected.following(i),actual.following(i));
    assertEquals(expected.current(),actual.current());
  }
  for (int i=one.getBeginIndex(); i <= one.getEndIndex(); i++) {
    expected.last();
    actual.last();
    assertEquals(expected.preceding(i),actual.preceding(i));
    assertEquals(expected.current(),actual.current());
  }
}
