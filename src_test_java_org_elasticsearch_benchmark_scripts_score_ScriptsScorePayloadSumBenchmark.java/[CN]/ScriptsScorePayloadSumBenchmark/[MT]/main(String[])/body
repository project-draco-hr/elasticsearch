{
  int minTerms=1;
  int maxTerms=50;
  int maxIter=100;
  int warmerIter=10;
  init(maxTerms);
  List<Results> allResults=new ArrayList<BasicScriptBenchmark.Results>();
  Settings settings=settingsBuilder().put("plugin.types",NativeScriptExamplesPlugin.class.getName()).build();
  String clusterName=ScriptsScoreBenchmark.class.getSimpleName();
  Node node1=nodeBuilder().clusterName(clusterName).settings(settingsBuilder().put(settings).put("name","node1")).node();
  Client client=node1.client();
  client.admin().cluster().prepareHealth("test").setWaitForGreenStatus().setTimeout("10s").execute().actionGet();
  indexData(10000,client,false);
  client.admin().cluster().prepareHealth("test").setWaitForGreenStatus().setTimeout("10s").execute().actionGet();
  Results results=new Results();
  results.init(maxTerms - minTerms,"native payload sum script score","Results for native script score:","green",":");
  List<Entry<String,RequestInfo>> searchRequests=initNativeSearchRequests(minTerms,maxTerms,NativePayloadSumScoreScript.NATIVE_PAYLOAD_SUM_SCRIPT_SCORE,true);
  runBenchmark(client,maxIter,results,searchRequests,minTerms,warmerIter);
  allResults.add(results);
  results=new Results();
  results.init(maxTerms - minTerms,"native payload sum script score no record","Results for native script score:","black",":");
  searchRequests=initNativeSearchRequests(minTerms,maxTerms,NativePayloadSumNoRecordScoreScript.NATIVE_PAYLOAD_SUM_NO_RECORD_SCRIPT_SCORE,true);
  runBenchmark(client,maxIter,results,searchRequests,minTerms,warmerIter);
  allResults.add(results);
  printOctaveScript(allResults,args);
  client.close();
  node1.close();
}
