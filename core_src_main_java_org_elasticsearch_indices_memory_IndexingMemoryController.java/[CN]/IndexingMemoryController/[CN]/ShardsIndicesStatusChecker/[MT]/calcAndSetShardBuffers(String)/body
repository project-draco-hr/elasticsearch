{
  int activeShardCount=0;
  for (  Map.Entry<ShardId,Boolean> ent : shardWasActive.entrySet()) {
    if (ent.getValue()) {
      activeShardCount++;
    }
  }
  if (activeShardCount == 0) {
    logger.debug("no active shards (reason={})",reason);
    return;
  }
  ByteSizeValue shardIndexingBufferSize=new ByteSizeValue(indexingBuffer.bytes() / activeShardCount);
  if (shardIndexingBufferSize.bytes() < minShardIndexBufferSize.bytes()) {
    shardIndexingBufferSize=minShardIndexBufferSize;
  }
  if (shardIndexingBufferSize.bytes() > maxShardIndexBufferSize.bytes()) {
    shardIndexingBufferSize=maxShardIndexBufferSize;
  }
  ByteSizeValue shardTranslogBufferSize=new ByteSizeValue(translogBuffer.bytes() / activeShardCount);
  if (shardTranslogBufferSize.bytes() < minShardTranslogBufferSize.bytes()) {
    shardTranslogBufferSize=minShardTranslogBufferSize;
  }
  if (shardTranslogBufferSize.bytes() > maxShardTranslogBufferSize.bytes()) {
    shardTranslogBufferSize=maxShardTranslogBufferSize;
  }
  logger.debug("recalculating shard indexing buffer (reason={}), total is [{}] with [{}] active shards, each shard set to indexing=[{}], translog=[{}]",reason,indexingBuffer,activeShardCount,shardIndexingBufferSize,shardTranslogBufferSize);
  for (  Map.Entry<ShardId,Boolean> ent : shardWasActive.entrySet()) {
    if (ent.getValue()) {
      updateShardBuffers(ent.getKey(),shardIndexingBufferSize,shardTranslogBufferSize);
    }
  }
}
