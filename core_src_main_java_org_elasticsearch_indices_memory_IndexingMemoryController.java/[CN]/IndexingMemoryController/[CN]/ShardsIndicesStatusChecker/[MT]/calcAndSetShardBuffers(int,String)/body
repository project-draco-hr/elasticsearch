{
  if (activeShards == 0) {
    logger.debug("no active shards (reason={})",reason);
    return;
  }
  ByteSizeValue shardIndexingBufferSize=new ByteSizeValue(indexingBuffer.bytes() / activeShards);
  if (shardIndexingBufferSize.bytes() < minShardIndexBufferSize.bytes()) {
    shardIndexingBufferSize=minShardIndexBufferSize;
  }
  if (shardIndexingBufferSize.bytes() > maxShardIndexBufferSize.bytes()) {
    shardIndexingBufferSize=maxShardIndexBufferSize;
  }
  ByteSizeValue shardTranslogBufferSize=new ByteSizeValue(translogBuffer.bytes() / activeShards);
  if (shardTranslogBufferSize.bytes() < minShardTranslogBufferSize.bytes()) {
    shardTranslogBufferSize=minShardTranslogBufferSize;
  }
  if (shardTranslogBufferSize.bytes() > maxShardTranslogBufferSize.bytes()) {
    shardTranslogBufferSize=maxShardTranslogBufferSize;
  }
  logger.debug("recalculating shard indexing buffer (reason={}), total is [{}] with [{}] active shards, each shard set to indexing=[{}], translog=[{}]",reason,indexingBuffer,activeShards,shardIndexingBufferSize,shardTranslogBufferSize);
  for (  ShardId shardId : availableShards()) {
    ShardIndexingStatus status=shardsIndicesStatus.get(shardId);
    if (status == null || status.activeIndexing) {
      updateShardBuffers(shardId,shardIndexingBufferSize,shardTranslogBufferSize);
    }
  }
}
