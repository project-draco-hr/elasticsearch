{
  if (lifecycle.stoppedOrClosed()) {
    return;
  }
  final ClusterState state=event.state();
  if (state.nodes().isLocalNodeElectedMaster() == false) {
    return;
  }
  if (state.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK) == false) {
    return;
  }
  DiscoveryNodes nodes=state.nodes();
  if (state.nodes().getMasterNodeId() == null) {
    logger.debug("not recovering from gateway, no master elected yet");
  }
 else   if (recoverAfterNodes != -1 && (nodes.getMasterAndDataNodes().size()) < recoverAfterNodes) {
    logger.debug("not recovering from gateway, nodes_size (data+master) [{}] < recover_after_nodes [{}]",nodes.getMasterAndDataNodes().size(),recoverAfterNodes);
  }
 else   if (recoverAfterDataNodes != -1 && nodes.getDataNodes().size() < recoverAfterDataNodes) {
    logger.debug("not recovering from gateway, nodes_size (data) [{}] < recover_after_data_nodes [{}]",nodes.getDataNodes().size(),recoverAfterDataNodes);
  }
 else   if (recoverAfterMasterNodes != -1 && nodes.getMasterNodes().size() < recoverAfterMasterNodes) {
    logger.debug("not recovering from gateway, nodes_size (master) [{}] < recover_after_master_nodes [{}]",nodes.getMasterNodes().size(),recoverAfterMasterNodes);
  }
 else {
    boolean enforceRecoverAfterTime;
    String reason;
    if (expectedNodes == -1 && expectedMasterNodes == -1 && expectedDataNodes == -1) {
      enforceRecoverAfterTime=true;
      reason="recover_after_time was set to [" + recoverAfterTime + "]";
    }
 else {
      enforceRecoverAfterTime=false;
      reason="";
      if (expectedNodes != -1 && (nodes.getMasterAndDataNodes().size() < expectedNodes)) {
        enforceRecoverAfterTime=true;
        reason="expecting [" + expectedNodes + "] nodes, but only have ["+ nodes.getMasterAndDataNodes().size()+ "]";
      }
 else       if (expectedDataNodes != -1 && (nodes.getDataNodes().size() < expectedDataNodes)) {
        enforceRecoverAfterTime=true;
        reason="expecting [" + expectedDataNodes + "] data nodes, but only have ["+ nodes.getDataNodes().size()+ "]";
      }
 else       if (expectedMasterNodes != -1 && (nodes.getMasterNodes().size() < expectedMasterNodes)) {
        enforceRecoverAfterTime=true;
        reason="expecting [" + expectedMasterNodes + "] master nodes, but only have ["+ nodes.getMasterNodes().size()+ "]";
      }
    }
    performStateRecovery(enforceRecoverAfterTime,reason);
  }
}
