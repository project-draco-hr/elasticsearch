{
  lock();
  try {
    int c=count;
    if (c++ > threshold) {
      int reduced=rehash();
      if (reduced > 0) {
        count=(c-=reduced) - 1;
      }
    }
    HashEntry<K,V>[] tab=table;
    int index=hash & tab.length - 1;
    HashEntry<K,V> first=tab[index];
    HashEntry<K,V> e=first;
    while (e != null && (e.hash != hash || !keyEq(key,e.key()))) {
      e=e.next;
    }
    V oldValue;
    if (e != null) {
      oldValue=e.value();
      if (!onlyIfAbsent) {
        e.setValue(value);
      }
    }
 else {
      oldValue=null;
      ++modCount;
      tab[index]=newHashEntry(key,hash,first,value);
      count=c;
    }
    return oldValue;
  }
  finally {
    unlock();
  }
}
