{
  Settings settings=Settings.builder().put(NetworkModule.HTTP_TYPE_SETTING.getKey(),"custom").put(NetworkModule.TRANSPORT_TYPE_KEY,"local").build();
  NetworkModule module=new NetworkModule(new NetworkService(settings,Collections.emptyList()),settings,false,new NamedWriteableRegistry());
  module.registerHttpTransport("custom",FakeHttpTransport.class);
  assertBinding(module,HttpServerTransport.class,FakeHttpTransport.class);
  assertFalse(module.isTransportClient());
  module=new NetworkModule(new NetworkService(settings,Collections.emptyList()),settings,true,new NamedWriteableRegistry());
  assertTrue(module.isTransportClient());
  try {
    module.registerHttpTransport("custom",FakeHttpTransport.class);
    fail();
  }
 catch (  IllegalArgumentException e) {
    assertTrue(e.getMessage().contains("Cannot register http transport"));
    assertTrue(e.getMessage().contains("for transport client"));
  }
  settings=Settings.builder().put(NetworkModule.HTTP_ENABLED.getKey(),false).put(NetworkModule.TRANSPORT_TYPE_KEY,"local").build();
  module=new NetworkModule(new NetworkService(settings,Collections.emptyList()),settings,false,new NamedWriteableRegistry());
  assertNotBound(module,HttpServerTransport.class);
  assertFalse(module.isTransportClient());
}
