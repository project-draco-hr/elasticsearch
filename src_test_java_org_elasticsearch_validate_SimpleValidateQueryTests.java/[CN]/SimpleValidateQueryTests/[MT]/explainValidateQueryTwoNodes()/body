{
  createIndex("test");
  ensureGreen();
  client().admin().indices().preparePutMapping("test").setType("type1").setSource(XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("foo").field("type","string").endObject().startObject("bar").field("type","integer").endObject().startObject("baz").field("type","string").field("analyzer","snowball").endObject().startObject("pin").startObject("properties").startObject("location").field("type","geo_point").endObject().endObject().endObject().endObject().endObject().endObject()).execute().actionGet();
  refresh();
  for (  Client client : cluster()) {
    ValidateQueryResponse response=client.admin().indices().prepareValidateQuery("test").setSource("foo".getBytes(Charsets.UTF_8)).setExplain(true).execute().actionGet();
    assertThat(response.isValid(),equalTo(false));
    assertThat(response.getQueryExplanation().size(),equalTo(1));
    assertThat(response.getQueryExplanation().get(0).getError(),containsString("Failed to parse"));
    assertThat(response.getQueryExplanation().get(0).getExplanation(),nullValue());
  }
  for (  Client client : cluster()) {
    ValidateQueryResponse response=client.admin().indices().prepareValidateQuery("test").setQuery(QueryBuilders.queryString("foo")).setExplain(true).execute().actionGet();
    assertThat(response.isValid(),equalTo(true));
    assertThat(response.getQueryExplanation().size(),equalTo(1));
    assertThat(response.getQueryExplanation().get(0).getExplanation(),equalTo("_all:foo"));
    assertThat(response.getQueryExplanation().get(0).getError(),nullValue());
  }
}
