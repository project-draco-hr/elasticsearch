{
  if (left != null && right != null) {
    if (left instanceof Double) {
      if (right instanceof Number) {
        return (double)left == ((Number)right).doubleValue();
      }
 else       if (right instanceof Character) {
        return (double)left == (char)right;
      }
    }
 else     if (right instanceof Double) {
      if (left instanceof Number) {
        return ((Number)left).doubleValue() == (double)right;
      }
 else       if (left instanceof Character) {
        return (char)left == ((Number)right).doubleValue();
      }
    }
 else     if (left instanceof Float) {
      if (right instanceof Number) {
        return (float)left == ((Number)right).floatValue();
      }
 else       if (right instanceof Character) {
        return (float)left == (char)right;
      }
    }
 else     if (right instanceof Float) {
      if (left instanceof Number) {
        return ((Number)left).floatValue() == (float)right;
      }
 else       if (left instanceof Character) {
        return (char)left == ((Number)right).floatValue();
      }
    }
 else     if (left instanceof Long) {
      if (right instanceof Number) {
        return (long)left == ((Number)right).longValue();
      }
 else       if (right instanceof Character) {
        return (long)left == (char)right;
      }
    }
 else     if (right instanceof Long) {
      if (left instanceof Number) {
        return ((Number)left).longValue() == (long)right;
      }
 else       if (left instanceof Character) {
        return (char)left == ((Number)right).longValue();
      }
    }
 else     if (left instanceof Number) {
      if (right instanceof Number) {
        return ((Number)left).intValue() == ((Number)right).intValue();
      }
 else       if (right instanceof Character) {
        return ((Number)left).intValue() == (char)right;
      }
    }
 else     if (right instanceof Number && left instanceof Character) {
      return (char)left == ((Number)right).intValue();
    }
 else     if (left instanceof Character && right instanceof Character) {
      return (char)left == (char)right;
    }
    return left.equals(right);
  }
  return left == null && right == null;
}
