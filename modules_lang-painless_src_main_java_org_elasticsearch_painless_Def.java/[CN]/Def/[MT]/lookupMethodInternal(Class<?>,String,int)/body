{
  Definition.MethodKey key=new Definition.MethodKey(name,arity);
  for (Class<?> clazz=receiverClass; clazz != null; clazz=clazz.getSuperclass()) {
    RuntimeClass struct=Definition.getRuntimeClass(clazz);
    if (struct != null) {
      Method method=struct.methods.get(key);
      if (method != null) {
        return method;
      }
    }
    for (    Class<?> iface : clazz.getInterfaces()) {
      struct=Definition.getRuntimeClass(iface);
      if (struct != null) {
        Method method=struct.methods.get(key);
        if (method != null) {
          return method;
        }
      }
    }
  }
  throw new IllegalArgumentException("Unable to find dynamic method [" + name + "] with ["+ arity+ "] arguments "+ "for class ["+ receiverClass.getCanonicalName()+ "].");
}
