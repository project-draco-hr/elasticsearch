{
  parser=YamlXContent.yamlXContent.createParser("---\n" + "\"Missing document (partial doc)\":\n" + "\n"+ "  - do:\n"+ "      catch:      missing\n"+ "      update:\n"+ "          index:  test_1\n"+ "          type:   test\n"+ "          id:     1\n"+ "          body:   { doc: { foo: bar } }\n"+ "\n"+ "  - do:\n"+ "      update:\n"+ "          index: test_1\n"+ "          type:  test\n"+ "          id:    1\n"+ "          body:  { doc: { foo: bar } }\n"+ "          ignore: 404\n"+ "\n"+ "---\n"+ "\"Missing document (script)\":\n"+ "\n"+ "\n"+ "  - do:\n"+ "      catch:      missing\n"+ "      update:\n"+ "          index:  test_1\n"+ "          type:   test\n"+ "          id:     1\n"+ "          body:\n"+ "            script: \"ctx._source.foo = bar\"\n"+ "            params: { bar: 'xxx' }\n"+ "\n"+ "  - do:\n"+ "      update:\n"+ "          index:  test_1\n"+ "          type:   test\n"+ "          id:     1\n"+ "          ignore: 404\n"+ "          body:\n"+ "            script:       \"ctx._source.foo = bar\"\n"+ "            params:       { bar: 'xxx' }\n");
  ClientYamlTestSuiteParser testParser=new ClientYamlTestSuiteParser();
  ClientYamlTestSuite restTestSuite=testParser.parse(new ClientYamlTestSuiteParseContext("api","suite",parser));
  assertThat(restTestSuite,notNullValue());
  assertThat(restTestSuite.getName(),equalTo("suite"));
  assertThat(restTestSuite.getSetupSection().isEmpty(),equalTo(true));
  assertThat(restTestSuite.getTestSections().size(),equalTo(2));
  assertThat(restTestSuite.getTestSections().get(0).getName(),equalTo("Missing document (partial doc)"));
  assertThat(restTestSuite.getTestSections().get(0).getSkipSection().isEmpty(),equalTo(true));
  assertThat(restTestSuite.getTestSections().get(0).getExecutableSections().size(),equalTo(2));
  assertThat(restTestSuite.getTestSections().get(0).getExecutableSections().get(0),instanceOf(DoSection.class));
  DoSection doSection=(DoSection)restTestSuite.getTestSections().get(0).getExecutableSections().get(0);
  assertThat(doSection.getCatch(),equalTo("missing"));
  assertThat(doSection.getApiCallSection().getApi(),equalTo("update"));
  assertThat(doSection.getApiCallSection().getParams().size(),equalTo(3));
  assertThat(doSection.getApiCallSection().hasBody(),equalTo(true));
  assertThat(restTestSuite.getTestSections().get(0).getExecutableSections().get(1),instanceOf(DoSection.class));
  doSection=(DoSection)restTestSuite.getTestSections().get(0).getExecutableSections().get(1);
  assertThat(doSection.getCatch(),nullValue());
  assertThat(doSection.getApiCallSection().getApi(),equalTo("update"));
  assertThat(doSection.getApiCallSection().getParams().size(),equalTo(4));
  assertThat(doSection.getApiCallSection().hasBody(),equalTo(true));
  assertThat(restTestSuite.getTestSections().get(1).getName(),equalTo("Missing document (script)"));
  assertThat(restTestSuite.getTestSections().get(1).getSkipSection().isEmpty(),equalTo(true));
  assertThat(restTestSuite.getTestSections().get(1).getExecutableSections().size(),equalTo(2));
  assertThat(restTestSuite.getTestSections().get(1).getExecutableSections().get(0),instanceOf(DoSection.class));
  assertThat(restTestSuite.getTestSections().get(1).getExecutableSections().get(1),instanceOf(DoSection.class));
  doSection=(DoSection)restTestSuite.getTestSections().get(1).getExecutableSections().get(0);
  assertThat(doSection.getCatch(),equalTo("missing"));
  assertThat(doSection.getApiCallSection().getApi(),equalTo("update"));
  assertThat(doSection.getApiCallSection().getParams().size(),equalTo(3));
  assertThat(doSection.getApiCallSection().hasBody(),equalTo(true));
  assertThat(restTestSuite.getTestSections().get(0).getExecutableSections().get(1),instanceOf(DoSection.class));
  doSection=(DoSection)restTestSuite.getTestSections().get(1).getExecutableSections().get(1);
  assertThat(doSection.getCatch(),nullValue());
  assertThat(doSection.getApiCallSection().getApi(),equalTo("update"));
  assertThat(doSection.getApiCallSection().getParams().size(),equalTo(4));
  assertThat(doSection.getApiCallSection().hasBody(),equalTo(true));
}
