{
  final boolean includeSetup=randomBoolean();
  final boolean includeTeardown=randomBoolean();
  StringBuilder testSpecBuilder=new StringBuilder();
  if (includeSetup) {
    testSpecBuilder.append("---\n" + "setup:\n" + "  - do:\n"+ "        indices.create:\n"+ "          index: test_index\n"+ "\n");
  }
  if (includeTeardown) {
    testSpecBuilder.append("---\n" + "teardown:\n" + "  - do:\n"+ "      indices.delete:\n"+ "        index: test_index\n"+ "\n");
  }
  parser=YamlXContent.yamlXContent.createParser(testSpecBuilder.toString() + "---\n" + "\"Get index mapping\":\n"+ "  - do:\n"+ "      indices.get_mapping:\n"+ "        index: test_index\n"+ "\n"+ "  - match: {test_index.test_type.properties.text.type:     string}\n"+ "  - match: {test_index.test_type.properties.text.analyzer: whitespace}\n"+ "\n"+ "---\n"+ "\"Get type mapping - pre 1.0\":\n"+ "\n"+ "  - skip:\n"+ "      version:     \"2.0.0 - \"\n"+ "      reason:      \"for newer versions the index name is always returned\"\n"+ "\n"+ "  - do:\n"+ "      indices.get_mapping:\n"+ "        index: test_index\n"+ "        type: test_type\n"+ "\n"+ "  - match: {test_type.properties.text.type:     string}\n"+ "  - match: {test_type.properties.text.analyzer: whitespace}\n");
  ClientYamlTestSuiteParser testParser=new ClientYamlTestSuiteParser();
  ClientYamlTestSuite restTestSuite=testParser.parse(new ClientYamlTestSuiteParseContext("api","suite",parser));
  assertThat(restTestSuite,notNullValue());
  assertThat(restTestSuite.getName(),equalTo("suite"));
  assertThat(restTestSuite.getSetupSection(),notNullValue());
  if (includeSetup) {
    assertThat(restTestSuite.getSetupSection().isEmpty(),equalTo(false));
    assertThat(restTestSuite.getSetupSection().getSkipSection().isEmpty(),equalTo(true));
    assertThat(restTestSuite.getSetupSection().getDoSections().size(),equalTo(1));
    assertThat(restTestSuite.getSetupSection().getDoSections().get(0).getApiCallSection().getApi(),equalTo("indices.create"));
    assertThat(restTestSuite.getSetupSection().getDoSections().get(0).getApiCallSection().getParams().size(),equalTo(1));
    assertThat(restTestSuite.getSetupSection().getDoSections().get(0).getApiCallSection().getParams().get("index"),equalTo("test_index"));
  }
 else {
    assertThat(restTestSuite.getSetupSection().isEmpty(),equalTo(true));
  }
  assertThat(restTestSuite.getTeardownSection(),notNullValue());
  if (includeTeardown) {
    assertThat(restTestSuite.getTeardownSection().isEmpty(),equalTo(false));
    assertThat(restTestSuite.getTeardownSection().getSkipSection().isEmpty(),equalTo(true));
    assertThat(restTestSuite.getTeardownSection().getDoSections().size(),equalTo(1));
    assertThat(restTestSuite.getTeardownSection().getDoSections().get(0).getApiCallSection().getApi(),equalTo("indices.delete"));
    assertThat(restTestSuite.getTeardownSection().getDoSections().get(0).getApiCallSection().getParams().size(),equalTo(1));
    assertThat(restTestSuite.getTeardownSection().getDoSections().get(0).getApiCallSection().getParams().get("index"),equalTo("test_index"));
  }
 else {
    assertThat(restTestSuite.getTeardownSection().isEmpty(),equalTo(true));
  }
  assertThat(restTestSuite.getTestSections().size(),equalTo(2));
  assertThat(restTestSuite.getTestSections().get(0).getName(),equalTo("Get index mapping"));
  assertThat(restTestSuite.getTestSections().get(0).getSkipSection().isEmpty(),equalTo(true));
  assertThat(restTestSuite.getTestSections().get(0).getExecutableSections().size(),equalTo(3));
  assertThat(restTestSuite.getTestSections().get(0).getExecutableSections().get(0),instanceOf(DoSection.class));
  DoSection doSection=(DoSection)restTestSuite.getTestSections().get(0).getExecutableSections().get(0);
  assertThat(doSection.getApiCallSection().getApi(),equalTo("indices.get_mapping"));
  assertThat(doSection.getApiCallSection().getParams().size(),equalTo(1));
  assertThat(doSection.getApiCallSection().getParams().get("index"),equalTo("test_index"));
  assertThat(restTestSuite.getTestSections().get(0).getExecutableSections().get(1),instanceOf(MatchAssertion.class));
  MatchAssertion matchAssertion=(MatchAssertion)restTestSuite.getTestSections().get(0).getExecutableSections().get(1);
  assertThat(matchAssertion.getField(),equalTo("test_index.test_type.properties.text.type"));
  assertThat(matchAssertion.getExpectedValue().toString(),equalTo("string"));
  assertThat(restTestSuite.getTestSections().get(0).getExecutableSections().get(2),instanceOf(MatchAssertion.class));
  matchAssertion=(MatchAssertion)restTestSuite.getTestSections().get(0).getExecutableSections().get(2);
  assertThat(matchAssertion.getField(),equalTo("test_index.test_type.properties.text.analyzer"));
  assertThat(matchAssertion.getExpectedValue().toString(),equalTo("whitespace"));
  assertThat(restTestSuite.getTestSections().get(1).getName(),equalTo("Get type mapping - pre 1.0"));
  assertThat(restTestSuite.getTestSections().get(1).getSkipSection().isEmpty(),equalTo(false));
  assertThat(restTestSuite.getTestSections().get(1).getSkipSection().getReason(),equalTo("for newer versions the index name is always returned"));
  assertThat(restTestSuite.getTestSections().get(1).getSkipSection().getLowerVersion(),equalTo(Version.V_2_0_0));
  assertThat(restTestSuite.getTestSections().get(1).getSkipSection().getUpperVersion(),equalTo(Version.CURRENT));
  assertThat(restTestSuite.getTestSections().get(1).getExecutableSections().size(),equalTo(3));
  assertThat(restTestSuite.getTestSections().get(1).getExecutableSections().get(0),instanceOf(DoSection.class));
  doSection=(DoSection)restTestSuite.getTestSections().get(1).getExecutableSections().get(0);
  assertThat(doSection.getApiCallSection().getApi(),equalTo("indices.get_mapping"));
  assertThat(doSection.getApiCallSection().getParams().size(),equalTo(2));
  assertThat(doSection.getApiCallSection().getParams().get("index"),equalTo("test_index"));
  assertThat(doSection.getApiCallSection().getParams().get("type"),equalTo("test_type"));
  assertThat(restTestSuite.getTestSections().get(0).getExecutableSections().get(1),instanceOf(MatchAssertion.class));
  matchAssertion=(MatchAssertion)restTestSuite.getTestSections().get(1).getExecutableSections().get(1);
  assertThat(matchAssertion.getField(),equalTo("test_type.properties.text.type"));
  assertThat(matchAssertion.getExpectedValue().toString(),equalTo("string"));
  assertThat(restTestSuite.getTestSections().get(1).getExecutableSections().get(2),instanceOf(MatchAssertion.class));
  matchAssertion=(MatchAssertion)restTestSuite.getTestSections().get(1).getExecutableSections().get(2);
  assertThat(matchAssertion.getField(),equalTo("test_type.properties.text.analyzer"));
  assertThat(matchAssertion.getExpectedValue().toString(),equalTo("whitespace"));
}
