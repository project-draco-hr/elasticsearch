{
  String pluginName="fake-plugin";
  Path pluginDir=createTempDir().resolve(pluginName);
  Files.createDirectories(pluginDir);
  Path pluginJar=pluginDir.resolve("fake-plugin.jar");
  try (ZipOutputStream out=new JarOutputStream(Files.newOutputStream(pluginJar,StandardOpenOption.CREATE))){
    out.putNextEntry(new ZipEntry("foo.class"));
    out.closeEntry();
  }
   String pluginUrl=createPlugin(pluginDir,"description","fake desc","name",pluginName,"version","1.0","elasticsearch.version",Version.CURRENT.toString(),"java.version",System.getProperty("java.specification.version"),"isolated","false","jvm","true","classname","FakePlugin");
  ExitStatus status=new PluginManagerCliParser(terminal).execute(args("install " + pluginUrl));
  assertEquals("unexpected exit status: output: " + terminal.getTerminalOutput(),ExitStatus.OK,status);
  status=new PluginManagerCliParser(terminal).execute(args("install " + pluginUrl));
  List<String> output=terminal.getTerminalOutput();
  assertEquals("unexpected exit status: output: " + output,ExitStatus.IO_ERROR,status);
  boolean foundExpectedMessage=false;
  for (  String line : output) {
    foundExpectedMessage|=line.contains("already exists");
  }
  assertTrue(foundExpectedMessage);
}
