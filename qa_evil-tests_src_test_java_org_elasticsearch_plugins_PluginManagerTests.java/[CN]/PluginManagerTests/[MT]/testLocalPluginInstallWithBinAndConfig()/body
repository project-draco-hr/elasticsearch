{
  String pluginName="fake-plugin";
  Path pluginDir=createTempDir().resolve(pluginName);
  Files.createDirectories(pluginDir.resolve("bin"));
  Files.createFile(pluginDir.resolve("bin").resolve("tool"));
  Files.createDirectories(pluginDir.resolve("config"));
  Files.createFile(pluginDir.resolve("config").resolve("file"));
  String pluginUrl=createPlugin(pluginDir,"description","fake desc","name",pluginName,"version","1.0","elasticsearch.version",Version.CURRENT.toString(),"java.version",System.getProperty("java.specification.version"),"classname","FakePlugin");
  Path binDir=environment.binFile();
  Path pluginBinDir=binDir.resolve(pluginName);
  Path pluginConfigDir=environment.configFile().resolve(pluginName);
  assertStatusOk("install " + pluginUrl + " --verbose");
  terminal.getTerminalOutput().clear();
  assertStatusOk("list");
  assertThat(terminal.getTerminalOutput(),hasItem(containsString(pluginName)));
  assertDirectoryExists(pluginBinDir);
  assertDirectoryExists(pluginConfigDir);
  Path toolFile=pluginBinDir.resolve("tool");
  assertFileExists(toolFile);
  PosixFileAttributeView view=Files.getFileAttributeView(toolFile,PosixFileAttributeView.class);
  if (view != null) {
    PosixFileAttributes attributes=view.readAttributes();
    assertThat(attributes.permissions(),hasItem(PosixFilePermission.OWNER_EXECUTE));
    assertThat(attributes.permissions(),hasItem(PosixFilePermission.OWNER_READ));
  }
}
