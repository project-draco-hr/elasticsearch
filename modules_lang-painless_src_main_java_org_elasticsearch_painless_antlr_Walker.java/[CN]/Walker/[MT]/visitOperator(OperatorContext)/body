{
  if (ctx.SUB() != null && ctx.unary() instanceof NumericContext) {
    return visit(ctx.unary());
  }
 else {
    AExpression expression=(AExpression)visitUnary(ctx.unary());
    final Operation operation;
    if (ctx.BOOLNOT() != null) {
      operation=Operation.NOT;
    }
 else     if (ctx.BWNOT() != null) {
      operation=Operation.BWNOT;
    }
 else     if (ctx.ADD() != null) {
      operation=Operation.ADD;
    }
 else     if (ctx.SUB() != null) {
      operation=Operation.SUB;
    }
 else {
      throw location(ctx).createError(new IllegalStateException("Illegal tree structure."));
    }
    return new EUnary(location(ctx),operation,expression);
  }
}
