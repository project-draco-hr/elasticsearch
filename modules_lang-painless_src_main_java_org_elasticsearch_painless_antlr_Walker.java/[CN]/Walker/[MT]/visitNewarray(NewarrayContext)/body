{
  String type=ctx.TYPE().getText();
  List<AExpression> expressions=new ArrayList<>();
  for (  ExpressionContext expression : ctx.expression()) {
    expressions.add((AExpression)visitExpression(expression));
  }
  List<ALink> links=new ArrayList<>();
  links.add(new LNewArray(line(ctx),offset(ctx),location(ctx),type,expressions));
  if (ctx.dot() != null) {
    links.add((ALink)visit(ctx.dot()));
    for (    SecondaryContext secondary : ctx.secondary()) {
      links.add((ALink)visit(secondary));
    }
  }
 else   if (!ctx.secondary().isEmpty()) {
    throw new IllegalStateException("Error " + location(ctx) + " Illegal tree structure.");
  }
  return links;
}
