{
  @SuppressWarnings("unchecked") List<ALink> links=(List<ALink>)visit(ctx.chain());
  final Operation operation;
  if (ctx.ASSIGN() != null) {
    operation=null;
  }
 else   if (ctx.AMUL() != null) {
    operation=Operation.MUL;
  }
 else   if (ctx.ADIV() != null) {
    operation=Operation.DIV;
  }
 else   if (ctx.AREM() != null) {
    operation=Operation.REM;
  }
 else   if (ctx.AADD() != null) {
    operation=Operation.ADD;
  }
 else   if (ctx.ASUB() != null) {
    operation=Operation.SUB;
  }
 else   if (ctx.ALSH() != null) {
    operation=Operation.LSH;
  }
 else   if (ctx.ARSH() != null) {
    operation=Operation.RSH;
  }
 else   if (ctx.AUSH() != null) {
    operation=Operation.USH;
  }
 else   if (ctx.AAND() != null) {
    operation=Operation.BWAND;
  }
 else   if (ctx.AXOR() != null) {
    operation=Operation.XOR;
  }
 else   if (ctx.AOR() != null) {
    operation=Operation.BWOR;
  }
 else {
    throw new IllegalStateException("Error " + location(ctx) + ": Illegal tree structure.");
  }
  AExpression expression=(AExpression)visitExpression(ctx.expression());
  return new EChain(line(ctx),offset(ctx),location(ctx),links,false,false,operation,expression);
}
