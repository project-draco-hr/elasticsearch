{
  final List<ALink> links=new ArrayList<>();
  final Operation operation;
  visitChain(ctx.chain(),links);
  if (ctx.AMUL() != null) {
    operation=Operation.MUL;
  }
 else   if (ctx.ADIV() != null) {
    operation=Operation.DIV;
  }
 else   if (ctx.AREM() != null) {
    operation=Operation.REM;
  }
 else   if (ctx.AADD() != null) {
    operation=Operation.ADD;
  }
 else   if (ctx.ASUB() != null) {
    operation=Operation.SUB;
  }
 else   if (ctx.ALSH() != null) {
    operation=Operation.LSH;
  }
 else   if (ctx.ARSH() != null) {
    operation=Operation.RSH;
  }
 else   if (ctx.AUSH() != null) {
    operation=Operation.USH;
  }
 else   if (ctx.AAND() != null) {
    operation=Operation.BWAND;
  }
 else   if (ctx.AXOR() != null) {
    operation=Operation.XOR;
  }
 else   if (ctx.AOR() != null) {
    operation=Operation.BWOR;
  }
 else {
    operation=null;
  }
  return new EChain(location(ctx),links,false,false,operation,(AExpression)visit(ctx.expression()));
}
