{
  final AExpression left=(AExpression)visit(ctx.expression(0));
  final AExpression right=(AExpression)visit(ctx.expression(1));
  final Operation operation;
  if (ctx.MUL() != null) {
    operation=Operation.MUL;
  }
 else   if (ctx.DIV() != null) {
    operation=Operation.DIV;
  }
 else   if (ctx.REM() != null) {
    operation=Operation.REM;
  }
 else   if (ctx.ADD() != null) {
    operation=Operation.ADD;
  }
 else   if (ctx.SUB() != null) {
    operation=Operation.SUB;
  }
 else   if (ctx.LSH() != null) {
    operation=Operation.LSH;
  }
 else   if (ctx.RSH() != null) {
    operation=Operation.RSH;
  }
 else   if (ctx.USH() != null) {
    operation=Operation.USH;
  }
 else   if (ctx.BWAND() != null) {
    operation=Operation.BWAND;
  }
 else   if (ctx.XOR() != null) {
    operation=Operation.XOR;
  }
 else   if (ctx.BWOR() != null) {
    operation=Operation.BWOR;
  }
 else {
    throw new IllegalStateException("Error " + location(ctx) + ": Unexpected state.");
  }
  return new EBinary(location(ctx),operation,left,right);
}
