{
  reserved.push(new FunctionReserved());
  List<String> paramTypes=new ArrayList<>();
  List<String> paramNames=new ArrayList<>();
  List<AStatement> statements=new ArrayList<>();
  for (  LamtypeContext lamtype : ctx.lamtype()) {
    if (lamtype.decltype() == null) {
      paramTypes.add("def");
    }
 else {
      paramTypes.add(lamtype.decltype().getText());
    }
    paramNames.add(lamtype.ID().getText());
  }
  if (ctx.expression() != null) {
    AExpression expression=(AExpression)visitExpression(ctx.expression());
    statements.add(new SReturn(location(ctx),expression));
  }
 else {
    for (    StatementContext statement : ctx.block().statement()) {
      statements.add((AStatement)visit(statement));
    }
  }
  String name=nextLambda();
  return new ELambda(name,(FunctionReserved)reserved.pop(),location(ctx),paramTypes,paramNames,statements);
}
