{
  Map<SnapshotId,Map<ShardId,SnapshotIndexShardStatus>> snapshotMapBuilder=new HashMap<>();
  try {
    String nodeId=clusterService.localNode().id();
    for (    SnapshotId snapshotId : request.snapshotIds) {
      Map<ShardId,IndexShardSnapshotStatus> shardsStatus=snapshotShardsService.currentSnapshotShards(snapshotId);
      if (shardsStatus == null) {
        continue;
      }
      Map<ShardId,SnapshotIndexShardStatus> shardMapBuilder=new HashMap<>();
      for (      Map.Entry<ShardId,IndexShardSnapshotStatus> shardEntry : shardsStatus.entrySet()) {
        SnapshotIndexShardStatus shardStatus;
        IndexShardSnapshotStatus.Stage stage=shardEntry.getValue().stage();
        if (stage != IndexShardSnapshotStatus.Stage.DONE && stage != IndexShardSnapshotStatus.Stage.FAILURE) {
          shardStatus=new SnapshotIndexShardStatus(shardEntry.getKey(),shardEntry.getValue(),nodeId);
        }
 else {
          shardStatus=new SnapshotIndexShardStatus(shardEntry.getKey(),shardEntry.getValue());
        }
        shardMapBuilder.put(shardEntry.getKey(),shardStatus);
      }
      snapshotMapBuilder.put(snapshotId,unmodifiableMap(shardMapBuilder));
    }
    return new NodeSnapshotStatus(clusterService.localNode(),unmodifiableMap(snapshotMapBuilder));
  }
 catch (  Exception e) {
    throw new ElasticsearchException("failed to load metadata",e);
  }
}
