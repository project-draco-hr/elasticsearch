{
  Translog.Snapshot snapshot=translog.snapshot();
  MatcherAssert.assertThat(snapshot,TranslogSizeMatcher.translogSize(0));
  snapshot.release();
  translog.add(new Translog.Create("test","1",new byte[]{1}));
  snapshot=translog.snapshot();
  MatcherAssert.assertThat(snapshot,TranslogSizeMatcher.translogSize(1));
  assertThat(snapshot.estimatedTotalOperations(),equalTo(1));
  snapshot.release();
  snapshot=translog.snapshot();
  assertThat(snapshot.hasNext(),equalTo(true));
  Translog.Create create=(Translog.Create)snapshot.next();
  assertThat(create.source(),equalTo(new byte[]{1}));
  snapshot.release();
  Translog.Snapshot snapshot1=translog.snapshot();
  MatcherAssert.assertThat(snapshot1,TranslogSizeMatcher.translogSize(1));
  assertThat(snapshot1.estimatedTotalOperations(),equalTo(1));
  translog.add(new Translog.Index("test","2",new byte[]{2}));
  snapshot=translog.snapshot(snapshot1);
  MatcherAssert.assertThat(snapshot,TranslogSizeMatcher.translogSize(1));
  assertThat(snapshot.estimatedTotalOperations(),equalTo(2));
  snapshot.release();
  snapshot=translog.snapshot(snapshot1);
  assertThat(snapshot.hasNext(),equalTo(true));
  Translog.Index index=(Translog.Index)snapshot.next();
  assertThat(index.source(),equalTo(new byte[]{2}));
  assertThat(snapshot.hasNext(),equalTo(false));
  assertThat(snapshot.estimatedTotalOperations(),equalTo(2));
  snapshot.release();
  snapshot1.release();
}
