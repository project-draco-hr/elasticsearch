{
  int iters=scaledRandomIntBetween(20,100);
  for (int i=0; i < iters; i++) {
    final Index index=new Index("test","_na_");
    final String name="ngr";
    Version v=randomVersion(random());
    Builder builder=newAnalysisSettingsBuilder().put("min_gram",2).put("max_gram",3);
    boolean reverse=random().nextBoolean();
    if (reverse) {
      builder.put("side","back");
    }
    Settings settings=builder.build();
    Settings indexSettings=newAnalysisSettingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED,v.id).build();
    Tokenizer tokenizer=new MockTokenizer();
    tokenizer.setReader(new StringReader("foo bar"));
    TokenStream edgeNGramTokenFilter=new EdgeNGramTokenFilterFactory(IndexSettingsModule.newIndexSettings(index,indexSettings),null,name,settings).create(tokenizer);
    if (reverse) {
      assertThat(edgeNGramTokenFilter,instanceOf(ReverseStringFilter.class));
    }
 else {
      assertThat(edgeNGramTokenFilter,instanceOf(EdgeNGramTokenFilter.class));
    }
  }
}
