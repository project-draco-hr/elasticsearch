{
  FieldPath fieldPath=new FieldPath(path);
  Object context=fieldPath.initialContext;
  for (int i=0; i < fieldPath.pathElements.length - 1; i++) {
    String pathElement=fieldPath.pathElements[i];
    if (context == null) {
      return false;
    }
    if (context instanceof Map) {
      @SuppressWarnings("unchecked") Map<String,Object> map=(Map<String,Object>)context;
      context=map.get(pathElement);
    }
 else     if (context instanceof List) {
      @SuppressWarnings("unchecked") List<Object> list=(List<Object>)context;
      try {
        int index=Integer.parseInt(pathElement);
        if (index < 0 || index >= list.size()) {
          if (failOutOfRange) {
            throw new IllegalArgumentException("[" + index + "] is out of bounds for array with length ["+ list.size()+ "] as part of path ["+ path+ "]");
          }
 else {
            return false;
          }
        }
        context=list.get(index);
      }
 catch (      NumberFormatException e) {
        return false;
      }
    }
 else {
      return false;
    }
  }
  String leafKey=fieldPath.pathElements[fieldPath.pathElements.length - 1];
  if (context instanceof Map) {
    @SuppressWarnings("unchecked") Map<String,Object> map=(Map<String,Object>)context;
    return map.containsKey(leafKey);
  }
  if (context instanceof List) {
    @SuppressWarnings("unchecked") List<Object> list=(List<Object>)context;
    try {
      int index=Integer.parseInt(leafKey);
      if (index >= 0 && index < list.size()) {
        return true;
      }
 else {
        if (failOutOfRange) {
          throw new IllegalArgumentException("[" + index + "] is out of bounds for array with length ["+ list.size()+ "] as part of path ["+ path+ "]");
        }
 else {
          return false;
        }
      }
    }
 catch (    NumberFormatException e) {
      return false;
    }
  }
  return false;
}
