{
  IndexService indexService=indicesService.indexServiceSafe(request.getIndex());
  Engine.IndexingOperation[] ops=(Engine.IndexingOperation[])response.payload();
  if (ops == null) {
    return;
  }
  for (int i=0; i < ops.length; i++) {
    BulkItemRequest itemRequest=request.getItems()[i];
    BulkItemResponse itemResponse=response.response().getResponses()[i];
    if (itemResponse.isFailed()) {
      continue;
    }
    Engine.IndexingOperation op=ops[i];
    if (op == null) {
      continue;
    }
    if (itemRequest.getRequest() instanceof IndexRequest) {
      IndexRequest indexRequest=(IndexRequest)itemRequest.getRequest();
      if (!Strings.hasLength(indexRequest.getPercolate())) {
        continue;
      }
      try {
        PercolatorExecutor.Response percolate=indexService.percolateService().percolate(new PercolatorExecutor.DocAndSourceQueryRequest(op.parsedDoc(),indexRequest.getPercolate()));
        ((IndexResponse)itemResponse.getResponse()).setMatches(percolate.matches());
      }
 catch (      Exception e) {
        logger.warn("failed to percolate [{}]",e,itemRequest.getRequest());
      }
    }
  }
}
