{
  IndexService indexService=indicesService.indexServiceSafe(shardId.getIndex());
  IndexShard indexShard=indexService.shardSafe(shardId.id());
  for (int i=0; i < request.items().length; i++) {
    BulkItemRequest item=request.items()[i];
    if (item == null || item.isIgnoreOnReplica()) {
      continue;
    }
    if (item.request() instanceof IndexRequest) {
      IndexRequest indexRequest=(IndexRequest)item.request();
      try {
        SourceToParse sourceToParse=SourceToParse.source(SourceToParse.Origin.REPLICA,indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()).routing(indexRequest.routing()).parent(indexRequest.parent()).timestamp(indexRequest.timestamp()).ttl(indexRequest.ttl());
        if (indexRequest.opType() == IndexRequest.OpType.INDEX) {
          Engine.Index index=indexShard.prepareIndex(sourceToParse,indexRequest.version(),indexRequest.versionType(),Engine.Operation.Origin.REPLICA,request.canHaveDuplicates() || indexRequest.canHaveDuplicates());
          Mapping update=index.parsedDoc().dynamicMappingsUpdate();
          if (update != null) {
            throw new RetryOnReplicaException(shardId,"Mappings are not available on the replica yet, triggered update: " + update);
          }
          indexShard.index(index);
        }
 else {
          Engine.Create create=indexShard.prepareCreate(sourceToParse,indexRequest.version(),indexRequest.versionType(),Engine.Operation.Origin.REPLICA,request.canHaveDuplicates() || indexRequest.canHaveDuplicates(),indexRequest.autoGeneratedId());
          Mapping update=create.parsedDoc().dynamicMappingsUpdate();
          if (update != null) {
            throw new RetryOnReplicaException(shardId,"Mappings are not available on the replica yet, triggered update: " + update);
          }
          indexShard.create(create);
        }
      }
 catch (      Throwable e) {
        if (!ignoreReplicaException(e)) {
          throw e;
        }
      }
    }
 else     if (item.request() instanceof DeleteRequest) {
      DeleteRequest deleteRequest=(DeleteRequest)item.request();
      try {
        Engine.Delete delete=indexShard.prepareDelete(deleteRequest.type(),deleteRequest.id(),deleteRequest.version(),deleteRequest.versionType(),Engine.Operation.Origin.REPLICA);
        indexShard.delete(delete);
      }
 catch (      Throwable e) {
        if (!ignoreReplicaException(e)) {
          throw e;
        }
      }
    }
 else {
      throw new ElasticsearchIllegalStateException("Unexpected index operation: " + item.request());
    }
  }
  if (request.refresh()) {
    try {
      indexShard.refresh("refresh_flag_bulk");
    }
 catch (    Throwable e) {
    }
  }
}
