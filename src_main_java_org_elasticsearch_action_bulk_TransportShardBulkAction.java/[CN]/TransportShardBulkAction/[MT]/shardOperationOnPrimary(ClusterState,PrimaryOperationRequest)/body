{
  final BulkShardRequest request=shardRequest.request;
  IndexShard indexShard=indicesService.indexServiceSafe(shardRequest.request.index()).shardSafe(shardRequest.shardId);
  Engine.IndexingOperation[] ops=null;
  Set<Tuple<String,String>> mappingsToUpdate=null;
  BulkItemResponse[] responses=new BulkItemResponse[request.items().length];
  for (int i=0; i < request.items().length; i++) {
    BulkItemRequest item=request.items()[i];
    if (item.request() instanceof IndexRequest) {
      IndexRequest indexRequest=(IndexRequest)item.request();
      try {
        MappingMetaData mappingMd=clusterState.metaData().index(request.index()).mappingOrDefault(indexRequest.type());
        if (mappingMd != null && mappingMd.routing().required()) {
          if (indexRequest.routing() == null) {
            throw new RoutingMissingException(indexRequest.index(),indexRequest.type(),indexRequest.id());
          }
        }
        SourceToParse sourceToParse=SourceToParse.source(indexRequest.source()).type(indexRequest.type()).id(indexRequest.id()).routing(indexRequest.routing()).parent(indexRequest.parent()).timestamp(indexRequest.timestamp()).ttl(indexRequest.ttl());
        long version;
        Engine.IndexingOperation op;
        if (indexRequest.opType() == IndexRequest.OpType.INDEX) {
          Engine.Index index=indexShard.prepareIndex(sourceToParse).version(indexRequest.version()).versionType(indexRequest.versionType()).origin(Engine.Operation.Origin.PRIMARY);
          indexShard.index(index);
          version=index.version();
          op=index;
        }
 else {
          Engine.Create create=indexShard.prepareCreate(sourceToParse).version(indexRequest.version()).versionType(indexRequest.versionType()).origin(Engine.Operation.Origin.PRIMARY);
          indexShard.create(create);
          version=create.version();
          op=create;
        }
        indexRequest.version(version);
        if (op.parsedDoc().mappingsModified()) {
          if (mappingsToUpdate == null) {
            mappingsToUpdate=Sets.newHashSet();
          }
          mappingsToUpdate.add(Tuple.tuple(indexRequest.index(),indexRequest.type()));
        }
        if (Strings.hasLength(indexRequest.percolate())) {
          if (ops == null) {
            ops=new Engine.IndexingOperation[request.items().length];
          }
          ops[i]=op;
        }
        responses[i]=new BulkItemResponse(item.id(),indexRequest.opType().toString().toLowerCase(Locale.ENGLISH),new IndexResponse(indexRequest.index(),indexRequest.type(),indexRequest.id(),version));
      }
 catch (      Exception e) {
        if (retryPrimaryException(e)) {
          throw (ElasticSearchException)e;
        }
        if (e instanceof ElasticSearchException && ((ElasticSearchException)e).status() == RestStatus.CONFLICT) {
          logger.trace("[{}][{}] failed to execute bulk item (index) {}",e,shardRequest.request.index(),shardRequest.shardId,indexRequest);
        }
 else {
          logger.debug("[{}][{}] failed to execute bulk item (index) {}",e,shardRequest.request.index(),shardRequest.shardId,indexRequest);
        }
        responses[i]=new BulkItemResponse(item.id(),indexRequest.opType().toString().toLowerCase(Locale.ENGLISH),new BulkItemResponse.Failure(indexRequest.index(),indexRequest.type(),indexRequest.id(),ExceptionsHelper.detailedMessage(e)));
        request.items()[i]=null;
      }
    }
 else     if (item.request() instanceof DeleteRequest) {
      DeleteRequest deleteRequest=(DeleteRequest)item.request();
      try {
        Engine.Delete delete=indexShard.prepareDelete(deleteRequest.type(),deleteRequest.id(),deleteRequest.version()).versionType(deleteRequest.versionType()).origin(Engine.Operation.Origin.PRIMARY);
        indexShard.delete(delete);
        deleteRequest.version(delete.version());
        responses[i]=new BulkItemResponse(item.id(),"delete",new DeleteResponse(deleteRequest.index(),deleteRequest.type(),deleteRequest.id(),delete.version(),delete.notFound()));
      }
 catch (      Exception e) {
        if (retryPrimaryException(e)) {
          throw (ElasticSearchException)e;
        }
        if (e instanceof ElasticSearchException && ((ElasticSearchException)e).status() == RestStatus.CONFLICT) {
          logger.trace("[{}][{}] failed to execute bulk item (delete) {}",e,shardRequest.request.index(),shardRequest.shardId,deleteRequest);
        }
 else {
          logger.debug("[{}][{}] failed to execute bulk item (delete) {}",e,shardRequest.request.index(),shardRequest.shardId,deleteRequest);
        }
        responses[i]=new BulkItemResponse(item.id(),"delete",new BulkItemResponse.Failure(deleteRequest.index(),deleteRequest.type(),deleteRequest.id(),ExceptionsHelper.detailedMessage(e)));
        request.items()[i]=null;
      }
    }
  }
  if (mappingsToUpdate != null) {
    for (    Tuple<String,String> mappingToUpdate : mappingsToUpdate) {
      updateMappingOnMaster(mappingToUpdate.v1(),mappingToUpdate.v2());
    }
  }
  if (request.refresh()) {
    try {
      indexShard.refresh(new Engine.Refresh(false));
    }
 catch (    Exception e) {
    }
  }
  BulkShardResponse response=new BulkShardResponse(new ShardId(request.index(),request.shardId()),responses);
  return new PrimaryResponse<BulkShardResponse,BulkShardRequest>(shardRequest.request,response,ops);
}
