{
  SampleRecorder recorder=new SampleRecorder(warmupIterations,iterations);
  System.out.printf("Running %s with %d warmup iterations and %d iterations.%n",task.getClass().getSimpleName(),warmupIterations,iterations);
  try {
    task.setUp(recorder);
    task.run();
    task.tearDown();
  }
 catch (  InterruptedException ex) {
    Thread.currentThread().interrupt();
    return;
  }
  List<Sample> samples=recorder.getSamples();
  final List<Metrics> summaryMetrics=MetricsCalculator.calculate(samples);
  if (summaryMetrics.isEmpty()) {
    System.out.println("No results.");
  }
  for (  Metrics metrics : summaryMetrics) {
    System.out.printf(Locale.ROOT,"Operation: %s%n",metrics.operation);
    String stats=String.format(Locale.ROOT,"Throughput = %f ops/s, p90 = %f ms, p95 = %f ms, p99 = %f ms, p99.9 = %f ms, p99.99 = %f ms",metrics.throughput,metrics.serviceTimeP90,metrics.serviceTimeP95,metrics.serviceTimeP99,metrics.serviceTimeP999,metrics.serviceTimeP9999);
    System.out.println(repeat(stats.length(),'-'));
    System.out.println(stats);
    System.out.printf("success count = %d, error count = %d%n",metrics.successCount,metrics.errorCount);
    System.out.println(repeat(stats.length(),'-'));
  }
}
