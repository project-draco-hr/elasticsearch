{
  PercolateQuery percolateQuery=locatePercolatorQuery(context.query());
  if (percolateQuery == null) {
    throw new IllegalStateException("couldn't locate percolator query");
  }
  List<LeafReaderContext> ctxs=context.searcher().getIndexReader().leaves();
  PercolatorQueryCache queriesRegistry=context.percolatorQueryCache();
  IndexSearcher percolatorIndexSearcher=percolateQuery.getPercolatorIndexSearcher();
  LeafReaderContext percolatorLeafReaderContext=percolatorIndexSearcher.getIndexReader().leaves().get(0);
  FetchSubPhase.HitContext hitContext=new FetchSubPhase.HitContext();
  SubSearchContext subSearchContext=createSubSearchContext(context,percolatorLeafReaderContext,percolateQuery.getDocumentSource());
  for (  InternalSearchHit hit : hits) {
    LeafReaderContext ctx=ctxs.get(ReaderUtil.subIndex(hit.docId(),ctxs));
    int segmentDocId=hit.docId() - ctx.docBase;
    Query query=queriesRegistry.getQueries(ctx).getQuery(segmentDocId);
    if (query != null) {
      subSearchContext.parsedQuery(new ParsedQuery(query));
      hitContext.reset(new InternalSearchHit(0,"unknown",new Text(percolateQuery.getDocumentType()),Collections.emptyMap()),percolatorLeafReaderContext,0,percolatorIndexSearcher);
      hitContext.cache().clear();
      highlightPhase.hitExecute(subSearchContext,hitContext);
      hit.highlightFields().putAll(hitContext.hit().getHighlightFields());
    }
  }
}
