{
  if (context.aggregations() != null) {
    AggregationContext aggregationContext=new AggregationContext(context);
    context.aggregations().aggregationContext(aggregationContext);
    List<Aggregator> collectors=new ArrayList<>();
    Aggregator[] aggregators;
    try {
      AggregatorFactories factories=context.aggregations().factories();
      aggregators=factories.createTopLevelAggregators(aggregationContext);
      for (int i=0; i < aggregators.length; i++) {
        if (aggregators[i] instanceof GlobalAggregator == false) {
          collectors.add(aggregators[i]);
        }
      }
      context.aggregations().aggregators(aggregators);
      if (!collectors.isEmpty()) {
        final BucketCollector collector=BucketCollector.wrap(collectors);
        collector.preCollection();
        context.queryCollectors().put(AggregationPhase.class,collector);
      }
    }
 catch (    IOException e) {
      throw new AggregationInitializationException("Could not initialize aggregators",e);
    }
  }
}
