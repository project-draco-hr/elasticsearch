{
  SearchResponse response=client().prepareSearch("idx").setTypes("type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(TERMS_AGGS_FIELD).subAggregation(topHits("hits").sort(SortBuilders.fieldSort(SORT_FIELD).order(SortOrder.DESC)))).get();
  assertSearchResponse(response);
  Terms terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(5));
  long higestSortValue=0;
  for (int i=0; i < 5; i++) {
    Terms.Bucket bucket=terms.getBucketByKey("val" + i);
    assertThat(bucket,notNullValue());
    assertThat(key(bucket),equalTo("val" + i));
    assertThat(bucket.getDocCount(),equalTo(10l));
    TopHits topHits=bucket.getAggregations().get("hits");
    SearchHits hits=topHits.getHits();
    assertThat(hits.totalHits(),equalTo(10l));
    assertThat(hits.getHits().length,equalTo(3));
    higestSortValue+=10;
    assertThat((Long)hits.getAt(0).sortValues()[0],equalTo(higestSortValue));
    assertThat((Long)hits.getAt(1).sortValues()[0],equalTo(higestSortValue - 1));
    assertThat((Long)hits.getAt(2).sortValues()[0],equalTo(higestSortValue - 2));
    assertThat(hits.getAt(0).sourceAsMap().size(),equalTo(4));
  }
}
