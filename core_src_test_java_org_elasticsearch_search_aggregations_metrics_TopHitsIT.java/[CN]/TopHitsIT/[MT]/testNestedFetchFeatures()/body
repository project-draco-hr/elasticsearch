{
  String hlType=randomFrom("plain","fvh","postings");
  HighlightBuilder.Field hlField=new HighlightBuilder.Field("comments.message").highlightQuery(matchQuery("comments.message","comment")).forceSource(randomBoolean()).highlighterType(hlType);
  SearchResponse searchResponse=client().prepareSearch("articles").setQuery(nestedQuery("comments",matchQuery("comments.message","comment").queryName("test"))).addAggregation(nested("to-comments","comments").subAggregation(topHits("top-comments").size(1).highlighter(new HighlightBuilder().field(hlField)).explain(true).fieldDataField("comments.user").scriptField("script",new Script("5",ScriptService.ScriptType.INLINE,MockScriptEngine.NAME,Collections.emptyMap())).fetchSource("message",null).version(true).sort("comments.date",SortOrder.ASC))).get();
  assertHitCount(searchResponse,2);
  Nested nested=searchResponse.getAggregations().get("to-comments");
  assertThat(nested.getDocCount(),equalTo(4l));
  SearchHits hits=((TopHits)nested.getAggregations().get("top-comments")).getHits();
  assertThat(hits.totalHits(),equalTo(4l));
  SearchHit searchHit=hits.getAt(0);
  assertThat(searchHit.getId(),equalTo("1"));
  assertThat(searchHit.getNestedIdentity().getField().string(),equalTo("comments"));
  assertThat(searchHit.getNestedIdentity().getOffset(),equalTo(0));
  HighlightField highlightField=searchHit.getHighlightFields().get("comments.message");
  assertThat(highlightField.getFragments().length,equalTo(1));
  assertThat(highlightField.getFragments()[0].string(),equalTo("some <em>comment</em>"));
  Explanation explanation=searchHit.explanation();
  assertFalse(explanation.isMatch());
  long version=searchHit.version();
  assertThat(version,equalTo(1l));
  assertThat(searchHit.matchedQueries(),arrayContaining("test"));
  SearchHitField field=searchHit.field("comments.user");
  assertThat(field.getValue().toString(),equalTo("a"));
  field=searchHit.field("script");
  assertThat(field.getValue().toString(),equalTo("5"));
  assertThat(searchHit.sourceAsMap().size(),equalTo(1));
  assertThat(searchHit.sourceAsMap().get("message").toString(),equalTo("some comment"));
}
