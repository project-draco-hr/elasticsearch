{
  HttpHost httpHost=null;
  String fieldName=null;
  while (parser.nextToken() != JsonToken.END_OBJECT) {
    if (parser.getCurrentToken() == JsonToken.FIELD_NAME) {
      fieldName=parser.getCurrentName();
    }
 else     if (parser.getCurrentToken() == JsonToken.START_OBJECT) {
      if ("http".equals(fieldName)) {
        while (parser.nextToken() != JsonToken.END_OBJECT) {
          if (parser.getCurrentToken() == JsonToken.VALUE_STRING && "publish_address".equals(parser.getCurrentName())) {
            URI boundAddressAsURI=URI.create(scheme + "://" + parser.getValueAsString());
            httpHost=new HttpHost(boundAddressAsURI.getHost(),boundAddressAsURI.getPort(),boundAddressAsURI.getScheme());
          }
 else           if (parser.getCurrentToken() == JsonToken.START_OBJECT) {
            parser.skipChildren();
          }
        }
      }
 else {
        parser.skipChildren();
      }
    }
  }
  if (httpHost == null) {
    logger.debug("skipping node [" + nodeId + "] with http disabled");
    return null;
  }
  return httpHost;
}
