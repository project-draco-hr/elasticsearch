{
  SearchResponse searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america","full_name","first_name","last_name").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).operator(Operator.OR))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("marvel hero captain america","full_name","first_name","last_name","category").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).operator(Operator.OR))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  assertSecondHit(searchResponse,hasId("theother"));
  assertThat(searchResponse.getHits().hits()[0].getScore(),greaterThan(searchResponse.getHits().hits()[1].getScore()));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("marvel hero","full_name","first_name","last_name","category").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).operator(Operator.OR))).get();
  assertFirstHit(searchResponse,hasId("theother"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america","full_name","first_name","last_name","category").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).operator(Operator.AND))).get();
  assertHitCount(searchResponse,1l);
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america 15","full_name","first_name","last_name","category","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category").operator(Operator.AND))).get();
  assertHitCount(searchResponse,1l);
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america 15","full_name","first_name","last_name","category","skill","int-field").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category").operator(Operator.AND))).get();
  assertHitCount(searchResponse,1l);
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america 15","skill","full_name","first_name","last_name","category","int-field").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category").operator(Operator.AND))).get();
  assertHitCount(searchResponse,1l);
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america 15","first_name","last_name","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category"))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("15","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category"))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("25 15","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category"))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("25 15","int-field","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category"))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("25 15","first_name","int-field","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category"))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("25 15","int-field","skill","first_name").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category"))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("25 15","int-field","first_name","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category"))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america marvel hero","first_name","last_name","category").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).cutoffFrequency(0.1f).analyzer("category").operator(Operator.OR))).get();
  assertFirstHit(searchResponse,anyOf(hasId("theother"),hasId("theone")));
  long numResults=searchResponse.getHits().totalHits();
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america marvel hero","first_name","last_name","category").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category").operator(Operator.OR))).get();
  assertThat(numResults,lessThan(searchResponse.getHits().getTotalHits()));
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america marvel hero","first_name","last_name","category").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).analyzer("category").operator(Operator.AND))).get();
  assertHitCount(searchResponse,1l);
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america marvel hero","first_name","last_name","category").type(randomBoolean() ? MultiMatchQueryBuilder.Type.CROSS_FIELDS : MultiMatchQueryBuilder.DEFAULT_TYPE).operator(Operator.AND))).get();
  assertHitCount(searchResponse,0l);
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america marvel hero","first_name","last_name","category").type(randomBoolean() ? MultiMatchQueryBuilder.Type.CROSS_FIELDS : MultiMatchQueryBuilder.DEFAULT_TYPE).operator(Operator.AND))).get();
  assertHitCount(searchResponse,0l);
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("the ultimate","full_name","first_name","last_name","category").field("last_name",2).type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).operator(Operator.AND))).get();
  assertFirstHit(searchResponse,hasId("ultimate1"));
  assertSecondHit(searchResponse,hasId("ultimate2"));
  assertThat(searchResponse.getHits().hits()[0].getScore(),greaterThan(searchResponse.getHits().hits()[1].getScore()));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("the ultimate","full_name","first_name","last_name","category").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).operator(Operator.AND))).get();
  assertFirstHit(searchResponse,hasId("ultimate2"));
  assertSecondHit(searchResponse,hasId("ultimate1"));
  assertThat(searchResponse.getHits().hits()[0].getScore(),greaterThan(searchResponse.getHits().hits()[1].getScore()));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("15","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("15","skill","first_name").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("15","int-field","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("15","int-field","first_name","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS))).get();
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("alpha 15","first_name","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).lenient(true))).get();
  assertFirstHit(searchResponse,hasId("ultimate1"));
  assertHitCount(searchResponse,1);
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("alpha 15","int-field","first_name","skill").type(MultiMatchQueryBuilder.Type.CROSS_FIELDS).lenient(true))).get();
  assertFirstHit(searchResponse,hasId("ultimate1"));
}
