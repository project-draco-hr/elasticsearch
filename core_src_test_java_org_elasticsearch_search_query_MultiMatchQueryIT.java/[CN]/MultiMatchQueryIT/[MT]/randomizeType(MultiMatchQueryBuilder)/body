{
  try {
    MultiMatchQueryBuilder.Type type=getType(builder);
    if (type == null && randomBoolean()) {
      return builder;
    }
    if (type == null) {
      type=MultiMatchQueryBuilder.Type.BEST_FIELDS;
    }
    if (randomBoolean()) {
      builder.type(type);
    }
 else {
      Object oType=type;
switch (type) {
case BEST_FIELDS:
        if (randomBoolean()) {
          oType=MatchQueryBuilder.Type.BOOLEAN;
        }
      break;
case MOST_FIELDS:
    if (randomBoolean()) {
      oType=MatchQueryBuilder.Type.BOOLEAN;
    }
  break;
case CROSS_FIELDS:
break;
case PHRASE:
if (randomBoolean()) {
oType=MatchQueryBuilder.Type.PHRASE;
}
break;
case PHRASE_PREFIX:
if (randomBoolean()) {
oType=MatchQueryBuilder.Type.PHRASE_PREFIX;
}
break;
}
builder.type(oType);
}
return builder;
}
 catch (Exception ex) {
throw new RuntimeException(ex);
}
}
