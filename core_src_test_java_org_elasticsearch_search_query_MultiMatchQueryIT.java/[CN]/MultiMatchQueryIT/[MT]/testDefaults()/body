{
  MatchQuery.Type type=randomBoolean() ? MatchQueryBuilder.DEFAULT_TYPE : MatchQuery.Type.BOOLEAN;
  SearchResponse searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("marvel hero captain america","full_name","first_name","last_name","category").operator(Operator.OR))).get();
  Set<String> topNIds=Sets.newHashSet("theone","theother");
  for (int i=0; i < searchResponse.getHits().hits().length; i++) {
    topNIds.remove(searchResponse.getHits().getAt(i).getId());
  }
  assertThat(topNIds,empty());
  assertThat(searchResponse.getHits().hits()[0].getScore(),equalTo(searchResponse.getHits().hits()[1].getScore()));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("marvel hero captain america","full_name","first_name","last_name","category").operator(Operator.OR).useDisMax(false).type(type))).get();
  assertFirstHit(searchResponse,anyOf(hasId("theone"),hasId("theother")));
  assertThat(searchResponse.getHits().hits()[0].getScore(),greaterThan(searchResponse.getHits().hits()[1].getScore()));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("marvel hero","full_name","first_name","last_name","category").operator(Operator.OR).type(type))).get();
  assertFirstHit(searchResponse,hasId("theother"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america","full_name","first_name","last_name","category").operator(Operator.AND).type(type))).get();
  assertHitCount(searchResponse,1l);
  assertFirstHit(searchResponse,hasId("theone"));
  searchResponse=client().prepareSearch("test").setQuery(randomizeType(multiMatchQuery("captain america","full_name","first_name","last_name","category").operator(Operator.AND).type(type))).get();
  assertHitCount(searchResponse,1l);
  assertFirstHit(searchResponse,hasId("theone"));
}
