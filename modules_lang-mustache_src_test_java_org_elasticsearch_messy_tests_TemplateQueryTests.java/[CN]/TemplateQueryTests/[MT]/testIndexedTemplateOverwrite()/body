{
  createIndex("testindex");
  ensureGreen("testindex");
  index("testindex","test","1",jsonBuilder().startObject().field("searchtext","dev1").endObject());
  refresh();
  int iterations=randomIntBetween(2,11);
  for (int i=1; i < iterations; i++) {
    assertAcked(client().admin().cluster().preparePutStoredScript().setScriptLang(MustacheScriptEngineService.NAME).setId("git01").setSource(new BytesArray("{\"template\":{\"query\": {\"match\": {\"searchtext\": {\"query\": \"{{P_Keyword1}}\"," + "\"type\": \"ooophrase_prefix\"}}}}}")));
    GetStoredScriptResponse getResponse=client().admin().cluster().prepareGetStoredScript(MustacheScriptEngineService.NAME,"git01").get();
    assertNotNull(getResponse.getStoredScript());
    Map<String,Object> templateParams=new HashMap<>();
    templateParams.put("P_Keyword1","dev");
    try {
      client().prepareSearch("testindex").setTypes("test").setTemplate(new Template("git01",ScriptService.ScriptType.STORED,MustacheScriptEngineService.NAME,null,templateParams)).get();
      fail("Broken test template is parsing w/o error.");
    }
 catch (    SearchPhaseExecutionException e) {
    }
    assertAcked(client().admin().cluster().preparePutStoredScript().setScriptLang(MustacheScriptEngineService.NAME).setId("git01").setSource(new BytesArray("{\"query\": {\"match\": {\"searchtext\": {\"query\": \"{{P_Keyword1}}\"," + "\"type\": \"phrase_prefix\"}}}}")));
    SearchResponse searchResponse=client().prepareSearch("testindex").setTypes("test").setTemplate(new Template("git01",ScriptService.ScriptType.STORED,MustacheScriptEngineService.NAME,null,templateParams)).get();
    assertHitCount(searchResponse,1);
  }
}
