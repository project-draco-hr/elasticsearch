{
  assertAcked(client().admin().cluster().preparePutStoredScript().setScriptLang(MustacheScriptEngineService.NAME).setId("1a").setSource(new BytesArray("{" + "\"template\":{" + "                \"query\":{"+ "                   \"match\":{"+ "                    \"theField\" : \"{{fieldParam}}\"}"+ "       }"+ "}"+ "}")));
  assertAcked(client().admin().cluster().preparePutStoredScript().setScriptLang(MustacheScriptEngineService.NAME).setId("2").setSource(new BytesArray("{" + "\"template\":{" + "                \"query\":{"+ "                   \"match\":{"+ "                    \"theField\" : \"{{fieldParam}}\"}"+ "       }"+ "}"+ "}")));
  assertAcked(client().admin().cluster().preparePutStoredScript().setScriptLang(MustacheScriptEngineService.NAME).setId("3").setSource(new BytesArray("{" + "\"template\":{" + "             \"match\":{"+ "                    \"theField\" : \"{{fieldParam}}\"}"+ "       }"+ "}")));
  List<IndexRequestBuilder> builders=new ArrayList<>();
  builders.add(client().prepareIndex("test","type","1").setSource("{\"theField\":\"foo\"}"));
  builders.add(client().prepareIndex("test","type","2").setSource("{\"theField\":\"foo 2\"}"));
  builders.add(client().prepareIndex("test","type","3").setSource("{\"theField\":\"foo 3\"}"));
  builders.add(client().prepareIndex("test","type","4").setSource("{\"theField\":\"foo 4\"}"));
  builders.add(client().prepareIndex("test","type","5").setSource("{\"theField\":\"bar\"}"));
  indexRandom(true,builders);
  Map<String,Object> templateParams=new HashMap<>();
  templateParams.put("fieldParam","foo");
  SearchResponse searchResponse=client().prepareSearch("test").setTypes("type").setTemplate(new Template("/mustache/1a",ScriptService.ScriptType.STORED,MustacheScriptEngineService.NAME,null,templateParams)).get();
  assertHitCount(searchResponse,4);
  try {
    client().prepareSearch("test").setTypes("type").setTemplate(new Template("/template_index/mustache/1000",ScriptService.ScriptType.STORED,MustacheScriptEngineService.NAME,null,templateParams)).get();
    fail("shouldn't get here");
  }
 catch (  SearchPhaseExecutionException spee) {
  }
  try {
    searchResponse=client().prepareSearch("test").setTypes("type").setTemplate(new Template("/myindex/mustache/1",ScriptService.ScriptType.STORED,MustacheScriptEngineService.NAME,null,templateParams)).get();
    assertFailures(searchResponse);
  }
 catch (  SearchPhaseExecutionException spee) {
  }
  searchResponse=client().prepareSearch("test").setTypes("type").setTemplate(new Template("1a",ScriptService.ScriptType.STORED,MustacheScriptEngineService.NAME,null,templateParams)).get();
  assertHitCount(searchResponse,4);
  templateParams.put("fieldParam","bar");
  searchResponse=client().prepareSearch("test").setTypes("type").setTemplate(new Template("/mustache/2",ScriptService.ScriptType.STORED,MustacheScriptEngineService.NAME,null,templateParams)).get();
  assertHitCount(searchResponse,1);
  Map<String,Object> vars=new HashMap<>();
  vars.put("fieldParam","bar");
  TemplateQueryBuilder builder=new TemplateQueryBuilder(new Template("3",ScriptService.ScriptType.STORED,null,null,vars));
  SearchResponse sr=client().prepareSearch().setQuery(builder).execute().actionGet();
  assertHitCount(sr,1);
  Map<String,Object> params=new HashMap<>();
  params.put("fieldParam","foo");
  TemplateQueryBuilder templateQuery=new TemplateQueryBuilder(new Template("3",ScriptType.STORED,null,null,params));
  sr=client().prepareSearch().setQuery(templateQuery).get();
  assertHitCount(sr,4);
  templateQuery=new TemplateQueryBuilder(new Template("/mustache/3",ScriptType.STORED,null,null,params));
  sr=client().prepareSearch().setQuery(templateQuery).get();
  assertHitCount(sr,4);
}
