{
  String multiQuery="{\"query\":{\"terms\":{\"theField\":[\"{{#fieldParam}}\",\"{{.}}\",\"{{/fieldParam}}\"]}}}";
  assertAcked(client().admin().cluster().preparePutStoredScript().setScriptLang(MustacheScriptEngineService.NAME).setId("4").setSource(jsonBuilder().startObject().field("template",multiQuery).endObject().bytes()));
  List<IndexRequestBuilder> builders=new ArrayList<>();
  builders.add(client().prepareIndex("test","type","1").setSource("{\"theField\":\"foo\"}"));
  builders.add(client().prepareIndex("test","type","2").setSource("{\"theField\":\"foo 2\"}"));
  builders.add(client().prepareIndex("test","type","3").setSource("{\"theField\":\"foo 3\"}"));
  builders.add(client().prepareIndex("test","type","4").setSource("{\"theField\":\"foo 4\"}"));
  builders.add(client().prepareIndex("test","type","5").setSource("{\"theField\":\"bar\"}"));
  indexRandom(true,builders);
  Map<String,Object> arrayTemplateParams=new HashMap<>();
  String[] fieldParams={"foo","bar"};
  arrayTemplateParams.put("fieldParam",fieldParams);
  SearchTemplateResponse searchResponse=new SearchTemplateRequestBuilder(client()).setRequest(new SearchRequest("test").types("type")).setScript("/mustache/4").setScriptType(ScriptService.ScriptType.STORED).setScriptParams(arrayTemplateParams).get();
  assertHitCount(searchResponse.getResponse(),5);
}
