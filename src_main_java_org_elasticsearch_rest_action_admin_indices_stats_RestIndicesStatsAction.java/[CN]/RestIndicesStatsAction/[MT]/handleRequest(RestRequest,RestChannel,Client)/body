{
  IndicesStatsRequest indicesStatsRequest=new IndicesStatsRequest();
  indicesStatsRequest.listenerThreaded(false);
  indicesStatsRequest.indicesOptions(IndicesOptions.fromRequest(request,indicesStatsRequest.indicesOptions()));
  indicesStatsRequest.indices(Strings.splitStringByCommaToArray(request.param("index")));
  indicesStatsRequest.types(Strings.splitStringByCommaToArray(request.param("types")));
  Set<String> metrics=Strings.splitStringByCommaToSet(request.param("metric","_all"));
  if (metrics.size() == 1 && metrics.contains("_all")) {
    indicesStatsRequest.all();
  }
 else {
    indicesStatsRequest.clear();
    indicesStatsRequest.docs(metrics.contains("docs"));
    indicesStatsRequest.store(metrics.contains("store"));
    indicesStatsRequest.indexing(metrics.contains("indexing"));
    indicesStatsRequest.search(metrics.contains("search"));
    indicesStatsRequest.get(metrics.contains("get"));
    indicesStatsRequest.merge(metrics.contains("merge"));
    indicesStatsRequest.refresh(metrics.contains("refresh"));
    indicesStatsRequest.flush(metrics.contains("flush"));
    indicesStatsRequest.warmer(metrics.contains("warmer"));
    indicesStatsRequest.filterCache(metrics.contains("filter_cache"));
    indicesStatsRequest.idCache(metrics.contains("id_cache"));
    indicesStatsRequest.percolate(metrics.contains("percolate"));
    indicesStatsRequest.segments(metrics.contains("segments"));
    indicesStatsRequest.fieldData(metrics.contains("fielddata"));
    indicesStatsRequest.completion(metrics.contains("completion"));
    indicesStatsRequest.suggest(metrics.contains("suggest"));
    indicesStatsRequest.queryCache(metrics.contains("query_cache"));
    indicesStatsRequest.recovery(metrics.contains("recovery"));
    indicesStatsRequest.translog(metrics.contains("translog"));
  }
  if (request.hasParam("groups")) {
    indicesStatsRequest.groups(Strings.splitStringByCommaToArray(request.param("groups")));
  }
  if (request.hasParam("types")) {
    indicesStatsRequest.types(Strings.splitStringByCommaToArray(request.param("types")));
  }
  if (indicesStatsRequest.completion() && (request.hasParam("fields") || request.hasParam("completion_fields"))) {
    indicesStatsRequest.completionFields(request.paramAsStringArray("completion_fields",request.paramAsStringArray("fields",Strings.EMPTY_ARRAY)));
  }
  if (indicesStatsRequest.fieldData() && (request.hasParam("fields") || request.hasParam("fielddata_fields"))) {
    indicesStatsRequest.fieldDataFields(request.paramAsStringArray("fielddata_fields",request.paramAsStringArray("fields",Strings.EMPTY_ARRAY)));
  }
  client.admin().indices().stats(indicesStatsRequest,new RestBuilderListener<IndicesStatsResponse>(channel){
    @Override public RestResponse buildResponse(    IndicesStatsResponse response,    XContentBuilder builder) throws Exception {
      builder.startObject();
      buildBroadcastShardsHeader(builder,response);
      response.toXContent(builder,request);
      builder.endObject();
      return new BytesRestResponse(OK,builder);
    }
  }
);
}
