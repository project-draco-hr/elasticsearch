{
  IndicesStatsRequest indicesStatsRequest=new IndicesStatsRequest();
  indicesStatsRequest.setListenerThreaded(false);
  if (request.hasParam("ignore_indices")) {
    indicesStatsRequest.setIgnoreIndices(IgnoreIndices.fromString(request.param("ignore_indices")));
  }
  boolean clear=request.paramAsBoolean("clear",false);
  if (clear) {
    indicesStatsRequest.clear();
  }
  boolean all=request.paramAsBoolean("all",false);
  if (all) {
    indicesStatsRequest.all();
  }
  indicesStatsRequest.setIndices(splitIndices(request.param("index")));
  indicesStatsRequest.setTypes(splitTypes(request.param("types")));
  if (request.hasParam("groups")) {
    indicesStatsRequest.setGroups(Strings.splitStringByCommaToArray(request.param("groups")));
  }
  indicesStatsRequest.setDocs(request.paramAsBoolean("docs",indicesStatsRequest.isDocs()));
  indicesStatsRequest.setStore(request.paramAsBoolean("store",indicesStatsRequest.isStore()));
  indicesStatsRequest.setIndexing(request.paramAsBoolean("indexing",indicesStatsRequest.isIndexing()));
  indicesStatsRequest.setSearch(request.paramAsBoolean("search",indicesStatsRequest.isSearch()));
  indicesStatsRequest.setGet(request.paramAsBoolean("get",indicesStatsRequest.isGet()));
  indicesStatsRequest.setMerge(request.paramAsBoolean("merge",indicesStatsRequest.isMerge()));
  indicesStatsRequest.setRefresh(request.paramAsBoolean("refresh",indicesStatsRequest.isRefresh()));
  indicesStatsRequest.setFlush(request.paramAsBoolean("flush",indicesStatsRequest.isFlush()));
  indicesStatsRequest.setWarmer(request.paramAsBoolean("warmer",indicesStatsRequest.isWarmer()));
  client.admin().indices().stats(indicesStatsRequest,new ActionListener<IndicesStats>(){
    @Override public void onResponse(    IndicesStats response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        builder.field("ok",true);
        buildBroadcastShardsHeader(builder,response);
        response.toXContent(builder,request);
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
