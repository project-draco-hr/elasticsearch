{
  ValidateRequest validateRequest=new ValidateRequest(RestActions.splitIndices(request.param("index")));
  validateRequest.listenerThreaded(false);
  try {
    BroadcastOperationThreading operationThreading=BroadcastOperationThreading.fromString(request.param("operation_threading"),BroadcastOperationThreading.SINGLE_THREAD);
    if (operationThreading == BroadcastOperationThreading.NO_THREADS) {
      operationThreading=BroadcastOperationThreading.SINGLE_THREAD;
    }
    validateRequest.operationThreading(operationThreading);
    if (request.hasContent()) {
      validateRequest.query(request.contentByteArray(),request.contentByteArrayOffset(),request.contentLength(),true);
    }
 else {
      String source=request.param("source");
      if (source != null) {
        validateRequest.query(source);
      }
 else {
        byte[] querySource=RestActions.parseQuerySource(request);
        if (querySource != null) {
          validateRequest.query(querySource);
        }
      }
    }
    validateRequest.types(splitTypes(request.param("type")));
  }
 catch (  Exception e) {
    try {
      XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
      channel.sendResponse(new XContentRestResponse(request,BAD_REQUEST,builder.startObject().field("error",e.getMessage()).endObject()));
    }
 catch (    IOException e1) {
      logger.error("Failed to send failure response",e1);
    }
    return;
  }
  client.validate(validateRequest,new ActionListener<ValidateResponse>(){
    @Override public void onResponse(    ValidateResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        builder.field("valid",response.valid());
        buildBroadcastShardsHeader(builder,response);
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
