{
  IndexMetaData metaData=newIndexMeta("index",Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.CURRENT).put(SearchSlowLog.INDEX_SEARCH_SLOWLOG_REFORMAT.getKey(),false).build());
  IndexSettings settings=new IndexSettings(metaData,Settings.EMPTY);
  SearchSlowLog log=new SearchSlowLog(settings);
  assertFalse(log.isReformat());
  settings.updateIndexMetaData(newIndexMeta("index",Settings.builder().put(SearchSlowLog.INDEX_SEARCH_SLOWLOG_REFORMAT.getKey(),"true").build()));
  assertTrue(log.isReformat());
  settings.updateIndexMetaData(newIndexMeta("index",Settings.builder().put(SearchSlowLog.INDEX_SEARCH_SLOWLOG_REFORMAT.getKey(),"false").build()));
  assertFalse(log.isReformat());
  settings.updateIndexMetaData(newIndexMeta("index",Settings.EMPTY));
  assertTrue(log.isReformat());
  metaData=newIndexMeta("index",Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.CURRENT).build());
  settings=new IndexSettings(metaData,Settings.EMPTY);
  log=new SearchSlowLog(settings);
  assertTrue(log.isReformat());
  try {
    settings.updateIndexMetaData(newIndexMeta("index",Settings.builder().put(SearchSlowLog.INDEX_SEARCH_SLOWLOG_REFORMAT.getKey(),"NOT A BOOLEAN").build()));
    fail();
  }
 catch (  IllegalArgumentException ex) {
    assertEquals(ex.getMessage(),"Failed to parse value [NOT A BOOLEAN] cannot be parsed to boolean [ true/1/on/yes OR false/0/off/no ]");
  }
  assertTrue(log.isReformat());
}
