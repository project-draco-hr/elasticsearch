{
  BigArrays bigArrays=indexService.getBigArrays();
  ThreadPool threadPool=indexService.getThreadPool();
  ScriptService scriptService=node().injector().getInstance(ScriptService.class);
  return new TestSearchContext(threadPool,bigArrays,scriptService,indexService){
    @Override public ShardSearchRequest request(){
      return new ShardSearchRequest(){
        @Override public ShardId shardId(){
          return null;
        }
        @Override public String[] types(){
          return new String[0];
        }
        @Override public SearchSourceBuilder source(){
          return null;
        }
        @Override public void source(        SearchSourceBuilder source){
        }
        @Override public int numberOfShards(){
          return 0;
        }
        @Override public SearchType searchType(){
          return null;
        }
        @Override public String[] filteringAliases(){
          return new String[0];
        }
        @Override public long nowInMillis(){
          return 0;
        }
        @Override public Boolean requestCache(){
          return null;
        }
        @Override public Scroll scroll(){
          return null;
        }
        @Override public void setProfile(        boolean profile){
        }
        @Override public boolean isProfile(){
          return false;
        }
        @Override public BytesReference cacheKey() throws IOException {
          return null;
        }
        @Override public void rewrite(        QueryShardContext context) throws IOException {
        }
      }
;
    }
  }
;
}
