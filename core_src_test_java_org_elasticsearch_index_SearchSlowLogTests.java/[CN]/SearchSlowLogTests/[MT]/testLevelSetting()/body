{
  SlowLogLevel level=randomFrom(SlowLogLevel.values());
  IndexMetaData metaData=newIndexMeta("index",Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.CURRENT).put(SearchSlowLog.INDEX_SEARCH_SLOWLOG_LEVEL.getKey(),level).build());
  IndexSettings settings=new IndexSettings(metaData,Settings.EMPTY);
  SearchSlowLog log=new SearchSlowLog(settings);
  assertEquals(level,log.getLevel());
  level=randomFrom(SlowLogLevel.values());
  settings.updateIndexMetaData(newIndexMeta("index",Settings.builder().put(SearchSlowLog.INDEX_SEARCH_SLOWLOG_LEVEL.getKey(),level).build()));
  assertEquals(level,log.getLevel());
  level=randomFrom(SlowLogLevel.values());
  settings.updateIndexMetaData(newIndexMeta("index",Settings.builder().put(SearchSlowLog.INDEX_SEARCH_SLOWLOG_LEVEL.getKey(),level).build()));
  assertEquals(level,log.getLevel());
  settings.updateIndexMetaData(newIndexMeta("index",Settings.builder().put(SearchSlowLog.INDEX_SEARCH_SLOWLOG_LEVEL.getKey(),level).build()));
  assertEquals(level,log.getLevel());
  settings.updateIndexMetaData(newIndexMeta("index",Settings.EMPTY));
  assertEquals(SlowLogLevel.TRACE,log.getLevel());
  metaData=newIndexMeta("index",Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.CURRENT).build());
  settings=new IndexSettings(metaData,Settings.EMPTY);
  log=new SearchSlowLog(settings);
  assertTrue(log.isReformat());
  try {
    settings.updateIndexMetaData(newIndexMeta("index",Settings.builder().put(SearchSlowLog.INDEX_SEARCH_SLOWLOG_LEVEL.getKey(),"NOT A LEVEL").build()));
    fail();
  }
 catch (  IllegalArgumentException ex) {
    assertEquals(ex.getMessage(),"No enum constant org.elasticsearch.index.SlowLogLevel.NOT A LEVEL");
  }
  assertEquals(SlowLogLevel.TRACE,log.getLevel());
}
