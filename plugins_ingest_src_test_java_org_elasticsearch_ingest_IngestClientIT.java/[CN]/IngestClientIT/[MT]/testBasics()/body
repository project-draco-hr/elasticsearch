{
  new PutPipelineRequestBuilder(client(),PutPipelineAction.INSTANCE).setId("_id").setSource(jsonBuilder().startObject().field("description","my_pipeline").startArray("processors").startObject().startObject("simple").field("path","field2").field("expected_value","abc").field("add_field","field3").field("add_field_value","xyz").endObject().endObject().endArray().endObject().bytes()).get();
  assertBusy(new Runnable(){
    @Override public void run(){
      GetPipelineResponse response=new GetPipelineRequestBuilder(client(),GetPipelineAction.INSTANCE).setIds("_id").get();
      assertThat(response.isFound(),is(true));
      assertThat(response.pipelines().get("_id"),notNullValue());
    }
  }
);
  createIndex("test");
  client().prepareIndex("test","type","1").setSource("field2","abc").putHeader("ingest","_id").get();
  assertBusy(new Runnable(){
    @Override public void run(){
      Map<String,Object> doc=client().prepareGet("test","type","1").get().getSourceAsMap();
      assertThat(doc.get("field3"),equalTo("xyz"));
    }
  }
);
  client().prepareBulk().add(client().prepareIndex("test","type","2").setSource("field2","abc")).putHeader("ingest","_id").get();
  assertBusy(new Runnable(){
    @Override public void run(){
      Map<String,Object> doc=client().prepareGet("test","type","2").get().getSourceAsMap();
      assertThat(doc.get("field3"),equalTo("xyz"));
    }
  }
);
  DeletePipelineResponse response=new DeletePipelineRequestBuilder(client(),DeletePipelineAction.INSTANCE).setId("_id").get();
  assertThat(response.found(),is(true));
  assertThat(response.id(),equalTo("_id"));
  assertBusy(new Runnable(){
    @Override public void run(){
      GetPipelineResponse response=new GetPipelineRequestBuilder(client(),GetPipelineAction.INSTANCE).setIds("_id").get();
      assertThat(response.isFound(),is(false));
      assertThat(response.pipelines().get("_id"),nullValue());
    }
  }
);
}
