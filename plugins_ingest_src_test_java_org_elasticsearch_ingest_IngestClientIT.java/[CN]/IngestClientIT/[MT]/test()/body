{
  new PutPipelineRequestBuilder(client(),PutPipelineAction.INSTANCE).setId("_id").setSource(jsonBuilder().startObject().field("description","my_pipeline").startArray("processors").startObject().startObject("grok").field("field","field1").field("pattern","%{NUMBER:val:float} %{NUMBER:status:int} <%{WORD:msg}>").endObject().endObject().endArray().endObject().bytes()).get();
  assertBusy(new Runnable(){
    @Override public void run(){
      GetPipelineResponse response=new GetPipelineRequestBuilder(client(),GetPipelineAction.INSTANCE).setIds("_id").get();
      assertThat(response.isFound(),is(true));
      assertThat(response.pipelines().size(),equalTo(1));
      assertThat(response.pipelines().get(0).getId(),equalTo("_id"));
    }
  }
);
  createIndex("test");
  XContentBuilder updateMappingBuilder=jsonBuilder().startObject().startObject("properties").startObject("status").field("type","integer").endObject().startObject("val").field("type","float").endObject().endObject();
  PutMappingResponse putMappingResponse=client().admin().indices().preparePutMapping("test").setType("type").setSource(updateMappingBuilder).get();
  assertAcked(putMappingResponse);
  client().prepareIndex("test","type","1").setSource("field1","123.42 400 <foo>").putHeader(IngestPlugin.PIPELINE_ID_PARAM,"_id").get();
  assertBusy(new Runnable(){
    @Override public void run(){
      Map<String,Object> doc=client().prepareGet("test","type","1").get().getSourceAsMap();
      assertThat(doc.get("val"),equalTo(123.42));
      assertThat(doc.get("status"),equalTo(400));
      assertThat(doc.get("msg"),equalTo("foo"));
    }
  }
);
  client().prepareBulk().add(client().prepareIndex("test","type","2").setSource("field1","123.42 400 <foo>")).putHeader(IngestPlugin.PIPELINE_ID_PARAM,"_id").get();
  assertBusy(new Runnable(){
    @Override public void run(){
      Map<String,Object> doc=client().prepareGet("test","type","2").get().getSourceAsMap();
      assertThat(doc.get("val"),equalTo(123.42));
      assertThat(doc.get("status"),equalTo(400));
      assertThat(doc.get("msg"),equalTo("foo"));
    }
  }
);
  DeletePipelineResponse response=new DeletePipelineRequestBuilder(client(),DeletePipelineAction.INSTANCE).setId("_id").get();
  assertThat(response.found(),is(true));
  assertThat(response.id(),equalTo("_id"));
  assertBusy(new Runnable(){
    @Override public void run(){
      GetPipelineResponse response=new GetPipelineRequestBuilder(client(),GetPipelineAction.INSTANCE).setIds("_id").get();
      assertThat(response.isFound(),is(false));
      assertThat(response.pipelines().size(),equalTo(0));
    }
  }
);
}
