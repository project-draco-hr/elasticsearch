{
  String stage1Mapping=XContentFactory.jsonBuilder().startObject().startObject("person").startObject("properties").startObject("tc").field("type","token_count").field("analyzer","keyword").endObject().endObject().endObject().endObject().string();
  DocumentMapperParser parser=createIndex("test").mapperService().documentMapperParser();
  DocumentMapper stage1=parser.parse(stage1Mapping);
  String stage2Mapping=XContentFactory.jsonBuilder().startObject().startObject("person").startObject("properties").startObject("tc").field("type","token_count").field("analyzer","standard").endObject().endObject().endObject().endObject().string();
  DocumentMapper stage2=parser.parse(stage2Mapping);
  DocumentMapper.MergeResult mergeResult=stage1.merge(stage2,mergeFlags().simulate(true));
  assertThat(mergeResult.hasConflicts(),equalTo(false));
  assertThat(((TokenCountFieldMapper)stage1.mappers().smartName("tc").mapper()).analyzer(),equalTo("keyword"));
  mergeResult=stage1.merge(stage2,mergeFlags().simulate(false));
  assertThat(mergeResult.hasConflicts(),equalTo(false));
  assertThat(((TokenCountFieldMapper)stage1.mappers().smartName("tc").mapper()).analyzer(),equalTo("standard"));
}
