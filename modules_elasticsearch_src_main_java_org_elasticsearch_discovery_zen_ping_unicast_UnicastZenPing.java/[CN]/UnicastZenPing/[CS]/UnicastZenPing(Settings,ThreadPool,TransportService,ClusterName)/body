{
  super(settings);
  this.threadPool=threadPool;
  this.transportService=transportService;
  this.clusterName=clusterName;
  List<String> hosts=Lists.newArrayList(componentSettings.getAsArray("hosts"));
  logger.debug("using initial hosts {}",hosts);
  List<DiscoveryNode> nodes=Lists.newArrayList();
  int idCounter=0;
  for (  String host : hosts) {
    try {
      TransportAddress[] addresses=transportService.addressesFromString(host);
      for (int i=0; (i < addresses.length && i < LIMIT_PORTS_COUNT); i++) {
        nodes.add(new DiscoveryNode("#zen_unicast_" + (++idCounter) + "#",addresses[i]));
      }
    }
 catch (    Exception e) {
      throw new ElasticSearchIllegalArgumentException("Failed to resolve address for [" + host + "]",e);
    }
  }
  this.nodes=nodes.toArray(new DiscoveryNode[nodes.size()]);
  transportService.registerHandler(UnicastPingRequestHandler.ACTION,new UnicastPingRequestHandler());
}
