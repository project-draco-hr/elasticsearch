{
  XContentBuilder mapping=XContentFactory.jsonBuilder();
  mapping.startObject().startObject("properties").startObject("companyname").field("type","text").endObject().startObject("employee").field("type","nested").startObject("properties").startObject("name").field("type","text").endObject().endObject().endObject().endObject().endObject();
  createIndex("test",client().admin().indices().prepareCreate("test").addMapping("employee",mapping).addMapping("queries","query","type=percolator"));
  client().prepareIndex("test","queries","q1").setSource(jsonBuilder().startObject().field("query",QueryBuilders.nestedQuery("employee",QueryBuilders.matchQuery("employee.name","virginia potts").operator(Operator.AND),ScoreMode.Avg)).endObject()).get();
  client().prepareIndex("test","queries","q2").setSource(jsonBuilder().startObject().field("query",QueryBuilders.matchQuery("employee.name","virginia")).endObject()).get();
  client().admin().indices().prepareRefresh().get();
  SearchResponse response=client().prepareSearch().setQuery(new PercolateQueryBuilder("query","employee",XContentFactory.jsonBuilder().startObject().field("companyname","stark").startArray("employee").startObject().field("name","virginia potts").endObject().startObject().field("name","tony stark").endObject().endArray().endObject().bytes())).addSort("_doc",SortOrder.ASC).get();
  assertHitCount(response,1);
  assertThat(response.getHits().getAt(0).getId(),equalTo("q1"));
  response=client().prepareSearch().setQuery(new PercolateQueryBuilder("query","employee",XContentFactory.jsonBuilder().startObject().field("companyname","notstark").startArray("employee").startObject().field("name","virginia stark").endObject().startObject().field("name","tony stark").endObject().endArray().endObject().bytes())).addSort("_doc",SortOrder.ASC).get();
  assertHitCount(response,0);
  response=client().prepareSearch().setQuery(new PercolateQueryBuilder("query","employee",XContentFactory.jsonBuilder().startObject().field("companyname","notstark").endObject().bytes())).addSort("_doc",SortOrder.ASC).get();
  assertHitCount(response,0);
}
