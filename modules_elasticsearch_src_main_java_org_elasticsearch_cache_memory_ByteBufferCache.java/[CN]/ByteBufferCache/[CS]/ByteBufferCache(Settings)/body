{
  super(settings);
  this.direct=componentSettings.getAsBoolean("direct",true);
  this.smallBufferSize=componentSettings.getAsBytesSize("small_buffer_size",new ByteSizeValue(1,ByteSizeUnit.KB));
  this.largeBufferSize=componentSettings.getAsBytesSize("large_buffer_size",new ByteSizeValue(1,ByteSizeUnit.MB));
  this.smallCacheSize=componentSettings.getAsBytesSize("small_cache_size",new ByteSizeValue(10,ByteSizeUnit.MB));
  this.largeCacheSize=componentSettings.getAsBytesSize("large_cache_size",new ByteSizeValue(500,ByteSizeUnit.MB));
  if (smallCacheSize.bytes() == 0 || largeCacheSize.bytes() == 0) {
    this.allocator=new PlainByteBufferAllocator(direct,(int)smallBufferSize.bytes(),(int)largeBufferSize.bytes());
  }
 else {
    this.allocator=new CachingByteBufferAllocator(direct,(int)smallBufferSize.bytes(),(int)largeBufferSize.bytes(),(int)smallCacheSize.bytes(),(int)largeCacheSize.bytes());
  }
  if (logger.isDebugEnabled()) {
    logger.debug("using bytebuffer cache with small_buffer_size [{}], large_buffer_size [{}], small_cache_size [{}], large_cache_size [{}], direct [{}]",smallBufferSize,largeBufferSize,smallCacheSize,largeCacheSize,direct);
  }
}
