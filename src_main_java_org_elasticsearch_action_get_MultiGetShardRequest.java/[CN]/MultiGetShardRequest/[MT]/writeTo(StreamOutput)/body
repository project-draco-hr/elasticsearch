{
  super.writeTo(out);
  out.writeVInt(locations.size());
  if (out.getVersion().onOrAfter(Version.V_1_4_0)) {
    for (int i=0; i < locations.size(); i++) {
      out.writeVInt(locations.get(i));
      items.get(i).writeTo(out);
    }
  }
 else {
    for (int i=0; i < locations.size(); i++) {
      out.writeVInt(locations.get(i));
      MultiGetRequest.Item item=items.get(i);
      if (item.type() == null) {
        out.writeBoolean(false);
      }
 else {
        out.writeBoolean(true);
        out.writeSharedString(item.type());
      }
      out.writeString(item.id());
      if (item.fields() == null) {
        out.writeVInt(0);
      }
 else {
        out.writeVInt(item.fields().length);
        for (        String field : item.fields()) {
          out.writeString(field);
        }
      }
      Versions.writeVersionWithVLongForBW(item.version(),out);
      out.writeByte(item.versionType().getValue());
      FetchSourceContext.optionalWriteToStream(item.fetchSourceContext(),out);
    }
  }
  out.writeOptionalString(preference);
  out.writeBoolean(refresh);
  if (realtime == null) {
    out.writeByte((byte)-1);
  }
 else   if (!realtime) {
    out.writeByte((byte)0);
  }
 else {
    out.writeByte((byte)1);
  }
  if (out.getVersion().onOrAfter(Version.V_1_4_0)) {
    out.writeBoolean(ignoreErrorsOnGeneratedFields);
  }
}
