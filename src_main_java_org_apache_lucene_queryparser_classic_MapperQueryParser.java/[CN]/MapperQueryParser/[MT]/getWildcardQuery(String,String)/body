{
  if (termStr.equals("*")) {
    if ("*".equals(field) || Objects.equal(field,this.field)) {
      String actualField=field;
      if (actualField == null) {
        actualField=this.field;
      }
      if (actualField == null) {
        return newMatchAllDocsQuery();
      }
      if ("_all".equals(actualField)) {
        return newMatchAllDocsQuery();
      }
      return fieldQueryExtensions.get(ExistsFieldQueryExtension.NAME).query(parseContext,actualField);
    }
  }
  Collection<String> fields=extractMultiFields(field);
  if (fields != null) {
    if (fields.size() == 1) {
      return getWildcardQuerySingle(fields.iterator().next(),termStr);
    }
    if (settings.useDisMax()) {
      DisjunctionMaxQuery disMaxQuery=new DisjunctionMaxQuery(settings.tieBreaker());
      boolean added=false;
      for (      String mField : fields) {
        Query q=getWildcardQuerySingle(mField,termStr);
        if (q != null) {
          added=true;
          applyBoost(mField,q);
          disMaxQuery.add(q);
        }
      }
      if (!added) {
        return null;
      }
      return disMaxQuery;
    }
 else {
      List<BooleanClause> clauses=new ArrayList<BooleanClause>();
      for (      String mField : fields) {
        Query q=getWildcardQuerySingle(mField,termStr);
        if (q != null) {
          applyBoost(mField,q);
          clauses.add(new BooleanClause(q,BooleanClause.Occur.SHOULD));
        }
      }
      if (clauses.size() == 0)       return null;
      return getBooleanQuery(clauses,true);
    }
  }
 else {
    return getWildcardQuerySingle(field,termStr);
  }
}
