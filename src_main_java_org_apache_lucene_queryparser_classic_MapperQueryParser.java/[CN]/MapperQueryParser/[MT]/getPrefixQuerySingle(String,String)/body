{
  currentMapper=null;
  Analyzer oldAnalyzer=getAnalyzer();
  try {
    MapperService.SmartNameFieldMappers fieldMappers=parseContext.smartFieldMappers(field);
    if (fieldMappers != null) {
      if (!forcedAnalyzer) {
        setAnalyzer(fieldMappers.searchAnalyzer());
      }
      currentMapper=fieldMappers.fieldMappers().mapper();
      if (currentMapper != null) {
        Query query=null;
        if (currentMapper.useTermQueryWithQueryString()) {
          if (fieldMappers.explicitTypeInNameWithDocMapper()) {
            String[] previousTypes=QueryParseContext.setTypesWithPrevious(new String[]{fieldMappers.docMapper().type()});
            try {
              query=currentMapper.prefixQuery(termStr,multiTermRewriteMethod,parseContext);
            }
  finally {
              QueryParseContext.setTypes(previousTypes);
            }
          }
 else {
            query=currentMapper.prefixQuery(termStr,multiTermRewriteMethod,parseContext);
          }
        }
        if (query == null) {
          query=getPossiblyAnalyzedPrefixQuery(currentMapper.names().indexName(),termStr);
        }
        return wrapSmartNameQuery(query,fieldMappers,parseContext);
      }
    }
    return getPossiblyAnalyzedPrefixQuery(field,termStr);
  }
 catch (  RuntimeException e) {
    if (settings.lenient()) {
      return null;
    }
    throw e;
  }
 finally {
    setAnalyzer(oldAnalyzer);
  }
}
