{
  test.indexRandom(true,client().prepareIndex("source","test","1").setSource("foo","a"),client().prepareIndex("source","test","2").setSource("foo","a"));
  request.source("source").script(new Script("sticky",ScriptType.INLINE,"native",emptyMap()));
  request.source().setSize(1);
  ListenableActionFuture<Response> response=request.execute();
  barrier.await(30,TimeUnit.SECONDS);
  barrier.await(30,TimeUnit.SECONDS);
  barrier.await(30,TimeUnit.SECONDS);
  ListTasksResponse tasksList=client().admin().cluster().prepareListTasks().setActions(actionToCancel).setDetailed(true).get();
  assertThat(tasksList.getNodeFailures(),empty());
  assertThat(tasksList.getTaskFailures(),empty());
  assertThat(tasksList.getTasks(),hasSize(1));
  BulkByScrollTask.Status status=(Status)tasksList.getTasks().get(0).getStatus();
  assertNull(status.getReasonCancelled());
  List<TaskInfo> cancelledTasks=client().admin().cluster().prepareCancelTasks().setActions(actionToCancel).get().getTasks();
  assertThat(cancelledTasks,hasSize(1));
  tasksList=client().admin().cluster().prepareListTasks().setActions(actionToCancel).setDetailed(true).get();
  assertThat(tasksList.getNodeFailures(),empty());
  assertThat(tasksList.getTaskFailures(),empty());
  assertThat(tasksList.getTasks(),hasSize(1));
  status=(Status)tasksList.getTasks().get(0).getStatus();
  assertEquals(CancelTasksRequest.DEFAULT_REASON,status.getReasonCancelled());
  barrier.await();
  return response.get();
}
