{
  Map<String,Object> templateDef=new HashMap<>();
  templateDef.put("match_mapping_type","string");
  templateDef.put("mapping",Collections.singletonMap("store",true));
  DynamicTemplate template=DynamicTemplate.parse("my_template",templateDef,Version.V_5_0_0);
  XContentBuilder builder=JsonXContent.contentBuilder();
  template.toXContent(builder,ToXContent.EMPTY_PARAMS);
  assertEquals("{\"match_mapping_type\":\"string\",\"mapping\":{\"store\":true}}",builder.string());
  templateDef=new HashMap<>();
  templateDef.put("match","*name");
  templateDef.put("unmatch","first_name");
  templateDef.put("mapping",Collections.singletonMap("store",true));
  template=DynamicTemplate.parse("my_template",templateDef,Version.V_5_0_0);
  builder=JsonXContent.contentBuilder();
  template.toXContent(builder,ToXContent.EMPTY_PARAMS);
  assertEquals("{\"match\":\"*name\",\"unmatch\":\"first_name\",\"mapping\":{\"store\":true}}",builder.string());
  templateDef=new HashMap<>();
  templateDef.put("path_match","*name");
  templateDef.put("path_unmatch","first_name");
  templateDef.put("mapping",Collections.singletonMap("store",true));
  template=DynamicTemplate.parse("my_template",templateDef,Version.V_5_0_0);
  builder=JsonXContent.contentBuilder();
  template.toXContent(builder,ToXContent.EMPTY_PARAMS);
  assertEquals("{\"path_match\":\"*name\",\"path_unmatch\":\"first_name\",\"mapping\":{\"store\":true}}",builder.string());
  templateDef=new HashMap<>();
  templateDef.put("match","^a$");
  templateDef.put("match_pattern","regex");
  templateDef.put("mapping",Collections.singletonMap("store",true));
  template=DynamicTemplate.parse("my_template",templateDef,Version.V_5_0_0);
  builder=JsonXContent.contentBuilder();
  template.toXContent(builder,ToXContent.EMPTY_PARAMS);
  assertEquals("{\"match\":\"^a$\",\"match_pattern\":\"regex\",\"mapping\":{\"store\":true}}",builder.string());
}
