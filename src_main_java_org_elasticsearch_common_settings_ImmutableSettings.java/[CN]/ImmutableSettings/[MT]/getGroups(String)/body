{
  if (settingPrefix.charAt(settingPrefix.length() - 1) != '.') {
    settingPrefix=settingPrefix + ".";
  }
  Map<String,Map<String,String>> map=new LinkedHashMap<String,Map<String,String>>();
  for (  Object o : settings.keySet()) {
    String setting=(String)o;
    if (setting.startsWith(settingPrefix)) {
      String nameValue=setting.substring(settingPrefix.length());
      int dotIndex=nameValue.indexOf('.');
      if (dotIndex == -1) {
        throw new SettingsException("Failed to get setting group for [" + settingPrefix + "] setting prefix and setting ["+ setting+ "] because of a missing '.'");
      }
      String name=nameValue.substring(0,dotIndex);
      String value=nameValue.substring(dotIndex + 1);
      Map<String,String> groupSettings=map.get(name);
      if (groupSettings == null) {
        groupSettings=new LinkedHashMap<String,String>();
        map.put(name,groupSettings);
      }
      groupSettings.put(value,get(setting));
    }
  }
  Map<String,Settings> retVal=new LinkedHashMap<String,Settings>();
  for (  Map.Entry<String,Map<String,String>> entry : map.entrySet()) {
    retVal.put(entry.getKey(),new ImmutableSettings(Collections.unmodifiableMap(entry.getValue()),classLoader));
  }
  return Collections.unmodifiableMap(retVal);
}
