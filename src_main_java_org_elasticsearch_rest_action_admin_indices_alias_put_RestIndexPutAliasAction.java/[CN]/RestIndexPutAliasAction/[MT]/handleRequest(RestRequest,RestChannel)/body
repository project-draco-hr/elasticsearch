{
  String index=request.param("index");
  String alias=request.param("name");
  Map<String,Object> filter=null;
  String routing=null;
  String indexRouting=null;
  String searchRouting=null;
  if (request.hasContent()) {
    XContentParser parser=null;
    try {
      parser=XContentFactory.xContent(request.content()).createParser(request.content());
      XContentParser.Token token=parser.nextToken();
      if (token == null) {
        throw new ElasticSearchIllegalArgumentException("No index alias is specified");
      }
      String currentFieldName=null;
      while ((token=parser.nextToken()) != null) {
        if (token == XContentParser.Token.FIELD_NAME) {
          currentFieldName=parser.currentName();
        }
 else         if (token.isValue()) {
          if ("index".equals(currentFieldName)) {
            index=parser.text();
          }
 else           if ("alias".equals(currentFieldName)) {
            alias=parser.text();
          }
 else           if ("routing".equals(currentFieldName)) {
            routing=parser.textOrNull();
          }
 else           if ("indexRouting".equals(currentFieldName) || "index-routing".equals(currentFieldName) || "index_routing".equals(currentFieldName)) {
            indexRouting=parser.textOrNull();
          }
 else           if ("searchRouting".equals(currentFieldName) || "search-routing".equals(currentFieldName) || "search_routing".equals(currentFieldName)) {
            searchRouting=parser.textOrNull();
          }
        }
 else         if (token == XContentParser.Token.START_OBJECT) {
          if ("filter".equals(currentFieldName)) {
            filter=parser.mapOrdered();
          }
        }
      }
    }
 catch (    Throwable e) {
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.warn("Failed to send response",e1);
      }
      return;
    }
 finally {
      if (parser != null) {
        parser.close();
      }
    }
  }
  IndicesAliasesRequest indicesAliasesRequest=new IndicesAliasesRequest();
  indicesAliasesRequest.timeout(request.paramAsTime("timeout",timeValueSeconds(10)));
  AliasAction aliasAction=new AliasAction(AliasAction.Type.ADD,index,alias);
  indicesAliasesRequest.addAliasAction(aliasAction);
  if (routing != null) {
    aliasAction.routing(routing);
  }
  if (searchRouting != null) {
    aliasAction.searchRouting(searchRouting);
  }
  if (indexRouting != null) {
    aliasAction.indexRouting(indexRouting);
  }
  if (filter != null) {
    aliasAction.filter(filter);
  }
  client.admin().indices().aliases(indicesAliasesRequest,new ActionListener<IndicesAliasesResponse>(){
    @Override public void onResponse(    IndicesAliasesResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        builder.field(Fields.OK,true);
        builder.field(Fields.ACK,response.isAcknowledged());
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
