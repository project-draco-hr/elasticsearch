{
  createIndex("test-a");
  createIndex("test-b");
  ensureGreen();
  assertAcked(admin().indices().prepareAliases().addAliasAction(newAddAliasAction("test-a","alias-a0").routing("0")).addAliasAction(newAddAliasAction("test-a","alias-a1").routing("1")).addAliasAction(newAddAliasAction("test-b","alias-b0").routing("0")).addAliasAction(newAddAliasAction("test-b","alias-b1").routing("1")).addAliasAction(newAddAliasAction("test-a","alias-ab").searchRouting("0")).addAliasAction(newAddAliasAction("test-b","alias-ab").searchRouting("1")));
  ensureGreen();
  logger.info("--> indexing with id [1], and routing [0] using alias to test-a");
  client().prepareIndex("alias-a0","type1","1").setSource("field","value1").setRefresh(true).execute().actionGet();
  logger.info("--> verifying get with no routing, should not find anything");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareGet("test-a","type1","1").execute().actionGet().isExists(),equalTo(false));
  }
  logger.info("--> verifying get with routing, should find");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareGet("alias-a0","type1","1").execute().actionGet().isExists(),equalTo(true));
  }
  logger.info("--> indexing with id [0], and routing [1] using alias to test-b");
  client().prepareIndex("alias-b1","type1","1").setSource("field","value1").setRefresh(true).execute().actionGet();
  logger.info("--> verifying get with no routing, should not find anything");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareGet("test-a","type1","1").execute().actionGet().isExists(),equalTo(false));
  }
  logger.info("--> verifying get with routing, should find");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareGet("alias-b1","type1","1").execute().actionGet().isExists(),equalTo(true));
  }
  logger.info("--> search with alias-a1,alias-b0, should not find");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch("alias-a1","alias-b0").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(0L));
    assertThat(client().prepareSearch("alias-a1","alias-b0").setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(0L));
  }
  logger.info("--> search with alias-ab, should find two");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch("alias-ab").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
    assertThat(client().prepareSearch("alias-ab").setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
  }
  logger.info("--> search with alias-a0,alias-b1 should find two");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch("alias-a0","alias-b1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
    assertThat(client().prepareSearch("alias-a0","alias-b1").setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
  }
}
