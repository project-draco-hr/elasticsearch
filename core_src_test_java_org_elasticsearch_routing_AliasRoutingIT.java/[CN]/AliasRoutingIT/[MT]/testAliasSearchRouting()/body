{
  createIndex("test");
  ensureGreen();
  assertAcked(admin().indices().prepareAliases().addAliasAction(newAddAliasAction("test","alias")).addAliasAction(newAddAliasAction("test","alias0").routing("0")).addAliasAction(newAddAliasAction("test","alias1").routing("1")).addAliasAction(newAddAliasAction("test","alias01").searchRouting("0,1")));
  logger.info("--> indexing with id [1], and routing [0] using alias");
  client().prepareIndex("alias0","type1","1").setSource("field","value1").setRefreshPolicy(RefreshPolicy.IMMEDIATE).get();
  logger.info("--> verifying get with no routing, should not find anything");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareGet("test","type1","1").execute().actionGet().isExists(),equalTo(false));
  }
  logger.info("--> verifying get with routing, should find");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareGet("alias0","type1","1").execute().actionGet().isExists(),equalTo(true));
  }
  logger.info("--> search with no routing, should fine one");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch().setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
  }
  logger.info("--> search with wrong routing, should not find");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch().setRouting("1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(0L));
    assertThat(client().prepareSearch().setSize(0).setRouting("1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(0L));
    assertThat(client().prepareSearch("alias1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(0L));
    assertThat(client().prepareSearch("alias1").setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(0L));
  }
  logger.info("--> search with correct routing, should find");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch().setRouting("0").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
    assertThat(client().prepareSearch().setSize(0).setRouting("0").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
    assertThat(client().prepareSearch("alias0").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
    assertThat(client().prepareSearch("alias0").setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
  }
  logger.info("--> indexing with id [2], and routing [1] using alias");
  client().prepareIndex("alias1","type1","2").setSource("field","value1").setRefreshPolicy(RefreshPolicy.IMMEDIATE).get();
  logger.info("--> search with no routing, should fine two");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch().setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
    assertThat(client().prepareSearch().setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
  }
  logger.info("--> search with 0 routing, should find one");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch().setRouting("0").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
    assertThat(client().prepareSearch().setSize(0).setRouting("0").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
    assertThat(client().prepareSearch("alias0").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
    assertThat(client().prepareSearch("alias0").setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
  }
  logger.info("--> search with 1 routing, should find one");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch().setRouting("1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
    assertThat(client().prepareSearch().setSize(0).setRouting("1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
    assertThat(client().prepareSearch("alias1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
    assertThat(client().prepareSearch("alias1").setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(1L));
  }
  logger.info("--> search with 0,1 routings , should find two");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch().setRouting("0","1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
    assertThat(client().prepareSearch().setSize(0).setRouting("0","1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
    assertThat(client().prepareSearch("alias01").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
    assertThat(client().prepareSearch("alias01").setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
  }
  logger.info("--> search with two routing aliases , should find two");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch("alias0","alias1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
    assertThat(client().prepareSearch("alias0","alias1").setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
  }
  logger.info("--> search with alias0, alias1 and alias01, should find two");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch("alias0","alias1","alias01").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
    assertThat(client().prepareSearch("alias0","alias1","alias01").setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
  }
  logger.info("--> search with test, alias0 and alias1, should find two");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareSearch("test","alias0","alias1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
    assertThat(client().prepareSearch("test","alias0","alias1").setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(2L));
  }
}
