{
  URL url;
  try {
    url=new URL(baseUrl,path);
  }
 catch (  MalformedURLException e) {
    throw new ElasticSearchException("Cannot parse " + path,e);
  }
  HttpURLConnection urlConnection;
  try {
    urlConnection=(HttpURLConnection)url.openConnection();
    urlConnection.setRequestMethod(method);
    if (headers != null) {
      for (      Map.Entry<String,String> headerEntry : headers.entrySet()) {
        urlConnection.setRequestProperty(headerEntry.getKey(),headerEntry.getValue());
      }
    }
    urlConnection.connect();
  }
 catch (  IOException e) {
    throw new ElasticSearchException("",e);
  }
  int errorCode=-1;
  Map<String,List<String>> respHeaders=null;
  try {
    errorCode=urlConnection.getResponseCode();
    respHeaders=urlConnection.getHeaderFields();
    InputStream inputStream=urlConnection.getInputStream();
    String body=null;
    try {
      body=Streams.copyToString(new InputStreamReader(inputStream,Streams.UTF8));
    }
 catch (    IOException e1) {
      throw new ElasticSearchException("problem reading error stream",e1);
    }
    return new HttpClientResponse(body,errorCode,respHeaders,null);
  }
 catch (  IOException e) {
    InputStream errStream=urlConnection.getErrorStream();
    String body=null;
    try {
      body=Streams.copyToString(new InputStreamReader(errStream,Streams.UTF8));
    }
 catch (    IOException e1) {
      throw new ElasticSearchException("problem reading error stream",e1);
    }
    return new HttpClientResponse(body,errorCode,respHeaders,e);
  }
 finally {
    urlConnection.disconnect();
  }
}
