{
  String protocol=url.getProtocol();
  if (protocol == null) {
    throw new RepositoryException(repositoryName,"unknown url protocol from URL [" + url + "]");
  }
  for (  String supportedProtocol : supportedProtocols) {
    if (supportedProtocol.equals(protocol)) {
      try {
        if (URIPattern.match(urlWhiteList,url.toURI())) {
          return url;
        }
      }
 catch (      URISyntaxException ex) {
        logger.warn("cannot parse the specified url [{}]",url);
        throw new RepositoryException(repositoryName,"cannot parse the specified url [" + url + "]");
      }
      URL normalizedUrl=environment.resolveRepoURL(url);
      if (normalizedUrl == null) {
        logger.warn("The specified url [{}] doesn't start with any repository paths specified by the path.repo setting or by {} setting: [{}] ",url,ALLOWED_URLS_SETTING.getKey(),environment.repoFiles());
        throw new RepositoryException(repositoryName,"file url [" + url + "] doesn't match any of the locations specified by path.repo or "+ ALLOWED_URLS_SETTING.getKey());
      }
      return normalizedUrl;
    }
  }
  throw new RepositoryException(repositoryName,"unsupported url protocol [" + protocol + "] from URL ["+ url+ "]");
}
