{
  super(name.getName(),repositorySettings,indexShardRepository);
  URL url;
  String path=repositorySettings.settings().get("url",settings.get("repositories.url.url",settings.get("repositories.uri.url")));
  if (path == null) {
    throw new RepositoryException(name.name(),"missing url");
  }
 else {
    url=new URL(path);
  }
  supportedProtocols=settings.getAsArray(SUPPORTED_PROTOCOLS_SETTING,DEFAULT_SUPPORTED_PROTOCOLS);
  String[] urlWhiteList=settings.getAsArray(ALLOWED_URLS_SETTING,Strings.EMPTY_ARRAY);
  this.urlWhiteList=new URIPattern[urlWhiteList.length];
  for (int i=0; i < urlWhiteList.length; i++) {
    this.urlWhiteList[i]=new URIPattern(urlWhiteList[i]);
  }
  this.environment=environment;
  listDirectories=repositorySettings.settings().getAsBoolean("list_directories",settings.getAsBoolean("repositories.uri.list_directories",true));
  URL normalizedURL=checkURL(url);
  blobStore=new URLBlobStore(settings,normalizedURL);
  basePath=BlobPath.cleanPath();
}
