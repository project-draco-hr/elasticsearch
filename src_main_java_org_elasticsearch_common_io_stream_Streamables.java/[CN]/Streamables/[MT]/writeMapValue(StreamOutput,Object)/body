{
  if (value == null) {
    out.writeByte((byte)-1);
    return;
  }
  Class type=value.getClass();
  if (type == String.class) {
    out.writeByte((byte)0);
    out.writeUTF((String)value);
  }
 else   if (type == Integer.class) {
    out.writeByte((byte)1);
    out.writeInt((Integer)value);
  }
 else   if (type == Long.class) {
    out.writeByte((byte)2);
    out.writeLong((Long)value);
  }
 else   if (type == Float.class) {
    out.writeByte((byte)3);
    out.writeFloat((Float)value);
  }
 else   if (type == Double.class) {
    out.writeByte((byte)4);
    out.writeDouble((Double)value);
  }
 else   if (type == Boolean.class) {
    out.writeByte((byte)5);
    out.writeBoolean((Boolean)value);
  }
 else   if (type == byte[].class) {
    out.writeByte((byte)6);
    out.writeVInt(((byte[])value).length);
    out.writeBytes(((byte[])value));
  }
 else   if (value instanceof List) {
    out.writeByte((byte)7);
    List list=(List)value;
    out.writeVInt(list.size());
    for (    Object o : list) {
      writeMapValue(out,o);
    }
  }
 else   if (value instanceof Object[]) {
    out.writeByte((byte)8);
    Object[] list=(Object[])value;
    out.writeVInt(list.length);
    for (    Object o : list) {
      writeMapValue(out,o);
    }
  }
 else   if (value instanceof Map) {
    out.writeByte((byte)9);
    Map<String,Object> map=(Map<String,Object>)value;
    out.writeVInt(map.size());
    for (    Map.Entry<String,Object> entry : map.entrySet()) {
      out.writeUTF(entry.getKey());
      writeMapValue(out,entry.getValue());
    }
  }
 else {
    throw new IOException("Can't write type [" + type + "]");
  }
}
