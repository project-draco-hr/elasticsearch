{
  String cause=request.cause();
  if (cause.length() == 0) {
    cause="api";
  }
  final AtomicReference<PutIndexTemplateResponse> responseRef=new AtomicReference<PutIndexTemplateResponse>();
  final AtomicReference<Throwable> failureRef=new AtomicReference<Throwable>();
  final CountDownLatch latch=new CountDownLatch(1);
  indexTemplateService.putTemplate(new MetaDataIndexTemplateService.PutRequest(request.cause(),request.name()).template(request.template()).order(request.order()).settings(request.settings()).mappings(request.mappings()),new MetaDataIndexTemplateService.PutListener(){
    @Override public void onResponse(    MetaDataIndexTemplateService.PutResponse response){
      responseRef.set(new PutIndexTemplateResponse(response.acknowledged()));
      latch.countDown();
    }
    @Override public void onFailure(    Throwable t){
      failureRef.set(t);
      latch.countDown();
    }
  }
);
  try {
    latch.await();
  }
 catch (  InterruptedException e) {
    failureRef.set(e);
  }
  if (failureRef.get() != null) {
    if (failureRef.get() instanceof ElasticSearchException) {
      throw (ElasticSearchException)failureRef.get();
    }
 else {
      throw new ElasticSearchException(failureRef.get().getMessage(),failureRef.get());
    }
  }
  return responseRef.get();
}
