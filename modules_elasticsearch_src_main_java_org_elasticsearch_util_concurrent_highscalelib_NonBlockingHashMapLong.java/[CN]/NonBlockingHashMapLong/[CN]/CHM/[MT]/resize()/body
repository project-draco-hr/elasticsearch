{
  CHM newchm=_newchm;
  if (newchm != null)   return newchm;
  int oldlen=_keys.length;
  int sz=size();
  int newsz=sz;
  if (_nbhml._opt_for_space) {
    if (sz >= (oldlen >> 1))     newsz=oldlen << 1;
  }
 else {
    if (sz >= (oldlen >> 2)) {
      newsz=oldlen << 1;
      if (sz >= (oldlen >> 1))       newsz=oldlen << 2;
    }
  }
  long tm=System.currentTimeMillis();
  long q=0;
  if (newsz <= oldlen && tm <= _nbhml._last_resize_milli + 10000 && true)   newsz=oldlen << 1;
  if (newsz < oldlen)   newsz=oldlen;
  int log2;
  for (log2=MIN_SIZE_LOG; (1 << log2) < newsz; log2++)   ;
  long r=_resizers;
  while (!_resizerUpdater.compareAndSet(this,r,r + 1))   r=_resizers;
  int megs=((((1 << log2) << 1) + 4) << 3) >> 20;
  if (r >= 2 && megs > 0) {
    newchm=_newchm;
    if (newchm != null)     return newchm;
    try {
      Thread.sleep(8 * megs);
    }
 catch (    Exception e) {
    }
  }
  newchm=_newchm;
  if (newchm != null)   return newchm;
  newchm=new CHM(_nbhml,_size,log2);
  if (_newchm != null)   return _newchm;
  if (CAS_newchm(newchm)) {
  }
 else   newchm=_newchm;
  return newchm;
}
