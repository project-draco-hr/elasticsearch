{
  builder.startObject(Fields.INDICES);
  for (  IndexStatus indexStatus : indices().values()) {
    builder.startObject(indexStatus.index(),XContentBuilder.FieldCaseConversion.NONE);
    builder.startObject(Fields.INDEX);
    if (indexStatus.storeSize() != null) {
      builder.field(Fields.PRIMARY_SIZE,indexStatus.primaryStoreSize().toString());
      builder.field(Fields.PRIMARY_SIZE_IN_BYTES,indexStatus.primaryStoreSize().bytes());
      builder.field(Fields.SIZE,indexStatus.storeSize().toString());
      builder.field(Fields.SIZE_IN_BYTES,indexStatus.storeSize().bytes());
    }
    builder.endObject();
    if (indexStatus.translogOperations() != -1) {
      builder.startObject(Fields.TRANSLOG);
      builder.field(Fields.OPERATIONS,indexStatus.translogOperations());
      builder.endObject();
    }
    if (indexStatus.docs() != null) {
      builder.startObject(Fields.DOCS);
      builder.field(Fields.NUM_DOCS,indexStatus.docs().numDocs());
      builder.field(Fields.MAX_DOC,indexStatus.docs().maxDoc());
      builder.field(Fields.DELETED_DOCS,indexStatus.docs().deletedDocs());
      builder.endObject();
    }
    MergeStats mergeStats=indexStatus.mergeStats();
    if (mergeStats != null) {
      mergeStats.toXContent(builder,params);
    }
    RefreshStats refreshStats=indexStatus.refreshStats();
    if (refreshStats != null) {
      refreshStats.toXContent(builder,params);
    }
    builder.startObject(Fields.SHARDS);
    for (    IndexShardStatus indexShardStatus : indexStatus) {
      builder.startArray(Integer.toString(indexShardStatus.shardId().id()));
      for (      ShardStatus shardStatus : indexShardStatus) {
        builder.startObject();
        builder.startObject(Fields.ROUTING).field(Fields.STATE,shardStatus.shardRouting().state()).field(Fields.PRIMARY,shardStatus.shardRouting().primary()).field(Fields.NODE,shardStatus.shardRouting().currentNodeId()).field(Fields.RELOCATING_NODE,shardStatus.shardRouting().relocatingNodeId()).field(Fields.SHARD,shardStatus.shardRouting().shardId().id()).field(Fields.INDEX,shardStatus.shardRouting().shardId().index().name()).endObject();
        builder.field(Fields.STATE,shardStatus.state());
        if (shardStatus.storeSize() != null) {
          builder.startObject(Fields.INDEX);
          builder.field(Fields.SIZE,shardStatus.storeSize().toString());
          builder.field(Fields.SIZE_IN_BYTES,shardStatus.storeSize().bytes());
          builder.endObject();
        }
        if (shardStatus.translogId() != -1) {
          builder.startObject(Fields.TRANSLOG);
          builder.field(Fields.ID,shardStatus.translogId());
          builder.field(Fields.OPERATIONS,shardStatus.translogOperations());
          builder.endObject();
        }
        if (shardStatus.docs() != null) {
          builder.startObject(Fields.DOCS);
          builder.field(Fields.NUM_DOCS,shardStatus.docs().numDocs());
          builder.field(Fields.MAX_DOC,shardStatus.docs().maxDoc());
          builder.field(Fields.DELETED_DOCS,shardStatus.docs().deletedDocs());
          builder.endObject();
        }
        mergeStats=shardStatus.mergeStats();
        if (mergeStats != null) {
          mergeStats.toXContent(builder,params);
        }
        refreshStats=shardStatus.refreshStats();
        if (refreshStats != null) {
          refreshStats.toXContent(builder,params);
        }
        if (shardStatus.peerRecoveryStatus() != null) {
          PeerRecoveryStatus peerRecoveryStatus=shardStatus.peerRecoveryStatus();
          builder.startObject(Fields.PEER_RECOVERY);
          builder.field(Fields.STAGE,peerRecoveryStatus.stage());
          builder.field(Fields.START_TIME_IN_MILLIS,peerRecoveryStatus.startTime());
          builder.field(Fields.TIME,peerRecoveryStatus.time());
          builder.field(Fields.TIME_IN_MILLIS,peerRecoveryStatus.time().millis());
          builder.startObject(Fields.INDEX);
          builder.field(Fields.PROGRESS,peerRecoveryStatus.indexRecoveryProgress());
          builder.field(Fields.SIZE,peerRecoveryStatus.indexSize());
          builder.field(Fields.SIZE_IN_BYTES,peerRecoveryStatus.indexSize().bytes());
          builder.field(Fields.REUSED_SIZE,peerRecoveryStatus.reusedIndexSize());
          builder.field(Fields.REUSED_SIZE_IN_BYTES,peerRecoveryStatus.reusedIndexSize().bytes());
          builder.field(Fields.EXPECTED_RECOVERED_SIZE,peerRecoveryStatus.expectedRecoveredIndexSize());
          builder.field(Fields.EXPECTED_RECOVERED_SIZE_IN_BYTES,peerRecoveryStatus.expectedRecoveredIndexSize().bytes());
          builder.field(Fields.RECOVERED_SIZE,peerRecoveryStatus.recoveredIndexSize());
          builder.field(Fields.RECOVERED_SIZE_IN_BYTES,peerRecoveryStatus.recoveredIndexSize().bytes());
          builder.endObject();
          builder.startObject(Fields.TRANSLOG);
          builder.field(Fields.RECOVERED,peerRecoveryStatus.recoveredTranslogOperations());
          builder.endObject();
          builder.endObject();
        }
        if (shardStatus.gatewayRecoveryStatus() != null) {
          GatewayRecoveryStatus gatewayRecoveryStatus=shardStatus.gatewayRecoveryStatus();
          builder.startObject(Fields.GATEWAY_RECOVERY);
          builder.field(Fields.STAGE,gatewayRecoveryStatus.stage());
          builder.field(Fields.START_TIME_IN_MILLIS,gatewayRecoveryStatus.startTime());
          builder.field(Fields.TIME,gatewayRecoveryStatus.time());
          builder.field(Fields.TIME_IN_MILLIS,gatewayRecoveryStatus.time().millis());
          builder.startObject(Fields.INDEX);
          builder.field(Fields.PROGRESS,gatewayRecoveryStatus.indexRecoveryProgress());
          builder.field(Fields.SIZE,gatewayRecoveryStatus.indexSize());
          builder.field(Fields.SIZE,gatewayRecoveryStatus.indexSize().bytes());
          builder.field(Fields.REUSED_SIZE,gatewayRecoveryStatus.reusedIndexSize());
          builder.field(Fields.REUSED_SIZE_IN_BYTES,gatewayRecoveryStatus.reusedIndexSize().bytes());
          builder.field(Fields.EXPECTED_RECOVERED_SIZE,gatewayRecoveryStatus.expectedRecoveredIndexSize());
          builder.field(Fields.EXPECTED_RECOVERED_SIZE_IN_BYTES,gatewayRecoveryStatus.expectedRecoveredIndexSize().bytes());
          builder.field(Fields.RECOVERED_SIZE,gatewayRecoveryStatus.recoveredIndexSize());
          builder.field(Fields.RECOVERED_SIZE_IN_BYTES,gatewayRecoveryStatus.recoveredIndexSize().bytes());
          builder.endObject();
          builder.startObject(Fields.TRANSLOG);
          builder.field(Fields.RECOVERED,gatewayRecoveryStatus.recoveredTranslogOperations());
          builder.endObject();
          builder.endObject();
        }
        if (shardStatus.gatewaySnapshotStatus() != null) {
          GatewaySnapshotStatus gatewaySnapshotStatus=shardStatus.gatewaySnapshotStatus();
          builder.startObject(Fields.GATEWAY_SNAPSHOT);
          builder.field(Fields.STAGE,gatewaySnapshotStatus.stage());
          builder.field(Fields.START_TIME_IN_MILLIS,gatewaySnapshotStatus.startTime());
          builder.field(Fields.TIME,gatewaySnapshotStatus.time());
          builder.field(Fields.TIME_IN_MILLIS,gatewaySnapshotStatus.time().millis());
          builder.startObject(Fields.INDEX);
          builder.field(Fields.SIZE,gatewaySnapshotStatus.indexSize());
          builder.field(Fields.SIZE_IN_BYTES,gatewaySnapshotStatus.indexSize().bytes());
          builder.endObject();
          builder.startObject(Fields.TRANSLOG);
          builder.field(Fields.EXPECTED_OPERATIONS,gatewaySnapshotStatus.expectedNumberOfOperations());
          builder.endObject();
          builder.endObject();
        }
        builder.endObject();
      }
      builder.endArray();
    }
    builder.endObject();
    builder.endObject();
  }
  builder.endObject();
  return builder;
}
