{
  Set<SignificanceHeuristicParser> parsers=new HashSet<>();
  parsers.add(new JLHScore.JLHScoreParser());
  parsers.add(new MutualInformation.MutualInformationParser());
  parsers.add(new GND.GNDParser());
  parsers.add(new ChiSquare.ChiSquareParser());
  SignificanceHeuristicParserMapper heuristicParserMapper=new SignificanceHeuristicParserMapper(parsers);
  SearchContext searchContext=new SignificantTermsTestSearchContext();
  assertTrue(parseFromString(heuristicParserMapper,searchContext,"\"jlh\":{}") instanceof JLHScore);
  assertTrue(parseFromString(heuristicParserMapper,searchContext,"\"gnd\":{}") instanceof GND);
  boolean includeNegatives=randomBoolean();
  boolean backgroundIsSuperset=randomBoolean();
  assertThat(parseFromString(heuristicParserMapper,searchContext,"\"mutual_information\":{\"include_negatives\": " + includeNegatives + ", \"background_is_superset\":"+ backgroundIsSuperset+ "}"),equalTo((SignificanceHeuristic)(new MutualInformation(includeNegatives,backgroundIsSuperset))));
  assertThat(parseFromString(heuristicParserMapper,searchContext,"\"chi_square\":{\"include_negatives\": " + includeNegatives + ", \"background_is_superset\":"+ backgroundIsSuperset+ "}"),equalTo((SignificanceHeuristic)(new ChiSquare(includeNegatives,backgroundIsSuperset))));
  assertTrue(parseFromBuilder(heuristicParserMapper,searchContext,new JLHScore.JLHScoreBuilder()) instanceof JLHScore);
  assertTrue(parseFromBuilder(heuristicParserMapper,searchContext,new GND.GNDBuilder(backgroundIsSuperset)) instanceof GND);
  assertThat(parseFromBuilder(heuristicParserMapper,searchContext,new MutualInformation.MutualInformationBuilder(includeNegatives,backgroundIsSuperset)),equalTo((SignificanceHeuristic)new MutualInformation(includeNegatives,backgroundIsSuperset)));
  assertThat(parseFromBuilder(heuristicParserMapper,searchContext,new ChiSquare.ChiSquareBuilder(includeNegatives,backgroundIsSuperset)),equalTo((SignificanceHeuristic)new ChiSquare(includeNegatives,backgroundIsSuperset)));
  String faultyHeuristicdefinition="\"mutual_information\":{\"include_negatives\": false, \"some_unknown_field\": false}";
  String expectedError="unknown field [some_unknown_field]";
  checkParseException(heuristicParserMapper,searchContext,faultyHeuristicdefinition,expectedError);
  faultyHeuristicdefinition="\"chi_square\":{\"unknown_field\": true}";
  expectedError="unknown field [unknown_field]";
  checkParseException(heuristicParserMapper,searchContext,faultyHeuristicdefinition,expectedError);
  faultyHeuristicdefinition="\"jlh\":{\"unknown_field\": true}";
  expectedError="expected an empty object, but found ";
  checkParseException(heuristicParserMapper,searchContext,faultyHeuristicdefinition,expectedError);
  faultyHeuristicdefinition="\"gnd\":{\"unknown_field\": true}";
  expectedError="unknown field [unknown_field]";
  checkParseException(heuristicParserMapper,searchContext,faultyHeuristicdefinition,expectedError);
}
