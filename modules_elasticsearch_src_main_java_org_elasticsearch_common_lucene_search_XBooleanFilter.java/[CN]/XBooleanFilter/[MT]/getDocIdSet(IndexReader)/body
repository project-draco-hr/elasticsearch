{
  OpenBitSetDISI res=null;
  if (shouldFilters != null) {
    for (int i=0; i < shouldFilters.size(); i++) {
      if (res == null) {
        res=new OpenBitSetDISI(getDISI(shouldFilters,i,reader),reader.maxDoc());
      }
 else {
        DocIdSet dis=shouldFilters.get(i).getDocIdSet(reader);
        if (dis instanceof OpenBitSet) {
          res.or((OpenBitSet)dis);
        }
 else         if (dis instanceof OpenBitDocSet) {
          res.or(((OpenBitDocSet)dis).set());
        }
 else {
          res.inPlaceOr(getDISI(shouldFilters,i,reader));
        }
      }
    }
  }
  if (notFilters != null) {
    for (int i=0; i < notFilters.size(); i++) {
      if (res == null) {
        res=new OpenBitSetDISI(getDISI(notFilters,i,reader),reader.maxDoc());
        res.flip(0,reader.maxDoc());
      }
 else {
        DocIdSet dis=notFilters.get(i).getDocIdSet(reader);
        if (dis instanceof OpenBitSet) {
          res.andNot((OpenBitSet)dis);
        }
 else         if (dis instanceof OpenBitDocSet) {
          res.andNot(((OpenBitDocSet)dis).set());
        }
 else {
          res.inPlaceNot(getDISI(notFilters,i,reader));
        }
      }
    }
  }
  if (mustFilters != null) {
    for (int i=0; i < mustFilters.size(); i++) {
      if (res == null) {
        res=new OpenBitSetDISI(getDISI(mustFilters,i,reader),reader.maxDoc());
      }
 else {
        DocIdSet dis=mustFilters.get(i).getDocIdSet(reader);
        if (dis instanceof OpenBitSet) {
          res.and((OpenBitSet)dis);
        }
 else         if (dis instanceof OpenBitDocSet) {
          res.and(((OpenBitDocSet)dis).set());
        }
 else {
          res.inPlaceAnd(getDISI(mustFilters,i,reader));
        }
      }
    }
  }
  if (res != null)   return new OpenBitDocSet(res);
  return DocSet.EMPTY_DOC_SET;
}
