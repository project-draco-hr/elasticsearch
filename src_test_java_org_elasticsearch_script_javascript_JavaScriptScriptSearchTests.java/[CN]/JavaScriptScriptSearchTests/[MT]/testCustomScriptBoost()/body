{
  createIndex("test");
  index("test","type1","1",jsonBuilder().startObject().field("test","value beck").field("num1",1.0f).endObject());
  index("test","type1","2",jsonBuilder().startObject().field("test","value beck").field("num1",2.0f).endObject());
  refresh();
  logger.info("--- QUERY_THEN_FETCH");
  logger.info(" --> running doc['num1'].value");
  SearchResponse response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().explain(true).query(functionScoreQuery(termQuery("test","value")).add(ScoreFunctionBuilders.scriptFunction("doc['num1'].value").lang("js"))))).actionGet();
  assertThat("Failures " + Arrays.toString(response.getShardFailures()),response.getShardFailures().length,equalTo(0));
  assertThat(response.getHits().totalHits(),equalTo(2l));
  logger.info(" --> Hit[0] {} Explanation {}",response.getHits().getAt(0).id(),response.getHits().getAt(0).explanation());
  logger.info(" --> Hit[1] {} Explanation {}",response.getHits().getAt(1).id(),response.getHits().getAt(1).explanation());
  assertThat(response.getHits().getAt(0).id(),equalTo("2"));
  assertThat(response.getHits().getAt(1).id(),equalTo("1"));
  logger.info(" --> running -doc['num1'].value");
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().explain(true).query(functionScoreQuery(termQuery("test","value")).add(ScoreFunctionBuilders.scriptFunction("-doc['num1'].value").lang("js"))))).actionGet();
  assertThat("Failures " + Arrays.toString(response.getShardFailures()),response.getShardFailures().length,equalTo(0));
  assertThat(response.getHits().totalHits(),equalTo(2l));
  logger.info(" --> Hit[0] {} Explanation {}",response.getHits().getAt(0).id(),response.getHits().getAt(0).explanation());
  logger.info(" --> Hit[1] {} Explanation {}",response.getHits().getAt(1).id(),response.getHits().getAt(1).explanation());
  assertThat(response.getHits().getAt(0).id(),equalTo("1"));
  assertThat(response.getHits().getAt(1).id(),equalTo("2"));
  logger.info(" --> running pow(doc['num1'].value, 2)");
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().explain(true).query(functionScoreQuery(termQuery("test","value")).add(ScoreFunctionBuilders.scriptFunction("Math.pow(doc['num1'].value, 2)").lang("js"))))).actionGet();
  assertThat("Failures " + Arrays.toString(response.getShardFailures()),response.getShardFailures().length,equalTo(0));
  assertThat(response.getHits().totalHits(),equalTo(2l));
  logger.info(" --> Hit[0] {} Explanation {}",response.getHits().getAt(0).id(),response.getHits().getAt(0).explanation());
  logger.info(" --> Hit[1] {} Explanation {}",response.getHits().getAt(1).id(),response.getHits().getAt(1).explanation());
  assertThat(response.getHits().getAt(0).id(),equalTo("2"));
  assertThat(response.getHits().getAt(1).id(),equalTo("1"));
  logger.info(" --> running max(doc['num1'].value, 1)");
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().explain(true).query(functionScoreQuery(termQuery("test","value")).add(ScoreFunctionBuilders.scriptFunction("Math.max(doc['num1'].value, 1)").lang("js"))))).actionGet();
  assertThat("Failures " + Arrays.toString(response.getShardFailures()),response.getShardFailures().length,equalTo(0));
  assertThat(response.getHits().totalHits(),equalTo(2l));
  logger.info(" --> Hit[0] {} Explanation {}",response.getHits().getAt(0).id(),response.getHits().getAt(0).explanation());
  logger.info(" --> Hit[1] {} Explanation {}",response.getHits().getAt(1).id(),response.getHits().getAt(1).explanation());
  assertThat(response.getHits().getAt(0).id(),equalTo("2"));
  assertThat(response.getHits().getAt(1).id(),equalTo("1"));
  logger.info(" --> running doc['num1'].value * _score");
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().explain(true).query(functionScoreQuery(termQuery("test","value")).add(ScoreFunctionBuilders.scriptFunction("doc['num1'].value * _score").lang("js"))))).actionGet();
  assertThat("Failures " + Arrays.toString(response.getShardFailures()),response.getShardFailures().length,equalTo(0));
  assertThat(response.getHits().totalHits(),equalTo(2l));
  logger.info(" --> Hit[0] {} Explanation {}",response.getHits().getAt(0).id(),response.getHits().getAt(0).explanation());
  logger.info(" --> Hit[1] {} Explanation {}",response.getHits().getAt(1).id(),response.getHits().getAt(1).explanation());
  assertThat(response.getHits().getAt(0).id(),equalTo("2"));
  assertThat(response.getHits().getAt(1).id(),equalTo("1"));
  logger.info(" --> running param1 * param2 * _score");
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().explain(true).query(functionScoreQuery(termQuery("test","value")).add(ScoreFunctionBuilders.scriptFunction("param1 * param2 * _score").param("param1",2).param("param2",2).lang("js"))))).actionGet();
  assertThat("Failures " + Arrays.toString(response.getShardFailures()),response.getShardFailures().length,equalTo(0));
  assertThat(response.getHits().totalHits(),equalTo(2l));
  logger.info(" --> Hit[0] {} Explanation {}",response.getHits().getAt(0).id(),response.getHits().getAt(0).explanation());
  logger.info(" --> Hit[1] {} Explanation {}",response.getHits().getAt(1).id(),response.getHits().getAt(1).explanation());
}
