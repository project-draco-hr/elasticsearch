{
  super(facetName);
  this.fieldDataCache=context.fieldDataCache();
  this.size=size;
  this.comparatorType=comparatorType;
  this.numberOfShards=context.numberOfShards();
  MapperService.SmartNameFieldMappers smartMappers=context.smartFieldMappers(fieldName);
  if (smartMappers == null || !smartMappers.hasMapper()) {
    this.indexFieldName=fieldName;
    this.fieldDataType=FieldDataType.DefaultTypes.STRING;
  }
 else {
    if (smartMappers.hasDocMapper()) {
      setFilter(context.filterCache().cache(smartMappers.docMapper().typeFilter()));
    }
    this.indexFieldName=smartMappers.mapper().names().indexName();
    this.fieldDataType=smartMappers.mapper().fieldDataType();
  }
  if (script != null) {
    this.script=context.scriptService().search(context.lookup(),scriptLang,script,params);
  }
 else {
    this.script=null;
  }
  if (excluded.isEmpty() && pattern == null && this.script == null) {
    aggregator=new StaticAggregatorValueProc(CacheRecycler.<BytesRef>popObjectIntMap());
  }
 else {
    aggregator=new AggregatorValueProc(CacheRecycler.<BytesRef>popObjectIntMap(),excluded,pattern,this.script);
  }
  if (allTerms) {
    try {
      for (      AtomicReaderContext readerContext : context.searcher().getTopReaderContext().leaves()) {
        FieldData fieldData=fieldDataCache.cache(fieldDataType,readerContext.reader(),indexFieldName);
        fieldData.forEachValue(aggregator);
      }
    }
 catch (    Exception e) {
      throw new FacetPhaseExecutionException(facetName,"failed to load all terms",e);
    }
  }
}
