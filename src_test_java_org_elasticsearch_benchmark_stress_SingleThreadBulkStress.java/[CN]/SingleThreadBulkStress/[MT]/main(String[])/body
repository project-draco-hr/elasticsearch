{
  Random random=new Random();
  Settings settings=settingsBuilder().put("index.refresh_interval","1s").put("index.merge.async",true).put("index.translog.flush_threshold_ops",5000).put("gateway.type","none").put(SETTING_NUMBER_OF_SHARDS,1).put(SETTING_NUMBER_OF_REPLICAS,1).build();
  Node[] nodes=new Node[1];
  for (int i=0; i < nodes.length; i++) {
    nodes[i]=nodeBuilder().settings(settingsBuilder().put(settings).put("name","node" + i)).node();
  }
  Node client=nodes[0];
  Client client1=client.client();
  Thread.sleep(1000);
  client1.admin().indices().prepareCreate("test").setSettings(settings).addMapping("type1",XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("_source").field("enabled",false).endObject().startObject("_all").field("enabled",false).endObject().startObject("_type").field("index","no").endObject().startObject("_id").field("index","no").endObject().startObject("properties").startObject("field").field("type","string").field("index","not_analyzed").field("omit_norms",true).endObject().endObject().endObject().endObject()).execute().actionGet();
  Thread.sleep(5000);
  StopWatch stopWatch=new StopWatch().start();
  long COUNT=SizeValue.parseSizeValue("2m").singles();
  int BATCH=500;
  System.out.println("Indexing [" + COUNT + "] ...");
  long ITERS=COUNT / BATCH;
  long i=1;
  int counter=0;
  for (; i <= ITERS; i++) {
    BulkRequestBuilder request=client1.prepareBulk();
    for (int j=0; j < BATCH; j++) {
      counter++;
      request.add(Requests.indexRequest("test").type("type1").id(Integer.toString(counter)).source(source(Integer.toString(counter),"test" + counter)));
    }
    BulkResponse response=request.execute().actionGet();
    if (response.hasFailures()) {
      System.err.println("failures...");
    }
    if (((i * BATCH) % 10000) == 0) {
      System.out.println("Indexed " + (i * BATCH) + " took "+ stopWatch.stop().lastTaskTime());
      stopWatch.start();
    }
  }
  System.out.println("Indexing took " + stopWatch.totalTime() + ", TPS "+ (((double)COUNT) / stopWatch.totalTime().secondsFrac()));
  client.client().admin().indices().prepareRefresh().execute().actionGet();
  System.out.println("Count: " + client.client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().count());
  client.close();
  for (  Node node : nodes) {
    node.close();
  }
}
