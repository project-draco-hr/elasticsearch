{
  if (entries.isEmpty()) {
    return new InternalTermsStatsStringFacet(facetName,comparatorType,size,ImmutableList.<InternalTermsStatsStringFacet.StringEntry>of(),missing);
  }
  if (size == 0) {
    return new InternalTermsStatsStringFacet(facetName,comparatorType,0,entries.values(),missing);
  }
  TreeSet<InternalTermsStatsStringFacet.StringEntry> ordered=new BoundedTreeSet<InternalTermsStatsStringFacet.StringEntry>(comparatorType.comparator(),size * numberOfShards);
  ordered.addAll(entries.values());
  pushFacets(entries);
  return new InternalTermsStatsStringFacet(facetName,comparatorType,size,ordered,missing);
}
