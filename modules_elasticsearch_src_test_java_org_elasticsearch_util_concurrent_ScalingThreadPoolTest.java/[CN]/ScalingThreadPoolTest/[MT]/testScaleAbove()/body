{
  final int min=2;
  final int max=4;
  final int ntasks=16;
  final ThreadBarrier barrier=new ThreadBarrier(max + 1);
  ThreadPoolExecutor pool=(ThreadPoolExecutor)DynamicExecutors.newScalingThreadPool(min,max,Long.MAX_VALUE);
  assertThat("Min property",pool.getCorePoolSize(),equalTo(min));
  assertThat("Max property",pool.getMaximumPoolSize(),equalTo(max));
  for (int i=0; i < ntasks; ++i) {
    final int id=i;
    pool.execute(new Runnable(){
      public void run(){
        try {
          if (id < max) {
            barrier.await();
          }
        }
 catch (        Throwable e) {
          barrier.reset(e);
        }
      }
    }
);
    Thread.sleep(100);
  }
  assertThat("wrong number of pooled tasks",pool.getQueue().size(),equalTo(ntasks - max));
  barrier.await();
  Thread.sleep(1000);
  assertThat("tasks not complete",pool.getCompletedTaskCount(),equalTo((long)ntasks));
  assertThat("didn't scale above core pool size. (" + pool.getLargestPoolSize() + ")",pool.getLargestPoolSize(),greaterThan(min));
  assertThat("Largest pool size exceeds max. (" + pool.getLargestPoolSize() + ")",pool.getLargestPoolSize(),lessThanOrEqualTo(max));
}
