{
  List<SearchHit> hits=new ArrayList<>();
  hits.add(new InternalSearchHit(0,"foo",new StringText("type"),Collections.emptyMap()).sourceRef(new BytesArray("{\"description\": \"_description\"}")));
  hits.add(new InternalSearchHit(0,"bar",new StringText("type"),Collections.emptyMap()).sourceRef(new BytesArray("{\"description\": \"_description\"}")));
  hits.add(new InternalSearchHit(0,"foobar",new StringText("type"),Collections.emptyMap()).sourceRef(new BytesArray("{\"description\": \"_description\"}")));
  when(client.readAllPipelines()).thenReturn(hits);
  store.updatePipelines();
  List<PipelineStore.PipelineReference> result=store.getReference("foo");
  assertThat(result.size(),equalTo(1));
  assertThat(result.get(0).getPipeline().getId(),equalTo("foo"));
  result=store.getReference("foo*");
  Collections.sort(result,new Comparator<PipelineStore.PipelineReference>(){
    @Override public int compare(    PipelineStore.PipelineReference first,    PipelineStore.PipelineReference second){
      return first.getPipeline().getId().compareTo(second.getPipeline().getId());
    }
  }
);
  assertThat(result.size(),equalTo(2));
  assertThat(result.get(0).getPipeline().getId(),equalTo("foo"));
  assertThat(result.get(1).getPipeline().getId(),equalTo("foobar"));
  result=store.getReference("bar*");
  assertThat(result.size(),equalTo(1));
  assertThat(result.get(0).getPipeline().getId(),equalTo("bar"));
  result=store.getReference("*");
  Collections.sort(result,new Comparator<PipelineStore.PipelineReference>(){
    @Override public int compare(    PipelineStore.PipelineReference first,    PipelineStore.PipelineReference second){
      return first.getPipeline().getId().compareTo(second.getPipeline().getId());
    }
  }
);
  assertThat(result.size(),equalTo(3));
  assertThat(result.get(0).getPipeline().getId(),equalTo("bar"));
  assertThat(result.get(1).getPipeline().getId(),equalTo("foo"));
  assertThat(result.get(2).getPipeline().getId(),equalTo("foobar"));
  result=store.getReference("foo","bar");
  assertThat(result.size(),equalTo(2));
  assertThat(result.get(0).getPipeline().getId(),equalTo("foo"));
  assertThat(result.get(1).getPipeline().getId(),equalTo("bar"));
}
