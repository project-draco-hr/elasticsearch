{
  double inverseSum=0;
  int zeros=0;
  for (long i=bucket << p, end=i + m; i < end; ++i) {
    final int runLen=runLens.get(i);
    inverseSum+=1. / (1L << runLen);
    if (runLen == 0) {
      ++zeros;
    }
  }
  double e1=alphaMM / inverseSum;
  double e2=e1 <= 5 * m ? e1 - estimateBias(e1) : e1;
  long h;
  if (zeros != 0) {
    h=linearCounting(m,zeros);
  }
 else {
    h=Math.round(e2);
  }
  if (h <= threshold()) {
    return h;
  }
 else {
    return Math.round(e2);
  }
}
