{
  final String[] names=Strings.splitStringByCommaToArray(request.param("name"));
  GetIndexTemplatesRequest getIndexTemplatesRequest=new GetIndexTemplatesRequest(names);
  getIndexTemplatesRequest.listenerThreaded(false);
  client.admin().indices().getTemplates(getIndexTemplatesRequest,new ActionListener<GetIndexTemplatesResponse>(){
    @Override public void onResponse(    GetIndexTemplatesResponse getIndexTemplatesResponse){
      try {
        boolean templateExists=getIndexTemplatesResponse.getIndexTemplates().size() > 0;
        if (!templateExists) {
          channel.sendResponse(new StringRestResponse(NOT_FOUND));
        }
 else {
          Map<String,String> paramsMap=Maps.newHashMap();
          paramsMap.put("reduce_mappings","true");
          ToXContent.Params params=new ToXContent.DelegatingMapParams(paramsMap,request);
          XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
          builder.startObject();
          for (          IndexTemplateMetaData indexTemplateMetaData : getIndexTemplatesResponse.getIndexTemplates()) {
            IndexTemplateMetaData.Builder.toXContent(indexTemplateMetaData,builder,params);
          }
          builder.endObject();
          channel.sendResponse(new XContentRestResponse(request,OK,builder));
        }
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new StringRestResponse(ExceptionsHelper.status(e)));
      }
 catch (      Exception e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
