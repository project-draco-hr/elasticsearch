{
  ClusterStateRequest clusterStateRequest=Requests.clusterStateRequest().filterRoutingTable(true).filterNodes(true).filteredIndexTemplates(request.param("name")).filterOutIndices();
  clusterStateRequest.listenerThreaded(false);
  client.admin().cluster().state(clusterStateRequest,new ActionListener<ClusterStateResponse>(){
    @Override public void onResponse(    ClusterStateResponse response){
      Map<String,String> paramsMap=Maps.newHashMap();
      paramsMap.put("reduce_mappings","true");
      ToXContent.Params params=new ToXContent.DelegatingMapParams(paramsMap,request);
      try {
        MetaData metaData=response.getState().metaData();
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        for (        IndexTemplateMetaData indexMetaData : metaData.templates().values()) {
          IndexTemplateMetaData.Builder.toXContent(indexMetaData,builder,params);
        }
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
