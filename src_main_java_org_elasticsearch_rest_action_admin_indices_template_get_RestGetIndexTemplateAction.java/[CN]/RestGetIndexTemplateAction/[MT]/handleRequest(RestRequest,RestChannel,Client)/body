{
  final String[] names=Strings.splitStringByCommaToArray(request.param("name"));
  GetIndexTemplatesRequest getIndexTemplatesRequest=new GetIndexTemplatesRequest(names);
  getIndexTemplatesRequest.local(request.paramAsBoolean("local",getIndexTemplatesRequest.local()));
  getIndexTemplatesRequest.masterNodeTimeout(request.paramAsTime("master_timeout",getIndexTemplatesRequest.masterNodeTimeout()));
  getIndexTemplatesRequest.listenerThreaded(false);
  final boolean implicitAll=getIndexTemplatesRequest.names().length == 0;
  client.admin().indices().getTemplates(getIndexTemplatesRequest,new RestBuilderListener<GetIndexTemplatesResponse>(channel){
    @Override public RestResponse buildResponse(    GetIndexTemplatesResponse getIndexTemplatesResponse,    XContentBuilder builder) throws Exception {
      boolean templateExists=getIndexTemplatesResponse.getIndexTemplates().size() > 0;
      Map<String,String> paramsMap=Maps.newHashMap();
      paramsMap.put("reduce_mappings","true");
      ToXContent.Params params=new ToXContent.DelegatingMapParams(paramsMap,request);
      builder.startObject();
      for (      IndexTemplateMetaData indexTemplateMetaData : getIndexTemplatesResponse.getIndexTemplates()) {
        IndexTemplateMetaData.Builder.toXContent(indexTemplateMetaData,builder,params);
      }
      builder.endObject();
      RestStatus restStatus=(templateExists || implicitAll) ? OK : NOT_FOUND;
      return new BytesRestResponse(restStatus,builder);
    }
  }
);
}
