{
  Table table=this.getTableWithHeaders();
  table.startRow();
  table.addCell("foo1");
  table.addCell("bar1");
  table.endRow();
  table.startRow();
  table.addCell("foo2");
  table.addCell("bar2");
  table.endRow();
  List<Table.Cell> headers=table.getHeaders();
  assertEquals(2,headers.size());
  assertEquals("foo",headers.get(0).value.toString());
  assertEquals(2,headers.get(0).attr.size());
  assertEquals("f",headers.get(0).attr.get("alias"));
  assertEquals("foo",headers.get(0).attr.get("desc"));
  assertEquals("bar",headers.get(1).value.toString());
  assertEquals(2,headers.get(1).attr.size());
  assertEquals("b",headers.get(1).attr.get("alias"));
  assertEquals("bar",headers.get(1).attr.get("desc"));
  List<List<Table.Cell>> rows=table.getRows();
  assertEquals(2,rows.size());
  List<Table.Cell> row=rows.get(0);
  assertEquals("foo1",row.get(0).value.toString());
  assertEquals("bar1",row.get(1).value.toString());
  row=rows.get(1);
  assertEquals("foo2",row.get(0).value.toString());
  assertEquals("bar2",row.get(1).value.toString());
  Map<String,List<Table.Cell>> map=table.getAsMap();
  assertEquals(2,map.size());
  row=map.get("foo");
  assertEquals("foo1",row.get(0).value.toString());
  assertEquals("foo2",row.get(1).value.toString());
  row=map.get("bar");
  assertEquals("bar1",row.get(0).value.toString());
  assertEquals("bar2",row.get(1).value.toString());
  Map<String,Table.Cell> headerMap=table.getHeaderMap();
  assertEquals(2,headerMap.size());
  Table.Cell cell=headerMap.get("foo");
  assertEquals("foo",cell.value.toString());
  cell=headerMap.get("bar");
  assertEquals("bar",cell.value.toString());
  cell=table.findHeaderByName("foo");
  assertEquals("foo",cell.value.toString());
  cell=table.findHeaderByName("missing");
  assertNull(cell);
}
