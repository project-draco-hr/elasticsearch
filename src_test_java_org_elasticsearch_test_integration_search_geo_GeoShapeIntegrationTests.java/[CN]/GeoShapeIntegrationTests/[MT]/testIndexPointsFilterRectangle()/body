{
  client().admin().indices().prepareDelete().execute().actionGet();
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("location").field("type","geo_shape").field("tree","quadtree").endObject().endObject().endObject().endObject().string();
  client().admin().indices().prepareCreate("test").addMapping("type1",mapping).execute().actionGet();
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();
  client().prepareIndex("test","type1","1").setSource(jsonBuilder().startObject().field("name","Document 1").startObject("location").field("type","point").startArray("coordinates").value(-30).value(-30).endArray().endObject().endObject()).execute().actionGet();
  client().prepareIndex("test","type1","2").setSource(jsonBuilder().startObject().field("name","Document 2").startObject("location").field("type","point").startArray("coordinates").value(-45).value(-50).endArray().endObject().endObject()).execute().actionGet();
  client().admin().indices().prepareRefresh().execute().actionGet();
  Shape shape=newRectangle().topLeft(-45,45).bottomRight(45,-45).build();
  SearchResponse searchResponse=client().prepareSearch().setQuery(filteredQuery(matchAllQuery(),geoIntersectionFilter("location",shape))).execute().actionGet();
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(1l));
  assertThat(searchResponse.getHits().hits().length,equalTo(1));
  assertThat(searchResponse.getHits().getAt(0).id(),equalTo("1"));
  searchResponse=client().prepareSearch().setQuery(geoShapeQuery("location",shape)).execute().actionGet();
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(1l));
  assertThat(searchResponse.getHits().hits().length,equalTo(1));
  assertThat(searchResponse.getHits().getAt(0).id(),equalTo("1"));
}
