{
  this.id=id;
  from=in.readVInt();
  size=in.readVInt();
  topDocs=readTopDocs(in);
  if (in.readBoolean()) {
    aggregations=InternalAggregations.readAggregations(in);
  }
  if (in.readBoolean()) {
    int size=in.readVInt();
    List<SiblingPipelineAggregator> pipelineAggregators=new ArrayList<>(size);
    for (int i=0; i < size; i++) {
      BytesReference type=in.readBytesReference();
      PipelineAggregator pipelineAggregator=PipelineAggregatorStreams.stream(type).readResult(in);
      pipelineAggregators.add((SiblingPipelineAggregator)pipelineAggregator);
    }
    this.pipelineAggregators=pipelineAggregators;
  }
  if (in.readBoolean()) {
    suggest=Suggest.readSuggest(Suggest.Fields.SUGGEST,in);
  }
  searchTimedOut=in.readBoolean();
  terminatedEarly=in.readOptionalBoolean();
  if (in.getVersion().onOrAfter(Version.V_2_2_0) && in.readBoolean()) {
    int profileSize=in.readVInt();
    profileShardResults=new ArrayList<>(profileSize);
    for (int i=0; i < profileSize; i++) {
      ProfileShardResult result=new ProfileShardResult(in);
      profileShardResults.add(result);
    }
  }
}
