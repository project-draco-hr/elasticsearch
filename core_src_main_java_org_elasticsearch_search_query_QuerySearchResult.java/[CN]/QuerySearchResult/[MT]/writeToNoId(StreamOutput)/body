{
  out.writeVInt(from);
  out.writeVInt(size);
  if (sortValueFormats == null) {
    out.writeVInt(0);
  }
 else {
    out.writeVInt(1 + sortValueFormats.length);
    for (int i=0; i < sortValueFormats.length; ++i) {
      out.writeNamedWriteable(sortValueFormats[i]);
    }
  }
  writeTopDocs(out,topDocs);
  if (aggregations == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    aggregations.writeTo(out);
  }
  if (pipelineAggregators == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    out.writeVInt(pipelineAggregators.size());
    for (    PipelineAggregator pipelineAggregator : pipelineAggregators) {
      out.writeBytesReference(pipelineAggregator.type().stream());
      pipelineAggregator.writeTo(out);
    }
  }
  if (suggest == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    suggest.writeTo(out);
  }
  out.writeBoolean(searchTimedOut);
  out.writeOptionalBoolean(terminatedEarly);
  if (out.getVersion().onOrAfter(Version.V_2_2_0)) {
    if (profileShardResults == null) {
      out.writeBoolean(false);
    }
 else {
      out.writeBoolean(true);
      out.writeVInt(profileShardResults.size());
      for (      ProfileShardResult shardResult : profileShardResults) {
        shardResult.writeTo(out);
      }
    }
  }
}
