{
  MultiTermVectorsShardResponse response=new MultiTermVectorsShardResponse();
  for (int i=0; i < request.locations.size(); i++) {
    TermVectorRequest termVectorRequest=request.requests.get(i);
    try {
      IndexService indexService=indicesService.indexServiceSafe(request.index());
      IndexShard indexShard=indexService.shardSafe(shardId.id());
      TermVectorResponse termVectorResponse=indexShard.termVectorService().getTermVector(termVectorRequest,shardId.getIndex());
      response.add(request.locations.get(i),termVectorResponse);
    }
 catch (    Throwable t) {
      if (TransportActions.isShardNotAvailableException(t)) {
        throw (ElasticsearchException)t;
      }
 else {
        logger.debug("{} failed to execute multi term vectors for [{}]/[{}]",t,shardId,termVectorRequest.type(),termVectorRequest.id());
        response.add(request.locations.get(i),new MultiTermVectorsResponse.Failure(request.index(),termVectorRequest.type(),termVectorRequest.id(),ExceptionsHelper.detailedMessage(t)));
      }
    }
  }
  return response;
}
