{
  List<NodeTuple> nodeValue=(List<NodeTuple>)node.getValue();
  for (  NodeTuple tuple : nodeValue) {
    Node keyNode=tuple.getKeyNode();
    Object key=constructObject(keyNode);
    if (key != null) {
      try {
        key.hashCode();
      }
 catch (      Exception e) {
        throw new ConstructorException("while constructing a Set",node.getStartMark(),"found unacceptable key " + key,tuple.getKeyNode().getStartMark(),e);
      }
    }
    if (keyNode.isTwoStepsConstruction()) {
      sets2fill.add(0,new RecursiveTuple<Set<Object>,Object>(set,key));
    }
 else {
      set.add(key);
    }
  }
}
