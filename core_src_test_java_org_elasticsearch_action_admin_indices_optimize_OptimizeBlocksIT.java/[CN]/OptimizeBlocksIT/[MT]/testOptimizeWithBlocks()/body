{
  createIndex("test");
  ensureGreen("test");
  NumShards numShards=getNumShards("test");
  int docs=between(10,100);
  for (int i=0; i < docs; i++) {
    client().prepareIndex("test","type","" + i).setSource("test","init").execute().actionGet();
  }
  for (  String blockSetting : Arrays.asList(SETTING_BLOCKS_READ,SETTING_BLOCKS_WRITE)) {
    try {
      enableIndexBlock("test",blockSetting);
      OptimizeResponse response=client().admin().indices().prepareOptimize("test").execute().actionGet();
      assertNoFailures(response);
      assertThat(response.getSuccessfulShards(),equalTo(numShards.totalNumShards));
    }
  finally {
      disableIndexBlock("test",blockSetting);
    }
  }
  for (  String blockSetting : Arrays.asList(SETTING_READ_ONLY,SETTING_BLOCKS_METADATA)) {
    try {
      enableIndexBlock("test",blockSetting);
      assertBlocked(client().admin().indices().prepareOptimize("test"));
    }
  finally {
      disableIndexBlock("test",blockSetting);
    }
  }
  try {
    OptimizeResponse response=client().admin().indices().prepareOptimize().execute().actionGet();
    assertNoFailures(response);
    assertThat(response.getSuccessfulShards(),equalTo(numShards.totalNumShards));
    setClusterReadOnly(true);
    assertBlocked(client().admin().indices().prepareOptimize());
  }
  finally {
    setClusterReadOnly(false);
  }
}
