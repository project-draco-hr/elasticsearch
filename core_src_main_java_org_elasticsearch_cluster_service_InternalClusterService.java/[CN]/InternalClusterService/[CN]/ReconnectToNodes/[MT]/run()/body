{
  for (  DiscoveryNode node : clusterState.nodes()) {
    if (lifecycle.stoppedOrClosed()) {
      return;
    }
    if (!nodeRequiresConnection(node)) {
      continue;
    }
    if (clusterState.nodes().nodeExists(node.id())) {
      if (!transportService.nodeConnected(node)) {
        try {
          transportService.connectToNode(node);
        }
 catch (        Exception e) {
          if (lifecycle.stoppedOrClosed()) {
            return;
          }
          if (clusterState.nodes().nodeExists(node.id())) {
            Integer nodeFailureCount=failureCount.get(node);
            if (nodeFailureCount == null) {
              nodeFailureCount=1;
            }
 else {
              nodeFailureCount=nodeFailureCount + 1;
            }
            if ((nodeFailureCount % 6) == 0) {
              nodeFailureCount=0;
              logger.warn("failed to reconnect to node {}",e,node);
            }
            failureCount.put(node,nodeFailureCount);
          }
        }
      }
    }
  }
  DiscoveryNodes nodes=clusterState.nodes();
  for (Iterator<DiscoveryNode> failedNodesIt=failureCount.keySet().iterator(); failedNodesIt.hasNext(); ) {
    DiscoveryNode failedNode=failedNodesIt.next();
    if (!nodes.nodeExists(failedNode.id())) {
      failedNodesIt.remove();
    }
  }
  if (lifecycle.started()) {
    reconnectToNodes=threadPool.schedule(reconnectInterval,ThreadPool.Names.GENERIC,this);
  }
}
