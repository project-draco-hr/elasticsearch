{
  if (!lifecycle.started()) {
    return;
  }
  try {
    final UpdateTask task=new UpdateTask(source,priority,updateTask);
    if (updateTask.timeout() != null) {
      updateTasksExecutor.execute(task,threadPool.scheduler(),updateTask.timeout(),new Runnable(){
        @Override public void run(){
          threadPool.generic().execute(new Runnable(){
            @Override public void run(){
              updateTask.onFailure(task.source(),new ProcessClusterEventTimeoutException(updateTask.timeout(),task.source()));
            }
          }
);
        }
      }
);
    }
 else {
      updateTasksExecutor.execute(task);
    }
  }
 catch (  EsRejectedExecutionException e) {
    if (!lifecycle.stoppedOrClosed()) {
      throw e;
    }
  }
}
