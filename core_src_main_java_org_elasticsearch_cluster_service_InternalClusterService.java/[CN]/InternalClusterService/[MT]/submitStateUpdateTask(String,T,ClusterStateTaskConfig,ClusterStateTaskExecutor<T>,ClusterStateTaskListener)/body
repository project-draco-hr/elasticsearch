{
  if (!lifecycle.started()) {
    return;
  }
  try {
    final UpdateTask<T> updateTask=new UpdateTask<>(source,task,config,executor,listener);
synchronized (updateTasksPerExecutor) {
      List<UpdateTask> pendingTasks=updateTasksPerExecutor.get(executor);
      if (pendingTasks == null) {
        pendingTasks=new ArrayList<>();
        updateTasksPerExecutor.put(executor,pendingTasks);
      }
      pendingTasks.add(updateTask);
    }
    if (config.timeout() != null) {
      updateTasksExecutor.execute(updateTask,threadPool.scheduler(),config.timeout(),new Runnable(){
        @Override public void run(){
          threadPool.generic().execute(new Runnable(){
            @Override public void run(){
              if (updateTask.processed.getAndSet(true) == false) {
                listener.onFailure(source,new ProcessClusterEventTimeoutException(config.timeout(),source));
              }
            }
          }
);
        }
      }
);
    }
 else {
      updateTasksExecutor.execute(updateTask);
    }
  }
 catch (  EsRejectedExecutionException e) {
    if (!lifecycle.stoppedOrClosed()) {
      throw e;
    }
  }
}
