{
  String pluginName=randomAsciiOfLength(10);
  PluginManager.PluginHandle handle=PluginManager.PluginHandle.parse(pluginName);
  boolean supportStagingUrls=randomBoolean();
  if (supportStagingUrls) {
    System.setProperty(PluginManager.PROPERTY_SUPPORT_STAGING_URLS,"true");
  }
  Iterator<URL> iterator=handle.urls().iterator();
  if (supportStagingUrls) {
    String expectedStagingURL=String.format(Locale.ROOT,"http://download.elastic.co/elasticsearch/staging/%s-%s/org/elasticsearch/plugin/%s/%s/%s-%s.zip",Version.CURRENT.number(),Build.CURRENT.hashShort(),pluginName,Version.CURRENT.number(),pluginName,Version.CURRENT.number());
    assertThat(iterator.next().toExternalForm(),is(expectedStagingURL));
  }
  URL expected=new URL("http","download.elastic.co","/elasticsearch/release/org/elasticsearch/plugin/" + pluginName + "/"+ Version.CURRENT.number()+ "/"+ pluginName+ "-"+ Version.CURRENT.number()+ ".zip");
  assertThat(iterator.next().toExternalForm(),is(expected.toExternalForm()));
  assertThat(iterator.hasNext(),is(false));
}
