{
  IndexReader indexReader=context().searchContext().searcher().getIndexReader();
  for (  LeafReaderContext ctx : indexReader.leaves()) {
    Scorer childDocsScorer=childFilter.scorer(ctx);
    if (childDocsScorer == null) {
      continue;
    }
    DocIdSetIterator childDocsIter=childDocsScorer.iterator();
    final LeafBucketCollector sub=collectableSubAggregators.getLeafCollector(ctx);
    final SortedDocValues globalOrdinals=valuesSource.globalOrdinalsValues(parentType,ctx);
    sub.setScorer(new ConstantScoreScorer(null,1f,childDocsIter));
    final Bits liveDocs=ctx.reader().getLiveDocs();
    for (int docId=childDocsIter.nextDoc(); docId != DocIdSetIterator.NO_MORE_DOCS; docId=childDocsIter.nextDoc()) {
      if (liveDocs != null && liveDocs.get(docId) == false) {
        continue;
      }
      long globalOrdinal=globalOrdinals.getOrd(docId);
      if (globalOrdinal != -1) {
        long bucketOrd=parentOrdToBuckets.get(globalOrdinal);
        if (bucketOrd != -1) {
          collectBucket(sub,docId,bucketOrd);
          if (multipleBucketsPerParentOrd) {
            long[] otherBucketOrds=parentOrdToOtherBuckets.get(globalOrdinal);
            if (otherBucketOrds != null) {
              for (              long otherBucketOrd : otherBucketOrds) {
                collectBucket(sub,docId,otherBucketOrd);
              }
            }
          }
        }
      }
    }
  }
}
