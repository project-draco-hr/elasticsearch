{
  String newLowWatermark=settings.get(CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK,null);
  String newHighWatermark=settings.get(CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK,null);
  Boolean newRelocationsSetting=settings.getAsBoolean(CLUSTER_ROUTING_ALLOCATION_INCLUDE_RELOCATIONS,null);
  Boolean newEnableSetting=settings.getAsBoolean(CLUSTER_ROUTING_ALLOCATION_DISK_THRESHOLD_ENABLED,null);
  TimeValue newRerouteInterval=settings.getAsTime(CLUSTER_ROUTING_ALLOCATION_REROUTE_INTERVAL,null);
  if (newEnableSetting != null) {
    logger.info("updating [{}] from [{}] to [{}]",CLUSTER_ROUTING_ALLOCATION_DISK_THRESHOLD_ENABLED,DiskThresholdDecider.this.enabled,newEnableSetting);
    DiskThresholdDecider.this.enabled=newEnableSetting;
  }
  if (newRelocationsSetting != null) {
    logger.info("updating [{}] from [{}] to [{}]",CLUSTER_ROUTING_ALLOCATION_INCLUDE_RELOCATIONS,DiskThresholdDecider.this.includeRelocations,newRelocationsSetting);
    DiskThresholdDecider.this.includeRelocations=newRelocationsSetting;
  }
  if (newLowWatermark != null) {
    if (!validWatermarkSetting(newLowWatermark,CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK)) {
      throw new ElasticsearchParseException("unable to parse low watermark [{}]",newLowWatermark);
    }
    logger.info("updating [{}] to [{}]",CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK,newLowWatermark);
    DiskThresholdDecider.this.freeDiskThresholdLow=100.0 - thresholdPercentageFromWatermark(newLowWatermark);
    DiskThresholdDecider.this.freeBytesThresholdLow=thresholdBytesFromWatermark(newLowWatermark,CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK);
  }
  if (newHighWatermark != null) {
    if (!validWatermarkSetting(newHighWatermark,CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK)) {
      throw new ElasticsearchParseException("unable to parse high watermark [{}]",newHighWatermark);
    }
    logger.info("updating [{}] to [{}]",CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK,newHighWatermark);
    DiskThresholdDecider.this.freeDiskThresholdHigh=100.0 - thresholdPercentageFromWatermark(newHighWatermark);
    DiskThresholdDecider.this.freeBytesThresholdHigh=thresholdBytesFromWatermark(newHighWatermark,CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK);
  }
  if (newRerouteInterval != null) {
    logger.info("updating [{}] to [{}]",CLUSTER_ROUTING_ALLOCATION_REROUTE_INTERVAL,newRerouteInterval);
    DiskThresholdDecider.this.rerouteInterval=newRerouteInterval;
  }
}
