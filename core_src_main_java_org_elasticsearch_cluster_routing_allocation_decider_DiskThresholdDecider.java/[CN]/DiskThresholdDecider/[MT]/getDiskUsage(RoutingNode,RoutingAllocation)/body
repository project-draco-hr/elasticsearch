{
  ClusterInfo clusterInfo=allocation.clusterInfo();
  Map<String,DiskUsage> usages=clusterInfo.getNodeDiskUsages();
  DiskUsage usage=usages.get(node.nodeId());
  if (usage == null) {
    usage=averageUsage(node,usages);
    if (logger.isDebugEnabled()) {
      logger.debug("unable to determine disk usage for {}, defaulting to average across nodes [{} total] [{} free] [{}% free]",node.nodeId(),usage.getTotalBytes(),usage.getFreeBytes(),usage.getFreeDiskAsPercentage());
    }
  }
  if (includeRelocations) {
    long relocatingShardsSize=sizeOfRelocatingShards(node,clusterInfo,true);
    DiskUsage usageIncludingRelocations=new DiskUsage(node.nodeId(),node.node().name(),usage.getTotalBytes(),usage.getFreeBytes() - relocatingShardsSize);
    if (logger.isTraceEnabled()) {
      logger.trace("usage without relocations: {}",usage);
      logger.trace("usage with relocations: [{} bytes] {}",relocatingShardsSize,usageIncludingRelocations);
    }
    usage=usageIncludingRelocations;
  }
  return usage;
}
