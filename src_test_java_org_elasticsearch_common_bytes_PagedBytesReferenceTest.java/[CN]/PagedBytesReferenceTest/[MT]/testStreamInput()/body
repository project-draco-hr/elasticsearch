{
  int length=randomIntBetween(10,PAGE_SIZE * 3);
  BytesReference pbr=getRandomizedPagedBytesReference(length);
  StreamInput si=pbr.streamInput();
  assertNotNull(si);
  assertEquals(pbr.get(0),si.readByte());
  assertEquals(pbr.get(1),si.readByte());
  assertEquals(pbr.get(2),si.readByte());
  si.reset();
  byte[] origBuf=new byte[length];
  getRandom().nextBytes(origBuf);
  byte[] targetBuf=Arrays.copyOf(origBuf,origBuf.length);
  si.readBytes(targetBuf,0,0);
  assertEquals(origBuf[0],targetBuf[0]);
  si.reset();
  int i=si.read();
  assertFalse(i == 0);
  si.reset();
  si.readFully(targetBuf);
  assertArrayEquals(pbr.toBytes(),targetBuf);
  try {
    si.readByte();
    fail("expected EOF");
  }
 catch (  EOFException eof) {
  }
  si.reset();
  try {
    si.readBytes(targetBuf,0,length * 2);
    fail("expected IndexOutOfBoundsException: le > stream.length");
  }
 catch (  IndexOutOfBoundsException ioob) {
  }
}
