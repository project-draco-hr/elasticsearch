{
  int length=randomIntBetween(10,scaledRandomIntBetween(PAGE_SIZE * 2,PAGE_SIZE * 20));
  BytesReference pbr=getRandomizedPagedBytesReference(length);
  StreamInput streamInput=pbr.streamInput();
  BytesRef target=new BytesRef();
  while (target.length < pbr.length()) {
switch (randomIntBetween(0,10)) {
case 6:
case 5:
      target.append(new BytesRef(new byte[]{streamInput.readByte()}));
    break;
case 4:
case 3:
  BytesRef bytesRef=streamInput.readBytesRef(scaledRandomIntBetween(1,pbr.length() - target.length));
target.append(bytesRef);
break;
default :
byte[] buffer=new byte[scaledRandomIntBetween(1,pbr.length() - target.length)];
int offset=scaledRandomIntBetween(0,buffer.length - 1);
int read=streamInput.read(buffer,offset,buffer.length - offset);
target.append(new BytesRef(buffer,offset,read));
break;
}
}
assertEquals(pbr.length(),target.length);
assertArrayEquals(pbr.toBytes(),Arrays.copyOfRange(target.bytes,target.offset,target.length));
}
