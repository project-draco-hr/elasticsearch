{
  CreateIndexRequestBuilder builder=transportClient().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put(indexSettings()).put(SETTING_NUMBER_OF_SHARDS,1).put("index.analysis.analyzer.text.tokenizer","standard").putArray("index.analysis.analyzer.text.filter","lowercase","my_shingle").put("index.analysis.filter.my_shingle.type","shingle").put("index.analysis.filter.my_shingle.output_unigrams",true).put("index.analysis.filter.my_shingle.min_shingle_size",2).put("index.analysis.filter.my_shingle.max_shingle_size",3));
  XContentBuilder mapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("title").field("type","string").field("analyzer","text").endObject().endObject().endObject().endObject();
  assertAcked(builder.addMapping("type1",mapping));
  ensureGreen();
  List<String> titles=new ArrayList<>();
  titles.add("United States House of Representatives Elections in Washington 2006");
  titles.add("United States House of Representatives Elections in Washington 2005");
  titles.add("State");
  titles.add("Houses of Parliament");
  titles.add("Representative Government");
  titles.add("Election");
  List<IndexRequestBuilder> builders=new ArrayList<>();
  for (  String title : titles) {
    transportClient().prepareIndex("test","type1").setSource("title",title).get();
  }
  transportClient().admin().indices().prepareRefresh("test").get();
  String filterStringAsFilter=XContentFactory.jsonBuilder().startObject().startObject("query").startObject("match_phrase").field("title","{{suggestion}}").endObject().endObject().endObject().string();
  PutIndexedScriptResponse scriptResponse=transportClient().preparePutIndexedScript(MustacheScriptEngineService.NAME,"my_script",jsonBuilder().startObject().field("script",filterStringAsFilter).endObject().string()).get();
  assertThat(scriptResponse.isCreated(),is(true));
  PhraseSuggestionBuilder suggest=phraseSuggestion("title").field("title").addCandidateGenerator(PhraseSuggestionBuilder.candidateGenerator("title").suggestMode("always").maxTermFreq(.99f).size(10).maxInspections(200)).confidence(0f).maxErrors(2f).shardSize(30000).size(10);
  PhraseSuggestionBuilder filteredFilterSuggest=suggest.collateQuery(new Template("my_script",ScriptType.INDEXED,MustacheScriptEngineService.NAME,null,null));
  SearchRequestBuilder searchRequestBuilder=transportClient().prepareSearch("test").setSize(0);
  String suggestText="united states house of representatives elections in washington 2006";
  if (suggestText != null) {
    searchRequestBuilder.setSuggestText(suggestText);
  }
  searchRequestBuilder.addSuggestion(filteredFilterSuggest);
  SearchResponse actionGet=searchRequestBuilder.execute().actionGet();
  assertThat(Arrays.toString(actionGet.getShardFailures()),actionGet.getFailedShards(),equalTo(0));
  Suggest searchSuggest=actionGet.getSuggest();
  assertSuggestionSize(searchSuggest,0,2,"title");
  assertGetRequestsContainHeaders(".scripts");
  assertRequestsContainHeader(PutIndexedScriptRequest.class);
}
