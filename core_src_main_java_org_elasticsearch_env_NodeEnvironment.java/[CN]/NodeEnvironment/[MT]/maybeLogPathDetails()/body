{
  if (logger.isDebugEnabled()) {
    StringBuilder sb=new StringBuilder();
    for (    NodePath nodePath : nodePaths) {
      sb.append('\n').append(" -> ").append(nodePath.path.toAbsolutePath());
      String spinsDesc;
      if (nodePath.spins == null) {
        spinsDesc="unknown";
      }
 else       if (nodePath.spins) {
        spinsDesc="possibly";
      }
 else {
        spinsDesc="no";
      }
      FsInfo.Path fsPath=FsProbe.getFSInfo(nodePath);
      sb.append(", free_space [").append(fsPath.getFree()).append("], usable_space [").append(fsPath.getAvailable()).append("], total_space [").append(fsPath.getTotal()).append("], spins? [").append(spinsDesc).append("], mount [").append(fsPath.getMount()).append("], type [").append(fsPath.getType()).append(']');
    }
    logger.debug("node data locations details:{}",sb);
  }
 else   if (logger.isInfoEnabled()) {
    FsInfo.Path totFSPath=new FsInfo.Path();
    Set<String> allTypes=new HashSet<>();
    Set<String> allSpins=new HashSet<>();
    Set<String> allMounts=new HashSet<>();
    for (    NodePath nodePath : nodePaths) {
      FsInfo.Path fsPath=FsProbe.getFSInfo(nodePath);
      String mount=fsPath.getMount();
      if (allMounts.contains(mount) == false) {
        allMounts.add(mount);
        String type=fsPath.getType();
        if (type != null) {
          allTypes.add(type);
        }
        Boolean spins=fsPath.getSpins();
        if (spins == null) {
          allSpins.add("unknown");
        }
 else         if (spins.booleanValue()) {
          allSpins.add("possibly");
        }
 else {
          allSpins.add("no");
        }
        totFSPath.add(fsPath);
      }
    }
    logger.info("using [{}] data paths, mounts [{}], net usable_space [{}], net total_space [{}], spins? [{}], types [{}]",nodePaths.length,allMounts,totFSPath.getAvailable(),totFSPath.getTotal(),toString(allSpins),toString(allTypes));
  }
}
