{
  final Integer numShards=settings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_SHARDS,null);
  if (numShards == null || numShards <= 0) {
    throw new IllegalArgumentException("settings must contain a non-null > 0 number of shards");
  }
  logger.trace("locking all shards for index {} - [{}]",index,numShards);
  List<ShardLock> allLocks=new ArrayList<>(numShards);
  boolean success=false;
  long startTimeNS=System.nanoTime();
  try {
    for (int i=0; i < numShards; i++) {
      long timeoutLeftMS=Math.max(0,lockTimeoutMS - TimeValue.nsecToMSec((System.nanoTime() - startTimeNS)));
      allLocks.add(shardLock(new ShardId(index,i),timeoutLeftMS));
    }
    success=true;
  }
  finally {
    if (success == false) {
      logger.trace("unable to lock all shards for index {}",index);
      IOUtils.closeWhileHandlingException(allLocks);
    }
  }
  return allLocks;
}
