{
  int s;
  ForkJoinPool cp=ForkJoinPool.common;
  if ((s=status) >= 0) {
    if (cp != null) {
      if (this instanceof CountedCompleter)       s=cp.externalHelpComplete((CountedCompleter<?>)this);
 else       if (cp.tryExternalUnpush(this))       s=doExec();
    }
    if (s >= 0 && (s=status) >= 0) {
      boolean interrupted=false;
      do {
        if (U.compareAndSwapInt(this,STATUS,s,s | SIGNAL)) {
synchronized (this) {
            if (status >= 0) {
              try {
                wait();
              }
 catch (              InterruptedException ie) {
                interrupted=true;
              }
            }
 else             notifyAll();
          }
        }
      }
 while ((s=status) >= 0);
      if (interrupted)       Thread.currentThread().interrupt();
    }
  }
  return s;
}
