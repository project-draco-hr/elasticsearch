{
  logger.info("--> starting 1 node");
  final String node=internalCluster().startNodeAsync().get();
  logger.info("--> creating index with 1 primary and 0 replicas");
  final String indexName="test-idx";
  assertAcked(client().admin().indices().prepareCreate(indexName).setSettings(Settings.builder().put(IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING.getKey(),1).put(IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING.getKey(),0)).get());
  logger.info("--> update the settings to prevent allocation to the data node");
  assertTrue(client().admin().indices().prepareUpdateSettings(indexName).setSettings(Settings.builder().put(IndexMetaData.INDEX_ROUTING_EXCLUDE_GROUP_SETTING.getKey() + "_name",node)).get().isAcknowledged());
  logger.info("--> full cluster restart");
  internalCluster().fullRestart();
  logger.info("--> checking that the primary shard is force allocated to the data node despite being blocked by the exclude filter");
  ensureGreen(indexName);
  assertEquals(1,client().admin().cluster().prepareState().get().getState().routingTable().index(indexName).shardsWithState(ShardRoutingState.STARTED).size());
}
