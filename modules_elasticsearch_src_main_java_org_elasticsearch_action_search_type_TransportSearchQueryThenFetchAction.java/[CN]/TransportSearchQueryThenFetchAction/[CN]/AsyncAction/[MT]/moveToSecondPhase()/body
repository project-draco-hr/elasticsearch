{
  sortedShardList=searchPhaseController.sortDocs(queryResults.values());
  final Map<SearchShardTarget,ExtTIntArrayList> docIdsToLoad=searchPhaseController.docIdsToLoad(sortedShardList);
  this.docIdsToLoad=docIdsToLoad;
  if (docIdsToLoad.isEmpty()) {
    finishHim();
  }
  final AtomicInteger counter=new AtomicInteger(docIdsToLoad.size());
  int localOperations=0;
  for (  final Map.Entry<SearchShardTarget,ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {
    DiscoveryNode node=nodes.get(entry.getKey().nodeId());
    if (node.id().equals(nodes.localNodeId())) {
      localOperations++;
    }
 else {
      FetchSearchRequest fetchSearchRequest=new FetchSearchRequest(queryResults.get(entry.getKey()).id(),entry.getValue());
      executeFetch(entry.getKey(),counter,fetchSearchRequest,node);
    }
  }
  if (localOperations > 0) {
    if (request.operationThreading() == SearchOperationThreading.SINGLE_THREAD) {
      threadPool.executor(ThreadPool.Names.SEARCH).execute(new Runnable(){
        @Override public void run(){
          for (          final Map.Entry<SearchShardTarget,ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {
            DiscoveryNode node=nodes.get(entry.getKey().nodeId());
            if (node.id().equals(nodes.localNodeId())) {
              FetchSearchRequest fetchSearchRequest=new FetchSearchRequest(queryResults.get(entry.getKey()).id(),entry.getValue());
              executeFetch(entry.getKey(),counter,fetchSearchRequest,node);
            }
          }
        }
      }
);
    }
 else {
      boolean localAsync=request.operationThreading() == SearchOperationThreading.THREAD_PER_SHARD;
      for (      final Map.Entry<SearchShardTarget,ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {
        final DiscoveryNode node=nodes.get(entry.getKey().nodeId());
        if (node.id().equals(nodes.localNodeId())) {
          final FetchSearchRequest fetchSearchRequest=new FetchSearchRequest(queryResults.get(entry.getKey()).id(),entry.getValue());
          if (localAsync) {
            threadPool.executor(ThreadPool.Names.SEARCH).execute(new Runnable(){
              @Override public void run(){
                executeFetch(entry.getKey(),counter,fetchSearchRequest,node);
              }
            }
);
          }
 else {
            executeFetch(entry.getKey(),counter,fetchSearchRequest,node);
          }
        }
      }
    }
  }
}
