{
  return new IndexFieldData<AtomicFieldData>(){
    @Override public Index index(){
      return in.index();
    }
    @Override public String getFieldName(){
      return in.getFieldName();
    }
    @Override public FieldDataType getFieldDataType(){
      return in.getFieldDataType();
    }
    @Override public AtomicFieldData load(    LeafReaderContext context){
      return in.load(context);
    }
    @Override public AtomicFieldData loadDirect(    LeafReaderContext context) throws Exception {
      return in.loadDirect(context);
    }
    @Override public XFieldComparatorSource comparatorSource(    Object missingValue,    MultiValueMode sortMode,    Nested nested){
      return new BytesRefFieldComparatorSource(this,missingValue,sortMode,nested);
    }
    @Override public void clear(){
      in.clear();
    }
  }
;
}
