{
  prepareCreate("test").addMapping("test",jsonBuilder().startObject().startObject("test").startObject("properties").startObject("foo").field("type","string").field("store",storeCountedFields).field("analyzer","simple").startObject("fields").startObject("token_count").field("type","token_count").field("analyzer","standard").field("store",true).endObject().startObject("token_count_unstored").field("type","token_count").field("analyzer","standard").endObject().startObject("token_count_with_doc_values").field("type","token_count").field("analyzer","standard").startObject("fielddata").field("format","doc_values").endObject().endObject().endObject().endObject().endObject().endObject().endObject()).get();
  ensureGreen();
  assertTrue(prepareIndex("single","I have four terms").get().isCreated());
  BulkResponse bulk=client().prepareBulk().add(prepareIndex("bulk1","bulk three terms")).add(prepareIndex("bulk2","this has five bulk terms")).get();
  assertFalse(bulk.buildFailureMessage(),bulk.hasFailures());
  assertTrue(prepareIndex("multi","two terms","wow now I have seven lucky terms").get().isCreated());
  bulk=client().prepareBulk().add(prepareIndex("multibulk1","one","oh wow now I have eight unlucky terms")).add(prepareIndex("multibulk2","six is a bunch of terms","ten!  ten terms is just crazy!  too many too count!")).get();
  assertFalse(bulk.buildFailureMessage(),bulk.hasFailures());
  assertThat(refresh().getFailedShards(),equalTo(0));
}
