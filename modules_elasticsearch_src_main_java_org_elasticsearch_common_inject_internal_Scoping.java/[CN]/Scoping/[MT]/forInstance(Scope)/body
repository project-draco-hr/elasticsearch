{
  if (scope == Scopes.SINGLETON) {
    return SINGLETON_INSTANCE;
  }
  return new Scoping(){
    public <V>V acceptVisitor(    BindingScopingVisitor<V> visitor){
      return visitor.visitScope(scope);
    }
    @Override public Scope getScopeInstance(){
      return scope;
    }
    @Override public String toString(){
      return scope.toString();
    }
    public void applyTo(    ScopedBindingBuilder scopedBindingBuilder){
      scopedBindingBuilder.in(scope);
    }
  }
;
}
