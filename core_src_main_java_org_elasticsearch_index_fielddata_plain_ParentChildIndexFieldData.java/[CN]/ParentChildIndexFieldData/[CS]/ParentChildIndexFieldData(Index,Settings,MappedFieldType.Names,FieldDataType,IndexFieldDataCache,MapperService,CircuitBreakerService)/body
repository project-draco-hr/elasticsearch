{
  super(index,indexSettings,fieldNames,fieldDataType,cache);
  this.breakerService=breakerService;
  if (Version.indexCreated(indexSettings).before(Version.V_2_0_0_beta1)) {
    parentTypes=new TreeSet<>();
    for (    DocumentMapper documentMapper : mapperService.docMappers(false)) {
      beforeCreate(documentMapper);
    }
    mapperService.addTypeListener(this);
  }
 else {
    ImmutableSortedSet.Builder<String> builder=ImmutableSortedSet.naturalOrder();
    for (    DocumentMapper mapper : mapperService.docMappers(false)) {
      ParentFieldMapper parentFieldMapper=mapper.parentFieldMapper();
      if (parentFieldMapper.active()) {
        builder.add(parentFieldMapper.type());
      }
    }
    parentTypes=builder.build();
  }
}
