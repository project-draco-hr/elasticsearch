{
  assertAcked(prepareCreate("test").addMapping("type",jsonBuilder().startObject().startObject("type").startObject("properties").startObject("test").field("type","string").endObject().startObject("geo").field("type","geo_point").endObject().endObject().endObject().endObject()));
  ensureYellow();
  int numDocs=2;
  client().index(indexRequest("test").type("type1").source(jsonBuilder().startObject().field("test","value").startObject("geo").field("lat",1).field("lon",2).endObject().endObject())).actionGet();
  refresh();
  List<Float> lonlat=new ArrayList<Float>();
  lonlat.add(new Float(100));
  lonlat.add(new Float(110));
  ActionFuture<SearchResponse> response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().explain(true).size(numDocs).query(functionScoreQuery(termQuery("test","value")).add(new MatchAllFilterBuilder(),linearDecayFunction("type1.geo",lonlat,"1000km")).scoreMode("multiply"))));
  SearchResponse sr=response.actionGet();
}
