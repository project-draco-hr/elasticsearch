{
  assertAcked(prepareCreate("test").setSettings(Settings.builder().put(indexSettings()).put(SETTING_NUMBER_OF_SHARDS,between(cluster().numDataNodes(),DEFAULT_MAX_NUM_SHARDS)).put(SETTING_NUMBER_OF_REPLICAS,0)));
  ensureGreen();
  MoveAllocationCommand moveAllocationCommand=getAllocationCommand();
  final Index index=client().admin().cluster().prepareState().get().getState().metaData().index("test").getIndex();
  final ShardId commandShard=new ShardId(index,moveAllocationCommand.shardId());
  assertAcked(client().admin().cluster().prepareReroute().add(moveAllocationCommand));
  for (  Client client : clients()) {
    ClusterState clusterState=getLocalClusterState(client);
    for (    ShardRouting shardRouting : clusterState.getRoutingNodes().node(moveAllocationCommand.fromNode())) {
      if (shardRouting.shardId().equals(commandShard)) {
        assertThat(shardRouting.relocating(),equalTo(true));
      }
    }
    boolean found=false;
    for (    ShardRouting shardRouting : clusterState.getRoutingNodes().node(moveAllocationCommand.toNode())) {
      if (shardRouting.shardId().equals(commandShard)) {
        assertThat(shardRouting.state(),anyOf(equalTo(ShardRoutingState.INITIALIZING),equalTo(ShardRoutingState.STARTED)));
        found=true;
        break;
      }
    }
    assertThat(found,equalTo(true));
  }
}
