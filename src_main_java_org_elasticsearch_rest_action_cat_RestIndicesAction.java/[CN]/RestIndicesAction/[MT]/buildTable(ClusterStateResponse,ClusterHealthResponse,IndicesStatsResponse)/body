{
  Table table=new Table();
  table.startHeaders();
  table.addCell("health");
  table.addCell("index");
  table.addCell("pri","text-align:right;");
  table.addCell("rep","text-align:right;");
  table.addCell("docs","text-align:right;");
  table.addCell("docs/del","text-align:right;");
  table.addCell("size/pri","text-align:right;");
  table.addCell("size/total","text-align:right;");
  table.endHeaders();
  for (  Map.Entry entry : state.getState().routingTable().indicesRouting().entrySet()) {
    String index=(String)entry.getKey();
    ClusterIndexHealth indexHealth=health.getIndices().get(index);
    IndexStats indexStats=stats.getIndices().get(index);
    table.startRow();
    table.addCell(indexHealth == null ? "red*" : indexHealth.getStatus().toString().toLowerCase(Locale.getDefault()));
    table.addCell(index);
    table.addCell(indexHealth == null ? null : indexHealth.getNumberOfShards());
    table.addCell(indexHealth == null ? null : indexHealth.getNumberOfReplicas());
    table.addCell(indexStats == null ? null : indexStats.getPrimaries().getDocs().getCount());
    table.addCell(indexStats == null ? null : indexStats.getPrimaries().getDocs().getDeleted());
    table.addCell(indexStats == null ? null : indexStats.getPrimaries().getStore().size());
    table.addCell(indexStats == null ? null : indexStats.getTotal().getStore().size());
    table.endRow();
  }
  return table;
}
