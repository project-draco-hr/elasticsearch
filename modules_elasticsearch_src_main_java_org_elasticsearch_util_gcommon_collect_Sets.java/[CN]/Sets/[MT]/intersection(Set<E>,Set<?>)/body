{
  checkNotNull(set1,"set1");
  checkNotNull(set2,"set2");
  final Predicate<Object> inSet2=Predicates.in(set2);
  return new SetView<E>(){
    @Override public Iterator<E> iterator(){
      return Iterators.filter(set1.iterator(),inSet2);
    }
    @Override public int size(){
      return Iterators.size(iterator());
    }
    @Override public boolean isEmpty(){
      return !iterator().hasNext();
    }
    @Override public boolean contains(    Object object){
      return set1.contains(object) && set2.contains(object);
    }
    @Override public boolean containsAll(    Collection<?> collection){
      return set1.containsAll(collection) && set2.containsAll(collection);
    }
  }
;
}
