{
  builder.field(Fields.ID,shardId.id());
  builder.field(Fields.TYPE,recoverySource.getType());
  builder.field(Fields.STAGE,stage.toString());
  builder.field(Fields.PRIMARY,primary);
  builder.dateField(Fields.START_TIME_IN_MILLIS,Fields.START_TIME,timer.startTime);
  if (timer.stopTime > 0) {
    builder.dateField(Fields.STOP_TIME_IN_MILLIS,Fields.STOP_TIME,timer.stopTime);
  }
  builder.timeValueField(Fields.TOTAL_TIME_IN_MILLIS,Fields.TOTAL_TIME,timer.time());
  if (recoverySource.getType() == RecoverySource.Type.PEER) {
    builder.startObject(Fields.SOURCE);
    builder.field(Fields.ID,sourceNode.getId());
    builder.field(Fields.HOST,sourceNode.getHostName());
    builder.field(Fields.TRANSPORT_ADDRESS,sourceNode.getAddress().toString());
    builder.field(Fields.IP,sourceNode.getHostAddress());
    builder.field(Fields.NAME,sourceNode.getName());
    builder.endObject();
  }
 else {
    builder.startObject(Fields.SOURCE);
    recoverySource.addAdditionalFields(builder,params);
    builder.endObject();
  }
  builder.startObject(Fields.TARGET);
  builder.field(Fields.ID,targetNode.getId());
  builder.field(Fields.HOST,targetNode.getHostName());
  builder.field(Fields.TRANSPORT_ADDRESS,targetNode.getAddress().toString());
  builder.field(Fields.IP,targetNode.getHostAddress());
  builder.field(Fields.NAME,targetNode.getName());
  builder.endObject();
  builder.startObject(Fields.INDEX);
  index.toXContent(builder,params);
  builder.endObject();
  builder.startObject(Fields.TRANSLOG);
  translog.toXContent(builder,params);
  builder.endObject();
  builder.startObject(Fields.VERIFY_INDEX);
  verifyIndex.toXContent(builder,params);
  builder.endObject();
  return builder;
}
