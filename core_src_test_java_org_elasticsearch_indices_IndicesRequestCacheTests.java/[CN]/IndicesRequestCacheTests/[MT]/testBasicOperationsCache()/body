{
  ShardRequestCache requestCacheStats=new ShardRequestCache();
  IndicesRequestCache cache=new IndicesRequestCache(Settings.EMPTY);
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,newIndexWriterConfig());
  writer.addDocument(newDoc(0,"foo"));
  DirectoryReader reader=ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId("foo","bar",1));
  TermQueryBuilder termQuery=new TermQueryBuilder("id","0");
  AtomicBoolean indexShard=new AtomicBoolean(true);
  TestEntity entity=new TestEntity(requestCacheStats,reader,indexShard,0);
  BytesReference value=cache.getOrCompute(entity,reader,termQuery.buildAsBytes());
  assertEquals("foo",StreamInput.wrap(value).readString());
  assertEquals(0,requestCacheStats.stats().getHitCount());
  assertEquals(1,requestCacheStats.stats().getMissCount());
  assertEquals(0,requestCacheStats.stats().getEvictions());
  assertFalse(entity.loadedFromCache());
  assertEquals(1,cache.count());
  entity=new TestEntity(requestCacheStats,reader,indexShard,0);
  value=cache.getOrCompute(entity,reader,termQuery.buildAsBytes());
  assertEquals("foo",StreamInput.wrap(value).readString());
  assertEquals(1,requestCacheStats.stats().getHitCount());
  assertEquals(1,requestCacheStats.stats().getMissCount());
  assertEquals(0,requestCacheStats.stats().getEvictions());
  assertTrue(entity.loadedFromCache());
  assertEquals(1,cache.count());
  assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length());
  assertEquals(1,cache.numRegisteredCloseListeners());
  if (randomBoolean()) {
    reader.close();
  }
 else {
    indexShard.set(false);
    cache.clear(entity);
  }
  cache.cleanCache();
  assertEquals(1,requestCacheStats.stats().getHitCount());
  assertEquals(1,requestCacheStats.stats().getMissCount());
  assertEquals(0,requestCacheStats.stats().getEvictions());
  assertTrue(entity.loadedFromCache());
  assertEquals(0,cache.count());
  assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt());
  IOUtils.close(reader,writer,dir,cache);
  assertEquals(0,cache.numRegisteredCloseListeners());
}
