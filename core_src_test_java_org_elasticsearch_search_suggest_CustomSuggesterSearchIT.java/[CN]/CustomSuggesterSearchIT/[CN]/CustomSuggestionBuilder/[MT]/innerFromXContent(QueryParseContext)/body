{
  XContentParser parser=parseContext.parser();
  ParseFieldMatcher parseFieldMatcher=parseContext.getParseFieldMatcher();
  XContentParser.Token token;
  String currentFieldName=null;
  String fieldname=null;
  String suffix=null;
  String analyzer=null;
  int sizeField=-1;
  int shardSize=-1;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token.isValue()) {
      if (parseFieldMatcher.match(currentFieldName,SuggestionBuilder.ANALYZER_FIELD)) {
        analyzer=parser.text();
      }
 else       if (parseFieldMatcher.match(currentFieldName,SuggestionBuilder.FIELDNAME_FIELD)) {
        fieldname=parser.text();
      }
 else       if (parseFieldMatcher.match(currentFieldName,SuggestionBuilder.SIZE_FIELD)) {
        sizeField=parser.intValue();
      }
 else       if (parseFieldMatcher.match(currentFieldName,SuggestionBuilder.SHARDSIZE_FIELD)) {
        shardSize=parser.intValue();
      }
 else       if (parseFieldMatcher.match(currentFieldName,RANDOM_SUFFIX_FIELD)) {
        suffix=parser.text();
      }
    }
 else {
      throw new ParsingException(parser.getTokenLocation(),"suggester[custom] doesn't support field [" + currentFieldName + "]");
    }
  }
  if (fieldname == null) {
    throw new ParsingException(parser.getTokenLocation(),"the required field option is missing");
  }
  CustomSuggestionBuilder builder=new CustomSuggestionBuilder(fieldname,suffix);
  if (analyzer != null) {
    builder.analyzer(analyzer);
  }
  if (sizeField != -1) {
    builder.size(sizeField);
  }
  if (shardSize != -1) {
    builder.shardSize(shardSize);
  }
  return builder;
}
