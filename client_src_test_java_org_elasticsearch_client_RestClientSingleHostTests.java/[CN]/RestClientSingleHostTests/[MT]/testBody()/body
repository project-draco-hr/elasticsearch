{
  String body="{ \"field\": \"value\" }";
  StringEntity entity=new StringEntity(body);
  for (  String method : Arrays.asList("DELETE","GET","PATCH","POST","PUT")) {
    for (    int okStatusCode : getOkStatusCodes()) {
      try (ElasticsearchResponse response=restClient.performRequest(method,"/" + okStatusCode,Collections.<String,String>emptyMap(),entity)){
        assertThat(response.getStatusLine().getStatusCode(),equalTo(okStatusCode));
        assertThat(EntityUtils.toString(response.getEntity()),equalTo(body));
      }
     }
    for (    int errorStatusCode : getAllErrorStatusCodes()) {
      try {
        restClient.performRequest(method,"/" + errorStatusCode,Collections.<String,String>emptyMap(),entity);
        fail("request should have failed");
      }
 catch (      ElasticsearchResponseException e) {
        ElasticsearchResponse response=e.getElasticsearchResponse();
        assertThat(response.getStatusLine().getStatusCode(),equalTo(errorStatusCode));
        assertThat(EntityUtils.toString(response.getEntity()),equalTo(body));
      }
    }
  }
  for (  String method : Arrays.asList("HEAD","OPTIONS","TRACE")) {
    try {
      restClient.performRequest(method,"/" + randomStatusCode(random()),Collections.<String,String>emptyMap(),entity);
      fail("request should have failed");
    }
 catch (    UnsupportedOperationException e) {
      assertThat(e.getMessage(),equalTo(method + " with body is not supported"));
    }
  }
}
