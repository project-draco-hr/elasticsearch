{
  Map<String,IndexOptions> supportedOptions=new HashMap<>();
  supportedOptions.put("docs",IndexOptions.DOCS);
  supportedOptions.put("freqs",IndexOptions.DOCS_AND_FREQS);
  supportedOptions.put("positions",IndexOptions.DOCS_AND_FREQS_AND_POSITIONS);
  supportedOptions.put("offsets",IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);
  XContentBuilder mappingBuilder=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties");
  for (  String option : supportedOptions.keySet()) {
    mappingBuilder.startObject(option).field("type","text").field("index_options",option).endObject();
  }
  String mapping=mappingBuilder.endObject().endObject().endObject().string();
  DocumentMapper mapper=parser.parse("type",new CompressedXContent(mapping));
  XContentBuilder jsonDoc=XContentFactory.jsonBuilder().startObject();
  for (  String option : supportedOptions.keySet()) {
    jsonDoc.field(option,"1234");
  }
  ParsedDocument doc=mapper.parse("test","type","1",jsonDoc.endObject().bytes());
  for (  Map.Entry<String,IndexOptions> entry : supportedOptions.entrySet()) {
    String field=entry.getKey();
    IndexOptions options=entry.getValue();
    IndexableField[] fields=doc.rootDoc().getFields(field);
    assertEquals(1,fields.length);
    assertEquals(options,fields[0].fieldType().indexOptions());
  }
}
