{
  try {
    MultiTermVectorsItemResponse[] responses=new MultiTermVectorsItemResponse[mtvRequest.size()];
    int i=0;
    for (    TermVectorsRequest request : mtvRequest) {
      TermVectorsResponse response=new TermVectorsResponse(request.index(),request.type(),request.id());
      response.setExists(true);
      Fields generatedFields;
      if (request.doc() != null) {
        generatedFields=generateFields(randomFields,request.doc().toUtf8());
      }
 else {
        generatedFields=generateFields(request.selectedFields().toArray(new String[0]),request.id());
      }
      EnumSet<TermVectorsRequest.Flag> flags=EnumSet.of(TermVectorsRequest.Flag.Positions,TermVectorsRequest.Flag.Offsets);
      response.setFields(generatedFields,request.selectedFields(),flags,generatedFields);
      responses[i++]=new MultiTermVectorsItemResponse(response,null);
    }
    return new MultiTermVectorsResponse(responses);
  }
 catch (  IOException ex) {
    throw new ElasticsearchException("boom",ex);
  }
}
