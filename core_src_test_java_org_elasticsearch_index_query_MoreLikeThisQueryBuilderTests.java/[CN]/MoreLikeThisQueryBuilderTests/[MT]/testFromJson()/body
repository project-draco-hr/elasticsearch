{
  String json="{\n" + "  \"more_like_this\" : {\n" + "    \"fields\" : [ \"title\", \"description\" ],\n"+ "    \"like\" : [ \"and potentially some more text here as well\", {\n"+ "      \"_index\" : \"imdb\",\n"+ "      \"_type\" : \"movies\",\n"+ "      \"_id\" : \"1\"\n"+ "    }, {\n"+ "      \"_index\" : \"imdb\",\n"+ "      \"_type\" : \"movies\",\n"+ "      \"_id\" : \"2\"\n"+ "    } ],\n"+ "    \"max_query_terms\" : 12,\n"+ "    \"min_term_freq\" : 1,\n"+ "    \"min_doc_freq\" : 5,\n"+ "    \"max_doc_freq\" : 2147483647,\n"+ "    \"min_word_length\" : 0,\n"+ "    \"max_word_length\" : 0,\n"+ "    \"minimum_should_match\" : \"30%\",\n"+ "    \"boost_terms\" : 0.0,\n"+ "    \"include\" : false,\n"+ "    \"fail_on_unsupported_field\" : true,\n"+ "    \"boost\" : 1.0\n"+ "  }\n"+ "}";
  MoreLikeThisQueryBuilder parsed=(MoreLikeThisQueryBuilder)parseQuery(json);
  checkGeneratedJson(json,parsed);
  assertEquals(json,2,parsed.fields().length);
  assertEquals(json,"and potentially some more text here as well",parsed.likeTexts()[0]);
  json="{\n" + "  \"mlt\" : {\n" + "    \"fields\" : [ \"title\", \"description\" ],\n"+ "    \"like\" : [ \"and potentially some more text here as well\", {\n"+ "      \"_index\" : \"imdb\",\n"+ "      \"_type\" : \"movies\",\n"+ "      \"_id\" : \"1\"\n"+ "    }, {\n"+ "      \"_index\" : \"imdb\",\n"+ "      \"_type\" : \"movies\",\n"+ "      \"_id\" : \"2\"\n"+ "    } ],\n"+ "    \"max_query_terms\" : 12,\n"+ "    \"min_term_freq\" : 1,\n"+ "    \"min_doc_freq\" : 5,\n"+ "    \"max_doc_freq\" : 2147483647,\n"+ "    \"min_word_length\" : 0,\n"+ "    \"max_word_length\" : 0,\n"+ "    \"minimum_should_match\" : \"30%\",\n"+ "    \"boost_terms\" : 0.0,\n"+ "    \"include\" : false,\n"+ "    \"fail_on_unsupported_field\" : true,\n"+ "    \"boost\" : 1.0\n"+ "  }\n"+ "}";
  MoreLikeThisQueryBuilder parsedQueryMltShortcut=(MoreLikeThisQueryBuilder)parseQuery(json,ParseFieldMatcher.EMPTY);
  assertThat(parsedQueryMltShortcut,equalTo(parsed));
  try {
    parseQuery(json);
    fail("parse query should have failed in strict mode");
  }
 catch (  IllegalArgumentException e) {
    assertThat(e.getMessage(),equalTo("Deprecated field [mlt] used, expected [more_like_this] instead"));
  }
}
