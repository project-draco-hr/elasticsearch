{
  if (handle != null) {
    return handle.type();
  }
  final Class<?> params[];
  final Class<?> returnValue;
  if (augmentation) {
    params=new Class<?>[1 + arguments.size()];
    params[0]=Augmentation.class;
    for (int i=0; i < arguments.size(); i++) {
      params[i + 1]=arguments.get(i).clazz;
    }
    returnValue=rtn.clazz;
  }
 else   if (Modifier.isStatic(modifiers)) {
    params=new Class<?>[arguments.size()];
    for (int i=0; i < arguments.size(); i++) {
      params[i]=arguments.get(i).clazz;
    }
    returnValue=rtn.clazz;
  }
 else   if ("<init>".equals(name)) {
    params=new Class<?>[arguments.size()];
    for (int i=0; i < arguments.size(); i++) {
      params[i]=arguments.get(i).clazz;
    }
    returnValue=owner.clazz;
  }
 else {
    params=new Class<?>[1 + arguments.size()];
    params[0]=owner.clazz;
    for (int i=0; i < arguments.size(); i++) {
      params[i + 1]=arguments.get(i).clazz;
    }
    returnValue=rtn.clazz;
  }
  return MethodType.methodType(returnValue,params);
}
