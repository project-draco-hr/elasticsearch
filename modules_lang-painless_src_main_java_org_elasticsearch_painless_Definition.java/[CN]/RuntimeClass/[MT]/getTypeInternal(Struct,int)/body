{
  String name=struct.name;
  org.objectweb.asm.Type type=struct.type;
  Class<?> clazz=struct.clazz;
  Sort sort;
  if (dimensions > 0) {
    final StringBuilder builder=new StringBuilder(name);
    final char[] brackets=new char[dimensions];
    for (int count=0; count < dimensions; ++count) {
      builder.append("[]");
      brackets[count]='[';
    }
    final String descriptor=new String(brackets) + struct.type.getDescriptor();
    name=builder.toString();
    type=org.objectweb.asm.Type.getType(descriptor);
    try {
      clazz=Class.forName(type.getInternalName().replace('/','.'));
    }
 catch (    final ClassNotFoundException exception) {
      throw new IllegalArgumentException("The class [" + type.getInternalName() + "]"+ " could not be found to create type ["+ name+ "].");
    }
    sort=Sort.ARRAY;
  }
 else   if ("def".equals(struct.name)) {
    sort=Sort.DEF;
  }
 else {
    sort=Sort.OBJECT;
    for (    final Sort value : Sort.values()) {
      if (value.clazz == null) {
        continue;
      }
      if (value.clazz.equals(struct.clazz)) {
        sort=value;
        break;
      }
    }
  }
  return new Type(name,dimensions,struct,clazz,type,sort);
}
