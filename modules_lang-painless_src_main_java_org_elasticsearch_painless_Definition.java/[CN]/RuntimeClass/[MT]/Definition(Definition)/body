{
  final Map<String,Struct> structs=new HashMap<>();
  for (  final Struct struct : definition.structs.values()) {
    structs.put(struct.name,new Struct(struct));
  }
  this.structs=Collections.unmodifiableMap(structs);
  final Map<Class<?>,Struct> classes=new HashMap<>();
  for (  final Struct struct : definition.classes.values()) {
    classes.put(struct.clazz,this.structs.get(struct.name));
  }
  this.classes=Collections.unmodifiableMap(classes);
  transforms=Collections.unmodifiableMap(definition.transforms);
  bounds=Collections.unmodifiableMap(definition.bounds);
  this.runtimeMap=Collections.unmodifiableMap(definition.runtimeMap);
  voidType=definition.voidType;
  booleanType=definition.booleanType;
  byteType=definition.byteType;
  shortType=definition.shortType;
  charType=definition.charType;
  intType=definition.intType;
  longType=definition.longType;
  floatType=definition.floatType;
  doubleType=definition.doubleType;
  voidobjType=definition.voidobjType;
  booleanobjType=definition.booleanobjType;
  byteobjType=definition.byteobjType;
  shortobjType=definition.shortobjType;
  charobjType=definition.charobjType;
  intobjType=definition.intobjType;
  longobjType=definition.longobjType;
  floatobjType=definition.floatobjType;
  doubleobjType=definition.doubleobjType;
  objectType=definition.objectType;
  defType=definition.defType;
  numberType=definition.numberType;
  charseqType=definition.charseqType;
  stringType=definition.stringType;
  mathType=definition.mathType;
  utilityType=definition.utilityType;
  defobjType=definition.defobjType;
  itrType=definition.itrType;
  oitrType=definition.oitrType;
  sitrType=definition.sitrType;
  collectionType=definition.collectionType;
  ocollectionType=definition.ocollectionType;
  scollectionType=definition.scollectionType;
  listType=definition.listType;
  arraylistType=definition.arraylistType;
  olistType=definition.olistType;
  oarraylistType=definition.oarraylistType;
  slistType=definition.slistType;
  sarraylistType=definition.sarraylistType;
  setType=definition.setType;
  hashsetType=definition.hashsetType;
  osetType=definition.osetType;
  ohashsetType=definition.ohashsetType;
  ssetType=definition.ssetType;
  shashsetType=definition.shashsetType;
  mapType=definition.mapType;
  hashmapType=definition.hashmapType;
  oomapType=definition.oomapType;
  oohashmapType=definition.oohashmapType;
  smapType=definition.smapType;
  shashmapType=definition.shashmapType;
  somapType=definition.somapType;
  sohashmapType=definition.sohashmapType;
  execType=definition.execType;
  exceptionType=definition.exceptionType;
  arithexcepType=definition.arithexcepType;
  iargexcepType=definition.iargexcepType;
  istateexceptType=definition.istateexceptType;
  nfexcepType=definition.nfexcepType;
  geoPointType=definition.geoPointType;
  stringsType=definition.stringsType;
  longsType=definition.longsType;
  doublesType=definition.doublesType;
  geoPointsType=definition.geoPointsType;
}
