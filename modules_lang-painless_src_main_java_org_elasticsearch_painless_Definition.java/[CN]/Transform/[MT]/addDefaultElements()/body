{
  addMethod("Object","toString",null,false,stringType,new Type[]{},null,null);
  addMethod("Object","equals",null,false,booleanType,new Type[]{objectType},null,null);
  addMethod("Object","hashCode",null,false,intType,new Type[]{},null,null);
  addMethod("def","toString",null,false,stringType,new Type[]{},null,null);
  addMethod("def","equals",null,false,booleanType,new Type[]{objectType},null,null);
  addMethod("def","hashCode",null,false,intType,new Type[]{},null,null);
  addConstructor("Boolean","new",new Type[]{booleanType},null);
  addMethod("Boolean","valueOf",null,true,booleanobjType,new Type[]{booleanType},null,null);
  addMethod("Boolean","booleanValue",null,false,booleanType,new Type[]{},null,null);
  addConstructor("Byte","new",new Type[]{byteType},null);
  addMethod("Byte","valueOf",null,true,byteobjType,new Type[]{byteType},null,null);
  addField("Byte","MIN_VALUE",null,true,byteType,null);
  addField("Byte","MAX_VALUE",null,true,byteType,null);
  addConstructor("Short","new",new Type[]{shortType},null);
  addMethod("Short","valueOf",null,true,shortobjType,new Type[]{shortType},null,null);
  addField("Short","MIN_VALUE",null,true,shortType,null);
  addField("Short","MAX_VALUE",null,true,shortType,null);
  addConstructor("Character","new",new Type[]{charType},null);
  addMethod("Character","valueOf",null,true,charobjType,new Type[]{charType},null,null);
  addMethod("Character","charValue",null,false,charType,new Type[]{},null,null);
  addField("Character","MIN_VALUE",null,true,charType,null);
  addField("Character","MAX_VALUE",null,true,charType,null);
  addConstructor("Integer","new",new Type[]{intType},null);
  addMethod("Integer","valueOf",null,true,intobjType,new Type[]{intType},null,null);
  addField("Integer","MIN_VALUE",null,true,intType,null);
  addField("Integer","MAX_VALUE",null,true,intType,null);
  addConstructor("Long","new",new Type[]{longType},null);
  addMethod("Long","valueOf",null,true,longobjType,new Type[]{longType},null,null);
  addField("Long","MIN_VALUE",null,true,longType,null);
  addField("Long","MAX_VALUE",null,true,longType,null);
  addConstructor("Float","new",new Type[]{floatType},null);
  addMethod("Float","valueOf",null,true,floatobjType,new Type[]{floatType},null,null);
  addField("Float","MIN_VALUE",null,true,floatType,null);
  addField("Float","MAX_VALUE",null,true,floatType,null);
  addConstructor("Double","new",new Type[]{doubleType},null);
  addMethod("Double","valueOf",null,true,doubleobjType,new Type[]{doubleType},null,null);
  addField("Double","MIN_VALUE",null,true,doubleType,null);
  addField("Double","MAX_VALUE",null,true,doubleType,null);
  addMethod("Number","byteValue",null,false,byteType,new Type[]{},null,null);
  addMethod("Number","shortValue",null,false,shortType,new Type[]{},null,null);
  addMethod("Number","intValue",null,false,intType,new Type[]{},null,null);
  addMethod("Number","longValue",null,false,longType,new Type[]{},null,null);
  addMethod("Number","floatValue",null,false,floatType,new Type[]{},null,null);
  addMethod("Number","doubleValue",null,false,doubleType,new Type[]{},null,null);
  addMethod("CharSequence","charAt",null,false,charType,new Type[]{intType},null,null);
  addMethod("CharSequence","length",null,false,intType,new Type[]{},null,null);
  addConstructor("String","new",new Type[]{},null);
  addMethod("String","codePointAt",null,false,intType,new Type[]{intType},null,null);
  addMethod("String","compareTo",null,false,intType,new Type[]{stringType},null,null);
  addMethod("String","concat",null,false,stringType,new Type[]{stringType},null,null);
  addMethod("String","endsWith",null,false,booleanType,new Type[]{stringType},null,null);
  addMethod("String","indexOf",null,false,intType,new Type[]{stringType,intType},null,null);
  addMethod("String","isEmpty",null,false,booleanType,new Type[]{},null,null);
  addMethod("String","replace",null,false,stringType,new Type[]{charseqType,charseqType},null,null);
  addMethod("String","startsWith",null,false,booleanType,new Type[]{stringType},null,null);
  addMethod("String","substring",null,false,stringType,new Type[]{intType,intType},null,null);
  addMethod("String","toCharArray",null,false,getType(charType.struct,1),new Type[]{},null,null);
  addMethod("String","trim",null,false,stringType,new Type[]{},null,null);
  addMethod("Utility","NumberToboolean",null,true,booleanType,new Type[]{numberType},null,null);
  addMethod("Utility","NumberTochar",null,true,charType,new Type[]{numberType},null,null);
  addMethod("Utility","NumberToBoolean",null,true,booleanobjType,new Type[]{numberType},null,null);
  addMethod("Utility","NumberToByte",null,true,byteobjType,new Type[]{numberType},null,null);
  addMethod("Utility","NumberToShort",null,true,shortobjType,new Type[]{numberType},null,null);
  addMethod("Utility","NumberToCharacter",null,true,charobjType,new Type[]{numberType},null,null);
  addMethod("Utility","NumberToInteger",null,true,intobjType,new Type[]{numberType},null,null);
  addMethod("Utility","NumberToLong",null,true,longobjType,new Type[]{numberType},null,null);
  addMethod("Utility","NumberToFloat",null,true,floatobjType,new Type[]{numberType},null,null);
  addMethod("Utility","NumberToDouble",null,true,doubleobjType,new Type[]{numberType},null,null);
  addMethod("Utility","booleanTobyte",null,true,byteType,new Type[]{booleanType},null,null);
  addMethod("Utility","booleanToshort",null,true,shortType,new Type[]{booleanType},null,null);
  addMethod("Utility","booleanTochar",null,true,charType,new Type[]{booleanType},null,null);
  addMethod("Utility","booleanToint",null,true,intType,new Type[]{booleanType},null,null);
  addMethod("Utility","booleanTolong",null,true,longType,new Type[]{booleanType},null,null);
  addMethod("Utility","booleanTofloat",null,true,floatType,new Type[]{booleanType},null,null);
  addMethod("Utility","booleanTodouble",null,true,doubleType,new Type[]{booleanType},null,null);
  addMethod("Utility","booleanToInteger",null,true,intobjType,new Type[]{booleanType},null,null);
  addMethod("Utility","BooleanTobyte",null,true,byteType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanToshort",null,true,shortType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanTochar",null,true,charType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanToint",null,true,intType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanTolong",null,true,longType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanTofloat",null,true,floatType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanTodouble",null,true,doubleType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanToByte",null,true,byteobjType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanToShort",null,true,shortobjType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanToCharacter",null,true,charobjType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanToInteger",null,true,intobjType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanToLong",null,true,longobjType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanToFloat",null,true,floatobjType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","BooleanToDouble",null,true,doubleobjType,new Type[]{booleanobjType},null,null);
  addMethod("Utility","byteToboolean",null,true,booleanType,new Type[]{byteType},null,null);
  addMethod("Utility","byteToShort",null,true,shortobjType,new Type[]{byteType},null,null);
  addMethod("Utility","byteToCharacter",null,true,charobjType,new Type[]{byteType},null,null);
  addMethod("Utility","byteToInteger",null,true,intobjType,new Type[]{byteType},null,null);
  addMethod("Utility","byteToLong",null,true,longobjType,new Type[]{byteType},null,null);
  addMethod("Utility","byteToFloat",null,true,floatobjType,new Type[]{byteType},null,null);
  addMethod("Utility","byteToDouble",null,true,doubleobjType,new Type[]{byteType},null,null);
  addMethod("Utility","ByteToboolean",null,true,booleanType,new Type[]{byteobjType},null,null);
  addMethod("Utility","ByteTochar",null,true,charType,new Type[]{byteobjType},null,null);
  addMethod("Utility","shortToboolean",null,true,booleanType,new Type[]{shortType},null,null);
  addMethod("Utility","shortToByte",null,true,byteobjType,new Type[]{shortType},null,null);
  addMethod("Utility","shortToCharacter",null,true,charobjType,new Type[]{shortType},null,null);
  addMethod("Utility","shortToInteger",null,true,intobjType,new Type[]{shortType},null,null);
  addMethod("Utility","shortToLong",null,true,longobjType,new Type[]{shortType},null,null);
  addMethod("Utility","shortToFloat",null,true,floatobjType,new Type[]{shortType},null,null);
  addMethod("Utility","shortToDouble",null,true,doubleobjType,new Type[]{shortType},null,null);
  addMethod("Utility","ShortToboolean",null,true,booleanType,new Type[]{shortobjType},null,null);
  addMethod("Utility","ShortTochar",null,true,charType,new Type[]{shortobjType},null,null);
  addMethod("Utility","charToboolean",null,true,booleanType,new Type[]{charType},null,null);
  addMethod("Utility","charToByte",null,true,byteobjType,new Type[]{charType},null,null);
  addMethod("Utility","charToShort",null,true,shortobjType,new Type[]{charType},null,null);
  addMethod("Utility","charToInteger",null,true,intobjType,new Type[]{charType},null,null);
  addMethod("Utility","charToLong",null,true,longobjType,new Type[]{charType},null,null);
  addMethod("Utility","charToFloat",null,true,floatobjType,new Type[]{charType},null,null);
  addMethod("Utility","charToDouble",null,true,doubleobjType,new Type[]{charType},null,null);
  addMethod("Utility","charToString",null,true,stringType,new Type[]{charType},null,null);
  addMethod("Utility","CharacterToboolean",null,true,booleanType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterTobyte",null,true,byteType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterToshort",null,true,shortType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterToint",null,true,intType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterTolong",null,true,longType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterTofloat",null,true,floatType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterTodouble",null,true,doubleType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterToBoolean",null,true,booleanobjType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterToByte",null,true,byteobjType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterToShort",null,true,shortobjType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterToInteger",null,true,intobjType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterToLong",null,true,longobjType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterToFloat",null,true,floatobjType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterToDouble",null,true,doubleobjType,new Type[]{charobjType},null,null);
  addMethod("Utility","CharacterToString",null,true,stringType,new Type[]{charobjType},null,null);
  addMethod("Utility","intToboolean",null,true,booleanType,new Type[]{intType},null,null);
  addMethod("Utility","intToByte",null,true,byteobjType,new Type[]{intType},null,null);
  addMethod("Utility","intToShort",null,true,shortobjType,new Type[]{intType},null,null);
  addMethod("Utility","intToCharacter",null,true,charobjType,new Type[]{intType},null,null);
  addMethod("Utility","intToLong",null,true,longobjType,new Type[]{intType},null,null);
  addMethod("Utility","intToFloat",null,true,floatobjType,new Type[]{intType},null,null);
  addMethod("Utility","intToDouble",null,true,doubleobjType,new Type[]{intType},null,null);
  addMethod("Utility","IntegerToboolean",null,true,booleanType,new Type[]{intobjType},null,null);
  addMethod("Utility","IntegerTochar",null,true,charType,new Type[]{intobjType},null,null);
  addMethod("Utility","longToboolean",null,true,booleanType,new Type[]{longType},null,null);
  addMethod("Utility","longToByte",null,true,byteobjType,new Type[]{longType},null,null);
  addMethod("Utility","longToShort",null,true,shortobjType,new Type[]{longType},null,null);
  addMethod("Utility","longToCharacter",null,true,charobjType,new Type[]{longType},null,null);
  addMethod("Utility","longToInteger",null,true,intobjType,new Type[]{longType},null,null);
  addMethod("Utility","longToFloat",null,true,floatobjType,new Type[]{longType},null,null);
  addMethod("Utility","longToDouble",null,true,doubleobjType,new Type[]{longType},null,null);
  addMethod("Utility","LongToboolean",null,true,booleanType,new Type[]{longobjType},null,null);
  addMethod("Utility","LongTochar",null,true,charType,new Type[]{longobjType},null,null);
  addMethod("Utility","floatToboolean",null,true,booleanType,new Type[]{floatType},null,null);
  addMethod("Utility","floatToByte",null,true,byteobjType,new Type[]{floatType},null,null);
  addMethod("Utility","floatToShort",null,true,shortobjType,new Type[]{floatType},null,null);
  addMethod("Utility","floatToCharacter",null,true,charobjType,new Type[]{floatType},null,null);
  addMethod("Utility","floatToInteger",null,true,intobjType,new Type[]{floatType},null,null);
  addMethod("Utility","floatToLong",null,true,longobjType,new Type[]{floatType},null,null);
  addMethod("Utility","floatToDouble",null,true,doubleobjType,new Type[]{floatType},null,null);
  addMethod("Utility","FloatToboolean",null,true,booleanType,new Type[]{floatobjType},null,null);
  addMethod("Utility","FloatTochar",null,true,charType,new Type[]{floatobjType},null,null);
  addMethod("Utility","doubleToboolean",null,true,booleanType,new Type[]{doubleType},null,null);
  addMethod("Utility","doubleToByte",null,true,byteobjType,new Type[]{doubleType},null,null);
  addMethod("Utility","doubleToShort",null,true,shortobjType,new Type[]{doubleType},null,null);
  addMethod("Utility","doubleToCharacter",null,true,charobjType,new Type[]{doubleType},null,null);
  addMethod("Utility","doubleToInteger",null,true,intobjType,new Type[]{doubleType},null,null);
  addMethod("Utility","doubleToLong",null,true,longobjType,new Type[]{doubleType},null,null);
  addMethod("Utility","doubleToFloat",null,true,floatobjType,new Type[]{doubleType},null,null);
  addMethod("Utility","DoubleToboolean",null,true,booleanType,new Type[]{doubleobjType},null,null);
  addMethod("Utility","DoubleTochar",null,true,charType,new Type[]{doubleobjType},null,null);
  addMethod("Utility","StringTochar",null,true,charType,new Type[]{stringType},null,null);
  addMethod("Utility","StringToCharacter",null,true,charobjType,new Type[]{stringType},null,null);
  addMethod("Math","abs",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","fabs","abs",true,floatType,new Type[]{floatType},null,null);
  addMethod("Math","labs","abs",true,longType,new Type[]{longType},null,null);
  addMethod("Math","iabs","abs",true,intType,new Type[]{intType},null,null);
  addMethod("Math","acos",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","asin",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","atan",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","atan2",null,true,doubleType,new Type[]{doubleType,doubleType},null,null);
  addMethod("Math","cbrt",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","ceil",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","cos",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","cosh",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","exp",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","expm1",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","floor",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","hypot",null,true,doubleType,new Type[]{doubleType,doubleType},null,null);
  addMethod("Math","log",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","log10",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","log1p",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","max","max",true,doubleType,new Type[]{doubleType,doubleType},null,null);
  addMethod("Math","fmax","max",true,floatType,new Type[]{floatType,floatType},null,null);
  addMethod("Math","lmax","max",true,longType,new Type[]{longType,longType},null,null);
  addMethod("Math","imax","max",true,intType,new Type[]{intType,intType},null,null);
  addMethod("Math","min","min",true,doubleType,new Type[]{doubleType,doubleType},null,null);
  addMethod("Math","fmin","min",true,floatType,new Type[]{floatType,floatType},null,null);
  addMethod("Math","lmin","min",true,longType,new Type[]{longType,longType},null,null);
  addMethod("Math","imin","min",true,intType,new Type[]{intType,intType},null,null);
  addMethod("Math","pow",null,true,doubleType,new Type[]{doubleType,doubleType},null,null);
  addMethod("Math","random",null,true,doubleType,new Type[]{},null,null);
  addMethod("Math","rint",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","round",null,true,longType,new Type[]{doubleType},null,null);
  addMethod("Math","sin",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","sinh",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","sqrt",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","tan",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","tanh",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","toDegrees",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Math","toRadians",null,true,doubleType,new Type[]{doubleType},null,null);
  addMethod("Def","DefToboolean",null,true,booleanType,new Type[]{defType},null,null);
  addMethod("Def","DefTobyte",null,true,byteType,new Type[]{defType},null,null);
  addMethod("Def","DefToshort",null,true,shortType,new Type[]{defType},null,null);
  addMethod("Def","DefTochar",null,true,charType,new Type[]{defType},null,null);
  addMethod("Def","DefToint",null,true,intType,new Type[]{defType},null,null);
  addMethod("Def","DefTolong",null,true,longType,new Type[]{defType},null,null);
  addMethod("Def","DefTofloat",null,true,floatType,new Type[]{defType},null,null);
  addMethod("Def","DefTodouble",null,true,doubleType,new Type[]{defType},null,null);
  addMethod("Def","DefToBoolean",null,true,booleanobjType,new Type[]{defType},null,null);
  addMethod("Def","DefToByte",null,true,byteobjType,new Type[]{defType},null,null);
  addMethod("Def","DefToShort",null,true,shortobjType,new Type[]{defType},null,null);
  addMethod("Def","DefToCharacter",null,true,charobjType,new Type[]{defType},null,null);
  addMethod("Def","DefToInteger",null,true,intobjType,new Type[]{defType},null,null);
  addMethod("Def","DefToLong",null,true,longobjType,new Type[]{defType},null,null);
  addMethod("Def","DefToFloat",null,true,floatobjType,new Type[]{defType},null,null);
  addMethod("Def","DefToDouble",null,true,doubleobjType,new Type[]{defType},null,null);
  addMethod("Iterator","hasNext",null,false,booleanType,new Type[]{},null,null);
  addMethod("Iterator","next",null,false,objectType,new Type[]{},defType,null);
  addMethod("Iterator","remove",null,false,voidType,new Type[]{},null,null);
  addMethod("Iterator<Object>","hasNext",null,false,booleanType,new Type[]{},null,null);
  addMethod("Iterator<Object>","next",null,false,objectType,new Type[]{},null,null);
  addMethod("Iterator<Object>","remove",null,false,voidType,new Type[]{},null,null);
  addMethod("Iterator<String>","hasNext",null,false,booleanType,new Type[]{},null,null);
  addMethod("Iterator<String>","next",null,false,objectType,new Type[]{},stringType,null);
  addMethod("Iterator<String>","remove",null,false,voidType,new Type[]{},null,null);
  addMethod("Collection","add",null,false,booleanType,new Type[]{objectType},null,new Type[]{defType});
  addMethod("Collection","clear",null,false,voidType,new Type[]{},null,null);
  addMethod("Collection","contains",null,false,booleanType,new Type[]{objectType},null,new Type[]{defType});
  addMethod("Collection","isEmpty",null,false,booleanType,new Type[]{},null,null);
  addMethod("Collection","iterator",null,false,itrType,new Type[]{},null,null);
  addMethod("Collection","remove",null,false,booleanType,new Type[]{objectType},null,new Type[]{defType});
  addMethod("Collection","size",null,false,intType,new Type[]{},null,null);
  addMethod("Collection<Object>","add",null,false,booleanType,new Type[]{objectType},null,null);
  addMethod("Collection<Object>","clear",null,false,voidType,new Type[]{},null,null);
  addMethod("Collection<Object>","contains",null,false,booleanType,new Type[]{objectType},null,null);
  addMethod("Collection<Object>","isEmpty",null,false,booleanType,new Type[]{},null,null);
  addMethod("Collection<Object>","iterator",null,false,oitrType,new Type[]{},null,null);
  addMethod("Collection<Object>","remove",null,false,booleanType,new Type[]{objectType},null,null);
  addMethod("Collection<Object>","size",null,false,intType,new Type[]{},null,null);
  addMethod("Collection<String>","add",null,false,booleanType,new Type[]{objectType},null,new Type[]{stringType});
  addMethod("Collection<String>","clear",null,false,voidType,new Type[]{},null,null);
  addMethod("Collection<String>","contains",null,false,booleanType,new Type[]{objectType},null,new Type[]{stringType});
  addMethod("Collection<String>","isEmpty",null,false,booleanType,new Type[]{},null,null);
  addMethod("Collection<String>","iterator",null,false,sitrType,new Type[]{},null,null);
  addMethod("Collection<String>","remove",null,false,booleanType,new Type[]{objectType},null,new Type[]{stringType});
  addMethod("Collection<String>","size",null,false,intType,new Type[]{},null,null);
  addMethod("List","set",null,false,objectType,new Type[]{intType,objectType},defType,new Type[]{intType,defType});
  addMethod("List","get",null,false,objectType,new Type[]{intType},defType,null);
  addMethod("List","remove",null,false,objectType,new Type[]{intType},defType,null);
  addConstructor("ArrayList","new",new Type[]{},null);
  addMethod("List<Object>","set",null,false,objectType,new Type[]{intType,objectType},null,null);
  addMethod("List<Object>","get",null,false,objectType,new Type[]{intType},null,null);
  addMethod("List<Object>","remove",null,false,objectType,new Type[]{intType},null,null);
  addConstructor("ArrayList<Object>","new",new Type[]{},null);
  addMethod("List<String>","set",null,false,objectType,new Type[]{intType,objectType},stringType,new Type[]{intType,stringType});
  addMethod("List<String>","get",null,false,objectType,new Type[]{intType},stringType,null);
  addMethod("List<String>","remove",null,false,objectType,new Type[]{intType},stringType,null);
  addConstructor("ArrayList<String>","new",new Type[]{},null);
  addConstructor("HashSet","new",new Type[]{},null);
  addConstructor("HashSet<Object>","new",new Type[]{},null);
  addConstructor("HashSet<String>","new",new Type[]{},null);
  addMethod("Map","put",null,false,objectType,new Type[]{objectType,objectType},defType,new Type[]{defType,defType});
  addMethod("Map","get",null,false,objectType,new Type[]{objectType},defType,new Type[]{defType});
  addMethod("Map","remove",null,false,objectType,new Type[]{objectType},null,null);
  addMethod("Map","isEmpty",null,false,booleanType,new Type[]{},null,null);
  addMethod("Map","size",null,false,intType,new Type[]{},null,null);
  addMethod("Map","containsKey",null,false,booleanType,new Type[]{objectType},null,new Type[]{defType});
  addMethod("Map","containsValue",null,false,booleanType,new Type[]{objectType},null,new Type[]{defType});
  addMethod("Map","keySet",null,false,osetType,new Type[]{},setType,null);
  addMethod("Map","values",null,false,ocollectionType,new Type[]{},collectionType,null);
  addConstructor("HashMap","new",new Type[]{},null);
  addMethod("Map<Object,Object>","put",null,false,objectType,new Type[]{objectType,objectType},null,null);
  addMethod("Map<Object,Object>","get",null,false,objectType,new Type[]{objectType},null,null);
  addMethod("Map<Object,Object>","remove",null,false,objectType,new Type[]{objectType},null,null);
  addMethod("Map<Object,Object>","isEmpty",null,false,booleanType,new Type[]{},null,null);
  addMethod("Map<Object,Object>","size",null,false,intType,new Type[]{},null,null);
  addMethod("Map<Object,Object>","containsKey",null,false,booleanType,new Type[]{objectType},null,null);
  addMethod("Map<Object,Object>","containsValue",null,false,booleanType,new Type[]{objectType},null,null);
  addMethod("Map<Object,Object>","keySet",null,false,osetType,new Type[]{},null,null);
  addMethod("Map<Object,Object>","values",null,false,ocollectionType,new Type[]{},null,null);
  addConstructor("HashMap<Object,Object>","new",new Type[]{},null);
  addMethod("Map<String,def>","put",null,false,objectType,new Type[]{objectType,objectType},defType,new Type[]{stringType,defType});
  addMethod("Map<String,def>","get",null,false,objectType,new Type[]{objectType},defType,new Type[]{stringType});
  addMethod("Map<String,def>","remove",null,false,objectType,new Type[]{objectType},defType,new Type[]{stringType});
  addMethod("Map<String,def>","isEmpty",null,false,booleanType,new Type[]{},null,null);
  addMethod("Map<String,def>","size",null,false,intType,new Type[]{},null,null);
  addMethod("Map<String,def>","containsKey",null,false,booleanType,new Type[]{objectType},null,new Type[]{stringType});
  addMethod("Map<String,def>","containsValue",null,false,booleanType,new Type[]{objectType},null,new Type[]{defType});
  addMethod("Map<String,def>","keySet",null,false,osetType,new Type[]{},ssetType,null);
  addMethod("Map<String,def>","values",null,false,ocollectionType,new Type[]{},collectionType,null);
  addConstructor("HashMap<String,def>","new",new Type[]{},null);
  addMethod("Map<String,Object>","put",null,false,objectType,new Type[]{objectType,objectType},null,new Type[]{stringType,objectType});
  addMethod("Map<String,Object>","get",null,false,objectType,new Type[]{objectType},null,new Type[]{stringType});
  addMethod("Map<String,Object>","remove",null,false,objectType,new Type[]{objectType},null,new Type[]{stringType});
  addMethod("Map<String,Object>","isEmpty",null,false,booleanType,new Type[]{},null,null);
  addMethod("Map<String,Object>","size",null,false,intType,new Type[]{},null,null);
  addMethod("Map<String,Object>","containsKey",null,false,booleanType,new Type[]{objectType},null,new Type[]{stringType});
  addMethod("Map<String,Object>","containsValue",null,false,booleanType,new Type[]{objectType},null,null);
  addMethod("Map<String,Object>","keySet",null,false,osetType,new Type[]{},ssetType,null);
  addMethod("Map<String,Object>","values",null,false,ocollectionType,new Type[]{},null,null);
  addConstructor("HashMap<String,Object>","new",new Type[]{},null);
  addMethod("Exception","getMessage",null,false,stringType,new Type[]{},null,null);
  addConstructor("ArithmeticException","new",new Type[]{stringType},null);
  addConstructor("IllegalArgumentException","new",new Type[]{stringType},null);
  addConstructor("IllegalStateException","new",new Type[]{stringType},null);
  addConstructor("NumberFormatException","new",new Type[]{stringType},null);
}
