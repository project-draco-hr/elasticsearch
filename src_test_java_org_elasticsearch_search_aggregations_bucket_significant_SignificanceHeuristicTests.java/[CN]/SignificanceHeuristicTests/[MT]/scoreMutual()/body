{
  SignificanceHeuristic heuristic=new MutualInformation(true,true);
  assertThat(heuristic.getScore(1,1,1,3),greaterThan(0.0));
  assertThat(heuristic.getScore(1,1,2,3),lessThan(heuristic.getScore(1,1,1,3)));
  assertThat(heuristic.getScore(2,2,2,4),equalTo(1.0));
  assertThat(heuristic.getScore(0,2,2,4),equalTo(1.0));
  assertThat(heuristic.getScore(2,2,4,4),equalTo(0.0));
  assertThat(heuristic.getScore(1,2,2,4),equalTo(0.0));
  assertThat(heuristic.getScore(3,6,9,18),equalTo(0.0));
  double score=0.0;
  try {
    long a=randomLong();
    long b=randomLong();
    long c=randomLong();
    long d=randomLong();
    score=heuristic.getScore(a,b,c,d);
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  assertThat(score,lessThanOrEqualTo(1.0));
  assertThat(score,greaterThanOrEqualTo(0.0));
  heuristic=new MutualInformation(false,true);
  assertThat(heuristic.getScore(0,1,2,3),equalTo(-1.0 * Double.MAX_VALUE));
}
