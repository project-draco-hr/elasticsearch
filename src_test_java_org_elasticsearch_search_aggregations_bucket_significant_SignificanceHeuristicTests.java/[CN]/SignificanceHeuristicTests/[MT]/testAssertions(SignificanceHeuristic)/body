{
  try {
    int idx=randomInt(3);
    long[] values={1,2,3,4};
    values[idx]*=-1;
    heuristic.getScore(values[0],values[1],values[2],values[3]);
    fail();
  }
 catch (  IllegalArgumentException illegalArgumentException) {
    assertNotNull(illegalArgumentException.getMessage());
    assertTrue(illegalArgumentException.getMessage().contains("Frequencies of subset and superset must be positive"));
  }
  try {
    heuristic.getScore(1,2,4,3);
    fail();
  }
 catch (  IllegalArgumentException illegalArgumentException) {
    assertNotNull(illegalArgumentException.getMessage());
    assertTrue(illegalArgumentException.getMessage().contains("supersetFreq > supersetSize"));
  }
  try {
    heuristic.getScore(2,1,3,4);
    fail();
  }
 catch (  IllegalArgumentException illegalArgumentException) {
    assertNotNull(illegalArgumentException.getMessage());
    assertTrue(illegalArgumentException.getMessage().contains("subsetFreq > subsetSize"));
  }
}
