{
  if (disruptedNode == null) {
    return false;
  }
  logger.info("delaying cluster state updates on node [{}] for [{}]",disruptedNode,duration);
  ClusterService clusterService=cluster.getInstance(ClusterService.class,disruptedNode);
  clusterService.submitStateUpdateTask("service_disruption_delay",Priority.IMMEDIATE,new ClusterStateNonMasterUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState) throws Exception {
      Thread.sleep(duration.millis());
      return currentState;
    }
    @Override public void onFailure(    String source,    Throwable t){
    }
  }
);
  return true;
}
