{
  CachedStreamOutput.Entry cachedEntry=CachedStreamOutput.popEntry();
  BytesStreamOutput stream;
  try {
    stream=cachedEntry.bytes();
    cachedEntry.bytes().skip(NettyHeader.HEADER_SIZE);
    RemoteTransportException tx=new RemoteTransportException(transport.nodeName(),transport.wrapAddress(channel.getLocalAddress()),action,error);
    ThrowableObjectOutputStream too=new ThrowableObjectOutputStream(stream);
    too.writeObject(tx);
    too.close();
  }
 catch (  NotSerializableException e) {
    cachedEntry.reset();
    stream=cachedEntry.bytes();
    cachedEntry.bytes().skip(NettyHeader.HEADER_SIZE);
    RemoteTransportException tx=new RemoteTransportException(transport.nodeName(),transport.wrapAddress(channel.getLocalAddress()),action,new NotSerializableTransportException(error));
    ThrowableObjectOutputStream too=new ThrowableObjectOutputStream(stream);
    too.writeObject(tx);
    too.close();
  }
  byte status=0;
  status=TransportStatus.setResponse(status);
  status=TransportStatus.setError(status);
  ChannelBuffer buffer=cachedEntry.bytes().bytes().toChannelBuffer();
  NettyHeader.writeHeader(buffer,requestId,status);
  ChannelFuture future=channel.write(buffer);
  future.addListener(new NettyTransport.CacheFutureListener(cachedEntry));
}
