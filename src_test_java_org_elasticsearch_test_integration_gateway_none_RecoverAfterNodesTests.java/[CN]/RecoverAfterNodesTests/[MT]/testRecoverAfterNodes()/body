{
  logger.info("--> start node (1)");
  startNode("node1",settingsBuilder().put("gateway.recover_after_nodes",3));
  assertThat(client("node1").admin().cluster().prepareState().setLocal(true).execute().actionGet().getState().blocks().global(ClusterBlockLevel.METADATA),hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));
  logger.info("--> start node (2)");
  startNode("node2",settingsBuilder().put("gateway.recover_after_nodes",3));
  Thread.sleep(BLOCK_WAIT_TIMEOUT.millis());
  assertThat(client("node1").admin().cluster().prepareState().setLocal(true).execute().actionGet().getState().blocks().global(ClusterBlockLevel.METADATA),hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));
  assertThat(client("node2").admin().cluster().prepareState().setLocal(true).execute().actionGet().getState().blocks().global(ClusterBlockLevel.METADATA),hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));
  logger.info("--> start node (3)");
  startNode("node3",settingsBuilder().put("gateway.recover_after_nodes",3));
  assertThat(waitForNoBlocks(BLOCK_WAIT_TIMEOUT,"node1").isEmpty(),equalTo(true));
  assertThat(waitForNoBlocks(BLOCK_WAIT_TIMEOUT,"node2").isEmpty(),equalTo(true));
  assertThat(waitForNoBlocks(BLOCK_WAIT_TIMEOUT,"node3").isEmpty(),equalTo(true));
}
