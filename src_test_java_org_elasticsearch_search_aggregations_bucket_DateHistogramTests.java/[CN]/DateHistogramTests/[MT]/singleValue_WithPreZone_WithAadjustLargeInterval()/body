{
  prepareCreate("idx2").addMapping("type","date","type=date").execute().actionGet();
  IndexRequestBuilder[] reqs=new IndexRequestBuilder[5];
  DateTime date=date("2014-03-11T00:00:00+00:00");
  for (int i=0; i < reqs.length; i++) {
    reqs[i]=client().prepareIndex("idx2","type","" + i).setSource(jsonBuilder().startObject().field("date",date).endObject());
    date=date.plusHours(1);
  }
  indexRandom(true,reqs);
  SearchResponse response=client().prepareSearch("idx2").setQuery(matchAllQuery()).addAggregation(dateHistogram("date_histo").field("date").preZone("-2:00").interval(DateHistogram.Interval.DAY).preZoneAdjustLargeInterval(true).format("yyyy-MM-dd'T'HH:mm:ss")).execute().actionGet();
  assertThat(response.getHits().getTotalHits(),equalTo(5l));
  DateHistogram histo=response.getAggregations().get("date_histo");
  Collection<? extends DateHistogram.Bucket> buckets=histo.getBuckets();
  assertThat(buckets.size(),equalTo(2));
  DateHistogram.Bucket bucket=histo.getBucketByKey("2014-03-10T02:00:00");
  assertThat(bucket,Matchers.notNullValue());
  assertThat(bucket.getDocCount(),equalTo(2l));
  bucket=histo.getBucketByKey("2014-03-11T02:00:00");
  assertThat(bucket,Matchers.notNullValue());
  assertThat(bucket.getDocCount(),equalTo(3l));
}
