{
  SearchResponse response=client().prepareSearch("idx").addAggregation(dateHistogram("histo").field("date").timeZone("+01:00").interval(DateHistogramInterval.MONTH).minDocCount(0)).execute().actionGet();
  assertSearchResponse(response);
  DateTimeZone tz=DateTimeZone.forID("+01:00");
  Histogram histo=response.getAggregations().get("histo");
  assertThat(histo,notNullValue());
  assertThat(histo.getName(),equalTo("histo"));
  List<? extends Bucket> buckets=histo.getBuckets();
  assertThat(buckets.size(),equalTo(3));
  DateTime key=new DateTime(2011,12,31,23,0,DateTimeZone.UTC);
  Histogram.Bucket bucket=buckets.get(0);
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKeyAsString(),equalTo(getBucketKeyAsString(key,tz)));
  assertThat(((DateTime)bucket.getKey()),equalTo(key));
  assertThat(bucket.getDocCount(),equalTo(1l));
  key=new DateTime(2012,1,31,23,0,DateTimeZone.UTC);
  bucket=buckets.get(1);
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKeyAsString(),equalTo(getBucketKeyAsString(key,tz)));
  assertThat(((DateTime)bucket.getKey()),equalTo(key));
  assertThat(bucket.getDocCount(),equalTo(2l));
  key=new DateTime(2012,2,29,23,0,DateTimeZone.UTC);
  bucket=buckets.get(2);
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKeyAsString(),equalTo(getBucketKeyAsString(key,tz)));
  assertThat(((DateTime)bucket.getKey()),equalTo(key));
  assertThat(bucket.getDocCount(),equalTo(3l));
}
