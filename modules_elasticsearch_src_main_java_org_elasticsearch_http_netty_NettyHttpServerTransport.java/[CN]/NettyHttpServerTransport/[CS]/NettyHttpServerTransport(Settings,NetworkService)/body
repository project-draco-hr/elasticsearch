{
  super(settings);
  this.networkService=networkService;
  SizeValue maxContentLength=componentSettings.getAsSize("max_content_length",settings.getAsSize("http.max_content_length",new SizeValue(100,SizeUnit.MB)));
  this.workerCount=componentSettings.getAsInt("worker_count",Runtime.getRuntime().availableProcessors());
  this.port=componentSettings.get("port",settings.get("http.port","9200-9300"));
  this.bindHost=componentSettings.get("bind_host");
  this.publishHost=componentSettings.get("publish_host");
  this.tcpNoDelay=componentSettings.getAsBoolean("tcp_no_delay",settings.getAsBoolean(TCP_NO_DELAY,true));
  this.tcpKeepAlive=componentSettings.getAsBoolean("tcp_keep_alive",settings.getAsBoolean(TCP_KEEP_ALIVE,null));
  this.reuseAddress=componentSettings.getAsBoolean("reuse_address",settings.getAsBoolean(TCP_REUSE_ADDRESS,NetworkUtils.defaultReuseAddress()));
  this.tcpSendBufferSize=componentSettings.getAsSize("tcp_send_buffer_size",settings.getAsSize(TCP_SEND_BUFFER_SIZE,null));
  this.tcpReceiveBufferSize=componentSettings.getAsSize("tcp_receive_buffer_size",settings.getAsSize(TCP_RECEIVE_BUFFER_SIZE,null));
  if (maxContentLength.bytes() > Integer.MAX_VALUE) {
    logger.warn("maxContentLength[" + maxContentLength + "] set to high value, resetting it to [100mb]");
    maxContentLength=new SizeValue(100,SizeUnit.MB);
  }
  this.maxContentLength=maxContentLength;
}
