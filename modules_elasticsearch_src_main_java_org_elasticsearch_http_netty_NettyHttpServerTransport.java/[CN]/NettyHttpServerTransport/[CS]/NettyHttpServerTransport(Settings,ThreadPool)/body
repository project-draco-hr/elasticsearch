{
  super(settings);
  this.threadPool=threadPool;
  SizeValue maxContentLength=componentSettings.getAsSize("maxContentLength",new SizeValue(100,SizeUnit.MB));
  this.workerCount=componentSettings.getAsInt("workerCount",Runtime.getRuntime().availableProcessors());
  this.port=componentSettings.get("port","9200-9300");
  this.bindHost=componentSettings.get("bindHost");
  this.publishHost=componentSettings.get("publishHost");
  this.tcpNoDelay=componentSettings.getAsBoolean("tcpNoDelay",true);
  this.tcpKeepAlive=componentSettings.getAsBoolean("tcpKeepAlive",null);
  this.reuseAddress=componentSettings.getAsBoolean("reuseAddress",true);
  this.tcpSendBufferSize=componentSettings.getAsSize("tcpSendBufferSize",null);
  this.tcpReceiveBufferSize=componentSettings.getAsSize("tcpReceiveBufferSize",null);
  this.httpKeepAlive=componentSettings.getAsTime("httpKeepAlive",timeValueSeconds(30));
  this.httpKeepAliveTickDuration=componentSettings.getAsTime("httpKeepAliveTickDuration",timeValueMillis(500));
  if ((httpKeepAliveTickDuration.millis() * 10) > httpKeepAlive.millis()) {
    logger.warn("Suspicious keep alive settings, httpKeepAlive set to [{}], while httpKeepAliveTickDuration is set to [{}]",httpKeepAlive,httpKeepAliveTickDuration);
  }
  if (maxContentLength.bytes() > Integer.MAX_VALUE) {
    logger.warn("maxContentLength[" + maxContentLength + "] set to high value, resetting it to [100mb]");
    maxContentLength=new SizeValue(100,SizeUnit.MB);
  }
  this.maxContentLength=maxContentLength;
}
