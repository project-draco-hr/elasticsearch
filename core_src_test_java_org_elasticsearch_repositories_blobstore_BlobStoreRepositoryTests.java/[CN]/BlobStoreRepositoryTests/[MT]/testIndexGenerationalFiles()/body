{
  final BlobStoreRepository repository=setupRepo();
  final int numSnapshots=randomIntBetween(1,1000);
  final List<SnapshotId> snapshotIds=new ArrayList<>(numSnapshots);
  for (int i=0; i < numSnapshots; i++) {
    snapshotIds.add(new SnapshotId(randomAsciiOfLength(8),UUIDs.randomBase64UUID()));
  }
  repository.writeSnapshotsToIndexGen(snapshotIds);
  assertThat(Sets.newHashSet(repository.readSnapshotsFromIndex()),equalTo(Sets.newHashSet(snapshotIds)));
  assertThat(repository.latestIndexBlobId(),equalTo(0L));
  assertThat(repository.readSnapshotIndexLatestBlob(),equalTo(0L));
  for (int i=0; i < 10; i++) {
    snapshotIds.add(new SnapshotId(randomAsciiOfLength(8),UUIDs.randomBase64UUID()));
  }
  repository.writeSnapshotsToIndexGen(snapshotIds);
  assertThat(Sets.newHashSet(repository.readSnapshotsFromIndex()),equalTo(Sets.newHashSet(snapshotIds)));
  assertThat(repository.latestIndexBlobId(),equalTo(1L));
  assertThat(repository.readSnapshotIndexLatestBlob(),equalTo(1L));
  snapshotIds.remove(0);
  repository.writeSnapshotsToIndexGen(snapshotIds);
  assertThat(Sets.newHashSet(repository.readSnapshotsFromIndex()),equalTo(Sets.newHashSet(snapshotIds)));
  assertThat(repository.latestIndexBlobId(),equalTo(2L));
  assertThat(repository.readSnapshotIndexLatestBlob(),equalTo(2L));
}
