{
  final Client client=client();
  final Path location=ESIntegTestCase.randomRepoPath(node().settings());
  final String repositoryName="test-repo";
  PutRepositoryResponse putRepositoryResponse=client.admin().cluster().preparePutRepository(repositoryName).setType("fs").setSettings(Settings.builder().put(node().settings()).put("location",location)).get();
  assertThat(putRepositoryResponse.isAcknowledged(),equalTo(true));
  final RepositoriesService repositoriesService=getInstanceFromNode(RepositoriesService.class);
  @SuppressWarnings("unchecked") final BlobStoreRepository repository=(BlobStoreRepository)repositoriesService.repository(repositoryName);
  repository.writeSnapshotList(Collections.emptyList());
  List<SnapshotId> readSnapshotIds=repository.readSnapshotList();
  assertThat(readSnapshotIds.size(),equalTo(0));
  final int numSnapshots=randomIntBetween(1,1000);
  final List<SnapshotId> snapshotIds=new ArrayList<>(numSnapshots);
  for (int i=0; i < numSnapshots; i++) {
    snapshotIds.add(new SnapshotId(randomAsciiOfLength(8),UUIDs.randomBase64UUID()));
  }
  repository.writeSnapshotList(snapshotIds);
  readSnapshotIds=repository.readSnapshotList();
  assertThat(readSnapshotIds,equalTo(snapshotIds));
}
