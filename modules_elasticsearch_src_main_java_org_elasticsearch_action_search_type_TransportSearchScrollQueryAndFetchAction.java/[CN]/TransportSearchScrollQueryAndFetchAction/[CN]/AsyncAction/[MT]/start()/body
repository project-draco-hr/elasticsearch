{
  if (scrollId.values().length == 0) {
    listener.onFailure(new SearchPhaseExecutionException("query","no nodes to search on",null));
  }
  int localOperations=0;
  for (  Tuple<String,Long> target : scrollId.values()) {
    DiscoveryNode node=nodes.get(target.v1());
    if (node != null) {
      if (nodes.localNodeId().equals(node.id())) {
        localOperations++;
      }
 else {
        executePhase(node,target.v2());
      }
    }
 else {
      if (logger.isDebugEnabled()) {
        logger.debug("Node [" + target.v1() + "] not available for scroll request ["+ scrollId.source()+ "]");
      }
      successfulOps.decrementAndGet();
      if (counter.decrementAndGet() == 0) {
        finishHim();
      }
    }
  }
  if (localOperations > 0) {
    if (request.operationThreading() == SearchOperationThreading.SINGLE_THREAD) {
      threadPool.executor(ThreadPool.Names.SEARCH).execute(new Runnable(){
        @Override public void run(){
          for (          Tuple<String,Long> target : scrollId.values()) {
            DiscoveryNode node=nodes.get(target.v1());
            if (node != null && nodes.localNodeId().equals(node.id())) {
              executePhase(node,target.v2());
            }
          }
        }
      }
);
    }
 else {
      boolean localAsync=request.operationThreading() == SearchOperationThreading.THREAD_PER_SHARD;
      for (      final Tuple<String,Long> target : scrollId.values()) {
        final DiscoveryNode node=nodes.get(target.v1());
        if (node != null && nodes.localNodeId().equals(node.id())) {
          if (localAsync) {
            threadPool.executor(ThreadPool.Names.SEARCH).execute(new Runnable(){
              @Override public void run(){
                executePhase(node,target.v2());
              }
            }
);
          }
 else {
            executePhase(node,target.v2());
          }
        }
      }
    }
  }
  for (  Tuple<String,Long> target : scrollId.values()) {
    DiscoveryNode node=nodes.get(target.v1());
    if (node == null) {
      if (logger.isDebugEnabled()) {
        logger.debug("Node [" + target.v1() + "] not available for scroll request ["+ scrollId.source()+ "]");
      }
      successfulOps.decrementAndGet();
      if (counter.decrementAndGet() == 0) {
        finishHim();
      }
    }
 else {
    }
  }
}
