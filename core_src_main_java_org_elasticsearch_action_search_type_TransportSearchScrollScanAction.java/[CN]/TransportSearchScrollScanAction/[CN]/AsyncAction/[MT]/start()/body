{
  if (scrollId.getContext().length == 0) {
    final InternalSearchResponse internalResponse=new InternalSearchResponse(new InternalSearchHits(InternalSearchHits.EMPTY,Long.parseLong(this.scrollId.getAttributes().get("total_hits")),0.0f),null,null,false,null);
    listener.onResponse(new SearchResponse(internalResponse,request.scrollId(),0,0,0l,buildShardFailures()));
    return;
  }
  ScrollIdForNode[] context=scrollId.getContext();
  for (int i=0; i < context.length; i++) {
    ScrollIdForNode target=context[i];
    DiscoveryNode node=nodes.get(target.getNode());
    if (node != null) {
      executePhase(i,node,target.getScrollId());
    }
 else {
      if (logger.isDebugEnabled()) {
        logger.debug("Node [" + target.getScrollId() + "] not available for scroll request ["+ scrollId.getSource()+ "]");
      }
      successfulOps.decrementAndGet();
      if (counter.decrementAndGet() == 0) {
        finishHim();
      }
    }
  }
  for (  ScrollIdForNode target : scrollId.getContext()) {
    DiscoveryNode node=nodes.get(target.getNode());
    if (node == null) {
      if (logger.isDebugEnabled()) {
        logger.debug("Node [" + target.getNode() + "] not available for scroll request ["+ scrollId.getSource()+ "]");
      }
      successfulOps.decrementAndGet();
      if (counter.decrementAndGet() == 0) {
        finishHim();
      }
    }
 else {
    }
  }
}
