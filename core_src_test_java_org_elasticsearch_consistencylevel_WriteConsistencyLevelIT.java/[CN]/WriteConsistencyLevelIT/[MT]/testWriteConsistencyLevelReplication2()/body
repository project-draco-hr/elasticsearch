{
  prepareCreate("test",1,Settings.builder().put("index.number_of_shards",1).put("index.number_of_replicas",2)).execute().actionGet();
  ClusterHealthResponse clusterHealth=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForActiveShards(1).setWaitForYellowStatus().execute().actionGet();
  logger.info("Done Cluster Health, status {}",clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.YELLOW));
  client().prepareIndex("test","type1","1").setSource(source("1","test")).setConsistencyLevel(WriteConsistencyLevel.ONE).execute().actionGet();
  try {
    client().prepareIndex("test","type1","1").setSource(source("1","test")).setConsistencyLevel(WriteConsistencyLevel.QUORUM).setTimeout(timeValueMillis(100)).execute().actionGet();
    fail("can't index, does not match consistency");
  }
 catch (  UnavailableShardsException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
    assertThat(e.getMessage(),equalTo("[test][0] Not enough active copies to meet write consistency of [QUORUM] (have 1, needed 2). Timeout: [100ms], request: [index {[test][type1][1], source[{ \"type1\" : { \"id\" : \"1\", \"name\" : \"test\" } }]}]"));
  }
  allowNodes("test",2);
  clusterHealth=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForActiveShards(2).setWaitForYellowStatus().execute().actionGet();
  logger.info("Done Cluster Health, status {}",clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.YELLOW));
  client().prepareIndex("test","type1","1").setSource(source("1","test")).setConsistencyLevel(WriteConsistencyLevel.QUORUM).setTimeout(timeValueSeconds(1)).execute().actionGet();
  try {
    client().prepareIndex("test","type1","1").setSource(source("1","test")).setConsistencyLevel(WriteConsistencyLevel.ALL).setTimeout(timeValueMillis(100)).execute().actionGet();
    fail("can't index, does not match consistency");
  }
 catch (  UnavailableShardsException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
    assertThat(e.getMessage(),equalTo("[test][0] Not enough active copies to meet write consistency of [ALL] (have 2, needed 3). Timeout: [100ms], request: [index {[test][type1][1], source[{ \"type1\" : { \"id\" : \"1\", \"name\" : \"test\" } }]}]"));
  }
  allowNodes("test",3);
  clusterHealth=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForActiveShards(3).setWaitForGreenStatus().execute().actionGet();
  logger.info("Done Cluster Health, status {}",clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  client().prepareIndex("test","type1","1").setSource(source("1","test")).setConsistencyLevel(WriteConsistencyLevel.ALL).setTimeout(timeValueSeconds(1)).execute().actionGet();
}
