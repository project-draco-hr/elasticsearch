{
  if (versionRange == null) {
    return new Version[]{null,null};
  }
  if (versionRange.trim().equals("all")) {
    return new Version[]{VersionUtils.getFirstVersion(),Version.CURRENT};
  }
  String[] skipVersions=versionRange.split("-");
  if (skipVersions.length > 2) {
    throw new IllegalArgumentException("version range malformed: " + versionRange);
  }
  String lower=skipVersions[0].trim();
  String upper=skipVersions[1].trim();
  return new Version[]{lower.isEmpty() ? VersionUtils.getFirstVersion() : Version.fromString(lower),upper.isEmpty() ? Version.CURRENT : Version.fromString(upper)};
}
