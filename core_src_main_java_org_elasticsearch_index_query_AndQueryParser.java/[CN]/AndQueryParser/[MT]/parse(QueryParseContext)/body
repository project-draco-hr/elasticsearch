{
  XContentParser parser=parseContext.parser();
  ArrayList<Query> queries=new ArrayList<>();
  boolean queriesFound=false;
  String queryName=null;
  String currentFieldName=null;
  XContentParser.Token token=parser.currentToken();
  if (token == XContentParser.Token.START_ARRAY) {
    while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
      queriesFound=true;
      Query filter=parseContext.parseInnerFilter();
      if (filter != null) {
        queries.add(filter);
      }
    }
  }
 else {
    while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
      if (token == XContentParser.Token.FIELD_NAME) {
        currentFieldName=parser.currentName();
      }
 else       if (parseContext.isDeprecatedSetting(currentFieldName)) {
      }
 else       if (token == XContentParser.Token.START_ARRAY) {
        if ("filters".equals(currentFieldName)) {
          queriesFound=true;
          while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
            Query filter=parseContext.parseInnerFilter();
            if (filter != null) {
              queries.add(filter);
            }
          }
        }
 else {
          queriesFound=true;
          while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
            Query filter=parseContext.parseInnerFilter();
            if (filter != null) {
              queries.add(filter);
            }
          }
        }
      }
 else       if (token.isValue()) {
        if ("_name".equals(currentFieldName)) {
          queryName=parser.text();
        }
 else {
          throw new QueryParsingException(parseContext,"[and] query does not support [" + currentFieldName + "]");
        }
      }
    }
  }
  if (!queriesFound) {
    throw new QueryParsingException(parseContext,"[and] query requires 'filters' to be set on it'");
  }
  if (queries.isEmpty()) {
    return null;
  }
  BooleanQuery.Builder queryBuilder=new BooleanQuery.Builder();
  for (  Query f : queries) {
    queryBuilder.add(f,Occur.MUST);
  }
  BooleanQuery query=queryBuilder.build();
  if (queryName != null) {
    parseContext.addNamedQuery(queryName,query);
  }
  return query;
}
