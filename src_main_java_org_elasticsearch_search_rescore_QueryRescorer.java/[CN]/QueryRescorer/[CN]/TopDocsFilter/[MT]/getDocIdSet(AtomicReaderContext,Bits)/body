{
  final int docBase=context.docBase;
  int limit=docBase + context.reader().maxDoc();
  int offset=Arrays.binarySearch(docIds,docBase);
  if (offset < 0) {
    offset=(-offset) - 1;
  }
  int end=Arrays.binarySearch(docIds,limit);
  if (end < 0) {
    end=(-end) - 1;
  }
  final int start=offset;
  final int stop=end;
  return new DocIdSet(){
    @Override public DocIdSetIterator iterator() throws IOException {
      return new DocIdSetIterator(){
        private int current=start;
        private int docId=NO_MORE_DOCS;
        @Override public int nextDoc() throws IOException {
          if (current < stop) {
            return docId=docIds[current++] - docBase;
          }
          return docId=NO_MORE_DOCS;
        }
        @Override public int docID(){
          return docId;
        }
        @Override public int advance(        int target) throws IOException {
          if (target == NO_MORE_DOCS) {
            current=stop;
            return docId=NO_MORE_DOCS;
          }
          while (nextDoc() < target) {
          }
          return docId;
        }
        @Override public long cost(){
          return docIds.length;
        }
      }
;
    }
  }
;
}
