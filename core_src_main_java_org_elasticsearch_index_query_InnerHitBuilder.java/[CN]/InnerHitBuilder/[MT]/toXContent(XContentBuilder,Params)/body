{
  builder.startObject();
  if (name != null) {
    builder.field(NAME_FIELD.getPreferredName(),name);
  }
  builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(),from);
  builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(),size);
  builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(),version);
  builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(),explain);
  builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(),trackScores);
  if (fetchSourceContext != null) {
    builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(),fetchSourceContext,params);
  }
  if (storedFieldNames != null) {
    if (storedFieldNames.size() == 1) {
      builder.field(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(),storedFieldNames.get(0));
    }
 else {
      builder.startArray(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName());
      for (      String fieldName : storedFieldNames) {
        builder.value(fieldName);
      }
      builder.endArray();
    }
  }
  if (docValueFields != null) {
    builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());
    for (    String fieldDataField : docValueFields) {
      builder.value(fieldDataField);
    }
    builder.endArray();
  }
  if (scriptFields != null) {
    builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());
    for (    ScriptField scriptField : scriptFields) {
      scriptField.toXContent(builder,params);
    }
    builder.endObject();
  }
  if (sorts != null) {
    builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());
    for (    SortBuilder<?> sort : sorts) {
      sort.toXContent(builder,params);
    }
    builder.endArray();
  }
  if (highlightBuilder != null) {
    builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(),highlightBuilder,params);
  }
  if (childInnerHits != null) {
    builder.startObject(INNER_HITS_FIELD.getPreferredName());
    for (    Map.Entry<String,InnerHitBuilder> entry : childInnerHits.entrySet()) {
      builder.field(entry.getKey(),entry.getValue(),params);
    }
    builder.endObject();
  }
  builder.endObject();
  return builder;
}
