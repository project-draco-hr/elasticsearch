{
  final boolean osX=randomBoolean();
  final int limit=osX ? 10240 : 1 << 16;
  final AtomicLong maxFileDescriptorCount=new AtomicLong(randomIntBetween(1,limit - 1));
  final BootstrapCheck.FileDescriptorCheck check;
  if (osX) {
    check=new BootstrapCheck.OsXFileDescriptorCheck(){
      @Override long getMaxFileDescriptorCount(){
        return maxFileDescriptorCount.get();
      }
    }
;
  }
 else {
    check=new BootstrapCheck.FileDescriptorCheck(){
      @Override long getMaxFileDescriptorCount(){
        return maxFileDescriptorCount.get();
      }
    }
;
  }
  try {
    BootstrapCheck.check(true,Collections.singletonList(check),"testFileDescriptorLimits");
    fail("should have failed due to max file descriptors too low");
  }
 catch (  final RuntimeException e) {
    assertThat(e.getMessage(),containsString("max file descriptors"));
  }
  maxFileDescriptorCount.set(randomIntBetween(limit + 1,Integer.MAX_VALUE));
  BootstrapCheck.check(true,Collections.singletonList(check),"testFileDescriptorLimits");
  maxFileDescriptorCount.set(-1);
  BootstrapCheck.check(true,Collections.singletonList(check),"testFileDescriptorLimits");
}
