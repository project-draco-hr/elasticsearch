{
  final List<TransportAddress> transportAddresses=new ArrayList<>();
  final TransportAddress nonLocalTransportAddress=mock(TransportAddress.class);
  when(nonLocalTransportAddress.isLoopbackOrLinkLocalAddress()).thenReturn(false);
  transportAddresses.add(nonLocalTransportAddress);
  for (int i=0; i < randomIntBetween(0,7); i++) {
    final TransportAddress randomTransportAddress=mock(TransportAddress.class);
    when(randomTransportAddress.isLoopbackOrLinkLocalAddress()).thenReturn(randomBoolean());
    transportAddresses.add(randomTransportAddress);
  }
  final TransportAddress publishAddress=mock(TransportAddress.class);
  when(publishAddress.isLoopbackOrLinkLocalAddress()).thenReturn(randomBoolean());
  final BoundTransportAddress boundTransportAddress=mock(BoundTransportAddress.class);
  Collections.shuffle(transportAddresses,random());
  when(boundTransportAddress.boundAddresses()).thenReturn(transportAddresses.toArray(new TransportAddress[0]));
  when(boundTransportAddress.publishAddress()).thenReturn(publishAddress);
  assertTrue(BootstrapCheck.enforceLimits(boundTransportAddress));
}
