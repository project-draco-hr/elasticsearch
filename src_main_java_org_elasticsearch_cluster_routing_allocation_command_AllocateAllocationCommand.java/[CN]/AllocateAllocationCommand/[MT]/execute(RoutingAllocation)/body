{
  DiscoveryNode discoNode=allocation.nodes().resolveNode(node);
  MutableShardRouting shardRouting=null;
  for (  MutableShardRouting routing : allocation.routingNodes().unassigned()) {
    if (routing.shardId().equals(shardId)) {
      if (shardRouting == null || routing.primary()) {
        shardRouting=routing;
      }
    }
  }
  if (shardRouting == null) {
    throw new ElasticSearchIllegalArgumentException("[allocate] failed to find " + shardId + " on the list of unassigned shards");
  }
  if (shardRouting.primary() && !allowPrimary) {
    throw new ElasticSearchIllegalArgumentException("[allocate] trying to allocate a primary shard " + shardId + "], which is disabled");
  }
  RoutingNode routingNode=allocation.routingNodes().node(discoNode.id());
  if (!allocation.deciders().canAllocate(shardRouting,routingNode,allocation).allowed()) {
    throw new ElasticSearchIllegalArgumentException("[allocate] allocation of " + shardId + " on node "+ discoNode+ " is not allowed");
  }
  for (Iterator<MutableShardRouting> it=allocation.routingNodes().unassigned().iterator(); it.hasNext(); ) {
    if (it.next() != shardRouting) {
      continue;
    }
    it.remove();
    routingNode.add(shardRouting);
    break;
  }
}
