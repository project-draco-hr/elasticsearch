{
  ObservingContext context=observingContext.get();
  if (context == null) {
    return;
  }
  if (context.changePredicate.apply(event)) {
    if (observingContext.compareAndSet(context,null)) {
      clusterService.remove(this);
      ObservedState state=new ObservedState(event.state());
      logger.trace("observer: accepting cluster state change ({})",state);
      lastObservedState.set(state);
      context.listener.onNewClusterState(state.clusterState);
    }
 else {
      logger.trace("observer: predicate approved change but observing context has changed - ignoring (new cluster state version [{}])",event.state().version());
    }
  }
 else {
    logger.trace("observer: predicate rejected change (new cluster state version [{}])",event.state().version());
  }
}
