{
  Objects.requireNonNull(settings);
  Objects.requireNonNull(configsPath);
  Objects.requireNonNull(logsPath);
  setLogConfigurationSystemProperty(logsPath,settings);
  configureStatusLogger();
  final LoggerContext context=(LoggerContext)LogManager.getContext(false);
  final List<AbstractConfiguration> configurations=new ArrayList<>();
  final PropertiesConfigurationFactory factory=new PropertiesConfigurationFactory();
  final Set<FileVisitOption> options=EnumSet.of(FileVisitOption.FOLLOW_LINKS);
  Files.walkFileTree(configsPath,options,Integer.MAX_VALUE,new SimpleFileVisitor<Path>(){
    @Override public FileVisitResult visitFile(    Path file,    BasicFileAttributes attrs) throws IOException {
      if (file.getFileName().toString().equals("log4j2.properties")) {
        configurations.add((PropertiesConfiguration)factory.getConfiguration(file.toString(),file.toUri()));
      }
      return FileVisitResult.CONTINUE;
    }
  }
);
  if (configurations.isEmpty()) {
    throw new UserException(ExitCodes.CONFIG,"no log4j2.properties found; tried [" + configsPath + "] and its subdirectories");
  }
  context.start(new CompositeConfiguration(configurations));
  configureLoggerLevels(settings);
}
