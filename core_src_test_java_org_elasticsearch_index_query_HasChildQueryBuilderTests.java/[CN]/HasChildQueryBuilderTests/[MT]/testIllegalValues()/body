{
  QueryBuilder<?> query=RandomQueryBuilder.createQuery(random());
  try {
    new HasChildQueryBuilder(null,query);
    fail("must not be null");
  }
 catch (  IllegalArgumentException ex) {
  }
  try {
    new HasChildQueryBuilder("foo",null);
    fail("must not be null");
  }
 catch (  IllegalArgumentException ex) {
  }
  HasChildQueryBuilder foo=new HasChildQueryBuilder("foo",query);
  try {
    foo.scoreMode(null);
    fail("must not be null");
  }
 catch (  IllegalArgumentException ex) {
  }
  final int positiveValue=randomIntBetween(0,Integer.MAX_VALUE);
  try {
    foo.minChildren(randomIntBetween(Integer.MIN_VALUE,-1));
    fail("must not be negative");
  }
 catch (  IllegalArgumentException ex) {
  }
  foo.minChildren(positiveValue);
  assertEquals(positiveValue,foo.minChildren());
  try {
    foo.maxChildren(randomIntBetween(Integer.MIN_VALUE,-1));
    fail("must not be negative");
  }
 catch (  IllegalArgumentException ex) {
  }
  foo.maxChildren(positiveValue);
  assertEquals(positiveValue,foo.maxChildren());
}
