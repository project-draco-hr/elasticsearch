{
  assertThat(query,instanceOf(HasChildQueryBuilder.LateParsingQuery.class));
  HasChildQueryBuilder.LateParsingQuery lateParsingQuery=(HasChildQueryBuilder.LateParsingQuery)query;
  assertThat(lateParsingQuery.getInnerQuery(),instanceOf(BooleanQuery.class));
  BooleanQuery booleanQuery=(BooleanQuery)lateParsingQuery.getInnerQuery();
  assertThat(booleanQuery.clauses().size(),equalTo(2));
  assertThat(booleanQuery.clauses().get(0).getOccur(),equalTo(BooleanClause.Occur.MUST));
  assertThat(booleanQuery.clauses().get(0).getQuery(),instanceOf(TermsQuery.class));
  TermsQuery termsQuery=(TermsQuery)booleanQuery.clauses().get(0).getQuery();
  Query rewrittenTermsQuery=termsQuery.rewrite(null);
  assertThat(rewrittenTermsQuery,instanceOf(ConstantScoreQuery.class));
  ConstantScoreQuery constantScoreQuery=(ConstantScoreQuery)rewrittenTermsQuery;
  assertThat(constantScoreQuery.getQuery(),instanceOf(BooleanQuery.class));
  BooleanQuery booleanTermsQuery=(BooleanQuery)constantScoreQuery.getQuery();
  assertThat(booleanTermsQuery.clauses().toString(),booleanTermsQuery.clauses().size(),equalTo(1));
  assertThat(booleanTermsQuery.clauses().get(0).getOccur(),equalTo(BooleanClause.Occur.SHOULD));
  assertThat(booleanTermsQuery.clauses().get(0).getQuery(),instanceOf(TermQuery.class));
  TermQuery termQuery=(TermQuery)booleanTermsQuery.clauses().get(0).getQuery();
  assertThat(termQuery.getTerm().field(),equalTo(UidFieldMapper.NAME));
  BytesRef[] ids=Uid.createUidsForTypesAndIds(Collections.singletonList(type),Collections.singletonList(id));
  assertThat(termQuery.getTerm().bytes(),equalTo(ids[0]));
  assertThat(booleanQuery.clauses().get(1).getOccur(),equalTo(BooleanClause.Occur.FILTER));
  assertThat(booleanQuery.clauses().get(1).getQuery(),instanceOf(ConstantScoreQuery.class));
  ConstantScoreQuery typeConstantScoreQuery=(ConstantScoreQuery)booleanQuery.clauses().get(1).getQuery();
  assertThat(typeConstantScoreQuery.getQuery(),instanceOf(TermQuery.class));
  TermQuery typeTermQuery=(TermQuery)typeConstantScoreQuery.getQuery();
  assertThat(typeTermQuery.getTerm().field(),equalTo(TypeFieldMapper.NAME));
  assertThat(typeTermQuery.getTerm().text(),equalTo(type));
}
