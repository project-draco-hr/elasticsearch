{
  boolean applied=awaitBusy(new Predicate<Object>(){
    @Override public boolean apply(    Object input){
      GetMappingsResponse response=client().admin().indices().prepareGetMappings(index).setTypes(type).get();
      ImmutableOpenMap<String,MappingMetaData> mappings=response.getMappings().get(index);
      if (mappings == null) {
        return false;
      }
      MappingMetaData mappingMetaData=mappings.get(type);
      if (mappingMetaData == null) {
        return false;
      }
      Map<String,Object> mappingSource;
      try {
        mappingSource=mappingMetaData.getSourceAsMap();
      }
 catch (      IOException e) {
        throw ExceptionsHelper.convertToElastic(e);
      }
      if (mappingSource.isEmpty() && !mappingSource.containsKey("properties")) {
        return false;
      }
      for (      String fieldName : fieldNames) {
        Map<String,Object> mappingProperties=(Map<String,Object>)mappingSource.get("properties");
        if (fieldName.indexOf('.') != -1) {
          fieldName=fieldName.replace(".",".properties.");
        }
        if (XContentMapValues.extractValue(fieldName,mappingProperties) == null) {
          return false;
        }
      }
      return true;
    }
  }
);
  if (!applied) {
    fail("failed to find mappings for index " + index + ", type "+ type+ " on master node");
  }
}
