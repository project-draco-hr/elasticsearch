{
  if (GLOBAL_CLUSTER == null) {
    String cluster=System.getProperty(TESTS_CLUSTER);
    if (Strings.hasLength(cluster)) {
      String[] stringAddresses=cluster.split(",");
      TransportAddress[] transportAddresses=new TransportAddress[stringAddresses.length];
      int i=0;
      for (      String stringAddress : stringAddresses) {
        String[] split=stringAddress.split(":");
        if (split.length < 2) {
          throw new IllegalArgumentException("address [" + cluster + "] not valid");
        }
        try {
          transportAddresses[i++]=new InetSocketTransportAddress(split[0],Integer.valueOf(split[1]));
        }
 catch (        NumberFormatException e) {
          throw new IllegalArgumentException("port is not valid, expected number but was [" + split[1] + "]");
        }
      }
      GLOBAL_CLUSTER=new ExternalTestCluster(transportAddresses);
    }
 else {
      long masterSeed=SeedUtils.parseSeed(RandomizedContext.current().getRunnerSeedAsString());
      int numClientNodes;
      if (COMPATIBILITY_VERSION.before(Version.V_1_2_0)) {
        numClientNodes=0;
      }
 else {
        numClientNodes=TestCluster.DEFAULT_NUM_CLIENT_NODES;
      }
      GLOBAL_CLUSTER=new TestCluster(masterSeed,TestCluster.DEFAULT_MIN_NUM_DATA_NODES,TestCluster.DEFAULT_MAX_NUM_DATA_NODES,clusterName("shared",ElasticsearchTestCase.CHILD_VM_ID,masterSeed),numClientNodes,TestCluster.DEFAULT_ENABLE_RANDOM_BENCH_NODES);
    }
  }
}
