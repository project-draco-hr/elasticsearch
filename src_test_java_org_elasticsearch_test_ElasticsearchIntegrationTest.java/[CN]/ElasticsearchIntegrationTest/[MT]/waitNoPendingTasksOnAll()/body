{
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).get();
  final PendingClusterTasksResponse[] reference=new PendingClusterTasksResponse[1];
  boolean applied=awaitBusy(new Predicate<Object>(){
    @Override public boolean apply(    Object input){
      reference[0]=null;
      for (      Client client : clients()) {
        PendingClusterTasksResponse pendingTasks=client.admin().cluster().preparePendingClusterTasks().setLocal(true).get();
        if (!pendingTasks.pendingTasks().isEmpty()) {
          reference[0]=pendingTasks;
          return false;
        }
      }
      return true;
    }
  }
);
  if (!applied) {
    fail(reference[0].prettyPrint());
  }
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).get();
}
