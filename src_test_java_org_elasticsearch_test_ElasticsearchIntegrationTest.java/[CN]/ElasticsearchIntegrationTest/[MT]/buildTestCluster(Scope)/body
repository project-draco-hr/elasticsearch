{
  long currentClusterSeed=randomLong();
  NodeSettingsSource nodeSettingsSource=new NodeSettingsSource(){
    @Override public Settings settings(    int nodeOrdinal){
      return nodeSettings(nodeOrdinal);
    }
  }
;
  int numDataNodes=getNumDataNodes();
  int minNumDataNodes, maxNumDataNodes;
  if (numDataNodes >= 0) {
    minNumDataNodes=maxNumDataNodes=numDataNodes;
  }
 else {
    minNumDataNodes=getMinNumDataNodes();
    maxNumDataNodes=getMaxNumDataNodes();
  }
  int numClientNodes=getNumClientNodes();
  boolean enableRandomBenchNodes=enableRandomBenchNodes();
  return new InternalTestCluster(currentClusterSeed,minNumDataNodes,maxNumDataNodes,clusterName(scope.name(),ElasticsearchTestCase.CHILD_VM_ID,currentClusterSeed),nodeSettingsSource,numClientNodes,enableRandomBenchNodes);
}
