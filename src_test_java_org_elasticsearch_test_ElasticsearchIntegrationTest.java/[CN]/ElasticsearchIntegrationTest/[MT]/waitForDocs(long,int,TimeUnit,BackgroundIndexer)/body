{
  final AtomicLong lastKnownCount=new AtomicLong(-1);
  long lastStartCount=-1;
  Predicate<Object> testDocs=new Predicate<Object>(){
    @Override public boolean apply(    Object o){
      if (indexer != null) {
        lastKnownCount.set(indexer.totalIndexedDocs());
      }
      if (lastKnownCount.get() >= numDocs) {
        try {
          long count=client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().getCount();
          if (count == lastKnownCount.get()) {
            client().admin().indices().prepareRefresh().get();
          }
          lastKnownCount.set(count);
        }
 catch (        Throwable e) {
          logger.debug("failed to executed count",e);
          return false;
        }
        logger.debug("[{}] docs visible for search. waiting for [{}]",lastKnownCount.get(),numDocs);
      }
 else {
        logger.debug("[{}] docs indexed. waiting for [{}]",lastKnownCount.get(),numDocs);
      }
      return lastKnownCount.get() >= numDocs;
    }
  }
;
  while (!awaitBusy(testDocs,maxWaitTime,maxWaitTimeUnit)) {
    if (lastStartCount == lastKnownCount.get()) {
      fail("failed to reach " + numDocs + "docs");
    }
    lastStartCount=lastKnownCount.get();
  }
  return lastKnownCount.get();
}
