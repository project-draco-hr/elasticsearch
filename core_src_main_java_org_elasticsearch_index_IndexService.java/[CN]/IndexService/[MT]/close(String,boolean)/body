{
  if (closed.compareAndSet(false,true)) {
    deleted.compareAndSet(false,delete);
    try {
      final Set<Integer> shardIds=shardIds();
      for (      final int shardId : shardIds) {
        try {
          removeShard(shardId,reason);
        }
 catch (        Throwable t) {
          logger.warn("failed to close shard",t);
        }
      }
    }
  finally {
      IOUtils.close(bitsetFilterCache,indexCache,mapperService,indexFieldData,analysisService,refreshTask,fsyncTask);
    }
  }
}
