{
  Tuple<Settings,Environment> initialSettings=InternalSettingsPerparer.prepareSettings(EMPTY_SETTINGS,true);
  if (!initialSettings.v2().pluginsFile().exists()) {
    initialSettings.v2().pluginsFile().mkdirs();
  }
  PluginManager pluginManager=new PluginManager(initialSettings.v2(),"http://elasticsearch.googlecode.com/svn/plugins");
  if (args.length < 1) {
    System.out.println("Usage:");
    System.out.println("    - get [list of plugin names]: Downloads all the listed plugins");
  }
  String command=args[0];
  if (command.equals("get") || command.equals("-get") || command.equals("-g")|| command.equals("--get")) {
    if (args.length < 2) {
      System.out.println("'get' requires an additional parameter with the plugin name");
    }
    for (int i=1; i < args.length; i++) {
      String pluginName=args[i];
      System.out.print("-> Downloading " + pluginName + " ");
      try {
        pluginManager.downloadPlugin(pluginName);
        System.out.println(" DONE");
      }
 catch (      IOException e) {
        System.out.println("Failed to download " + pluginName + ", reason: "+ e.getMessage());
      }
    }
  }
 else {
    System.out.println("No command matching '" + command + "' found");
  }
}
