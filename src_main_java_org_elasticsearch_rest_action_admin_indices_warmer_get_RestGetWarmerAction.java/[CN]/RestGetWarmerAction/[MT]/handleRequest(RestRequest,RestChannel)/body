{
  final String[] indices=splitIndices(request.param("index"));
  final String name=request.param("name");
  ClusterStateRequest clusterStateRequest=Requests.clusterStateRequest().filterAll().setFilterMetaData(false).setFilteredIndices(indices);
  clusterStateRequest.setListenerThreaded(false);
  client.admin().cluster().state(clusterStateRequest,new ActionListener<ClusterStateResponse>(){
    @Override public void onResponse(    ClusterStateResponse response){
      try {
        MetaData metaData=response.getState().metaData();
        if (indices.length == 1 && metaData.indices().isEmpty()) {
          channel.sendResponse(new XContentThrowableRestResponse(request,new IndexMissingException(new Index(indices[0]))));
          return;
        }
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        boolean wroteOne=false;
        for (        IndexMetaData indexMetaData : metaData) {
          IndexWarmersMetaData warmers=indexMetaData.custom(IndexWarmersMetaData.TYPE);
          if (warmers == null) {
            continue;
          }
          boolean foundOne=false;
          for (          IndexWarmersMetaData.Entry entry : warmers.entries()) {
            if (name == null || Regex.simpleMatch(name,entry.name())) {
              foundOne=true;
              wroteOne=true;
              break;
            }
          }
          if (foundOne) {
            builder.startObject(indexMetaData.index(),XContentBuilder.FieldCaseConversion.NONE);
            builder.startObject(IndexWarmersMetaData.TYPE,XContentBuilder.FieldCaseConversion.NONE);
            for (            IndexWarmersMetaData.Entry entry : warmers.entries()) {
              if (name == null || Regex.simpleMatch(name,entry.name())) {
                IndexWarmersMetaData.FACTORY.toXContent(entry,builder,request);
              }
            }
            builder.endObject();
            builder.endObject();
          }
        }
        builder.endObject();
        if (!wroteOne && name != null) {
          channel.sendResponse(new XContentThrowableRestResponse(request,new IndexWarmerMissingException(name)));
          return;
        }
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
