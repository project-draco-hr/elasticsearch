{
  Map<K,Key> keys=new HashMap<>();
  Map<Key,V> values=new HashMap<>();
  List<Element> elements=Elements.getElements(module);
  for (  Element element : elements) {
    if (element instanceof InstanceBinding) {
      InstanceBinding binding=(InstanceBinding)element;
      if (binding.getKey().getRawType().equals(valueType)) {
        values.put(binding.getKey(),(V)binding.getInstance());
      }
 else       if (binding.getInstance() instanceof Map.Entry) {
        Map.Entry entry=(Map.Entry)binding.getInstance();
        Object key=entry.getKey();
        Object providerValue=entry.getValue();
        if (key.getClass().equals(keyType) && providerValue instanceof ProviderLookup.ProviderImpl) {
          ProviderLookup.ProviderImpl provider=(ProviderLookup.ProviderImpl)providerValue;
          keys.put((K)key,provider.getKey());
        }
      }
    }
  }
  for (  Map.Entry<K,V> entry : expected.entrySet()) {
    Key valueKey=keys.get(entry.getKey());
    assertNotNull("Could not find binding for key [" + entry.getKey() + "], found these keys:\n"+ keys.keySet(),valueKey);
    V value=values.get(valueKey);
    assertNotNull("Could not find value for instance key [" + valueKey + "], found these bindings:\n"+ elements);
    assertEquals(entry.getValue(),value);
  }
}
