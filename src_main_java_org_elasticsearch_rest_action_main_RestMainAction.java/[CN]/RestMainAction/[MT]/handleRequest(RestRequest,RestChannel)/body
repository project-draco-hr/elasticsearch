{
  ClusterStateRequest clusterStateRequest=new ClusterStateRequest();
  clusterStateRequest.setListenerThreaded(false);
  clusterStateRequest.setMasterNodeTimeout(TimeValue.timeValueMillis(0));
  clusterStateRequest.setLocal(true);
  clusterStateRequest.filterAll().setFilterBlocks(false);
  client.admin().cluster().state(clusterStateRequest,new ActionListener<ClusterStateResponse>(){
    @Override public void onResponse(    ClusterStateResponse response){
      RestStatus status=RestStatus.OK;
      if (response.getState().blocks().hasGlobalBlock(RestStatus.SERVICE_UNAVAILABLE)) {
        status=RestStatus.SERVICE_UNAVAILABLE;
      }
      if (request.method() == RestRequest.Method.HEAD) {
        channel.sendResponse(new StringRestResponse(status));
        return;
      }
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request).prettyPrint();
        builder.startObject();
        builder.field("ok",true);
        builder.field("status",status.getStatus());
        if (settings.get("name") != null) {
          builder.field("name",settings.get("name"));
        }
        builder.startObject("version").field("number",Version.CURRENT.number()).field("snapshot_build",Version.CURRENT.snapshot).endObject();
        builder.field("tagline","You Know, for Search");
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,status,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        if (request.method() == HEAD) {
          channel.sendResponse(new StringRestResponse(ExceptionsHelper.status(e)));
        }
 else {
          channel.sendResponse(new XContentThrowableRestResponse(request,e));
        }
      }
 catch (      Exception e1) {
        logger.warn("Failed to send response",e);
      }
    }
  }
);
}
