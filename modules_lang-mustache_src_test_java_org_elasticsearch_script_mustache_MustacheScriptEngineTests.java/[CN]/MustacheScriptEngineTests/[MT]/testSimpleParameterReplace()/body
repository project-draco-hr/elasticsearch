{
  Map<String,String> compileParams=Collections.singletonMap("content_type","application/json");
{
    String template="GET _search {\"query\": " + "{\"boosting\": {" + "\"positive\": {\"match\": {\"body\": \"gift\"}},"+ "\"negative\": {\"term\": {\"body\": {\"value\": \"solr\"}"+ "}}, \"negative_boost\": {{boost_val}} } }}";
    Map<String,Object> vars=new HashMap<>();
    vars.put("boost_val","0.3");
    BytesReference o=(BytesReference)qe.executable(new CompiledScript(ScriptService.ScriptType.INLINE,"","mustache",qe.compile(template,compileParams)),vars).run();
    assertEquals("GET _search {\"query\": {\"boosting\": {\"positive\": {\"match\": {\"body\": \"gift\"}}," + "\"negative\": {\"term\": {\"body\": {\"value\": \"solr\"}}}, \"negative_boost\": 0.3 } }}",new String(o.toBytes(),Charset.forName("UTF-8")));
  }
{
    String template="GET _search {\"query\": " + "{\"boosting\": {" + "\"positive\": {\"match\": {\"body\": \"gift\"}},"+ "\"negative\": {\"term\": {\"body\": {\"value\": \"{{body_val}}\"}"+ "}}, \"negative_boost\": {{boost_val}} } }}";
    Map<String,Object> vars=new HashMap<>();
    vars.put("boost_val","0.3");
    vars.put("body_val","\"quick brown\"");
    BytesReference o=(BytesReference)qe.executable(new CompiledScript(ScriptService.ScriptType.INLINE,"","mustache",qe.compile(template,compileParams)),vars).run();
    assertEquals("GET _search {\"query\": {\"boosting\": {\"positive\": {\"match\": {\"body\": \"gift\"}}," + "\"negative\": {\"term\": {\"body\": {\"value\": \"\\\"quick brown\\\"\"}}}, \"negative_boost\": 0.3 } }}",new String(o.toBytes(),Charset.forName("UTF-8")));
  }
}
