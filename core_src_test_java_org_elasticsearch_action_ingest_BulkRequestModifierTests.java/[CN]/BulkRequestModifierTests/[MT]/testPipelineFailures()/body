{
  BulkRequest originalBulkRequest=new BulkRequest();
  for (int i=0; i < 32; i++) {
    originalBulkRequest.add(new IndexRequest("index","type",String.valueOf(i)));
  }
  IngestActionFilter.BulkRequestModifier modifier=new IngestActionFilter.BulkRequestModifier(originalBulkRequest);
  for (int i=0; modifier.hasNext(); i++) {
    modifier.next();
    if (i % 2 == 0) {
      modifier.markCurrentItemAsFailed(new RuntimeException());
    }
  }
  BulkRequest bulkRequest=modifier.getBulkRequest();
  assertThat(bulkRequest.requests().size(),Matchers.equalTo(16));
  List<BulkItemResponse> responses=new ArrayList<>();
  ActionListener<BulkResponse> bulkResponseListener=modifier.wrapActionListenerIfNeeded(new ActionListener<BulkResponse>(){
    @Override public void onResponse(    BulkResponse bulkItemResponses){
      responses.addAll(Arrays.asList(bulkItemResponses.getItems()));
    }
    @Override public void onFailure(    Throwable e){
    }
  }
);
  List<BulkItemResponse> originalResponses=new ArrayList<>();
  for (  ActionRequest actionRequest : bulkRequest.requests()) {
    IndexRequest indexRequest=(IndexRequest)actionRequest;
    IndexResponse indexResponse=new IndexResponse(new ShardId("index",0),indexRequest.type(),indexRequest.id(),1,true);
    originalResponses.add(new BulkItemResponse(Integer.parseInt(indexRequest.id()),indexRequest.opType().lowercase(),indexResponse));
  }
  bulkResponseListener.onResponse(new BulkResponse(originalResponses.toArray(new BulkItemResponse[0]),0));
  assertThat(responses.size(),Matchers.equalTo(32));
  for (int i=0; i < 32; i++) {
    assertThat(responses.get(i).getId(),Matchers.equalTo(String.valueOf(i)));
  }
}
