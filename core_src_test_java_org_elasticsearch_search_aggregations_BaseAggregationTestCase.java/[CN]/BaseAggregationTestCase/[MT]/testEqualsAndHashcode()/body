{
  AB firstAgg=createTestAggregatorBuilder();
  assertFalse("aggregation is equal to null",firstAgg.equals(null));
  assertFalse("aggregation is equal to incompatible type",firstAgg.equals(""));
  assertTrue("aggregation is not equal to self",firstAgg.equals(firstAgg));
  assertThat("same aggregation's hashcode returns different values if called multiple times",firstAgg.hashCode(),equalTo(firstAgg.hashCode()));
  AB secondQuery=copyAggregation(firstAgg);
  assertTrue("aggregation is not equal to self",secondQuery.equals(secondQuery));
  assertTrue("aggregation is not equal to its copy",firstAgg.equals(secondQuery));
  assertTrue("equals is not symmetric",secondQuery.equals(firstAgg));
  assertThat("aggregation copy's hashcode is different from original hashcode",secondQuery.hashCode(),equalTo(firstAgg.hashCode()));
  AB thirdQuery=copyAggregation(secondQuery);
  assertTrue("aggregation is not equal to self",thirdQuery.equals(thirdQuery));
  assertTrue("aggregation is not equal to its copy",secondQuery.equals(thirdQuery));
  assertThat("aggregation copy's hashcode is different from original hashcode",secondQuery.hashCode(),equalTo(thirdQuery.hashCode()));
  assertTrue("equals is not transitive",firstAgg.equals(thirdQuery));
  assertThat("aggregation copy's hashcode is different from original hashcode",firstAgg.hashCode(),equalTo(thirdQuery.hashCode()));
  assertTrue("equals is not symmetric",thirdQuery.equals(secondQuery));
  assertTrue("equals is not symmetric",thirdQuery.equals(firstAgg));
}
