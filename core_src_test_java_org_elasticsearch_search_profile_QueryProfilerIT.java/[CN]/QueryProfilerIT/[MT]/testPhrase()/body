{
  createIndex("test");
  ensureGreen();
  int numDocs=randomIntBetween(100,150);
  IndexRequestBuilder[] docs=new IndexRequestBuilder[numDocs];
  for (int i=0; i < numDocs; i++) {
    docs[i]=client().prepareIndex("test","type1",String.valueOf(i)).setSource("field1",English.intToEnglish(i) + " " + English.intToEnglish(i + 1),"field2",i);
  }
  indexRandom(true,docs);
  refresh();
  QueryBuilder q=QueryBuilders.matchPhraseQuery("field1","one two");
  logger.info(q.toString());
  SearchResponse resp=client().prepareSearch().setQuery(q).setIndices("test").setTypes("type1").setProfile(true).setSearchType(SearchType.QUERY_THEN_FETCH).execute().actionGet();
  if (resp.getShardFailures().length > 0) {
    for (    ShardSearchFailure f : resp.getShardFailures()) {
      logger.error(f.toString());
    }
    fail();
  }
  assertNotNull("Profile response element should not be null",resp.getProfileResults());
  for (  Map.Entry<String,List<ProfileShardResult>> shardResult : resp.getProfileResults().entrySet()) {
    for (    ProfileShardResult searchProfiles : shardResult.getValue()) {
      for (      ProfileResult result : searchProfiles.getQueryResults()) {
        assertNotNull(result.getQueryName());
        assertNotNull(result.getLuceneDescription());
        assertThat(result.getTime(),greaterThan(0L));
        assertNotNull(result.getTimeBreakdown());
      }
      CollectorResult result=searchProfiles.getCollectorResult();
      assertThat(result.getName(),not(isEmptyOrNullString()));
      assertThat(result.getTime(),greaterThan(0L));
    }
  }
}
