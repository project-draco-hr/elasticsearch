{
  super(settings);
  this.scheduledSize=componentSettings.getAsInt("scheduled_size",20);
  this.min=componentSettings.getAsInt("min",1);
  this.max=componentSettings.getAsInt("max",100);
  this.capacity=(int)componentSettings.getAsBytesSize("capacity",new ByteSizeValue(1,ByteSizeUnit.KB)).bytes();
  this.waitTime=componentSettings.getAsTime("wait_time",timeValueSeconds(60));
  this.keepAlive=componentSettings.getAsTime("keep_alive",timeValueSeconds(60));
  logger.debug("Initializing {} thread pool with min[{}], max[{}], keep_alive[{}], capacity[{}], wait_time[{}], scheduled_size[{}]",getType(),min,max,keepAlive,capacity,waitTime,scheduledSize);
  executorService=TransferThreadPoolExecutor.newBlockingExecutor(min,max,keepAlive.millis(),TimeUnit.MILLISECONDS,waitTime.millis(),TimeUnit.MILLISECONDS,capacity,EsExecutors.daemonThreadFactory(settings,"[tp]"));
  scheduledExecutorService=java.util.concurrent.Executors.newScheduledThreadPool(scheduledSize,EsExecutors.daemonThreadFactory(settings,"[sc]"));
  started=true;
}
