{
  try {
    transportService.connectToNode(masterNode);
  }
 catch (  Exception e) {
    logger.warn(new ParameterizedMessage("failed to connect to master [{}], retrying...",masterNode),e);
    return false;
  }
  int joinAttempt=0;
  while (true) {
    try {
      logger.trace("joining master {}",masterNode);
      membership.sendJoinRequestBlocking(masterNode,clusterService.localNode(),joinTimeout);
      return true;
    }
 catch (    Exception e) {
      final Throwable unwrap=ExceptionsHelper.unwrapCause(e);
      if (unwrap instanceof NotMasterException) {
        if (++joinAttempt == this.joinRetryAttempts) {
          logger.info("failed to send join request to master [{}], reason [{}], tried [{}] times",masterNode,ExceptionsHelper.detailedMessage(e),joinAttempt);
          return false;
        }
 else {
          logger.trace("master {} failed with [{}]. retrying... (attempts done: [{}])",masterNode,ExceptionsHelper.detailedMessage(e),joinAttempt);
        }
      }
 else {
        if (logger.isTraceEnabled()) {
          logger.trace(new ParameterizedMessage("failed to send join request to master [{}]",masterNode),e);
        }
 else {
          logger.info("failed to send join request to master [{}], reason [{}]",masterNode,ExceptionsHelper.detailedMessage(e));
        }
        return false;
      }
    }
    try {
      Thread.sleep(this.joinRetryDelay.millis());
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
    }
  }
}
