{
  if (!clusterChangedEvent.state().getNodes().localNodeMaster()) {
    throw new IllegalStateException("Shouldn't publish state when not master");
  }
  nodesFD.updateNodesAndPing(clusterChangedEvent.state());
  try {
    publishClusterState.publish(clusterChangedEvent,electMaster.minimumMasterNodes(),ackListener);
  }
 catch (  FailedToCommitClusterStateException t) {
    logger.debug("failed to publish cluster state version [{}] (not enough nodes acknowledged, min master nodes [{}])",clusterChangedEvent.state().version(),electMaster.minimumMasterNodes());
    clusterService.submitStateUpdateTask("zen-disco-failed-to-publish",new ClusterStateUpdateTask(Priority.IMMEDIATE){
      @Override public ClusterState execute(      ClusterState currentState){
        return rejoin(currentState,"failed to publish to min_master_nodes");
      }
      @Override public void onFailure(      String source,      Throwable t){
        logger.error("unexpected failure during [{}]",t,source);
      }
    }
);
    throw t;
  }
}
