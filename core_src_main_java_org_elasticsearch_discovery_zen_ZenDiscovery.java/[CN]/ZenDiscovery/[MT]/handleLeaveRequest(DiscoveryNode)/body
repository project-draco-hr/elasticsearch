{
  if (lifecycleState() != Lifecycle.State.STARTED) {
    return;
  }
  if (localNodeMaster()) {
    clusterService.submitStateUpdateTask("zen-disco-node_left(" + node + ")",new ClusterStateUpdateTask(Priority.IMMEDIATE){
      @Override public ClusterState execute(      ClusterState currentState){
        DiscoveryNodes.Builder builder=DiscoveryNodes.builder(currentState.nodes()).remove(node.getId());
        currentState=ClusterState.builder(currentState).nodes(builder).build();
        if (!electMaster.hasEnoughMasterNodes(currentState.nodes())) {
          return rejoin(currentState,"not enough master nodes");
        }
        RoutingAllocation.Result routingResult=allocationService.reroute(ClusterState.builder(currentState).build(),"[" + node + "] left");
        return ClusterState.builder(currentState).routingResult(routingResult).build();
      }
      @Override public void onNoLongerMaster(      String source){
      }
      @Override public void onFailure(      String source,      Exception e){
        logger.error("unexpected failure during [{}]",e,source);
      }
    }
);
  }
 else   if (node.equals(nodes().getMasterNode())) {
    handleMasterGone(node,null,"shut_down");
  }
}
