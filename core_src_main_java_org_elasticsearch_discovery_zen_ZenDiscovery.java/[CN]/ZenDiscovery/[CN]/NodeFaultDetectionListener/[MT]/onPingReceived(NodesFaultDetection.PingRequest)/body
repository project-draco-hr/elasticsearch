{
  if (!localNodeMaster()) {
    pingsWhileMaster.set(0);
    return;
  }
  if (pingsWhileMaster.incrementAndGet() < maxPingsFromAnotherMaster) {
    logger.trace("got a ping from another master {}. current ping count: [{}]",pingRequest.masterNode(),pingsWhileMaster.get());
    return;
  }
  logger.debug("got a ping from another master {}. resolving who should rejoin. current ping count: [{}]",pingRequest.masterNode(),pingsWhileMaster.get());
  clusterService.submitStateUpdateTask("ping from another master",new ClusterStateUpdateTask(Priority.IMMEDIATE){
    @Override public ClusterState execute(    ClusterState currentState) throws Exception {
      pingsWhileMaster.set(0);
      return handleAnotherMaster(currentState,pingRequest.masterNode(),pingRequest.clusterStateVersion(),"node fd ping");
    }
    @Override public void onFailure(    String source,    Exception e){
      logger.debug("unexpected error during cluster state update task after pings from another master",e);
    }
  }
);
}
