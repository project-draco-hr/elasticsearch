{
  addDelegate(transportAddress,new DelegateTransport(original){
    @Override public void connectToNode(    DiscoveryNode node) throws ConnectTransportException {
      original.connectToNode(node);
    }
    @Override public void connectToNodeLight(    DiscoveryNode node) throws ConnectTransportException {
      original.connectToNodeLight(node);
    }
    @Override public void sendRequest(    DiscoveryNode node,    long requestId,    String action,    TransportRequest request,    TransportRequestOptions options) throws IOException, TransportException {
      if (blockedActions.contains(action)) {
        logger.info("--> preventing {} request",action);
        throw new ConnectTransportException(node,"DISCONNECT: prevented " + action + " request");
      }
      original.sendRequest(node,requestId,action,request,options);
    }
  }
);
}
