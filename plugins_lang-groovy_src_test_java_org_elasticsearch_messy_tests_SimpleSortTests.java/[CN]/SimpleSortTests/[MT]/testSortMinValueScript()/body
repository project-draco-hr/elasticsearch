{
  String mapping=jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("lvalue").field("type","long").endObject().startObject("dvalue").field("type","double").endObject().startObject("svalue").field("type","string").endObject().startObject("gvalue").field("type","geo_point").endObject().endObject().endObject().endObject().string();
  assertAcked(prepareCreate("test").addMapping("type1",mapping));
  ensureGreen();
  for (int i=0; i < 10; i++) {
    IndexRequestBuilder req=client().prepareIndex("test","type1","" + i).setSource(jsonBuilder().startObject().field("ord",i).field("svalue",new String[]{"" + i,"" + (i + 1),"" + (i + 2)}).field("lvalue",new long[]{i,i + 1,i + 2}).field("dvalue",new double[]{i,i + 1,i + 2}).startObject("gvalue").field("lat",(double)i + 1).field("lon",(double)i).endObject().endObject());
    req.execute().actionGet();
  }
  for (int i=10; i < 20; i++) {
    client().prepareIndex("test","type1","" + i).setSource(jsonBuilder().startObject().field("ord",i).endObject()).execute().actionGet();
  }
  client().admin().indices().prepareRefresh("test").execute().actionGet();
  SearchResponse searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addScriptField("min",new Script("retval = Long.MAX_VALUE; for (v in doc['lvalue'].values){ retval = min(v, retval) }; retval")).addSort(SortBuilders.fieldSort("ord").order(SortOrder.ASC).unmappedType("long")).setSize(10).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(20l));
  for (int i=0; i < 10; i++) {
    assertThat("res: " + i + " id: "+ searchResponse.getHits().getAt(i).getId(),(Long)searchResponse.getHits().getAt(i).field("min").value(),equalTo((long)i));
  }
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addScriptField("min",new Script("retval = Double.MAX_VALUE; for (v in doc['dvalue'].values){ retval = min(v, retval) }; retval")).addSort(SortBuilders.fieldSort("ord").order(SortOrder.ASC).unmappedType("long")).setSize(10).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(20l));
  for (int i=0; i < 10; i++) {
    assertThat("res: " + i + " id: "+ searchResponse.getHits().getAt(i).getId(),(Double)searchResponse.getHits().getAt(i).field("min").value(),equalTo((double)i));
  }
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addScriptField("min",new Script("retval = Integer.MAX_VALUE; for (v in doc['svalue'].values){ retval = min(Integer.parseInt(v), retval) }; retval")).addSort(SortBuilders.fieldSort("ord").order(SortOrder.ASC).unmappedType("long")).setSize(10).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(20l));
  for (int i=0; i < 10; i++) {
    assertThat("res: " + i + " id: "+ searchResponse.getHits().getAt(i).getId(),(Integer)searchResponse.getHits().getAt(i).field("min").value(),equalTo(i));
  }
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addScriptField("min",new Script("retval = Double.MAX_VALUE; for (v in doc['gvalue'].values){ retval = min(v.lon, retval) }; retval")).addSort(SortBuilders.fieldSort("ord").order(SortOrder.ASC).unmappedType("long")).setSize(10).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(20l));
  for (int i=0; i < 10; i++) {
    assertThat("res: " + i + " id: "+ searchResponse.getHits().getAt(i).getId(),(Double)searchResponse.getHits().getAt(i).field("min").value(),closeTo((double)i,TOLERANCE));
  }
}
