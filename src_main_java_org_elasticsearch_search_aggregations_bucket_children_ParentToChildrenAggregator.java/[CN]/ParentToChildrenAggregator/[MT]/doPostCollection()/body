{
  List<LeafReaderContext> replay=this.replay;
  this.replay=null;
  for (  LeafReaderContext atomicReaderContext : replay) {
    context.setNextReader(atomicReaderContext);
    SortedDocValues globalOrdinals=valuesSource.globalOrdinalsValues(parentType);
    DocIdSet childDocIdSet=childFilter.getDocIdSet(atomicReaderContext,atomicReaderContext.reader().getLiveDocs());
    if (childDocIdSet == null) {
      continue;
    }
    DocIdSetIterator childDocsIter=childDocIdSet.iterator();
    if (childDocsIter == null) {
      continue;
    }
    context.setScorer(ConstantScorer.create(childDocsIter,null,1f));
    for (int docId=childDocsIter.nextDoc(); docId != DocIdSetIterator.NO_MORE_DOCS; docId=childDocsIter.nextDoc()) {
      long globalOrdinal=globalOrdinals.getOrd(docId);
      if (globalOrdinal != -1) {
        long bucketOrd=parentOrdToBuckets.get(globalOrdinal);
        if (bucketOrd != -1) {
          collectBucket(docId,bucketOrd);
          if (multipleBucketsPerParentOrd) {
            long[] otherBucketOrds=parentOrdToOtherBuckets.get(globalOrdinal);
            if (otherBucketOrds != null) {
              for (              long otherBucketOrd : otherBucketOrds) {
                collectBucket(docId,otherBucketOrd);
              }
            }
          }
        }
      }
    }
  }
  collectableSubAggregators.postCollection();
}
