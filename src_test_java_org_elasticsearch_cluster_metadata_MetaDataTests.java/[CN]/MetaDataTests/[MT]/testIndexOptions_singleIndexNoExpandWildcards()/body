{
  MetaData.Builder mdBuilder=MetaData.builder().put(indexBuilder("foo").putAlias(AliasMetaData.builder("foofoobar"))).put(indexBuilder("foobar").putAlias(AliasMetaData.builder("foofoobar"))).put(indexBuilder("foofoo-closed").state(IndexMetaData.State.CLOSE)).put(indexBuilder("foofoo").putAlias(AliasMetaData.builder("barbaz")));
  MetaData md=mdBuilder.build();
  try {
    md.concreteIndices(IndicesOptions.strictSingleIndexNoExpandForbidClosed(),"baz*");
    fail();
  }
 catch (  IndexMissingException e) {
    assertThat(e.index().name(),equalTo("baz*"));
  }
  try {
    md.concreteIndices(IndicesOptions.strictSingleIndexNoExpandForbidClosed(),"foo","baz*");
    fail();
  }
 catch (  IndexMissingException e) {
    assertThat(e.index().name(),equalTo("baz*"));
  }
  try {
    md.concreteIndices(IndicesOptions.strictSingleIndexNoExpandForbidClosed(),"foofoobar");
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
    assertThat(e.getMessage(),containsString("Alias [foofoobar] has more than one indices associated with it"));
  }
  try {
    md.concreteIndices(IndicesOptions.strictSingleIndexNoExpandForbidClosed(),"foo","foofoobar");
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
    assertThat(e.getMessage(),containsString("Alias [foofoobar] has more than one indices associated with it"));
  }
  try {
    md.concreteIndices(IndicesOptions.strictSingleIndexNoExpandForbidClosed(),"foofoo-closed","foofoobar");
    fail();
  }
 catch (  IndexClosedException e) {
    assertThat(e.getMessage(),equalTo("closed"));
    assertEquals(e.index().getName(),"foofoo-closed");
  }
  String[] results=md.concreteIndices(IndicesOptions.strictSingleIndexNoExpandForbidClosed(),"foo","barbaz");
  assertEquals(2,results.length);
  assertThat(results,arrayContainingInAnyOrder("foo","foofoo"));
}
