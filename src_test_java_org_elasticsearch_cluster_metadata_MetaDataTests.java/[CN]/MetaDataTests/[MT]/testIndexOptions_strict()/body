{
  MetaData.Builder mdBuilder=MetaData.builder().put(indexBuilder("foo")).put(indexBuilder("foobar")).put(indexBuilder("foofoo-closed").state(IndexMetaData.State.CLOSE)).put(indexBuilder("foofoo").putAlias(AliasMetaData.builder("barbaz")));
  MetaData md=mdBuilder.build();
  IndicesOptions[] indicesOptions=new IndicesOptions[]{IndicesOptions.strictExpandOpen(),IndicesOptions.strictExpand()};
  for (  IndicesOptions options : indicesOptions) {
    String[] results=md.concreteIndices(new String[]{"foo"},options);
    assertEquals(1,results.length);
    assertEquals("foo",results[0]);
    try {
      md.concreteIndices(new String[]{"bar"},options);
      fail();
    }
 catch (    IndexMissingException e) {
    }
    results=md.concreteIndices(new String[]{"foofoo","foobar"},options);
    assertEquals(2,results.length);
    assertThat(results,arrayContainingInAnyOrder("foofoo","foobar"));
    try {
      md.concreteIndices(new String[]{"foo","bar"},options);
      fail();
    }
 catch (    IndexMissingException e) {
    }
    results=md.concreteIndices(new String[]{"barbaz","foobar"},options);
    assertEquals(2,results.length);
    assertThat(results,arrayContainingInAnyOrder("foofoo","foobar"));
    try {
      md.concreteIndices(new String[]{"barbaz","bar"},options);
      fail();
    }
 catch (    IndexMissingException e) {
    }
    results=md.concreteIndices(new String[]{"baz*"},options);
    assertThat(results,emptyArray());
    results=md.concreteIndices(new String[]{"foo","baz*"},options);
    assertEquals(1,results.length);
    assertEquals("foo",results[0]);
  }
  String[] results=md.concreteIndices(Strings.EMPTY_ARRAY,IndicesOptions.strictExpandOpen());
  assertEquals(3,results.length);
  results=md.concreteIndices(Strings.EMPTY_ARRAY,IndicesOptions.strictExpand());
  assertEquals(4,results.length);
  results=md.concreteIndices(new String[]{"foofoo*"},IndicesOptions.strictExpandOpen());
  assertEquals(1,results.length);
  assertEquals("foofoo",results[0]);
  results=md.concreteIndices(new String[]{"foofoo*"},IndicesOptions.strictExpand());
  assertEquals(2,results.length);
  assertThat(results,arrayContainingInAnyOrder("foofoo","foofoo-closed"));
}
