{
  Bootstrap bootstrap=new Bootstrap();
  String pidFile=System.getProperty("es-pidfile");
  boolean foreground=System.getProperty("es-foreground") != null;
  String stage="Initialization";
  try {
    if (!foreground) {
      Loggers.disableConsoleLogging();
      System.out.close();
    }
    bootstrap.setup(true);
    if (pidFile != null) {
      new File(pidFile).deleteOnExit();
    }
    stage="Startup";
    bootstrap.start();
    if (!foreground) {
      System.err.close();
    }
  }
 catch (  Throwable e) {
    Logger logger=Loggers.getLogger(Bootstrap.class);
    if (bootstrap.server != null) {
      logger=Loggers.getLogger(Bootstrap.class,bootstrap.server.settings().get("name"));
    }
    StringBuilder errorMessage=new StringBuilder("{").append(Version.full()).append("}: ");
    try {
      if (ANSI.isEnabled()) {
        errorMessage.append(attrib(ANSI.Code.FG_RED)).append(stage).append(" Failed ...").append(attrib(ANSI.Code.OFF)).append("\n");
      }
 else {
        errorMessage.append(stage).append(" Failed ...\n");
      }
    }
 catch (    Throwable t) {
      errorMessage.append(stage).append(" Failed ...\n");
    }
    if (e instanceof CreationException) {
      CreationException createException=(CreationException)e;
      Set<String> seenMessages=newHashSet();
      int counter=1;
      for (      Message message : createException.getErrorMessages()) {
        String detailedMessage;
        if (message.getCause() == null) {
          detailedMessage=message.getMessage();
        }
 else {
          detailedMessage=ExceptionsHelper.detailedMessage(message.getCause(),true,0);
        }
        if (detailedMessage == null) {
          detailedMessage=message.getMessage();
        }
        if (seenMessages.contains(detailedMessage)) {
          continue;
        }
        seenMessages.add(detailedMessage);
        errorMessage.append("").append(counter++).append(") ").append(detailedMessage);
      }
    }
 else {
      errorMessage.append("- ").append(ExceptionsHelper.detailedMessage(e,true,0));
    }
    if (foreground) {
      logger.error(errorMessage.toString());
    }
 else {
      System.err.println(errorMessage);
      System.err.flush();
    }
    Loggers.disableConsoleLogging();
    if (logger.isDebugEnabled()) {
      logger.debug("Exception",e);
    }
    System.exit(3);
  }
}
