{
  percolateRequest.listenerThreaded(false);
  if (restRequest.hasParam("operation_threading")) {
    BroadcastOperationThreading operationThreading=BroadcastOperationThreading.fromString(restRequest.param("operation_threading"),null);
    if (operationThreading == BroadcastOperationThreading.NO_THREADS) {
      operationThreading=BroadcastOperationThreading.SINGLE_THREAD;
    }
    percolateRequest.operationThreading(operationThreading);
  }
  client.percolate(percolateRequest,new ActionListener<PercolateResponse>(){
    @Override public void onResponse(    PercolateResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(restRequest);
        response.toXContent(builder,restRequest);
        restChannel.sendResponse(new XContentRestResponse(restRequest,OK,builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        restChannel.sendResponse(new XContentThrowableRestResponse(restRequest,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
