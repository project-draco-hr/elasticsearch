{
  Version version=hasActiveAllocation ? Version.CURRENT : Version.V_2_0_0;
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder(shardId.getIndexName()).settings(settings(version).put(IndexMetaData.SETTING_SHARED_FILESYSTEM,true).put(IndexMetaData.SETTING_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE,true)).numberOfShards(1).numberOfReplicas(0).putInSyncAllocationIds(0,hasActiveAllocation ? Sets.newHashSet("allocId") : Collections.emptySet())).build();
  RoutingTable routingTable=RoutingTable.builder().addAsRestore(metaData.index(shardId.getIndex()),new RestoreSource(new Snapshot("test",new SnapshotId("test",UUIDs.randomBase64UUID())),Version.CURRENT,shardId.getIndexName())).build();
  ClusterState state=ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(routingTable).nodes(DiscoveryNodes.builder().add(node1).add(node2).add(node3)).build();
  return new RoutingAllocation(allocationDeciders,new RoutingNodes(state,false),state,null,System.nanoTime(),false);
}
