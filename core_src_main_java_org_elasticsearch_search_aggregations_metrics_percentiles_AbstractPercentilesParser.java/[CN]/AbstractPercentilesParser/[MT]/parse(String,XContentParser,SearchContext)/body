{
  ValuesSourceParser<ValuesSource.Numeric> vsParser=ValuesSourceParser.numeric(aggregationName,InternalTDigestPercentiles.TYPE,context).formattable(formattable).build();
  double[] keys=null;
  boolean keyed=true;
  Double compression=null;
  Integer numberOfSignificantValueDigits=null;
  PercentilesMethod method=null;
  XContentParser.Token token;
  String currentFieldName=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (vsParser.token(currentFieldName,token,parser)) {
      continue;
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if (context.parseFieldMatcher().match(currentFieldName,keysField())) {
        DoubleArrayList values=new DoubleArrayList(10);
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          double value=parser.doubleValue();
          values.add(value);
        }
        keys=values.toArray();
        Arrays.sort(keys);
      }
 else {
        throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
      }
    }
 else     if (token == XContentParser.Token.VALUE_BOOLEAN) {
      if (context.parseFieldMatcher().match(currentFieldName,KEYED_FIELD)) {
        keyed=parser.booleanValue();
      }
 else {
        throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
      }
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if (method != null) {
        throw new SearchParseException(context,"Found multiple methods in [" + aggregationName + "]: ["+ currentFieldName+ "]. only one of ["+ PercentilesMethod.TDIGEST.getName()+ "] and ["+ PercentilesMethod.HDR.getName()+ "] may be used.",parser.getTokenLocation());
      }
      method=PercentilesMethod.resolveFromName(currentFieldName);
      if (method == null) {
        throw new SearchParseException(context,"Unexpected token " + token + " in ["+ aggregationName+ "].",parser.getTokenLocation());
      }
 else {
switch (method) {
case TDIGEST:
          while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
            if (token == XContentParser.Token.FIELD_NAME) {
              currentFieldName=parser.currentName();
            }
 else             if (token == XContentParser.Token.VALUE_NUMBER) {
              if (context.parseFieldMatcher().match(currentFieldName,COMPRESSION_FIELD)) {
                compression=parser.doubleValue();
              }
 else {
                throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
              }
            }
 else {
              throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
            }
          }
        break;
case HDR:
      while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
        if (token == XContentParser.Token.FIELD_NAME) {
          currentFieldName=parser.currentName();
        }
 else         if (token == XContentParser.Token.VALUE_NUMBER) {
          if (context.parseFieldMatcher().match(currentFieldName,NUMBER_SIGNIFICANT_DIGITS_FIELD)) {
            numberOfSignificantValueDigits=parser.intValue();
          }
 else {
            throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
          }
        }
 else {
          throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
        }
      }
    break;
}
}
}
 else {
throw new SearchParseException(context,"Unexpected token " + token + " in ["+ aggregationName+ "].",parser.getTokenLocation());
}
}
if (method == null) {
method=PercentilesMethod.TDIGEST;
}
switch (method) {
case TDIGEST:
if (numberOfSignificantValueDigits != null) {
throw new SearchParseException(context,"[number_of_significant_value_digits] cannot be used with method [tdigest] in [" + aggregationName + "].",parser.getTokenLocation());
}
if (compression == null) {
compression=100.0;
}
break;
case HDR:
if (compression != null) {
throw new SearchParseException(context,"[compression] cannot be used with method [hdr] in [" + aggregationName + "].",parser.getTokenLocation());
}
if (numberOfSignificantValueDigits == null) {
numberOfSignificantValueDigits=3;
}
break;
default :
throw new SearchParseException(context,"Unknown value for [" + currentFieldName + "] in ["+ aggregationName+ "]: ["+ method+ "].",parser.getTokenLocation());
}
return buildFactory(context,aggregationName,vsParser.config(),keys,method,compression,numberOfSignificantValueDigits,keyed);
}
