{
  int iters=scaledRandomIntBetween(1000,10000);
  for (int i=1; i < iters; i++) {
    long total=between(Integer.MIN_VALUE,Integer.MAX_VALUE);
    long free=between(Integer.MIN_VALUE,Integer.MAX_VALUE);
    if (free > total || total <= 0) {
      try {
        new DiskUsage("random","random",total,free);
        fail("should never reach this");
      }
 catch (      IllegalStateException e) {
      }
    }
 else {
      DiskUsage du=new DiskUsage("random","random",total,free);
      assertThat(du.getFreeBytes(),equalTo(free));
      assertThat(du.getTotalBytes(),equalTo(total));
      assertThat(du.getUsedBytes(),equalTo(total - free));
      assertThat(du.getFreeDiskAsPercentage(),equalTo(100.0 * ((double)free / total)));
    }
  }
}
