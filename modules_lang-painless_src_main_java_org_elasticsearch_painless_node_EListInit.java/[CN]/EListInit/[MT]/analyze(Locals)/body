{
  if (!read) {
    throw createError(new IllegalArgumentException("Must read from list initializer."));
  }
  try {
    actual=Definition.getType("ArrayList");
  }
 catch (  IllegalArgumentException exception) {
    throw createError(new IllegalStateException("Illegal tree structure."));
  }
  constructor=actual.struct.constructors.get(new MethodKey("<init>",0));
  if (constructor == null) {
    throw createError(new IllegalStateException("Illegal tree structure."));
  }
  method=actual.struct.methods.get(new MethodKey("add",1));
  if (method == null) {
    throw createError(new IllegalStateException("Illegal tree structure."));
  }
  for (int index=0; index < values.size(); ++index) {
    AExpression expression=values.get(index);
    expression.expected=Definition.DEF_TYPE;
    expression.internal=true;
    expression.analyze(locals);
    values.set(index,expression.cast(locals));
  }
}
