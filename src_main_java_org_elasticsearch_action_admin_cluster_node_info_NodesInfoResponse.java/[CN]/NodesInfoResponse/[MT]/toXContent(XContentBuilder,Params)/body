{
  builder.field("cluster_name",getClusterName().value());
  builder.startObject("nodes");
  for (  NodeInfo nodeInfo : this) {
    builder.startObject(nodeInfo.getNode().id(),XContentBuilder.FieldCaseConversion.NONE);
    builder.field("name",nodeInfo.getNode().name(),XContentBuilder.FieldCaseConversion.NONE);
    builder.field("transport_address",nodeInfo.getNode().address().toString());
    if (nodeInfo.getHostname() != null) {
      builder.field("hostname",nodeInfo.getHostname(),XContentBuilder.FieldCaseConversion.NONE);
    }
    if (nodeInfo.getVersion() != null) {
      builder.field("version",nodeInfo.getVersion());
    }
    if (nodeInfo.getServiceAttributes() != null) {
      for (      Map.Entry<String,String> nodeAttribute : nodeInfo.getServiceAttributes().entrySet()) {
        builder.field(nodeAttribute.getKey(),nodeAttribute.getValue());
      }
    }
    if (!nodeInfo.getNode().attributes().isEmpty()) {
      builder.startObject("attributes");
      for (      Map.Entry<String,String> attr : nodeInfo.getNode().attributes().entrySet()) {
        builder.field(attr.getKey(),attr.getValue());
      }
      builder.endObject();
    }
    if (nodeInfo.getSettings() != null) {
      builder.startObject("settings");
      Settings settings=settingsFilter.filterSettings(nodeInfo.getSettings());
      for (      Map.Entry<String,String> entry : settings.getAsMap().entrySet()) {
        builder.field(entry.getKey(),entry.getValue());
      }
      builder.endObject();
    }
    if (nodeInfo.getOs() != null) {
      nodeInfo.getOs().toXContent(builder,params);
    }
    if (nodeInfo.getProcess() != null) {
      nodeInfo.getProcess().toXContent(builder,params);
    }
    if (nodeInfo.getJvm() != null) {
      nodeInfo.getJvm().toXContent(builder,params);
    }
    if (nodeInfo.getThreadPool() != null) {
      nodeInfo.getThreadPool().toXContent(builder,params);
    }
    if (nodeInfo.getNetwork() != null) {
      nodeInfo.getNetwork().toXContent(builder,params);
    }
    if (nodeInfo.getTransport() != null) {
      nodeInfo.getTransport().toXContent(builder,params);
    }
    if (nodeInfo.getHttp() != null) {
      nodeInfo.getHttp().toXContent(builder,params);
    }
    builder.endObject();
  }
  builder.endObject();
  return builder;
}
