{
  builder.field("cluster_name",clusterName().value());
  builder.startObject("nodes");
  for (  NodeInfo nodeInfo : this) {
    builder.startObject(nodeInfo.node().id(),XContentBuilder.FieldCaseConversion.NONE);
    builder.field("name",nodeInfo.node().name(),XContentBuilder.FieldCaseConversion.NONE);
    builder.field("transport_address",nodeInfo.node().address().toString());
    if (nodeInfo.hostname() != null) {
      builder.field("hostname",nodeInfo.hostname(),XContentBuilder.FieldCaseConversion.NONE);
    }
    if (nodeInfo.serviceAttributes() != null) {
      for (      Map.Entry<String,String> nodeAttribute : nodeInfo.serviceAttributes().entrySet()) {
        builder.field(nodeAttribute.getKey(),nodeAttribute.getValue());
      }
    }
    if (!nodeInfo.node().attributes().isEmpty()) {
      builder.startObject("attributes");
      for (      Map.Entry<String,String> attr : nodeInfo.node().attributes().entrySet()) {
        builder.field(attr.getKey(),attr.getValue());
      }
      builder.endObject();
    }
    if (nodeInfo.settings() != null) {
      builder.startObject("settings");
      Settings settings=settingsFilter.filterSettings(nodeInfo.settings());
      for (      Map.Entry<String,String> entry : settings.getAsMap().entrySet()) {
        builder.field(entry.getKey(),entry.getValue());
      }
      builder.endObject();
    }
    if (nodeInfo.os() != null) {
      nodeInfo.os().toXContent(builder,params);
    }
    if (nodeInfo.process() != null) {
      nodeInfo.process().toXContent(builder,params);
    }
    if (nodeInfo.jvm() != null) {
      nodeInfo.jvm().toXContent(builder,params);
    }
    if (nodeInfo.threadPool() != null) {
      nodeInfo.threadPool().toXContent(builder,params);
    }
    if (nodeInfo.network() != null) {
      nodeInfo.network().toXContent(builder,params);
    }
    if (nodeInfo.transport() != null) {
      nodeInfo.transport().toXContent(builder,params);
    }
    if (nodeInfo.http() != null) {
      nodeInfo.http().toXContent(builder,params);
    }
    builder.endObject();
  }
  builder.endObject();
  return builder;
}
