{
  bind(ShardsAllocation.class).asEagerSingleton();
  Multibinder<NodeAllocation> allocationMultibinder=Multibinder.newSetBinder(binder(),NodeAllocation.class);
  allocationMultibinder.addBinding().to(SameShardNodeAllocation.class);
  allocationMultibinder.addBinding().to(ReplicaAfterPrimaryActiveNodeAllocation.class);
  allocationMultibinder.addBinding().to(ThrottlingNodeAllocation.class);
  allocationMultibinder.addBinding().to(RebalanceOnlyWhenActiveNodeAllocation.class);
  allocationMultibinder.addBinding().to(ClusterRebalanceNodeAllocation.class);
  allocationMultibinder.addBinding().to(ConcurrentRebalanceNodeAllocation.class);
  for (  Class<? extends NodeAllocation> allocation : allocations) {
    allocationMultibinder.addBinding().to(allocation);
  }
  bind(NodeAllocations.class).asEagerSingleton();
}
