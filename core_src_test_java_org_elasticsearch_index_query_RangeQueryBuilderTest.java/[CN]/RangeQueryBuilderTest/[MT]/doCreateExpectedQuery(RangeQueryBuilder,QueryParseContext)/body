{
  Query expectedQuery;
  String fieldName=queryBuilder.fieldName();
  if (getCurrentTypes().length == 0 || (fieldName.equals(DATE_FIELD_NAME) == false && fieldName.equals(INT_FIELD_NAME) == false)) {
    expectedQuery=new TermRangeQuery(fieldName,BytesRefs.toBytesRef(queryBuilder.from()),BytesRefs.toBytesRef(queryBuilder.to()),queryBuilder.includeLower(),queryBuilder.includeUpper());
  }
 else   if (fieldName.equals(DATE_FIELD_NAME)) {
    DateMathParser forcedDateParser=null;
    if (queryBuilder.format() != null) {
      forcedDateParser=new DateMathParser(Joda.forPattern(queryBuilder.format()));
    }
    DateTimeZone dateTimeZone=null;
    if (queryBuilder.timeZone() != null) {
      dateTimeZone=DateTimeZone.forID(queryBuilder.timeZone());
    }
    MappedFieldType mapper=context.fieldMapper(queryBuilder.fieldName());
    expectedQuery=((DateFieldMapper.DateFieldType)mapper).rangeQuery(BytesRefs.toBytesRef(queryBuilder.from()),BytesRefs.toBytesRef(queryBuilder.to()),queryBuilder.includeLower(),queryBuilder.includeUpper(),dateTimeZone,forcedDateParser,context);
  }
 else   if (queryBuilder.fieldName().equals(INT_FIELD_NAME)) {
    expectedQuery=NumericRangeQuery.newIntRange(INT_FIELD_NAME,(Integer)queryBuilder.from(),(Integer)queryBuilder.to(),queryBuilder.includeLower(),queryBuilder.includeUpper());
  }
 else {
    throw new UnsupportedOperationException();
  }
  return expectedQuery;
}
