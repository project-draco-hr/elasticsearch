{
  id=in.readUTF();
  type=in.readUTF();
  int size=in.readInt();
  if (size > 0) {
    source=new byte[size];
    in.readFully(source);
  }
  if (in.readBoolean()) {
    explanation=readExplanation(in);
  }
  size=in.readInt();
  if (size == 0) {
    fields=ImmutableMap.of();
  }
 else   if (size == 1) {
    SearchHitField hitField=readSearchHitField(in);
    fields=ImmutableMap.of(hitField.name(),hitField);
  }
 else   if (size == 2) {
    SearchHitField hitField1=readSearchHitField(in);
    SearchHitField hitField2=readSearchHitField(in);
    fields=ImmutableMap.of(hitField1.name(),hitField1,hitField2.name(),hitField2);
  }
 else   if (size == 3) {
    SearchHitField hitField1=readSearchHitField(in);
    SearchHitField hitField2=readSearchHitField(in);
    SearchHitField hitField3=readSearchHitField(in);
    fields=ImmutableMap.of(hitField1.name(),hitField1,hitField2.name(),hitField2,hitField3.name(),hitField3);
  }
 else   if (size == 4) {
    SearchHitField hitField1=readSearchHitField(in);
    SearchHitField hitField2=readSearchHitField(in);
    SearchHitField hitField3=readSearchHitField(in);
    SearchHitField hitField4=readSearchHitField(in);
    fields=ImmutableMap.of(hitField1.name(),hitField1,hitField2.name(),hitField2,hitField3.name(),hitField3,hitField4.name(),hitField4);
  }
 else   if (size == 5) {
    SearchHitField hitField1=readSearchHitField(in);
    SearchHitField hitField2=readSearchHitField(in);
    SearchHitField hitField3=readSearchHitField(in);
    SearchHitField hitField4=readSearchHitField(in);
    SearchHitField hitField5=readSearchHitField(in);
    fields=ImmutableMap.of(hitField1.name(),hitField1,hitField2.name(),hitField2,hitField3.name(),hitField3,hitField4.name(),hitField4,hitField5.name(),hitField5);
  }
 else {
    ImmutableMap.Builder<String,SearchHitField> builder=ImmutableMap.builder();
    for (int i=0; i < size; i++) {
      SearchHitField hitField=readSearchHitField(in);
      builder.put(hitField.name(),hitField);
    }
    fields=builder.build();
  }
  if (in.readBoolean()) {
    shard=readSearchShardTarget(in);
  }
}
