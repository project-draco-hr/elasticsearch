{
  builder.field(RWE_LIKELIHOOD_FIELD.getPreferredName(),realWordErrorLikelihood);
  builder.field(CONFIDENCE_FIELD.getPreferredName(),confidence);
  builder.field(SEPARATOR_FIELD.getPreferredName(),separator);
  builder.field(MAXERRORS_FIELD.getPreferredName(),maxErrors);
  if (gramSize != null) {
    builder.field(GRAMSIZE_FIELD.getPreferredName(),gramSize);
  }
  builder.field(FORCE_UNIGRAM_FIELD.getPreferredName(),forceUnigrams);
  builder.field(TOKEN_LIMIT_FIELD.getPreferredName(),tokenLimit);
  if (!generators.isEmpty()) {
    Set<Entry<String,List<CandidateGenerator>>> entrySet=generators.entrySet();
    for (    Entry<String,List<CandidateGenerator>> entry : entrySet) {
      builder.startArray(entry.getKey());
      for (      CandidateGenerator generator : entry.getValue()) {
        generator.toXContent(builder,params);
      }
      builder.endArray();
    }
  }
  if (model != null) {
    builder.startObject(SMOOTHING_MODEL_FIELD.getPreferredName());
    model.toXContent(builder,params);
    builder.endObject();
  }
  if (preTag != null) {
    builder.startObject(HIGHLIGHT_FIELD.getPreferredName());
    builder.field(PRE_TAG_FIELD.getPreferredName(),preTag);
    builder.field(POST_TAG_FIELD.getPreferredName(),postTag);
    builder.endObject();
  }
  if (collateQuery != null) {
    builder.startObject(COLLATE_FIELD.getPreferredName());
    builder.field(COLLATE_QUERY_FIELD.getPreferredName(),collateQuery);
    if (collateParams != null) {
      builder.field(COLLATE_QUERY_PARAMS.getPreferredName(),collateParams);
    }
    builder.field(COLLATE_QUERY_PRUNE.getPreferredName(),collatePrune);
    builder.endObject();
  }
  return builder;
}
