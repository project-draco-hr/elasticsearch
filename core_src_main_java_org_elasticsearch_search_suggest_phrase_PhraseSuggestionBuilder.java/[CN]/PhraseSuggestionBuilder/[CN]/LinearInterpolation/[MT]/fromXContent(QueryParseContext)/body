{
  XContentParser parser=parseContext.parser();
  XContentParser.Token token;
  String fieldName=null;
  final double[] lambdas=new double[3];
  ParseFieldMatcher matcher=parseContext.parseFieldMatcher();
  while ((token=parser.nextToken()) != Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      fieldName=parser.currentName();
    }
    if (token.isValue()) {
      if (matcher.match(fieldName,TRIGRAM_FIELD)) {
        lambdas[0]=parser.doubleValue();
        if (lambdas[0] < 0) {
          throw new IllegalArgumentException("trigram_lambda must be positive");
        }
      }
 else       if (matcher.match(fieldName,BIGRAM_FIELD)) {
        lambdas[1]=parser.doubleValue();
        if (lambdas[1] < 0) {
          throw new IllegalArgumentException("bigram_lambda must be positive");
        }
      }
 else       if (matcher.match(fieldName,UNIGRAM_FIELD)) {
        lambdas[2]=parser.doubleValue();
        if (lambdas[2] < 0) {
          throw new IllegalArgumentException("unigram_lambda must be positive");
        }
      }
 else {
        throw new IllegalArgumentException("suggester[phrase][smoothing][linear] doesn't support field [" + fieldName + "]");
      }
    }
  }
  return new LinearInterpolation(lambdas[0],lambdas[1],lambdas[2]);
}
