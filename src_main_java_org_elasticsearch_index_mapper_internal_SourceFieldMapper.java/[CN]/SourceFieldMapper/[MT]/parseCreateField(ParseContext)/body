{
  if (!enabled) {
    return null;
  }
  if (store == Field.Store.NO) {
    return null;
  }
  if (context.flyweight()) {
    return null;
  }
  byte[] data=context.source();
  int dataOffset=context.sourceOffset();
  int dataLength=context.sourceLength();
  boolean filtered=includes.length > 0 || excludes.length > 0;
  if (filtered) {
    Tuple<XContentType,Map<String,Object>> mapTuple=XContentHelper.convertToMap(data,dataOffset,dataLength,true);
    Map<String,Object> filteredSource=XContentMapValues.filter(mapTuple.v2(),includes,excludes);
    CachedStreamOutput.Entry cachedEntry=CachedStreamOutput.popEntry();
    StreamOutput streamOutput;
    if (compress != null && compress && (compressThreshold == -1 || dataLength > compressThreshold)) {
      streamOutput=cachedEntry.cachedLZFBytes();
    }
 else {
      streamOutput=cachedEntry.cachedBytes();
    }
    XContentBuilder builder=XContentFactory.contentBuilder(mapTuple.v1(),streamOutput).map(filteredSource);
    builder.close();
    data=cachedEntry.bytes().copiedByteArray();
    dataOffset=0;
    dataLength=data.length;
    CachedStreamOutput.pushEntry(cachedEntry);
  }
 else   if (compress != null && compress && !LZF.isCompressed(data,dataOffset,dataLength)) {
    if (compressThreshold == -1 || dataLength > compressThreshold) {
      CachedStreamOutput.Entry cachedEntry=CachedStreamOutput.popEntry();
      LZFStreamOutput streamOutput=cachedEntry.cachedLZFBytes();
      streamOutput.writeBytes(data,dataOffset,dataLength);
      streamOutput.flush();
      data=cachedEntry.bytes().copiedByteArray();
      dataOffset=0;
      dataLength=data.length;
      CachedStreamOutput.pushEntry(cachedEntry);
      context.source(data,dataOffset,dataLength);
    }
  }
  return new Field(names().indexName(),data,dataOffset,dataLength);
}
