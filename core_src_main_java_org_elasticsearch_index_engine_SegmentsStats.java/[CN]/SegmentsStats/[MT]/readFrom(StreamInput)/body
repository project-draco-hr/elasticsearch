{
  count=in.readVLong();
  memoryInBytes=in.readLong();
  termsMemoryInBytes=in.readLong();
  storedFieldsMemoryInBytes=in.readLong();
  termVectorsMemoryInBytes=in.readLong();
  normsMemoryInBytes=in.readLong();
  docValuesMemoryInBytes=in.readLong();
  indexWriterMemoryInBytes=in.readLong();
  versionMapMemoryInBytes=in.readLong();
  indexWriterMaxMemoryInBytes=in.readLong();
  bitsetMemoryInBytes=in.readLong();
  if (in.getVersion().onOrAfter(Version.V_5_0_0_alpha1)) {
    int size=in.readVInt();
    ImmutableOpenMap.Builder<String,Long> map=ImmutableOpenMap.builder(size);
    for (int i=0; i < size; i++) {
      String key=in.readString();
      Long value=in.readLong();
      map.put(key,value);
    }
    fileSizes=map.build();
  }
 else {
    fileSizes=ImmutableOpenMap.of();
  }
}
