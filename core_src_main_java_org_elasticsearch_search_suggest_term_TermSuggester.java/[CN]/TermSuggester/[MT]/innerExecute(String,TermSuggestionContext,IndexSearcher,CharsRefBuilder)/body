{
  DirectSpellChecker directSpellChecker=suggestion.getDirectSpellCheckerSettings().getDirectSpellChecker();
  final IndexReader indexReader=searcher.getIndexReader();
  TermSuggestion response=new TermSuggestion(name,suggestion.getSize(),suggestion.getDirectSpellCheckerSettings().sort());
  List<Token> tokens=queryTerms(suggestion,spare);
  for (  Token token : tokens) {
    SuggestWord[] suggestedWords=directSpellChecker.suggestSimilar(token.term,suggestion.getShardSize(),indexReader,suggestion.getDirectSpellCheckerSettings().suggestMode());
    Text key=new Text(new BytesArray(token.term.bytes()));
    TermSuggestion.Entry resultEntry=new TermSuggestion.Entry(key,token.startOffset,token.endOffset - token.startOffset);
    for (    SuggestWord suggestWord : suggestedWords) {
      Text word=new Text(suggestWord.string);
      resultEntry.addOption(new TermSuggestion.Entry.Option(word,suggestWord.freq,suggestWord.score));
    }
    response.addTerm(resultEntry);
  }
  return response;
}
