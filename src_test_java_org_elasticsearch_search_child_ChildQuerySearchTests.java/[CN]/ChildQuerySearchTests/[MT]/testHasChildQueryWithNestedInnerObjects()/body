{
  assertAcked(prepareCreate("test").addMapping("parent","objects","type=nested").addMapping("child","_parent","type=parent"));
  ensureGreen();
  client().prepareIndex("test","parent","p1").setSource(jsonBuilder().startObject().field("p_field","1").startArray("objects").startObject().field("i_field","1").endObject().startObject().field("i_field","2").endObject().startObject().field("i_field","3").endObject().startObject().field("i_field","4").endObject().startObject().field("i_field","5").endObject().startObject().field("i_field","6").endObject().endArray().endObject()).get();
  client().prepareIndex("test","parent","p2").setSource(jsonBuilder().startObject().field("p_field","2").startArray("objects").startObject().field("i_field","1").endObject().startObject().field("i_field","2").endObject().endArray().endObject()).get();
  client().prepareIndex("test","child","c1").setParent("p1").setSource("c_field","blue").get();
  client().prepareIndex("test","child","c2").setParent("p1").setSource("c_field","red").get();
  client().prepareIndex("test","child","c3").setParent("p2").setSource("c_field","red").get();
  refresh();
  String scoreMode=ScoreType.values()[getRandom().nextInt(ScoreType.values().length)].name().toLowerCase(Locale.ROOT);
  SearchResponse searchResponse=client().prepareSearch("test").setQuery(filteredQuery(QueryBuilders.hasChildQuery("child",termQuery("c_field","blue")).scoreType(scoreMode),notQuery(termQuery("p_field","3")))).get();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  searchResponse=client().prepareSearch("test").setQuery(filteredQuery(QueryBuilders.hasChildQuery("child",termQuery("c_field","red")).scoreType(scoreMode),notQuery(termQuery("p_field","3")))).get();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(2l));
}
