{
  Index index=new Index(randomAsciiOfLengthBetween(1,10),"_na_");
  IndexSettings idxSettings=IndexSettingsModule.newIndexSettings(index,Settings.EMPTY);
  IndicesFieldDataCache cache=new IndicesFieldDataCache(Settings.EMPTY,null);
  IndexFieldDataService ifds=new IndexFieldDataService(IndexSettingsModule.newIndexSettings("test",Settings.EMPTY),cache,null,null);
  BitsetFilterCache bitsetFilterCache=new BitsetFilterCache(idxSettings,new BitsetFilterCache.Listener(){
    @Override public void onRemoval(    ShardId shardId,    Accountable accountable){
    }
    @Override public void onCache(    ShardId shardId,    Accountable accountable){
    }
  }
);
  return new QueryShardContext(idxSettings,bitsetFilterCache,ifds,null,null,scriptService,indicesQueriesRegistry,null,null){
    @Override public MappedFieldType fieldMapper(    String name){
      return provideMappedFieldType(name);
    }
    @Override public ObjectMapper getObjectMapper(    String name){
      BuilderContext context=new BuilderContext(Settings.EMPTY,new ContentPath());
      return new ObjectMapper.Builder<>(name).nested(Nested.newNested(false,false)).build(context);
    }
  }
;
}
