{
  SnapshotsService.SnapshotRequest snapshotRequest=new SnapshotsService.SnapshotRequest(request.repository(),request.snapshot(),"create_snapshot [" + request.snapshot() + "]").indices(request.indices()).indicesOptions(request.indicesOptions()).partial(request.partial()).settings(request.settings()).includeGlobalState(request.includeGlobalState()).masterNodeTimeout(request.masterNodeTimeout());
  snapshotsService.createSnapshot(snapshotRequest,new SnapshotsService.CreateSnapshotListener(){
    @Override public void onResponse(){
      if (request.waitForCompletion()) {
        snapshotsService.addListener(new SnapshotsService.SnapshotCompletionListener(){
          @Override public void onSnapshotCompletion(          Snapshot snapshot,          SnapshotInfo snapshotInfo){
            if (snapshot.getRepository().equals(request.repository()) && snapshot.getSnapshotId().getName().equals(request.snapshot())) {
              listener.onResponse(new CreateSnapshotResponse(snapshotInfo));
              snapshotsService.removeListener(this);
            }
          }
          @Override public void onSnapshotFailure(          Snapshot snapshot,          Exception e){
            if (snapshot.getRepository().equals(request.repository()) && snapshot.getSnapshotId().getName().equals(request.snapshot())) {
              listener.onFailure(e);
              snapshotsService.removeListener(this);
            }
          }
        }
);
      }
 else {
        listener.onResponse(new CreateSnapshotResponse());
      }
    }
    @Override public void onFailure(    Exception e){
      listener.onFailure(e);
    }
  }
);
}
