{
  while (run) {
    try {
      long totalQueryTime=0;
      for (int j=0; j < QUERY_COUNT; j++) {
        SearchResponse searchResponse=client.prepareSearch(indexName).setQuery(boolQuery().must(matchAllQuery()).filter(hasChildQuery("child",termQuery("field2","value" + random.nextInt(numValues))))).execute().actionGet();
        if (searchResponse.getFailedShards() > 0) {
          System.err.println("Search Failures " + Arrays.toString(searchResponse.getShardFailures()));
        }
        totalQueryTime+=searchResponse.getTookInMillis();
      }
      System.out.println("--> has_child filter with term filter Query Avg: " + (totalQueryTime / QUERY_COUNT) + "ms");
      totalQueryTime=0;
      for (int j=1; j <= QUERY_COUNT; j++) {
        SearchResponse searchResponse=client.prepareSearch(indexName).setQuery(boolQuery().must(matchAllQuery()).filter(hasChildQuery("child",matchAllQuery()))).execute().actionGet();
        if (searchResponse.getFailedShards() > 0) {
          System.err.println("Search Failures " + Arrays.toString(searchResponse.getShardFailures()));
        }
        totalQueryTime+=searchResponse.getTookInMillis();
      }
      System.out.println("--> has_child filter with match_all child query, Query Avg: " + (totalQueryTime / QUERY_COUNT) + "ms");
      NodesStatsResponse statsResponse=client.admin().cluster().prepareNodesStats().setJvm(true).execute().actionGet();
      System.out.println("--> Committed heap size: " + statsResponse.getNodes()[0].getJvm().getMem().getHeapCommitted());
      System.out.println("--> Used heap size: " + statsResponse.getNodes()[0].getJvm().getMem().getHeapUsed());
      Thread.sleep(1000);
    }
 catch (    Throwable e) {
      e.printStackTrace();
    }
  }
}
