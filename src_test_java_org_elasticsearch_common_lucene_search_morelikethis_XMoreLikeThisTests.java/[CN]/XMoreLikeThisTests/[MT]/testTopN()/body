{
  int numDocs=100;
  int topN=25;
  Directory dir=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir);
  for (int i=0; i < numDocs; i++) {
    addDoc(writer,generateStrSeq(0,i + 1));
  }
  IndexReader reader=writer.getReader();
  writer.close();
  MoreLikeThis mlt=new MoreLikeThis(reader);
  mlt.setAnalyzer(new MockAnalyzer(random(),MockTokenizer.WHITESPACE,false));
  mlt.setMaxQueryTerms(topN);
  mlt.setMinDocFreq(1);
  mlt.setMinTermFreq(1);
  mlt.setMinWordLen(1);
  mlt.setFieldNames(new String[]{"text"});
  String likeText="";
  for (  String text : generateStrSeq(0,numDocs)) {
    likeText+=text + " ";
  }
  BooleanQuery query=(BooleanQuery)mlt.like("text",new StringReader(likeText));
  List<BooleanClause> clauses=query.clauses();
  assertEquals("Expected" + topN + "clauses only!",topN,clauses.size());
  Term[] expectedTerms=new Term[topN];
  int idx=0;
  for (  String text : generateStrSeq(numDocs - topN,topN)) {
    expectedTerms[idx++]=new Term("text",text);
  }
  for (  BooleanClause clause : clauses) {
    Term term=((TermQuery)clause.getQuery()).getTerm();
    assertTrue(Arrays.asList(expectedTerms).contains(term));
  }
  reader.close();
  dir.close();
}
