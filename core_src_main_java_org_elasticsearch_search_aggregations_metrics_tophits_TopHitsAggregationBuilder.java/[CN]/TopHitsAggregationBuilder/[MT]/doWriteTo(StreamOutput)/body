{
  out.writeBoolean(explain);
  out.writeOptionalStreamable(fetchSourceContext);
  boolean hasFieldDataFields=fieldDataFields != null;
  out.writeBoolean(hasFieldDataFields);
  if (hasFieldDataFields) {
    out.writeVInt(fieldDataFields.size());
    for (    String fieldName : fieldDataFields) {
      out.writeString(fieldName);
    }
  }
  out.writeOptionalWriteable(storedFieldsContext);
  out.writeVInt(from);
  out.writeOptionalWriteable(highlightBuilder);
  boolean hasScriptFields=scriptFields != null;
  out.writeBoolean(hasScriptFields);
  if (hasScriptFields) {
    out.writeVInt(scriptFields.size());
    for (    ScriptField scriptField : scriptFields) {
      scriptField.writeTo(out);
    }
  }
  out.writeVInt(size);
  boolean hasSorts=sorts != null;
  out.writeBoolean(hasSorts);
  if (hasSorts) {
    out.writeVInt(sorts.size());
    for (    SortBuilder<?> sort : sorts) {
      out.writeNamedWriteable(sort);
    }
  }
  out.writeBoolean(trackScores);
  out.writeBoolean(version);
}
