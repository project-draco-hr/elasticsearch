{
  int numEdges=shell.points.size() - 1;
  for (int i=0; i < holes.size(); i++) {
    numEdges+=holes.get(i).points.size() - 1;
  }
  Edge[] edges=new Edge[numEdges];
  Edge[] holeComponents=new Edge[holes.size()];
  int offset=createEdges(0,false,shell,edges,0);
  for (int i=0; i < holes.size(); i++) {
    int length=createEdges(i + 1,true,this.holes.get(i),edges,offset);
    holeComponents[i]=edges[offset];
    offset+=length;
  }
  int numHoles=holeComponents.length;
  numHoles=merge(edges,0,intersections(+DATELINE,edges),holeComponents,numHoles);
  numHoles=merge(edges,0,intersections(-DATELINE,edges),holeComponents,numHoles);
  return compose(edges,holeComponents,numHoles);
}
