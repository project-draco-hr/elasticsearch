{
  if (debugEnabled()) {
    LOGGER.debug("Holes: " + Arrays.toString(holes));
  }
  for (int i=0; i < numHoles; i++) {
    final Edge current=new Edge(holes[i].coordinate,holes[i].next);
    current.intersect=current.coordinate;
    final int intersections=intersections(current.coordinate.x,edges);
    final int pos=Arrays.binarySearch(edges,0,intersections,current,INTERSECTION_ORDER);
    if (pos < 0) {
      throw new ElasticsearchParseException("Invaild shape: Hole is not within polygon");
    }
    final int index=-(pos + 2);
    final int component=-edges[index].component - numHoles - 1;
    if (debugEnabled()) {
      LOGGER.debug("\tposition (" + index + ") of edge "+ current+ ": "+ edges[index]);
      LOGGER.debug("\tComponent: " + component);
      LOGGER.debug("\tHole intersections (" + current.coordinate.x + "): "+ Arrays.toString(edges));
    }
    components.get(component).add(points[i]);
  }
}
