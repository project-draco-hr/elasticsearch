{
  checkState(injector != null,"Factories.create() factories cannot be used until they're initialized by Guice.");
  final Key<?> returnType=returnTypesByMethod.get(method);
  Module assistedModule=new AbstractModule(){
    @Override @SuppressWarnings("unchecked") protected void configure(){
      Binder binder=binder().withSource(method);
      int p=0;
      for (      Key<?> paramKey : paramTypes.get(method)) {
        binder.bind((Key)paramKey).toProvider(Providers.of(args[p++]));
      }
      if (producedType != null && !returnType.equals(producedType)) {
        binder.bind(returnType).to((Key)producedType);
      }
 else {
        binder.bind(returnType);
      }
    }
  }
;
  Injector forCreate=injector.createChildInjector(assistedModule);
  return forCreate.getBinding(returnType);
}
