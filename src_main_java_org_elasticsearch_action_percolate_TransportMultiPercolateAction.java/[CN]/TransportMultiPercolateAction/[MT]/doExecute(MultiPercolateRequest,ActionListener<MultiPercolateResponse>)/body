{
  ClusterState clusterState=clusterService.state();
  clusterState.blocks().globalBlockedRaiseException(ClusterBlockLevel.READ);
  final MultiPercolateResponse.Item[] responses=new MultiPercolateResponse.Item[request.requests().size()];
  final AtomicInteger counter=new AtomicInteger(responses.length);
  for (int i=0; i < responses.length; i++) {
    final int index=i;
    percolateAction.execute(request.requests().get(i),new ActionListener<PercolateResponse>(){
      @Override public void onResponse(      PercolateResponse percolateResponse){
synchronized (responses) {
          responses[index]=new MultiPercolateResponse.Item(percolateResponse,null);
        }
        if (counter.decrementAndGet() == 0) {
          finishHim();
        }
      }
      @Override public void onFailure(      Throwable e){
synchronized (responses) {
          responses[index]=new MultiPercolateResponse.Item(null,ExceptionsHelper.detailedMessage(e));
        }
        if (counter.decrementAndGet() == 0) {
          finishHim();
        }
      }
      private void finishHim(){
        listener.onResponse(new MultiPercolateResponse(responses));
      }
    }
);
  }
}
