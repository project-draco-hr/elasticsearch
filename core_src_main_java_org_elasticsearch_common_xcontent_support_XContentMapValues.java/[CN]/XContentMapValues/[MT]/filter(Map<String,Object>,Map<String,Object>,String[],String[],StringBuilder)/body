{
  if (includes.length == 0 && excludes.length == 0) {
    into.putAll(map);
    return;
  }
  for (  Map.Entry<String,Object> entry : map.entrySet()) {
    String key=entry.getKey();
    int mark=sb.length();
    if (sb.length() > 0) {
      sb.append('.');
    }
    sb.append(key);
    String path=sb.toString();
    if (Regex.simpleMatch(excludes,path)) {
      sb.setLength(mark);
      continue;
    }
    boolean exactIncludeMatch=false;
    boolean pathIsPrefixOfAnInclude=false;
    if (includes.length == 0) {
      exactIncludeMatch=true;
    }
 else {
      for (      String include : includes) {
        if (include.charAt(0) == '*') {
          if (Regex.simpleMatch(include,path)) {
            exactIncludeMatch=true;
            break;
          }
          pathIsPrefixOfAnInclude=true;
          continue;
        }
        if (include.startsWith(path)) {
          if (include.length() == path.length()) {
            exactIncludeMatch=true;
            break;
          }
 else           if (include.length() > path.length() && include.charAt(path.length()) == '.') {
            pathIsPrefixOfAnInclude=true;
            continue;
          }
        }
        if (Regex.simpleMatch(include,path)) {
          exactIncludeMatch=true;
          break;
        }
      }
    }
    if (!(pathIsPrefixOfAnInclude || exactIncludeMatch)) {
      sb.setLength(mark);
      continue;
    }
    if (entry.getValue() instanceof Map) {
      Map<String,Object> innerInto=Maps.newHashMap();
      filter((Map<String,Object>)entry.getValue(),innerInto,exactIncludeMatch ? Strings.EMPTY_ARRAY : includes,excludes,sb);
      if (exactIncludeMatch || !innerInto.isEmpty()) {
        into.put(entry.getKey(),innerInto);
      }
    }
 else     if (entry.getValue() instanceof List) {
      List<Object> list=(List<Object>)entry.getValue();
      List<Object> innerInto=new ArrayList<>(list.size());
      filter(list,innerInto,exactIncludeMatch ? Strings.EMPTY_ARRAY : includes,excludes,sb);
      into.put(entry.getKey(),innerInto);
    }
 else     if (exactIncludeMatch) {
      into.put(entry.getKey(),entry.getValue());
    }
    sb.setLength(mark);
  }
}
