{
  final float indexBalance=0.0f;
  final float replicaBalance=0.0f;
  final float primaryBalance=1.0f;
  final float balanceTreshold=1.0f;
  ImmutableSettings.Builder settings=settingsBuilder();
  settings.put("cluster.routing.allocation.allow_rebalance",ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());
  settings.put(BalancedShardsAllocator.SETTING_INDEX_BALANCE_FACTOR,indexBalance);
  settings.put(BalancedShardsAllocator.SETTING_SHARD_BALANCE_FACTOR,replicaBalance);
  settings.put(BalancedShardsAllocator.SETTING_PRIMARY_BALANCE_FACTOR,primaryBalance);
  settings.put(BalancedShardsAllocator.SETTING_THRESHOLD,balanceTreshold);
  AllocationService strategy=new AllocationService(settings.build());
  ClusterState clusterstate=initCluster(strategy);
  assertPrimaryBalance(logger,clusterstate.getRoutingNodes(),numberOfNodes,numberOfIndices,numberOfReplicas,numberOfShards,balanceTreshold);
  clusterstate=addNode(clusterstate,strategy);
  assertPrimaryBalance(logger,clusterstate.getRoutingNodes(),numberOfNodes + 1,numberOfIndices,numberOfReplicas,numberOfShards,balanceTreshold);
  clusterstate=removeNodes(clusterstate,strategy);
  assertPrimaryBalance(logger,clusterstate.getRoutingNodes(),numberOfNodes + 1 - (numberOfNodes + 1) / 2,numberOfIndices,numberOfReplicas,numberOfShards,balanceTreshold);
}
