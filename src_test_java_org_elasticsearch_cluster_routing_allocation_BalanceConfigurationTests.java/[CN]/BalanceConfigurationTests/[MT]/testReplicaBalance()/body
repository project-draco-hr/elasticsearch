{
  final float indexBalance=0.0f;
  final float replicaBalance=1.0f;
  final float balanceTreshold=1.0f;
  ImmutableSettings.Builder settings=settingsBuilder();
  settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE,ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());
  settings.put(BalancedShardsAllocator.SETTING_INDEX_BALANCE_FACTOR,indexBalance);
  settings.put(BalancedShardsAllocator.SETTING_SHARD_BALANCE_FACTOR,replicaBalance);
  settings.put(BalancedShardsAllocator.SETTING_THRESHOLD,balanceTreshold);
  AllocationService strategy=createAllocationService(settings.build());
  ClusterState clusterState=initCluster(strategy);
  assertReplicaBalance(logger,clusterState.getRoutingNodes(),numberOfNodes,numberOfIndices,numberOfReplicas,numberOfShards,balanceTreshold);
  clusterState=addNode(clusterState,strategy);
  assertReplicaBalance(logger,clusterState.getRoutingNodes(),numberOfNodes + 1,numberOfIndices,numberOfReplicas,numberOfShards,balanceTreshold);
  clusterState=removeNodes(clusterState,strategy);
  assertReplicaBalance(logger,clusterState.getRoutingNodes(),(numberOfNodes + 1) - (numberOfNodes + 1) / 2,numberOfIndices,numberOfReplicas,numberOfShards,balanceTreshold);
}
