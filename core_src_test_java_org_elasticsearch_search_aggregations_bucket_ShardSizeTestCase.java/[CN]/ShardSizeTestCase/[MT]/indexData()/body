{
  List<IndexRequestBuilder> docs=new ArrayList<>();
  routing1=routingKeyForShard("idx","type",0);
  routing2=routingKeyForShard("idx","type",1);
  docs.addAll(indexDoc(routing1,"1",5));
  docs.addAll(indexDoc(routing1,"2",4));
  docs.addAll(indexDoc(routing1,"3",3));
  docs.addAll(indexDoc(routing1,"4",2));
  docs.addAll(indexDoc(routing1,"5",1));
  docs.addAll(indexDoc(routing2,"1",3));
  docs.addAll(indexDoc(routing2,"2",1));
  docs.addAll(indexDoc(routing2,"3",5));
  docs.addAll(indexDoc(routing2,"4",2));
  docs.addAll(indexDoc(routing2,"5",1));
  indexRandom(true,docs);
  SearchResponse resp=client().prepareSearch("idx").setTypes("type").setRouting(routing1).setQuery(matchAllQuery()).execute().actionGet();
  assertSearchResponse(resp);
  long totalOnOne=resp.getHits().getTotalHits();
  assertThat(totalOnOne,is(15L));
  resp=client().prepareSearch("idx").setTypes("type").setRouting(routing2).setQuery(matchAllQuery()).execute().actionGet();
  assertSearchResponse(resp);
  long totalOnTwo=resp.getHits().getTotalHits();
  assertThat(totalOnTwo,is(12L));
}
