{
  Logger logger=Loggers.getLogger(PluginsService.class);
  if (!isAccessibleDirectory(pluginsDirectory,logger)) {
    return Collections.emptyList();
  }
  List<Bundle> bundles=new ArrayList<>();
  try (DirectoryStream<Path> stream=Files.newDirectoryStream(pluginsDirectory)){
    for (    Path plugin : stream) {
      if (FileSystemUtils.isHidden(plugin)) {
        logger.trace("--- skip hidden plugin file[{}]",plugin.toAbsolutePath());
        continue;
      }
      logger.trace("--- adding plugin [{}]",plugin.toAbsolutePath());
      final PluginInfo info;
      try {
        info=PluginInfo.readFromProperties(plugin);
      }
 catch (      IOException e) {
        throw new IllegalStateException("Could not load plugin descriptor for existing plugin [" + plugin.getFileName() + "]. Was the plugin built before 2.0?",e);
      }
      List<URL> urls=new ArrayList<>();
      try (DirectoryStream<Path> jarStream=Files.newDirectoryStream(plugin,"*.jar")){
        for (        Path jar : jarStream) {
          urls.add(jar.toRealPath().toUri().toURL());
        }
      }
       final Bundle bundle=new Bundle();
      bundles.add(bundle);
      bundle.plugins.add(info);
      bundle.urls.addAll(urls);
    }
  }
   return bundles;
}
