{
  ESLogger logger=Loggers.getLogger(Bootstrap.class);
  Path pluginsDirectory=environment.pluginsFile();
  if (!isAccessibleDirectory(pluginsDirectory,logger)) {
    return Collections.emptyList();
  }
  List<Bundle> bundles=new ArrayList<>();
  bundles.add(new Bundle());
  try (DirectoryStream<Path> stream=Files.newDirectoryStream(pluginsDirectory)){
    for (    Path plugin : stream) {
      if (FileSystemUtils.isHidden(plugin)) {
        logger.trace("--- skip hidden plugin file[{}]",plugin.toAbsolutePath());
        continue;
      }
      logger.trace("--- adding plugin [{}]",plugin.toAbsolutePath());
      PluginInfo info=PluginInfo.readFromProperties(plugin);
      List<URL> urls=new ArrayList<>();
      if (info.isJvm()) {
        try (DirectoryStream<Path> jarStream=Files.newDirectoryStream(plugin,"*.jar")){
          for (          Path jar : jarStream) {
            urls.add(jar.toUri().toURL());
          }
        }
       }
      final Bundle bundle;
      if (info.isJvm() && info.isIsolated() == false) {
        bundle=bundles.get(0);
      }
 else {
        bundle=new Bundle();
        bundles.add(bundle);
      }
      bundle.plugins.add(info);
      bundle.urls.addAll(urls);
    }
  }
   return bundles;
}
