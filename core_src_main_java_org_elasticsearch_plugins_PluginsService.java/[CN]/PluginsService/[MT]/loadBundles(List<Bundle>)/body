{
  ImmutableList.Builder<Tuple<PluginInfo,Plugin>> plugins=ImmutableList.builder();
  for (  Bundle bundle : bundles) {
    try {
      final List<URL> jars=new ArrayList<>();
      ClassLoader parentLoader=settings.getClassLoader();
      if (parentLoader instanceof URLClassLoader) {
        for (        URL url : ((URLClassLoader)parentLoader).getURLs()) {
          jars.add(url);
        }
      }
      jars.addAll(bundle.urls);
      JarHell.checkJarHell(jars.toArray(new URL[0]));
    }
 catch (    Exception e) {
      throw new IllegalStateException("failed to load bundle " + bundle.urls + " due to jar hell",e);
    }
    ClassLoader loader=URLClassLoader.newInstance(bundle.urls.toArray(new URL[0]),settings.getClassLoader());
    Settings settings=Settings.builder().put(this.settings).classLoader(loader).build();
    for (    PluginInfo pluginInfo : bundle.plugins) {
      final Plugin plugin;
      if (pluginInfo.isJvm()) {
        plugin=loadPlugin(pluginInfo.getClassname(),settings);
      }
 else {
        plugin=new SitePlugin(pluginInfo.getName(),pluginInfo.getDescription());
      }
      plugins.add(new Tuple<>(pluginInfo,plugin));
    }
  }
  return plugins.build();
}
