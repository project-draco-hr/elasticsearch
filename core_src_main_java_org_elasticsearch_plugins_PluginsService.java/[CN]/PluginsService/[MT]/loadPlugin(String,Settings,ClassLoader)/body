{
  try {
    Class<? extends Plugin> pluginClass=loader.loadClass(className).asSubclass(Plugin.class);
    try {
      return pluginClass.getConstructor(Settings.class).newInstance(settings);
    }
 catch (    NoSuchMethodException e) {
      try {
        return pluginClass.getConstructor().newInstance();
      }
 catch (      NoSuchMethodException e1) {
        throw new ElasticsearchException("No constructor for [" + pluginClass + "]. A plugin class must "+ "have either an empty default constructor or a single argument constructor accepting a "+ "Settings instance");
      }
    }
  }
 catch (  Throwable e) {
    throw new ElasticsearchException("Failed to load plugin class [" + className + "]",e);
  }
}
