{
  AllocationService strategy=createAllocationService(Settings.builder().put("cluster.routing.allocation.node_concurrent_recoveries",10).build());
  OperationRouting operationRouting=new OperationRouting(Settings.EMPTY,new ClusterSettings(Settings.EMPTY,ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(2)).build();
  RoutingTable routingTable=RoutingTable.builder().addAsNew(metaData.index("test")).build();
  ClusterState clusterState=ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(routingTable).build();
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().put(newNode("node1")).put(newNode("node2")).put(newNode("node3")).localNodeId("node1")).build();
  routingTable=strategy.reroute(clusterState,"reroute").routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  routingTable=strategy.applyStartedShards(clusterState,clusterState.getRoutingNodes().shardsWithState(INITIALIZING)).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  GroupShardsIterator shardIterators=operationRouting.searchShards(clusterState,new String[]{"test"},null,"_replica_first");
  assertThat(shardIterators.size(),equalTo(2));
  ShardIterator iter=shardIterators.iterator().next();
  assertThat(iter.size(),equalTo(3));
  ShardRouting routing=iter.nextOrNull();
  assertNotNull(routing);
  assertThat(routing.shardId().id(),anyOf(equalTo(0),equalTo(1)));
  assertTrue(routing.primary());
  assertTrue(routing.started());
  routing=iter.nextOrNull();
  assertThat(routing.shardId().id(),anyOf(equalTo(0),equalTo(1)));
  assertFalse(routing.primary());
  assertTrue(routing.initializing());
  routing=iter.nextOrNull();
  assertThat(routing.shardId().id(),anyOf(equalTo(0),equalTo(1)));
  assertFalse(routing.primary());
  assertTrue(routing.initializing());
  routingTable=strategy.applyStartedShards(clusterState,clusterState.getRoutingNodes().shardsWithState(INITIALIZING)).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  routingTable=strategy.applyStartedShards(clusterState,clusterState.getRoutingNodes().shardsWithState(INITIALIZING)).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  shardIterators=operationRouting.searchShards(clusterState,new String[]{"test"},null,"_replica");
  assertThat(shardIterators.size(),equalTo(2));
  iter=shardIterators.iterator().next();
  assertThat(iter.size(),equalTo(2));
  routing=iter.nextOrNull();
  assertNotNull(routing);
  assertThat(routing.shardId().id(),anyOf(equalTo(0),equalTo(1)));
  assertFalse(routing.primary());
  routing=iter.nextOrNull();
  assertThat(routing.shardId().id(),anyOf(equalTo(0),equalTo(1)));
  assertFalse(routing.primary());
  shardIterators=operationRouting.searchShards(clusterState,new String[]{"test"},null,"_replica_first");
  assertThat(shardIterators.size(),equalTo(2));
  iter=shardIterators.iterator().next();
  assertThat(iter.size(),equalTo(3));
  routing=iter.nextOrNull();
  assertNotNull(routing);
  assertThat(routing.shardId().id(),anyOf(equalTo(0),equalTo(1)));
  assertFalse(routing.primary());
  routing=iter.nextOrNull();
  assertThat(routing.shardId().id(),anyOf(equalTo(0),equalTo(1)));
  assertFalse(routing.primary());
  routing=iter.nextOrNull();
  assertThat(routing.shardId().id(),anyOf(equalTo(0),equalTo(1)));
  assertTrue(routing.primary());
}
