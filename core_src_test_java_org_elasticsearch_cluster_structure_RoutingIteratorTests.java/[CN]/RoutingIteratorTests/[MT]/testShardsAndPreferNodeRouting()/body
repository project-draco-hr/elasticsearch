{
  AllocationService strategy=createAllocationService(settingsBuilder().put("cluster.routing.allocation.concurrent_recoveries",10).build());
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(5).numberOfReplicas(1)).build();
  RoutingTable routingTable=RoutingTable.builder().addAsNew(metaData.index("test")).build();
  ClusterState clusterState=ClusterState.builder(ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).build();
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().put(newNode("node1")).put(newNode("node2")).localNodeId("node1")).build();
  routingTable=strategy.reroute(clusterState).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  routingTable=strategy.applyStartedShards(clusterState,clusterState.routingNodes().shardsWithState(INITIALIZING)).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  routingTable=strategy.applyStartedShards(clusterState,clusterState.routingNodes().shardsWithState(INITIALIZING)).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  OperationRouting operationRouting=new OperationRouting(Settings.Builder.EMPTY_SETTINGS,new AwarenessAllocationDecider());
  GroupShardsIterator shardIterators=operationRouting.searchShards(clusterState,new String[]{"test"},null,"_shards:0");
  assertThat(shardIterators.size(),equalTo(1));
  assertThat(shardIterators.iterator().next().shardId().id(),equalTo(0));
  shardIterators=operationRouting.searchShards(clusterState,new String[]{"test"},null,"_shards:1");
  assertThat(shardIterators.size(),equalTo(1));
  assertThat(shardIterators.iterator().next().shardId().id(),equalTo(1));
  shardIterators=operationRouting.searchShards(clusterState,new String[]{"test"},null,"_shards:0;");
  assertThat(shardIterators.size(),equalTo(1));
  assertThat(shardIterators.iterator().next().shardId().id(),equalTo(0));
  String firstRoundNodeId=shardIterators.iterator().next().nextOrNull().currentNodeId();
  shardIterators=operationRouting.searchShards(clusterState,new String[]{"test"},null,"_shards:0");
  assertThat(shardIterators.size(),equalTo(1));
  assertThat(shardIterators.iterator().next().shardId().id(),equalTo(0));
  assertThat(shardIterators.iterator().next().nextOrNull().currentNodeId(),not(equalTo(firstRoundNodeId)));
  shardIterators=operationRouting.searchShards(clusterState,new String[]{"test"},null,"_shards:0;_prefer_node:node1");
  assertThat(shardIterators.size(),equalTo(1));
  assertThat(shardIterators.iterator().next().shardId().id(),equalTo(0));
  assertThat(shardIterators.iterator().next().nextOrNull().currentNodeId(),equalTo("node1"));
  shardIterators=operationRouting.searchShards(clusterState,new String[]{"test"},null,"_shards:0;_prefer_node:node1");
  assertThat(shardIterators.size(),equalTo(1));
  assertThat(shardIterators.iterator().next().shardId().id(),equalTo(0));
  assertThat(shardIterators.iterator().next().nextOrNull().currentNodeId(),equalTo("node1"));
}
