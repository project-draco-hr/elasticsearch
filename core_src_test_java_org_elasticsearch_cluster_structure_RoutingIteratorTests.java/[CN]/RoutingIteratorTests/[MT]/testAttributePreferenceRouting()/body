{
  AllocationService strategy=createAllocationService(Settings.builder().put("cluster.routing.allocation.node_concurrent_recoveries",10).put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),"always").put("cluster.routing.allocation.awareness.attributes","rack_id,zone").build());
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).build();
  RoutingTable routingTable=RoutingTable.builder().addAsNew(metaData.index("test")).build();
  ClusterState clusterState=ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(routingTable).build();
  Map<String,String> node1Attributes=new HashMap<>();
  node1Attributes.put("rack_id","rack_1");
  node1Attributes.put("zone","zone1");
  Map<String,String> node2Attributes=new HashMap<>();
  node2Attributes.put("rack_id","rack_2");
  node2Attributes.put("zone","zone2");
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode("node1",unmodifiableMap(node1Attributes))).add(newNode("node2",unmodifiableMap(node2Attributes))).localNodeId("node1")).build();
  clusterState=strategy.reroute(clusterState,"reroute");
  clusterState=strategy.applyStartedShards(clusterState,clusterState.getRoutingNodes().shardsWithState(INITIALIZING));
  clusterState=strategy.applyStartedShards(clusterState,clusterState.getRoutingNodes().shardsWithState(INITIALIZING));
  ShardIterator shardIterator=clusterState.routingTable().index("test").shard(0).preferAttributesActiveInitializingShardsIt(new String[]{"rack_id"},clusterState.nodes());
  ShardRouting shardRouting=shardIterator.nextOrNull();
  assertThat(shardRouting,notNullValue());
  assertThat(shardRouting.currentNodeId(),equalTo("node1"));
  shardRouting=shardIterator.nextOrNull();
  assertThat(shardRouting,notNullValue());
  assertThat(shardRouting.currentNodeId(),equalTo("node2"));
  shardIterator=clusterState.routingTable().index("test").shard(0).preferAttributesActiveInitializingShardsIt(new String[]{"rack_id"},clusterState.nodes());
  shardRouting=shardIterator.nextOrNull();
  assertThat(shardRouting,notNullValue());
  assertThat(shardRouting.currentNodeId(),equalTo("node1"));
  shardRouting=shardIterator.nextOrNull();
  assertThat(shardRouting,notNullValue());
  assertThat(shardRouting.currentNodeId(),equalTo("node2"));
}
