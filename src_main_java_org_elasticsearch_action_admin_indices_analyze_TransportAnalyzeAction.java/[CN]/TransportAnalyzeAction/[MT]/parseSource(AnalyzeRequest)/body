{
  AnalyzeContext context=new AnalyzeContext();
  try {
    Map<String,Object> contentMap=XContentHelper.convertToMap(request.source(),false).v2();
    for (    Map.Entry<String,Object> entry : contentMap.entrySet()) {
      String name=entry.getKey();
      if ("prefer_local".equals(name)) {
        request.preferLocal(XContentMapValues.nodeBooleanValue(entry.getValue(),request.preferLocalShard()));
      }
 else       if ("analyzer".equals(name)) {
        context.analyzer(XContentMapValues.nodeStringValue(entry.getValue(),null));
      }
 else       if ("field".equals(name)) {
        context.field(XContentMapValues.nodeStringValue(entry.getValue(),null));
      }
 else       if ("tokenizer".equals(name)) {
        context.tokenizer(XContentMapValues.nodeStringValue(entry.getValue(),null));
      }
 else       if ("token_filters".equals(name) || "filters".equals(name)) {
        if (XContentMapValues.isArray(entry.getValue())) {
          context.tokenFilters((List<String>)entry.getValue());
        }
      }
 else       if ("char_filters".equals(name)) {
        if (XContentMapValues.isArray(entry.getValue())) {
          context.charFilters((List<String>)entry.getValue());
        }
      }
 else       if ("text".equals(name)) {
        context.text(XContentMapValues.nodeStringValue(entry.getValue(),null));
      }
    }
  }
 catch (  ElasticsearchParseException e) {
    throw new ElasticsearchIllegalArgumentException("Failed to parse request body",e);
  }
  if (context.text() == null) {
    throw new ElasticsearchIllegalArgumentException("text is missing");
  }
  return context;
}
