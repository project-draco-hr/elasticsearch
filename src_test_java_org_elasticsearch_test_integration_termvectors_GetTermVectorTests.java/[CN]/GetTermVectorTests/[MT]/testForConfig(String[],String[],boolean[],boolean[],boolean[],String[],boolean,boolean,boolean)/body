{
  TermVectorRequestBuilder resp=client().prepareTermVector("test","type1","1").setPayloads(withPayloads).setOffsets(withOffsets).setPositions(withPositions).setFieldStatistics(true).setTermStatistics(true).setSelectedFields(selectedFields);
  TermVectorResponse response=resp.execute().actionGet();
  Fields luceneFields=buildWithLuceneAndReturnFields("1",fieldNames,fieldContent,storePositions,storeOffsets,storePayloads);
  HashMap<String,Boolean> storeOfsetsMap=new HashMap<String,Boolean>();
  HashMap<String,Boolean> storePositionsMap=new HashMap<String,Boolean>();
  HashMap<String,Boolean> storePayloadsMap=new HashMap<String,Boolean>();
  for (int i=0; i < storePositions.length; i++) {
    storeOfsetsMap.put(fieldNames[i],storeOffsets[i]);
    storePositionsMap.put(fieldNames[i],storePositions[i]);
    storePayloadsMap.put(fieldNames[i],storePayloads[i]);
  }
  compareLuceneESTermVectorResults(response.getFields(),luceneFields,storePositionsMap,storeOfsetsMap,storePayloadsMap,withPositions,withOffsets,withPayloads,selectedFields);
}
