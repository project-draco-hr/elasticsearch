{
  long startDate=System.currentTimeMillis();
  IndexQueryParserService queryParser=queryParser();
  String query=copyToStringFromClasspath("/org/elasticsearch/index/query/date_range_query_timezone.json");
  Query parsedQuery;
  try {
    SearchContext.setCurrent(new TestSearchContext());
    parsedQuery=queryParser.parse(query).query();
  }
  finally {
    SearchContext.removeCurrent();
  }
  assertThat(parsedQuery,instanceOf(NumericRangeQuery.class));
  DateTime min=DateTime.parse("2012-01-01T00:00:00.000+01:00");
  DateTime max=new DateTime(startDate,DateTimeZone.UTC);
  assertThat(((NumericRangeQuery)parsedQuery).getMin().longValue(),is(min.getMillis()));
  assertThat(((NumericRangeQuery)parsedQuery).getMax().longValue() - max.getMillis(),lessThanOrEqualTo(60000L));
  query=copyToStringFromClasspath("/org/elasticsearch/index/query/date_range_query_timezone_numeric_field.json");
  try {
    SearchContext.setCurrent(new TestSearchContext());
    queryParser.parse(query).query();
    fail("A Range Query on a numeric field with a TimeZone should raise a QueryParsingException");
  }
 catch (  QueryParsingException e) {
  }
 finally {
    SearchContext.removeCurrent();
  }
}
