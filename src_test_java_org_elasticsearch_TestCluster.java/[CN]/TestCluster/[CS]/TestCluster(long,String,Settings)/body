{
  this.clusterName=clusterName;
  Random random=new Random(clusterSeed);
  numSharedNodes=2 + random.nextInt(4);
  sharedNodesSeeds=new long[numSharedNodes];
  for (int i=0; i < sharedNodesSeeds.length; i++) {
    sharedNodesSeeds[i]=random.nextLong();
  }
  logger.info("Started TestCluster with seed [{}] using [{}] nodes",SeedUtils.formatSeed(clusterSeed),numSharedNodes);
  if (defaultSettings.get("gateway.type") == null) {
    defaultSettings=settingsBuilder().put(defaultSettings).put("gateway.type","none").build();
  }
  if (defaultSettings.get("cluster.routing.schedule") != null) {
    defaultSettings=settingsBuilder().put(defaultSettings).put("cluster.routing.schedule",(30 + random.nextInt(50)) + "ms").build();
  }
  this.defaultSettings=ImmutableSettings.settingsBuilder().put("index.store.type",MockFSIndexStoreModule.class.getName()).put(IndexEngineModule.EngineSettings.ENGINE_TYPE,MockEngineModule.class.getName()).put(defaultSettings).put("cluster.name",clusterName).build();
}
