{
  ClusterState state=clusterService.state();
  if (state.routingTable().hasIndex(TASK_INDEX) == false) {
    CreateIndexRequest createIndexRequest=new CreateIndexRequest();
    createIndexRequest.settings(taskResultIndexSettings());
    createIndexRequest.index(TASK_INDEX);
    createIndexRequest.mapping(TASK_TYPE,taskResultIndexMapping());
    createIndexRequest.cause("auto(task api)");
    createIndexAction.execute(null,createIndexRequest,new ActionListener<CreateIndexResponse>(){
      @Override public void onResponse(      CreateIndexResponse result){
        doPersist(taskResult,listener);
      }
      @Override public void onFailure(      Throwable e){
        if (ExceptionsHelper.unwrapCause(e) instanceof IndexAlreadyExistsException) {
          try {
            doPersist(taskResult,listener);
          }
 catch (          Throwable e1) {
            listener.onFailure(e1);
          }
        }
 else {
          listener.onFailure(e);
        }
      }
    }
);
  }
 else {
    IndexMetaData metaData=state.getMetaData().index(TASK_INDEX);
    if (metaData.getMappings().containsKey(TASK_TYPE) == false) {
      client.admin().indices().preparePutMapping(TASK_INDEX).setType(TASK_TYPE).setSource(taskResultIndexMapping()).execute(new ActionListener<PutMappingResponse>(){
        @Override public void onResponse(        PutMappingResponse putMappingResponse){
          doPersist(taskResult,listener);
        }
        @Override public void onFailure(        Throwable e){
          listener.onFailure(e);
        }
      }
);
    }
 else {
      doPersist(taskResult,listener);
    }
  }
}
