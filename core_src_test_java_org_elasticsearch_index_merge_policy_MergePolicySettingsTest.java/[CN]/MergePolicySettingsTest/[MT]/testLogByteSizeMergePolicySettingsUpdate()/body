{
  IndexSettingsService service=new IndexSettingsService(new Index("test"),EMPTY_SETTINGS);
  LogByteSizeMergePolicyProvider mp=new LogByteSizeMergePolicyProvider(createStore(EMPTY_SETTINGS),service);
  assertEquals(mp.getMergePolicy().getMaxMergeMB(),LogByteSizeMergePolicyProvider.DEFAULT_MAX_MERGE_SIZE.mbFrac(),0.0d);
  service.refreshSettings(Settings.builder().put(LogByteSizeMergePolicyProvider.INDEX_MERGE_POLICY_MAX_MERGE_SIZE,new ByteSizeValue(LogByteSizeMergePolicyProvider.DEFAULT_MAX_MERGE_SIZE.mb() / 2,ByteSizeUnit.MB)).build());
  assertEquals(mp.getMergePolicy().getMaxMergeMB(),new ByteSizeValue(LogByteSizeMergePolicyProvider.DEFAULT_MAX_MERGE_SIZE.mb() / 2,ByteSizeUnit.MB).mbFrac(),0.0d);
  assertEquals(mp.getMergePolicy().getMinMergeMB(),LogByteSizeMergePolicyProvider.DEFAULT_MIN_MERGE_SIZE.mbFrac(),0.0d);
  service.refreshSettings(Settings.builder().put(LogByteSizeMergePolicyProvider.INDEX_MERGE_POLICY_MIN_MERGE_SIZE,new ByteSizeValue(LogByteSizeMergePolicyProvider.DEFAULT_MIN_MERGE_SIZE.mb() + 1,ByteSizeUnit.MB)).build());
  assertEquals(mp.getMergePolicy().getMinMergeMB(),new ByteSizeValue(LogByteSizeMergePolicyProvider.DEFAULT_MIN_MERGE_SIZE.mb() + 1,ByteSizeUnit.MB).mbFrac(),0.0d);
  assertTrue(mp.getMergePolicy().getCalibrateSizeByDeletes());
  service.refreshSettings(Settings.builder().put(LogByteSizeMergePolicyProvider.INDEX_MERGE_POLICY_CALIBRATE_SIZE_BY_DELETES,false).build());
  assertFalse(mp.getMergePolicy().getCalibrateSizeByDeletes());
  assertEquals(mp.getMergePolicy().getMergeFactor(),LogByteSizeMergePolicy.DEFAULT_MERGE_FACTOR);
  service.refreshSettings(Settings.builder().put(LogByteSizeMergePolicyProvider.INDEX_MERGE_POLICY_MERGE_FACTOR,LogByteSizeMergePolicy.DEFAULT_MERGE_FACTOR / 2).build());
  assertEquals(mp.getMergePolicy().getMergeFactor(),LogByteSizeMergePolicy.DEFAULT_MERGE_FACTOR / 2);
  assertEquals(mp.getMergePolicy().getMaxMergeDocs(),LogByteSizeMergePolicy.DEFAULT_MAX_MERGE_DOCS);
  service.refreshSettings(Settings.builder().put(LogByteSizeMergePolicyProvider.INDEX_MERGE_POLICY_MAX_MERGE_DOCS,LogByteSizeMergePolicy.DEFAULT_MAX_MERGE_DOCS / 2).build());
  assertEquals(mp.getMergePolicy().getMaxMergeDocs(),LogByteSizeMergePolicy.DEFAULT_MAX_MERGE_DOCS / 2);
  service.refreshSettings(EMPTY_SETTINGS);
  assertEquals(mp.getMergePolicy().getMaxMergeMB(),new ByteSizeValue(LogByteSizeMergePolicyProvider.DEFAULT_MAX_MERGE_SIZE.mb() / 2,ByteSizeUnit.MB).mbFrac(),0.0d);
  assertEquals(mp.getMergePolicy().getMinMergeMB(),new ByteSizeValue(LogByteSizeMergePolicyProvider.DEFAULT_MIN_MERGE_SIZE.mb() + 1,ByteSizeUnit.MB).mbFrac(),0.0d);
  assertFalse(mp.getMergePolicy().getCalibrateSizeByDeletes());
  assertEquals(mp.getMergePolicy().getMergeFactor(),LogByteSizeMergePolicy.DEFAULT_MERGE_FACTOR / 2);
  assertEquals(mp.getMergePolicy().getMaxMergeDocs(),LogByteSizeMergePolicy.DEFAULT_MAX_MERGE_DOCS / 2);
  service=new IndexSettingsService(new Index("test"),EMPTY_SETTINGS);
  mp=new LogByteSizeMergePolicyProvider(createStore(Settings.builder().put(LogByteSizeMergePolicyProvider.INDEX_MERGE_POLICY_MAX_MERGE_DOCS,LogByteSizeMergePolicy.DEFAULT_MAX_MERGE_DOCS * 2).put(LogByteSizeMergePolicyProvider.INDEX_MERGE_POLICY_MERGE_FACTOR,LogByteSizeMergePolicy.DEFAULT_MERGE_FACTOR * 2).put(LogByteSizeMergePolicyProvider.INDEX_MERGE_POLICY_MAX_MERGE_SIZE,new ByteSizeValue(LogByteSizeMergePolicyProvider.DEFAULT_MAX_MERGE_SIZE.mb() / 2,ByteSizeUnit.MB)).put(LogByteSizeMergePolicyProvider.INDEX_MERGE_POLICY_CALIBRATE_SIZE_BY_DELETES,false).put(LogByteSizeMergePolicyProvider.INDEX_MERGE_POLICY_MIN_MERGE_SIZE,new ByteSizeValue(LogByteSizeMergePolicyProvider.DEFAULT_MIN_MERGE_SIZE.mb() + 1,ByteSizeUnit.MB)).build()),service);
  assertEquals(mp.getMergePolicy().getMaxMergeMB(),new ByteSizeValue(LogByteSizeMergePolicyProvider.DEFAULT_MAX_MERGE_SIZE.mb() / 2,ByteSizeUnit.MB).mbFrac(),0.0d);
  assertEquals(mp.getMergePolicy().getMinMergeMB(),new ByteSizeValue(LogByteSizeMergePolicyProvider.DEFAULT_MIN_MERGE_SIZE.mb() + 1,ByteSizeUnit.MB).mbFrac(),0.0d);
  assertFalse(mp.getMergePolicy().getCalibrateSizeByDeletes());
  assertEquals(mp.getMergePolicy().getMergeFactor(),LogByteSizeMergePolicy.DEFAULT_MERGE_FACTOR * 2);
  assertEquals(mp.getMergePolicy().getMaxMergeDocs(),LogByteSizeMergePolicy.DEFAULT_MAX_MERGE_DOCS * 2);
}
