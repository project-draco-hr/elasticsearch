{
  new PutPipelineRequestBuilder(client(),PutPipelineAction.INSTANCE).setId("_id").setSource(jsonBuilder().startObject().field("description","my_pipeline").startArray("processors").startObject().startObject("test").endObject().endObject().endArray().endObject().bytes()).get();
  GetPipelineResponse getResponse=new GetPipelineRequestBuilder(client(),GetPipelineAction.INSTANCE).setIds("_id").get();
  assertThat(getResponse.isFound(),is(true));
  assertThat(getResponse.pipelines().size(),equalTo(1));
  assertThat(getResponse.pipelines().get(0).getId(),equalTo("_id"));
  SimulatePipelineResponse response=new SimulatePipelineRequestBuilder(client(),SimulatePipelineAction.INSTANCE).setId("_id").setSource(jsonBuilder().startObject().startArray("docs").startObject().field("_index","index").field("_type","type").field("_id","id").startObject("_source").field("foo","bar").field("fail",false).endObject().endObject().endArray().endObject().bytes()).get();
  assertThat(response.isVerbose(),equalTo(false));
  assertThat(response.getPipelineId(),equalTo("_id"));
  assertThat(response.getResults().size(),equalTo(1));
  assertThat(response.getResults().get(0),instanceOf(SimulateDocumentSimpleResult.class));
  SimulateDocumentSimpleResult simulateDocumentSimpleResult=(SimulateDocumentSimpleResult)response.getResults().get(0);
  Map<String,Object> source=new HashMap<>();
  source.put("foo","bar");
  source.put("fail",false);
  source.put("processed",true);
  IngestDocument ingestDocument=new IngestDocument("index","type","id",null,null,null,null,source);
  assertThat(simulateDocumentSimpleResult.getIngestDocument().getSourceAndMetadata(),equalTo(ingestDocument.getSourceAndMetadata()));
  assertThat(simulateDocumentSimpleResult.getFailure(),nullValue());
}
