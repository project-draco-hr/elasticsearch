{
  String masterId=state.getState().nodes().masterNodeId();
  Table table=new Table();
  table.startHeaders();
  table.addCell("id");
  table.addCell("pid");
  table.addCell("ip");
  table.addCell("port");
  table.addCell("jdk");
  table.addCell("diskAvail","text-align:right;");
  table.addCell("heapUsed","text-align:right;");
  table.addCell("heapMax","text-align:right;");
  table.addCell("heapRatio","text-align:right;");
  table.addCell("ramMax","text-align:right;");
  table.addCell("uptime","text-align:right;");
  table.addCell("data/client");
  table.addCell("master");
  table.addCell("node");
  table.endHeaders();
  for (  DiscoveryNode node : state.getState().nodes()) {
    NodeInfo info=nodesInfo.getNodesMap().get(node.id());
    NodeStats stats=nodesStats.getNodesMap().get(node.id());
    long heapUsed=stats.getJvm().mem().heapUsed().bytes();
    long heapMax=info.getJvm().mem().heapMax().bytes();
    float heapRatio=-1.0f;
    if (heapMax > 0) {
      heapRatio=heapUsed / (heapMax * 1.0f);
    }
    long availableDisk=-1;
    if (!(stats.getFs() == null)) {
      availableDisk=0;
      Iterator<FsStats.Info> it=stats.getFs().iterator();
      while (it.hasNext()) {
        availableDisk+=it.next().getAvailable().bytes();
      }
    }
    table.startRow();
    table.addCell(node.id());
    table.addCell(info.getProcess().id());
    table.addCell(((InetSocketTransportAddress)node.address()).address().getAddress().getHostAddress());
    table.addCell(((InetSocketTransportAddress)node.address()).address().getPort());
    table.addCell(info.getJvm().version());
    table.addCell(availableDisk < 0 ? null : ByteSizeValue.parseBytesSizeValue(new Long(availableDisk).toString()));
    table.addCell(new ByteSizeValue(heapUsed));
    table.addCell(new ByteSizeValue(heapMax));
    table.addCell(heapRatio < 0 ? null : String.format(Locale.ROOT,"%.1f%%",heapRatio * 100.0));
    table.addCell(info.getOs().mem() == null ? null : info.getOs().mem().total());
    table.addCell(stats.getJvm().uptime());
    table.addCell(node.clientNode() ? "c" : node.dataNode() ? "d" : null);
    table.addCell(masterId.equals(node.id()) ? "*" : node.masterNode() ? "m" : null);
    table.addCell(node.name());
    table.endRow();
  }
  return table;
}
