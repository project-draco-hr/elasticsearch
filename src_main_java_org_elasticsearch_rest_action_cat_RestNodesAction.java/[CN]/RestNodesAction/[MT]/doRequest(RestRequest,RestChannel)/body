{
  final ClusterStateRequest clusterStateRequest=new ClusterStateRequest();
  clusterStateRequest.clear().nodes(true);
  clusterStateRequest.local(request.paramAsBoolean("local",clusterStateRequest.local()));
  clusterStateRequest.masterNodeTimeout(request.paramAsTime("master_timeout",clusterStateRequest.masterNodeTimeout()));
  client.admin().cluster().state(clusterStateRequest,new ActionListener<ClusterStateResponse>(){
    @Override public void onResponse(    final ClusterStateResponse clusterStateResponse){
      NodesInfoRequest nodesInfoRequest=new NodesInfoRequest();
      nodesInfoRequest.clear().jvm(true).os(true).process(true);
      client.admin().cluster().nodesInfo(nodesInfoRequest,new ActionListener<NodesInfoResponse>(){
        @Override public void onResponse(        final NodesInfoResponse nodesInfoResponse){
          NodesStatsRequest nodesStatsRequest=new NodesStatsRequest();
          nodesStatsRequest.clear().jvm(true).os(true).fs(true).indices(true);
          client.admin().cluster().nodesStats(nodesStatsRequest,new ActionListener<NodesStatsResponse>(){
            @Override public void onResponse(            NodesStatsResponse nodesStatsResponse){
              try {
                channel.sendResponse(RestTable.buildResponse(buildTable(request,clusterStateResponse,nodesInfoResponse,nodesStatsResponse),request,channel));
              }
 catch (              Throwable e) {
                onFailure(e);
              }
            }
            @Override public void onFailure(            Throwable e){
              try {
                channel.sendResponse(new BytesRestResponse(request,e));
              }
 catch (              IOException e1) {
                logger.error("Failed to send failure response",e1);
              }
            }
          }
);
        }
        @Override public void onFailure(        Throwable e){
          try {
            channel.sendResponse(new BytesRestResponse(request,e));
          }
 catch (          IOException e1) {
            logger.error("Failed to send failure response",e1);
          }
        }
      }
);
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new BytesRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
