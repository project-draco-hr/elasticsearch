{
  writer.writeDebugInfo(location);
  if (promote.sort == Sort.STRING && operation == Operation.ADD) {
    if (!cat) {
      writer.writeNewStrings();
    }
    left.write(writer,globals);
    if (!(left instanceof EBinary) || ((EBinary)left).operation != Operation.ADD || left.actual.sort != Sort.STRING) {
      writer.writeAppendStrings(left.actual);
    }
    right.write(writer,globals);
    if (!(right instanceof EBinary) || ((EBinary)right).operation != Operation.ADD || right.actual.sort != Sort.STRING) {
      writer.writeAppendStrings(right.actual);
    }
    if (!cat) {
      writer.writeToStrings();
    }
  }
 else   if (operation == Operation.FIND) {
    writeBuildMatcher(writer,globals);
    writer.invokeVirtual(Definition.MATCHER_TYPE.type,WriterConstants.MATCHER_FIND);
  }
 else   if (operation == Operation.MATCH) {
    writeBuildMatcher(writer,globals);
    writer.invokeVirtual(Definition.MATCHER_TYPE.type,WriterConstants.MATCHER_MATCHES);
  }
 else {
    left.write(writer,globals);
    right.write(writer,globals);
    if (promote.sort == Sort.DEF || (shiftDistance != null && shiftDistance.sort == Sort.DEF)) {
      writer.writeDynamicBinaryInstruction(location,actual,left.actual,right.actual,operation,false);
    }
 else {
      writer.writeBinaryInstruction(location,actual,operation);
    }
  }
  writer.writeBranch(tru,fals);
}
