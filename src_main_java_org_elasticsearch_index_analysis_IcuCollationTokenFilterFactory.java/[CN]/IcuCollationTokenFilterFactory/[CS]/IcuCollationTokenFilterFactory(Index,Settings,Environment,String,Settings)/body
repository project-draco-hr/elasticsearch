{
  super(index,indexSettings,name,settings);
  Collator collator;
  String rules=settings.get("rules");
  if (rules != null) {
    FailedToResolveConfigException failureToResolve=null;
    try {
      rules=environment.resolveConfigAndLoadToString(rules);
    }
 catch (    FailedToResolveConfigException e) {
      failureToResolve=e;
    }
catch (    IOException e) {
      throw new ElasticSearchIllegalArgumentException("Failed to load collation rules",e);
    }
    try {
      collator=new RuleBasedCollator(rules);
    }
 catch (    Exception e) {
      if (failureToResolve != null) {
        throw new ElasticSearchIllegalArgumentException("Failed to resolve collation rules location",failureToResolve);
      }
 else {
        throw new ElasticSearchIllegalArgumentException("Failed to parse collation rules",e);
      }
    }
  }
 else {
    String language=settings.get("language");
    if (language != null) {
      ULocale locale;
      String country=settings.get("country");
      if (country != null) {
        String variant=settings.get("variant");
        if (variant != null) {
          locale=new ULocale(language,country,variant);
        }
 else {
          locale=new ULocale(language,country);
        }
      }
 else {
        locale=new ULocale(language);
      }
      collator=Collator.getInstance(locale);
    }
 else {
      collator=Collator.getInstance();
    }
  }
  this.collator=collator;
}
