{
  XContentParser parser=parseContext.parser();
  String fieldName=null;
  String geohash=null;
  int levels=-1;
  boolean neighbors=false;
  XContentParser.Token token;
  if ((token=parser.currentToken()) != Token.START_OBJECT) {
    throw new ElasticsearchParseException(NAME + " must be an object");
  }
  while ((token=parser.nextToken()) != Token.END_OBJECT) {
    if (token == Token.FIELD_NAME) {
      String field=parser.text();
      if (PRECISION.equals(field)) {
        token=parser.nextToken();
        if (token == Token.VALUE_NUMBER) {
          levels=parser.intValue();
        }
 else         if (token == Token.VALUE_STRING) {
          double meters=DistanceUnit.parse(parser.text(),DistanceUnit.DEFAULT,DistanceUnit.METERS);
          levels=GeoUtils.geoHashLevelsForPrecision(meters);
        }
      }
 else       if (NEIGHBORS.equals(field)) {
        parser.nextToken();
        neighbors=parser.booleanValue();
      }
 else {
        fieldName=field;
        token=parser.nextToken();
        if (token == Token.VALUE_STRING) {
          String location=parser.text();
          if (location.indexOf(",") > 0) {
            geohash=GeoUtils.parseGeoPoint(parser).geohash();
          }
 else {
            geohash=location;
          }
        }
 else {
          geohash=GeoUtils.parseGeoPoint(parser).geohash();
        }
      }
    }
 else {
      throw new ElasticsearchParseException("unexpected token [" + token + "]");
    }
  }
  if (geohash == null) {
    throw new QueryParsingException(parseContext.index(),"no geohash value provided to geohash_cell filter");
  }
  MapperService.SmartNameFieldMappers smartMappers=parseContext.smartFieldMappers(fieldName);
  if (smartMappers == null || !smartMappers.hasMapper()) {
    throw new QueryParsingException(parseContext.index(),"failed to find geo_point field [" + fieldName + "]");
  }
  FieldMapper<?> mapper=smartMappers.mapper();
  if (!(mapper instanceof GeoPointFieldMapper)) {
    throw new QueryParsingException(parseContext.index(),"field [" + fieldName + "] is not a geo_point field");
  }
  GeoPointFieldMapper geoMapper=((GeoPointFieldMapper)mapper);
  if (!geoMapper.isEnableGeohashPrefix()) {
    throw new QueryParsingException(parseContext.index(),"can't execute geohash_cell on field [" + fieldName + "], geohash_prefix is not enabled");
  }
  if (levels > 0) {
    int len=Math.min(levels,geohash.length());
    geohash=geohash.substring(0,len);
  }
  if (neighbors) {
    return create(parseContext,geoMapper,geohash,GeoHashUtils.addNeighbors(geohash,new ArrayList<CharSequence>(8)));
  }
 else {
    return create(parseContext,geoMapper,geohash,null);
  }
}
