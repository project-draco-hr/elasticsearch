{
synchronized (this) {
    if (timeoutFuture != null) {
      throw new IllegalStateException("scheduleTimeout may only be called once");
    }
    if (started == false) {
      timeoutFuture=timer.schedule(new Runnable(){
        @Override public void run(){
          if (remove(TieBreakingPrioritizedRunnable.this)) {
            runAndClean(timeoutCallback);
          }
        }
      }
,timeValue.nanos(),TimeUnit.NANOSECONDS);
    }
  }
}
