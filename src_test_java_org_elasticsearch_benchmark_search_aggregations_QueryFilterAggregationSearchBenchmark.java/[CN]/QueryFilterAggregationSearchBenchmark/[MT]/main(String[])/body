{
  Settings settings=settingsBuilder().put("index.refresh_interval","-1").put(SETTING_NUMBER_OF_SHARDS,2).put(SETTING_NUMBER_OF_REPLICAS,0).build();
  String clusterName=QueryFilterAggregationSearchBenchmark.class.getSimpleName();
  Node node1=nodeBuilder().clusterName(clusterName).settings(settingsBuilder().put(settings).put("name","node1")).node();
  client=node1.client();
  long[] lValues=new long[NUMBER_OF_TERMS];
  for (int i=0; i < NUMBER_OF_TERMS; i++) {
    lValues[i]=ThreadLocalRandom.current().nextLong();
  }
  Thread.sleep(10000);
  try {
    client.admin().indices().create(createIndexRequest("test")).actionGet();
    StopWatch stopWatch=new StopWatch().start();
    System.out.println("--> Indexing [" + COUNT + "] ...");
    long ITERS=COUNT / BATCH;
    long i=1;
    int counter=0;
    for (; i <= ITERS; i++) {
      BulkRequestBuilder request=client.prepareBulk();
      for (int j=0; j < BATCH; j++) {
        counter++;
        XContentBuilder builder=jsonBuilder().startObject();
        builder.field("id",Integer.toString(counter));
        builder.field("l_value",lValues[ThreadLocalRandom.current().nextInt(NUMBER_OF_TERMS)]);
        builder.endObject();
        request.add(Requests.indexRequest("test").type("type1").id(Integer.toString(counter)).source(builder));
      }
      BulkResponse response=request.execute().actionGet();
      if (response.hasFailures()) {
        System.err.println("--> failures...");
      }
      if (((i * BATCH) % 100000) == 0) {
        System.out.println("--> Indexed " + (i * BATCH) + " took "+ stopWatch.stop().lastTaskTime());
        stopWatch.start();
      }
    }
    System.out.println("--> Indexing took " + stopWatch.totalTime() + ", TPS "+ (((double)(COUNT)) / stopWatch.totalTime().secondsFrac()));
  }
 catch (  Exception e) {
    System.out.println("--> Index already exists, ignoring indexing phase, waiting for green");
    ClusterHealthResponse clusterHealthResponse=client.admin().cluster().prepareHealth().setWaitForGreenStatus().setTimeout("10m").execute().actionGet();
    if (clusterHealthResponse.isTimedOut()) {
      System.err.println("--> Timed out waiting for cluster health");
    }
  }
  client.admin().indices().prepareRefresh().execute().actionGet();
  if (client.prepareCount().setQuery(matchAllQuery()).execute().actionGet().getCount() != COUNT) {
    throw new Error();
  }
  System.out.println("--> Number of docs in index: " + COUNT);
  final long anyValue=((Number)client.prepareSearch().execute().actionGet().getHits().hits()[0].sourceAsMap().get("l_value")).longValue();
  long totalQueryTime=0;
  totalQueryTime=0;
  for (int j=0; j < QUERY_COUNT; j++) {
    SearchResponse searchResponse=client.prepareSearch().setSize(0).setQuery(termQuery("l_value",anyValue)).execute().actionGet();
    totalQueryTime+=searchResponse.getTookInMillis();
  }
  System.out.println("-->  Simple Query on first l_value " + totalQueryTime + "ms");
  totalQueryTime=0;
  for (int j=0; j < QUERY_COUNT; j++) {
    SearchResponse searchResponse=client.prepareSearch().setSize(0).setQuery(termQuery("l_value",anyValue)).addAggregation(AggregationBuilders.filter("filter").filter(FilterBuilders.termFilter("l_value",anyValue))).execute().actionGet();
    totalQueryTime+=searchResponse.getTookInMillis();
  }
  System.out.println("-->  Filter agg first l_value " + totalQueryTime + "ms");
}
