{
  CountRequest countRequest=new CountRequest(Strings.splitStringByCommaToArray(request.param("index")));
  if (request.hasParam("ignore_indices")) {
    countRequest.ignoreIndices(IgnoreIndices.fromString(request.param("ignore_indices")));
  }
  countRequest.listenerThreaded(false);
  try {
    BroadcastOperationThreading operationThreading=BroadcastOperationThreading.fromString(request.param("operation_threading"),BroadcastOperationThreading.THREAD_PER_SHARD);
    if (operationThreading == BroadcastOperationThreading.NO_THREADS) {
      operationThreading=BroadcastOperationThreading.SINGLE_THREAD;
    }
    countRequest.operationThreading(operationThreading);
    if (request.hasContent()) {
      countRequest.source(request.content(),request.contentUnsafe());
    }
 else {
      String source=request.param("source");
      if (source != null) {
        countRequest.source(source);
      }
 else {
        QuerySourceBuilder querySourceBuilder=RestActions.parseQuerySource(request);
        if (querySourceBuilder != null) {
          countRequest.source(querySourceBuilder);
        }
      }
    }
    countRequest.routing(request.param("routing"));
    countRequest.minScore(request.paramAsFloat("min_score",DEFAULT_MIN_SCORE));
    countRequest.types(Strings.splitStringByCommaToArray(request.param("type")));
    countRequest.preference(request.param("preference"));
  }
 catch (  Exception e) {
    try {
      XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
      channel.sendResponse(new XContentRestResponse(request,BAD_REQUEST,builder.startObject().field("error",e.getMessage()).endObject()));
    }
 catch (    IOException e1) {
      logger.error("Failed to send failure response",e1);
    }
    return;
  }
  client.count(countRequest,new ActionListener<CountResponse>(){
    @Override public void onResponse(    CountResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        builder.field("count",response.getCount());
        buildBroadcastShardsHeader(builder,response);
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,response.status(),builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
