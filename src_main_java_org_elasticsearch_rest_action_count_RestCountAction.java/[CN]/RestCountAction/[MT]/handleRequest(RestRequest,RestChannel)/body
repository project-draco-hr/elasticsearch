{
  CountRequest countRequest=new CountRequest(Strings.splitStringByCommaToArray(request.param("index")));
  countRequest.indicesOptions(IndicesOptions.fromRequest(request,countRequest.indicesOptions()));
  countRequest.listenerThreaded(false);
  BroadcastOperationThreading operationThreading=BroadcastOperationThreading.fromString(request.param("operation_threading"),BroadcastOperationThreading.THREAD_PER_SHARD);
  if (operationThreading == BroadcastOperationThreading.NO_THREADS) {
    operationThreading=BroadcastOperationThreading.SINGLE_THREAD;
  }
  countRequest.operationThreading(operationThreading);
  if (request.hasContent()) {
    countRequest.source(request.content(),request.contentUnsafe());
  }
 else {
    String source=request.param("source");
    if (source != null) {
      countRequest.source(source);
    }
 else {
      QuerySourceBuilder querySourceBuilder=RestActions.parseQuerySource(request);
      if (querySourceBuilder != null) {
        countRequest.source(querySourceBuilder);
      }
    }
  }
  countRequest.routing(request.param("routing"));
  countRequest.minScore(request.paramAsFloat("min_score",DEFAULT_MIN_SCORE));
  countRequest.types(Strings.splitStringByCommaToArray(request.param("type")));
  countRequest.preference(request.param("preference"));
  client.count(countRequest,new RestBuilderListener<CountResponse>(channel){
    @Override public RestResponse buildResponse(    CountResponse response,    XContentBuilder builder) throws Exception {
      builder.startObject();
      builder.field("count",response.getCount());
      buildBroadcastShardsHeader(builder,response);
      builder.endObject();
      return new BytesRestResponse(response.status(),builder);
    }
  }
);
}
