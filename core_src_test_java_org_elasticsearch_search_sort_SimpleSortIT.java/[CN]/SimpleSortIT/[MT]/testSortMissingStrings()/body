{
  assertAcked(prepareCreate("test").addMapping("type1",XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("value").field("type","string").field("index","not_analyzed").endObject().endObject().endObject().endObject()));
  ensureGreen();
  client().prepareIndex("test","type1","1").setSource(jsonBuilder().startObject().field("id","1").field("value","a").endObject()).execute().actionGet();
  client().prepareIndex("test","type1","2").setSource(jsonBuilder().startObject().field("id","2").endObject()).execute().actionGet();
  client().prepareIndex("test","type1","3").setSource(jsonBuilder().startObject().field("id","1").field("value","c").endObject()).execute().actionGet();
  flush();
  refresh();
  try {
    Thread.sleep(2000);
  }
 catch (  InterruptedException e) {
    throw new RuntimeException();
  }
  logger.info("--> sort with no missing (same as missing _last)");
  SearchResponse searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addSort(SortBuilders.fieldSort("value").order(SortOrder.ASC)).execute().actionGet();
  assertThat(Arrays.toString(searchResponse.getShardFailures()),searchResponse.getFailedShards(),equalTo(0));
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getAt(0).id(),equalTo("1"));
  assertThat(searchResponse.getHits().getAt(1).id(),equalTo("3"));
  assertThat(searchResponse.getHits().getAt(2).id(),equalTo("2"));
  logger.info("--> sort with missing _last");
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addSort(SortBuilders.fieldSort("value").order(SortOrder.ASC).missing("_last")).execute().actionGet();
  assertThat(Arrays.toString(searchResponse.getShardFailures()),searchResponse.getFailedShards(),equalTo(0));
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getAt(0).id(),equalTo("1"));
  assertThat(searchResponse.getHits().getAt(1).id(),equalTo("3"));
  assertThat(searchResponse.getHits().getAt(2).id(),equalTo("2"));
  logger.info("--> sort with missing _first");
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addSort(SortBuilders.fieldSort("value").order(SortOrder.ASC).missing("_first")).execute().actionGet();
  assertThat(Arrays.toString(searchResponse.getShardFailures()),searchResponse.getFailedShards(),equalTo(0));
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getAt(0).id(),equalTo("2"));
  assertThat(searchResponse.getHits().getAt(1).id(),equalTo("1"));
  assertThat(searchResponse.getHits().getAt(2).id(),equalTo("3"));
  logger.info("--> sort with missing b");
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addSort(SortBuilders.fieldSort("value").order(SortOrder.ASC).missing("b")).execute().actionGet();
  assertThat(Arrays.toString(searchResponse.getShardFailures()),searchResponse.getFailedShards(),equalTo(0));
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getAt(0).id(),equalTo("1"));
  assertThat(searchResponse.getHits().getAt(1).id(),equalTo("2"));
  assertThat(searchResponse.getHits().getAt(2).id(),equalTo("3"));
}
