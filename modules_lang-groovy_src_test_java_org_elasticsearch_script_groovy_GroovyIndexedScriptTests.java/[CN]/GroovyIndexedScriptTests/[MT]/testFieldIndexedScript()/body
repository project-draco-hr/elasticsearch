{
  client().admin().cluster().preparePutStoredScript().setId("script1").setScriptLang(GroovyScriptEngineService.NAME).setSource(new BytesArray("{ \"script\" : \"2\"}")).get();
  client().admin().cluster().preparePutStoredScript().setId("script2").setScriptLang(GroovyScriptEngineService.NAME).setSource(new BytesArray("{ \"script\" : \"factor * 2\"}")).get();
  List<IndexRequestBuilder> builders=new ArrayList<>();
  builders.add(client().prepareIndex("test","scriptTest","1").setSource("{\"theField\":\"foo\"}"));
  builders.add(client().prepareIndex("test","scriptTest","2").setSource("{\"theField\":\"foo 2\"}"));
  builders.add(client().prepareIndex("test","scriptTest","3").setSource("{\"theField\":\"foo 3\"}"));
  builders.add(client().prepareIndex("test","scriptTest","4").setSource("{\"theField\":\"foo 4\"}"));
  builders.add(client().prepareIndex("test","scriptTest","5").setSource("{\"theField\":\"bar\"}"));
  indexRandom(true,builders);
  Map<String,Object> script2Params=new HashMap<>();
  script2Params.put("factor",3);
  SearchResponse searchResponse=client().prepareSearch().setSource(new SearchSourceBuilder().query(QueryBuilders.matchAllQuery()).size(1).scriptField("test1",new Script("script1",ScriptType.STORED,GroovyScriptEngineService.NAME,null)).scriptField("test2",new Script("script2",ScriptType.STORED,GroovyScriptEngineService.NAME,script2Params))).setIndices("test").setTypes("scriptTest").get();
  assertHitCount(searchResponse,5);
  assertTrue(searchResponse.getHits().hits().length == 1);
  SearchHit sh=searchResponse.getHits().getAt(0);
  assertThat(sh.field("test1").getValue(),equalTo(2));
  assertThat(sh.field("test2").getValue(),equalTo(6));
}
