{
  String[] nodesIds=Strings.splitStringByCommaToArray(request.param("nodeId"));
  NodesRestartRequest nodesRestartRequest=new NodesRestartRequest(nodesIds);
  nodesRestartRequest.listenerThreaded(false);
  nodesRestartRequest.delay(request.paramAsTime("delay",nodesRestartRequest.delay()));
  client.admin().cluster().nodesRestart(nodesRestartRequest,new ActionListener<NodesRestartResponse>(){
    @Override public void onResponse(    NodesRestartResponse result){
      try {
        XContentBuilder builder=restContentBuilder(request);
        builder.startObject();
        builder.field("cluster_name",result.getClusterName().value());
        builder.startObject("nodes");
        for (        NodesRestartResponse.NodeRestartResponse nodeInfo : result) {
          builder.startObject(nodeInfo.getNode().id());
          builder.field("name",nodeInfo.getNode().name());
          builder.endObject();
        }
        builder.endObject();
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,RestStatus.OK,builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
