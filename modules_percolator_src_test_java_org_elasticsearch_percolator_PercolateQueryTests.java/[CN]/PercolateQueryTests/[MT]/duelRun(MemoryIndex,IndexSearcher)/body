{
  IndexSearcher percolateSearcher=memoryIndex.createSearcher();
  PercolateQuery.Builder builder1=new PercolateQuery.Builder("docType",queryStore,new BytesArray("{}"),percolateSearcher);
  builder1.extractQueryTermsQuery(EXTRACTED_TERMS_FIELD_NAME,UNKNOWN_QUERY_FIELD_NAME);
  TopDocs topDocs1=shardSearcher.search(builder1.build(),10);
  PercolateQuery.Builder builder2=new PercolateQuery.Builder("docType",queryStore,new BytesArray("{}"),percolateSearcher);
  builder2.setPercolateTypeQuery(new MatchAllDocsQuery());
  TopDocs topDocs2=shardSearcher.search(builder2.build(),10);
  assertThat(topDocs1.totalHits,equalTo(topDocs2.totalHits));
  assertThat(topDocs1.scoreDocs.length,equalTo(topDocs2.scoreDocs.length));
  for (int j=0; j < topDocs1.scoreDocs.length; j++) {
    assertThat(topDocs1.scoreDocs[j].doc,equalTo(topDocs2.scoreDocs[j].doc));
    assertThat(topDocs1.scoreDocs[j].score,equalTo(topDocs2.scoreDocs[j].score));
    Explanation explain1=shardSearcher.explain(builder1.build(),topDocs1.scoreDocs[j].doc);
    Explanation explain2=shardSearcher.explain(builder2.build(),topDocs2.scoreDocs[j].doc);
    assertThat(explain1.toHtml(),equalTo(explain2.toHtml()));
  }
}
