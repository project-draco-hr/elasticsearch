{
  String masterNode=startMasterNode();
  String redNodeDataPath=createTempDir().toString();
  String redNode=startDataNode("red",redNodeDataPath);
  client().admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForNodes("2")).get();
  assertAcked(prepareCreate("red_index").setSettings(Settings.builder().put("index.number_of_replicas",0).put(FilterAllocationDecider.INDEX_ROUTING_INCLUDE_GROUP + "color","red")));
  index("red_index","doc","1",jsonBuilder().startObject().field("text","some text").endObject());
  logger.info("--> wait for green red_index");
  ensureGreen();
  logger.info("--> wait for meta state written for red_index");
  assertIndexInMetaState(redNode,"red_index");
  assertIndexInMetaState(masterNode,"red_index");
  waitForConcreteMappingsOnAll("red_index","doc","text");
  logger.info("--> close red_index");
  client().admin().indices().prepareClose("red_index").get();
  ClusterStateResponse clusterStateResponse=client().admin().cluster().prepareState().get();
  assertThat(clusterStateResponse.getState().getMetaData().index("red_index").getState().name(),equalTo(IndexMetaData.State.CLOSE.name()));
  logger.info("--> restart red node");
  stopNode(redNode);
  redNode=startDataNode("red",redNodeDataPath);
  client().admin().indices().preparePutMapping("red_index").setType("doc").setSource(jsonBuilder().startObject().startObject("properties").startObject("integer_field").field("type","integer").endObject().endObject().endObject()).get();
  GetMappingsResponse getMappingsResponse=client().admin().indices().prepareGetMappings("red_index").addTypes("doc").get();
  assertNotNull(((LinkedHashMap)(getMappingsResponse.getMappings().get("red_index").get("doc").getSourceAsMap().get("properties"))).get("integer_field"));
  ((InternalTestCluster)cluster()).stopCurrentMasterNode();
  masterNode=startMasterNode();
  ensureGreen("red_index");
  assertIndexInMetaState(redNode,"red_index");
  assertIndexInMetaState(masterNode,"red_index");
  clusterStateResponse=client().admin().cluster().prepareState().get();
  assertThat(clusterStateResponse.getState().getMetaData().index("red_index").getState().name(),equalTo(IndexMetaData.State.CLOSE.name()));
  getMappingsResponse=client().admin().indices().prepareGetMappings("red_index").addTypes("doc").get();
  assertNotNull(((LinkedHashMap)(getMappingsResponse.getMappings().get("red_index").get("doc").getSourceAsMap().get("properties"))).get("integer_field"));
}
