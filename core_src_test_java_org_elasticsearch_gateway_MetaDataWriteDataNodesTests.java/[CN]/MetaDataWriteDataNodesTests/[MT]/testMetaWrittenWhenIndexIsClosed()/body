{
  String masterNode=startMasterNode();
  String redNodeDataPath=createTempDir().toString();
  String redNode=startDataNode("red",redNodeDataPath);
  String blueNode=startDataNode("blue");
  client().admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForNodes("3")).get();
  assertAcked(prepareCreate("red_index").setSettings(Settings.builder().put("index.number_of_replicas",0).put(FilterAllocationDecider.INDEX_ROUTING_INCLUDE_GROUP + "color","red")));
  index("red_index","doc","1",jsonBuilder().startObject().field("text","some text").endObject());
  ensureGreen();
  assertIndexNotInMetaState(blueNode,"red_index");
  assertIndexInMetaState(redNode,"red_index");
  assertIndexInMetaState(masterNode,"red_index");
  client().admin().indices().prepareClose("red_index").get();
  ClusterStateResponse clusterStateResponse=client().admin().cluster().prepareState().get();
  assertThat(clusterStateResponse.getState().getMetaData().index("red_index").getState().name(),equalTo(IndexMetaData.State.CLOSE.name()));
  boolean restartRedNode=randomBoolean();
  if (restartRedNode) {
    stopNode(redNode);
  }
  ((InternalTestCluster)cluster()).stopCurrentMasterNode();
  masterNode=startMasterNode();
  if (restartRedNode) {
    redNode=startDataNode("red",redNodeDataPath);
  }
  ensureGreen("red_index");
  assertIndexNotInMetaState(blueNode,"red_index");
  assertIndexInMetaState(redNode,"red_index");
  assertIndexInMetaState(masterNode,"red_index");
  clusterStateResponse=client().admin().cluster().prepareState().get();
  assertThat(clusterStateResponse.getState().getMetaData().index("red_index").getState().name(),equalTo(IndexMetaData.State.CLOSE.name()));
  client().admin().indices().prepareOpen("red_index").get();
  clusterStateResponse=client().admin().cluster().prepareState().get();
  assertThat(clusterStateResponse.getState().getMetaData().index("red_index").getState().name(),equalTo(IndexMetaData.State.OPEN.name()));
  ensureGreen();
  if (restartRedNode) {
    stopNode(redNode);
  }
  ((InternalTestCluster)cluster()).stopCurrentMasterNode();
  masterNode=startMasterNode();
  if (restartRedNode) {
    redNode=startDataNode("red",redNodeDataPath);
  }
  ensureGreen("red_index");
  assertIndexNotInMetaState(blueNode,"red_index");
  assertIndexInMetaState(redNode,"red_index");
  assertIndexInMetaState(masterNode,"red_index");
  clusterStateResponse=client().admin().cluster().prepareState().get();
  assertThat(clusterStateResponse.getState().getMetaData().index("red_index").getState().name(),equalTo(IndexMetaData.State.OPEN.name()));
  assertTrue(client().prepareGet("red_index","doc","1").get().isExists());
}
