{
  InetAddress[] inetAddresses=InetAddress.getAllByName("0.0.0.0");
  List<InetSocketTransportAddress> transportAddressList=new ArrayList<>();
  for (  InetAddress address : inetAddresses) {
    transportAddressList.add(new InetSocketTransportAddress(address,randomIntBetween(9200,9299)));
  }
  final BoundTransportAddress transportAddress=new BoundTransportAddress(transportAddressList.toArray(new InetSocketTransportAddress[0]),transportAddressList.get(0));
  assertThat(transportAddress.boundAddresses().length,equalTo(transportAddressList.size()));
  BytesStreamOutput streamOutput=new BytesStreamOutput();
  transportAddress.writeTo(streamOutput);
  StreamInput in=ByteBufferStreamInput.wrap(streamOutput.bytes());
  BoundTransportAddress serializedAddress;
  if (randomBoolean()) {
    serializedAddress=BoundTransportAddress.readBoundTransportAddress(in);
  }
 else {
    serializedAddress=new BoundTransportAddress();
    serializedAddress.readFrom(in);
  }
  assertThat(serializedAddress,not(sameInstance(transportAddress)));
  assertThat(serializedAddress.boundAddresses().length,equalTo(transportAddress.boundAddresses().length));
  assertThat(serializedAddress.publishAddress(),equalTo(transportAddress.publishAddress()));
  TransportAddress[] serializedBoundAddresses=serializedAddress.boundAddresses();
  TransportAddress[] boundAddresses=transportAddress.boundAddresses();
  for (int i=0; i < serializedBoundAddresses.length; i++) {
    assertThat(serializedBoundAddresses[i],equalTo(boundAddresses[i]));
  }
}
