{
  for (  String method : getHttpMethods()) {
    Map<String,String> expectedHeaders=new HashMap<>();
    for (    Header defaultHeader : defaultHeaders) {
      expectedHeaders.put(defaultHeader.getName(),defaultHeader.getValue());
    }
    int numHeaders=RandomInts.randomIntBetween(getRandom(),1,5);
    Header[] headers=new Header[numHeaders];
    for (int i=0; i < numHeaders; i++) {
      String headerName="Header" + (getRandom().nextBoolean() ? i : "");
      String headerValue=RandomStrings.randomAsciiOfLengthBetween(getRandom(),3,10);
      headers[i]=new BasicHeader(headerName,headerValue);
      expectedHeaders.put(headerName,headerValue);
    }
    int statusCode=randomStatusCode(getRandom());
    Response esResponse;
    try {
      esResponse=restClient.performRequest(method,"/" + statusCode,headers);
    }
 catch (    ResponseException e) {
      esResponse=e.getResponse();
    }
    assertThat(esResponse.getStatusLine().getStatusCode(),equalTo(statusCode));
    for (    Header responseHeader : esResponse.getHeaders()) {
      String headerValue=expectedHeaders.remove(responseHeader.getName());
      assertNotNull("found response header [" + responseHeader.getName() + "] that wasn't originally sent",headerValue);
    }
    assertEquals("some headers that were sent weren't returned " + expectedHeaders,0,expectedHeaders.size());
  }
}
