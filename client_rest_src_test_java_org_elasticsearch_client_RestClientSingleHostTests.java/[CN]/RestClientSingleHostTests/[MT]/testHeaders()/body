{
  for (  String method : getHttpMethods()) {
    final int numHeaders=randomIntBetween(1,5);
    final Header[] headers=generateHeaders("Header",null,numHeaders);
    final Map<String,List<String>> expectedHeaders=new HashMap<>();
    addHeaders(expectedHeaders,defaultHeaders,headers);
    final int statusCode=randomStatusCode(getRandom());
    Response esResponse;
    try {
      esResponse=restClient.performRequest(method,"/" + statusCode,headers);
    }
 catch (    ResponseException e) {
      esResponse=e.getResponse();
    }
    assertThat(esResponse.getStatusLine().getStatusCode(),equalTo(statusCode));
    for (    Header responseHeader : esResponse.getHeaders()) {
      final String name=responseHeader.getName();
      final String value=responseHeader.getValue();
      final List<String> values=expectedHeaders.get(name);
      assertNotNull("found response header [" + name + "] that wasn't originally sent: "+ value,values);
      assertTrue("found incorrect response header [" + name + "]: "+ value,values.remove(value));
      if (values.isEmpty()) {
        expectedHeaders.remove(name);
      }
    }
    assertTrue("some headers that were sent weren't returned " + expectedHeaders,expectedHeaders.isEmpty());
  }
}
