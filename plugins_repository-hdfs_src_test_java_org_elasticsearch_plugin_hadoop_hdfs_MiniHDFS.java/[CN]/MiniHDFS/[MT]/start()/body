{
  if (dfs != null) {
    return -1;
  }
  Path basePath=getBasePath();
  Path portPath=basePath.resolve(PORT_FILE_NAME);
  Path pidPath=basePath.resolve(PID_FILE_NAME);
  if (Files.exists(basePath)) {
    RandomizedTest.rmDir(basePath);
  }
  Configuration cfg=new Configuration();
  cfg.set(MiniDFSCluster.HDFS_MINIDFS_BASEDIR,getBasePath().toAbsolutePath().toString());
  cfg.set(DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,"766");
  dfs=new MiniDFSCluster.Builder(cfg).build();
  int port=dfs.getNameNodePort();
  Files.write(portPath,Integer.toString(port).getBytes(StandardCharsets.UTF_8));
  Files.write(pidPath,Long.toString(JvmInfo.jvmInfo().getPid()).getBytes(StandardCharsets.UTF_8));
  System.out.printf(Locale.ROOT,"Started HDFS at %s\n",dfs.getURI());
  System.out.printf(Locale.ROOT,"Port information available at %s\n",portPath.toRealPath());
  System.out.printf(Locale.ROOT,"PID information available at %s\n",pidPath.toRealPath());
  return port;
}
