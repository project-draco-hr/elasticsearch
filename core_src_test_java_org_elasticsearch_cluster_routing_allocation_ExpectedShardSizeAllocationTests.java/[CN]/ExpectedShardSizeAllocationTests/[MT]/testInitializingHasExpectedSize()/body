{
  final long byteSize=randomIntBetween(0,Integer.MAX_VALUE);
  AllocationService strategy=createAllocationService(Settings.EMPTY,new ClusterInfoService(){
    @Override public ClusterInfo getClusterInfo(){
      return new ClusterInfo(){
        @Override public Long getShardSize(        ShardRouting shardRouting){
          if (shardRouting.index().equals("test") && shardRouting.shardId().getId() == 0) {
            return byteSize;
          }
          return null;
        }
      }
;
    }
    @Override public void addListener(    Listener listener){
    }
  }
);
  logger.info("Building initial routing table");
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT).put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,1))).build();
  RoutingTable routingTable=RoutingTable.builder().addAsNew(metaData.index("test")).build();
  ClusterState clusterState=ClusterState.builder(org.elasticsearch.cluster.ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).build();
  logger.info("Adding one node and performing rerouting");
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().put(newNode("node1"))).build();
  routingTable=strategy.reroute(clusterState).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertEquals(1,clusterState.getRoutingNodes().node("node1").numberOfShardsWithState(ShardRoutingState.INITIALIZING));
  assertEquals(byteSize,clusterState.getRoutingNodes().getRoutingTable().shardsWithState(ShardRoutingState.INITIALIZING).get(0).getExpectedShardSize());
  logger.info("Start the primary shard");
  RoutingNodes routingNodes=clusterState.getRoutingNodes();
  routingTable=strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING)).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertEquals(1,clusterState.getRoutingNodes().node("node1").numberOfShardsWithState(ShardRoutingState.STARTED));
  assertEquals(1,clusterState.getRoutingNodes().unassigned().size());
  logger.info("Add another one node and reroute");
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).put(newNode("node2"))).build();
  routingTable=strategy.reroute(clusterState).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertEquals(1,clusterState.getRoutingNodes().node("node2").numberOfShardsWithState(ShardRoutingState.INITIALIZING));
  assertEquals(byteSize,clusterState.getRoutingNodes().getRoutingTable().shardsWithState(ShardRoutingState.INITIALIZING).get(0).getExpectedShardSize());
}
