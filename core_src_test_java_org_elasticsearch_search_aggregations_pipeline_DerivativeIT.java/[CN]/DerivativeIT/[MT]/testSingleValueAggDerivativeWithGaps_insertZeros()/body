{
  SearchResponse searchResponse=client().prepareSearch("empty_bucket_idx").setQuery(matchAllQuery()).addAggregation(histogram("histo").field(SINGLE_VALUED_FIELD_NAME).interval(1).subAggregation(sum("sum").field(SINGLE_VALUED_FIELD_NAME)).subAggregation(derivative("deriv","sum").gapPolicy(GapPolicy.INSERT_ZEROS))).execute().actionGet();
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(numDocsEmptyIdx));
  InternalHistogram<Bucket> deriv=searchResponse.getAggregations().get("histo");
  assertThat(deriv,Matchers.notNullValue());
  assertThat(deriv.getName(),equalTo("histo"));
  List<Bucket> buckets=deriv.getBuckets();
  assertThat(buckets.size(),equalTo(valueCounts_empty.length));
  double lastSumValue=Double.NaN;
  for (int i=0; i < valueCounts_empty.length; i++) {
    Histogram.Bucket bucket=buckets.get(i);
    checkBucketKeyAndDocCount("InternalBucket " + i,bucket,i,valueCounts_empty[i]);
    Sum sum=bucket.getAggregations().get("sum");
    double thisSumValue=sum.value();
    if (bucket.getDocCount() == 0) {
      thisSumValue=0;
    }
    SimpleValue sumDeriv=bucket.getAggregations().get("deriv");
    if (i == 0) {
      assertThat(sumDeriv,nullValue());
    }
 else {
      double expectedDerivative=thisSumValue - lastSumValue;
      assertThat(sumDeriv.value(),closeTo(expectedDerivative,0.00001));
    }
    lastSumValue=thisSumValue;
  }
}
