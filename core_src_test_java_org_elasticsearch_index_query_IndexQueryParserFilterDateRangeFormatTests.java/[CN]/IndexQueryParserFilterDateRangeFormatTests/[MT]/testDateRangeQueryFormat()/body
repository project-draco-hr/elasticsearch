{
  IndexQueryParserService queryParser=queryParser();
  String query=copyToStringFromClasspath("/org/elasticsearch/index/query/date_range_query_format.json");
  Query parsedQuery;
  try {
    SearchContext.setCurrent(new TestSearchContext());
    parsedQuery=queryParser.parse(query).query().rewrite(null);
  }
  finally {
    SearchContext.removeCurrent();
    ;
  }
  assertThat(parsedQuery,instanceOf(NumericRangeQuery.class));
  DateTime min=DateTime.parse("2012-01-01T00:00:00.000+00");
  assertThat(((NumericRangeQuery)parsedQuery).getMin().longValue(),is(min.getMillis()));
  DateTime max=DateTime.parse("2030-01-01T00:00:00.000+00");
  assertThat(((NumericRangeQuery)parsedQuery).getMax().longValue(),is(max.getMillis()));
  query=copyToStringFromClasspath("/org/elasticsearch/index/query/date_range_query_format_invalid.json");
  try {
    SearchContext.setCurrent(new TestSearchContext());
    queryParser.parse(query).query().rewrite(null);
    fail("A Range Query with a specific format but with an unexpected date should raise a ParsingException");
  }
 catch (  ElasticsearchParseException e) {
  }
 finally {
    SearchContext.removeCurrent();
  }
}
