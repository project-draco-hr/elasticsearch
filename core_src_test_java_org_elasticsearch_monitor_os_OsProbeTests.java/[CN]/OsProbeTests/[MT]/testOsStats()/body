{
  OsStats stats=probe.osStats();
  assertNotNull(stats);
  assertThat(stats.getTimestamp(),greaterThan(0L));
  assertThat(stats.getCpu().getPercent(),anyOf(equalTo((short)-1),is(both(greaterThanOrEqualTo((short)0)).and(lessThanOrEqualTo((short)100)))));
  double[] loadAverage=stats.getCpu().loadAverage;
  if (loadAverage != null) {
    assertThat(loadAverage.length,equalTo(3));
  }
  if (Constants.WINDOWS) {
    assertNull(loadAverage);
  }
 else   if (Constants.LINUX) {
    assertNotNull(loadAverage);
    assertThat(loadAverage[0],greaterThanOrEqualTo((double)0));
    assertThat(loadAverage[1],greaterThanOrEqualTo((double)0));
    assertThat(loadAverage[2],greaterThanOrEqualTo((double)0));
  }
 else   if (Constants.FREE_BSD) {
    assertNotNull(loadAverage);
    assertThat(loadAverage[0],greaterThanOrEqualTo((double)0));
    assertThat(loadAverage[1],anyOf(equalTo((double)-1),greaterThanOrEqualTo((double)0)));
    assertThat(loadAverage[2],anyOf(equalTo((double)-1),greaterThanOrEqualTo((double)0)));
  }
 else   if (Constants.MAC_OS_X) {
    assertNotNull(loadAverage);
    assertThat(loadAverage[0],greaterThanOrEqualTo((double)0));
    assertThat(loadAverage[1],equalTo((double)-1));
    assertThat(loadAverage[2],equalTo((double)-1));
  }
 else {
    if (loadAverage != null) {
      assertThat(loadAverage[0],anyOf(equalTo((double)-1),greaterThanOrEqualTo((double)0)));
      assertThat(loadAverage[1],equalTo((double)-1));
      assertThat(loadAverage[2],equalTo((double)-1));
    }
  }
  assertNotNull(stats.getMem());
  assertThat(stats.getMem().getTotal().bytes(),greaterThan(0L));
  assertThat(stats.getMem().getFree().bytes(),greaterThan(0L));
  assertThat(stats.getMem().getFreePercent(),allOf(greaterThanOrEqualTo((short)0),lessThanOrEqualTo((short)100)));
  assertThat(stats.getMem().getUsed().bytes(),greaterThan(0L));
  assertThat(stats.getMem().getUsedPercent(),allOf(greaterThanOrEqualTo((short)0),lessThanOrEqualTo((short)100)));
  assertNotNull(stats.getSwap());
  assertNotNull(stats.getSwap().getTotal());
  long total=stats.getSwap().getTotal().bytes();
  if (total > 0) {
    assertThat(stats.getSwap().getTotal().bytes(),greaterThan(0L));
    assertThat(stats.getSwap().getFree().bytes(),greaterThan(0L));
    assertThat(stats.getSwap().getUsed().bytes(),greaterThanOrEqualTo(0L));
  }
 else {
    assertThat(stats.getSwap().getTotal().bytes(),equalTo(0L));
    assertThat(stats.getSwap().getFree().bytes(),equalTo(0L));
    assertThat(stats.getSwap().getUsed().bytes(),equalTo(0L));
  }
}
