{
  TemplateService templateService=TestTemplateService.instance();
  Map splitConfig=new HashMap<>();
  splitConfig.put("field","flags");
  splitConfig.put("separator","\\|");
  Processor splitProcessor=(new SplitProcessor.Factory()).create(splitConfig);
  Map appendConfig=new HashMap<>();
  appendConfig.put("field","flags");
  appendConfig.put("value",Collections.singletonList("additional_flag"));
  Processor appendProcessor=(new AppendProcessor.Factory(templateService)).create(appendConfig);
  CompoundProcessor compoundProcessor=new CompoundProcessor(splitProcessor,appendProcessor);
  Map<String,Object> source=new HashMap<>();
  source.put("flags","new|hot|super|fun|interesting");
  IngestDocument ingestDocument=new IngestDocument(source,new HashMap<>());
  compoundProcessor.execute(ingestDocument);
  List<String> expectedFlags=Arrays.asList("new","hot","super","fun","interesting","additional_flag");
  assertThat(ingestDocument.getFieldValue("flags",List.class),CoreMatchers.equalTo(expectedFlags));
}
