{
  TestNodesRequest request=new TestNodesRequest();
  List<TestNodeResponse> expectedNodeResponses=mockList(TestNodeResponse.class,randomIntBetween(0,2));
  expectedNodeResponses.add(new TestNodeResponse());
  List<BaseNodeResponse> nodeResponses=new ArrayList<>(expectedNodeResponses);
  nodeResponses.add(new OtherNodeResponse());
  List<FailedNodeException> failures=mockList(FailedNodeException.class,randomIntBetween(0,2));
  List<Object> allResponses=new ArrayList<>(expectedNodeResponses);
  allResponses.addAll(failures);
  Collections.shuffle(allResponses,random());
  AtomicReferenceArray<?> atomicArray=new AtomicReferenceArray<>(allResponses.toArray());
  TestNodesResponse response=action.newResponse(request,atomicArray);
  assertSame(request,response.request);
  assertTrue(expectedNodeResponses.containsAll(response.getNodes()));
  assertTrue(failures.containsAll(response.failures()));
}
