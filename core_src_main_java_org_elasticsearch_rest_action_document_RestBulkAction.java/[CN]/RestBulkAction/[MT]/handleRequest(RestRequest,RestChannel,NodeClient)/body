{
  BulkRequest bulkRequest=Requests.bulkRequest();
  String defaultIndex=request.param("index");
  String defaultType=request.param("type");
  String defaultRouting=request.param("routing");
  FetchSourceContext defaultFetchSourceContext=FetchSourceContext.parseFromRestRequest(request);
  String fieldsParam=request.param("fields");
  if (fieldsParam != null) {
    DEPRECATION_LOGGER.deprecated("Deprecated field [fields] used, expected [_source] instead");
  }
  String[] defaultFields=fieldsParam != null ? Strings.commaDelimitedListToStringArray(fieldsParam) : null;
  String defaultPipeline=request.param("pipeline");
  String waitForActiveShards=request.param("wait_for_active_shards");
  if (waitForActiveShards != null) {
    bulkRequest.waitForActiveShards(ActiveShardCount.parseString(waitForActiveShards));
  }
  bulkRequest.timeout(request.paramAsTime("timeout",BulkShardRequest.DEFAULT_TIMEOUT));
  bulkRequest.setRefreshPolicy(request.param("refresh"));
  bulkRequest.add(request.content(),defaultIndex,defaultType,defaultRouting,defaultFields,defaultFetchSourceContext,defaultPipeline,null,allowExplicitIndex);
  client.bulk(bulkRequest,new RestBuilderListener<BulkResponse>(channel){
    @Override public RestResponse buildResponse(    BulkResponse response,    XContentBuilder builder) throws Exception {
      builder.startObject();
      builder.field(Fields.TOOK,response.getTookInMillis());
      if (response.getIngestTookInMillis() != BulkResponse.NO_INGEST_TOOK) {
        builder.field(Fields.INGEST_TOOK,response.getIngestTookInMillis());
      }
      builder.field(Fields.ERRORS,response.hasFailures());
      builder.startArray(Fields.ITEMS);
      for (      BulkItemResponse itemResponse : response) {
        builder.startObject();
        itemResponse.toXContent(builder,request);
        builder.endObject();
      }
      builder.endArray();
      builder.endObject();
      return new BytesRestResponse(OK,builder);
    }
  }
);
}
