{
  createIndex("test1");
  createIndex("test2");
  ensureGreen();
  client().prepareIndex("test1","type1",Integer.toString(1)).setSource("field","value").execute().actionGet();
  client().prepareIndex("test1","type2",Integer.toString(1)).setSource("field","value").execute().actionGet();
  client().prepareIndex("test2","type",Integer.toString(1)).setSource("field","value").execute().actionGet();
  client().admin().indices().prepareRefresh().execute().actionGet();
  IndicesStatsRequestBuilder builder=client().admin().indices().prepareStats();
  Flag[] values=CommonStatsFlags.Flag.values();
  for (  Flag flag : values) {
    set(flag,builder,false);
  }
  IndicesStatsResponse stats=builder.execute().actionGet();
  for (  Flag flag : values) {
    assertThat(isSet(flag,stats.getPrimaries()),equalTo(false));
    assertThat(isSet(flag,stats.getTotal()),equalTo(false));
  }
  for (  Flag flag : values) {
    set(flag,builder,true);
  }
  stats=builder.execute().actionGet();
  for (  Flag flag : values) {
    assertThat(isSet(flag,stats.getPrimaries()),equalTo(true));
    assertThat(isSet(flag,stats.getTotal()),equalTo(true));
  }
  Random random=getRandom();
  EnumSet<Flag> flags=EnumSet.noneOf(Flag.class);
  for (  Flag flag : values) {
    if (random.nextBoolean()) {
      flags.add(flag);
    }
  }
  for (  Flag flag : values) {
    set(flag,builder,false);
  }
  for (  Flag flag : flags) {
    set(flag,builder,true);
  }
  stats=builder.execute().actionGet();
  for (  Flag flag : flags) {
    assertThat(isSet(flag,stats.getPrimaries()),equalTo(true));
    assertThat(isSet(flag,stats.getTotal()),equalTo(true));
  }
  for (  Flag flag : EnumSet.complementOf(flags)) {
    assertThat(isSet(flag,stats.getPrimaries()),equalTo(false));
    assertThat(isSet(flag,stats.getTotal()),equalTo(false));
  }
}
