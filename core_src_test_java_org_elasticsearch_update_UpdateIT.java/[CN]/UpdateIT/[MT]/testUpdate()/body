{
  createTestIndex();
  ensureGreen();
  try {
    client().prepareUpdate(indexOrAlias(),"type1","1").setScript(new Script("ctx._source.field++",ScriptService.ScriptType.INLINE,null,null)).execute().actionGet();
    fail();
  }
 catch (  DocumentMissingException e) {
  }
  client().prepareIndex("test","type1","1").setSource("field",1).execute().actionGet();
  UpdateResponse updateResponse=client().prepareUpdate(indexOrAlias(),"type1","1").setScript(new Script("ctx._source.field += 1",ScriptService.ScriptType.INLINE,null,null)).execute().actionGet();
  assertThat(updateResponse.getVersion(),equalTo(2L));
  assertFalse(updateResponse.isCreated());
  assertThat(updateResponse.getIndex(),equalTo("test"));
  for (int i=0; i < 5; i++) {
    GetResponse getResponse=client().prepareGet("test","type1","1").execute().actionGet();
    assertThat(getResponse.getSourceAsMap().get("field").toString(),equalTo("2"));
  }
  Map<String,Object> params=new HashMap<>();
  params.put("count",3);
  updateResponse=client().prepareUpdate(indexOrAlias(),"type1","1").setScript(new Script("ctx._source.field += count",ScriptService.ScriptType.INLINE,null,params)).execute().actionGet();
  assertThat(updateResponse.getVersion(),equalTo(3L));
  assertFalse(updateResponse.isCreated());
  assertThat(updateResponse.getIndex(),equalTo("test"));
  for (int i=0; i < 5; i++) {
    GetResponse getResponse=client().prepareGet("test","type1","1").execute().actionGet();
    assertThat(getResponse.getSourceAsMap().get("field").toString(),equalTo("5"));
  }
  updateResponse=client().prepareUpdate(indexOrAlias(),"type1","1").setScript(new Script("ctx.op = 'none'",ScriptService.ScriptType.INLINE,null,null)).execute().actionGet();
  assertThat(updateResponse.getVersion(),equalTo(3L));
  assertFalse(updateResponse.isCreated());
  assertThat(updateResponse.getIndex(),equalTo("test"));
  for (int i=0; i < 5; i++) {
    GetResponse getResponse=client().prepareGet("test","type1","1").execute().actionGet();
    assertThat(getResponse.getSourceAsMap().get("field").toString(),equalTo("5"));
  }
  updateResponse=client().prepareUpdate(indexOrAlias(),"type1","1").setScript(new Script("ctx.op = 'delete'",ScriptService.ScriptType.INLINE,null,null)).execute().actionGet();
  assertThat(updateResponse.getVersion(),equalTo(4L));
  assertFalse(updateResponse.isCreated());
  assertThat(updateResponse.getIndex(),equalTo("test"));
  for (int i=0; i < 5; i++) {
    GetResponse getResponse=client().prepareGet("test","type1","1").execute().actionGet();
    assertThat(getResponse.isExists(),equalTo(false));
  }
  client().prepareIndex("test","type1","2").setSource("field",1).setTTL(86400000L).setRefresh(true).execute().actionGet();
  GetResponse getResponse=client().prepareGet("test","type1","2").setFields("_ttl").execute().actionGet();
  long ttl=((Number)getResponse.getField("_ttl").getValue()).longValue();
  assertThat(ttl,greaterThan(0L));
  client().prepareUpdate(indexOrAlias(),"type1","2").setScript(new Script("ctx._source.field += 1",ScriptService.ScriptType.INLINE,null,null)).execute().actionGet();
  getResponse=client().prepareGet("test","type1","2").setFields("_ttl").execute().actionGet();
  ttl=((Number)getResponse.getField("_ttl").getValue()).longValue();
  assertThat(ttl,greaterThan(0L));
  client().prepareUpdate(indexOrAlias(),"type1","2").setScript(new Script("ctx._ttl = 3600000",ScriptService.ScriptType.INLINE,null,null)).execute().actionGet();
  getResponse=client().prepareGet("test","type1","2").setFields("_ttl").execute().actionGet();
  ttl=((Number)getResponse.getField("_ttl").getValue()).longValue();
  assertThat(ttl,greaterThan(0L));
  assertThat(ttl,lessThanOrEqualTo(3600000L));
  client().prepareIndex("test","type1","3").setSource("field",1).setRefresh(true).execute().actionGet();
  client().prepareUpdate(indexOrAlias(),"type1","3").setScript(new Script("ctx._timestamp = \"2009-11-15T14:12:12\"",ScriptService.ScriptType.INLINE,null,null)).execute().actionGet();
  getResponse=client().prepareGet("test","type1","3").setFields("_timestamp").execute().actionGet();
  long timestamp=((Number)getResponse.getField("_timestamp").getValue()).longValue();
  assertThat(timestamp,equalTo(1258294332000L));
  client().prepareIndex("test","type1","1").setSource("field",1).execute().actionGet();
  updateResponse=client().prepareUpdate(indexOrAlias(),"type1","1").setScript(new Script("ctx._source.field += 1",ScriptService.ScriptType.INLINE,null,null)).setFields("_source","field").execute().actionGet();
  assertThat(updateResponse.getIndex(),equalTo("test"));
  assertThat(updateResponse.getGetResult(),notNullValue());
  assertThat(updateResponse.getGetResult().getIndex(),equalTo("test"));
  assertThat(updateResponse.getGetResult().sourceRef(),notNullValue());
  assertThat(updateResponse.getGetResult().field("field").getValue(),notNullValue());
  client().prepareIndex("test","type1","1").setSource("field",1).execute().actionGet();
  updateResponse=client().prepareUpdate(indexOrAlias(),"type1","1").setDoc(XContentFactory.jsonBuilder().startObject().field("field2",2).endObject()).execute().actionGet();
  for (int i=0; i < 5; i++) {
    getResponse=client().prepareGet("test","type1","1").execute().actionGet();
    assertThat(getResponse.getSourceAsMap().get("field").toString(),equalTo("1"));
    assertThat(getResponse.getSourceAsMap().get("field2").toString(),equalTo("2"));
  }
  updateResponse=client().prepareUpdate(indexOrAlias(),"type1","1").setDoc(XContentFactory.jsonBuilder().startObject().field("field",3).endObject()).execute().actionGet();
  for (int i=0; i < 5; i++) {
    getResponse=client().prepareGet("test","type1","1").execute().actionGet();
    assertThat(getResponse.getSourceAsMap().get("field").toString(),equalTo("3"));
    assertThat(getResponse.getSourceAsMap().get("field2").toString(),equalTo("2"));
  }
  Map<String,Object> testMap=new HashMap<>();
  Map<String,Object> testMap2=new HashMap<>();
  Map<String,Object> testMap3=new HashMap<>();
  testMap3.put("commonkey",testMap);
  testMap3.put("map3",5);
  testMap2.put("map2",6);
  testMap.put("commonkey",testMap2);
  testMap.put("map1",8);
  client().prepareIndex("test","type1","1").setSource("map",testMap).execute().actionGet();
  updateResponse=client().prepareUpdate(indexOrAlias(),"type1","1").setDoc(XContentFactory.jsonBuilder().startObject().field("map",testMap3).endObject()).execute().actionGet();
  for (int i=0; i < 5; i++) {
    getResponse=client().prepareGet("test","type1","1").execute().actionGet();
    Map map1=(Map)getResponse.getSourceAsMap().get("map");
    assertThat(map1.size(),equalTo(3));
    assertThat(map1.containsKey("map1"),equalTo(true));
    assertThat(map1.containsKey("map3"),equalTo(true));
    assertThat(map1.containsKey("commonkey"),equalTo(true));
    Map map2=(Map)map1.get("commonkey");
    assertThat(map2.size(),equalTo(3));
    assertThat(map2.containsKey("map1"),equalTo(true));
    assertThat(map2.containsKey("map2"),equalTo(true));
    assertThat(map2.containsKey("commonkey"),equalTo(true));
  }
}
