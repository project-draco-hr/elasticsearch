{
  XContentParser parser=parseContext.parser();
  boolean disableCoord=BoolQueryBuilder.DISABLE_COORD_DEFAULT;
  boolean adjustPureNegative=BoolQueryBuilder.ADJUST_PURE_NEGATIVE_DEFAULT;
  float boost=AbstractQueryBuilder.DEFAULT_BOOST;
  String minimumShouldMatch=null;
  final List<QueryBuilder<?>> mustClauses=new ArrayList<>();
  final List<QueryBuilder<?>> mustNotClauses=new ArrayList<>();
  final List<QueryBuilder<?>> shouldClauses=new ArrayList<>();
  final List<QueryBuilder<?>> filterClauses=new ArrayList<>();
  String queryName=null;
  String currentFieldName=null;
  XContentParser.Token token;
  QueryBuilder<?> query;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (parseContext.isDeprecatedSetting(currentFieldName)) {
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
switch (currentFieldName) {
case MUST:
        query=parseContext.parseInnerQueryBuilder();
      mustClauses.add(query);
    break;
case SHOULD:
  query=parseContext.parseInnerQueryBuilder();
shouldClauses.add(query);
break;
case FILTER:
query=parseContext.parseInnerQueryBuilder();
filterClauses.add(query);
break;
case MUST_NOT:
case MUSTNOT:
query=parseContext.parseInnerQueryBuilder();
mustNotClauses.add(query);
break;
default :
throw new ParsingException(parser.getTokenLocation(),"[bool] query does not support [" + currentFieldName + "]");
}
}
 else if (token == XContentParser.Token.START_ARRAY) {
while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
switch (currentFieldName) {
case MUST:
query=parseContext.parseInnerQueryBuilder();
mustClauses.add(query);
break;
case SHOULD:
query=parseContext.parseInnerQueryBuilder();
shouldClauses.add(query);
break;
case FILTER:
query=parseContext.parseInnerQueryBuilder();
filterClauses.add(query);
break;
case MUST_NOT:
case MUSTNOT:
query=parseContext.parseInnerQueryBuilder();
mustNotClauses.add(query);
break;
default :
throw new ParsingException(parser.getTokenLocation(),"bool query does not support [" + currentFieldName + "]");
}
}
}
 else if (token.isValue()) {
if (parseContext.getParseFieldMatcher().match(currentFieldName,DISABLE_COORD_FIELD)) {
disableCoord=parser.booleanValue();
}
 else if (parseContext.getParseFieldMatcher().match(currentFieldName,MINIMUM_SHOULD_MATCH)) {
minimumShouldMatch=parser.textOrNull();
}
 else if (parseContext.getParseFieldMatcher().match(currentFieldName,AbstractQueryBuilder.BOOST_FIELD)) {
boost=parser.floatValue();
}
 else if (parseContext.getParseFieldMatcher().match(currentFieldName,MINIMUM_NUMBER_SHOULD_MATCH)) {
minimumShouldMatch=parser.textOrNull();
}
 else if (parseContext.getParseFieldMatcher().match(currentFieldName,ADJUST_PURE_NEGATIVE)) {
adjustPureNegative=parser.booleanValue();
}
 else if (parseContext.getParseFieldMatcher().match(currentFieldName,AbstractQueryBuilder.NAME_FIELD)) {
queryName=parser.text();
}
 else {
throw new ParsingException(parser.getTokenLocation(),"[bool] query does not support [" + currentFieldName + "]");
}
}
}
BoolQueryBuilder boolQuery=new BoolQueryBuilder();
for (QueryBuilder<?> queryBuilder : mustClauses) {
boolQuery.must(queryBuilder);
}
for (QueryBuilder<?> queryBuilder : mustNotClauses) {
boolQuery.mustNot(queryBuilder);
}
for (QueryBuilder<?> queryBuilder : shouldClauses) {
boolQuery.should(queryBuilder);
}
for (QueryBuilder<?> queryBuilder : filterClauses) {
boolQuery.filter(queryBuilder);
}
boolQuery.boost(boost);
boolQuery.disableCoord(disableCoord);
boolQuery.adjustPureNegative(adjustPureNegative);
boolQuery.minimumNumberShouldMatch(minimumShouldMatch);
boolQuery.queryName(queryName);
return boolQuery;
}
