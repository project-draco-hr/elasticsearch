{
  Query query=null;
  MappedFieldType mapper=parseContext.fieldMapper(this.fieldName);
  if (mapper != null) {
    if (mapper instanceof DateFieldMapper.DateFieldType) {
      DateMathParser forcedDateParser=null;
      if (this.format != null) {
        forcedDateParser=new DateMathParser(Joda.forPattern(this.format));
      }
      DateTimeZone dateTimeZone=null;
      if (this.timeZone != null) {
        dateTimeZone=DateTimeZone.forID(this.timeZone);
      }
      query=((DateFieldMapper.DateFieldType)mapper).rangeQuery(from,to,includeLower,includeUpper,dateTimeZone,forcedDateParser,parseContext);
    }
 else {
      if (timeZone != null) {
        throw new QueryParsingException(parseContext,"[range] time_zone can not be applied to non date field [" + fieldName + "]");
      }
      query=mapper.rangeQuery(from,to,includeLower,includeUpper,parseContext);
    }
  }
 else {
    if (timeZone != null) {
      throw new QueryParsingException(parseContext,"[range] time_zone can not be applied to non unmapped field [" + fieldName + "]");
    }
  }
  if (query == null) {
    query=new TermRangeQuery(this.fieldName,BytesRefs.toBytesRef(from),BytesRefs.toBytesRef(to),includeLower,includeUpper);
  }
  return query;
}
