{
  ArgumentsContext _localctx=new ArgumentsContext(_ctx,getState());
  enterRule(_localctx,48,RULE_arguments);
  int _la;
  try {
    enterOuterAlt(_localctx,1);
{
{
        setState(361);
        match(LP);
        setState(370);
        _la=_input.LA(1);
        if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << LP) | (1L << NEW) | (1L << BOOLNOT)| (1L << BWNOT)| (1L << ADD)| (1L << SUB)| (1L << INCR)| (1L << DECR)| (1L << OCTAL))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (HEX - 64)) | (1L << (INTEGER - 64)) | (1L << (DECIMAL - 64))| (1L << (STRING - 64))| (1L << (TRUE - 64))| (1L << (FALSE - 64))| (1L << (NULL - 64))| (1L << (ID - 64)))) != 0)) {
{
            setState(362);
            expression(0);
            setState(367);
            _errHandler.sync(this);
            _la=_input.LA(1);
            while (_la == COMMA) {
{
{
                  setState(363);
                  match(COMMA);
                  setState(364);
                  expression(0);
                }
              }
              setState(369);
              _errHandler.sync(this);
              _la=_input.LA(1);
            }
          }
        }
        setState(372);
        match(RP);
      }
    }
  }
 catch (  RecognitionException re) {
    _localctx.exception=re;
    _errHandler.reportError(this,re);
    _errHandler.recover(this,re);
  }
 finally {
    exitRule();
  }
  return _localctx;
}
