{
  DocumentMapperParser mapperParser=MapperTestUtils.newParser();
  DocumentMapper builderDocMapper=doc("test",rootObject("person").add(multiField("name").add(stringField("name").store(true)).add(stringField("indexed").index(true).tokenized(true)).add(stringField("not_indexed").index(false).store(true)))).build(mapperParser);
  builderDocMapper.refreshSource();
  String builtMapping=builderDocMapper.mappingSource().string();
  DocumentMapper docMapper=mapperParser.parse(builtMapping);
  BytesReference json=new BytesArray(copyToBytesFromClasspath("/org/elasticsearch/index/mapper/multifield/test-data.json"));
  Document doc=docMapper.parse(json).rootDoc();
  IndexableField f=doc.getField("name");
  assertThat(f.name(),equalTo("name"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(true));
  assertThat(f.fieldType().indexed(),equalTo(true));
  f=doc.getField("name.indexed");
  assertThat(f.name(),equalTo("name.indexed"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(false));
  assertThat(f.fieldType().indexed(),equalTo(true));
  f=doc.getField("name.not_indexed");
  assertThat(f.name(),equalTo("name.not_indexed"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(true));
  assertThat(f.fieldType().indexed(),equalTo(false));
}
