{
  DocumentMapper docMapper=createIndex("test").mapperService().documentMapperParser().parse(mapping);
  BytesReference json=new BytesArray(copyToBytesFromClasspath("/org/elasticsearch/index/mapper/multifield/test-data.json"));
  Document doc=docMapper.parse(json).rootDoc();
  IndexableField f=doc.getField("name");
  assertThat(f.name(),equalTo("name"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(true));
  assertNotSame(IndexOptions.NONE,f.fieldType().indexOptions());
  f=doc.getField("name.indexed");
  assertThat(f.name(),equalTo("name.indexed"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(false));
  assertNotSame(IndexOptions.NONE,f.fieldType().indexOptions());
  f=doc.getField("name.not_indexed");
  assertThat(f.name(),equalTo("name.not_indexed"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(true));
  assertEquals(IndexOptions.NONE,f.fieldType().indexOptions());
  f=doc.getField("object1.multi1");
  assertThat(f.name(),equalTo("object1.multi1"));
  f=doc.getField("object1.multi1.string");
  assertThat(f.name(),equalTo("object1.multi1.string"));
  assertThat(f.stringValue(),equalTo("2010-01-01"));
  assertThat(docMapper.mappers().fullName("name").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("name").mapper(),instanceOf(StringFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().fullName("name").mapper().fieldType().indexOptions());
  assertThat(docMapper.mappers().fullName("name").mapper().fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name").mapper().fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.indexed").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("name.indexed").mapper(),instanceOf(StringFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().fullName("name.indexed").mapper().fieldType().indexOptions());
  assertThat(docMapper.mappers().fullName("name.indexed").mapper().fieldType().stored(),equalTo(false));
  assertThat(docMapper.mappers().fullName("name.indexed").mapper().fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.not_indexed").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("name.not_indexed").mapper(),instanceOf(StringFieldMapper.class));
  assertEquals(IndexOptions.NONE,docMapper.mappers().fullName("name.not_indexed").mapper().fieldType().indexOptions());
  assertThat(docMapper.mappers().fullName("name.not_indexed").mapper().fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.not_indexed").mapper().fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.test1").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("name.test1").mapper(),instanceOf(StringFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().fullName("name.test1").mapper().fieldType().indexOptions());
  assertThat(docMapper.mappers().fullName("name.test1").mapper().fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.test1").mapper().fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.test1").mapper().fieldDataType().getLoading(),equalTo(FieldMapper.Loading.EAGER));
  assertThat(docMapper.mappers().fullName("name.test2").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("name.test2").mapper(),instanceOf(TokenCountFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().fullName("name.test2").mapper().fieldType().indexOptions());
  assertThat(docMapper.mappers().fullName("name.test2").mapper().fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.test2").mapper().fieldType().tokenized(),equalTo(false));
  assertThat(((TokenCountFieldMapper)docMapper.mappers().fullName("name.test2").mapper()).analyzer(),equalTo("simple"));
  assertThat(((TokenCountFieldMapper)docMapper.mappers().fullName("name.test2").mapper()).analyzer(),equalTo("simple"));
  assertThat(docMapper.mappers().fullName("object1.multi1").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("object1.multi1").mapper(),instanceOf(DateFieldMapper.class));
  assertThat(docMapper.mappers().fullName("object1.multi1.string").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("object1.multi1.string").mapper(),instanceOf(StringFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().fullName("object1.multi1.string").mapper().fieldType().indexOptions());
  assertThat(docMapper.mappers().fullName("object1.multi1.string").mapper().fieldType().tokenized(),equalTo(false));
}
