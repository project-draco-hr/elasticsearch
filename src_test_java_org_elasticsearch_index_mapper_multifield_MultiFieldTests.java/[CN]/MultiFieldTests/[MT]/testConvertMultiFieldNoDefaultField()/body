{
  String mapping=copyToStringFromClasspath("/org/elasticsearch/index/mapper/multifield/test-multi-field-type-no-default-field.json");
  DocumentMapper docMapper=MapperTestUtils.newParser().parse(mapping);
  BytesReference json=new BytesArray(copyToBytesFromClasspath("/org/elasticsearch/index/mapper/multifield/test-data.json"));
  Document doc=docMapper.parse(json).rootDoc();
  assertNull(doc.getField("name"));
  IndexableField f=doc.getField("name.indexed");
  assertThat(f.name(),equalTo("name.indexed"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(false));
  assertThat(f.fieldType().indexed(),equalTo(true));
  f=doc.getField("name.not_indexed");
  assertThat(f.name(),equalTo("name.not_indexed"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(true));
  assertThat(f.fieldType().indexed(),equalTo(false));
  assertThat(docMapper.mappers().fullName("name").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("name").mapper(),instanceOf(StringFieldMapper.class));
  assertThat(docMapper.mappers().fullName("name").mapper().fieldType().indexed(),equalTo(false));
  assertThat(docMapper.mappers().fullName("name").mapper().fieldType().stored(),equalTo(false));
  assertThat(docMapper.mappers().fullName("name").mapper().fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.indexed").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("name.indexed").mapper(),instanceOf(StringFieldMapper.class));
  assertThat(docMapper.mappers().fullName("name.indexed").mapper().fieldType().indexed(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.indexed").mapper().fieldType().stored(),equalTo(false));
  assertThat(docMapper.mappers().fullName("name.indexed").mapper().fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.not_indexed").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("name.not_indexed").mapper(),instanceOf(StringFieldMapper.class));
  assertThat(docMapper.mappers().fullName("name.not_indexed").mapper().fieldType().indexed(),equalTo(false));
  assertThat(docMapper.mappers().fullName("name.not_indexed").mapper().fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.not_indexed").mapper().fieldType().tokenized(),equalTo(true));
  assertNull(doc.getField("age"));
  f=doc.getField("age.not_stored");
  assertThat(f.name(),equalTo("age.not_stored"));
  assertThat(f.numericValue(),equalTo((Number)28L));
  assertThat(f.fieldType().stored(),equalTo(false));
  assertThat(f.fieldType().indexed(),equalTo(true));
  f=doc.getField("age.stored");
  assertThat(f.name(),equalTo("age.stored"));
  assertThat(f.numericValue(),equalTo((Number)28L));
  assertThat(f.fieldType().stored(),equalTo(true));
  assertThat(f.fieldType().indexed(),equalTo(true));
  assertThat(docMapper.mappers().fullName("age").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("age").mapper(),instanceOf(LongFieldMapper.class));
  assertThat(docMapper.mappers().fullName("age").mapper().fieldType().indexed(),equalTo(false));
  assertThat(docMapper.mappers().fullName("age").mapper().fieldType().stored(),equalTo(false));
  assertThat(docMapper.mappers().fullName("age").mapper().fieldType().tokenized(),equalTo(false));
  assertThat(docMapper.mappers().fullName("age.not_stored").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("age.not_stored").mapper(),instanceOf(LongFieldMapper.class));
  assertThat(docMapper.mappers().fullName("age.not_stored").mapper().fieldType().indexed(),equalTo(true));
  assertThat(docMapper.mappers().fullName("age.not_stored").mapper().fieldType().stored(),equalTo(false));
  assertThat(docMapper.mappers().fullName("age.not_stored").mapper().fieldType().tokenized(),equalTo(false));
  assertThat(docMapper.mappers().fullName("age.stored").mapper(),notNullValue());
  assertThat(docMapper.mappers().fullName("age.stored").mapper(),instanceOf(LongFieldMapper.class));
  assertThat(docMapper.mappers().fullName("age.stored").mapper().fieldType().indexed(),equalTo(true));
  assertThat(docMapper.mappers().fullName("age.stored").mapper().fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().fullName("age.stored").mapper().fieldType().tokenized(),equalTo(false));
}
