{
  String mapping=copyToStringFromClasspath("/org/elasticsearch/index/mapper/multifield/test-multi-field-type-no-default-field.json");
  DocumentMapper docMapper=createIndex("test").mapperService().documentMapperParser().parse(mapping);
  BytesReference json=new BytesArray(copyToBytesFromClasspath("/org/elasticsearch/index/mapper/multifield/test-data.json"));
  Document doc=docMapper.parse(json).rootDoc();
  assertNull(doc.getField("name"));
  IndexableField f=doc.getField("name.indexed");
  assertThat(f.name(),equalTo("name.indexed"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(false));
  assertNotSame(IndexOptions.NONE,f.fieldType().indexOptions());
  f=doc.getField("name.not_indexed");
  assertThat(f.name(),equalTo("name.not_indexed"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(true));
  assertEquals(IndexOptions.NONE,f.fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("name"),notNullValue());
  assertThat(docMapper.mappers().getMapper("name"),instanceOf(StringFieldMapper.class));
  assertEquals(IndexOptions.NONE,docMapper.mappers().getMapper("name").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("name").fieldType().stored(),equalTo(false));
  assertThat(docMapper.mappers().getMapper("name").fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("name.indexed"),notNullValue());
  assertThat(docMapper.mappers().getMapper("name.indexed"),instanceOf(StringFieldMapper.class));
  assertNotNull(docMapper.mappers().getMapper("name.indexed").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("name.indexed").fieldType().stored(),equalTo(false));
  assertThat(docMapper.mappers().getMapper("name.indexed").fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("name.not_indexed"),notNullValue());
  assertThat(docMapper.mappers().getMapper("name.not_indexed"),instanceOf(StringFieldMapper.class));
  assertEquals(IndexOptions.NONE,docMapper.mappers().getMapper("name.not_indexed").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("name.not_indexed").fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("name.not_indexed").fieldType().tokenized(),equalTo(true));
  assertNull(doc.getField("age"));
  f=doc.getField("age.not_stored");
  assertThat(f.name(),equalTo("age.not_stored"));
  assertThat(f.numericValue(),equalTo((Number)28L));
  assertThat(f.fieldType().stored(),equalTo(false));
  assertNotSame(IndexOptions.NONE,f.fieldType().indexOptions());
  f=doc.getField("age.stored");
  assertThat(f.name(),equalTo("age.stored"));
  assertThat(f.numericValue(),equalTo((Number)28L));
  assertThat(f.fieldType().stored(),equalTo(true));
  assertNotSame(IndexOptions.NONE,f.fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("age"),notNullValue());
  assertThat(docMapper.mappers().getMapper("age"),instanceOf(LongFieldMapper.class));
  assertEquals(IndexOptions.NONE,docMapper.mappers().getMapper("age").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("age").fieldType().stored(),equalTo(false));
  assertThat(docMapper.mappers().getMapper("age").fieldType().tokenized(),equalTo(false));
  assertThat(docMapper.mappers().getMapper("age.not_stored"),notNullValue());
  assertThat(docMapper.mappers().getMapper("age.not_stored"),instanceOf(LongFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().getMapper("age.not_stored").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("age.not_stored").fieldType().stored(),equalTo(false));
  assertThat(docMapper.mappers().getMapper("age.not_stored").fieldType().tokenized(),equalTo(false));
  assertThat(docMapper.mappers().getMapper("age.stored"),notNullValue());
  assertThat(docMapper.mappers().getMapper("age.stored"),instanceOf(LongFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().getMapper("age.stored").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("age.stored").fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("age.stored").fieldType().tokenized(),equalTo(false));
}
