{
  int successfulShards=0;
  int failedShards=0;
  boolean valid=true;
  List<ShardOperationFailedException> shardFailures=null;
  List<QueryExplanation> queryExplanations=null;
  for (int i=0; i < shardsResponses.length(); i++) {
    Object shardResponse=shardsResponses.get(i);
    if (shardResponse == null) {
      failedShards++;
    }
 else     if (shardResponse instanceof BroadcastShardOperationFailedException) {
      failedShards++;
      if (shardFailures == null) {
        shardFailures=newArrayList();
      }
      shardFailures.add(new DefaultShardOperationFailedException((BroadcastShardOperationFailedException)shardResponse));
    }
 else {
      ShardValidateQueryResponse validateQueryResponse=(ShardValidateQueryResponse)shardResponse;
      valid=valid && validateQueryResponse.isValid();
      if (request.isExplain()) {
        if (queryExplanations == null) {
          queryExplanations=newArrayList();
        }
        queryExplanations.add(new QueryExplanation(validateQueryResponse.getIndex(),validateQueryResponse.isValid(),validateQueryResponse.getExplanation(),validateQueryResponse.getError()));
      }
      successfulShards++;
    }
  }
  return new ValidateQueryResponse(valid,queryExplanations,shardsResponses.length(),successfulShards,failedShards,shardFailures);
}
