{
  int numFields=randomInt(20) + 1;
  int[] types=new int[numFields - 1];
  for (int i=0; i < numFields - 1; i++) {
    types[i]=randomInt(6);
  }
  List<List> documents=new ArrayList<>();
  for (int i=0; i < NUM_DOCS; i++) {
    List values=new ArrayList<>();
    for (    int type : types) {
switch (type) {
case 0:
        values.add(randomBoolean());
      break;
case 1:
    values.add(randomByte());
  break;
case 2:
values.add(randomShort());
break;
case 3:
values.add(randomInt());
break;
case 4:
values.add(randomFloat());
break;
case 5:
values.add(randomDouble());
break;
case 6:
values.add(new Text(randomAsciiOfLengthBetween(5,20)));
break;
}
}
values.add(new Text(Strings.randomBase64UUID()));
documents.add(values);
}
int reqSize=randomInt(NUM_DOCS - 1);
if (reqSize == 0) {
reqSize=1;
}
assertSearchFromWithSortValues(INDEX_NAME,TYPE_NAME,documents,reqSize);
}
