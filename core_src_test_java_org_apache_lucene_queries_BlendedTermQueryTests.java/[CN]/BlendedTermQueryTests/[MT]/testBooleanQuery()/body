{
  Directory dir=newDirectory();
  IndexWriter w=new IndexWriter(dir,newIndexWriterConfig(new MockAnalyzer(random())));
  String[] firstNames=new String[]{"simon","paul"};
  String[] surNames=new String[]{"willnauer","simon"};
  for (int i=0; i < surNames.length; i++) {
    Document d=new Document();
    d.add(new TextField("id",Integer.toString(i),Field.Store.YES));
    d.add(new TextField("firstname",firstNames[i],Field.Store.NO));
    d.add(new TextField("surname",surNames[i],Field.Store.NO));
    w.addDocument(d);
  }
  int iters=scaledRandomIntBetween(25,100);
  for (int j=0; j < iters; j++) {
    Document d=new Document();
    d.add(new TextField("id",Integer.toString(firstNames.length + j),Field.Store.YES));
    d.add(new TextField("firstname",rarely() ? "some_other_name" : "simon the sorcerer",Field.Store.NO));
    d.add(new TextField("surname","bogus",Field.Store.NO));
    w.addDocument(d);
  }
  w.commit();
  DirectoryReader reader=DirectoryReader.open(w,true);
  IndexSearcher searcher=setSimilarity(newSearcher(reader));
{
    Term[] terms=new Term[]{new Term("firstname","simon"),new Term("surname","simon")};
    BlendedTermQuery query=BlendedTermQuery.booleanBlendedQuery(terms,true);
    TopDocs search=searcher.search(query,3);
    ScoreDoc[] scoreDocs=search.scoreDocs;
    assertEquals(3,scoreDocs.length);
    assertEquals(Integer.toString(0),reader.document(scoreDocs[0].doc).getField("id").stringValue());
  }
{
    BooleanQuery.Builder query=new BooleanQuery.Builder();
    query.setDisableCoord(true);
    query.add(new TermQuery(new Term("firstname","simon")),BooleanClause.Occur.SHOULD);
    query.add(new TermQuery(new Term("surname","simon")),BooleanClause.Occur.SHOULD);
    TopDocs search=searcher.search(query.build(),1);
    ScoreDoc[] scoreDocs=search.scoreDocs;
    assertEquals(Integer.toString(1),reader.document(scoreDocs[0].doc).getField("id").stringValue());
  }
  reader.close();
  w.close();
  dir.close();
}
