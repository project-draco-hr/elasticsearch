{
  JsonToken token;
  SearchContextFacets.QueryExecutionType queryExecutionType=SearchContextFacets.QueryExecutionType.COLLECT;
  List<SearchContextFacets.QueryFacet> queryFacets=null;
  while ((token=jp.nextToken()) != JsonToken.END_OBJECT) {
    if (token == JsonToken.FIELD_NAME) {
      String topLevelFieldName=jp.getCurrentName();
      if ("queryExecution".equals(topLevelFieldName)) {
        jp.nextToken();
        String text=jp.getText();
        if ("collect".equals(text)) {
          queryExecutionType=SearchContextFacets.QueryExecutionType.COLLECT;
        }
 else         if ("idset".equals(text)) {
          queryExecutionType=SearchContextFacets.QueryExecutionType.IDSET;
        }
 else {
          throw new SearchParseException(context,"Unsupported query type [" + text + "]");
        }
      }
 else {
        jp.nextToken();
        jp.nextToken();
        String facetType=jp.getCurrentName();
        if ("query".equals(facetType)) {
          JsonIndexQueryParser indexQueryParser=(JsonIndexQueryParser)context.queryParser();
          Query facetQuery=indexQueryParser.parse(jp);
          if (queryFacets == null) {
            queryFacets=Lists.newArrayListWithCapacity(2);
          }
          queryFacets.add(new SearchContextFacets.QueryFacet(topLevelFieldName,facetQuery));
        }
 else {
          throw new SearchParseException(context,"Unsupported facet type [" + facetType + "] for facet name ["+ topLevelFieldName+ "]");
        }
        jp.nextToken();
      }
    }
  }
  if (queryExecutionType == SearchContextFacets.QueryExecutionType.IDSET) {
    context.searcher().enabledDocIdSet();
  }
  context.facets(new SearchContextFacets(queryExecutionType,queryFacets));
}
