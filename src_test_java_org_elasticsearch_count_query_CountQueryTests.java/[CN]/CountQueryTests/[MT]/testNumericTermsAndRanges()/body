{
  assertAcked(prepareCreate("test").addMapping("type1","num_byte","type=byte","num_short","type=short","num_integer","type=integer","num_long","type=long","num_float","type=float","num_double","type=double"));
  ensureGreen();
  client().prepareIndex("test","type1","1").setSource("num_byte",1,"num_short",1,"num_integer",1,"num_long",1,"num_float",1,"num_double",1).get();
  client().prepareIndex("test","type1","2").setSource("num_byte",2,"num_short",2,"num_integer",2,"num_long",2,"num_float",2,"num_double",2).get();
  client().prepareIndex("test","type1","17").setSource("num_byte",17,"num_short",17,"num_integer",17,"num_long",17,"num_float",17,"num_double",17).get();
  refresh();
  CountResponse countResponse;
  logger.info("--> term query on 1");
  countResponse=client().prepareCount("test").setQuery(termQuery("num_byte",1)).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(termQuery("num_short",1)).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(termQuery("num_integer",1)).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(termQuery("num_long",1)).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(termQuery("num_float",1)).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(termQuery("num_double",1)).get();
  assertHitCount(countResponse,1l);
  logger.info("--> terms query on 1");
  countResponse=client().prepareCount("test").setQuery(termsQuery("num_byte",new int[]{1})).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(termsQuery("num_short",new int[]{1})).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(termsQuery("num_integer",new int[]{1})).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(termsQuery("num_long",new int[]{1})).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(termsQuery("num_float",new double[]{1})).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(termsQuery("num_double",new double[]{1})).get();
  assertHitCount(countResponse,1l);
  logger.info("--> term filter on 1");
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termFilter("num_byte",1))).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termFilter("num_short",1))).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termFilter("num_integer",1))).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termFilter("num_long",1))).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termFilter("num_float",1))).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termFilter("num_double",1))).get();
  assertHitCount(countResponse,1l);
  logger.info("--> terms filter on 1");
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termsFilter("num_byte",new int[]{1}))).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termsFilter("num_short",new int[]{1}))).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termsFilter("num_integer",new int[]{1}))).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termsFilter("num_long",new int[]{1}))).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termsFilter("num_float",new int[]{1}))).get();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount("test").setQuery(filteredQuery(matchAllQuery(),termsFilter("num_double",new int[]{1}))).get();
  assertHitCount(countResponse,1l);
}
