{
  ValuesSourceParser vsParser=ValuesSourceParser.numeric(aggregationName,InternalHistogram.TYPE,context).targetValueType(ValueType.NUMERIC).formattable(true).build();
  boolean keyed=false;
  long minDocCount=0;
  InternalOrder order=(InternalOrder)InternalOrder.KEY_ASC;
  long interval=-1;
  ExtendedBounds extendedBounds=null;
  long offset=0;
  XContentParser.Token token;
  String currentFieldName=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (vsParser.token(currentFieldName,token,parser)) {
      continue;
    }
 else     if (token.isValue()) {
      if ("interval".equals(currentFieldName)) {
        interval=parser.longValue();
      }
 else       if ("min_doc_count".equals(currentFieldName) || "minDocCount".equals(currentFieldName)) {
        minDocCount=parser.longValue();
      }
 else       if ("keyed".equals(currentFieldName)) {
        keyed=parser.booleanValue();
      }
 else       if ("offset".equals(currentFieldName)) {
        offset=parser.longValue();
      }
 else {
        throw new SearchParseException(context,"Unknown key for a " + token + " in aggregation ["+ aggregationName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
      }
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("order".equals(currentFieldName)) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
          if (token == XContentParser.Token.FIELD_NAME) {
            currentFieldName=parser.currentName();
          }
 else           if (token == XContentParser.Token.VALUE_STRING) {
            String dir=parser.text();
            boolean asc="asc".equals(dir);
            if (!asc && !"desc".equals(dir)) {
              throw new SearchParseException(context,"Unknown order direction [" + dir + "] in aggregation ["+ aggregationName+ "]. Should be either [asc] or [desc]",parser.getTokenLocation());
            }
            order=resolveOrder(currentFieldName,asc);
          }
        }
      }
 else       if (EXTENDED_BOUNDS.match(currentFieldName)) {
        extendedBounds=new ExtendedBounds();
        while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
          if (token == XContentParser.Token.FIELD_NAME) {
            currentFieldName=parser.currentName();
          }
 else           if (token.isValue()) {
            if ("min".equals(currentFieldName)) {
              extendedBounds.min=parser.longValue(true);
            }
 else             if ("max".equals(currentFieldName)) {
              extendedBounds.max=parser.longValue(true);
            }
 else {
              throw new SearchParseException(context,"Unknown extended_bounds key for a " + token + " in aggregation ["+ aggregationName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
            }
          }
        }
      }
 else {
        throw new SearchParseException(context,"Unknown key for a " + token + " in aggregation ["+ aggregationName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
      }
    }
 else {
      throw new SearchParseException(context,"Unexpected token " + token + " in aggregation ["+ aggregationName+ "].",parser.getTokenLocation());
    }
  }
  if (interval < 1) {
    throw new SearchParseException(context,"Missing required field [interval] for histogram aggregation [" + aggregationName + "]",parser.getTokenLocation());
  }
  Rounding rounding=new Rounding.Interval(interval);
  if (offset != 0) {
    rounding=new Rounding.OffsetRounding((Rounding.Interval)rounding,offset);
  }
  if (extendedBounds != null) {
    extendedBounds.processAndValidate(aggregationName,context,ValueParser.RAW);
  }
  return new HistogramAggregator.Factory(aggregationName,vsParser.config(),rounding,order,keyed,minDocCount,extendedBounds,new InternalHistogram.Factory());
}
