{
  expectedMultiSortBuckets=new HashMap<>();
  Map<String,Object> bucketProps=new HashMap<>();
  bucketProps.put("_term","val1");
  bucketProps.put("_count",3L);
  bucketProps.put("avg_l",1d);
  bucketProps.put("sum_d",6d);
  expectedMultiSortBuckets.put((String)bucketProps.get("_term"),bucketProps);
  bucketProps=new HashMap<>();
  bucketProps.put("_term","val2");
  bucketProps.put("_count",3L);
  bucketProps.put("avg_l",2d);
  bucketProps.put("sum_d",6d);
  expectedMultiSortBuckets.put((String)bucketProps.get("_term"),bucketProps);
  bucketProps=new HashMap<>();
  bucketProps.put("_term","val3");
  bucketProps.put("_count",2L);
  bucketProps.put("avg_l",3d);
  bucketProps.put("sum_d",3d);
  expectedMultiSortBuckets.put((String)bucketProps.get("_term"),bucketProps);
  bucketProps=new HashMap<>();
  bucketProps.put("_term","val4");
  bucketProps.put("_count",2L);
  bucketProps.put("avg_l",3d);
  bucketProps.put("sum_d",4d);
  expectedMultiSortBuckets.put((String)bucketProps.get("_term"),bucketProps);
  bucketProps=new HashMap<>();
  bucketProps.put("_term","val5");
  bucketProps.put("_count",2L);
  bucketProps.put("avg_l",5d);
  bucketProps.put("sum_d",3d);
  expectedMultiSortBuckets.put((String)bucketProps.get("_term"),bucketProps);
  bucketProps=new HashMap<>();
  bucketProps.put("_term","val6");
  bucketProps.put("_count",1L);
  bucketProps.put("avg_l",5d);
  bucketProps.put("sum_d",1d);
  expectedMultiSortBuckets.put((String)bucketProps.get("_term"),bucketProps);
  bucketProps=new HashMap<>();
  bucketProps.put("_term","val7");
  bucketProps.put("_count",1L);
  bucketProps.put("avg_l",5d);
  bucketProps.put("sum_d",1d);
  expectedMultiSortBuckets.put((String)bucketProps.get("_term"),bucketProps);
  assertAcked(client().admin().indices().prepareCreate("sort_idx").addMapping("type",SINGLE_VALUED_FIELD_NAME,"type=keyword",MULTI_VALUED_FIELD_NAME,"type=keyword","tag","type=keyword").get());
  for (int i=1; i <= 3; i++) {
    builders.add(client().prepareIndex("sort_idx","multi_sort_type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,"val1").field("l",1).field("d",i).endObject()));
    builders.add(client().prepareIndex("sort_idx","multi_sort_type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,"val2").field("l",2).field("d",i).endObject()));
  }
  builders.add(client().prepareIndex("sort_idx","multi_sort_type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,"val3").field("l",3).field("d",1).endObject()));
  builders.add(client().prepareIndex("sort_idx","multi_sort_type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,"val3").field("l",3).field("d",2).endObject()));
  builders.add(client().prepareIndex("sort_idx","multi_sort_type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,"val4").field("l",3).field("d",1).endObject()));
  builders.add(client().prepareIndex("sort_idx","multi_sort_type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,"val4").field("l",3).field("d",3).endObject()));
  builders.add(client().prepareIndex("sort_idx","multi_sort_type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,"val5").field("l",5).field("d",1).endObject()));
  builders.add(client().prepareIndex("sort_idx","multi_sort_type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,"val5").field("l",5).field("d",2).endObject()));
  builders.add(client().prepareIndex("sort_idx","multi_sort_type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,"val6").field("l",5).field("d",1).endObject()));
  builders.add(client().prepareIndex("sort_idx","multi_sort_type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,"val7").field("l",5).field("d",1).endObject()));
}
