{
  SearchResponse response=client().prepareSearch("idx").setTypes("type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(MULTI_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).script(new Script("'foo_' + _value")).subAggregation(count("count"))).execute().actionGet();
  assertSearchResponse(response);
  Terms terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(6));
  for (int i=0; i < 6; i++) {
    Terms.Bucket bucket=terms.getBucketByKey("foo_val" + i);
    assertThat(bucket,notNullValue());
    assertThat(key(bucket),equalTo("foo_val" + i));
    if (i == 0 | i == 5) {
      assertThat(bucket.getDocCount(),equalTo(1l));
      ValueCount valueCount=bucket.getAggregations().get("count");
      assertThat(valueCount,notNullValue());
      assertThat(valueCount.getValue(),equalTo(2l));
    }
 else {
      assertThat(bucket.getDocCount(),equalTo(2l));
      ValueCount valueCount=bucket.getAggregations().get("count");
      assertThat(valueCount,notNullValue());
      assertThat("term[" + key(bucket) + "]",valueCount.getValue(),equalTo(4l));
    }
  }
}
