{
  StringBuilder filter2NameBuilder=new StringBuilder("filt.er2");
  filter2NameBuilder.append(randomAsciiOfLengthBetween(3,10).replace("[","").replace("]","").replace(">",""));
  String filter2Name=filter2NameBuilder.toString();
  StringBuilder statsNameBuilder=new StringBuilder("st.ats");
  statsNameBuilder.append(randomAsciiOfLengthBetween(3,10).replace("[","").replace("]","").replace(">",""));
  String statsName=statsNameBuilder.toString();
  boolean asc=randomBoolean();
  SearchResponse response=client().prepareSearch("idx").setTypes("type").addAggregation(terms("tags").executionHint(randomExecutionHint()).field("tag").collectMode(randomFrom(SubAggCollectionMode.values())).order(Terms.Order.aggregation("filter1>" + filter2Name + ">"+ statsName+ ".max",asc)).subAggregation(filter("filter1",QueryBuilders.matchAllQuery()).subAggregation(filter(filter2Name,QueryBuilders.matchAllQuery()).subAggregation(stats(statsName).field("i"))))).execute().actionGet();
  assertSearchResponse(response);
  Terms tags=response.getAggregations().get("tags");
  assertThat(tags,notNullValue());
  assertThat(tags.getName(),equalTo("tags"));
  assertThat(tags.getBuckets().size(),equalTo(2));
  Iterator<Terms.Bucket> iters=tags.getBuckets().iterator();
  Terms.Bucket tag=iters.next();
  assertThat(tag,notNullValue());
  assertThat(key(tag),equalTo(asc ? "more" : "less"));
  assertThat(tag.getDocCount(),equalTo(asc ? 3L : 2L));
  Filter filter1=tag.getAggregations().get("filter1");
  assertThat(filter1,notNullValue());
  assertThat(filter1.getDocCount(),equalTo(asc ? 3L : 2L));
  Filter filter2=filter1.getAggregations().get(filter2Name);
  assertThat(filter2,notNullValue());
  assertThat(filter2.getDocCount(),equalTo(asc ? 3L : 2L));
  Stats stats=filter2.getAggregations().get(statsName);
  assertThat(stats,notNullValue());
  assertThat(stats.getMax(),equalTo(asc ? 2.0 : 4.0));
  tag=iters.next();
  assertThat(tag,notNullValue());
  assertThat(key(tag),equalTo(asc ? "less" : "more"));
  assertThat(tag.getDocCount(),equalTo(asc ? 2L : 3L));
  filter1=tag.getAggregations().get("filter1");
  assertThat(filter1,notNullValue());
  assertThat(filter1.getDocCount(),equalTo(asc ? 2L : 3L));
  filter2=filter1.getAggregations().get(filter2Name);
  assertThat(filter2,notNullValue());
  assertThat(filter2.getDocCount(),equalTo(asc ? 2L : 3L));
  stats=filter2.getAggregations().get(statsName);
  assertThat(stats,notNullValue());
  assertThat(stats.getMax(),equalTo(asc ? 4.0 : 2.0));
}
