{
  SearchResponse response=client().prepareSearch("idx").addAggregation(filters("tags",new KeyedFilter("tag1",termQuery("tag","tag1")),new KeyedFilter("tag2",termQuery("tag","tag2"))).subAggregation(avg("avg_value").field("value"))).execute().actionGet();
  assertSearchResponse(response);
  Filters filters=response.getAggregations().get("tags");
  assertThat(filters,notNullValue());
  assertThat(filters.getName(),equalTo("tags"));
  assertThat(filters.getBuckets().size(),equalTo(2));
  Object[] propertiesKeys=(Object[])filters.getProperty("_key");
  Object[] propertiesDocCounts=(Object[])filters.getProperty("_count");
  Object[] propertiesCounts=(Object[])filters.getProperty("avg_value.value");
  Filters.Bucket bucket=filters.getBucketByKey("tag1");
  assertThat(bucket,Matchers.notNullValue());
  assertThat(bucket.getDocCount(),equalTo((long)numTag1Docs));
  long sum=0;
  for (int i=0; i < numTag1Docs; ++i) {
    sum+=i + 1;
  }
  assertThat(bucket.getAggregations().asList().isEmpty(),is(false));
  Avg avgValue=bucket.getAggregations().get("avg_value");
  assertThat(avgValue,notNullValue());
  assertThat(avgValue.getName(),equalTo("avg_value"));
  assertThat(avgValue.getValue(),equalTo((double)sum / numTag1Docs));
  assertThat((String)propertiesKeys[0],equalTo("tag1"));
  assertThat((long)propertiesDocCounts[0],equalTo((long)numTag1Docs));
  assertThat((double)propertiesCounts[0],equalTo((double)sum / numTag1Docs));
  bucket=filters.getBucketByKey("tag2");
  assertThat(bucket,Matchers.notNullValue());
  assertThat(bucket.getDocCount(),equalTo((long)numTag2Docs));
  sum=0;
  for (int i=numTag1Docs; i < (numTag1Docs + numTag2Docs); ++i) {
    sum+=i;
  }
  assertThat(bucket.getAggregations().asList().isEmpty(),is(false));
  avgValue=bucket.getAggregations().get("avg_value");
  assertThat(avgValue,notNullValue());
  assertThat(avgValue.getName(),equalTo("avg_value"));
  assertThat(avgValue.getValue(),equalTo((double)sum / numTag2Docs));
  assertThat((String)propertiesKeys[1],equalTo("tag2"));
  assertThat((long)propertiesDocCounts[1],equalTo((long)numTag2Docs));
  assertThat((double)propertiesCounts[1],equalTo((double)sum / numTag2Docs));
}
