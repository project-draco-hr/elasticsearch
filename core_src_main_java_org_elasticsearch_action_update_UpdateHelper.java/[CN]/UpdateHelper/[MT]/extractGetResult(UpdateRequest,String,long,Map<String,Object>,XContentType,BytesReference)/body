{
  if ((request.fields() == null || request.fields().length == 0) && (request.fetchSource() == null || request.fetchSource().fetchSource() == false)) {
    return null;
  }
  SourceLookup sourceLookup=new SourceLookup();
  sourceLookup.setSource(source);
  boolean sourceRequested=false;
  Map<String,GetField> fields=null;
  if (request.fields() != null && request.fields().length > 0) {
    for (    String field : request.fields()) {
      if (field.equals("_source")) {
        sourceRequested=true;
        continue;
      }
      Object value=sourceLookup.extractValue(field);
      if (value != null) {
        if (fields == null) {
          fields=new HashMap<>(2);
        }
        GetField getField=fields.get(field);
        if (getField == null) {
          getField=new GetField(field,new ArrayList<>(2));
          fields.put(field,getField);
        }
        getField.getValues().add(value);
      }
    }
  }
  BytesReference sourceFilteredAsBytes=sourceAsBytes;
  if (request.fetchSource() != null && request.fetchSource().fetchSource()) {
    sourceRequested=true;
    if (request.fetchSource().includes().length > 0 || request.fetchSource().excludes().length > 0) {
      Object value=sourceLookup.filter(request.fetchSource().includes(),request.fetchSource().excludes());
      try {
        final int initialCapacity=Math.min(1024,sourceAsBytes.length());
        BytesStreamOutput streamOutput=new BytesStreamOutput(initialCapacity);
        try (XContentBuilder builder=new XContentBuilder(sourceContentType.xContent(),streamOutput)){
          builder.value(value);
          sourceFilteredAsBytes=builder.bytes();
        }
       }
 catch (      IOException e) {
        throw new ElasticsearchException("Error filtering source",e);
      }
    }
  }
  return new GetResult(concreteIndex,request.type(),request.id(),version,true,sourceRequested ? sourceFilteredAsBytes : null,fields);
}
