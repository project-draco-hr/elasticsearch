{
  final String action=buffer.readString();
  transportServiceAdapter.onRequestReceived(requestId,action);
  final NettyTransportChannel transportChannel=new NettyTransportChannel(transport,transportServiceAdapter,action,channel,requestId,version,profileName);
  try {
    final TransportRequestHandler handler=transportServiceAdapter.handler(action);
    if (handler == null) {
      throw new ActionNotFoundTransportException(action);
    }
    final TransportRequest request=handler.newInstance();
    request.remoteAddress(new InetSocketTransportAddress((InetSocketAddress)channel.getRemoteAddress()));
    request.readFrom(buffer);
    if (handler.executor() == ThreadPool.Names.SAME) {
      handler.messageReceived(request,transportChannel);
    }
 else {
      threadPool.executor(handler.executor()).execute(new RequestHandler(handler,request,transportChannel,action));
    }
  }
 catch (  Throwable e) {
    try {
      transportChannel.sendResponse(e);
    }
 catch (    IOException e1) {
      logger.warn("Failed to send error message back to client for action [" + action + "]",e);
      logger.warn("Actual Exception",e1);
    }
  }
  return action;
}
