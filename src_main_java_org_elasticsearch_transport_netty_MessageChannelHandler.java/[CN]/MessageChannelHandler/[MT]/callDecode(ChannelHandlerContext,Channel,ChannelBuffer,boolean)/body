{
  int actualSize=0;
  while (buffer.readable()) {
    actualSize=0;
    if (buffer.readableBytes() < 4) {
      break;
    }
    int dataLen=buffer.getInt(buffer.readerIndex());
    if (dataLen <= 0) {
      throw new StreamCorruptedException("invalid data length: " + dataLen);
    }
    actualSize=dataLen + 4;
    if (buffer.readableBytes() < actualSize) {
      break;
    }
    buffer.skipBytes(4);
    process(ctx,channel,buffer,dataLen);
  }
  if (cumulationBuffer) {
    if (!buffer.readable()) {
      this.cumulation=null;
    }
 else     if (buffer.readerIndex() > 0) {
      if (actualSize > 0) {
        this.cumulation=ChannelBuffers.dynamicBuffer(actualSize,ctx.getChannel().getConfig().getBufferFactory());
      }
 else {
        this.cumulation=ChannelBuffers.dynamicBuffer(ctx.getChannel().getConfig().getBufferFactory());
      }
      this.cumulation.writeBytes(buffer);
    }
  }
  return actualSize;
}
