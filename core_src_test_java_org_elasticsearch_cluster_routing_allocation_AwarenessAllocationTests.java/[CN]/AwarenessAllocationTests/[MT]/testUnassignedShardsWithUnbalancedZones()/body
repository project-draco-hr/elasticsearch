{
  AllocationService strategy=createAllocationService(settingsBuilder().put("cluster.routing.allocation.concurrent_recoveries",10).put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),"always").put("cluster.routing.allocation.awareness.attributes","zone").build());
  logger.info("Building initial routing table for 'testUnassignedShardsWithUnbalancedZones'");
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(4)).build();
  RoutingTable routingTable=RoutingTable.builder().addAsNew(metaData.index("test")).build();
  ClusterState clusterState=ClusterState.builder(org.elasticsearch.cluster.ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).build();
  logger.info("--> adding 5 nodes in different zones and do rerouting");
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().put(newNode("A-0",singletonMap("zone","a"))).put(newNode("A-1",singletonMap("zone","a"))).put(newNode("A-2",singletonMap("zone","a"))).put(newNode("A-3",singletonMap("zone","a"))).put(newNode("A-4",singletonMap("zone","a"))).put(newNode("B-0",singletonMap("zone","b")))).build();
  routingTable=strategy.reroute(clusterState,"reroute").routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertThat(clusterState.getRoutingNodes().shardsWithState(STARTED).size(),equalTo(0));
  assertThat(clusterState.getRoutingNodes().shardsWithState(INITIALIZING).size(),equalTo(1));
  logger.info("--> start the shard (primary)");
  routingTable=strategy.applyStartedShards(clusterState,clusterState.getRoutingNodes().shardsWithState(INITIALIZING)).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertThat(clusterState.getRoutingNodes().shardsWithState(STARTED).size(),equalTo(1));
  assertThat(clusterState.getRoutingNodes().shardsWithState(INITIALIZING).size(),equalTo(3));
  assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(),equalTo(1));
  AllocationCommands commands=new AllocationCommands();
  String primaryNode=null;
  for (  ShardRouting routing : routingTable.allShards()) {
    if (routing.primary()) {
      primaryNode=routing.currentNodeId();
    }
 else     if (routing.initializing()) {
      commands.add(new CancelAllocationCommand(routing.shardId(),routing.currentNodeId(),false));
    }
  }
  commands.add(new MoveAllocationCommand(new ShardId("test",0),primaryNode,"A-4"));
  routingTable=strategy.reroute(clusterState,commands).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertThat(clusterState.getRoutingNodes().shardsWithState(STARTED).size(),equalTo(0));
  assertThat(clusterState.getRoutingNodes().shardsWithState(RELOCATING).size(),equalTo(1));
  assertThat(clusterState.getRoutingNodes().shardsWithState(INITIALIZING).size(),equalTo(4));
  assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(),equalTo(1));
}
