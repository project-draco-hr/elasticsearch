{
  clusterUUID=in.readString();
  version=in.readLong();
  transientSettings=Settings.readSettingsFromStream(in);
  persistentSettings=Settings.readSettingsFromStream(in);
  indices=DiffableUtils.readImmutableOpenMapDiff(in,DiffableUtils.getStringKeySerializer(),IndexMetaData.PROTO);
  templates=DiffableUtils.readImmutableOpenMapDiff(in,DiffableUtils.getStringKeySerializer(),IndexTemplateMetaData.PROTO);
  customs=DiffableUtils.readImmutableOpenMapDiff(in,DiffableUtils.getStringKeySerializer(),new DiffableUtils.DiffableValueSerializer<String,Custom>(){
    @Override public Custom read(    StreamInput in,    String key) throws IOException {
      return lookupPrototypeSafe(key).readFrom(in);
    }
    @Override public Diff<Custom> readDiff(    StreamInput in,    String key) throws IOException {
      return lookupPrototypeSafe(key).readDiffFrom(in);
    }
  }
);
}
