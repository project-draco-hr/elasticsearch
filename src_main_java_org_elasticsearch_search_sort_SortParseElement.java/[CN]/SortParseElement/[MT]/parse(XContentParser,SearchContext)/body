{
  XContentParser.Token token=parser.currentToken();
  List<SortField> sortFields=Lists.newArrayListWithCapacity(2);
  if (token == XContentParser.Token.START_ARRAY) {
    while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
      if (token == XContentParser.Token.START_OBJECT) {
        addCompoundSortField(parser,context,sortFields);
      }
 else       if (token == XContentParser.Token.VALUE_STRING) {
        addSortField(context,sortFields,parser.text(),false,null,null,null,null);
      }
 else {
        throw new IllegalArgumentException("malformed sort format, within the sort array, an object, or an actual string are allowed");
      }
    }
  }
 else   if (token == XContentParser.Token.VALUE_STRING) {
    addSortField(context,sortFields,parser.text(),false,null,null,null,null);
  }
 else   if (token == XContentParser.Token.START_OBJECT) {
    addCompoundSortField(parser,context,sortFields);
  }
 else {
    throw new IllegalArgumentException("malformed sort format, either start with array, object, or an actual string");
  }
  if (!sortFields.isEmpty()) {
    boolean sort;
    if (sortFields.size() > 1) {
      sort=true;
    }
 else {
      SortField sortField=sortFields.get(0);
      if (sortField.getType() == SortField.Type.SCORE && !sortField.getReverse()) {
        sort=false;
      }
 else {
        sort=true;
      }
    }
    if (sort) {
      context.sort(new Sort(sortFields.toArray(new SortField[sortFields.size()])));
    }
  }
}
