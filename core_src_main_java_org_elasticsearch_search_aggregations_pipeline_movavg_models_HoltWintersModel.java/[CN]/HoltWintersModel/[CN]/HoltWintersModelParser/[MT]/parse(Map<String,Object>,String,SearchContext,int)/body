{
  double alpha=parseDoubleParam(context,settings,"alpha",0.5);
  double beta=parseDoubleParam(context,settings,"beta",0.5);
  double gamma=parseDoubleParam(context,settings,"gamma",0.5);
  int period=parseIntegerParam(context,settings,"period",1);
  if (windowSize < 2 * period) {
    throw new SearchParseException(context,"Field [window] must be at least twice as large as the period when " + "using Holt-Winters.  Value provided was [" + windowSize + "], which is less than (2*period) == "+ (2 * period),null);
  }
  SeasonalityType seasonalityType=SeasonalityType.ADDITIVE;
  if (settings != null) {
    Object value=settings.get("type");
    if (value != null) {
      if (value instanceof String) {
        seasonalityType=SeasonalityType.parse((String)value);
      }
 else {
        throw new SearchParseException(context,"Parameter [type] must be a String, type `" + value.getClass().getSimpleName() + "` provided instead",null);
      }
    }
  }
  boolean pad=parseBoolParam(context,settings,"pad",seasonalityType.equals(SeasonalityType.MULTIPLICATIVE));
  return new HoltWintersModel(alpha,beta,gamma,period,seasonalityType,pad);
}
