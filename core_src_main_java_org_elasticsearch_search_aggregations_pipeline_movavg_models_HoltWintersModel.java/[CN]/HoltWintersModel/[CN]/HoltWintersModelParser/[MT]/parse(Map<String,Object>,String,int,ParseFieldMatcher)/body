{
  double alpha=parseDoubleParam(settings,"alpha",DEFAULT_ALPHA);
  double beta=parseDoubleParam(settings,"beta",DEFAULT_BETA);
  double gamma=parseDoubleParam(settings,"gamma",DEFAULT_GAMMA);
  int period=parseIntegerParam(settings,"period",DEFAULT_PERIOD);
  if (windowSize < 2 * period) {
    throw new ParseException("Field [window] must be at least twice as large as the period when " + "using Holt-Winters.  Value provided was [" + windowSize + "], which is less than (2*period) == "+ (2 * period),0);
  }
  SeasonalityType seasonalityType=DEFAULT_SEASONALITY_TYPE;
  if (settings != null) {
    Object value=settings.get("type");
    if (value != null) {
      if (value instanceof String) {
        seasonalityType=SeasonalityType.parse((String)value,parseFieldMatcher);
        settings.remove("type");
      }
 else {
        throw new ParseException("Parameter [type] must be a String, type `" + value.getClass().getSimpleName() + "` provided instead",0);
      }
    }
  }
  boolean pad=parseBoolParam(settings,"pad",seasonalityType.equals(SeasonalityType.MULTIPLICATIVE));
  checkUnrecognizedParams(settings);
  return new HoltWintersModel(alpha,beta,gamma,period,seasonalityType,pad);
}
