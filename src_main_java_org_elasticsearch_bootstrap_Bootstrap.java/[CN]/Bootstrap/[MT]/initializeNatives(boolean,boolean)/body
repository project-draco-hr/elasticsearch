{
  if (mlockAll) {
    if (Constants.WINDOWS) {
      Natives.tryVirtualLock();
    }
 else {
      Natives.tryMlockall();
    }
  }
  if (Natives.definitelyRunningAsRoot()) {
    if (Boolean.parseBoolean(System.getProperty("es.insecure.allow.root"))) {
      Loggers.getLogger(Bootstrap.class).warn("running as ROOT user. this is a bad idea!");
    }
 else {
      throw new RuntimeException("don't run elasticsearch as root.");
    }
  }
  if (ctrlHandler) {
    Natives.addConsoleCtrlHandler(new ConsoleCtrlHandler(){
      @Override public boolean handle(      int code){
        if (CTRL_CLOSE_EVENT == code) {
          ESLogger logger=Loggers.getLogger(Bootstrap.class);
          logger.info("running graceful exit on windows");
          Bootstrap.INSTANCE.stop();
          return true;
        }
        return false;
      }
    }
);
  }
  try {
    Kernel32Library.getInstance();
  }
 catch (  Throwable ignored) {
  }
  try {
    Sigar.load();
    Loggers.getLogger(Bootstrap.class).trace("sigar libraries loaded successfully");
  }
 catch (  Throwable t) {
    Loggers.getLogger(Bootstrap.class).trace("failed to load sigar libraries",t);
  }
  StringHelper.randomId();
}
