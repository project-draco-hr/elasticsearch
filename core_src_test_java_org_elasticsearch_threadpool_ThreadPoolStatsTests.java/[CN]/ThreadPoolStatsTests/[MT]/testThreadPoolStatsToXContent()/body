{
  try (BytesStreamOutput os=new BytesStreamOutput()){
    List<ThreadPoolStats.Stats> stats=new ArrayList<>();
    stats.add(new ThreadPoolStats.Stats(ThreadPool.Names.SEARCH,-1,0,0,0,0,0L));
    stats.add(new ThreadPoolStats.Stats(ThreadPool.Names.WARMER,-1,0,0,0,0,0L));
    stats.add(new ThreadPoolStats.Stats(ThreadPool.Names.GENERIC,-1,0,0,0,0,0L));
    stats.add(new ThreadPoolStats.Stats(ThreadPool.Names.FORCE_MERGE,-1,0,0,0,0,0L));
    stats.add(new ThreadPoolStats.Stats(ThreadPool.Names.SAME,-1,0,0,0,0,0L));
    try (XContentBuilder builder=new XContentBuilder(XContentType.JSON.xContent(),os)){
      new ThreadPoolStats(stats).toXContent(builder,ToXContent.EMPTY_PARAMS);
    }
     try (XContentParser parser=XContentType.JSON.xContent().createParser(os.bytes())){
      XContentParser.Token token=parser.currentToken();
      assertNull(token);
      token=parser.nextToken();
      assertThat(token,equalTo(XContentParser.Token.VALUE_STRING));
      token=parser.nextToken();
      assertThat(token,equalTo(XContentParser.Token.START_OBJECT));
      token=parser.nextToken();
      assertThat(token,equalTo(XContentParser.Token.FIELD_NAME));
      List<String> names=new ArrayList<>();
      while (token == XContentParser.Token.FIELD_NAME) {
        names.add(parser.currentName());
        token=parser.nextToken();
        assertThat(token,equalTo(XContentParser.Token.START_OBJECT));
        parser.skipChildren();
        token=parser.nextToken();
      }
      assertThat(names,contains(ThreadPool.Names.FORCE_MERGE,ThreadPool.Names.GENERIC,ThreadPool.Names.SAME,ThreadPool.Names.SEARCH,ThreadPool.Names.WARMER));
    }
   }
 }
