{
  threadPool.executor(ThreadPool.Names.SEARCH).execute(new ActionRunnable<SearchResponse>(listener){
    @Override public void doRun() throws IOException {
      final InternalSearchResponse internalResponse=searchPhaseController.merge(sortedShardList,queryResults,fetchResults);
      String scrollId=null;
      if (request.scroll() != null) {
        scrollId=TransportSearchHelper.buildScrollId(request.searchType(),firstResults);
      }
      listener.onResponse(new SearchResponse(internalResponse,scrollId,expectedSuccessfulOps,successfulOps.get(),buildTookInMillis(),buildShardFailures()));
      releaseIrrelevantSearchContexts(queryResults,docIdsToLoad);
    }
    @Override public void onFailure(    Throwable t){
      try {
        ReduceSearchPhaseException failure=new ReduceSearchPhaseException("merge","",t,buildShardFailures());
        if (logger.isDebugEnabled()) {
          logger.debug("failed to reduce search",failure);
        }
        super.onFailure(failure);
      }
  finally {
        releaseIrrelevantSearchContexts(queryResults,docIdsToLoad);
      }
    }
  }
);
}
