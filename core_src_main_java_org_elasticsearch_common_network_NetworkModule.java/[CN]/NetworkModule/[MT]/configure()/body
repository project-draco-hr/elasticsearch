{
  bind(NetworkService.class).toInstance(networkService);
  bind(NamedWriteableRegistry.class).toInstance(namedWriteableRegistry);
  transportServiceTypes.bindType(binder(),settings,TRANSPORT_SERVICE_TYPE_KEY,NETTY_TRANSPORT);
  String defaultTransport=DiscoveryNode.isLocalNode(settings) ? LOCAL_TRANSPORT : NETTY_TRANSPORT;
  transportTypes.bindType(binder(),settings,TRANSPORT_TYPE_KEY,defaultTransport);
  if (transportClient) {
    bind(TransportProxyClient.class).asEagerSingleton();
    bind(TransportClientNodesService.class).asEagerSingleton();
  }
 else {
    if (HTTP_ENABLED.get(settings)) {
      bind(HttpServer.class).asEagerSingleton();
      httpTransportTypes.bindType(binder(),settings,HTTP_TYPE_SETTING.getKey(),NETTY_TRANSPORT);
    }
    bind(RestController.class).asEagerSingleton();
    catHandlers.bind(binder());
    restHandlers.bind(binder());
    bind(AllocationCommandRegistry.class).toInstance(allocationCommandRegistry);
  }
}
