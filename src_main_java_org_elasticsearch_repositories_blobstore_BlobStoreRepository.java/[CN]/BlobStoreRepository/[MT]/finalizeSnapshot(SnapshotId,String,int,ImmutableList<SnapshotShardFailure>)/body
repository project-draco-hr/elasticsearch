{
  BlobStoreSnapshot snapshot=(BlobStoreSnapshot)readSnapshot(snapshotId);
  if (snapshot == null) {
    throw new SnapshotMissingException(snapshotId);
  }
  if (snapshot.state().completed()) {
    throw new SnapshotException(snapshotId,"snapshot is already closed");
  }
  try {
    String blobName=snapshotBlobName(snapshotId);
    BlobStoreSnapshot.Builder updatedSnapshot=BlobStoreSnapshot.builder().snapshot(snapshot);
    if (failure == null) {
      updatedSnapshot.success();
      updatedSnapshot.failures(totalShards,shardFailures);
    }
 else {
      updatedSnapshot.failed(failure);
    }
    updatedSnapshot.endTime(System.currentTimeMillis());
    snapshot=updatedSnapshot.build();
    BytesStreamOutput bStream=writeSnapshot(snapshot);
    snapshotsBlobContainer.writeBlob(blobName,bStream.bytes().streamInput(),bStream.bytes().length());
    ImmutableList<SnapshotId> snapshotIds=snapshots();
    if (!snapshotIds.contains(snapshotId)) {
      snapshotIds=ImmutableList.<SnapshotId>builder().addAll(snapshotIds).add(snapshotId).build();
    }
    writeSnapshotList(snapshotIds);
    return snapshot;
  }
 catch (  IOException ex) {
    throw new RepositoryException(this.repositoryName,"failed to update snapshot in repository",ex);
  }
}
