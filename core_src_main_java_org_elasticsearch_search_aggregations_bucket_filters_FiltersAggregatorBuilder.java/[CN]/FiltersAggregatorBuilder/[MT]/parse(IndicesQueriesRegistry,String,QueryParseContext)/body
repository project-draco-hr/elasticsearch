{
  XContentParser parser=context.parser();
  List<FiltersAggregator.KeyedFilter> keyedFilters=null;
  List<QueryBuilder<?>> nonKeyedFilters=null;
  XContentParser.Token token=null;
  String currentFieldName=null;
  String otherBucketKey=null;
  Boolean otherBucket=false;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.VALUE_BOOLEAN) {
      if (context.parseFieldMatcher().match(currentFieldName,OTHER_BUCKET_FIELD)) {
        otherBucket=parser.booleanValue();
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].");
      }
    }
 else     if (token == XContentParser.Token.VALUE_STRING) {
      if (context.parseFieldMatcher().match(currentFieldName,OTHER_BUCKET_KEY_FIELD)) {
        otherBucketKey=parser.text();
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].");
      }
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if (context.parseFieldMatcher().match(currentFieldName,FILTERS_FIELD)) {
        keyedFilters=new ArrayList<>();
        String key=null;
        while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
          if (token == XContentParser.Token.FIELD_NAME) {
            key=parser.currentName();
          }
 else {
            QueryParseContext queryParseContext=new QueryParseContext(queriesRegistry);
            queryParseContext.reset(parser);
            queryParseContext.parseFieldMatcher(context.parseFieldMatcher());
            QueryBuilder<?> filter=queryParseContext.parseInnerQueryBuilder();
            keyedFilters.add(new FiltersAggregator.KeyedFilter(key,filter == null ? matchAllQuery() : filter));
          }
        }
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].");
      }
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if (context.parseFieldMatcher().match(currentFieldName,FILTERS_FIELD)) {
        nonKeyedFilters=new ArrayList<>();
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          QueryParseContext queryParseContext=new QueryParseContext(queriesRegistry);
          queryParseContext.reset(parser);
          queryParseContext.parseFieldMatcher(context.parseFieldMatcher());
          QueryBuilder<?> filter=queryParseContext.parseInnerQueryBuilder();
          nonKeyedFilters.add(filter == null ? QueryBuilders.matchAllQuery() : filter);
        }
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].");
      }
    }
 else {
      throw new ParsingException(parser.getTokenLocation(),"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].");
    }
  }
  if (otherBucket && otherBucketKey == null) {
    otherBucketKey="_other_";
  }
  FiltersAggregatorBuilder factory;
  if (keyedFilters != null) {
    factory=new FiltersAggregatorBuilder(aggregationName,keyedFilters.toArray(new FiltersAggregator.KeyedFilter[keyedFilters.size()]));
  }
 else {
    factory=new FiltersAggregatorBuilder(aggregationName,nonKeyedFilters.toArray(new QueryBuilder<?>[nonKeyedFilters.size()]));
  }
  if (otherBucket != null) {
    factory.otherBucket(otherBucket);
  }
  if (otherBucketKey != null) {
    factory.otherBucketKey(otherBucketKey);
  }
  return factory;
}
