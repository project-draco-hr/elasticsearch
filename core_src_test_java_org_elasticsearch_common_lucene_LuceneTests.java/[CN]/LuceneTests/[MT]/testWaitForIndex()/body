{
  final MockDirectoryWrapper dir=newMockDirectory();
  final AtomicBoolean succeeded=new AtomicBoolean(false);
  final CountDownLatch latch=new CountDownLatch(1);
  Thread t=new Thread(new Runnable(){
    @Override public void run(){
      try {
        latch.await();
        if (Lucene.waitForIndex(dir,5000)) {
          succeeded.set(true);
        }
 else {
          fail("index should have eventually existed!");
        }
      }
 catch (      InterruptedException e) {
      }
catch (      Exception e) {
        fail("should have been able to create the engine! " + e.getMessage());
      }
    }
  }
);
  t.start();
  latch.countDown();
  IndexWriterConfig iwc=newIndexWriterConfig();
  iwc.setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE);
  iwc.setMergePolicy(NoMergePolicy.INSTANCE);
  iwc.setMaxBufferedDocs(2);
  IndexWriter writer=new IndexWriter(dir,iwc);
  Document doc=new Document();
  doc.add(new TextField("id","1",random().nextBoolean() ? Field.Store.YES : Field.Store.NO));
  writer.addDocument(doc);
  writer.commit();
  t.join();
  writer.close();
  dir.close();
  assertTrue("index should have eventually existed",succeeded.get());
}
