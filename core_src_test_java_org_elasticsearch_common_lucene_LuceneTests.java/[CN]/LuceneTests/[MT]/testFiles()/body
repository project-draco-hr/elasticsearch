{
  MockDirectoryWrapper dir=newMockDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(new MockAnalyzer(random()));
  iwc.setMergePolicy(NoMergePolicy.INSTANCE);
  iwc.setMaxBufferedDocs(2);
  iwc.setUseCompoundFile(true);
  IndexWriter writer=new IndexWriter(dir,iwc);
  Document doc=new Document();
  doc.add(new TextField("id","1",random().nextBoolean() ? Field.Store.YES : Field.Store.NO));
  writer.addDocument(doc);
  writer.commit();
  Set<String> files=new HashSet<>();
  for (  String f : Lucene.files(Lucene.readSegmentInfos(dir))) {
    files.add(f);
  }
  final boolean simpleTextCFS=files.contains("_0.scf");
  assertTrue(files.toString(),files.contains("segments_1"));
  if (simpleTextCFS) {
    assertFalse(files.toString(),files.contains("_0.cfs"));
    assertFalse(files.toString(),files.contains("_0.cfe"));
  }
 else {
    assertTrue(files.toString(),files.contains("_0.cfs"));
    assertTrue(files.toString(),files.contains("_0.cfe"));
  }
  assertTrue(files.toString(),files.contains("_0.si"));
  doc=new Document();
  doc.add(new TextField("id","2",random().nextBoolean() ? Field.Store.YES : Field.Store.NO));
  writer.addDocument(doc);
  doc=new Document();
  doc.add(new TextField("id","3",random().nextBoolean() ? Field.Store.YES : Field.Store.NO));
  writer.addDocument(doc);
  writer.commit();
  files.clear();
  for (  String f : Lucene.files(Lucene.readSegmentInfos(dir))) {
    files.add(f);
  }
  assertFalse(files.toString(),files.contains("segments_1"));
  assertTrue(files.toString(),files.contains("segments_2"));
  if (simpleTextCFS) {
    assertFalse(files.toString(),files.contains("_0.cfs"));
    assertFalse(files.toString(),files.contains("_0.cfe"));
  }
 else {
    assertTrue(files.toString(),files.contains("_0.cfs"));
    assertTrue(files.toString(),files.contains("_0.cfe"));
  }
  assertTrue(files.toString(),files.contains("_0.si"));
  if (simpleTextCFS) {
    assertFalse(files.toString(),files.contains("_1.cfs"));
    assertFalse(files.toString(),files.contains("_1.cfe"));
  }
 else {
    assertTrue(files.toString(),files.contains("_1.cfs"));
    assertTrue(files.toString(),files.contains("_1.cfe"));
  }
  assertTrue(files.toString(),files.contains("_1.si"));
  writer.close();
  dir.close();
}
