{
  ShardId shardId=new ShardId("foo","uuid",0);
  long remainingDelay=42;
  Decision.Multi d=new Decision.Multi();
  d.add(Decision.single(Decision.Type.NO,"no label","because I said no"));
  d.add(Decision.single(Decision.Type.YES,"yes label","yes please"));
  d.add(Decision.single(Decision.Type.THROTTLE,"throttle label","wait a sec"));
  Float nodeWeight=1.5f;
  Set<String> allocationIds=new HashSet<>();
  allocationIds.add("bar");
  IndicesShardStoresResponse.StoreStatus storeStatus=new IndicesShardStoresResponse.StoreStatus(node,42,"eggplant",IndicesShardStoresResponse.StoreStatus.AllocationStatus.PRIMARY,new ElasticsearchException("stuff's broke, yo"));
  NodeExplanation ne=TransportClusterAllocationExplainAction.calculateNodeExplanation(primaryShard,indexMetaData,node,d,nodeWeight,storeStatus,"node-0",allocationIds);
  Map<DiscoveryNode,NodeExplanation> nodeExplanations=new HashMap<>(1);
  nodeExplanations.put(ne.getNode(),ne);
  ClusterAllocationExplanation cae=new ClusterAllocationExplanation(shardId,true,"assignedNode",remainingDelay,null,nodeExplanations);
  XContentBuilder builder=XContentFactory.jsonBuilder();
  cae.toXContent(builder,ToXContent.EMPTY_PARAMS);
  assertEquals("{\"shard\":{\"index\":\"foo\",\"index_uuid\":\"uuid\",\"id\":0,\"primary\":true},\"assigned\":true," + "\"assigned_node_id\":\"assignedNode\",\"nodes\":{\"node-0\":{\"node_name\":\"\",\"node_attribute" + "s\":{},\"store\":{\"shard_copy\":\"IO_ERROR\",\"store_exception\":\"ElasticsearchException[stuff"+ "'s broke, yo]\"},\"final_decision\":\"ALREADY_ASSIGNED\",\"final_explanation\":\"the shard is al"+ "ready assigned to this node\",\"weight\":1.5,\"decisions\":[{\"decider\":\"no label\",\"decision"+ "\":\"NO\",\"explanation\":\"because I said no\"},{\"decider\":\"yes label\",\"decision\":\"YES\""+ ",\"explanation\":\"yes please\"},{\"decider\":\"throttle label\",\"decision\":\"THROTTLE\",\"exp"+ "lanation\":\"wait a sec\"}]}}}",builder.string());
}
