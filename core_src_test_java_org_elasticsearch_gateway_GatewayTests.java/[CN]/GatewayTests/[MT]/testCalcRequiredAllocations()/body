{
  MockGateway gateway=new MockGateway(Settings.EMPTY,new TestClusterService());
  int nodeCount=randomIntBetween(1,6);
  Map<String,Integer> expectedResult=new HashMap<>();
  expectedResult.put("quorum",nodeCount > 2 ? nodeCount / 2 + 1 : 1);
  expectedResult.put("quorum-1",nodeCount > 2 ? (nodeCount + 1) / 2 : 1);
  expectedResult.put("half",expectedResult.get("quorum-1"));
  expectedResult.put("one",1);
  expectedResult.put("full",nodeCount);
  expectedResult.put("all",nodeCount);
  expectedResult.put("full-1",Math.max(1,nodeCount - 1));
  expectedResult.put("all-1",Math.max(1,nodeCount - 1));
  int i=randomIntBetween(1,20);
  expectedResult.put("" + i,i);
  expectedResult.put(randomUnicodeOfCodepointLength(10),1);
  for (  String setting : expectedResult.keySet()) {
    assertThat("unexpected result for setting [" + setting + "]",gateway.calcRequiredAllocations(setting,nodeCount),equalTo(expectedResult.get(setting).intValue()));
  }
}
