{
  InternalHistogram<? extends InternalHistogram.Bucket> histo=(InternalHistogram<? extends InternalHistogram.Bucket>)aggregation;
  List<? extends InternalHistogram.Bucket> buckets=histo.getBuckets();
  InternalHistogram.Factory<? extends InternalHistogram.Bucket> factory=histo.getFactory();
  List newBuckets=new ArrayList<>();
  Double lastBucketValue=null;
  for (  InternalHistogram.Bucket bucket : buckets) {
    Double thisBucketValue=resolveBucketValue(histo,bucket);
    if (lastBucketValue != null) {
      if (thisBucketValue == null) {
        throw new ElasticsearchIllegalStateException("FOUND GAP IN DATA");
      }
      double diff=thisBucketValue - lastBucketValue;
      List<InternalAggregation> aggs=new ArrayList<>(Lists.transform(bucket.getAggregations().asList(),FUNCTION));
      aggs.add(new InternalSimpleValue(name(),diff,formatter,new ArrayList<Reducer>(),metaData()));
      InternalHistogram.Bucket newBucket=factory.createBucket(bucket.getKey(),bucket.getDocCount(),new InternalAggregations(aggs),bucket.getKeyed(),bucket.getFormatter());
      newBuckets.add(newBucket);
    }
 else {
      newBuckets.add(bucket);
    }
    lastBucketValue=thisBucketValue;
  }
  return factory.create(histo.getName(),newBuckets,histo.getOrder(),1,null,null,false,new ArrayList<Reducer>(),histo.getMetaData());
}
