{
  InetAddress address=null;
  Enumeration intfs=NetworkInterface.getNetworkInterfaces();
  List<NetworkInterface> intfsList=Lists.newArrayList();
  while (intfs.hasMoreElements()) {
    intfsList.add((NetworkInterface)intfs.nextElement());
  }
  try {
    final Method getIndexMethod=NetworkInterface.class.getDeclaredMethod("getIndex");
    getIndexMethod.setAccessible(true);
    CollectionUtil.timSort(intfsList,new Comparator<NetworkInterface>(){
      @Override public int compare(      NetworkInterface o1,      NetworkInterface o2){
        try {
          return ((Integer)getIndexMethod.invoke(o1)).intValue() - ((Integer)getIndexMethod.invoke(o2)).intValue();
        }
 catch (        Exception e) {
          throw new ElasticsearchIllegalStateException("failed to fetch index of network interface");
        }
      }
    }
);
  }
 catch (  Exception e) {
  }
  for (  NetworkInterface intf : intfsList) {
    try {
      if (!intf.isUp() || intf.isLoopback())       continue;
    }
 catch (    Exception e) {
      continue;
    }
    address=getFirstNonLoopbackAddress(intf,ip_version);
    if (address != null) {
      return address;
    }
  }
  return null;
}
