{
  Settings settings=settingsBuilder().put("discovery.type","zen").put(ZenDiscovery.SETTING_PING_TIMEOUT,"400ms").put("discovery.initial_state_timeout","500ms").build();
  logger.info("--> start 2 nodes");
  internalCluster().startNodesAsync(2,settings).get();
  ClusterHealthResponse clusterHealthResponse=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForNodes("2").get();
  assertThat(clusterHealthResponse.isTimedOut(),equalTo(false));
  logger.info("--> setting minimum master node to 2");
  setMinimumMasterNodes(2);
  for (  Client client : internalCluster()) {
    assertThat(client.admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setLocal(true).get().isTimedOut(),equalTo(false));
  }
  logger.info("--> stopping a node");
  internalCluster().stopRandomDataNode();
  logger.info("--> verifying min master node has effect");
  assertNoMasterBlockOnAllNodes();
  logger.info("--> bringing another node up");
  internalCluster().startNode(settingsBuilder().put(settings).put(ElectMasterService.DISCOVERY_ZEN_MINIMUM_MASTER_NODES,2).build());
  clusterHealthResponse=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForNodes("2").get();
  assertThat(clusterHealthResponse.isTimedOut(),equalTo(false));
}
