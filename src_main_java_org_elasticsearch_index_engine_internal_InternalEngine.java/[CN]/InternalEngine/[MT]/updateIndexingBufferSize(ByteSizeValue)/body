{
  ByteSizeValue preValue=engineConfig.getIndexingBufferSize();
  try (InternalLock _=readLock.acquire()){
    ensureOpen();
    engineConfig.setIndexingBufferSize(indexingBufferSize);
    indexWriter.getConfig().setRAMBufferSizeMB(indexingBufferSize.mbFrac());
  }
   if (preValue.bytes() != indexingBufferSize.bytes()) {
    if (indexingBufferSize == EngineConfig.INACTIVE_SHARD_INDEXING_BUFFER && preValue != EngineConfig.INACTIVE_SHARD_INDEXING_BUFFER) {
      logger.debug("updating index_buffer_size from [{}] to (inactive) [{}]",preValue,indexingBufferSize);
      try {
        flush(FlushType.COMMIT,false,false);
      }
 catch (      EngineClosedException e) {
      }
catch (      FlushNotAllowedEngineException e) {
      }
catch (      Throwable e) {
        logger.warn("failed to flush after setting shard to inactive",e);
      }
    }
 else {
      logger.debug("updating index_buffer_size from [{}] to [{}]",preValue,indexingBufferSize);
    }
  }
}
