{
synchronized (dirtyLock(delete.uid())) {
    final long currentVersion;
    VersionValue versionValue=versionMap.getUnderLock(delete.uid().bytes());
    if (versionValue == null) {
      currentVersion=loadCurrentVersionFromIndex(delete.uid());
    }
 else {
      if (enableGcDeletes && versionValue.delete() && (threadPool.estimatedTimeInMillis() - versionValue.time()) > gcDeletesInMillis) {
        currentVersion=Versions.NOT_FOUND;
      }
 else {
        currentVersion=versionValue.version();
      }
    }
    long updatedVersion;
    long expectedVersion=delete.version();
    if (delete.versionType().isVersionConflictForWrites(currentVersion,expectedVersion)) {
      if (delete.origin() == Operation.Origin.RECOVERY) {
        return;
      }
 else {
        throw new VersionConflictEngineException(shardId,delete.type(),delete.id(),currentVersion,expectedVersion);
      }
    }
    updatedVersion=delete.versionType().updateVersion(currentVersion,expectedVersion);
    final boolean found;
    if (currentVersion == Versions.NOT_FOUND) {
      found=false;
    }
 else     if (versionValue != null && versionValue.delete()) {
      found=false;
    }
 else {
      writer.deleteDocuments(delete.uid());
      found=true;
    }
    delete.updateVersion(updatedVersion,found);
    Translog.Location translogLocation=translog.add(new Translog.Delete(delete));
    versionMap.putUnderLock(delete.uid().bytes(),new DeleteVersionValue(updatedVersion,threadPool.estimatedTimeInMillis(),translogLocation));
    indexingService.postDeleteUnderLock(delete);
  }
}
