{
  addQueryMapping();
  XContentBuilder query=jsonBuilder();
  query.startObject();
  query.startObject("script");
  if (randomBoolean()) {
    query.field("script","return true");
  }
 else {
    query.startObject("script");
    query.field("inline","return true");
    query.endObject();
  }
  query.endObject();
  query.endObject();
  ParsedDocument doc=mapperService.documentMapper(typeName).parse("test",typeName,"1",XContentFactory.jsonBuilder().startObject().rawField(fieldName,new BytesArray(query.string())).endObject().bytes());
  BytesRef querySource=doc.rootDoc().getFields(fieldType.queryBuilderField.name())[0].binaryValue();
  Map<String,Object> parsedQuery=XContentHelper.convertToMap(new BytesArray(querySource),true).v2();
  assertEquals(Script.DEFAULT_SCRIPT_LANG,XContentMapValues.extractValue("script.script.lang",parsedQuery));
  query=jsonBuilder();
  query.startObject();
  query.startObject("function_score");
  query.startArray("functions");
  query.startObject();
  query.startObject("script_score");
  if (randomBoolean()) {
    query.field("script","return true");
  }
 else {
    query.startObject("script");
    query.field("inline","return true");
    query.endObject();
  }
  query.endObject();
  query.endObject();
  query.endArray();
  query.endObject();
  query.endObject();
  doc=mapperService.documentMapper(typeName).parse("test",typeName,"1",XContentFactory.jsonBuilder().startObject().rawField(fieldName,new BytesArray(query.string())).endObject().bytes());
  querySource=doc.rootDoc().getFields(fieldType.queryBuilderField.name())[0].binaryValue();
  parsedQuery=XContentHelper.convertToMap(new BytesArray(querySource),true).v2();
  assertEquals(Script.DEFAULT_SCRIPT_LANG,((List)XContentMapValues.extractValue("function_score.functions.script_score.script.lang",parsedQuery)).get(0));
}
