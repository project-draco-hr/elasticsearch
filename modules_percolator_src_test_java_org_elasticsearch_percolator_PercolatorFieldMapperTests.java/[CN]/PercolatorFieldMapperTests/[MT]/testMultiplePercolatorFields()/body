{
  String typeName="another_type";
  String percolatorMapper=XContentFactory.jsonBuilder().startObject().startObject(typeName).startObject("properties").startObject("query_field1").field("type","percolator").endObject().startObject("query_field2").field("type","percolator").endObject().endObject().endObject().endObject().string();
  mapperService.merge(typeName,new CompressedXContent(percolatorMapper),MapperService.MergeReason.MAPPING_UPDATE,true);
  QueryBuilder queryBuilder=matchQuery("field","value");
  ParsedDocument doc=mapperService.documentMapper(typeName).parse("test",typeName,"1",jsonBuilder().startObject().field("query_field1",queryBuilder).field("query_field2",queryBuilder).endObject().bytes());
  assertThat(doc.rootDoc().getFields().size(),equalTo(22));
  BytesRef queryBuilderAsBytes=doc.rootDoc().getField("query_field1.query_builder_field").binaryValue();
  assertQueryBuilder(queryBuilderAsBytes,queryBuilder);
  queryBuilderAsBytes=doc.rootDoc().getField("query_field2.query_builder_field").binaryValue();
  assertQueryBuilder(queryBuilderAsBytes,queryBuilder);
}
