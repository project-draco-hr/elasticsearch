{
  int numberOfNodes=2;
  DiscoveryNodes.Builder discoBuilder=DiscoveryNodes.builder();
  for (int i=0; i < numberOfNodes + 1; i++) {
    final DiscoveryNode node=newNode(i);
    discoBuilder=discoBuilder.add(node);
  }
  discoBuilder.localNodeId(newNode(0).getId());
  discoBuilder.masterNodeId(newNode(1).getId());
  IndexMetaData indexMetaData=IndexMetaData.builder(index).settings(Settings.builder().put(SETTING_VERSION_CREATED,Version.CURRENT).put(SETTING_NUMBER_OF_SHARDS,numberOfShards).put(SETTING_NUMBER_OF_REPLICAS,1).put(SETTING_CREATION_DATE,System.currentTimeMillis())).build();
  ClusterState.Builder state=ClusterState.builder(new ClusterName("test"));
  state.nodes(discoBuilder);
  state.metaData(MetaData.builder().put(indexMetaData,false).generateClusterUuidIfNeeded());
  IndexRoutingTable.Builder indexRoutingTableBuilder=IndexRoutingTable.builder(indexMetaData.getIndex());
  for (int i=0; i < numberOfShards; i++) {
    RoutingTable.Builder routing=new RoutingTable.Builder();
    routing.addAsNew(indexMetaData);
    final ShardId shardId=new ShardId(index,"_na_",i);
    IndexShardRoutingTable.Builder indexShardRoutingBuilder=new IndexShardRoutingTable.Builder(shardId);
    indexShardRoutingBuilder.addShard(TestShardRouting.newShardRouting(index,i,newNode(0).getId(),null,true,ShardRoutingState.STARTED));
    indexShardRoutingBuilder.addShard(TestShardRouting.newShardRouting(index,i,newNode(1).getId(),null,false,ShardRoutingState.STARTED));
    indexRoutingTableBuilder.addIndexShard(indexShardRoutingBuilder.build());
  }
  state.routingTable(RoutingTable.builder().add(indexRoutingTableBuilder.build()).build());
  return state.build();
}
