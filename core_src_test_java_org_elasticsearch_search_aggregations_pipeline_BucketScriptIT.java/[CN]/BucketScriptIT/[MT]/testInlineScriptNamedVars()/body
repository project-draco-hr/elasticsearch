{
  Map<String,String> bucketsPathsMap=new HashMap<>();
  bucketsPathsMap.put("foo","field2Sum");
  bucketsPathsMap.put("bar","field3Sum");
  bucketsPathsMap.put("baz","field4Sum");
  SearchResponse response=client().prepareSearch("idx").addAggregation(histogram("histo").field(FIELD_1_NAME).interval(interval).subAggregation(sum("field2Sum").field(FIELD_2_NAME)).subAggregation(sum("field3Sum").field(FIELD_3_NAME)).subAggregation(sum("field4Sum").field(FIELD_4_NAME)).subAggregation(bucketScript("seriesArithmetic",bucketsPathsMap,new Script("foo + bar + baz",ScriptType.INLINE,CustomScriptPlugin.NAME,null)))).execute().actionGet();
  assertSearchResponse(response);
  InternalHistogram<Bucket> histo=response.getAggregations().get("histo");
  assertThat(histo,notNullValue());
  assertThat(histo.getName(),equalTo("histo"));
  List<? extends Bucket> buckets=histo.getBuckets();
  for (int i=0; i < buckets.size(); ++i) {
    Histogram.Bucket bucket=buckets.get(i);
    if (bucket.getDocCount() == 0) {
      SimpleValue seriesArithmetic=bucket.getAggregations().get("seriesArithmetic");
      assertThat(seriesArithmetic,nullValue());
    }
 else {
      Sum field2Sum=bucket.getAggregations().get("field2Sum");
      assertThat(field2Sum,notNullValue());
      double field2SumValue=field2Sum.getValue();
      Sum field3Sum=bucket.getAggregations().get("field3Sum");
      assertThat(field3Sum,notNullValue());
      double field3SumValue=field3Sum.getValue();
      Sum field4Sum=bucket.getAggregations().get("field4Sum");
      assertThat(field4Sum,notNullValue());
      double field4SumValue=field4Sum.getValue();
      SimpleValue seriesArithmetic=bucket.getAggregations().get("seriesArithmetic");
      assertThat(seriesArithmetic,notNullValue());
      double seriesArithmeticValue=seriesArithmetic.value();
      assertThat(seriesArithmeticValue,equalTo(field2SumValue + field3SumValue + field4SumValue));
    }
  }
}
