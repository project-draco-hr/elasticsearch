{
  XContentParser.Token token;
  Script script=null;
  String currentFieldName=null;
  Map<String,String> bucketsPathsMap=null;
  String format=null;
  GapPolicy gapPolicy=GapPolicy.SKIP;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.VALUE_STRING) {
      if (FORMAT.match(currentFieldName)) {
        format=parser.text();
      }
 else       if (BUCKETS_PATH.match(currentFieldName)) {
        bucketsPathsMap=new HashMap<>();
        bucketsPathsMap.put("_value",parser.text());
      }
 else       if (GAP_POLICY.match(currentFieldName)) {
        gapPolicy=GapPolicy.parse(context,parser.text(),parser.getTokenLocation());
      }
 else       if (ScriptField.SCRIPT.match(currentFieldName)) {
        script=Script.parse(parser);
      }
 else {
        throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ reducerName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
      }
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if (BUCKETS_PATH.match(currentFieldName)) {
        List<String> paths=new ArrayList<>();
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          String path=parser.text();
          paths.add(path);
        }
        bucketsPathsMap=new HashMap<>();
        for (int i=0; i < paths.size(); i++) {
          bucketsPathsMap.put("_value" + i,paths.get(i));
        }
      }
 else {
        throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ reducerName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
      }
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if (ScriptField.SCRIPT.match(currentFieldName)) {
        script=Script.parse(parser);
      }
 else       if (BUCKETS_PATH.match(currentFieldName)) {
        Map<String,Object> map=parser.map();
        bucketsPathsMap=new HashMap<>();
        for (        Map.Entry<String,Object> entry : map.entrySet()) {
          bucketsPathsMap.put(entry.getKey(),String.valueOf(entry.getValue()));
        }
      }
 else {
        throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ reducerName+ "]: ["+ currentFieldName+ "].",parser.getTokenLocation());
      }
    }
 else {
      throw new SearchParseException(context,"Unexpected token " + token + " in ["+ reducerName+ "].",parser.getTokenLocation());
    }
  }
  if (bucketsPathsMap == null) {
    throw new SearchParseException(context,"Missing required field [" + BUCKETS_PATH.getPreferredName() + "] for series_arithmetic aggregation ["+ reducerName+ "]",parser.getTokenLocation());
  }
  if (script == null) {
    throw new SearchParseException(context,"Missing required field [" + ScriptField.SCRIPT.getPreferredName() + "] for series_arithmetic aggregation ["+ reducerName+ "]",parser.getTokenLocation());
  }
  ValueFormatter formatter=null;
  if (format != null) {
    formatter=ValueFormat.Patternable.Number.format(format).formatter();
  }
  return new BucketScriptPipelineAggregator.Factory(reducerName,bucketsPathsMap,script,formatter,gapPolicy);
}
