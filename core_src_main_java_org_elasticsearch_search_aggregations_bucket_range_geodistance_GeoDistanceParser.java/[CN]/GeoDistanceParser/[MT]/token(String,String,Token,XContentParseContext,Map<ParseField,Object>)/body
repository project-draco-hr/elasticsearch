{
  XContentParser parser=context.getParser();
  if (geoPointParser.token(aggregationName,currentFieldName,token,parser,context.getParseFieldMatcher(),otherOptions)) {
    return true;
  }
 else   if (token == XContentParser.Token.VALUE_STRING) {
    if (context.matchField(currentFieldName,UNIT_FIELD)) {
      DistanceUnit unit=DistanceUnit.fromString(parser.text());
      otherOptions.put(UNIT_FIELD,unit);
      return true;
    }
 else     if (context.matchField(currentFieldName,DISTANCE_TYPE_FIELD)) {
      GeoDistance distanceType=GeoDistance.fromString(parser.text());
      otherOptions.put(DISTANCE_TYPE_FIELD,distanceType);
      return true;
    }
  }
 else   if (token == XContentParser.Token.VALUE_BOOLEAN) {
    if (context.matchField(currentFieldName,RangeAggregator.KEYED_FIELD)) {
      boolean keyed=parser.booleanValue();
      otherOptions.put(RangeAggregator.KEYED_FIELD,keyed);
      return true;
    }
  }
 else   if (token == XContentParser.Token.START_ARRAY) {
    if (context.matchField(currentFieldName,RangeAggregator.RANGES_FIELD)) {
      List<Range> ranges=new ArrayList<>();
      while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
        String fromAsStr=null;
        String toAsStr=null;
        double from=0.0;
        double to=Double.POSITIVE_INFINITY;
        String key=null;
        String toOrFromOrKey=null;
        while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
          if (token == XContentParser.Token.FIELD_NAME) {
            toOrFromOrKey=parser.currentName();
          }
 else           if (token == XContentParser.Token.VALUE_NUMBER) {
            if (context.matchField(toOrFromOrKey,Range.FROM_FIELD)) {
              from=parser.doubleValue();
            }
 else             if (context.matchField(toOrFromOrKey,Range.TO_FIELD)) {
              to=parser.doubleValue();
            }
          }
 else           if (token == XContentParser.Token.VALUE_STRING) {
            if (context.matchField(toOrFromOrKey,Range.KEY_FIELD)) {
              key=parser.text();
            }
 else             if (context.matchField(toOrFromOrKey,Range.FROM_FIELD)) {
              fromAsStr=parser.text();
            }
 else             if (context.matchField(toOrFromOrKey,Range.TO_FIELD)) {
              toAsStr=parser.text();
            }
          }
        }
        if (fromAsStr != null || toAsStr != null) {
          ranges.add(new Range(key,Double.parseDouble(fromAsStr),Double.parseDouble(toAsStr)));
        }
 else {
          ranges.add(new Range(key,from,to));
        }
      }
      otherOptions.put(RangeAggregator.RANGES_FIELD,ranges);
      return true;
    }
  }
  return false;
}
