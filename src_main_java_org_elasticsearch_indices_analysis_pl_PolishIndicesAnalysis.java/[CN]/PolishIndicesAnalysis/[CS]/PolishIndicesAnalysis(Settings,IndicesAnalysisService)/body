{
  super(settings);
  indicesAnalysisService.analyzerProviderFactories().put("polish",new PreBuiltAnalyzerProviderFactory("polish",AnalyzerScope.INDICES,new PolishAnalyzer(Lucene.ANALYZER_VERSION)));
  indicesAnalysisService.tokenFilterFactories().put("polish_stem",new PreBuiltTokenFilterFactoryFactory(new TokenFilterFactory(){
    @Override public String name(){
      return "polish_stem";
    }
    @Override public TokenStream create(    TokenStream tokenStream){
      Trie tire;
      try {
        tire=StempelStemmer.load(PolishAnalyzer.class.getResourceAsStream(PolishAnalyzer.DEFAULT_STEMMER_FILE));
      }
 catch (      IOException ex) {
        throw new RuntimeException("Unable to load default stemming tables",ex);
      }
      return new StempelFilter(tokenStream,new StempelStemmer(tire));
    }
  }
));
}
