{
  String index="test";
  String type="type1";
  String mapping=jsonBuilder().startObject().startObject(type).startObject("_source").array("includes","included").array("excludes","excluded").endObject().endObject().endObject().string();
  assertAcked(prepareCreate(index).addMapping(type,mapping).setSettings("index.refresh_interval",-1,IndexMetaData.SETTING_VERSION_CREATED,Version.V_1_4_2.id));
  client().prepareIndex(index,type,"1").setSource(jsonBuilder().startObject().field("field","1","2").startObject("included").field("field","should be seen").field("field2","extra field to remove").endObject().startObject("excluded").field("field","should not be seen").field("field2","should not be seen").endObject().endObject()).get();
  GetResponse responseBeforeFlush=client().prepareGet(index,type,"1").setFields("_source","included.field","excluded.field").get();
  assertThat(responseBeforeFlush.isExists(),is(true));
  assertThat(responseBeforeFlush.getSourceAsMap(),not(hasKey("excluded")));
  assertThat(responseBeforeFlush.getSourceAsMap(),not(hasKey("field")));
  assertThat(responseBeforeFlush.getSourceAsMap(),hasKey("included"));
  GetResponse responseBeforeFlushWithExtraFilters=client().prepareGet(index,type,"1").setFields("included.field","excluded.field").setFetchSource(new String[]{"field","*.field"},new String[]{"*.field2"}).get();
  assertThat(responseBeforeFlushWithExtraFilters.isExists(),is(true));
  assertThat(responseBeforeFlushWithExtraFilters.getSourceAsMap(),not(hasKey("excluded")));
  assertThat(responseBeforeFlushWithExtraFilters.getSourceAsMap(),not(hasKey("field")));
  assertThat(responseBeforeFlushWithExtraFilters.getSourceAsMap(),hasKey("included"));
  assertThat((Map<String,Object>)responseBeforeFlushWithExtraFilters.getSourceAsMap().get("included"),hasKey("field"));
  assertThat((Map<String,Object>)responseBeforeFlushWithExtraFilters.getSourceAsMap().get("included"),not(hasKey("field2")));
  flush();
  GetResponse responseAfterFlush=client().prepareGet(index,type,"1").setFields("_source","included.field","excluded.field").get();
  GetResponse responseAfterFlushWithExtraFilters=client().prepareGet(index,type,"1").setFields("included.field","excluded.field").setFetchSource("*.field","*.field2").get();
  assertThat(responseAfterFlush.isExists(),is(true));
  assertThat(responseBeforeFlush.getSourceAsString(),is(responseAfterFlush.getSourceAsString()));
  assertThat(responseAfterFlushWithExtraFilters.isExists(),is(true));
  assertThat(responseBeforeFlushWithExtraFilters.getSourceAsString(),is(responseAfterFlushWithExtraFilters.getSourceAsString()));
}
