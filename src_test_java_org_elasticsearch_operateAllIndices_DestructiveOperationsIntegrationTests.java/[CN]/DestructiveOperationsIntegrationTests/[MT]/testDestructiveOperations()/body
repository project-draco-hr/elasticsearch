{
  Settings settings=ImmutableSettings.builder().put(DestructiveOperations.REQUIRES_NAME,true).build();
  assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings));
  assertAcked(client().admin().indices().prepareCreate("index1").get());
  assertAcked(client().admin().indices().prepareCreate("1index").get());
  assertAcked(client().admin().indices().prepareDelete("1index").get());
  try {
    client().admin().indices().prepareDelete("i*").get();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  try {
    client().admin().indices().prepareDelete("_all").get();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  settings=ImmutableSettings.builder().put(DestructiveOperations.REQUIRES_NAME,false).build();
  assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings));
  assertAcked(client().admin().indices().prepareDelete("_all").get());
  assertThat(client().admin().indices().prepareExists("_all").get().isExists(),equalTo(false));
  settings=ImmutableSettings.builder().put(DestructiveOperations.REQUIRES_NAME,true).build();
  assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings));
  assertAcked(client().admin().indices().prepareCreate("index1").get());
  assertAcked(client().admin().indices().prepareCreate("1index").get());
  ensureYellow();
  assertAcked(client().admin().indices().prepareClose("1index").get());
  try {
    client().admin().indices().prepareClose("_all").get();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  try {
    assertAcked(client().admin().indices().prepareOpen("_all").get());
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  try {
    client().admin().indices().prepareClose("*").get();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  try {
    assertAcked(client().admin().indices().prepareOpen("*").get());
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  settings=ImmutableSettings.builder().put(DestructiveOperations.REQUIRES_NAME,false).build();
  assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings));
  assertAcked(client().admin().indices().prepareClose("_all").get());
  assertAcked(client().admin().indices().prepareOpen("_all").get());
  client().admin().indices().prepareDelete("_all").get();
  settings=ImmutableSettings.builder().put(DestructiveOperations.REQUIRES_NAME,true).build();
  assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings));
  assertAcked(client().admin().indices().prepareCreate("index1").get());
  assertAcked(client().admin().indices().prepareCreate("1index").get());
  client().prepareDeleteByQuery("1index").setQuery(QueryBuilders.matchAllQuery()).get();
  try {
    client().prepareDeleteByQuery("_all").setQuery(QueryBuilders.matchAllQuery()).get();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  try {
    client().prepareDeleteByQuery().setQuery(QueryBuilders.matchAllQuery()).get();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  settings=ImmutableSettings.builder().put(DestructiveOperations.REQUIRES_NAME,false).build();
  assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings));
  client().prepareDeleteByQuery().setQuery(QueryBuilders.matchAllQuery()).get();
  client().prepareDeleteByQuery("_all").setQuery(QueryBuilders.matchAllQuery()).get();
  assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings));
  client().prepareDeleteByQuery().setQuery(QueryBuilders.matchAllQuery()).get();
  client().admin().indices().prepareDelete("_all").get();
  settings=ImmutableSettings.builder().put(DestructiveOperations.REQUIRES_NAME,true).build();
  assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings));
  assertAcked(client().admin().indices().prepareCreate("index1").addMapping("1","field1","type=string").get());
  assertAcked(client().admin().indices().prepareCreate("1index").addMapping("1","field1","type=string").get());
  client().admin().indices().prepareDeleteMapping("1index").setType("1").get();
  try {
    client().admin().indices().prepareDeleteMapping("_all").setType("1").get();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  try {
    client().admin().indices().prepareDeleteMapping().setIndices("*").setType("1").get();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  settings=ImmutableSettings.builder().put(DestructiveOperations.REQUIRES_NAME,false).build();
  assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings));
  assertAcked(client().admin().indices().preparePutMapping("1index").setType("1").setSource("field1","type=string"));
  assertAcked(client().admin().indices().prepareDeleteMapping().setIndices("*").setType("1"));
  assertAcked(client().admin().indices().preparePutMapping("1index").setType("1").setSource("field1","type=string"));
  assertAcked(client().admin().indices().prepareDeleteMapping("_all").setType("1"));
}
