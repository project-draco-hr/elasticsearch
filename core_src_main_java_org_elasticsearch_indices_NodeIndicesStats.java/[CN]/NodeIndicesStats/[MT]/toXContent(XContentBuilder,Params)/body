{
  String level=params.param("level","node");
  boolean isLevelValid="node".equalsIgnoreCase(level) || "indices".equalsIgnoreCase(level) || "shards".equalsIgnoreCase(level);
  if (!isLevelValid) {
    return builder;
  }
  builder.startObject(Fields.INDICES);
  stats.toXContent(builder,params);
  if ("indices".equals(level)) {
    Map<Index,CommonStats> indexStats=createStatsByIndex();
    builder.startObject(Fields.INDICES);
    for (    Map.Entry<Index,CommonStats> entry : indexStats.entrySet()) {
      builder.startObject(entry.getKey().getName());
      entry.getValue().toXContent(builder,params);
      builder.endObject();
    }
    builder.endObject();
  }
 else   if ("shards".equals(level)) {
    builder.startObject("shards");
    for (    Map.Entry<Index,List<IndexShardStats>> entry : statsByShard.entrySet()) {
      builder.startArray(entry.getKey().getName());
      for (      IndexShardStats indexShardStats : entry.getValue()) {
        builder.startObject().startObject(String.valueOf(indexShardStats.getShardId().getId()));
        for (        ShardStats shardStats : indexShardStats.getShards()) {
          shardStats.toXContent(builder,params);
        }
        builder.endObject().endObject();
      }
      builder.endArray();
    }
    builder.endObject();
  }
  builder.endObject();
  return builder;
}
