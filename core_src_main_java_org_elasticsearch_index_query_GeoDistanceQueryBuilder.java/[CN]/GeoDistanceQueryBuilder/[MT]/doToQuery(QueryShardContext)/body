{
  MappedFieldType fieldType=shardContext.fieldMapper(fieldName);
  if (fieldType == null) {
    if (ignoreUnmapped) {
      return new MatchNoDocsQuery();
    }
 else {
      throw new QueryShardException(shardContext,"failed to find geo_point field [" + fieldName + "]");
    }
  }
  if (!(fieldType instanceof BaseGeoPointFieldMapper.GeoPointFieldType)) {
    throw new QueryShardException(shardContext,"field [" + fieldName + "] is not a geo_point field");
  }
  final Version indexVersionCreated=shardContext.indexVersionCreated();
  QueryValidationException exception=checkLatLon(shardContext.indexVersionCreated().before(Version.V_2_0_0));
  if (exception != null) {
    throw new QueryShardException(shardContext,"couldn't validate latitude/ longitude values",exception);
  }
  if (indexVersionCreated.onOrAfter(Version.V_2_2_0) || GeoValidationMethod.isCoerce(validationMethod)) {
    GeoUtils.normalizePoint(center,true,true);
  }
  double normDistance=geoDistance.normalize(this.distance,DistanceUnit.DEFAULT);
  if (indexVersionCreated.onOrAfter(Version.V_5_0_0_alpha6)) {
    return LatLonPoint.newDistanceQuery(fieldType.name(),center.lat(),center.lon(),normDistance);
  }
 else   if (indexVersionCreated.before(Version.V_2_2_0)) {
    LegacyGeoPointFieldMapper.LegacyGeoPointFieldType geoFieldType=(LegacyGeoPointFieldMapper.LegacyGeoPointFieldType)fieldType;
    IndexGeoPointFieldData indexFieldData=shardContext.getForField(fieldType);
    String bboxOptimization=Strings.isEmpty(optimizeBbox) ? DEFAULT_OPTIMIZE_BBOX : optimizeBbox;
    return new GeoDistanceRangeQuery(center,null,normDistance,true,false,geoDistance,geoFieldType,indexFieldData,bboxOptimization);
  }
  final GeoPointField.TermEncoding encoding=(indexVersionCreated.before(Version.V_2_3_0)) ? GeoPointField.TermEncoding.NUMERIC : GeoPointField.TermEncoding.PREFIX;
  if (indexVersionCreated.before(Version.V_5_0_0_alpha4)) {
    normDistance=GeoUtils.maxRadialDistance(center,normDistance);
  }
  return new GeoPointDistanceQuery(fieldType.name(),encoding,center.lat(),center.lon(),normDistance);
}
