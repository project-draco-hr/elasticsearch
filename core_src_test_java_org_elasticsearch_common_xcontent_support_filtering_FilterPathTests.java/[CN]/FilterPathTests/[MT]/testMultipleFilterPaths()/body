{
  String[] inputs={"foo.**.bar.*","test.dot\\.ted"};
  FilterPath[] filterPaths=FilterPath.compile(inputs);
  assertNotNull(filterPaths);
  assertThat(filterPaths,arrayWithSize(2));
  FilterPath filterPath=filterPaths[0];
  assertNotNull(filterPath);
  assertThat(filterPath.matches(),is(false));
  assertThat(filterPath.getSegment(),equalTo("foo"));
  filterPath=filterPath.getNext();
  assertNotNull(filterPath);
  assertThat(filterPath.matches(),is(false));
  assertThat(filterPath.isDoubleWildcard(),equalTo(true));
  assertThat(filterPath.getSegment(),equalTo("**"));
  filterPath=filterPath.getNext();
  assertNotNull(filterPath);
  assertThat(filterPath.matches(),is(false));
  assertThat(filterPath.getSegment(),equalTo("bar"));
  filterPath=filterPath.getNext();
  assertNotNull(filterPath);
  assertThat(filterPath.isSimpleWildcard(),equalTo(true));
  assertThat(filterPath.getSegment(),equalTo("*"));
  filterPath=filterPath.getNext();
  assertNotNull(filterPath);
  assertThat(filterPath.matches(),is(true));
  assertThat(filterPath.getSegment(),isEmptyString());
  assertSame(filterPath,FilterPath.EMPTY);
  filterPath=filterPaths[1];
  assertNotNull(filterPath);
  assertThat(filterPath.matches(),is(false));
  assertThat(filterPath.getSegment(),equalTo("test"));
  filterPath=filterPath.getNext();
  assertNotNull(filterPath);
  assertThat(filterPath.matches(),is(false));
  assertThat(filterPath.getSegment(),equalTo("dot.ted"));
  filterPath=filterPath.getNext();
  assertNotNull(filterPath);
  assertThat(filterPath.matches(),is(true));
  assertThat(filterPath.getSegment(),isEmptyString());
  assertSame(filterPath,FilterPath.EMPTY);
}
