{
  Index index=new Index("test");
  Injector parentInjector=new ModulesBuilder().add(new SettingsModule(settings),new EnvironmentModule(new Environment(settings)),new IndicesAnalysisModule()).createInjector();
  Injector injector=new ModulesBuilder().add(new IndexSettingsModule(index,settings),new IndexNameModule(index),new AnalysisModule(settings,parentInjector.getInstance(IndicesAnalysisService.class))).createChildInjector(parentInjector);
  AnalysisService analysisService=injector.getInstance(AnalysisService.class);
  Analyzer analyzer=analysisService.analyzer("custom1").analyzer();
  assertThat(analyzer,instanceOf(CustomAnalyzer.class));
  CustomAnalyzer custom1=(CustomAnalyzer)analyzer;
  assertThat(custom1.tokenizerFactory(),instanceOf(StandardTokenizerFactory.class));
  assertThat(custom1.tokenFilters().length,equalTo(2));
  StopTokenFilterFactory stop1=(StopTokenFilterFactory)custom1.tokenFilters()[0];
  assertThat(stop1.stopWords().size(),equalTo(1));
  assertThat((Iterable<String>)stop1.stopWords(),hasItem("test-stop"));
  analyzer=analysisService.analyzer("custom2").analyzer();
  assertThat(analyzer,instanceOf(CustomAnalyzer.class));
  CustomAnalyzer custom2=(CustomAnalyzer)analyzer;
  analyzer=analysisService.analyzer("alias1").analyzer();
  assertThat(analyzer,instanceOf(StandardAnalyzer.class));
  analyzer=analysisService.analyzer("custom3").analyzer();
  assertThat(analyzer,instanceOf(CustomAnalyzer.class));
  CustomAnalyzer custom3=(CustomAnalyzer)analyzer;
  assertThat(custom3.tokenFilters()[0],instanceOf(PhoneticTokenFilterFactory.class));
  analyzer=analysisService.analyzer("custom4").analyzer();
  assertThat(analyzer,instanceOf(CustomAnalyzer.class));
  CustomAnalyzer custom4=(CustomAnalyzer)analyzer;
  assertThat(custom4.tokenFilters()[0],instanceOf(MyFilterTokenFilterFactory.class));
  Set<String> wordList=Analysis.getWordSet(null,settings,"index.analysis.filter.dict_dec.word_list");
  MatcherAssert.assertThat(wordList.size(),equalTo(6));
  MatcherAssert.assertThat(wordList,hasItems("donau","dampf","schiff","spargel","creme","suppe"));
}
