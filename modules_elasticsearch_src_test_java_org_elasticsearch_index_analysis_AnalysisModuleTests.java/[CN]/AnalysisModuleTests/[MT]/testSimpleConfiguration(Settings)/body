{
  Index index=new Index("test");
  Injector injector=new ModulesBuilder().add(new IndexSettingsModule(settings),new IndexNameModule(index),new AnalysisModule(settings)).createInjector();
  AnalysisService analysisService=injector.getInstance(AnalysisService.class);
  Analyzer analyzer=analysisService.analyzer("custom1").analyzer();
  assertThat(analyzer,instanceOf(CustomAnalyzer.class));
  CustomAnalyzer custom1=(CustomAnalyzer)analyzer;
  assertThat(custom1.tokenizerFactory(),instanceOf(StandardTokenizerFactory.class));
  assertThat(custom1.tokenFilters().length,equalTo(2));
  StopTokenFilterFactory stop1=(StopTokenFilterFactory)custom1.tokenFilters()[0];
  assertThat(stop1.stopWords().size(),equalTo(1));
  assertThat((Iterable<String>)stop1.stopWords(),hasItem("test-stop"));
  analyzer=analysisService.analyzer("custom2").analyzer();
  assertThat(analyzer,instanceOf(CustomAnalyzer.class));
  CustomAnalyzer custom2=(CustomAnalyzer)analyzer;
  HtmlStripCharFilterFactory html=(HtmlStripCharFilterFactory)custom2.charFilters()[0];
  assertThat(html.readAheadLimit(),equalTo(HTMLStripCharFilter.DEFAULT_READ_AHEAD));
  html=(HtmlStripCharFilterFactory)custom2.charFilters()[1];
  assertThat(html.readAheadLimit(),equalTo(1024));
}
