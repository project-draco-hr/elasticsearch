{
  final GetRequest getRequest=new GetRequest(request.param("index"),request.param("type"),request.param("id"));
  getRequest.listenerThreaded(false);
  getRequest.threadedOperation(true);
  client.get(getRequest,new ActionListener<GetResponse>(){
    @Override public void onResponse(    GetResponse result){
      try {
        if (!result.exists()) {
          JsonBuilder builder=restJsonBuilder(request);
          builder.startObject();
          builder.field("_index",result.index());
          builder.field("_type",result.type());
          builder.field("_id",result.id());
          builder.endObject();
          channel.sendResponse(new JsonRestResponse(request,NOT_FOUND,builder));
        }
 else {
          JsonBuilder builder=restJsonBuilder(request);
          builder.startObject();
          builder.field("_index",result.index());
          builder.field("_type",result.type());
          builder.field("_id",result.id());
          builder.raw(", \"_source\" : ");
          builder.raw(result.source());
          builder.endObject();
          channel.sendResponse(new JsonRestResponse(request,OK,builder));
        }
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new JsonThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
