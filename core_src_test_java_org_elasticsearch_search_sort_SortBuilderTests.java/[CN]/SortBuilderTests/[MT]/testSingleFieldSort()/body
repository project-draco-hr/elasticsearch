{
  SortOrder order=randomBoolean() ? SortOrder.ASC : SortOrder.DESC;
  String json="{ \"sort\" : { \"field1\" : \"" + order + "\" }}";
  List<SortBuilder<?>> result=parseSort(json);
  assertEquals(1,result.size());
  SortBuilder<?> sortBuilder=result.get(0);
  assertEquals(new FieldSortBuilder("field1").order(order),sortBuilder);
  json="{ \"sort\" : \"field1\" }";
  result=parseSort(json);
  assertEquals(1,result.size());
  sortBuilder=result.get(0);
  assertEquals(new FieldSortBuilder("field1"),sortBuilder);
  json="{ \"sort\" : [\"field1\"] }";
  result=parseSort(json);
  assertEquals(1,result.size());
  sortBuilder=result.get(0);
  assertEquals(new FieldSortBuilder("field1"),sortBuilder);
  json="{ \"sort\" : { \"_doc\" : \"" + order + "\" }}";
  result=parseSort(json);
  assertEquals(1,result.size());
  sortBuilder=result.get(0);
  assertEquals(new FieldSortBuilder("_doc").order(order),sortBuilder);
  json="{ \"sort\" : \"_doc\" }";
  result=parseSort(json);
  assertEquals(1,result.size());
  sortBuilder=result.get(0);
  assertEquals(new FieldSortBuilder("_doc"),sortBuilder);
  json="{ \"sort\" : { \"_score\" : \"" + order + "\" }}";
  result=parseSort(json);
  assertEquals(1,result.size());
  sortBuilder=result.get(0);
  assertEquals(new ScoreSortBuilder().order(order),sortBuilder);
  json="{ \"sort\" : \"_score\" }";
  result=parseSort(json);
  assertEquals(1,result.size());
  sortBuilder=result.get(0);
  assertEquals(new ScoreSortBuilder(),sortBuilder);
  json="{ \"sort\" : [" + "{\"_geoDistance\" : {" + "\"pin.location\" : \"40,-70\" } }"+ "] }";
  result=parseSort(json);
  assertEquals(1,result.size());
  sortBuilder=result.get(0);
  assertEquals(new GeoDistanceSortBuilder("pin.location",40,-70),sortBuilder);
  json="{ \"sort\" : [" + "{\"_geo_distance\" : {" + "\"pin.location\" : \"40,-70\" } }"+ "] }";
  result=parseSort(json);
  assertEquals(1,result.size());
  sortBuilder=result.get(0);
  assertEquals(new GeoDistanceSortBuilder("pin.location",40,-70),sortBuilder);
}
