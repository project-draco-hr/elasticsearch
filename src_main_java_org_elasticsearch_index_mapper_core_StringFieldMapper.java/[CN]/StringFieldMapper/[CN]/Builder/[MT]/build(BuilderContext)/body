{
  if (positionOffsetGap > 0) {
    indexAnalyzer=new NamedAnalyzer(indexAnalyzer,positionOffsetGap);
    searchAnalyzer=new NamedAnalyzer(searchAnalyzer,positionOffsetGap);
    searchQuotedAnalyzer=new NamedAnalyzer(searchQuotedAnalyzer,positionOffsetGap);
  }
  FieldType defaultFieldType=new FieldType(Defaults.FIELD_TYPE);
  if (fieldType.indexed() && !fieldType.tokenized()) {
    defaultFieldType.setOmitNorms(true);
    defaultFieldType.setIndexOptions(IndexOptions.DOCS_ONLY);
    if (!omitNormsSet && boost == Defaults.BOOST) {
      fieldType.setOmitNorms(true);
    }
    if (!indexOptionsSet) {
      fieldType.setIndexOptions(IndexOptions.DOCS_ONLY);
    }
  }
  defaultFieldType.freeze();
  StringFieldMapper fieldMapper=new StringFieldMapper(buildNames(context),boost,fieldType,defaultFieldType,docValues,nullValue,indexAnalyzer,searchAnalyzer,searchQuotedAnalyzer,positionOffsetGap,ignoreAbove,postingsProvider,docValuesProvider,similarity,normsLoading,fieldDataSettings,context.indexSettings(),multiFieldsBuilder.build(this,context));
  fieldMapper.includeInAll(includeInAll);
  return fieldMapper;
}
