{
  String[] aliases=request.paramAsStringArray("name",Strings.EMPTY_ARRAY);
  final String[] indices=Strings.splitStringByCommaToArray(request.param("index"));
  final GetAliasesRequest getAliasesRequest=new GetAliasesRequest(aliases);
  getAliasesRequest.indices(indices);
  if (request.hasParam("ignore_indices")) {
    getAliasesRequest.ignoreIndices(IgnoreIndices.fromString(request.param("ignore_indices")));
  }
  client.admin().indices().getAliases(getAliasesRequest,new ActionListener<GetAliasesResponse>(){
    @Override public void onResponse(    GetAliasesResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        if (response.getAliases().isEmpty()) {
          String message=String.format(Locale.ROOT,"alias [%s] missing",toNamesString(getAliasesRequest.aliases()));
          builder.startObject().field("error",message).field("status",RestStatus.NOT_FOUND.getStatus()).endObject();
          channel.sendResponse(new XContentRestResponse(request,RestStatus.NOT_FOUND,builder));
          return;
        }
        builder.startObject();
        for (        Map.Entry<String,List<AliasMetaData>> entry : response.getAliases().entrySet()) {
          builder.startObject(entry.getKey(),XContentBuilder.FieldCaseConversion.NONE);
          builder.startObject(Fields.ALIASES);
          for (          AliasMetaData alias : entry.getValue()) {
            AliasMetaData.Builder.toXContent(alias,builder,ToXContent.EMPTY_PARAMS);
          }
          builder.endObject();
          builder.endObject();
        }
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
