{
  Query rawParentFilter;
  if (parentObjectMapper == null) {
    rawParentFilter=Queries.newNonNestedFilter();
  }
 else {
    rawParentFilter=parentObjectMapper.nestedTypeFilter();
  }
  BitSetProducer parentFilter=context.bitsetFilterCache().getBitSetProducer(rawParentFilter);
  Query childFilter=childObjectMapper.nestedTypeFilter();
  Query q=Queries.filtered(query(),new NestedChildrenQuery(parentFilter,childFilter,hitContext));
  if (size() == 0) {
    return new TopDocs(context.searcher().count(q),Lucene.EMPTY_SCORE_DOCS,0);
  }
 else {
    int topN=Math.min(from() + size(),context.searcher().getIndexReader().maxDoc());
    TopDocsCollector topDocsCollector;
    if (sort() != null) {
      try {
        topDocsCollector=TopFieldCollector.create(sort().sort,topN,true,trackScores(),trackScores());
      }
 catch (      IOException e) {
        throw ExceptionsHelper.convertToElastic(e);
      }
    }
 else {
      topDocsCollector=TopScoreDocCollector.create(topN);
    }
    try {
      context.searcher().search(q,topDocsCollector);
    }
  finally {
      clearReleasables(Lifetime.COLLECTION);
    }
    return topDocsCollector.topDocs(from(),size());
  }
}
