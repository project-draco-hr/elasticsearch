{
  if (this.discoNodes != null) {
    return this.discoNodes;
  }
  try {
    HTTP_TRANSPORT=GoogleNetHttpTransport.newTrustedTransport();
  }
 catch (  GeneralSecurityException e) {
  }
catch (  IOException e) {
  }
  JSON_FACTORY=new JacksonFactory();
  String project=componentSettings.get(Fields.PROJECT,settings.get("cloud." + Fields.PROJECT));
  String zone=componentSettings.get(Fields.ZONE,settings.get("cloud." + Fields.ZONE));
  if (!checkProperty(Fields.PROJECT,project))   return null;
  if (!checkProperty(Fields.ZONE,zone))   return null;
  try {
    logger.debug("starting GCE discovery service for project [{}] on zone [{}]",project,zone);
    ComputeCredential credential=new ComputeCredential.Builder(HTTP_TRANSPORT,JSON_FACTORY).build();
    credential.refreshToken();
    logger.debug("token [{}] will expire in [{}] s",credential.getAccessToken(),credential.getExpiresInSeconds());
    compute=new Compute.Builder(HTTP_TRANSPORT,JSON_FACTORY,null).setApplicationName(Fields.VERSION).setHttpRequestInitializer(credential).build();
    this.discoNodes=buildNodes(project,zone);
  }
 catch (  Throwable t) {
    logger.warn("error while trying to find nodes for GCE service [{}]: {}: {}",project,t.getClass().getName(),t.getMessage());
    logger.debug("error found is: ",t);
    this.discoNodes=Lists.newArrayList();
  }
  logger.debug("using dynamic discovery nodes {}",discoNodes);
  return this.discoNodes;
}
