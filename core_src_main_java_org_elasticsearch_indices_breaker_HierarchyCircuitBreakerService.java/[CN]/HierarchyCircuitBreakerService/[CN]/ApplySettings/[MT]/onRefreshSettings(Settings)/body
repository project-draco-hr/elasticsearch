{
  ByteSizeValue newFielddataMax=settings.getAsMemory(FIELDDATA_CIRCUIT_BREAKER_LIMIT_SETTING,null);
  Double newFielddataOverhead=settings.getAsDouble(FIELDDATA_CIRCUIT_BREAKER_OVERHEAD_SETTING,null);
  if (newFielddataMax != null || newFielddataOverhead != null) {
    long newFielddataLimitBytes=newFielddataMax == null ? HierarchyCircuitBreakerService.this.fielddataSettings.getLimit() : newFielddataMax.bytes();
    newFielddataOverhead=newFielddataOverhead == null ? HierarchyCircuitBreakerService.this.fielddataSettings.getOverhead() : newFielddataOverhead;
    BreakerSettings newFielddataSettings=new BreakerSettings(CircuitBreaker.FIELDDATA,newFielddataLimitBytes,newFielddataOverhead,HierarchyCircuitBreakerService.this.fielddataSettings.getType());
    registerBreaker(newFielddataSettings);
    HierarchyCircuitBreakerService.this.fielddataSettings=newFielddataSettings;
    logger.info("Updated breaker settings fielddata: {}",newFielddataSettings);
  }
  ByteSizeValue newRequestMax=settings.getAsMemory(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING,null);
  Double newRequestOverhead=settings.getAsDouble(REQUEST_CIRCUIT_BREAKER_OVERHEAD_SETTING,null);
  if (newRequestMax != null || newRequestOverhead != null) {
    long newRequestLimitBytes=newRequestMax == null ? HierarchyCircuitBreakerService.this.requestSettings.getLimit() : newRequestMax.bytes();
    newRequestOverhead=newRequestOverhead == null ? HierarchyCircuitBreakerService.this.requestSettings.getOverhead() : newRequestOverhead;
    BreakerSettings newRequestSettings=new BreakerSettings(CircuitBreaker.REQUEST,newRequestLimitBytes,newRequestOverhead,HierarchyCircuitBreakerService.this.requestSettings.getType());
    registerBreaker(newRequestSettings);
    HierarchyCircuitBreakerService.this.requestSettings=newRequestSettings;
    logger.info("Updated breaker settings request: {}",newRequestSettings);
  }
  long oldParentMax=HierarchyCircuitBreakerService.this.parentSettings.getLimit();
  ByteSizeValue newParentMax=settings.getAsMemory(TOTAL_CIRCUIT_BREAKER_LIMIT_SETTING,null);
  if (newParentMax != null && (newParentMax.bytes() != oldParentMax)) {
    BreakerSettings newParentSettings=new BreakerSettings(CircuitBreaker.PARENT,newParentMax.bytes(),1.0,CircuitBreaker.Type.PARENT);
    validateSettings(new BreakerSettings[]{newParentSettings});
    HierarchyCircuitBreakerService.this.parentSettings=newParentSettings;
    logger.info("Updated breaker settings parent: {}",newParentSettings);
  }
}
