{
  createIndex("test");
  client().prepareIndex("test","test","1").setSource("description","the quick brown fox jumped over the lazy dog").get();
  client().prepareIndex("test","test","2").setSource("description","the quick black fox leaped over the sleeping dog").get();
  refresh();
  SearchResponse searchResponse=client().prepareSearch("test").setQuery(spanNotQuery().include(spanNearQuery().clause(QueryBuilders.spanTermQuery("description","quick")).clause(QueryBuilders.spanTermQuery("description","fox")).slop(1)).exclude(spanTermQuery("description","brown"))).get();
  assertHitCount(searchResponse,1l);
  searchResponse=client().prepareSearch("test").setQuery(spanNotQuery().include(spanNearQuery().clause(QueryBuilders.spanTermQuery("description","quick")).clause(QueryBuilders.spanTermQuery("description","fox")).slop(1)).exclude(spanTermQuery("description","sleeping")).dist(5)).get();
  assertHitCount(searchResponse,1l);
  searchResponse=client().prepareSearch("test").setQuery(spanNotQuery().include(spanNearQuery().clause(QueryBuilders.spanTermQuery("description","quick")).clause(QueryBuilders.spanTermQuery("description","fox")).slop(1)).exclude(spanTermQuery("description","jumped")).pre(1).post(1)).get();
  assertHitCount(searchResponse,1l);
  try {
    client().prepareSearch("test").setQuery(spanNotQuery().include(spanNearQuery().clause(QueryBuilders.spanTermQuery("description","quick")).clause(QueryBuilders.spanTermQuery("description","fox")).slop(1)).exclude(spanTermQuery("description","jumped")).dist(2).pre(2)).get();
    fail("ElasticsearchIllegalArgumentException should have been caught");
  }
 catch (  ElasticsearchException e) {
    assertThat("ElasticsearchIllegalArgumentException should have been caught",e.getDetailedMessage(),containsString("spanNot can either use [dist] or [pre] & [post] (or none)"));
  }
}
