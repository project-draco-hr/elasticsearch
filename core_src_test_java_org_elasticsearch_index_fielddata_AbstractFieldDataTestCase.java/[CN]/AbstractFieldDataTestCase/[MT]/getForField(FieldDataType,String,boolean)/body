{
  final MappedFieldType fieldType;
  final BuilderContext context=new BuilderContext(indexService.settingsService().getSettings(),new ContentPath(1));
  if (type.getType().equals("string")) {
    fieldType=MapperBuilders.stringField(fieldName).tokenized(false).docValues(docValues).fieldDataSettings(type.getSettings()).build(context).fieldType();
  }
 else   if (type.getType().equals("float")) {
    fieldType=MapperBuilders.floatField(fieldName).docValues(docValues).fieldDataSettings(type.getSettings()).build(context).fieldType();
  }
 else   if (type.getType().equals("double")) {
    fieldType=MapperBuilders.doubleField(fieldName).docValues(docValues).fieldDataSettings(type.getSettings()).build(context).fieldType();
  }
 else   if (type.getType().equals("long")) {
    fieldType=MapperBuilders.longField(fieldName).docValues(docValues).fieldDataSettings(type.getSettings()).build(context).fieldType();
  }
 else   if (type.getType().equals("int")) {
    fieldType=MapperBuilders.integerField(fieldName).docValues(docValues).fieldDataSettings(type.getSettings()).build(context).fieldType();
  }
 else   if (type.getType().equals("short")) {
    fieldType=MapperBuilders.shortField(fieldName).docValues(docValues).fieldDataSettings(type.getSettings()).build(context).fieldType();
  }
 else   if (type.getType().equals("byte")) {
    fieldType=MapperBuilders.byteField(fieldName).docValues(docValues).fieldDataSettings(type.getSettings()).build(context).fieldType();
  }
 else   if (type.getType().equals("geo_point")) {
    fieldType=MapperBuilders.geoPointField(fieldName).docValues(docValues).fieldDataSettings(type.getSettings()).build(context).fieldType();
  }
 else   if (type.getType().equals("_parent")) {
    fieldType=new ParentFieldMapper.Builder("_type").type(fieldName).build(context).fieldType();
  }
 else   if (type.getType().equals("binary")) {
    fieldType=MapperBuilders.binaryField(fieldName).docValues(docValues).fieldDataSettings(type.getSettings()).build(context).fieldType();
  }
 else {
    throw new UnsupportedOperationException(type.getType());
  }
  return ifdService.getForField(fieldType);
}
