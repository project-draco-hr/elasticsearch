{
  final MappedFieldType fieldType;
  final BuilderContext context=new BuilderContext(indexService.getIndexSettings().getSettings(),new ContentPath(1));
  if (type.equals("string")) {
    fieldType=new StringFieldMapper.Builder(fieldName).tokenized(false).fielddata(docValues == false).docValues(docValues).build(context).fieldType();
  }
 else   if (type.equals("float")) {
    fieldType=new LegacyFloatFieldMapper.Builder(fieldName).docValues(docValues).build(context).fieldType();
  }
 else   if (type.equals("double")) {
    fieldType=new LegacyDoubleFieldMapper.Builder(fieldName).docValues(docValues).build(context).fieldType();
  }
 else   if (type.equals("long")) {
    fieldType=new LegacyLongFieldMapper.Builder(fieldName).docValues(docValues).build(context).fieldType();
  }
 else   if (type.equals("int")) {
    fieldType=new LegacyIntegerFieldMapper.Builder(fieldName).docValues(docValues).build(context).fieldType();
  }
 else   if (type.equals("short")) {
    fieldType=new LegacyShortFieldMapper.Builder(fieldName).docValues(docValues).build(context).fieldType();
  }
 else   if (type.equals("byte")) {
    fieldType=new LegacyByteFieldMapper.Builder(fieldName).docValues(docValues).build(context).fieldType();
  }
 else   if (type.equals("geo_point")) {
    if (indexService.getIndexSettings().getIndexVersionCreated().before(Version.V_2_2_0)) {
      fieldType=new LegacyGeoPointFieldMapper.Builder(fieldName).docValues(docValues).build(context).fieldType();
    }
 else {
      fieldType=new GeoPointFieldMapper.Builder(fieldName).docValues(docValues).build(context).fieldType();
    }
  }
 else   if (type.equals("_parent")) {
    fieldType=new ParentFieldMapper.Builder("_type").type(fieldName).build(context).fieldType();
  }
 else   if (type.equals("binary")) {
    fieldType=new BinaryFieldMapper.Builder(fieldName).docValues(docValues).build(context).fieldType();
  }
 else {
    throw new UnsupportedOperationException(type);
  }
  return ifdService.getForField(fieldType);
}
