{
  Rounding tzRounding;
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).timeZone(DateTimeZone.forID("UTC")).build();
  assertThat(tzRounding.round(time("2014-10-26T01:01:01",DateTimeZone.forOffsetHours(2))),equalTo(time("2014-10-26T01:00:00",DateTimeZone.forOffsetHours(2))));
  assertThat(tzRounding.nextRoundingValue(time("2014-10-26T01:00:00",DateTimeZone.forOffsetHours(2))),equalTo(time("2014-10-26T02:00:00",DateTimeZone.forOffsetHours(2))));
  assertThat(tzRounding.nextRoundingValue(time("2014-10-26T02:00:00",DateTimeZone.forOffsetHours(2))),equalTo(time("2014-10-26T03:00:00",DateTimeZone.forOffsetHours(2))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).timeZone(DateTimeZone.forID("CET")).build();
  assertThat(tzRounding.round(time("2014-10-26T01:01:01",DateTimeZone.forOffsetHours(2))),equalTo(time("2014-10-26T01:00:00",DateTimeZone.forOffsetHours(2))));
  assertThat(tzRounding.nextRoundingValue(time("2014-10-26T01:00:00",DateTimeZone.forOffsetHours(2))),equalTo(time("2014-10-26T02:00:00",DateTimeZone.forOffsetHours(2))));
  assertThat(tzRounding.nextRoundingValue(time("2014-10-26T02:00:00",DateTimeZone.forOffsetHours(2))),equalTo(time("2014-10-26T03:00:00",DateTimeZone.forOffsetHours(2))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).timeZone(DateTimeZone.forID("UTC")).build();
  assertThat(tzRounding.round(time("2014-03-30T01:01:01",DateTimeZone.forOffsetHours(1))),equalTo(time("2014-03-30T01:00:00",DateTimeZone.forOffsetHours(1))));
  assertThat(tzRounding.nextRoundingValue(time("2014-03-30T01:00:00",DateTimeZone.forOffsetHours(1))),equalTo(time("2014-03-30T02:00:00",DateTimeZone.forOffsetHours(1))));
  assertThat(tzRounding.nextRoundingValue(time("2014-03-30T02:00:00",DateTimeZone.forOffsetHours(1))),equalTo(time("2014-03-30T03:00:00",DateTimeZone.forOffsetHours(1))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).timeZone(DateTimeZone.forID("CET")).build();
  assertThat(tzRounding.round(time("2014-03-30T01:01:01",DateTimeZone.forOffsetHours(1))),equalTo(time("2014-03-30T01:00:00",DateTimeZone.forOffsetHours(1))));
  assertThat(tzRounding.nextRoundingValue(time("2014-03-30T01:00:00",DateTimeZone.forOffsetHours(1))),equalTo(time("2014-03-30T02:00:00",DateTimeZone.forOffsetHours(1))));
  assertThat(tzRounding.nextRoundingValue(time("2014-03-30T02:00:00",DateTimeZone.forOffsetHours(1))),equalTo(time("2014-03-30T03:00:00",DateTimeZone.forOffsetHours(1))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).timeZone(DateTimeZone.forID("UTC")).build();
  assertThat(tzRounding.round(time("2014-03-09T03:01:01",DateTimeZone.forID("America/Chicago"))),equalTo(time("2014-03-09T03:00:00",DateTimeZone.forID("America/Chicago"))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).timeZone(DateTimeZone.forID("America/Chicago")).build();
  assertThat(tzRounding.round(time("2014-03-09T03:01:01",DateTimeZone.forID("America/Chicago"))),equalTo(time("2014-03-09T03:00:00",DateTimeZone.forID("America/Chicago"))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).timeZone(DateTimeZone.forID("UTC")).build();
  assertThat(tzRounding.round(time("2013-11-03T06:01:01",DateTimeZone.forID("America/Chicago"))),equalTo(time("2013-11-03T06:00:00",DateTimeZone.forID("America/Chicago"))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).timeZone(DateTimeZone.forID("America/Chicago")).build();
  assertThat(tzRounding.round(time("2013-11-03T06:01:01",DateTimeZone.forID("America/Chicago"))),equalTo(time("2013-11-03T06:00:00",DateTimeZone.forID("America/Chicago"))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).timeZone(DateTimeZone.forID("UTC")).build();
  assertThat(tzRounding.round(time("2014-11-02T06:01:01",DateTimeZone.forID("America/Chicago"))),equalTo(time("2014-11-02T06:00:00",DateTimeZone.forID("America/Chicago"))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).timeZone(DateTimeZone.forID("America/Chicago")).build();
  assertThat(tzRounding.round(time("2014-11-02T06:01:01",DateTimeZone.forID("America/Chicago"))),equalTo(time("2014-11-02T06:00:00",DateTimeZone.forID("America/Chicago"))));
}
