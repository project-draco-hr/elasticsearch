{
  for (int i=0; i < 1000; ++i) {
    DateTimeUnit timeUnit=randomTimeUnit();
    TimeZoneRounding rounding;
    int timezoneOffset=randomIntBetween(-23,23);
    rounding=new TimeZoneRounding.TimeUnitRounding(timeUnit,DateTimeZone.forOffsetHours(timezoneOffset));
    long date=Math.abs(randomLong() % ((long)10e11));
    final long roundedDate=rounding.round(date);
    final long nextRoundingValue=rounding.nextRoundingValue(roundedDate);
    assertThat("Rounding should be idempotent",roundedDate,equalTo(rounding.round(roundedDate)));
    assertThat("Rounded value smaller or equal than unrounded, regardless of timezone",roundedDate,lessThanOrEqualTo(date));
    assertThat("NextRounding value should be greater than date",nextRoundingValue,greaterThan(roundedDate));
    assertThat("NextRounding value should be a rounded date",nextRoundingValue,equalTo(rounding.round(nextRoundingValue)));
  }
}
