{
  Rounding tzRounding=TimeZoneRounding.builder(TimeValue.timeValueHours(12)).build();
  DateTimeZone tz=DateTimeZone.UTC;
  assertThat(tzRounding.round(time("2009-02-03T01:01:01")),isDate(time("2009-02-03T00:00:00.000Z"),tz));
  long roundKey=tzRounding.roundKey(time("2009-02-03T01:01:01"));
  assertThat(roundKey,isDate(tzRounding.roundKey(time("2009-02-03T00:00:00.000Z")),tz));
  assertThat(tzRounding.valueForKey(roundKey),isDate(time("2009-02-03T00:00:00.000Z"),tz));
  assertThat(tzRounding.nextRoundingValue(time("2009-02-03T00:00:00.000Z")),isDate(time("2009-02-03T12:00:00.000Z"),tz));
  assertThat(tzRounding.round(time("2009-02-03T13:01:01")),isDate(time("2009-02-03T12:00:00.000Z"),tz));
  assertThat(tzRounding.nextRoundingValue(time("2009-02-03T12:00:00.000Z")),isDate(time("2009-02-04T00:00:00.000Z"),tz));
  tzRounding=TimeZoneRounding.builder(TimeValue.timeValueHours(48)).build();
  assertThat(tzRounding.round(time("2009-02-03T01:01:01")),isDate(time("2009-02-03T00:00:00.000Z"),tz));
  assertThat(tzRounding.nextRoundingValue(time("2009-02-03T00:00:00.000Z")),isDate(time("2009-02-05T00:00:00.000Z"),tz));
  assertThat(tzRounding.round(time("2009-02-05T13:01:01")),isDate(time("2009-02-05T00:00:00.000Z"),tz));
  assertThat(tzRounding.nextRoundingValue(time("2009-02-05T00:00:00.000Z")),isDate(time("2009-02-07T00:00:00.000Z"),tz));
}
