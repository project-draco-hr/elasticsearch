{
  super(settings);
  this.gateway=gateway;
  this.allocationService=allocationService;
  this.clusterService=clusterService;
  this.discoveryService=discoveryService;
  this.threadPool=threadPool;
  this.expectedNodes=componentSettings.getAsInt("expected_nodes",-1);
  this.expectedDataNodes=componentSettings.getAsInt("expected_data_nodes",-1);
  this.expectedMasterNodes=componentSettings.getAsInt("expected_master_nodes",-1);
  TimeValue defaultRecoverAfterTime=null;
  if (expectedNodes >= 0 || expectedDataNodes >= 0 || expectedMasterNodes >= 0) {
    defaultRecoverAfterTime=DEFAULT_RECOVER_AFTER_TIME_IF_EXPECTED_NODES_IS_SET;
  }
  this.recoverAfterTime=componentSettings.getAsTime("recover_after_time",defaultRecoverAfterTime);
  this.recoverAfterNodes=componentSettings.getAsInt("recover_after_nodes",-1);
  this.recoverAfterDataNodes=componentSettings.getAsInt("recover_after_data_nodes",-1);
  this.recoverAfterMasterNodes=componentSettings.getAsInt("recover_after_master_nodes",settings.getAsInt("discovery.zen.minimum_master_nodes",-1));
  this.clusterService.addInitialStateBlock(STATE_NOT_RECOVERED_BLOCK);
}
