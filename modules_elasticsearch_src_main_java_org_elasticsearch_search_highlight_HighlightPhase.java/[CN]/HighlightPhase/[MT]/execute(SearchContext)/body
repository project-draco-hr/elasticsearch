{
  if (context.highlight() == null) {
    return;
  }
  try {
    for (    SearchHit hit : context.fetchResult().hits().hits()) {
      InternalSearchHit internalHit=(InternalSearchHit)hit;
      DocumentMapper documentMapper=context.mapperService().type(internalHit.type());
      int docId=internalHit.docId();
      Map<String,HighlightField> highlightFields=newHashMap();
      for (      SearchContextHighlight.Field field : context.highlight().fields()) {
        String fieldName=field.field();
        FieldMapper mapper=documentMapper.mappers().smartNameFieldMapper(field.field());
        if (mapper != null) {
          fieldName=mapper.names().indexName();
        }
        FastVectorHighlighter highlighter=buildHighlighter(field);
        FieldQuery fieldQuery=buildFieldQuery(highlighter,context.query(),context.searcher().getIndexReader(),field);
        String[] fragments;
        try {
          int numberOfFragments=field.numberOfFragments() == 0 ? 1 : field.numberOfFragments();
          fragments=highlighter.getBestFragments(fieldQuery,context.searcher().getIndexReader(),docId,fieldName,field.fragmentCharSize(),numberOfFragments);
        }
 catch (        IOException e) {
          throw new FetchPhaseExecutionException(context,"Failed to highlight field [" + field.field() + "]",e);
        }
        HighlightField highlightField=new HighlightField(field.field(),fragments);
        highlightFields.put(highlightField.name(),highlightField);
      }
      internalHit.highlightFields(highlightFields);
    }
  }
  finally {
    CustomFieldQuery.reader.remove();
    CustomFieldQuery.highlightFilters.remove();
  }
}
