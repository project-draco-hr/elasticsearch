{
  if (name == null) {
    throw new ElasticsearchIllegalArgumentException("plugin name must be supplied with --remove [name].");
  }
  PluginHandle pluginHandle=PluginHandle.parse(name);
  boolean removed=false;
  checkForForbiddenName(pluginHandle.name);
  File pluginToDelete=pluginHandle.extractedDir(environment);
  if (pluginToDelete.exists()) {
    debug("Removing: " + pluginToDelete.getPath());
    try {
      IOUtils.rm(pluginToDelete.toPath());
    }
 catch (    IOException ex) {
      throw new IOException("Unable to remove " + pluginHandle.name + ". Check file permissions on "+ pluginToDelete.toString(),ex);
    }
    removed=true;
  }
  pluginToDelete=pluginHandle.distroFile(environment);
  if (pluginToDelete.exists()) {
    debug("Removing: " + pluginToDelete.getPath());
    try {
      Files.delete(pluginToDelete.toPath());
    }
 catch (    Exception ex) {
      throw new IOException("Unable to remove " + pluginHandle.name + ". Check file permissions on "+ pluginToDelete.toString(),ex);
    }
    removed=true;
  }
  File binLocation=pluginHandle.binDir(environment);
  if (binLocation.exists()) {
    debug("Removing: " + binLocation.getPath());
    try {
      IOUtils.rm(binLocation.toPath());
    }
 catch (    IOException ex) {
      throw new IOException("Unable to remove " + pluginHandle.name + ". Check file permissions on "+ binLocation.toString(),ex);
    }
    removed=true;
  }
  if (removed) {
    log("Removed " + name);
  }
 else {
    log("Plugin " + name + " not found. Run plugin --list to get list of installed plugins.");
  }
}
