{
  if (name == null) {
    throw new ElasticsearchIllegalArgumentException("plugin name must be supplied with --remove [name].");
  }
  PluginHandle pluginHandle=PluginHandle.parse(name);
  boolean removed=false;
  if (Strings.isNullOrEmpty(pluginHandle.name)) {
    throw new ElasticsearchIllegalArgumentException("plugin name is incorrect");
  }
  File pluginToDelete=pluginHandle.extractedDir(environment);
  if (pluginToDelete.exists()) {
    debug("Removing: " + pluginToDelete.getPath());
    if (!FileSystemUtils.deleteRecursively(pluginToDelete,true)) {
      throw new IOException("Unable to remove " + pluginHandle.name + ". Check file permissions on "+ pluginToDelete.toString());
    }
    removed=true;
  }
  pluginToDelete=pluginHandle.distroFile(environment);
  if (pluginToDelete.exists()) {
    debug("Removing: " + pluginToDelete.getPath());
    if (!pluginToDelete.delete()) {
      throw new IOException("Unable to remove " + pluginHandle.name + ". Check file permissions on "+ pluginToDelete.toString());
    }
    removed=true;
  }
  File binLocation=pluginHandle.binDir(environment);
  if (binLocation.exists()) {
    debug("Removing: " + binLocation.getPath());
    if (!FileSystemUtils.deleteRecursively(binLocation)) {
      throw new IOException("Unable to remove " + pluginHandle.name + ". Check file permissions on "+ binLocation.toString());
    }
    removed=true;
  }
  File configLocation=pluginHandle.configDir(environment);
  if (configLocation.exists()) {
    debug("Removing: " + configLocation.getPath());
    if (!FileSystemUtils.deleteRecursively(configLocation)) {
      throw new IOException("Unable to remove " + pluginHandle.name + ". Check file permissions on "+ configLocation.toString());
    }
    removed=true;
  }
  if (removed) {
    log("Removed " + name);
  }
 else {
    log("Plugin " + name + " not found. Run plugin --list to get list of installed plugins.");
  }
}
