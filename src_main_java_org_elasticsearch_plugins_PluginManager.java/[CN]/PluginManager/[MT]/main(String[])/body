{
  Tuple<Settings,Environment> initialSettings=InternalSettingsPerparer.prepareSettings(EMPTY_SETTINGS,true);
  if (!initialSettings.v2().pluginsFile().exists()) {
    FileSystemUtils.mkdirs(initialSettings.v2().pluginsFile());
  }
  String url=null;
  boolean verbose=false;
  String pluginName=null;
  int action=ACTION.NONE;
  if (args.length < 1) {
    displayHelp(null);
  }
  try {
    for (int c=0; c < args.length; c++) {
      String command=args[c];
      if ("-u".equals(command) || "--url".equals(command) || "url".equals(command)|| "-url".equals(command)) {
        url=args[++c];
      }
 else       if ("-v".equals(command) || "--v".equals(command) || "verbose".equals(command)|| "-verbose".equals(command)) {
        verbose=true;
      }
 else       if (command.equals("-i") || command.equals("--install") || command.equals("install")|| command.equals("-install")) {
        pluginName=args[++c];
        action=ACTION.INSTALL;
      }
 else       if (command.equals("-r") || command.equals("--remove") || command.equals("remove")|| command.equals("-remove")) {
        pluginName=args[++c];
        action=ACTION.REMOVE;
      }
 else       if (command.equals("-l") || command.equals("--list")) {
        action=ACTION.LIST;
      }
 else       if (command.equals("-h") || command.equals("--help")) {
        displayHelp(null);
      }
 else {
        displayHelp("Command [" + args[c] + "] unknown.");
        System.exit(1);
      }
    }
  }
 catch (  Exception e) {
    displayHelp("Error while parsing options: " + e.getClass().getSimpleName() + ": "+ e.getMessage());
    System.exit(1);
  }
  if (action > ACTION.NONE) {
    PluginManager pluginManager=new PluginManager(initialSettings.v2(),url);
switch (action) {
case ACTION.INSTALL:
      try {
        System.out.println("-> Installing " + pluginName + "...");
        pluginManager.downloadAndExtract(pluginName,verbose);
      }
 catch (      IOException e) {
        System.out.println("Failed to install " + pluginName + ", reason: "+ e.getMessage());
      }
catch (      Exception e) {
        displayHelp("Error while installing plugin, reason: " + e.getClass().getSimpleName() + ": "+ e.getMessage());
        System.exit(1);
      }
    break;
case ACTION.REMOVE:
  try {
    System.out.println("-> Removing " + pluginName + " ");
    pluginManager.removePlugin(pluginName);
  }
 catch (  IOException e) {
    System.out.println("Failed to remove " + pluginName + ", reason: "+ e.getMessage());
  }
catch (  Exception e) {
    displayHelp("Error while removing plugin, reason: " + e.getClass().getSimpleName() + ": "+ e.getMessage());
  }
break;
case ACTION.LIST:
pluginManager.listInstalledPlugins();
break;
}
}
}
