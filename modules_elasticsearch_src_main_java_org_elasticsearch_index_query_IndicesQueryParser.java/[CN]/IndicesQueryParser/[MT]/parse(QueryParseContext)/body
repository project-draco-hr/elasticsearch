{
  XContentParser parser=parseContext.parser();
  Query query=null;
  Set<String> indices=Sets.newHashSet();
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("query".equals(currentFieldName)) {
        query=parseContext.parseInnerQuery();
      }
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if ("indices".equals(currentFieldName)) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          String value=parser.textOrNull();
          if (value == null) {
            throw new QueryParsingException(parseContext.index(),"No value specified for term filter");
          }
          indices.add(value);
        }
      }
    }
 else     if (token.isValue()) {
      if ("index".equals(currentFieldName)) {
        indices.add(parser.text());
      }
    }
  }
  if (query == null) {
    throw new QueryParsingException(parseContext.index(),"[indices] requires 'query' element");
  }
  if (indices.isEmpty()) {
    throw new QueryParsingException(parseContext.index(),"[indices] requires 'indices' element");
  }
  for (  String index : indices) {
    if (Regex.simpleMatch(index,parseContext.index().name())) {
      return query;
    }
  }
  return Queries.MATCH_ALL_QUERY;
}
