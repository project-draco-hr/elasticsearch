{
  long storeTotalSize=0;
  long numberOfDocs=0;
  long fieldCacheEvictions=0;
  long fieldCacheTotalSize=0;
  long filterCacheTotalSize=0;
  for (  IndexService indexService : indices.values()) {
    for (    IndexShard indexShard : indexService) {
      try {
        storeTotalSize+=((InternalIndexShard)indexShard).store().estimateSize().bytes();
      }
 catch (      IOException e) {
      }
      if (indexShard.state() == IndexShardState.STARTED) {
        Engine.Searcher searcher=indexShard.searcher();
        try {
          numberOfDocs+=searcher.reader().numDocs();
        }
  finally {
          searcher.release();
        }
      }
    }
    fieldCacheEvictions+=indexService.cache().fieldData().evictions();
    fieldCacheTotalSize+=indexService.cache().fieldData().sizeInBytes();
    filterCacheTotalSize+=indexService.cache().filter().sizeInBytes();
  }
  return new NodeIndicesStats(new ByteSizeValue(storeTotalSize),numberOfDocs,new ByteSizeValue(fieldCacheTotalSize),new ByteSizeValue(filterCacheTotalSize),fieldCacheEvictions);
}
