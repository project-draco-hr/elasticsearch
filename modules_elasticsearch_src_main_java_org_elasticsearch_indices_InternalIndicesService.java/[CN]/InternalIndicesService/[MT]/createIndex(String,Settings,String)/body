{
  Index index=new Index(sIndexName);
  if (indicesInjectors.containsKey(index.name())) {
    throw new IndexAlreadyExistsException(index);
  }
  logger.debug("Creating Index [{}], shards [{}]/[{}]",new Object[]{sIndexName,settings.get(SETTING_NUMBER_OF_SHARDS),settings.get(SETTING_NUMBER_OF_REPLICAS)});
  Settings indexSettings=settingsBuilder().put("settingsType","index").put(this.settings).put(settings).classLoader(settings.getClassLoader()).globalSettings(settings.getGlobalSettings()).build();
  Injector indexInjector=injector.createChildInjector(new IndexNameModule(index),new LocalNodeIdModule(localNodeId),new IndexSettingsModule(indexSettings),new AnalysisModule(indexSettings),new SimilarityModule(indexSettings),new FilterCacheModule(indexSettings),new IndexQueryParserModule(indexSettings),new MapperServiceModule(),new IndexGatewayModule(indexSettings,injector.getInstance(Gateway.class)),new OperationRoutingModule(indexSettings),new IndexModule());
  indicesInjectors.put(index.name(),indexInjector);
  IndexService indexService=indexInjector.getInstance(IndexService.class);
  indices=newMapBuilder(indices).put(index.name(),indexService).immutableMap();
  return indexService;
}
