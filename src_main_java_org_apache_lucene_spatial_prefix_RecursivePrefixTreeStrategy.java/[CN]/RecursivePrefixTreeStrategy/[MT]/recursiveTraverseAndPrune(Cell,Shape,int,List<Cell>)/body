{
  if (!(cell instanceof LegacyCell))   throw new IllegalStateException("pruneLeafyBranches must be disabled for use with grid " + grid);
  if (cell.getLevel() == detailLevel) {
    cell.setLeaf();
  }
  if (cell.isLeaf()) {
    result.add(cell);
    return true;
  }
  if (cell.getLevel() != 0)   result.add(cell);
  int leaves=0;
  CellIterator subCells=cell.getNextLevelCells(shape);
  while (subCells.hasNext()) {
    Cell subCell=subCells.next();
    if (recursiveTraverseAndPrune(subCell,shape,detailLevel,result))     leaves++;
  }
  if (leaves == ((LegacyCell)cell).getSubCellsSize() && cell.getLevel() != 0) {
    do {
      result.remove(result.size() - 1);
    }
 while (--leaves > 0);
    cell.setLeaf();
    return true;
  }
  return false;
}
