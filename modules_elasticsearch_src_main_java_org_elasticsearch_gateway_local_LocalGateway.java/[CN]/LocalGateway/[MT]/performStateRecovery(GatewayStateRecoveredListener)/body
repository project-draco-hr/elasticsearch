{
  Set<String> nodesIds=Sets.newHashSet();
  nodesIds.addAll(clusterService.state().nodes().masterNodes().keySet());
  TransportNodesListGatewayMetaState.NodesLocalGatewayMetaState nodesState=listGatewayMetaState.list(nodesIds,null).actionGet();
  if (nodesState.failures().length > 0) {
    for (    FailedNodeException failedNodeException : nodesState.failures()) {
      logger.warn("failed to fetch state from node",failedNodeException);
    }
  }
  TransportNodesListGatewayMetaState.NodeLocalGatewayMetaState electedState=null;
  for (  TransportNodesListGatewayMetaState.NodeLocalGatewayMetaState nodeState : nodesState) {
    if (nodeState.state() == null) {
      continue;
    }
    if (electedState == null) {
      electedState=nodeState;
    }
 else     if (nodeState.state().version() > electedState.state().version()) {
      electedState=nodeState;
    }
  }
  if (electedState == null) {
    logger.debug("no state elected");
    listener.onSuccess(ClusterState.builder().build());
  }
 else {
    logger.debug("elected state from [{}]",electedState.node());
    listener.onSuccess(ClusterState.builder().version(electedState.state().version()).metaData(electedState.state().metaData()).build());
  }
}
