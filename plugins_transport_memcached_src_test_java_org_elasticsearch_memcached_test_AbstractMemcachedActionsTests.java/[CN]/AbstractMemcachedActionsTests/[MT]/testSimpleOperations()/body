{
  Future<Boolean> setResult=memcachedClient.set("/test/person/1",0,jsonBuilder().startObject().field("test","value").endObject().copiedBytes());
  assertThat(setResult.get(10,TimeUnit.SECONDS),equalTo(true));
  ClusterHealthResponse health=node.client().admin().cluster().prepareHealth().setWaitForYellowStatus().execute().actionGet();
  assertThat(health.timedOut(),equalTo(false));
  String getResult=(String)memcachedClient.get("/_refresh");
  System.out.println("REFRESH " + getResult);
  assertThat(getResult,Matchers.containsString("\"total\":10"));
  assertThat(getResult,Matchers.containsString("\"successful\":5"));
  assertThat(getResult,Matchers.containsString("\"failed\":0"));
  getResult=(String)memcachedClient.get("/test/person/1");
  System.out.println("GET " + getResult);
  assertThat(getResult,Matchers.containsString("\"_index\":\"test\""));
  assertThat(getResult,Matchers.containsString("\"_type\":\"person\""));
  assertThat(getResult,Matchers.containsString("\"_id\":\"1\""));
  Future<Boolean> deleteResult=memcachedClient.delete("/test/person/1");
  assertThat(deleteResult.get(10,TimeUnit.SECONDS),equalTo(true));
  getResult=(String)memcachedClient.get("/_refresh");
  System.out.println("REFRESH " + getResult);
  assertThat(getResult,Matchers.containsString("\"total\":10"));
  assertThat(getResult,Matchers.containsString("\"successful\":5"));
  assertThat(getResult,Matchers.containsString("\"failed\":0"));
  getResult=(String)memcachedClient.get("/test/person/1");
  System.out.println("GET " + getResult);
}
