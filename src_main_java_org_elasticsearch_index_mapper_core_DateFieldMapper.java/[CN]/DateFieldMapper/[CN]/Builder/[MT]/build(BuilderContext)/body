{
  boolean parseUpperInclusive=Defaults.PARSE_UPPER_INCLUSIVE;
  if (context.indexSettings() != null) {
    parseUpperInclusive=context.indexSettings().getAsBoolean("index.mapping.date.parse_upper_inclusive",Defaults.PARSE_UPPER_INCLUSIVE);
  }
  fieldType.setOmitNorms(fieldType.omitNorms() && boost == 1.0f);
  if (!locale.equals(dateTimeFormatter.locale())) {
    dateTimeFormatter=new FormatDateTimeFormatter(dateTimeFormatter.format(),dateTimeFormatter.parser(),dateTimeFormatter.printer(),locale);
  }
  DateFieldMapper fieldMapper=new DateFieldMapper(buildNames(context),dateTimeFormatter,precisionStep,boost,fieldType,nullValue,timeUnit,parseUpperInclusive,ignoreMalformed(context),postingsProvider,docValuesProvider,similarity,fieldDataSettings,context.indexSettings());
  fieldMapper.includeInAll(includeInAll);
  return fieldMapper;
}
