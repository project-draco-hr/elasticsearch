{
  String dateAsString=null;
  Long value=null;
  float boost=this.boost;
  if (context.externalValueSet()) {
    Object externalValue=context.externalValue();
    if (externalValue instanceof Number) {
      value=((Number)externalValue).longValue();
    }
 else {
      dateAsString=(String)externalValue;
      if (dateAsString == null) {
        dateAsString=nullValue;
      }
    }
  }
 else {
    XContentParser parser=context.parser();
    XContentParser.Token token=parser.currentToken();
    if (token == XContentParser.Token.VALUE_NULL) {
      dateAsString=nullValue;
    }
 else     if (token == XContentParser.Token.VALUE_NUMBER) {
      value=parser.longValue();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      String currentFieldName=null;
      while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
        if (token == XContentParser.Token.FIELD_NAME) {
          currentFieldName=parser.currentName();
        }
 else {
          if ("value".equals(currentFieldName) || "_value".equals(currentFieldName)) {
            if (token == XContentParser.Token.VALUE_NULL) {
              dateAsString=nullValue;
            }
 else             if (token == XContentParser.Token.VALUE_NUMBER) {
              value=parser.longValue();
            }
 else {
              dateAsString=parser.text();
            }
          }
 else           if ("boost".equals(currentFieldName) || "_boost".equals(currentFieldName)) {
            boost=parser.floatValue();
          }
        }
      }
    }
 else {
      dateAsString=parser.text();
    }
  }
  if (value != null) {
    LongFieldMapper.CustomLongNumericField field=new LongFieldMapper.CustomLongNumericField(this,timeUnit.toMillis(value),fieldType);
    field.setBoost(boost);
    return field;
  }
  if (dateAsString == null) {
    return null;
  }
  if (context.includeInAll(includeInAll,this)) {
    context.allEntries().addText(names.fullName(),dateAsString,boost);
  }
  value=parseStringValue(dateAsString);
  LongFieldMapper.CustomLongNumericField field=new LongFieldMapper.CustomLongNumericField(this,value,fieldType);
  field.setBoost(boost);
  return field;
}
