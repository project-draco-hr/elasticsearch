{
{
    Settings settings=ImmutableSettings.settingsBuilder().put("index.analysis.filter.common_grams_1.type","common_grams").put("index.analysis.filter.common_grams_1.ignore_case",true).putArray("index.analysis.filter.common_grams_1.common_words","the","Or","Not","a","is","an","they","are").build();
    AnalysisService analysisService=AnalysisTestsHelper.createAnalysisServiceFromSettings(settings);
    TokenFilterFactory tokenFilter=analysisService.tokenFilter("common_grams_1");
    String source="the quick brown is a fox or noT";
    String[] expected=new String[]{"the","the_quick","quick","brown","brown_is","is","is_a","a","a_fox","fox","fox_or","or","or_noT","noT"};
    Tokenizer tokenizer=new WhitespaceTokenizer(TEST_VERSION_CURRENT,new StringReader(source));
    assertTokenStreamContents(tokenFilter.create(tokenizer),expected);
  }
{
    Settings settings=ImmutableSettings.settingsBuilder().put("index.analysis.filter.common_grams_2.type","common_grams").put("index.analysis.filter.common_grams_2.ignore_case",false).putArray("index.analysis.filter.common_grams_2.common_words","the","Or","noT","a","is","an","they","are").build();
    AnalysisService analysisService=AnalysisTestsHelper.createAnalysisServiceFromSettings(settings);
    TokenFilterFactory tokenFilter=analysisService.tokenFilter("common_grams_2");
    String source="the quick brown is a fox or why noT";
    String[] expected=new String[]{"the","the_quick","quick","brown","brown_is","is","is_a","a","a_fox","fox","or","why","why_noT","noT"};
    Tokenizer tokenizer=new WhitespaceTokenizer(TEST_VERSION_CURRENT,new StringReader(source));
    assertTokenStreamContents(tokenFilter.create(tokenizer),expected);
  }
{
    Settings settings=ImmutableSettings.settingsBuilder().put("index.analysis.filter.common_grams_3.type","common_grams").putArray("index.analysis.filter.common_grams_3.common_words","the","or","not","a","is","an","they","are").build();
    AnalysisService analysisService=AnalysisTestsHelper.createAnalysisServiceFromSettings(settings);
    TokenFilterFactory tokenFilter=analysisService.tokenFilter("common_grams_3");
    String source="the quick brown is a fox Or noT";
    String[] expected=new String[]{"the","the_quick","quick","brown","brown_is","is","is_a","a","a_fox","fox","Or","noT"};
    Tokenizer tokenizer=new WhitespaceTokenizer(TEST_VERSION_CURRENT,new StringReader(source));
    assertTokenStreamContents(tokenFilter.create(tokenizer),expected);
  }
}
