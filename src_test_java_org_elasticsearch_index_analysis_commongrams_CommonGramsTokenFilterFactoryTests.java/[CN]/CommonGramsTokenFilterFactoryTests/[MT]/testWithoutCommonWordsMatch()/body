{
{
    Settings settings=ImmutableSettings.settingsBuilder().put("index.analysis.filter.common_grams_default.type","common_grams").putArray("index.analysis.filter.common_grams_default.common_words","chromosome","protein").build();
    AnalysisService analysisService=AnalysisTestsHelper.createAnalysisServiceFromSettings(settings);
{
      TokenFilterFactory tokenFilter=analysisService.tokenFilter("common_grams_default");
      String source="the quick brown is a fox Or noT";
      String[] expected=new String[]{"the","quick","brown","is","a","fox","Or","noT"};
      Tokenizer tokenizer=new WhitespaceTokenizer();
      tokenizer.setReader(new StringReader(source));
      assertTokenStreamContents(tokenFilter.create(tokenizer),expected);
    }
  }
{
    Settings settings=ImmutableSettings.settingsBuilder().put("index.analysis.filter.common_grams_default.type","common_grams").put("index.analysis.filter.common_grams_default.query_mode",false).putArray("index.analysis.filter.common_grams_default.common_words","chromosome","protein").build();
    AnalysisService analysisService=AnalysisTestsHelper.createAnalysisServiceFromSettings(settings);
{
      TokenFilterFactory tokenFilter=analysisService.tokenFilter("common_grams_default");
      String source="the quick brown is a fox Or noT";
      String[] expected=new String[]{"the","quick","brown","is","a","fox","Or","noT"};
      Tokenizer tokenizer=new WhitespaceTokenizer();
      tokenizer.setReader(new StringReader(source));
      assertTokenStreamContents(tokenFilter.create(tokenizer),expected);
    }
  }
}
