{
  final int NUM_NODES=40;
  final int NUM_INDICES=100;
  final int NUM_DOCS=2;
  final int FLUSH_AFTER=1;
  final Settings nodeSettings=Settings.settingsBuilder().put("transport.netty.connections_per_node.low",0).put("transport.netty.connections_per_node.med",0).put("transport.netty.connections_per_node.high",1).build();
  final Settings indexSettings=Settings.settingsBuilder().put("index.number_of_shards",1).build();
  List<Node> nodes=Lists.newArrayList();
  for (int i=0; i < NUM_NODES; i++) {
    nodes.add(NodeBuilder.nodeBuilder().settings(Settings.settingsBuilder().put(nodeSettings).put("name","node" + i)).node());
  }
  Client client=nodes.get(0).client();
  for (int index=0; index < NUM_INDICES; index++) {
    String indexName="index_" + index;
    System.out.println("--> Processing index [" + indexName + "]...");
    client.admin().indices().prepareCreate(indexName).setSettings(indexSettings).execute().actionGet();
    boolean flushed=false;
    for (int doc=0; doc < NUM_DOCS; doc++) {
      if (!flushed && doc > FLUSH_AFTER) {
        flushed=true;
        client.admin().indices().prepareFlush(indexName).execute().actionGet();
      }
      client.prepareIndex(indexName,"type1",Integer.toString(doc)).setSource("field","value" + doc).execute().actionGet();
    }
    System.out.println("--> DONE index [" + indexName + "]");
  }
  System.out.println("--> Initiating shutdown");
  for (  Node node : nodes) {
    node.close();
  }
  System.out.println("--> Waiting for all nodes to be closed...");
  while (true) {
    boolean allAreClosed=true;
    for (    Node node : nodes) {
      if (!node.isClosed()) {
        allAreClosed=false;
        break;
      }
    }
    if (allAreClosed) {
      break;
    }
    Thread.sleep(100);
  }
  System.out.println("Waiting a bit for node lock to really be released?");
  Thread.sleep(5000);
  System.out.println("--> All nodes are closed, starting back...");
  nodes=Lists.newArrayList();
  for (int i=0; i < NUM_NODES; i++) {
    nodes.add(NodeBuilder.nodeBuilder().settings(Settings.settingsBuilder().put(nodeSettings).put("name","node" + i)).node());
  }
  client=nodes.get(0).client();
  System.out.println("--> Waiting for green status");
  while (true) {
    ClusterHealthResponse clusterHealth=client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
    if (clusterHealth.isTimedOut()) {
      System.err.println("--> cluster health timed out..., active shards [" + clusterHealth.getActiveShards() + "]");
    }
 else {
      break;
    }
  }
  System.out.println("Verifying counts...");
  for (int index=0; index < NUM_INDICES; index++) {
    String indexName="index_" + index;
    CountResponse count=client.prepareCount(indexName).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
    if (count.getCount() != NUM_DOCS) {
      System.err.println("Wrong count value, expected [" + NUM_DOCS + "], got ["+ count.getCount()+ "] for index ["+ indexName+ "]");
    }
  }
  System.out.println("Test end");
  for (  Node node : nodes) {
    node.close();
  }
}
