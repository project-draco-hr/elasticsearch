{
  PlainActionFuture<Releasable> future1=new PlainActionFuture<>();
  block.acquire(future1,ThreadPool.Names.GENERIC,true);
  assertTrue(future1.isDone());
  assertThat(block.getActiveOperationsCount(),equalTo(1));
  PlainActionFuture<Releasable> future2=new PlainActionFuture<>();
  block.acquire(future2,ThreadPool.Names.GENERIC,true);
  assertTrue(future2.isDone());
  assertThat(block.getActiveOperationsCount(),equalTo(2));
  future1.get().close();
  assertThat(block.getActiveOperationsCount(),equalTo(1));
  future1.get().close();
  assertThat(block.getActiveOperationsCount(),equalTo(1));
  future2.get().close();
  assertThat(block.getActiveOperationsCount(),equalTo(0));
  try (Releasable releasable=blockAndWait()){
    assertThat(block.getActiveOperationsCount(),equalTo(0));
  }
   PlainActionFuture<Releasable> future3=new PlainActionFuture<>();
  block.acquire(future3,ThreadPool.Names.GENERIC,true);
  assertTrue(future3.isDone());
  assertThat(block.getActiveOperationsCount(),equalTo(1));
  future3.get().close();
  assertThat(block.getActiveOperationsCount(),equalTo(0));
}
