{
  cluster().ensureAtMostNumNodes(5);
  cluster().ensureAtLeastNumNodes(1);
  SigarService sigarService=cluster().getInstance(SigarService.class);
  index("test1","type","1","f","f");
  ClusterStatsResponse response=client().admin().cluster().prepareClusterStats().get();
  assertThat(response.getTimestamp(),Matchers.greaterThan(946681200000l));
  assertThat(response.indicesStats.getStore().getSizeInBytes(),Matchers.greaterThan(0l));
  assertThat(response.nodesStats.getFs().getTotal().bytes(),Matchers.greaterThan(0l));
  assertThat(response.nodesStats.getJvm().getVersions().size(),Matchers.greaterThan(0));
  if (sigarService.sigarAvailable()) {
    assertThat(response.nodesStats.getOs().getAvailableProcessors(),Matchers.greaterThan(0));
    assertThat(response.nodesStats.getOs().getAvailableMemory().bytes(),Matchers.greaterThan(0l));
    assertThat(response.nodesStats.getOs().getCpus().size(),Matchers.greaterThan(0));
  }
  assertThat(response.nodesStats.getVersions().size(),Matchers.greaterThan(0));
  assertThat(response.nodesStats.getVersions().contains(Version.CURRENT),Matchers.equalTo(true));
  assertThat(response.nodesStats.getPlugins().size(),Matchers.greaterThanOrEqualTo(0));
  assertThat(response.nodesStats.getProcess().count,Matchers.greaterThan(0));
  assertThat(response.nodesStats.getProcess().getAvgOpenFileDescriptors(),Matchers.greaterThanOrEqualTo(0L));
  assertThat(response.nodesStats.getProcess().getMinOpenFileDescriptors(),Matchers.greaterThan(-1L));
  assertThat(response.nodesStats.getProcess().getMaxOpenFileDescriptors(),Matchers.greaterThan(-1L));
}
