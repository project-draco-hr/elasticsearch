{
  IndicesService indicesService=getIndicesService();
  IndexService test=createIndex("test");
  ClusterService clusterService=getInstanceFromNode(ClusterService.class);
  IndexMetaData firstMetaData=clusterService.state().metaData().index("test");
  assertTrue(test.hasShard(0));
  try {
    indicesService.deleteIndexStore("boom",firstMetaData,clusterService.state());
    fail();
  }
 catch (  ElasticsearchIllegalStateException ex) {
  }
  GatewayMetaState gwMetaState=getInstanceFromNode(GatewayMetaState.class);
  MetaData meta=gwMetaState.loadMetaState();
  assertNotNull(meta);
  assertNotNull(meta.index("test"));
  assertAcked(client().admin().indices().prepareDelete("test"));
  meta=gwMetaState.loadMetaState();
  assertNotNull(meta);
  assertNull(meta.index("test"));
  test=createIndex("test");
  client().prepareIndex("test","type","1").setSource("field","value").setRefresh(true).get();
  client().admin().indices().prepareFlush("test").get();
  assertHitCount(client().prepareSearch("test").get(),1);
  IndexMetaData secondMetaData=clusterService.state().metaData().index("test");
  assertAcked(client().admin().indices().prepareClose("test"));
  ShardPath path=ShardPath.loadShardPath(logger,getNodeEnvironment(),new ShardId(test.index(),0),test.getIndexSettings());
  assertTrue(path.exists());
  try {
    indicesService.deleteIndexStore("boom",secondMetaData,clusterService.state());
    fail();
  }
 catch (  ElasticsearchIllegalStateException ex) {
  }
  assertTrue(path.exists());
  try {
    indicesService.deleteIndexStore("boom",firstMetaData,clusterService.state());
    fail();
  }
 catch (  ElasticsearchIllegalStateException ex) {
  }
  assertAcked(client().admin().indices().prepareOpen("test"));
  ensureGreen("test");
}
