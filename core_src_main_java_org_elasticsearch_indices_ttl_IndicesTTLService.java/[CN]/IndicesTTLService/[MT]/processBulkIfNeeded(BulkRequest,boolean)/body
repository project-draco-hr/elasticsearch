{
  if ((force && bulkRequest.numberOfActions() > 0) || bulkRequest.numberOfActions() >= bulkSize) {
    try {
      bulkAction.executeBulk(bulkRequest,new ActionListener<BulkResponse>(){
        @Override public void onResponse(        BulkResponse bulkResponse){
          if (bulkResponse.hasFailures()) {
            int failedItems=0;
            for (            BulkItemResponse response : bulkResponse) {
              if (response.isFailed())               failedItems++;
            }
            if (logger.isTraceEnabled()) {
              logger.trace("bulk deletion failures for [{}]/[{}] items, failure message: [{}]",failedItems,bulkResponse.getItems().length,bulkResponse.buildFailureMessage());
            }
 else {
              logger.error("bulk deletion failures for [{}]/[{}] items",failedItems,bulkResponse.getItems().length);
            }
          }
 else {
            logger.trace("bulk deletion took {}ms",bulkResponse.getTookInMillis());
          }
        }
        @Override public void onFailure(        Exception e){
          if (logger.isTraceEnabled()) {
            logger.trace("failed to execute bulk",e);
          }
 else {
            logger.warn("failed to execute bulk: ",e);
          }
        }
      }
);
    }
 catch (    Exception e) {
      logger.warn("failed to process bulk",e);
    }
    bulkRequest=new BulkRequest();
  }
  return bulkRequest;
}
