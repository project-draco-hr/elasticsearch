{
  super(facetName);
  this.fieldName=fieldName;
  this.lat=lat;
  this.lon=lon;
  this.unit=unit;
  this.entries=entries;
  this.geoDistance=geoDistance;
  this.fieldDataCache=context.fieldDataCache();
  MapperService.SmartNameFieldMappers smartMappers=context.mapperService().smartName(fieldName + GeoPointFieldMapper.Names.LAT_SUFFIX);
  if (smartMappers == null || !smartMappers.hasMapper()) {
    throw new FacetPhaseExecutionException(facetName,"No mapping found for field [" + fieldName + "]");
  }
  if (smartMappers.hasDocMapper()) {
    setFilter(context.filterCache().cache(smartMappers.docMapper().typeFilter()));
  }
  this.indexLatFieldName=smartMappers.mapper().names().indexName();
  FieldMapper mapper=context.mapperService().smartNameFieldMapper(fieldName + GeoPointFieldMapper.Names.LON_SUFFIX);
  if (mapper == null) {
    throw new FacetPhaseExecutionException(facetName,"No mapping found for field [" + fieldName + "]");
  }
  this.indexLonFieldName=mapper.names().indexName();
  this.fieldDataType=mapper.fieldDataType();
}
