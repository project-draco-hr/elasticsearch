{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field1").field("type","string").endObject().endObject().endObject().endObject().string();
  DocumentMapper defaultMapper=createIndex("test",BW_SETTINGS).mapperService().documentMapperParser().parse("type",new CompressedXContent(mapping));
  ParsedDocument doc=defaultMapper.parse("test","type","1",XContentFactory.jsonBuilder().startObject().field("field1","value1").field("field2","value2").endObject().bytes());
  assertThat(doc.rootDoc().get("field1"),equalTo("value1"));
  assertThat((double)doc.rootDoc().getField("field1").boost(),closeTo(1.0d,0.000001d));
  assertThat(doc.rootDoc().get("field2"),equalTo("value2"));
  doc=defaultMapper.parse("test","type","1",XContentFactory.jsonBuilder().startObject().startObject("field1").field("value","value1").field("boost",2.0f).endObject().field("field2","value2").endObject().bytes());
  assertThat(doc.rootDoc().get("field1"),equalTo("value1"));
  assertThat((double)doc.rootDoc().getField("field1").boost(),closeTo(2.0d,0.000001d));
  assertThat(doc.rootDoc().get("field2"),equalTo("value2"));
  doc=defaultMapper.parse("test","type","1",XContentFactory.jsonBuilder().startObject().field("field1","value1").field("field2","value2").endObject().bytes());
  assertThat(doc.rootDoc().get("field1"),equalTo("value1"));
  assertThat((double)doc.rootDoc().getField("field1").boost(),closeTo(1.0d,0.000001d));
  assertThat(doc.rootDoc().get("field2"),equalTo("value2"));
}
