{
  String mapping=copyToStringFromClasspath("/org/elasticsearch/index/mapper/xcontent/multifield/merge/test-mapping1.json");
  XContentDocumentMapper docMapper=XContentMapperTests.newParser().parse(mapping);
  assertThat(docMapper.mappers().fullName("name").mapper().indexed(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.indexed"),nullValue());
  byte[] json=copyToBytesFromClasspath("/org/elasticsearch/index/mapper/xcontent/multifield/merge/test-data.json");
  Document doc=docMapper.parse(json).doc();
  Field f=doc.getField("name");
  assertThat(f,notNullValue());
  f=doc.getField("name.indexed");
  assertThat(f,nullValue());
  mapping=copyToStringFromClasspath("/org/elasticsearch/index/mapper/xcontent/multifield/merge/test-mapping2.json");
  XContentDocumentMapper docMapper2=XContentMapperTests.newParser().parse(mapping);
  docMapper.merge(docMapper2,mergeFlags().simulate(true));
  docMapper.merge(docMapper2,mergeFlags().simulate(false));
  assertThat(docMapper.mappers().name("name").mapper().indexed(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name").mapper().indexed(),equalTo(true));
  assertThat(docMapper.mappers().fullName("name.indexed").mapper(),notNullValue());
  json=copyToBytesFromClasspath("/org/elasticsearch/index/mapper/xcontent/multifield/merge/test-data.json");
  doc=docMapper.parse(json).doc();
  f=doc.getField("name");
  assertThat(f,notNullValue());
  f=doc.getField("name.indexed");
  assertThat(f,notNullValue());
}
