{
  XContentBuilder mappingWithTtl=getMappingWithTtlEnabled("6d");
  IndexService indexService=createIndex("testindex",Settings.settingsBuilder().build(),"type",mappingWithTtl);
  CompressedXContent mappingBeforeMerge=indexService.mapperService().documentMapper("type").mappingSource();
  XContentBuilder mappingWithTtlDifferentDefault=getMappingWithTtlEnabled("7d");
  MergeResult mergeResult=indexService.mapperService().documentMapper("type").merge(indexService.mapperService().parse("type",new CompressedXContent(mappingWithTtlDifferentDefault.string()),true).mapping(),true);
  assertFalse(mergeResult.hasConflicts());
  CompressedXContent mappingAfterMerge=indexService.mapperService().documentMapper("type").mappingSource();
  assertThat(mappingAfterMerge,equalTo(mappingBeforeMerge));
  client().admin().indices().prepareDelete("testindex").get();
  XContentBuilder mappingWithoutTtl=getMappingWithTtlDisabled();
  indexService=createIndex("testindex",Settings.settingsBuilder().build(),"type",mappingWithoutTtl);
  mappingBeforeMerge=indexService.mapperService().documentMapper("type").mappingSource();
  XContentBuilder mappingWithTtlEnabled=getMappingWithTtlEnabled();
  mergeResult=indexService.mapperService().documentMapper("type").merge(indexService.mapperService().parse("type",new CompressedXContent(mappingWithTtlEnabled.string()),true).mapping(),true);
  assertFalse(mergeResult.hasConflicts());
  mappingAfterMerge=indexService.mapperService().documentMapper("type").mappingSource();
  assertThat(mappingAfterMerge,equalTo(mappingBeforeMerge));
  client().admin().indices().prepareDelete("testindex").get();
  mappingWithoutTtl=getMappingWithTtlDisabled("6d");
  indexService=createIndex("testindex",Settings.settingsBuilder().build(),"type",mappingWithoutTtl);
  mappingBeforeMerge=indexService.mapperService().documentMapper("type").mappingSource();
  mappingWithTtlEnabled=getMappingWithTtlEnabled("7d");
  mergeResult=indexService.mapperService().documentMapper("type").merge(indexService.mapperService().parse("type",new CompressedXContent(mappingWithTtlEnabled.string()),true).mapping(),true);
  assertFalse(mergeResult.hasConflicts());
  mappingAfterMerge=indexService.mapperService().documentMapper("type").mappingSource();
  assertThat(mappingAfterMerge,equalTo(mappingBeforeMerge));
  client().admin().indices().prepareDelete("testindex").get();
  mappingWithoutTtl=getMappingWithTtlDisabled("6d");
  indexService=createIndex("testindex",Settings.settingsBuilder().build(),"type",mappingWithoutTtl);
  mappingWithTtlEnabled=getMappingWithTtlEnabled("7d");
  mergeResult=indexService.mapperService().documentMapper("type").merge(indexService.mapperService().parse("type",new CompressedXContent(mappingWithTtlEnabled.string()),true).mapping(),false);
  assertFalse(mergeResult.hasConflicts());
  mappingAfterMerge=indexService.mapperService().documentMapper("type").mappingSource();
  assertThat(mappingAfterMerge,equalTo(new CompressedXContent("{\"type\":{\"_ttl\":{\"enabled\":true,\"default\":604800000},\"properties\":{\"field\":{\"type\":\"string\"}}}}")));
  client().admin().indices().prepareDelete("testindex").get();
  indexService=createIndex("testindex",Settings.settingsBuilder().build(),"type");
  mappingWithTtlEnabled=getMappingWithTtlEnabled("7d");
  mergeResult=indexService.mapperService().documentMapper("type").merge(indexService.mapperService().parse("type",new CompressedXContent(mappingWithTtlEnabled.string()),true).mapping(),false);
  assertFalse(mergeResult.hasConflicts());
  mappingAfterMerge=indexService.mapperService().documentMapper("type").mappingSource();
  assertThat(mappingAfterMerge,equalTo(new CompressedXContent("{\"type\":{\"_ttl\":{\"enabled\":true,\"default\":604800000},\"properties\":{\"field\":{\"type\":\"string\"}}}}")));
}
