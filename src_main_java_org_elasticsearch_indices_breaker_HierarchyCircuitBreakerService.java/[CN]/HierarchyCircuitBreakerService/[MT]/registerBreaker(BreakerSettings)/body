{
  if (BUILT_IN_BREAKER_NAMES.contains(breakerSettings.getName())) {
    throw new ElasticsearchIllegalArgumentException("Overwriting of built-in breaker " + breakerSettings.getName() + " is forbidden");
  }
  validateSettings(new BreakerSettings[]{breakerSettings});
  CircuitBreaker breaker;
  if (breakerSettings.getType() == CircuitBreaker.Type.NOOP) {
    breaker=new NoopCircuitBreaker(breakerSettings.getName());
  }
 else {
    breaker=new ChildMemoryCircuitBreaker(breakerSettings,logger,this,breakerSettings.getName());
  }
  Map<CircuitBreaker.Name,CircuitBreaker> tempBreakers=new HashMap<>();
  tempBreakers.putAll(this.breakers);
  tempBreakers.put(breakerSettings.getName(),breaker);
synchronized (lock) {
    this.breakers=ImmutableMap.copyOf(tempBreakers);
  }
}
