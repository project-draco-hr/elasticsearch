{
{
    ShardSearchFailure failure=new ShardSearchFailure(new TestParsingException(new Index("foo"),"foobar",null),new SearchShardTarget("node_1","foo",1));
    ShardSearchFailure failure1=new ShardSearchFailure(new TestParsingException(new Index("foo"),"foobar",null),new SearchShardTarget("node_1","foo",2));
    SearchPhaseExecutionException ex=new SearchPhaseExecutionException("search","all shards failed",new ShardSearchFailure[]{failure,failure1});
    XContentBuilder builder=XContentFactory.jsonBuilder();
    builder.startObject();
    ex.toXContent(builder,PARAMS);
    builder.endObject();
    String expected="{\"type\":\"search_phase_execution_exception\",\"reason\":\"all shards failed\",\"phase\":\"search\",\"grouped\":true,\"failed_shards\":[{\"shard\":1,\"index\":\"foo\",\"node\":\"node_1\",\"reason\":{\"type\":\"test_query_parsing_exception\",\"reason\":\"foobar\",\"index\":\"foo\"}}]}";
    assertEquals(expected,builder.string());
  }
{
    ShardSearchFailure failure=new ShardSearchFailure(new TestParsingException(new Index("foo"),"foobar",null),new SearchShardTarget("node_1","foo",1));
    ShardSearchFailure failure1=new ShardSearchFailure(new TestParsingException(new Index("foo1"),"foobar",null),new SearchShardTarget("node_1","foo1",1));
    ShardSearchFailure failure2=new ShardSearchFailure(new TestParsingException(new Index("foo1"),"foobar",null),new SearchShardTarget("node_1","foo1",2));
    SearchPhaseExecutionException ex=new SearchPhaseExecutionException("search","all shards failed",new ShardSearchFailure[]{failure,failure1,failure2});
    XContentBuilder builder=XContentFactory.jsonBuilder();
    builder.startObject();
    ex.toXContent(builder,PARAMS);
    builder.endObject();
    String expected="{\"type\":\"search_phase_execution_exception\",\"reason\":\"all shards failed\",\"phase\":\"search\",\"grouped\":true,\"failed_shards\":[{\"shard\":1,\"index\":\"foo\",\"node\":\"node_1\",\"reason\":{\"type\":\"test_query_parsing_exception\",\"reason\":\"foobar\",\"index\":\"foo\"}},{\"shard\":1,\"index\":\"foo1\",\"node\":\"node_1\",\"reason\":{\"type\":\"test_query_parsing_exception\",\"reason\":\"foobar\",\"index\":\"foo1\"}}]}";
    assertEquals(expected,builder.string());
  }
}
