{
  Throwable[] causes=new Throwable[]{new IllegalStateException("foobar"),new IllegalArgumentException("alalaal"),new NullPointerException("boom"),new EOFException("dadada"),new ElasticsearchSecurityException("nono!"),new NumberFormatException("not a number"),new CorruptIndexException("baaaam booom","this is my resource"),new IndexFormatTooNewException("tooo new",1,2,3),new IndexFormatTooOldException("tooo new",1,2,3),new IndexFormatTooOldException("tooo new","very old version"),new ArrayIndexOutOfBoundsException("booom"),new StringIndexOutOfBoundsException("booom"),new FileNotFoundException("booom"),new NoSuchFileException("booom"),new AssertionError("booom",new NullPointerException()),new OutOfMemoryError("no memory left"),new AlreadyClosedException("closed!!",new NullPointerException()),new LockObtainFailedException("can't lock directory",new NullPointerException()),new Throwable("this exception is unknown",new QueryParsingException(new Index("foo"),1,2,"foobar",null))};
  for (  Throwable t : causes) {
    BytesStreamOutput out=new BytesStreamOutput();
    ElasticsearchException ex=new ElasticsearchException("topLevel",t);
    out.writeThrowable(ex);
    StreamInput in=StreamInput.wrap(out.bytes());
    ElasticsearchException e=in.readThrowable();
    assertEquals(e.getMessage(),ex.getMessage());
    assertEquals(ex.getCause().getClass().getName(),e.getCause().getMessage(),ex.getCause().getMessage());
    if (ex.getCause().getClass() != Throwable.class) {
      assertEquals(e.getCause().getClass(),ex.getCause().getClass());
    }
 else {
      assertEquals(e.getCause().getClass(),NotSerializableExceptionWrapper.class);
    }
    if (!Constants.JRE_IS_MINIMUM_JAVA9) {
      assertArrayEquals(e.getStackTrace(),ex.getStackTrace());
    }
    assertTrue(e.getStackTrace().length > 1);
    ElasticsearchAssertions.assertVersionSerializable(VersionUtils.randomVersion(getRandom()),t);
    ElasticsearchAssertions.assertVersionSerializable(VersionUtils.randomVersion(getRandom()),ex);
    ElasticsearchAssertions.assertVersionSerializable(VersionUtils.randomVersion(getRandom()),e);
  }
}
