{
{
    ElasticsearchException exception=new ElasticsearchException("foo",new ElasticsearchException("bar",new IndexNotFoundException("foo",new RuntimeException("foobar"))));
    ElasticsearchException[] rootCauses=exception.guessRootCauses();
    assertEquals(rootCauses.length,1);
    assertEquals(ElasticsearchException.getExceptionName(rootCauses[0]),"index_not_found_exception");
    assertEquals(rootCauses[0].getMessage(),"no such index");
    ShardSearchFailure failure=new ShardSearchFailure(new ParsingException(1,2,"foobar",null),new SearchShardTarget("node_1","foo",1));
    ShardSearchFailure failure1=new ShardSearchFailure(new ParsingException(1,2,"foobar",null),new SearchShardTarget("node_1","foo",2));
    SearchPhaseExecutionException ex=new SearchPhaseExecutionException("search","all shards failed",new ShardSearchFailure[]{failure,failure1});
    if (randomBoolean()) {
      rootCauses=(randomBoolean() ? new RemoteTransportException("remoteboom",ex) : ex).guessRootCauses();
    }
 else {
      rootCauses=ElasticsearchException.guessRootCauses(randomBoolean() ? new RemoteTransportException("remoteboom",ex) : ex);
    }
    assertEquals(ElasticsearchException.getExceptionName(rootCauses[0]),"parsing_exception");
    assertEquals(rootCauses[0].getMessage(),"foobar");
    ElasticsearchException oneLevel=new ElasticsearchException("foo",new RuntimeException("foobar"));
    rootCauses=oneLevel.guessRootCauses();
    assertEquals(ElasticsearchException.getExceptionName(rootCauses[0]),"exception");
    assertEquals(rootCauses[0].getMessage(),"foo");
  }
{
    ShardSearchFailure failure=new ShardSearchFailure(new ParsingException(1,2,"foobar",null),new SearchShardTarget("node_1","foo",1));
    ShardSearchFailure failure1=new ShardSearchFailure(new QueryShardException(new Index("foo1"),"foobar",null),new SearchShardTarget("node_1","foo1",1));
    ShardSearchFailure failure2=new ShardSearchFailure(new QueryShardException(new Index("foo1"),"foobar",null),new SearchShardTarget("node_1","foo1",2));
    SearchPhaseExecutionException ex=new SearchPhaseExecutionException("search","all shards failed",new ShardSearchFailure[]{failure,failure1,failure2});
    final ElasticsearchException[] rootCauses=ex.guessRootCauses();
    assertEquals(rootCauses.length,2);
    assertEquals(ElasticsearchException.getExceptionName(rootCauses[0]),"parsing_exception");
    assertEquals(rootCauses[0].getMessage(),"foobar");
    assertEquals(((ParsingException)rootCauses[0]).getLineNumber(),1);
    assertEquals(((ParsingException)rootCauses[0]).getColumnNumber(),2);
    assertEquals(ElasticsearchException.getExceptionName(rootCauses[1]),"query_shard_exception");
    assertEquals((rootCauses[1]).getIndex(),"foo1");
    assertEquals(rootCauses[1].getMessage(),"foobar");
  }
{
    final ElasticsearchException[] foobars=ElasticsearchException.guessRootCauses(new IllegalArgumentException("foobar"));
    assertEquals(foobars.length,1);
    assertTrue(foobars[0] instanceof ElasticsearchException);
    assertEquals(foobars[0].getMessage(),"foobar");
    assertEquals(foobars[0].getCause().getClass(),IllegalArgumentException.class);
    assertEquals(foobars[0].getExceptionName(),"illegal_argument_exception");
  }
}
