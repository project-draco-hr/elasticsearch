{
  boolean isVerbose=randomBoolean();
  int numResults=randomIntBetween(1,10);
  List<SimulateDocumentResult> results=new ArrayList<>(numResults);
  for (int i=0; i < numResults; i++) {
    boolean isFailure=randomBoolean();
    IngestDocument ingestDocument=RandomDocumentPicks.randomIngestDocument(random());
    if (isVerbose) {
      int numProcessors=randomIntBetween(1,10);
      List<SimulateProcessorResult> processorResults=new ArrayList<>(numProcessors);
      for (int j=0; j < numProcessors; j++) {
        String processorTag=randomAsciiOfLengthBetween(1,10);
        SimulateProcessorResult processorResult;
        if (isFailure) {
          processorResult=new SimulateProcessorResult(processorTag,new IllegalArgumentException("test"));
        }
 else {
          processorResult=new SimulateProcessorResult(processorTag,ingestDocument);
        }
        processorResults.add(processorResult);
      }
      results.add(new SimulateDocumentVerboseResult(processorResults));
    }
 else {
      results.add(new SimulateDocumentBaseResult(ingestDocument));
      SimulateDocumentBaseResult simulateDocumentBaseResult;
      if (isFailure) {
        simulateDocumentBaseResult=new SimulateDocumentBaseResult(new IllegalArgumentException("test"));
      }
 else {
        simulateDocumentBaseResult=new SimulateDocumentBaseResult(ingestDocument);
      }
      results.add(simulateDocumentBaseResult);
    }
  }
  SimulatePipelineResponse response=new SimulatePipelineResponse(randomAsciiOfLengthBetween(1,10),isVerbose,results);
  BytesStreamOutput out=new BytesStreamOutput();
  response.writeTo(out);
  StreamInput streamInput=StreamInput.wrap(out.bytes());
  SimulatePipelineResponse otherResponse=new SimulatePipelineResponse();
  otherResponse.readFrom(streamInput);
  assertThat(otherResponse.getPipelineId(),equalTo(response.getPipelineId()));
  assertThat(otherResponse.getResults().size(),equalTo(response.getResults().size()));
  Iterator<SimulateDocumentResult> expectedResultIterator=response.getResults().iterator();
  for (  SimulateDocumentResult result : otherResponse.getResults()) {
    if (isVerbose) {
      SimulateDocumentVerboseResult expectedSimulateDocumentVerboseResult=(SimulateDocumentVerboseResult)expectedResultIterator.next();
      assertThat(result,instanceOf(SimulateDocumentVerboseResult.class));
      SimulateDocumentVerboseResult simulateDocumentVerboseResult=(SimulateDocumentVerboseResult)result;
      assertThat(simulateDocumentVerboseResult.getProcessorResults().size(),equalTo(expectedSimulateDocumentVerboseResult.getProcessorResults().size()));
      Iterator<SimulateProcessorResult> expectedProcessorResultIterator=expectedSimulateDocumentVerboseResult.getProcessorResults().iterator();
      for (      SimulateProcessorResult simulateProcessorResult : simulateDocumentVerboseResult.getProcessorResults()) {
        SimulateProcessorResult expectedProcessorResult=expectedProcessorResultIterator.next();
        assertThat(simulateProcessorResult.getProcessorTag(),equalTo(expectedProcessorResult.getProcessorTag()));
        if (simulateProcessorResult.getIngestDocument() != null) {
          assertIngestDocument(simulateProcessorResult.getIngestDocument(),expectedProcessorResult.getIngestDocument());
        }
        if (expectedProcessorResult.getFailure() == null) {
          assertThat(simulateProcessorResult.getFailure(),nullValue());
        }
 else {
          assertThat(simulateProcessorResult.getFailure(),instanceOf(IllegalArgumentException.class));
          IllegalArgumentException e=(IllegalArgumentException)simulateProcessorResult.getFailure();
          assertThat(e.getMessage(),equalTo("test"));
        }
      }
    }
 else {
      SimulateDocumentBaseResult expectedSimulateDocumentBaseResult=(SimulateDocumentBaseResult)expectedResultIterator.next();
      assertThat(result,instanceOf(SimulateDocumentBaseResult.class));
      SimulateDocumentBaseResult simulateDocumentBaseResult=(SimulateDocumentBaseResult)result;
      if (simulateDocumentBaseResult.getIngestDocument() != null) {
        assertIngestDocument(simulateDocumentBaseResult.getIngestDocument(),expectedSimulateDocumentBaseResult.getIngestDocument());
      }
      if (expectedSimulateDocumentBaseResult.getFailure() == null) {
        assertThat(simulateDocumentBaseResult.getFailure(),nullValue());
      }
 else {
        assertThat(simulateDocumentBaseResult.getFailure(),instanceOf(IllegalArgumentException.class));
        IllegalArgumentException e=(IllegalArgumentException)simulateDocumentBaseResult.getFailure();
        assertThat(e.getMessage(),equalTo("test"));
      }
    }
  }
}
