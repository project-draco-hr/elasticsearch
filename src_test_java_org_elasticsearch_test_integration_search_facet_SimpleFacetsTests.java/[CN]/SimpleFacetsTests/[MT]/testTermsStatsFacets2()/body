{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  String mapping=jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("num").field("type","float").endObject().endObject().endObject().endObject().string();
  client.admin().indices().prepareCreate("test").addMapping("type1",mapping).execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  for (int i=0; i < 20; i++) {
    client.prepareIndex("test","type1",Integer.toString(i)).setSource("num",i % 10).execute().actionGet();
  }
  client.admin().indices().prepareRefresh().execute().actionGet();
  for (int i=0; i < numberOfRuns(); i++) {
    SearchResponse searchResponse=client.prepareSearch().setQuery(matchAllQuery()).addFacet(termsStatsFacet("stats1").keyField("num").valueScript("doc.score").order(TermsStatsFacet.ComparatorType.COUNT)).addFacet(termsStatsFacet("stats2").keyField("num").valueScript("doc.score").order(TermsStatsFacet.ComparatorType.TOTAL)).execute().actionGet();
    if (searchResponse.getFailedShards() > 0) {
      logger.warn("Failed shards:");
      for (      ShardSearchFailure shardSearchFailure : searchResponse.getShardFailures()) {
        logger.warn("-> {}",shardSearchFailure);
      }
    }
    assertThat(searchResponse.getFailedShards(),equalTo(0));
    TermsStatsFacet facet=searchResponse.getFacets().facet("stats1");
    assertThat(facet.getEntries().size(),equalTo(10));
    facet=searchResponse.getFacets().facet("stats2");
    assertThat(facet.getEntries().size(),equalTo(10));
  }
}
