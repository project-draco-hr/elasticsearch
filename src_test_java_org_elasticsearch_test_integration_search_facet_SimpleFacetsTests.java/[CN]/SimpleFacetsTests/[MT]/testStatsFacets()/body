{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  String mapping=jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("num").field("type","integer").endObject().startObject("multi_num").field("type","float").endObject().endObject().endObject().endObject().string();
  client.admin().indices().prepareCreate("test").addMapping("type1",mapping).execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",1).startArray("multi_num").value(1.0).value(2.0f).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareFlush().setRefresh(true).execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",2).startArray("multi_num").value(3.0).value(4.0f).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareRefresh().execute().actionGet();
  for (int i=0; i < numberOfRuns(); i++) {
    SearchResponse searchResponse=client.prepareSearch().setQuery(matchAllQuery()).addFacet(statisticalFacet("stats1").field("num")).addFacet(statisticalFacet("stats2").field("multi_num")).addFacet(statisticalScriptFacet("stats3").script("doc['num'].value * 2")).execute().actionGet();
    if (searchResponse.failedShards() > 0) {
      logger.warn("Failed shards:");
      for (      ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {
        logger.warn("-> {}",shardSearchFailure);
      }
    }
    assertThat(searchResponse.failedShards(),equalTo(0));
    StatisticalFacet facet=searchResponse.facets().facet("stats1");
    assertThat(facet.getName(),equalTo(facet.getName()));
    assertThat(facet.getCount(),equalTo(2l));
    assertThat(facet.getTotal(),equalTo(3d));
    assertThat(facet.getMin(),equalTo(1d));
    assertThat(facet.getMax(),equalTo(2d));
    assertThat(facet.getMean(),equalTo(1.5d));
    assertThat(facet.getSumOfSquares(),equalTo(5d));
    facet=searchResponse.facets().facet("stats2");
    assertThat(facet.getName(),equalTo(facet.getName()));
    assertThat(facet.getCount(),equalTo(4l));
    assertThat(facet.getTotal(),equalTo(10d));
    assertThat(facet.getMin(),equalTo(1d));
    assertThat(facet.getMax(),equalTo(4d));
    assertThat(facet.getMean(),equalTo(2.5d));
    facet=searchResponse.facets().facet("stats3");
    assertThat(facet.getName(),equalTo(facet.getName()));
    assertThat(facet.getCount(),equalTo(2l));
    assertThat(facet.getTotal(),equalTo(6d));
    assertThat(facet.getMin(),equalTo(2d));
    assertThat(facet.getMax(),equalTo(4d));
    assertThat(facet.getMean(),equalTo(3d));
    assertThat(facet.getSumOfSquares(),equalTo(20d));
    searchResponse=client.prepareSearch().setQuery(matchAllQuery()).addFacet(statisticalFacet("stats").fields("num","multi_num")).execute().actionGet();
    facet=searchResponse.facets().facet("stats");
    assertThat(facet.getName(),equalTo(facet.getName()));
    assertThat(facet.getCount(),equalTo(6l));
    assertThat(facet.getTotal(),equalTo(13d));
    assertThat(facet.getMin(),equalTo(1d));
    assertThat(facet.getMax(),equalTo(4d));
    assertThat(facet.getMean(),equalTo(13d / 6d));
    assertThat(facet.getSumOfSquares(),equalTo(35d));
    searchResponse=client.prepareSearch().setQuery(matchAllQuery()).addFacet(statisticalFacet("stats").field("num")).addFacet(statisticalFacet("stats").field("multi_num")).execute().actionGet();
    facet=searchResponse.facets().facet("stats");
    assertThat(facet.getName(),equalTo(facet.getName()));
    assertThat(facet.getCount(),equalTo(6l));
    assertThat(facet.getTotal(),equalTo(13d));
    assertThat(facet.getMin(),equalTo(1d));
    assertThat(facet.getMax(),equalTo(4d));
    assertThat(facet.getMean(),equalTo(13d / 6d));
    assertThat(facet.getSumOfSquares(),equalTo(35d));
  }
}
