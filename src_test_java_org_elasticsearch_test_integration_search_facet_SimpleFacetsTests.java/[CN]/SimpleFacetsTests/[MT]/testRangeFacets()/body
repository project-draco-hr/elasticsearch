{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  String mapping=jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("num").field("type","integer").endObject().startObject("multi_num").field("type","float").endObject().startObject("value").field("type","integer").endObject().startObject("multi_value").field("type","float").endObject().startObject("date").field("type","date").endObject().endObject().endObject().endObject().string();
  client.admin().indices().prepareCreate("test").addMapping("type1",mapping).execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",1055).field("value",1).field("date","1970-01-01T00:00:00").startArray("multi_num").value(13.0f).value(23.f).endArray().startArray("multi_value").value(10).value(11).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareFlush().setRefresh(true).execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",1065).field("value",2).field("date","1970-01-01T00:00:25").startArray("multi_num").value(15.0f).value(31.0f).endArray().startArray("multi_value").value(20).value(21).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareRefresh().execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",1175).field("value",3).field("date","1970-01-01T00:00:52").startArray("multi_num").value(17.0f).value(25.0f).endArray().startArray("multi_value").value(30).value(31).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareRefresh().execute().actionGet();
  for (int i=0; i < numberOfRuns(); i++) {
    SearchResponse searchResponse=client.prepareSearch().setQuery(matchAllQuery()).addFacet(rangeFacet("range1").field("num").addUnboundedFrom(1056).addRange(1000,1170).addUnboundedTo(1170)).addFacet(rangeFacet("range2").keyField("num").valueField("value").addUnboundedFrom(1056).addRange(1000,1170).addUnboundedTo(1170)).addFacet(rangeFacet("range3").keyField("num").valueField("multi_value").addUnboundedFrom(1056).addRange(1000,1170).addUnboundedTo(1170)).addFacet(rangeFacet("range4").keyField("multi_num").valueField("value").addUnboundedFrom(16).addRange(10,26).addUnboundedTo(20)).addFacet(rangeScriptFacet("range5").keyScript("doc['num'].value").valueScript("doc['value'].value").addUnboundedFrom(1056).addRange(1000,1170).addUnboundedTo(1170)).addFacet(rangeFacet("range6").field("date").addUnboundedFrom("1970-01-01T00:00:26").addRange("1970-01-01T00:00:15","1970-01-01T00:00:53").addUnboundedTo("1970-01-01T00:00:26")).execute().actionGet();
    if (searchResponse.getFailedShards() > 0) {
      logger.warn("Failed shards:");
      for (      ShardSearchFailure shardSearchFailure : searchResponse.getShardFailures()) {
        logger.warn("-> {}",shardSearchFailure);
      }
    }
    assertThat(searchResponse.getFailedShards(),equalTo(0));
    RangeFacet facet=searchResponse.getFacets().facet("range1");
    assertThat(facet.getName(),equalTo("range1"));
    assertThat(facet.getEntries().size(),equalTo(3));
    assertThat(facet.getEntries().get(0).getTo(),closeTo(1056,0.000001));
    assertThat(Double.parseDouble(facet.getEntries().get(0).getToAsString()),closeTo(1056,0.000001));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(0).getTotalCount(),equalTo(1l));
    assertThat(facet.getEntries().get(0).getTotal(),closeTo(1055,0.000001));
    assertThat(facet.getEntries().get(0).getMin(),closeTo(1055,0.000001));
    assertThat(facet.getEntries().get(0).getMax(),closeTo(1055,0.000001));
    assertThat(facet.getEntries().get(1).getFrom(),closeTo(1000,0.000001));
    assertThat(Double.parseDouble(facet.getEntries().get(1).getFromAsString()),closeTo(1000,0.000001));
    assertThat(facet.getEntries().get(1).getTo(),closeTo(1170,0.000001));
    assertThat(Double.parseDouble(facet.getEntries().get(1).getToAsString()),closeTo(1170,0.000001));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(1).getTotalCount(),equalTo(2l));
    assertThat(facet.getEntries().get(1).getTotal(),closeTo(1055 + 1065,0.000001));
    assertThat(facet.getEntries().get(1).getMin(),closeTo(1055,0.000001));
    assertThat(facet.getEntries().get(1).getMax(),closeTo(1065,0.000001));
    assertThat(facet.getEntries().get(2).getFrom(),closeTo(1170,0.000001));
    assertThat(facet.getEntries().get(2).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(2).getTotalCount(),equalTo(1l));
    assertThat(facet.getEntries().get(2).getTotal(),closeTo(1175,0.000001));
    assertThat(facet.getEntries().get(2).getMin(),closeTo(1175,0.000001));
    assertThat(facet.getEntries().get(2).getMax(),closeTo(1175,0.000001));
    facet=searchResponse.getFacets().facet("range2");
    assertThat(facet.getName(),equalTo("range2"));
    assertThat(facet.getEntries().size(),equalTo(3));
    assertThat(facet.getEntries().get(0).getTo(),closeTo(1056,0.000001));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(0).getTotal(),closeTo(1,0.000001));
    assertThat(facet.getEntries().get(1).getFrom(),closeTo(1000,0.000001));
    assertThat(facet.getEntries().get(1).getTo(),closeTo(1170,0.000001));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(1).getTotal(),closeTo(3,0.000001));
    assertThat(facet.getEntries().get(2).getFrom(),closeTo(1170,0.000001));
    assertThat(facet.getEntries().get(2).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(2).getTotal(),closeTo(3,0.000001));
    facet=searchResponse.getFacets().facet("range3");
    assertThat(facet.getName(),equalTo("range3"));
    assertThat(facet.getEntries().size(),equalTo(3));
    assertThat(facet.getEntries().get(0).getTo(),closeTo(1056,0.000001));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(0).getTotalCount(),equalTo(2l));
    assertThat(facet.getEntries().get(0).getTotal(),closeTo(10 + 11,0.000001));
    assertThat(facet.getEntries().get(0).getMin(),closeTo(10,0.000001));
    assertThat(facet.getEntries().get(0).getMax(),closeTo(11,0.000001));
    assertThat(facet.getEntries().get(1).getFrom(),closeTo(1000,0.000001));
    assertThat(facet.getEntries().get(1).getTo(),closeTo(1170,0.000001));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(1).getTotalCount(),equalTo(4l));
    assertThat(facet.getEntries().get(1).getTotal(),closeTo(62,0.000001));
    assertThat(facet.getEntries().get(1).getMin(),closeTo(10,0.000001));
    assertThat(facet.getEntries().get(1).getMax(),closeTo(21,0.000001));
    assertThat(facet.getEntries().get(2).getFrom(),closeTo(1170,0.000001));
    assertThat(facet.getEntries().get(2).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(2).getTotalCount(),equalTo(2l));
    assertThat(facet.getEntries().get(2).getTotal(),closeTo(61,0.000001));
    assertThat(facet.getEntries().get(2).getMin(),closeTo(30,0.000001));
    assertThat(facet.getEntries().get(2).getMax(),closeTo(31,0.000001));
    facet=searchResponse.getFacets().facet("range4");
    assertThat(facet.getName(),equalTo("range4"));
    assertThat(facet.getEntries().size(),equalTo(3));
    assertThat(facet.getEntries().get(0).getTo(),closeTo(16,0.000001));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(0).getTotal(),closeTo(3,0.000001));
    assertThat(facet.getEntries().get(1).getFrom(),closeTo(10,0.000001));
    assertThat(facet.getEntries().get(1).getTo(),closeTo(26,0.000001));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(3l));
    assertThat(facet.getEntries().get(1).getTotal(),closeTo(1 + 2 + 3,0.000001));
    assertThat(facet.getEntries().get(2).getFrom(),closeTo(20,0.000001));
    assertThat(facet.getEntries().get(2).getCount(),equalTo(3l));
    assertThat(facet.getEntries().get(2).getTotal(),closeTo(1 + 2 + 3,0.000001));
    facet=searchResponse.getFacets().facet("range5");
    assertThat(facet.getName(),equalTo("range5"));
    assertThat(facet.getEntries().size(),equalTo(3));
    assertThat(facet.getEntries().get(0).getTo(),closeTo(1056,0.000001));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(0).getTotal(),closeTo(1,0.000001));
    assertThat(facet.getEntries().get(1).getFrom(),closeTo(1000,0.000001));
    assertThat(facet.getEntries().get(1).getTo(),closeTo(1170,0.000001));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(1).getTotal(),closeTo(3,0.000001));
    assertThat(facet.getEntries().get(2).getFrom(),closeTo(1170,0.000001));
    assertThat(facet.getEntries().get(2).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(2).getTotal(),closeTo(3,0.000001));
    facet=searchResponse.getFacets().facet("range6");
    assertThat(facet.getName(),equalTo("range6"));
    assertThat(facet.getEntries().size(),equalTo(3));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(0).getToAsString(),equalTo("1970-01-01T00:00:26"));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(1).getFromAsString(),equalTo("1970-01-01T00:00:15"));
    assertThat(facet.getEntries().get(1).getToAsString(),equalTo("1970-01-01T00:00:53"));
    assertThat(facet.getEntries().get(2).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(2).getFromAsString(),equalTo("1970-01-01T00:00:26"));
  }
}
