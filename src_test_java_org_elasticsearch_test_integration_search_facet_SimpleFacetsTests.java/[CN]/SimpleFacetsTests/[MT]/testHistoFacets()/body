{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  String mapping=jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("num").field("type","integer").endObject().startObject("multi_num").field("type","float").endObject().startObject("date").field("type","date").endObject().endObject().endObject().endObject().string();
  client.admin().indices().prepareCreate("test").addMapping("type1",mapping).execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",1055).field("date","1970-01-01T00:00:00").startArray("multi_num").value(13.0f).value(23.f).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareFlush().setRefresh(true).execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",1065).field("date","1970-01-01T00:00:25").startArray("multi_num").value(15.0f).value(31.0f).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareRefresh().execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",1175).field("date","1970-01-01T00:02:00").startArray("multi_num").value(17.0f).value(25.0f).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareRefresh().execute().actionGet();
  for (int i=0; i < numberOfRuns(); i++) {
    SearchResponse searchResponse=client.prepareSearch().setQuery(matchAllQuery()).addFacet(histogramFacet("stats1").field("num").valueField("num").interval(100)).addFacet(histogramFacet("stats2").field("multi_num").valueField("multi_num").interval(10)).addFacet(histogramFacet("stats3").keyField("num").valueField("multi_num").interval(100)).addFacet(histogramScriptFacet("stats4").keyScript("doc['date'].date.minuteOfHour").valueScript("doc['num'].value")).addFacet(histogramFacet("stats5").field("date").interval(1,TimeUnit.MINUTES)).addFacet(histogramScriptFacet("stats6").keyField("num").valueScript("doc['num'].value").interval(100)).addFacet(histogramFacet("stats7").field("num").interval(100)).addFacet(histogramScriptFacet("stats8").keyField("num").valueScript("doc.score").interval(100)).addFacet(histogramFacet("stats9").field("num").bounds(1000,1200).interval(100)).addFacet(histogramFacet("stats10").field("num").bounds(1000,1300).interval(100)).addFacet(histogramFacet("stats11").field("num").valueField("num").bounds(1000,1300).interval(100)).addFacet(histogramScriptFacet("stats12").keyField("num").valueScript("doc['num'].value").bounds(1000,1300).interval(100)).addFacet(histogramFacet("stats13").field("num").bounds(1056,1176).interval(100)).addFacet(histogramFacet("stats14").field("num").valueField("num").bounds(1056,1176).interval(100)).execute().actionGet();
    if (searchResponse.failedShards() > 0) {
      logger.warn("Failed shards:");
      for (      ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {
        logger.warn("-> {}",shardSearchFailure);
      }
    }
    assertThat(searchResponse.failedShards(),equalTo(0));
    HistogramFacet facet;
    facet=searchResponse.facets().facet("stats1");
    assertThat(facet.name(),equalTo("stats1"));
    assertThat(facet.entries().size(),equalTo(2));
    assertThat(facet.entries().get(0).key(),equalTo(1000l));
    assertThat(facet.entries().get(0).count(),equalTo(2l));
    assertThat(facet.entries().get(0).min(),closeTo(1055d,0.000001));
    assertThat(facet.entries().get(0).max(),closeTo(1065d,0.000001));
    assertThat(facet.entries().get(0).totalCount(),equalTo(2l));
    assertThat(facet.entries().get(0).total(),equalTo(2120d));
    assertThat(facet.entries().get(0).mean(),equalTo(1060d));
    assertThat(facet.entries().get(1).key(),equalTo(1100l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    assertThat(facet.entries().get(1).min(),closeTo(1175d,0.000001));
    assertThat(facet.entries().get(1).max(),closeTo(1175d,0.000001));
    assertThat(facet.entries().get(1).totalCount(),equalTo(1l));
    assertThat(facet.entries().get(1).total(),equalTo(1175d));
    assertThat(facet.entries().get(1).mean(),equalTo(1175d));
    facet=searchResponse.facets().facet("stats2");
    assertThat(facet.name(),equalTo("stats2"));
    assertThat(facet.entries().size(),equalTo(3));
    assertThat(facet.entries().get(0).key(),equalTo(10l));
    assertThat(facet.entries().get(0).count(),equalTo(3l));
    assertThat(facet.entries().get(0).totalCount(),equalTo(3l));
    assertThat(facet.entries().get(0).total(),equalTo(45d));
    assertThat(facet.entries().get(0).mean(),equalTo(15d));
    assertThat(facet.entries().get(1).key(),equalTo(20l));
    assertThat(facet.entries().get(1).count(),equalTo(2l));
    assertThat(facet.entries().get(1).totalCount(),equalTo(2l));
    assertThat(facet.entries().get(1).total(),equalTo(48d));
    assertThat(facet.entries().get(1).mean(),equalTo(24d));
    assertThat(facet.entries().get(2).key(),equalTo(30l));
    assertThat(facet.entries().get(2).count(),equalTo(1l));
    assertThat(facet.entries().get(2).totalCount(),equalTo(1l));
    assertThat(facet.entries().get(2).total(),equalTo(31d));
    assertThat(facet.entries().get(2).mean(),equalTo(31d));
    facet=searchResponse.facets().facet("stats3");
    assertThat(facet.name(),equalTo("stats3"));
    assertThat(facet.entries().size(),equalTo(2));
    assertThat(facet.entries().get(0).key(),equalTo(1000l));
    assertThat(facet.entries().get(0).count(),equalTo(2l));
    assertThat(facet.entries().get(0).totalCount(),equalTo(4l));
    assertThat(facet.entries().get(0).total(),equalTo(82d));
    assertThat(facet.entries().get(0).mean(),equalTo(20.5d));
    assertThat(facet.entries().get(1).key(),equalTo(1100l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    assertThat(facet.entries().get(1).totalCount(),equalTo(2l));
    assertThat(facet.entries().get(1).total(),equalTo(42d));
    assertThat(facet.entries().get(1).mean(),equalTo(21d));
    facet=searchResponse.facets().facet("stats4");
    assertThat(facet.name(),equalTo("stats4"));
    assertThat(facet.entries().size(),equalTo(2));
    assertThat(facet.entries().get(0).key(),equalTo(0l));
    assertThat(facet.entries().get(0).count(),equalTo(2l));
    assertThat(facet.entries().get(0).totalCount(),equalTo(2l));
    assertThat(facet.entries().get(0).total(),equalTo(2120d));
    assertThat(facet.entries().get(0).mean(),equalTo(1060d));
    assertThat(facet.entries().get(1).key(),equalTo(2l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    assertThat(facet.entries().get(1).totalCount(),equalTo(1l));
    assertThat(facet.entries().get(1).total(),equalTo(1175d));
    assertThat(facet.entries().get(1).mean(),equalTo(1175d));
    facet=searchResponse.facets().facet("stats5");
    assertThat(facet.name(),equalTo("stats5"));
    assertThat(facet.entries().size(),equalTo(2));
    assertThat(facet.entries().get(0).key(),equalTo(0l));
    assertThat(facet.entries().get(0).count(),equalTo(2l));
    assertThat(facet.entries().get(1).key(),equalTo(TimeValue.timeValueMinutes(2).millis()));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    facet=searchResponse.facets().facet("stats6");
    assertThat(facet.name(),equalTo("stats6"));
    assertThat(facet.entries().size(),equalTo(2));
    assertThat(facet.entries().get(0).key(),equalTo(1000l));
    assertThat(facet.entries().get(0).count(),equalTo(2l));
    assertThat(facet.entries().get(0).totalCount(),equalTo(2l));
    assertThat(facet.entries().get(0).total(),equalTo(2120d));
    assertThat(facet.entries().get(0).mean(),equalTo(1060d));
    assertThat(facet.entries().get(1).key(),equalTo(1100l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    assertThat(facet.entries().get(1).totalCount(),equalTo(1l));
    assertThat(facet.entries().get(1).total(),equalTo(1175d));
    assertThat(facet.entries().get(1).mean(),equalTo(1175d));
    facet=searchResponse.facets().facet("stats7");
    assertThat(facet.name(),equalTo("stats7"));
    assertThat(facet.entries().size(),equalTo(2));
    assertThat(facet.entries().get(0).key(),equalTo(1000l));
    assertThat(facet.entries().get(0).count(),equalTo(2l));
    assertThat(facet.entries().get(1).key(),equalTo(1100l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    facet=searchResponse.facets().facet("stats8");
    assertThat(facet.name(),equalTo("stats8"));
    assertThat(facet.entries().size(),equalTo(2));
    assertThat(facet.entries().get(0).key(),equalTo(1000l));
    assertThat(facet.entries().get(0).count(),equalTo(2l));
    assertThat(facet.entries().get(0).totalCount(),equalTo(2l));
    assertThat(facet.entries().get(0).total(),equalTo(2d));
    assertThat(facet.entries().get(0).mean(),equalTo(1d));
    assertThat(facet.entries().get(1).key(),equalTo(1100l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    assertThat(facet.entries().get(1).totalCount(),equalTo(1l));
    assertThat(facet.entries().get(1).total(),equalTo(1d));
    assertThat(facet.entries().get(1).mean(),equalTo(1d));
    facet=searchResponse.facets().facet("stats9");
    assertThat(facet.name(),equalTo("stats9"));
    assertThat(facet.entries().size(),equalTo(2));
    assertThat(facet.entries().get(0).key(),equalTo(1000l));
    assertThat(facet.entries().get(0).count(),equalTo(2l));
    assertThat(facet.entries().get(1).key(),equalTo(1100l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    facet=searchResponse.facets().facet("stats10");
    assertThat(facet.name(),equalTo("stats10"));
    assertThat(facet.entries().size(),equalTo(3));
    assertThat(facet.entries().get(0).key(),equalTo(1000l));
    assertThat(facet.entries().get(0).count(),equalTo(2l));
    assertThat(facet.entries().get(1).key(),equalTo(1100l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    assertThat(facet.entries().get(2).key(),equalTo(1200l));
    assertThat(facet.entries().get(2).count(),equalTo(0l));
    facet=searchResponse.facets().facet("stats11");
    assertThat(facet.name(),equalTo("stats11"));
    assertThat(facet.entries().size(),equalTo(3));
    assertThat(facet.entries().get(0).key(),equalTo(1000l));
    assertThat(facet.entries().get(0).count(),equalTo(2l));
    assertThat(facet.entries().get(0).min(),closeTo(1055d,0.000001));
    assertThat(facet.entries().get(0).max(),closeTo(1065d,0.000001));
    assertThat(facet.entries().get(0).totalCount(),equalTo(2l));
    assertThat(facet.entries().get(0).total(),equalTo(2120d));
    assertThat(facet.entries().get(0).mean(),equalTo(1060d));
    assertThat(facet.entries().get(1).key(),equalTo(1100l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    assertThat(facet.entries().get(1).min(),closeTo(1175d,0.000001));
    assertThat(facet.entries().get(1).max(),closeTo(1175d,0.000001));
    assertThat(facet.entries().get(1).totalCount(),equalTo(1l));
    assertThat(facet.entries().get(1).total(),equalTo(1175d));
    assertThat(facet.entries().get(1).mean(),equalTo(1175d));
    assertThat(facet.entries().get(2).key(),equalTo(1200l));
    assertThat(facet.entries().get(2).count(),equalTo(0l));
    assertThat(facet.entries().get(2).totalCount(),equalTo(0l));
    facet=searchResponse.facets().facet("stats12");
    assertThat(facet.name(),equalTo("stats12"));
    assertThat(facet.entries().size(),equalTo(3));
    assertThat(facet.entries().get(0).key(),equalTo(1000l));
    assertThat(facet.entries().get(0).count(),equalTo(2l));
    assertThat(facet.entries().get(0).min(),closeTo(1055d,0.000001));
    assertThat(facet.entries().get(0).max(),closeTo(1065d,0.000001));
    assertThat(facet.entries().get(0).totalCount(),equalTo(2l));
    assertThat(facet.entries().get(0).total(),equalTo(2120d));
    assertThat(facet.entries().get(0).mean(),equalTo(1060d));
    assertThat(facet.entries().get(1).key(),equalTo(1100l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    assertThat(facet.entries().get(1).min(),closeTo(1175d,0.000001));
    assertThat(facet.entries().get(1).max(),closeTo(1175d,0.000001));
    assertThat(facet.entries().get(1).totalCount(),equalTo(1l));
    assertThat(facet.entries().get(1).total(),equalTo(1175d));
    assertThat(facet.entries().get(1).mean(),equalTo(1175d));
    assertThat(facet.entries().get(2).key(),equalTo(1200l));
    assertThat(facet.entries().get(2).count(),equalTo(0l));
    assertThat(facet.entries().get(2).totalCount(),equalTo(0l));
    facet=searchResponse.facets().facet("stats13");
    assertThat(facet.name(),equalTo("stats13"));
    assertThat(facet.entries().size(),equalTo(2));
    assertThat(facet.entries().get(0).key(),equalTo(1000l));
    assertThat(facet.entries().get(0).count(),equalTo(1l));
    assertThat(facet.entries().get(1).key(),equalTo(1100l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
    facet=searchResponse.facets().facet("stats14");
    assertThat(facet.name(),equalTo("stats14"));
    assertThat(facet.entries().size(),equalTo(2));
    assertThat(facet.entries().get(0).key(),equalTo(1000l));
    assertThat(facet.entries().get(0).count(),equalTo(1l));
    assertThat(facet.entries().get(1).key(),equalTo(1100l));
    assertThat(facet.entries().get(1).count(),equalTo(1l));
  }
}
