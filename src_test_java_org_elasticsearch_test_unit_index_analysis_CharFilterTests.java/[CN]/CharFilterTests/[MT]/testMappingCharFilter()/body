{
  Index index=new Index("test");
  Settings settings=settingsBuilder().put("index.analysis.char_filter.my_mapping.type","mapping").putArray("index.analysis.char_filter.my_mapping.mappings","ph=>f","qu=>q").put("index.analysis.analyzer.custom_with_char_filter.tokenizer","standard").putArray("index.analysis.analyzer.custom_with_char_filter.char_filter","my_mapping").build();
  Injector parentInjector=new ModulesBuilder().add(new SettingsModule(settings),new EnvironmentModule(new Environment(settings)),new IndicesAnalysisModule()).createInjector();
  Injector injector=new ModulesBuilder().add(new IndexSettingsModule(index,settings),new IndexNameModule(index),new AnalysisModule(settings,parentInjector.getInstance(IndicesAnalysisService.class))).createChildInjector(parentInjector);
  AnalysisService analysisService=injector.getInstance(AnalysisService.class);
  NamedAnalyzer analyzer1=analysisService.analyzer("custom_with_char_filter");
  assertSimpleTSOutput(analyzer1.tokenStream("test",new StringReader("jeff quit phish")),new String[]{"jeff","qit","fish"});
  assertSimpleTSOutput(analyzer1.tokenStream("test",new StringReader("jeff quit phish")),new String[]{"jeff","qit","fish"});
}
