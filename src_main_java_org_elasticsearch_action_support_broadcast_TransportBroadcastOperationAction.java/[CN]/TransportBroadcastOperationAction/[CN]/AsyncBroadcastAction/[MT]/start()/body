{
  if (shardsIts.size() == 0) {
    try {
      listener.onResponse(newResponse(request,new AtomicReferenceArray(0),clusterState));
    }
 catch (    Throwable e) {
      listener.onFailure(e);
    }
  }
  request.beforeStart();
  int localOperations=0;
  int shardIndex=-1;
  for (  final ShardIterator shardIt : shardsIts) {
    shardIndex++;
    final ShardRouting shard=shardIt.firstOrNull();
    if (shard != null) {
      if (shard.currentNodeId().equals(nodes.localNodeId())) {
        localOperations++;
      }
 else {
        performOperation(shardIt,shardIndex,true);
      }
    }
 else {
      onOperation(null,shardIt,shardIndex,new NoShardAvailableActionException(shardIt.shardId()));
    }
  }
  if (localOperations > 0) {
    if (request.operationThreading() == BroadcastOperationThreading.SINGLE_THREAD) {
      request.beforeLocalFork();
      threadPool.executor(executor).execute(new Runnable(){
        @Override public void run(){
          int shardIndex=-1;
          for (          final ShardIterator shardIt : shardsIts) {
            shardIndex++;
            final ShardRouting shard=shardIt.firstOrNull();
            if (shard != null) {
              if (shard.currentNodeId().equals(nodes.localNodeId())) {
                performOperation(shardIt,shardIndex,false);
              }
            }
          }
        }
      }
);
    }
 else {
      boolean localAsync=request.operationThreading() == BroadcastOperationThreading.THREAD_PER_SHARD;
      if (localAsync) {
        request.beforeLocalFork();
      }
      shardIndex=-1;
      for (      final ShardIterator shardIt : shardsIts) {
        shardIndex++;
        final ShardRouting shard=shardIt.firstOrNull();
        if (shard != null) {
          if (shard.currentNodeId().equals(nodes.localNodeId())) {
            performOperation(shardIt,shardIndex,localAsync);
          }
        }
      }
    }
  }
}
