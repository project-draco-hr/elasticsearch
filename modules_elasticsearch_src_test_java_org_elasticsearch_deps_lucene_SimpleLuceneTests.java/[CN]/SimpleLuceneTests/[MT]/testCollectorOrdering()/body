{
  Directory dir=new RAMDirectory();
  IndexWriter indexWriter=new IndexWriter(dir,new IndexWriterConfig(Lucene.VERSION,Lucene.STANDARD_ANALYZER));
  for (int i=0; i < 5000; i++) {
    indexWriter.addDocument(doc().add(field("_id",Integer.toString(i))).build());
    if ((i % 131) == 0) {
      indexWriter.commit();
    }
  }
  IndexReader reader=IndexReader.open(indexWriter,true);
  IndexSearcher searcher=new IndexSearcher(reader);
  for (int i=0; i < 5000; i++) {
    final int index=i;
    final AtomicInteger docId=new AtomicInteger();
    searcher.search(new MatchAllDocsQuery(),new Collector(){
      int counter=0;
      int docBase=0;
      @Override public void setScorer(      Scorer scorer) throws IOException {
      }
      @Override public void collect(      int doc) throws IOException {
        if (counter++ == index) {
          docId.set(docBase + doc);
        }
      }
      @Override public void setNextReader(      IndexReader reader,      int docBase) throws IOException {
        this.docBase=docBase;
      }
      @Override public boolean acceptsDocsOutOfOrder(){
        return true;
      }
    }
);
    Document doc=searcher.doc(docId.get());
    assertThat(doc.get("_id"),equalTo(Integer.toString(i)));
  }
}
