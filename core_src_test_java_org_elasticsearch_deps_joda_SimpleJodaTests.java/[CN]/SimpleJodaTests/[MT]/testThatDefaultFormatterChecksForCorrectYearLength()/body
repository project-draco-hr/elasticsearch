{
  assertValidDateFormatParsing("basicDate","20140303");
  assertDateFormatParsingThrowingException("basicDate","2010303");
  assertValidDateFormatParsing("basicDateTime","20140303T124343.123Z");
  assertValidDateFormatParsing("basicDateTime","00050303T124343.123Z");
  assertDateFormatParsingThrowingException("basicDateTime","50303T124343.123Z");
  assertValidDateFormatParsing("basicDateTimeNoMillis","20140303T124343Z");
  assertValidDateFormatParsing("basicDateTimeNoMillis","00050303T124343Z");
  assertDateFormatParsingThrowingException("basicDateTimeNoMillis","50303T124343Z");
  assertValidDateFormatParsing("basicOrdinalDate","0005165");
  assertDateFormatParsingThrowingException("basicOrdinalDate","5165");
  assertValidDateFormatParsing("basicOrdinalDateTime","0005165T124343.123Z");
  assertValidDateFormatParsing("basicOrdinalDateTime","0005165T124343.123Z");
  assertDateFormatParsingThrowingException("basicOrdinalDateTime","5165T124343.123Z");
  assertValidDateFormatParsing("basicOrdinalDateTimeNoMillis","0005165T124343Z");
  assertValidDateFormatParsing("basicOrdinalDateTimeNoMillis","0005165T124343Z");
  assertDateFormatParsingThrowingException("basicOrdinalDateTimeNoMillis","5165T124343Z");
  assertValidDateFormatParsing("basicTime","090909.123Z");
  assertDateFormatParsingThrowingException("basicTime","90909.123Z");
  assertValidDateFormatParsing("basicTimeNoMillis","090909Z");
  assertDateFormatParsingThrowingException("basicTimeNoMillis","90909Z");
  assertValidDateFormatParsing("basicTTime","T090909.123Z");
  assertDateFormatParsingThrowingException("basicTTime","T90909.123Z");
  assertValidDateFormatParsing("basicTTimeNoMillis","T090909Z");
  assertDateFormatParsingThrowingException("basicTTimeNoMillis","T90909Z");
  assertValidDateFormatParsing("basicWeekDate","0005W414");
  assertValidDateFormatParsing("basicWeekDate","5W414","0005W414");
  assertDateFormatParsingThrowingException("basicWeekDate","5W14");
  assertValidDateFormatParsing("strictBasicWeekDate","0005W414");
  assertDateFormatParsingThrowingException("strictBasicWeekDate","0005W47");
  assertDateFormatParsingThrowingException("strictBasicWeekDate","5W414");
  assertDateFormatParsingThrowingException("strictBasicWeekDate","5W14");
  assertValidDateFormatParsing("basicWeekDateTime","0005W414T124343.123Z");
  assertValidDateFormatParsing("basicWeekDateTime","5W414T124343.123Z","0005W414T124343.123Z");
  assertDateFormatParsingThrowingException("basicWeekDateTime","5W14T124343.123Z");
  assertValidDateFormatParsing("strictBasicWeekDateTime","0005W414T124343.123Z");
  assertDateFormatParsingThrowingException("strictBasicWeekDateTime","0005W47T124343.123Z");
  assertDateFormatParsingThrowingException("strictBasicWeekDateTime","5W414T124343.123Z");
  assertDateFormatParsingThrowingException("strictBasicWeekDateTime","5W14T124343.123Z");
  assertValidDateFormatParsing("basicWeekDateTimeNoMillis","0005W414T124343Z");
  assertValidDateFormatParsing("basicWeekDateTimeNoMillis","5W414T124343Z","0005W414T124343Z");
  assertDateFormatParsingThrowingException("basicWeekDateTimeNoMillis","5W14T124343Z");
  assertValidDateFormatParsing("strictBasicWeekDateTimeNoMillis","0005W414T124343Z");
  assertDateFormatParsingThrowingException("strictBasicWeekDateTimeNoMillis","0005W47T124343Z");
  assertDateFormatParsingThrowingException("strictBasicWeekDateTimeNoMillis","5W414T124343Z");
  assertDateFormatParsingThrowingException("strictBasicWeekDateTimeNoMillis","5W14T124343Z");
  assertValidDateFormatParsing("date","0005-06-03");
  assertValidDateFormatParsing("date","5-6-3","0005-06-03");
  assertValidDateFormatParsing("strictDate","0005-06-03");
  assertDateFormatParsingThrowingException("strictDate","5-6-3");
  assertDateFormatParsingThrowingException("strictDate","0005-06-3");
  assertDateFormatParsingThrowingException("strictDate","0005-6-03");
  assertDateFormatParsingThrowingException("strictDate","5-06-03");
  assertValidDateFormatParsing("dateHour","0005-06-03T12");
  assertValidDateFormatParsing("dateHour","5-6-3T1","0005-06-03T01");
  assertValidDateFormatParsing("strictDateHour","0005-06-03T12");
  assertDateFormatParsingThrowingException("strictDateHour","5-6-3T1");
  assertValidDateFormatParsing("dateHourMinute","0005-06-03T12:12");
  assertValidDateFormatParsing("dateHourMinute","5-6-3T12:1","0005-06-03T12:01");
  assertValidDateFormatParsing("strictDateHourMinute","0005-06-03T12:12");
  assertDateFormatParsingThrowingException("strictDateHourMinute","5-6-3T12:1");
  assertValidDateFormatParsing("dateHourMinuteSecond","0005-06-03T12:12:12");
  assertValidDateFormatParsing("dateHourMinuteSecond","5-6-3T12:12:1","0005-06-03T12:12:01");
  assertValidDateFormatParsing("strictDateHourMinuteSecond","0005-06-03T12:12:12");
  assertDateFormatParsingThrowingException("strictDateHourMinuteSecond","5-6-3T12:12:1");
  assertValidDateFormatParsing("dateHourMinuteSecondFraction","0005-06-03T12:12:12.123");
  assertValidDateFormatParsing("dateHourMinuteSecondFraction","5-6-3T12:12:1.123","0005-06-03T12:12:01.123");
  assertValidDateFormatParsing("dateHourMinuteSecondFraction","5-6-3T12:12:1.1","0005-06-03T12:12:01.100");
  assertValidDateFormatParsing("strictDateHourMinuteSecondFraction","0005-06-03T12:12:12.123");
  assertDateFormatParsingThrowingException("strictDateHourMinuteSecondFraction","5-6-3T12:12:12.1");
  assertDateFormatParsingThrowingException("strictDateHourMinuteSecondFraction","5-6-3T12:12:12.12");
  assertValidDateFormatParsing("dateHourMinuteSecondMillis","0005-06-03T12:12:12.123");
  assertValidDateFormatParsing("dateHourMinuteSecondMillis","5-6-3T12:12:1.123","0005-06-03T12:12:01.123");
  assertValidDateFormatParsing("dateHourMinuteSecondMillis","5-6-3T12:12:1.1","0005-06-03T12:12:01.100");
  assertValidDateFormatParsing("strictDateHourMinuteSecondMillis","0005-06-03T12:12:12.123");
  assertDateFormatParsingThrowingException("strictDateHourMinuteSecondMillis","5-6-3T12:12:12.1");
  assertDateFormatParsingThrowingException("strictDateHourMinuteSecondMillis","5-6-3T12:12:12.12");
  assertValidDateFormatParsing("dateOptionalTime","2014-03-03","2014-03-03T00:00:00.000Z");
  assertValidDateFormatParsing("dateOptionalTime","1257-3-03","1257-03-03T00:00:00.000Z");
  assertValidDateFormatParsing("dateOptionalTime","0005-03-3","0005-03-03T00:00:00.000Z");
  assertValidDateFormatParsing("dateOptionalTime","5-03-03","0005-03-03T00:00:00.000Z");
  assertValidDateFormatParsing("dateOptionalTime","5-03-03T1:1:1.1","0005-03-03T01:01:01.100Z");
  assertValidDateFormatParsing("strictDateOptionalTime","2014-03-03","2014-03-03T00:00:00.000Z");
  assertDateFormatParsingThrowingException("strictDateOptionalTime","5-03-03");
  assertDateFormatParsingThrowingException("strictDateOptionalTime","0005-3-03");
  assertDateFormatParsingThrowingException("strictDateOptionalTime","0005-03-3");
  assertDateFormatParsingThrowingException("strictDateOptionalTime","5-03-03T1:1:1.1");
  assertDateFormatParsingThrowingException("strictDateOptionalTime","5-03-03T01:01:01.1");
  assertDateFormatParsingThrowingException("strictDateOptionalTime","5-03-03T01:01:1.100");
  assertDateFormatParsingThrowingException("strictDateOptionalTime","5-03-03T01:1:01.100");
  assertDateFormatParsingThrowingException("strictDateOptionalTime","5-03-03T1:01:01.100");
  assertValidDateFormatParsing("dateTime","5-03-03T1:1:1.1Z","0005-03-03T01:01:01.100Z");
  assertValidDateFormatParsing("strictDateTime","2014-03-03T11:11:11.100Z","2014-03-03T11:11:11.100Z");
  assertDateFormatParsingThrowingException("strictDateTime","0005-03-03T1:1:1.1Z");
  assertDateFormatParsingThrowingException("strictDateTime","0005-03-03T01:01:1.100Z");
  assertDateFormatParsingThrowingException("strictDateTime","0005-03-03T01:1:01.100Z");
  assertDateFormatParsingThrowingException("strictDateTime","0005-03-03T1:01:01.100Z");
  assertValidDateFormatParsing("dateTimeNoMillis","5-03-03T1:1:1Z","0005-03-03T01:01:01Z");
  assertValidDateFormatParsing("strictDateTimeNoMillis","2014-03-03T11:11:11Z","2014-03-03T11:11:11Z");
  assertDateFormatParsingThrowingException("strictDateTimeNoMillis","0005-03-03T1:1:1Z");
  assertDateFormatParsingThrowingException("strictDateTimeNoMillis","0005-03-03T01:01:1Z");
  assertDateFormatParsingThrowingException("strictDateTimeNoMillis","0005-03-03T01:1:01Z");
  assertDateFormatParsingThrowingException("strictDateTimeNoMillis","0005-03-03T1:01:01Z");
  assertValidDateFormatParsing("hour","12");
  assertValidDateFormatParsing("hour","1","01");
  assertValidDateFormatParsing("strictHour","12");
  assertValidDateFormatParsing("strictHour","01");
  assertDateFormatParsingThrowingException("strictHour","1");
  assertValidDateFormatParsing("hourMinute","12:12");
  assertValidDateFormatParsing("hourMinute","12:1","12:01");
  assertValidDateFormatParsing("strictHourMinute","12:12");
  assertValidDateFormatParsing("strictHourMinute","12:01");
  assertDateFormatParsingThrowingException("strictHourMinute","12:1");
  assertValidDateFormatParsing("hourMinuteSecond","12:12:12");
  assertValidDateFormatParsing("hourMinuteSecond","12:12:1","12:12:01");
  assertValidDateFormatParsing("strictHourMinuteSecond","12:12:12");
  assertValidDateFormatParsing("strictHourMinuteSecond","12:12:01");
  assertDateFormatParsingThrowingException("strictHourMinuteSecond","12:12:1");
  assertValidDateFormatParsing("hourMinuteSecondFraction","12:12:12.123");
  assertValidDateFormatParsing("hourMinuteSecondFraction","12:12:12.1","12:12:12.100");
  assertValidDateFormatParsing("strictHourMinuteSecondFraction","12:12:12.123");
  assertValidDateFormatParsing("strictHourMinuteSecondFraction","12:12:12.1","12:12:12.100");
  assertValidDateFormatParsing("hourMinuteSecondMillis","12:12:12.123");
  assertValidDateFormatParsing("hourMinuteSecondMillis","12:12:12.1","12:12:12.100");
  assertValidDateFormatParsing("strictHourMinuteSecondMillis","12:12:12.123");
  assertValidDateFormatParsing("strictHourMinuteSecondMillis","12:12:12.1","12:12:12.100");
  assertValidDateFormatParsing("ordinalDate","5-3","0005-003");
  assertValidDateFormatParsing("strictOrdinalDate","0005-003");
  assertDateFormatParsingThrowingException("strictOrdinalDate","5-3");
  assertDateFormatParsingThrowingException("strictOrdinalDate","0005-3");
  assertDateFormatParsingThrowingException("strictOrdinalDate","5-003");
  assertValidDateFormatParsing("ordinalDateTime","5-3T12:12:12.100Z","0005-003T12:12:12.100Z");
  assertValidDateFormatParsing("strictOrdinalDateTime","0005-003T12:12:12.100Z");
  assertDateFormatParsingThrowingException("strictOrdinalDateTime","5-3T1:12:12.123Z");
  assertDateFormatParsingThrowingException("strictOrdinalDateTime","5-3T12:1:12.123Z");
  assertDateFormatParsingThrowingException("strictOrdinalDateTime","5-3T12:12:1.123Z");
  assertValidDateFormatParsing("ordinalDateTimeNoMillis","5-3T12:12:12Z","0005-003T12:12:12Z");
  assertValidDateFormatParsing("strictOrdinalDateTimeNoMillis","0005-003T12:12:12Z");
  assertDateFormatParsingThrowingException("strictOrdinalDateTimeNoMillis","5-3T1:12:12Z");
  assertDateFormatParsingThrowingException("strictOrdinalDateTimeNoMillis","5-3T12:1:12Z");
  assertDateFormatParsingThrowingException("strictOrdinalDateTimeNoMillis","5-3T12:12:1Z");
  assertValidDateFormatParsing("time","12:12:12.100Z");
  assertValidDateFormatParsing("time","01:01:01.1Z","01:01:01.100Z");
  assertValidDateFormatParsing("time","1:1:1.1Z","01:01:01.100Z");
  assertValidDateFormatParsing("strictTime","12:12:12.100Z");
  assertDateFormatParsingThrowingException("strictTime","12:12:1.100Z");
  assertDateFormatParsingThrowingException("strictTime","12:1:12.100Z");
  assertDateFormatParsingThrowingException("strictTime","1:12:12.100Z");
  assertValidDateFormatParsing("timeNoMillis","12:12:12Z");
  assertValidDateFormatParsing("timeNoMillis","01:01:01Z","01:01:01Z");
  assertValidDateFormatParsing("timeNoMillis","1:1:1Z","01:01:01Z");
  assertValidDateFormatParsing("strictTimeNoMillis","12:12:12Z");
  assertDateFormatParsingThrowingException("strictTimeNoMillis","12:12:1Z");
  assertDateFormatParsingThrowingException("strictTimeNoMillis","12:1:12Z");
  assertDateFormatParsingThrowingException("strictTimeNoMillis","1:12:12Z");
  assertValidDateFormatParsing("tTime","T12:12:12.100Z");
  assertValidDateFormatParsing("tTime","T01:01:01.1Z","T01:01:01.100Z");
  assertValidDateFormatParsing("tTime","T1:1:1.1Z","T01:01:01.100Z");
  assertValidDateFormatParsing("strictTTime","T12:12:12.100Z");
  assertDateFormatParsingThrowingException("strictTTime","T12:12:1.100Z");
  assertDateFormatParsingThrowingException("strictTTime","T12:1:12.100Z");
  assertDateFormatParsingThrowingException("strictTTime","T1:12:12.100Z");
  assertValidDateFormatParsing("tTimeNoMillis","T12:12:12Z");
  assertValidDateFormatParsing("tTimeNoMillis","T01:01:01Z","T01:01:01Z");
  assertValidDateFormatParsing("tTimeNoMillis","T1:1:1Z","T01:01:01Z");
  assertValidDateFormatParsing("strictTTimeNoMillis","T12:12:12Z");
  assertDateFormatParsingThrowingException("strictTTimeNoMillis","T12:12:1Z");
  assertDateFormatParsingThrowingException("strictTTimeNoMillis","T12:1:12Z");
  assertDateFormatParsingThrowingException("strictTTimeNoMillis","T1:12:12Z");
  assertValidDateFormatParsing("weekDate","0005-W4-1","0005-W04-1");
  assertValidDateFormatParsing("strictWeekDate","0005-W04-1");
  assertDateFormatParsingThrowingException("strictWeekDate","0005-W4-1");
  assertValidDateFormatParsing("weekDateTime","0005-W41-4T12:43:43.123Z");
  assertValidDateFormatParsing("weekDateTime","5-W41-4T12:43:43.123Z","0005-W41-4T12:43:43.123Z");
  assertValidDateFormatParsing("strictWeekDateTime","0005-W41-4T12:43:43.123Z");
  assertValidDateFormatParsing("strictWeekDateTime","0005-W06-4T12:43:43.123Z");
  assertDateFormatParsingThrowingException("strictWeekDateTime","0005-W4-7T12:43:43.123Z");
  assertDateFormatParsingThrowingException("strictWeekDateTime","5-W41-4T12:43:43.123Z");
  assertDateFormatParsingThrowingException("strictWeekDateTime","5-W1-4T12:43:43.123Z");
  assertValidDateFormatParsing("weekDateTimeNoMillis","0005-W41-4T12:43:43Z");
  assertValidDateFormatParsing("weekDateTimeNoMillis","5-W41-4T12:43:43Z","0005-W41-4T12:43:43Z");
  assertValidDateFormatParsing("strictWeekDateTimeNoMillis","0005-W41-4T12:43:43Z");
  assertValidDateFormatParsing("strictWeekDateTimeNoMillis","0005-W06-4T12:43:43Z");
  assertDateFormatParsingThrowingException("strictWeekDateTimeNoMillis","0005-W4-7T12:43:43Z");
  assertDateFormatParsingThrowingException("strictWeekDateTimeNoMillis","5-W41-4T12:43:43Z");
  assertDateFormatParsingThrowingException("strictWeekDateTimeNoMillis","5-W1-4T12:43:43Z");
  assertValidDateFormatParsing("weekyear","2014");
  assertValidDateFormatParsing("weekyear","5","0005");
  assertValidDateFormatParsing("weekyear","0005");
  assertValidDateFormatParsing("strictWeekyear","2014");
  assertValidDateFormatParsing("strictWeekyear","0005");
  assertDateFormatParsingThrowingException("strictWeekyear","5");
  assertValidDateFormatParsing("weekyearWeek","2014-W41");
  assertValidDateFormatParsing("weekyearWeek","2014-W1","2014-W01");
  assertValidDateFormatParsing("strictWeekyearWeek","2014-W41");
  assertDateFormatParsingThrowingException("strictWeekyearWeek","2014-W1");
  assertValidDateFormatParsing("weekyearWeekDay","2014-W41-1");
  assertValidDateFormatParsing("weekyearWeekDay","2014-W1-1","2014-W01-1");
  assertValidDateFormatParsing("strictWeekyearWeekDay","2014-W41-1");
  assertDateFormatParsingThrowingException("strictWeekyearWeekDay","2014-W1-1");
  assertValidDateFormatParsing("year","2014");
  assertValidDateFormatParsing("year","5","0005");
  assertValidDateFormatParsing("strictYear","2014");
  assertDateFormatParsingThrowingException("strictYear","5");
  assertValidDateFormatParsing("yearMonth","2014-12");
  assertValidDateFormatParsing("yearMonth","2014-5","2014-05");
  assertValidDateFormatParsing("strictYearMonth","2014-12");
  assertDateFormatParsingThrowingException("strictYearMonth","2014-5");
  assertValidDateFormatParsing("yearMonthDay","2014-12-12");
  assertValidDateFormatParsing("yearMonthDay","2014-05-5","2014-05-05");
  assertValidDateFormatParsing("strictYearMonthDay","2014-12-12");
  assertDateFormatParsingThrowingException("strictYearMonthDay","2014-05-5");
}
