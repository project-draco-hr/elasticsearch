{
  int nodes=randomIntBetween(1,3);
  Settings nodeSettings=ImmutableSettings.builder().put(GroovyScriptEngineService.GROOVY_SCRIPT_SANDBOX_ENABLED,true).build();
  internalCluster().startNodesAsync(nodes,nodeSettings).get();
  client().admin().cluster().prepareHealth().setWaitForNodes(nodes + "").get();
  client().prepareIndex("test","doc","1").setSource("foo",5).setRefresh(true).get();
  testSuccess("[doc['foo'].value, 3, 4].isEmpty()");
  testSuccess("[doc['foo'].value, 3, 4].size()");
  Settings blacklistSettings=ImmutableSettings.builder().put(GroovyScriptEngineService.GROOVY_SCRIPT_BLACKLIST_PATCH,"isEmpty,size").build();
  client().admin().cluster().prepareUpdateSettings().setTransientSettings(blacklistSettings).get();
  testFailure("[doc['foo'].value, 3, 4].isEmpty()","Expression [MethodCallExpression] is not allowed: [doc[foo].value, 3, 4].isEmpty()");
  testFailure("[doc['foo'].value, 3, 4].size()","Expression [MethodCallExpression] is not allowed: [doc[foo].value, 3, 4].size()");
}
