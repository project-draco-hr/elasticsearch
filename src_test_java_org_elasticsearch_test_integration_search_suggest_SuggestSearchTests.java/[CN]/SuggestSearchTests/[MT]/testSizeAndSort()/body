{
  client.admin().indices().prepareDelete().execute().actionGet();
  client.admin().indices().prepareCreate("test").setSettings(settingsBuilder().put(SETTING_NUMBER_OF_SHARDS,5).put(SETTING_NUMBER_OF_REPLICAS,0)).execute().actionGet();
  client.admin().cluster().prepareHealth("test").setWaitForGreenStatus().execute().actionGet();
  Map<String,Integer> termsAndDocCount=new HashMap<String,Integer>();
  termsAndDocCount.put("prefix_aaad",20);
  termsAndDocCount.put("prefix_abbb",18);
  termsAndDocCount.put("prefix_aaca",16);
  termsAndDocCount.put("prefix_abba",14);
  termsAndDocCount.put("prefix_accc",12);
  termsAndDocCount.put("prefix_addd",10);
  termsAndDocCount.put("prefix_abaa",8);
  termsAndDocCount.put("prefix_dbca",6);
  termsAndDocCount.put("prefix_cbad",4);
  termsAndDocCount.put("prefix_aacd",1);
  termsAndDocCount.put("prefix_abcc",1);
  termsAndDocCount.put("prefix_accd",1);
  for (  Map.Entry<String,Integer> entry : termsAndDocCount.entrySet()) {
    for (int i=0; i < entry.getValue(); i++) {
      client.prepareIndex("test","type1").setSource(XContentFactory.jsonBuilder().startObject().field("field1",entry.getKey()).endObject()).execute().actionGet();
    }
  }
  client.admin().indices().prepareRefresh().execute().actionGet();
  SearchResponse search=client.prepareSearch().setSuggestText("prefix_abcd").addSuggestion(termSuggestion("size3SortScoreFirst").size(3).minDocFreq(0).field("field1").suggestMode("always")).addSuggestion(termSuggestion("size10SortScoreFirst").size(10).minDocFreq(0).field("field1").suggestMode("always").shardSize(50)).addSuggestion(termSuggestion("size3SortScoreFirstMaxEdits1").maxEdits(1).size(10).minDocFreq(0).field("field1").suggestMode("always")).addSuggestion(termSuggestion("size10SortFrequencyFirst").size(10).sort("frequency").shardSize(1000).minDocFreq(0).field("field1").suggestMode("always")).execute().actionGet();
  assertThat(Arrays.toString(search.getShardFailures()),search.getFailedShards(),equalTo(0));
  assertThat(search.getSuggest(),notNullValue());
  assertThat(search.getSuggest().size(),equalTo(4));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirst").getName(),equalTo("size3SortScoreFirst"));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirst").getEntries().size(),equalTo(1));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirst").getEntries().get(0).getOptions().size(),equalTo(3));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirst").getEntries().get(0).getOptions().get(0).getText().string(),equalTo("prefix_aacd"));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirst").getEntries().get(0).getOptions().get(1).getText().string(),equalTo("prefix_abcc"));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirst").getEntries().get(0).getOptions().get(2).getText().string(),equalTo("prefix_accd"));
  assertThat(search.getSuggest().getSuggestion("size10SortScoreFirst").getName(),equalTo("size10SortScoreFirst"));
  assertThat(search.getSuggest().getSuggestion("size10SortScoreFirst").getEntries().size(),equalTo(1));
  assertThat(search.getSuggest().getSuggestion("size10SortScoreFirst").getEntries().get(0).getOptions().size(),equalTo(10));
  assertThat(search.getSuggest().getSuggestion("size10SortScoreFirst").getEntries().get(0).getOptions().get(0).getText().string(),equalTo("prefix_aacd"));
  assertThat(search.getSuggest().getSuggestion("size10SortScoreFirst").getEntries().get(0).getOptions().get(1).getText().string(),equalTo("prefix_abcc"));
  assertThat(search.getSuggest().getSuggestion("size10SortScoreFirst").getEntries().get(0).getOptions().get(2).getText().string(),equalTo("prefix_accd"));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirstMaxEdits1").getName(),equalTo("size3SortScoreFirstMaxEdits1"));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirstMaxEdits1").getEntries().size(),equalTo(1));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirstMaxEdits1").getEntries().get(0).getOptions().size(),equalTo(3));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirstMaxEdits1").getEntries().get(0).getOptions().get(0).getText().string(),equalTo("prefix_aacd"));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirstMaxEdits1").getEntries().get(0).getOptions().get(1).getText().string(),equalTo("prefix_abcc"));
  assertThat(search.getSuggest().getSuggestion("size3SortScoreFirstMaxEdits1").getEntries().get(0).getOptions().get(2).getText().string(),equalTo("prefix_accd"));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getName(),equalTo("size10SortFrequencyFirst"));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().size(),equalTo(1));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().get(0).getOptions().size(),equalTo(10));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().get(0).getOptions().get(0).getText().string(),equalTo("prefix_aaad"));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().get(0).getOptions().get(1).getText().string(),equalTo("prefix_abbb"));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().get(0).getOptions().get(2).getText().string(),equalTo("prefix_aaca"));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().get(0).getOptions().get(3).getText().string(),equalTo("prefix_abba"));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().get(0).getOptions().get(4).getText().string(),equalTo("prefix_accc"));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().get(0).getOptions().get(5).getText().string(),equalTo("prefix_addd"));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().get(0).getOptions().get(6).getText().string(),equalTo("prefix_abaa"));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().get(0).getOptions().get(7).getText().string(),equalTo("prefix_dbca"));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().get(0).getOptions().get(8).getText().string(),equalTo("prefix_cbad"));
  assertThat(search.getSuggest().getSuggestion("size10SortFrequencyFirst").getEntries().get(0).getOptions().get(9).getText().string(),equalTo("prefix_aacd"));
}
