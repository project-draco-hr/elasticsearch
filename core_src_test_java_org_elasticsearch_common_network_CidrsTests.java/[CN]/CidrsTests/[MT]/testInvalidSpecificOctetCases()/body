{
  List<String> cases=new ArrayList<>();
  cases.add("256.0.0.0/8");
  cases.add("255.256.0.0/16");
  cases.add("255.255.256.0/24");
  cases.add("255.255.255.256/32");
  cases.add("abc.0.0.0/8");
  cases.add("-1.0.0.0/8");
  cases.add("128.-1.0.0/16");
  cases.add("128.128.-1.0/24");
  cases.add("128.128.128.-1/32");
  for (  String test : cases) {
    try {
      Cidrs.cidrMaskToMinMax(test);
      fail("expected invalid address");
    }
 catch (    IllegalArgumentException e) {
      assertThat(e,hasToString(containsString("unable to parse")));
      assertThat(e,hasToString(containsString("as an IP address literal")));
    }
  }
}
