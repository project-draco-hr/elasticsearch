{
  ProtocolVersion protocolVersion=new ProtocolVersion("http",1,1);
  StatusLine statusLine=new BasicStatusLine(protocolVersion,500,"Internal Server Error");
  HttpResponse httpResponse=new BasicHttpResponse(statusLine);
  String responseBody="{\"error\":{\"root_cause\": {}}}";
  boolean hasBody=getRandom().nextBoolean();
  if (hasBody) {
    HttpEntity entity;
    if (getRandom().nextBoolean()) {
      entity=new StringEntity(responseBody,StandardCharsets.UTF_8);
    }
 else {
      entity=new InputStreamEntity(new ByteArrayInputStream(responseBody.getBytes(StandardCharsets.UTF_8)));
    }
    httpResponse.setEntity(entity);
  }
  RequestLine requestLine=new BasicRequestLine("GET","/",protocolVersion);
  HttpHost httpHost=new HttpHost("localhost",9200);
  Response response=new Response(requestLine,httpHost,httpResponse);
  ResponseException responseException=new ResponseException(response);
  assertSame(response,responseException.getResponse());
  if (hasBody) {
    assertEquals(responseBody,EntityUtils.toString(responseException.getResponse().getEntity()));
  }
 else {
    assertNull(responseException.getResponse().getEntity());
  }
  String message=response.getRequestLine().getMethod() + " " + response.getHost()+ response.getRequestLine().getUri()+ ": "+ response.getStatusLine().toString();
  if (hasBody) {
    message+="\n" + responseBody;
  }
  assertEquals(message,responseException.getMessage());
}
