{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","string").field("index","not_analyzed").endObject().endObject().endObject().endObject().string();
  DocumentMapper defaultMapper=MapperTests.newParser().parse(mapping);
  ParsedDocument doc=defaultMapper.parse("type","1",XContentFactory.jsonBuilder().startObject().field("field","1234").endObject().bytes());
  assertThat(doc.rootDoc().getFieldable("field").getOmitNorms(),equalTo(true));
  assertThat(doc.rootDoc().getFieldable("field").getIndexOptions(),equalTo(FieldInfo.IndexOptions.DOCS_ONLY));
  mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","string").field("index","not_analyzed").field("omit_norms",false).field("index_options","freqs").endObject().endObject().endObject().endObject().string();
  defaultMapper=MapperTests.newParser().parse(mapping);
  doc=defaultMapper.parse("type","1",XContentFactory.jsonBuilder().startObject().field("field","1234").endObject().bytes());
  assertThat(doc.rootDoc().getFieldable("field").getOmitNorms(),equalTo(false));
  assertThat(doc.rootDoc().getFieldable("field").getIndexOptions(),equalTo(FieldInfo.IndexOptions.DOCS_AND_FREQS));
}
