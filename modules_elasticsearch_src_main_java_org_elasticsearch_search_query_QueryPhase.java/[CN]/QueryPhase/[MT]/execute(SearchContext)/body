{
  if (searchContext.scopePhases() != null) {
    try {
      searchContext.idCache().refresh(searchContext.searcher().subReaders());
    }
 catch (    Exception e) {
      throw new QueryPhaseExecutionException(searchContext,"Failed to refresh id cache for child queries",e);
    }
    for (int i=searchContext.scopePhases().size() - 1; i >= 0; i--) {
      ScopePhase scopePhase=searchContext.scopePhases().get(i);
      if (scopePhase instanceof ScopePhase.TopDocsPhase) {
        ScopePhase.TopDocsPhase topDocsPhase=(ScopePhase.TopDocsPhase)scopePhase;
        topDocsPhase.clear();
        int numDocs=(searchContext.from() + searchContext.size());
        if (numDocs == 0) {
          numDocs=1;
        }
        try {
          numDocs*=topDocsPhase.factor();
          while (true) {
            if (topDocsPhase.scope() != null) {
              searchContext.searcher().processingScope(topDocsPhase.scope());
            }
            TopDocs topDocs=searchContext.searcher().search(topDocsPhase.query(),numDocs);
            if (topDocsPhase.scope() != null) {
              searchContext.searcher().processedScope();
            }
            topDocsPhase.processResults(topDocs,searchContext);
            if (topDocsPhase.numHits() >= (searchContext.from() + searchContext.size())) {
              break;
            }
            if (topDocs.totalHits <= numDocs) {
              break;
            }
            numDocs*=topDocsPhase.incrementalFactor();
            if (numDocs > topDocs.totalHits) {
              numDocs=topDocs.totalHits;
            }
          }
        }
 catch (        Exception e) {
          throw new QueryPhaseExecutionException(searchContext,"Failed to execute child query [" + scopePhase.query() + "]",e);
        }
      }
 else       if (scopePhase instanceof ScopePhase.CollectorPhase) {
        try {
          ScopePhase.CollectorPhase collectorPhase=(ScopePhase.CollectorPhase)scopePhase;
          if (!collectorPhase.requiresProcessing()) {
            continue;
          }
          if (scopePhase.scope() != null) {
            searchContext.searcher().processingScope(scopePhase.scope());
          }
          Collector collector=collectorPhase.collector();
          searchContext.searcher().search(collectorPhase.query(),collector);
          collectorPhase.processCollector(collector);
          if (collectorPhase.scope() != null) {
            searchContext.searcher().processedScope();
          }
        }
 catch (        Exception e) {
          throw new QueryPhaseExecutionException(searchContext,"Failed to execute child query [" + scopePhase.query() + "]",e);
        }
      }
    }
  }
  searchContext.searcher().processingScope(ContextIndexSearcher.Scopes.MAIN);
  try {
    searchContext.queryResult().from(searchContext.from());
    searchContext.queryResult().size(searchContext.size());
    Query query=searchContext.query();
    if (searchContext.types().length > 0) {
      query=new FilteredQuery(query,searchContext.filterCache().cache(searchContext.mapperService().typesFilter(searchContext.types())));
    }
    TopDocs topDocs;
    int numDocs=searchContext.from() + searchContext.size();
    if (numDocs == 0) {
      numDocs=1;
    }
    boolean sort=false;
    if (searchContext.sort() != null) {
      if (searchContext.sort().getSort().length > 1) {
        sort=true;
      }
 else {
        SortField sortField=searchContext.sort().getSort()[0];
        if (sortField.getType() == SortField.SCORE && !sortField.getReverse()) {
          sort=false;
        }
 else {
          sort=true;
        }
      }
    }
    if (searchContext.searchType() == SearchType.COUNT) {
      CountCollector countCollector=new CountCollector();
      try {
        searchContext.searcher().search(query,countCollector);
      }
 catch (      ScanCollector.StopCollectingException e) {
      }
      topDocs=countCollector.topDocs();
    }
 else     if (searchContext.searchType() == SearchType.SCAN) {
      ScanCollector scanCollector=new ScanCollector(searchContext.from(),searchContext.size());
      try {
        searchContext.searcher().search(query,scanCollector);
      }
 catch (      ScanCollector.StopCollectingException e) {
      }
      topDocs=scanCollector.topDocs();
    }
 else     if (sort) {
      topDocs=searchContext.searcher().search(query,null,numDocs,searchContext.sort());
    }
 else {
      topDocs=searchContext.searcher().search(query,numDocs);
    }
    searchContext.queryResult().topDocs(topDocs);
  }
 catch (  Exception e) {
    throw new QueryPhaseExecutionException(searchContext,"Failed to execute main query",e);
  }
 finally {
    searchContext.searcher().processedScope();
  }
  facetPhase.execute(searchContext);
}
