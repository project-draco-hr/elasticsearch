{
  try {
    searchContext.queryResult().from(searchContext.from());
    searchContext.queryResult().size(searchContext.size());
    Query query=searchContext.query();
    if (searchContext.types().length > 0) {
      if (searchContext.types().length == 1) {
        String type=searchContext.types()[0];
        DocumentMapper docMapper=searchContext.mapperService().documentMapper(type);
        Filter typeFilter=new TermFilter(docMapper.typeMapper().term(docMapper.type()));
        typeFilter=searchContext.filterCache().cache(typeFilter);
        query=new FilteredQuery(query,typeFilter);
      }
 else {
        BooleanFilter booleanFilter=new BooleanFilter();
        for (        String type : searchContext.types()) {
          DocumentMapper docMapper=searchContext.mapperService().documentMapper(type);
          Filter typeFilter=new TermFilter(docMapper.typeMapper().term(docMapper.type()));
          typeFilter=searchContext.filterCache().cache(typeFilter);
          booleanFilter.add(new FilterClause(typeFilter,BooleanClause.Occur.SHOULD));
        }
        query=new FilteredQuery(query,booleanFilter);
      }
    }
    TopDocs topDocs;
    int numDocs=searchContext.from() + searchContext.size();
    if (numDocs == 0) {
      numDocs=1;
    }
    if (searchContext.sort() != null) {
      topDocs=searchContext.searcher().search(query,null,numDocs,searchContext.sort());
    }
 else {
      topDocs=searchContext.searcher().search(query,numDocs);
    }
    searchContext.queryResult().topDocs(topDocs);
  }
 catch (  Exception e) {
    throw new QueryPhaseExecutionException(searchContext,"Failed to execute main query",e);
  }
  facetsPhase.execute(searchContext);
}
