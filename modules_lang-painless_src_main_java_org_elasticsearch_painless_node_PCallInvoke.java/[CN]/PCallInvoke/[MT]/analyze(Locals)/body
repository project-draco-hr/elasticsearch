{
  prefix.analyze(locals);
  prefix.expected=prefix.actual;
  prefix=prefix.cast(locals);
  if (prefix.actual.sort == Sort.ARRAY) {
    throw createError(new IllegalArgumentException("Illegal call [" + name + "] on array type."));
  }
  Struct struct=prefix.actual.struct;
  if (prefix.actual.sort.primitive) {
    struct=Definition.getType(prefix.actual.sort.boxed.getSimpleName()).struct;
  }
  MethodKey methodKey=new MethodKey(name,arguments.size());
  Method method=prefix instanceof EStatic ? struct.staticMethods.get(methodKey) : struct.methods.get(methodKey);
  if (method != null) {
    sub=new PSubCallInvoke(location,method,prefix.actual,arguments);
  }
 else   if (prefix.actual.sort == Sort.DEF) {
    sub=new PSubDefCall(location,name,arguments);
  }
 else {
    throw createError(new IllegalArgumentException("Unknown call [" + name + "] with ["+ arguments.size()+ "] arguments on type ["+ struct.name+ "]."));
  }
  sub.expected=expected;
  sub.explicit=explicit;
  sub.analyze(locals);
  actual=sub.actual;
  statement=true;
}
