{
  Settings clientSettings=ImmutableSettings.settingsBuilder().put("config.ignore_system_properties",true).put("client.transport.ignore_cluster_name",true).put("node.mode","network").build();
  this.client=new TransportClient(clientSettings).addTransportAddresses(transportAddresses);
  NodesInfoResponse nodeInfos=this.client.admin().cluster().prepareNodesInfo().clear().setSettings(true).setHttp(true).get();
  httpAddresses=new InetSocketAddress[nodeInfos.getNodes().length];
  this.clusterName=nodeInfos.getClusterName().value();
  int dataNodes=0;
  int benchNodes=0;
  int masterAndDataNodes=0;
  for (int i=0; i < nodeInfos.getNodes().length; i++) {
    NodeInfo nodeInfo=nodeInfos.getNodes()[i];
    httpAddresses[i]=((InetSocketTransportAddress)nodeInfo.getHttp().address().publishAddress()).address();
    if (DiscoveryNode.dataNode(nodeInfo.getSettings())) {
      dataNodes++;
      masterAndDataNodes++;
    }
 else     if (DiscoveryNode.masterNode(nodeInfo.getSettings())) {
      masterAndDataNodes++;
    }
    if (nodeInfo.getSettings().getAsBoolean("node.bench",false)) {
      benchNodes++;
    }
  }
  this.numDataNodes=dataNodes;
  this.numBenchNodes=benchNodes;
  this.numMasterAndDataNodes=masterAndDataNodes;
  logger.info("Setup ExternalTestCluster [{}] made of [{}] nodes",nodeInfos.getClusterName().value(),size());
}
