{
  PrimaryContext _localctx=new PrimaryContext(_ctx,getState(),c);
  enterRule(_localctx,30,RULE_primary);
  try {
    setState(327);
switch (getInterpreter().adaptivePredict(_input,25,_ctx)) {
case 1:
      _localctx=new ExprprecContext(_localctx);
    enterOuterAlt(_localctx,1);
{
    setState(311);
    if (!(!_localctx.c))     throw new FailedPredicateException(this," !$c ");
    setState(312);
    match(LP);
    setState(313);
    ((ExprprecContext)_localctx).e=expression(0);
    setState(314);
    match(RP);
    ((ExprprecContext)_localctx).s=((ExprprecContext)_localctx).e.s;
  }
break;
case 2:
_localctx=new ChainprecContext(_localctx);
enterOuterAlt(_localctx,2);
{
setState(317);
if (!(_localctx.c)) throw new FailedPredicateException(this," $c ");
setState(318);
match(LP);
setState(319);
unary(true);
setState(320);
match(RP);
}
break;
case 3:
_localctx=new StringContext(_localctx);
enterOuterAlt(_localctx,3);
{
setState(322);
match(STRING);
}
break;
case 4:
_localctx=new VariableContext(_localctx);
enterOuterAlt(_localctx,4);
{
setState(323);
match(ID);
}
break;
case 5:
_localctx=new NewobjectContext(_localctx);
enterOuterAlt(_localctx,5);
{
setState(324);
match(NEW);
setState(325);
match(TYPE);
setState(326);
arguments();
}
break;
}
}
 catch (RecognitionException re) {
_localctx.exception=re;
_errHandler.reportError(this,re);
_errHandler.recover(this,re);
}
 finally {
exitRule();
}
return _localctx;
}
