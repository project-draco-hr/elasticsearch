{
  LinknewContext _localctx=new LinknewContext(_ctx,getState());
  enterRule(_localctx,44,RULE_linknew);
  try {
    int _alt;
    enterOuterAlt(_localctx,1);
{
      setState(325);
      match(NEW);
      setState(326);
      identifier();
      setState(342);
switch (_input.LA(1)) {
case LP:
{
{
            setState(327);
            arguments();
            setState(329);
switch (getInterpreter().adaptivePredict(_input,31,_ctx)) {
case 1:
{
                setState(328);
                linkdot();
              }
            break;
        }
      }
    }
  break;
case LBRACE:
{
{
    setState(335);
    _errHandler.sync(this);
    _alt=1;
    do {
switch (_alt) {
case 1:
{
{
            setState(331);
            match(LBRACE);
            setState(332);
            expression(0);
            setState(333);
            match(RBRACE);
          }
        }
      break;
default :
    throw new NoViableAltException(this);
}
setState(337);
_errHandler.sync(this);
_alt=getInterpreter().adaptivePredict(_input,32,_ctx);
}
 while (_alt != 2 && _alt != org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER);
setState(340);
switch (getInterpreter().adaptivePredict(_input,33,_ctx)) {
case 1:
{
  setState(339);
  linkdot();
}
break;
}
}
}
break;
default :
throw new NoViableAltException(this);
}
}
}
 catch (RecognitionException re) {
_localctx.exception=re;
_errHandler.reportError(this,re);
_errHandler.recover(this,re);
}
 finally {
exitRule();
}
return _localctx;
}
