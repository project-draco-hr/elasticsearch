{
  UnaryContext _localctx=new UnaryContext(_ctx,getState(),c);
  enterRule(_localctx,32,RULE_unary);
  int _la;
  try {
    setState(325);
switch (getInterpreter().adaptivePredict(_input,22,_ctx)) {
case 1:
      _localctx=new PreContext(_localctx);
    enterOuterAlt(_localctx,1);
{
    setState(296);
    if (!(!_localctx.c))     throw new FailedPredicateException(this," !$c ");
    setState(297);
    _la=_input.LA(1);
    if (!(_la == INCR || _la == DECR)) {
      _errHandler.recoverInline(this);
    }
 else {
      consume();
    }
    setState(298);
    chain(true);
  }
break;
case 2:
_localctx=new PostContext(_localctx);
enterOuterAlt(_localctx,2);
{
setState(299);
if (!(!_localctx.c)) throw new FailedPredicateException(this," !$c ");
setState(300);
chain(true);
setState(301);
_la=_input.LA(1);
if (!(_la == INCR || _la == DECR)) {
_errHandler.recoverInline(this);
}
 else {
consume();
}
}
break;
case 3:
_localctx=new ReadContext(_localctx);
enterOuterAlt(_localctx,3);
{
setState(303);
if (!(!_localctx.c)) throw new FailedPredicateException(this," !$c ");
setState(304);
chain(false);
}
break;
case 4:
_localctx=new NumericContext(_localctx);
enterOuterAlt(_localctx,4);
{
setState(305);
if (!(!_localctx.c)) throw new FailedPredicateException(this," !$c ");
setState(306);
_la=_input.LA(1);
if (!(((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (OCTAL - 64)) | (1L << (HEX - 64)) | (1L << (INTEGER - 64))| (1L << (DECIMAL - 64)))) != 0))) {
_errHandler.recoverInline(this);
}
 else {
consume();
}
((NumericContext)_localctx).s=false;
}
break;
case 5:
_localctx=new TrueContext(_localctx);
enterOuterAlt(_localctx,5);
{
setState(308);
if (!(!_localctx.c)) throw new FailedPredicateException(this," !$c ");
setState(309);
match(TRUE);
((TrueContext)_localctx).s=false;
}
break;
case 6:
_localctx=new FalseContext(_localctx);
enterOuterAlt(_localctx,6);
{
setState(311);
if (!(!_localctx.c)) throw new FailedPredicateException(this," !$c ");
setState(312);
match(FALSE);
((FalseContext)_localctx).s=false;
}
break;
case 7:
_localctx=new NullContext(_localctx);
enterOuterAlt(_localctx,7);
{
setState(314);
if (!(!_localctx.c)) throw new FailedPredicateException(this," !$c ");
setState(315);
match(NULL);
((NullContext)_localctx).s=false;
}
break;
case 8:
_localctx=new OperatorContext(_localctx);
enterOuterAlt(_localctx,8);
{
setState(317);
if (!(!_localctx.c)) throw new FailedPredicateException(this," !$c ");
setState(318);
_la=_input.LA(1);
if (!((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << BOOLNOT) | (1L << BWNOT) | (1L << ADD)| (1L << SUB))) != 0))) {
_errHandler.recoverInline(this);
}
 else {
consume();
}
setState(319);
unary(false);
}
break;
case 9:
_localctx=new CastContext(_localctx);
enterOuterAlt(_localctx,9);
{
setState(320);
match(LP);
setState(321);
decltype();
setState(322);
match(RP);
setState(323);
unary(_localctx.c);
}
break;
}
}
 catch (RecognitionException re) {
_localctx.exception=re;
_errHandler.reportError(this,re);
_errHandler.recover(this,re);
}
 finally {
exitRule();
}
return _localctx;
}
