{
  ArrayinitializerContext _localctx=new ArrayinitializerContext(_ctx,getState());
  enterRule(_localctx,60,RULE_arrayinitializer);
  int _la;
  try {
    int _alt;
    setState(511);
switch (getInterpreter().adaptivePredict(_input,43,_ctx)) {
case 1:
      _localctx=new NewstandardarrayContext(_localctx);
    enterOuterAlt(_localctx,1);
{
    setState(473);
    match(NEW);
    setState(474);
    match(TYPE);
    setState(479);
    _errHandler.sync(this);
    _alt=1;
    do {
switch (_alt) {
case 1:
{
{
            setState(475);
            match(LBRACE);
            setState(476);
            expression(0);
            setState(477);
            match(RBRACE);
          }
        }
      break;
default :
    throw new NoViableAltException(this);
}
setState(481);
_errHandler.sync(this);
_alt=getInterpreter().adaptivePredict(_input,37,_ctx);
}
 while (_alt != 2 && _alt != org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER);
setState(490);
switch (getInterpreter().adaptivePredict(_input,39,_ctx)) {
case 1:
{
  setState(483);
  dot();
  setState(487);
  _errHandler.sync(this);
  _alt=getInterpreter().adaptivePredict(_input,38,_ctx);
  while (_alt != 2 && _alt != org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER) {
    if (_alt == 1) {
{
{
          setState(484);
          secondary(true);
        }
      }
    }
    setState(489);
    _errHandler.sync(this);
    _alt=getInterpreter().adaptivePredict(_input,38,_ctx);
  }
}
break;
}
}
break;
case 2:
_localctx=new NewinitializedarrayContext(_localctx);
enterOuterAlt(_localctx,2);
{
setState(492);
match(NEW);
setState(493);
match(TYPE);
setState(494);
match(LBRACE);
setState(495);
match(RBRACE);
setState(496);
match(LBRACK);
setState(505);
switch (getInterpreter().adaptivePredict(_input,41,_ctx)) {
case 1:
{
setState(497);
expression(0);
setState(502);
_errHandler.sync(this);
_la=_input.LA(1);
while (_la == COMMA) {
{
{
setState(498);
match(COMMA);
setState(499);
expression(0);
}
}
setState(504);
_errHandler.sync(this);
_la=_input.LA(1);
}
}
break;
}
setState(508);
_la=_input.LA(1);
if (_la == SEMICOLON) {
{
setState(507);
match(SEMICOLON);
}
}
setState(510);
match(RBRACK);
}
break;
}
}
 catch (RecognitionException re) {
_localctx.exception=re;
_errHandler.reportError(this,re);
_errHandler.recover(this,re);
}
 finally {
exitRule();
}
return _localctx;
}
