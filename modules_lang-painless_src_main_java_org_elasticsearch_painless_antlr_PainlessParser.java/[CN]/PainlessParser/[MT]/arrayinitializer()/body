{
  ArrayinitializerContext _localctx=new ArrayinitializerContext(_ctx,getState());
  enterRule(_localctx,60,RULE_arrayinitializer);
  int _la;
  try {
    int _alt;
    setState(524);
switch (getInterpreter().adaptivePredict(_input,43,_ctx)) {
case 1:
      _localctx=new NewstandardarrayContext(_localctx);
    enterOuterAlt(_localctx,1);
{
    setState(486);
    match(NEW);
    setState(487);
    match(TYPE);
    setState(492);
    _errHandler.sync(this);
    _alt=1;
    do {
switch (_alt) {
case 1:
{
{
            setState(488);
            match(LBRACE);
            setState(489);
            expression(0);
            setState(490);
            match(RBRACE);
          }
        }
      break;
default :
    throw new NoViableAltException(this);
}
setState(494);
_errHandler.sync(this);
_alt=getInterpreter().adaptivePredict(_input,37,_ctx);
}
 while (_alt != 2 && _alt != org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER);
setState(503);
switch (getInterpreter().adaptivePredict(_input,39,_ctx)) {
case 1:
{
  setState(496);
  dot();
  setState(500);
  _errHandler.sync(this);
  _alt=getInterpreter().adaptivePredict(_input,38,_ctx);
  while (_alt != 2 && _alt != org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER) {
    if (_alt == 1) {
{
{
          setState(497);
          secondary(true);
        }
      }
    }
    setState(502);
    _errHandler.sync(this);
    _alt=getInterpreter().adaptivePredict(_input,38,_ctx);
  }
}
break;
}
}
break;
case 2:
_localctx=new NewinitializedarrayContext(_localctx);
enterOuterAlt(_localctx,2);
{
setState(505);
match(NEW);
setState(506);
match(TYPE);
setState(507);
match(LBRACE);
setState(508);
match(RBRACE);
setState(509);
match(LBRACK);
setState(518);
switch (getInterpreter().adaptivePredict(_input,41,_ctx)) {
case 1:
{
setState(510);
expression(0);
setState(515);
_errHandler.sync(this);
_la=_input.LA(1);
while (_la == COMMA) {
{
{
setState(511);
match(COMMA);
setState(512);
expression(0);
}
}
setState(517);
_errHandler.sync(this);
_la=_input.LA(1);
}
}
break;
}
setState(521);
_la=_input.LA(1);
if (_la == SEMICOLON) {
{
setState(520);
match(SEMICOLON);
}
}
setState(523);
match(RBRACK);
}
break;
}
}
 catch (RecognitionException re) {
_localctx.exception=re;
_errHandler.reportError(this,re);
_errHandler.recover(this,re);
}
 finally {
exitRule();
}
return _localctx;
}
