{
  ActionRequestValidationException e=super.validate();
  if (getSource().indices() == null || getSource().indices().length == 0) {
    e=addValidationError("use _all if you really want to copy from all existing indexes",e);
  }
  if (destination.index() == null) {
    e=addValidationError("index must be specified",e);
    return e;
  }
  if (false == routingIsValid()) {
    e=addValidationError("routing must be unset, [keep], [discard] or [=<some new value>]",e);
  }
  if (destination.versionType() == INTERNAL) {
    if (destination.version() != Versions.MATCH_ANY && destination.version() != Versions.MATCH_DELETED) {
      e=addValidationError("unsupported version for internal versioning [" + destination.version() + ']',e);
    }
  }
  if (destination.ttl() != null) {
    e=addValidationError("setting ttl on destination isn't supported. use scripts instead.",e);
  }
  if (destination.timestamp() != null) {
    e=addValidationError("setting timestamp on destination isn't supported. use scripts instead.",e);
  }
  return e;
}
