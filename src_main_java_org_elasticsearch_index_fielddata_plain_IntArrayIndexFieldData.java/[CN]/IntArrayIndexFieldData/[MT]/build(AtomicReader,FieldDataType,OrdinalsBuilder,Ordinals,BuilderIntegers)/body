{
  if (!build.isMultiValued() && CommonSettings.removeOrdsOnSingleValue(fieldDataType)) {
    Docs ordinals=build.ordinals();
    final FixedBitSet set=builder.buildDocsWithValuesSet();
    long singleValuesArraySize=reader.maxDoc() * RamUsage.NUM_BYTES_INT + (set == null ? 0 : set.getBits().length * RamUsage.NUM_BYTES_LONG + RamUsage.NUM_BYTES_INT);
    long uniqueValuesArraySize=values.size() * RamUsage.NUM_BYTES_INT;
    long ordinalsSize=build.getMemorySizeInBytes();
    if (uniqueValuesArraySize + ordinalsSize < singleValuesArraySize) {
      return new IntArrayAtomicFieldData.WithOrdinals(values.toArray(),reader.maxDoc(),build);
    }
    int[] sValues=new int[reader.maxDoc()];
    int maxDoc=reader.maxDoc();
    for (int i=0; i < maxDoc; i++) {
      sValues[i]=values.get(ordinals.getOrd(i));
    }
    if (set == null) {
      return new IntArrayAtomicFieldData.Single(sValues,reader.maxDoc());
    }
 else {
      return new IntArrayAtomicFieldData.SingleFixedSet(sValues,reader.maxDoc(),set);
    }
  }
 else {
    return new IntArrayAtomicFieldData.WithOrdinals(values.toArray(),reader.maxDoc(),build);
  }
}
