{
  if (DOC_FIELD_NAME.equals(fieldName)) {
    if (order == SortOrder.DESC) {
      return SORT_DOC_REVERSE;
    }
 else {
      return SORT_DOC;
    }
  }
 else {
    MappedFieldType fieldType=context.fieldMapper(fieldName);
    if (fieldType == null) {
      if (unmappedType != null) {
        fieldType=context.getMapperService().unmappedFieldType(unmappedType);
      }
 else {
        throw new QueryShardException(context,"No mapping found for [" + fieldName + "] in order to sort on");
      }
    }
    if (!fieldType.isSortable()) {
      throw new QueryShardException(context,"Sorting not supported for field[" + fieldName + "]");
    }
    MultiValueMode localSortMode=null;
    if (sortMode != null) {
      localSortMode=MultiValueMode.fromString(sortMode.toString());
    }
    if (fieldType.isNumeric() == false && (sortMode == SortMode.SUM || sortMode == SortMode.AVG)) {
      throw new QueryShardException(context,"we only support AVG and SUM on number based fields");
    }
    boolean reverse=(order == SortOrder.DESC);
    if (localSortMode == null) {
      localSortMode=reverse ? MultiValueMode.MAX : MultiValueMode.MIN;
    }
    final Nested nested=resolveNested(context,nestedPath,nestedFilter);
    IndexFieldData.XFieldComparatorSource fieldComparatorSource=context.getForField(fieldType).comparatorSource(missing,localSortMode,nested);
    return new SortField(fieldType.name(),fieldComparatorSource,reverse);
  }
}
