{
  AttachmentMapper.Builder builder=new AttachmentMapper.Builder(name);
  for (  Map.Entry<String,Object> entry : node.entrySet()) {
    String fieldName=entry.getKey();
    Object fieldNode=entry.getValue();
    if (fieldName.equals("path")) {
      builder.pathType(parsePathType(name,fieldNode.toString()));
    }
 else     if (fieldName.equals("fields")) {
      Map<String,Object> fieldsNode=(Map<String,Object>)fieldNode;
      for (      Map.Entry<String,Object> entry1 : fieldsNode.entrySet()) {
        String propName=entry1.getKey();
        Object propNode=entry1.getValue();
        boolean isMultifield=false;
        if (propNode != null && propNode instanceof Map) {
          Object oType=((Map<String,Object>)propNode).get("type");
          if (oType != null && oType.equals(MultiFieldMapper.CONTENT_TYPE)) {
            isMultifield=true;
          }
        }
        if (name.equals(propName)) {
          builder.content(parserContext.typeParser(isMultifield ? MultiFieldMapper.CONTENT_TYPE : StringFieldMapper.CONTENT_TYPE).parse(name,(Map<String,Object>)propNode,parserContext));
        }
 else         if ("date".equals(propName)) {
          builder.date(parserContext.typeParser(isMultifield ? MultiFieldMapper.CONTENT_TYPE : DateFieldMapper.CONTENT_TYPE).parse("date",(Map<String,Object>)propNode,parserContext));
        }
 else         if ("title".equals(propName)) {
          builder.title(parserContext.typeParser(isMultifield ? MultiFieldMapper.CONTENT_TYPE : StringFieldMapper.CONTENT_TYPE).parse("title",(Map<String,Object>)propNode,parserContext));
        }
 else         if ("name".equals(propName)) {
          builder.name(parserContext.typeParser(isMultifield ? MultiFieldMapper.CONTENT_TYPE : StringFieldMapper.CONTENT_TYPE).parse("name",(Map<String,Object>)propNode,parserContext));
        }
 else         if ("author".equals(propName)) {
          builder.author(parserContext.typeParser(isMultifield ? MultiFieldMapper.CONTENT_TYPE : StringFieldMapper.CONTENT_TYPE).parse("author",(Map<String,Object>)propNode,parserContext));
        }
 else         if ("keywords".equals(propName)) {
          builder.keywords(parserContext.typeParser(isMultifield ? MultiFieldMapper.CONTENT_TYPE : StringFieldMapper.CONTENT_TYPE).parse("keywords",(Map<String,Object>)propNode,parserContext));
        }
 else         if ("content_type".equals(propName)) {
          builder.contentType(parserContext.typeParser(isMultifield ? MultiFieldMapper.CONTENT_TYPE : StringFieldMapper.CONTENT_TYPE).parse("content_type",(Map<String,Object>)propNode,parserContext));
        }
      }
    }
  }
  return builder;
}
