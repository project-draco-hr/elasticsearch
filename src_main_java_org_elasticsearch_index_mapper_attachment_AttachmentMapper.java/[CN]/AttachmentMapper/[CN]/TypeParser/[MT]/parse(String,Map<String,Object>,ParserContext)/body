{
  AttachmentMapper.Builder builder=new AttachmentMapper.Builder(name);
  for (  Map.Entry<String,Object> entry : node.entrySet()) {
    String fieldName=entry.getKey();
    Object fieldNode=entry.getValue();
    if (fieldName.equals("path")) {
      builder.pathType(parsePathType(name,fieldNode.toString()));
    }
 else     if (fieldName.equals("fields")) {
      Map<String,Object> fieldsNode=(Map<String,Object>)fieldNode;
      for (      Map.Entry<String,Object> entry1 : fieldsNode.entrySet()) {
        String propName=entry1.getKey();
        Map<String,Object> propNode=(Map<String,Object>)entry1.getValue();
        Mapper.Builder<?,?> mapperBuilder=findMapperBuilder(propNode,propName,parserContext);
        parseMultiField((AbstractFieldMapper.Builder)mapperBuilder,fieldName,parserContext,propName,propNode);
        if (propName.equals(name)) {
          builder.content(mapperBuilder);
        }
 else {
switch (propName) {
case FieldNames.DATE:
            builder.date(mapperBuilder);
          break;
case FieldNames.AUTHOR:
        builder.author(mapperBuilder);
      break;
case FieldNames.CONTENT_LENGTH:
    builder.contentLength(mapperBuilder);
  break;
case FieldNames.CONTENT_TYPE:
builder.contentType(mapperBuilder);
break;
case FieldNames.KEYWORDS:
builder.keywords(mapperBuilder);
break;
case FieldNames.LANGUAGE:
builder.language(mapperBuilder);
break;
case FieldNames.TITLE:
builder.title(mapperBuilder);
break;
case FieldNames.NAME:
builder.name(mapperBuilder);
break;
}
}
}
}
}
return builder;
}
