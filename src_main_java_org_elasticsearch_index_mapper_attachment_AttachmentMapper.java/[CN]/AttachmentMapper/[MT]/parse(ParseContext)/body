{
  byte[] content=null;
  String contentType=null;
  int indexedChars=defaultIndexedChars;
  boolean langDetect=defaultLangDetect;
  String name=null;
  String language=null;
  XContentParser parser=context.parser();
  XContentParser.Token token=parser.currentToken();
  if (token == XContentParser.Token.VALUE_STRING) {
    content=parser.binaryValue();
  }
 else {
    String currentFieldName=null;
    while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
      if (token == XContentParser.Token.FIELD_NAME) {
        currentFieldName=parser.currentName();
      }
 else       if (token == XContentParser.Token.VALUE_STRING) {
        if ("content".equals(currentFieldName)) {
          content=parser.binaryValue();
        }
 else         if ("_content_type".equals(currentFieldName)) {
          contentType=parser.text();
        }
 else         if ("_name".equals(currentFieldName)) {
          name=parser.text();
        }
 else         if ("language".equals(currentFieldName)) {
          language=parser.text();
        }
      }
 else       if (token == XContentParser.Token.VALUE_NUMBER) {
        if ("_indexed_chars".equals(currentFieldName) || "_indexedChars".equals(currentFieldName)) {
          indexedChars=parser.intValue();
        }
      }
 else       if (token == XContentParser.Token.VALUE_BOOLEAN) {
        if ("_detect_language".equals(currentFieldName) || "_detectLanguage".equals(currentFieldName)) {
          langDetect=parser.booleanValue();
        }
      }
    }
  }
  if (content == null) {
    throw new MapperParsingException("No content is provided.");
  }
  Metadata metadata=new Metadata();
  if (contentType != null) {
    metadata.add(Metadata.CONTENT_TYPE,contentType);
  }
  if (name != null) {
    metadata.add(Metadata.RESOURCE_NAME_KEY,name);
  }
  String parsedContent;
  try {
    parsedContent=tika().parseToString(new BytesStreamInput(content,false),metadata,indexedChars);
  }
 catch (  Throwable e) {
    if (!ignoreErrors)     throw new MapperParsingException("Failed to extract [" + indexedChars + "] characters of text for ["+ name+ "]",e);
    return;
  }
  context.externalValue(parsedContent);
  contentMapper.parse(context);
  if (langDetect) {
    try {
      if (language != null) {
        metadata.add(Metadata.CONTENT_LANGUAGE,language);
      }
 else {
        LanguageIdentifier identifier=new LanguageIdentifier(parsedContent);
        language=identifier.getLanguage();
      }
      context.externalValue(language);
      languageMapper.parse(context);
    }
 catch (    Throwable t) {
      logger.warn("Cannot detect language: {}",t.getMessage());
    }
  }
  try {
    context.externalValue(name);
    nameMapper.parse(context);
  }
 catch (  MapperParsingException e) {
    if (!ignoreErrors)     throw e;
    if (logger.isDebugEnabled())     logger.debug("Ignoring MapperParsingException catch while parsing name: {}",e.getMessage());
  }
  try {
    context.externalValue(metadata.get(Metadata.DATE));
    dateMapper.parse(context);
  }
 catch (  MapperParsingException e) {
    if (!ignoreErrors)     throw e;
    if (logger.isDebugEnabled())     logger.debug("Ignoring MapperParsingException catch while parsing date: {}: {}",e.getMessage(),context.externalValue());
  }
  try {
    context.externalValue(metadata.get(Metadata.TITLE));
    titleMapper.parse(context);
  }
 catch (  MapperParsingException e) {
    if (!ignoreErrors)     throw e;
    if (logger.isDebugEnabled())     logger.debug("Ignoring MapperParsingException catch while parsing title: {}: {}",e.getMessage(),context.externalValue());
  }
  try {
    context.externalValue(metadata.get(Metadata.AUTHOR));
    authorMapper.parse(context);
  }
 catch (  MapperParsingException e) {
    if (!ignoreErrors)     throw e;
    if (logger.isDebugEnabled())     logger.debug("Ignoring MapperParsingException catch while parsing author: {}: {}",e.getMessage(),context.externalValue());
  }
  try {
    context.externalValue(metadata.get(Metadata.KEYWORDS));
    keywordsMapper.parse(context);
  }
 catch (  MapperParsingException e) {
    if (!ignoreErrors)     throw e;
    if (logger.isDebugEnabled())     logger.debug("Ignoring MapperParsingException catch while parsing keywords: {}: {}",e.getMessage(),context.externalValue());
  }
  try {
    if (contentType != null) {
      context.externalValue(contentType);
    }
 else {
      context.externalValue(metadata.get(Metadata.CONTENT_TYPE));
    }
    contentTypeMapper.parse(context);
  }
 catch (  MapperParsingException e) {
    if (!ignoreErrors)     throw e;
    if (logger.isDebugEnabled())     logger.debug("Ignoring MapperParsingException catch while parsing content_type: {}: {}",e.getMessage(),context.externalValue());
  }
  try {
    if (metadata.get(Metadata.CONTENT_LENGTH) != null) {
      context.externalValue(metadata.get(Metadata.CONTENT_LENGTH));
    }
 else {
      context.externalValue(content.length);
    }
    contentLengthMapper.parse(context);
  }
 catch (  MapperParsingException e) {
    if (!ignoreErrors)     throw e;
    if (logger.isDebugEnabled())     logger.debug("Ignoring MapperParsingException catch while parsing content_length: {}: {}",e.getMessage(),context.externalValue());
  }
}
