{
  List<ShardRouting> shards=new ArrayList<>();
  GroupShardsIterator shardGroups=currentState.routingTable().allAssignedShardsGrouped(new String[]{INDEX},true);
  for (  ShardIterator shardIt : shardGroups) {
    for (    ShardRouting shard : shardIt.asUnordered()) {
      shards.add(shard);
    }
  }
  List<ShardRouting> failures=randomSubsetOf(randomIntBetween(1,1 + shards.size() / 4),shards.toArray(new ShardRouting[0]));
  String indexUUID=metaData.index(INDEX).getIndexUUID();
  int numberOfTasks=randomIntBetween(failures.size(),2 * failures.size());
  List<ShardRouting> shardsToFail=new ArrayList<>(numberOfTasks);
  for (int i=0; i < numberOfTasks; i++) {
    shardsToFail.add(randomFrom(failures));
  }
  return toTasks(currentState,shardsToFail,indexUUID,reason);
}
