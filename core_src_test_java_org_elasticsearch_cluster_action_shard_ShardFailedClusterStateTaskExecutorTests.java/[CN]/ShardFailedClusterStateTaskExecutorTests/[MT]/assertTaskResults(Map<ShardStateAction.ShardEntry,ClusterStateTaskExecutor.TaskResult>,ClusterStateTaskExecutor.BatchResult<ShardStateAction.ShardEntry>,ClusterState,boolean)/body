{
  assertEquals(taskResultMap.size(),result.executionResults.size());
  for (  Map.Entry<ShardStateAction.ShardEntry,ClusterStateTaskExecutor.TaskResult> entry : taskResultMap.entrySet()) {
    assertTrue(result.executionResults.containsKey(entry.getKey()));
    assertEquals(entry.getKey().toString(),entry.getValue().isSuccess(),result.executionResults.get(entry.getKey()).isSuccess());
  }
  List<ShardRouting> shards=clusterState.getRoutingTable().allShards();
  for (  Map.Entry<ShardStateAction.ShardEntry,ClusterStateTaskExecutor.TaskResult> entry : taskResultMap.entrySet()) {
    if (entry.getValue().isSuccess()) {
      for (      ShardRouting shard : shards) {
        if (shard.assignedToNode()) {
          assertFalse("entry key " + entry.getKey() + ", shard routing "+ shard,entry.getKey().getShardId().equals(shard.shardId()) && entry.getKey().getAllocationId().equals(shard.allocationId().getId()));
        }
      }
    }
 else {
      ClusterStateTaskExecutor.TaskResult actualResult=result.executionResults.get(entry.getKey());
      assertThat(actualResult.getFailure(),instanceOf(entry.getValue().getFailure().getClass()));
      assertThat(actualResult.getFailure().getMessage(),equalTo(entry.getValue().getFailure().getMessage()));
    }
  }
  if (clusterStateChanged) {
    assertNotSame(clusterState,result.resultingState);
  }
 else {
    assertSame(clusterState,result.resultingState);
  }
}
