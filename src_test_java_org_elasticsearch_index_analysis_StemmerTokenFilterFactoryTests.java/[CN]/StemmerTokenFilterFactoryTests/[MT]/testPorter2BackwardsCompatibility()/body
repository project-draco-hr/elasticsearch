{
  int iters=scaledRandomIntBetween(20,100);
  for (int i=0; i < iters; i++) {
    Version v=ElasticsearchTestCase.randomVersion(random());
    Settings settings=ImmutableSettings.settingsBuilder().put("index.analysis.filter.my_porter2.type","stemmer").put("index.analysis.filter.my_porter2.language","porter2").put("index.analysis.analyzer.my_porter2.tokenizer","whitespace").put("index.analysis.analyzer.my_porter2.filter","my_porter2").put(SETTING_VERSION_CREATED,v).build();
    AnalysisService analysisService=AnalysisTestsHelper.createAnalysisServiceFromSettings(settings);
    TokenFilterFactory tokenFilter=analysisService.tokenFilter("my_porter2");
    assertThat(tokenFilter,instanceOf(StemmerTokenFilterFactory.class));
    TokenStream create=tokenFilter.create(new WhitespaceTokenizer(TEST_VERSION_CURRENT,new StringReader("foo bar")));
    NamedAnalyzer analyzer=analysisService.analyzer("my_porter2");
    assertThat(create,instanceOf(SnowballFilter.class));
    if (v.onOrAfter(Version.V_1_3_0)) {
      assertAnalyzesTo(analyzer,"possibly",new String[]{"possibl"});
    }
 else {
      assertAnalyzesTo(analyzer,"possibly",new String[]{"possibli"});
    }
  }
}
