{
  List<String> notFoundUris=new ArrayList<>();
  notFoundUris.add("/_plugin/dummy/../../../../../log4j.properties");
  notFoundUris.add("/_plugin/dummy/../../../../../%00log4j.properties");
  notFoundUris.add("/_plugin/dummy/..%c0%af..%c0%af..%c0%af..%c0%af..%c0%aflog4j.properties");
  notFoundUris.add("/_plugin/dummy/%2E%2E/%2E%2E/%2E%2E/%2E%2E/index.html");
  notFoundUris.add("/_plugin/dummy/%2e%2e/%2e%2e/%2e%2e/%2e%2e/index.html");
  notFoundUris.add("/_plugin/dummy/%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2findex.html");
  notFoundUris.add("/_plugin/dummy/%2E%2E/%2E%2E/%2E%2E/%2E%2E/index.html");
  notFoundUris.add("/_plugin/dummy/..%5C..%5C..%5C..%5C..%5Clog4j.properties");
  for (  String uri : notFoundUris) {
    HttpResponse response=httpClient().path(uri).execute();
    String message=String.format(Locale.ROOT,"URI [%s] expected to be not found",uri);
    assertThat(message,response,hasStatus(NOT_FOUND));
  }
  HttpResponse response=httpClient().path("/_plugin/dummy/dir1/../dir1/../index.html").execute();
  assertThat(response,hasStatus(OK));
  assertThat(response.getBody(),containsString("<title>Dummy Site Plugin</title>"));
}
