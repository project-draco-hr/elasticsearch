{
  if (!engine().refreshNeeded()) {
synchronized (mutex) {
      if (state != IndexShardState.CLOSED) {
        refreshScheduledFuture=threadPool.schedule(refreshInterval,ThreadPool.Names.SAME,this);
      }
    }
    return;
  }
  threadPool.cached().execute(new Runnable(){
    @Override public void run(){
      try {
        if (engine.refreshNeeded()) {
          refresh(new Engine.Refresh(false));
        }
      }
 catch (      EngineClosedException e) {
      }
catch (      RefreshFailedEngineException e) {
        if (e.getCause() instanceof InterruptedException) {
        }
 else         if (e.getCause() instanceof ClosedByInterruptException) {
        }
 else         if (e.getCause() instanceof ThreadInterruptedException) {
        }
 else {
          logger.warn("Failed to perform scheduled engine refresh",e);
        }
      }
catch (      Exception e) {
        logger.warn("Failed to perform scheduled engine refresh",e);
      }
synchronized (mutex) {
        if (state != IndexShardState.CLOSED) {
          refreshScheduledFuture=threadPool.schedule(refreshInterval,ThreadPool.Names.SAME,EngineRefresher.this);
        }
      }
    }
  }
);
}
