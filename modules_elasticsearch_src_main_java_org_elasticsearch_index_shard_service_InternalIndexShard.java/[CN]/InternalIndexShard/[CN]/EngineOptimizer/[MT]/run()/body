{
  try {
    engine.optimize(new Engine.Optimize().maxNumSegments(-1).waitForMerge(false).flush(false).refresh(false));
  }
 catch (  EngineClosedException e) {
  }
catch (  OptimizeFailedEngineException e) {
    if (e.getCause() instanceof InterruptedException) {
    }
 else     if (e.getCause() instanceof ClosedByInterruptException) {
    }
 else     if (e.getCause() instanceof ThreadInterruptedException) {
    }
 else {
      logger.warn("Failed to perform scheduled engine optimize/merge",e);
    }
  }
catch (  Exception e) {
    logger.warn("Failed to perform scheduled engine optimize/merge",e);
  }
  if (state != IndexShardState.CLOSED) {
    optimizeScheduleFuture=threadPool.schedule(optimizeInterval,ThreadPool.Names.MANAGEMENT,this);
  }
}
