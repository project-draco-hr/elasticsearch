{
  if (state != IndexShardState.RECOVERING) {
    throw new IndexShardNotRecoveringException(shardId,state);
  }
switch (operation.opType()) {
case CREATE:
    Translog.Create create=(Translog.Create)operation;
  engine.create(prepareCreate(source(create.source()).type(create.type()).id(create.id())));
break;
case SAVE:
Translog.Index index=(Translog.Index)operation;
engine.index(prepareIndex(source(index.source()).type(index.type()).id(index.id())));
break;
case DELETE:
Translog.Delete delete=(Translog.Delete)operation;
engine.delete(new Engine.Delete(delete.uid()));
break;
case DELETE_BY_QUERY:
Translog.DeleteByQuery deleteByQuery=(Translog.DeleteByQuery)operation;
innerDeleteByQuery(deleteByQuery.source(),deleteByQuery.queryParserName(),deleteByQuery.types());
break;
default :
throw new ElasticSearchIllegalStateException("No operation defined for [" + operation + "]");
}
}
