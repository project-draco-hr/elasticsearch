{
  if (request.sourceNode() == null) {
    listener.onIgnoreRecovery(false,"No node to recovery from, retry on next cluster state update");
    return;
  }
  final InternalIndexShard shard=(InternalIndexShard)indicesService.indexServiceSafe(request.shardId().index().name()).shardSafe(request.shardId().id());
  IndexShardState preRecoveryState;
  try {
    preRecoveryState=shard.recovering();
  }
 catch (  IllegalIndexShardStateException e) {
    listener.onIgnoreRecovery(false,"already in recovering process, " + e.getMessage());
    return;
  }
  final IndexShardState fPreRecoveryState=preRecoveryState;
  threadPool.cached().execute(new Runnable(){
    @Override public void run(){
      doRecovery(shard,fPreRecoveryState,request,listener);
    }
  }
);
}
