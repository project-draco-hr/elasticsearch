{
  SubSearchContext subSearchContext=new SubSearchContext(context);
  XContentParser.Token token;
  String currentFieldName=null;
  try {
    while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
      if (token == XContentParser.Token.FIELD_NAME) {
        currentFieldName=parser.currentName();
      }
 else       if ("sort".equals(currentFieldName)) {
        sortParseElement.parse(parser,subSearchContext);
      }
 else       if ("_source".equals(currentFieldName)) {
        sourceParseElement.parse(parser,subSearchContext);
      }
 else       if (token.isValue()) {
switch (currentFieldName) {
case "from":
          subSearchContext.from(parser.intValue());
        break;
case "size":
      subSearchContext.size(parser.intValue());
    break;
case "track_scores":
case "trackScores":
  subSearchContext.trackScores(parser.booleanValue());
break;
case "version":
subSearchContext.version(parser.booleanValue());
break;
case "explain":
subSearchContext.explain(parser.booleanValue());
break;
default :
throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].");
}
}
 else if (token == XContentParser.Token.START_OBJECT) {
switch (currentFieldName) {
case "highlight":
highlighterParseElement.parse(parser,subSearchContext);
break;
case "scriptFields":
case "script_fields":
scriptFieldsParseElement.parse(parser,subSearchContext);
break;
default :
throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].");
}
}
 else if (token == XContentParser.Token.START_ARRAY) {
switch (currentFieldName) {
case "fielddataFields":
case "fielddata_fields":
fieldDataFieldsParseElement.parse(parser,subSearchContext);
break;
default :
throw new SearchParseException(context,"Unknown key for a " + token + " in ["+ aggregationName+ "]: ["+ currentFieldName+ "].");
}
}
 else {
throw new SearchParseException(context,"Unexpected token " + token + " in ["+ aggregationName+ "].");
}
}
}
 catch (Exception e) {
throw ExceptionsHelper.convertToElastic(e);
}
return new TopHitsAggregator.Factory(aggregationName,fetchPhase,subSearchContext);
}
