{
  Directory dir=new RAMDirectory();
  IndexWriter indexWriter=new IndexWriter(dir,new IndexWriterConfig(Lucene.VERSION,Lucene.STANDARD_ANALYZER));
  Document document=new Document();
  document.add(new TextField("svalue","zzz",Field.Store.YES));
  document.add(new TextField("mvalue","111",Field.Store.YES));
  indexWriter.addDocument(document);
  document=new Document();
  document.add(new TextField("svalue","xxx",Field.Store.YES));
  document.add(new TextField("mvalue","222 333",Field.Store.YES));
  indexWriter.addDocument(document);
  document=new Document();
  document.add(new TextField("mvalue","333 444",Field.Store.YES));
  indexWriter.addDocument(document);
  document=new Document();
  document.add(new TextField("svalue","aaa",Field.Store.YES));
  indexWriter.addDocument(document);
  document=new Document();
  document.add(new TextField("svalue","aaa",Field.Store.YES));
  indexWriter.addDocument(document);
  AtomicReader reader=SlowCompositeReaderWrapper.wrap(DirectoryReader.open(indexWriter,false));
  StringFieldData sFieldData=StringFieldData.load(reader,"svalue");
  StringFieldData mFieldData=StringFieldData.load(reader,"mvalue");
  assertThat(sFieldData.fieldName(),equalTo("svalue"));
  assertThat(sFieldData.multiValued(),equalTo(false));
  assertThat(mFieldData.fieldName(),equalTo("mvalue"));
  assertThat(mFieldData.multiValued(),equalTo(true));
  assertThat(sFieldData.hasValue(0),equalTo(true));
  assertThat(sFieldData.value(0).utf8ToString(),equalTo("zzz"));
  assertThat(sFieldData.docFieldData(0).getValue(),equalTo("zzz"));
  assertThat(sFieldData.values(0).length,equalTo(1));
  assertThat(sFieldData.docFieldData(0).getValues().length,equalTo(1));
  assertThat(sFieldData.values(0)[0].utf8ToString(),equalTo("zzz"));
  assertThat(sFieldData.docFieldData(0).getValues()[0],equalTo("zzz"));
  assertThat(sFieldData.hasValue(1),equalTo(true));
  assertThat(sFieldData.value(1).utf8ToString(),equalTo("xxx"));
  assertThat(sFieldData.values(1).length,equalTo(1));
  assertThat(sFieldData.values(1)[0].utf8ToString(),equalTo("xxx"));
  assertThat(sFieldData.hasValue(2),equalTo(false));
  assertThat(sFieldData.hasValue(3),equalTo(true));
  assertThat(sFieldData.value(3).utf8ToString(),equalTo("aaa"));
  assertThat(sFieldData.values(3).length,equalTo(1));
  assertThat(sFieldData.values(3)[0].utf8ToString(),equalTo("aaa"));
  assertThat(sFieldData.hasValue(4),equalTo(true));
  assertThat(sFieldData.value(4).utf8ToString(),equalTo("aaa"));
  assertThat(sFieldData.values(4).length,equalTo(1));
  assertThat(sFieldData.values(4)[0].utf8ToString(),equalTo("aaa"));
  final ArrayList<BytesRef> values=new ArrayList<BytesRef>();
  sFieldData.forEachValue(new FieldData.StringValueProc(){
    @Override public void onValue(    BytesRef value){
      values.add(value);
    }
  }
);
  assertThat(values.size(),equalTo(3));
  assertThat(values.get(0).utf8ToString(),equalTo("aaa"));
  assertThat(values.get(1).utf8ToString(),equalTo("xxx"));
  assertThat(values.get(2).utf8ToString(),equalTo("zzz"));
  assertThat(mFieldData.hasValue(0),equalTo(true));
  assertThat(mFieldData.value(0).utf8ToString(),equalTo("111"));
  assertThat(mFieldData.values(0).length,equalTo(1));
  assertThat(mFieldData.values(0)[0].utf8ToString(),equalTo("111"));
  assertThat(mFieldData.hasValue(1),equalTo(true));
  assertThat(mFieldData.value(1).utf8ToString(),equalTo("222"));
  assertThat(mFieldData.values(1).length,equalTo(2));
  assertThat(mFieldData.values(1)[0].utf8ToString(),equalTo("222"));
  assertThat(mFieldData.values(1)[1].utf8ToString(),equalTo("333"));
  assertThat(mFieldData.hasValue(2),equalTo(true));
  assertThat(mFieldData.value(2).utf8ToString(),equalTo("333"));
  assertThat(mFieldData.values(2).length,equalTo(2));
  assertThat(mFieldData.values(2)[0].utf8ToString(),equalTo("333"));
  assertThat(mFieldData.values(2)[1].utf8ToString(),equalTo("444"));
  assertThat(mFieldData.hasValue(3),equalTo(false));
  assertThat(mFieldData.hasValue(4),equalTo(false));
  values.clear();
  mFieldData.forEachValue(new FieldData.StringValueProc(){
    @Override public void onValue(    BytesRef value){
      values.add(value);
    }
  }
);
  assertThat(values.size(),equalTo(4));
  assertThat(values.get(0).utf8ToString(),equalTo("111"));
  assertThat(values.get(1).utf8ToString(),equalTo("222"));
  assertThat(values.get(2).utf8ToString(),equalTo("333"));
  assertThat(values.get(3).utf8ToString(),equalTo("444"));
  indexWriter.close();
}
