{
  final ShardId shardId=new ShardId("index","_na_",1);
  DirectoryService directoryService=new LuceneManagedDirectoryService(random());
  Settings settings=Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,org.elasticsearch.Version.CURRENT).put(Store.INDEX_STORE_STATS_REFRESH_INTERVAL_SETTING.getKey(),TimeValue.timeValueMinutes(0)).build();
  Store store=new Store(shardId,IndexSettingsModule.newIndexSettings("index",settings),directoryService,new DummyShardLock(shardId));
  long initialStoreSize=0;
  for (  String extraFiles : store.directory().listAll()) {
    assertTrue("expected extraFS file but got: " + extraFiles,extraFiles.startsWith("extra"));
    initialStoreSize+=store.directory().fileLength(extraFiles);
  }
  StoreStats stats=store.stats();
  assertEquals(stats.getSize().getBytes(),initialStoreSize);
  Directory dir=store.directory();
  final long length;
  try (IndexOutput output=dir.createOutput("foo.bar",IOContext.DEFAULT)){
    int iters=scaledRandomIntBetween(10,100);
    for (int i=0; i < iters; i++) {
      BytesRef bytesRef=new BytesRef(TestUtil.randomRealisticUnicodeString(random(),10,1024));
      output.writeBytes(bytesRef.bytes,bytesRef.offset,bytesRef.length);
    }
    length=output.getFilePointer();
  }
   assertTrue(numNonExtraFiles(store) > 0);
  stats=store.stats();
  assertEquals(stats.getSizeInBytes(),length + initialStoreSize);
  deleteContent(store.directory());
  IOUtils.close(store);
}
