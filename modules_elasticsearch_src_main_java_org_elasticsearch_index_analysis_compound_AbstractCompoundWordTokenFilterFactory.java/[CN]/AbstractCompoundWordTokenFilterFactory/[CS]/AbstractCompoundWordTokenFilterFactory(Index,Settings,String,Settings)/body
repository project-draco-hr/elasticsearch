{
  super(index,indexSettings,name);
  minWordSize=settings.getAsInt("min_word_size",CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE);
  minSubwordSize=settings.getAsInt("min_subword_size",CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE);
  maxSubwordSize=settings.getAsInt("max_subword_size",CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE);
  onlyLongestMatch=settings.getAsBoolean("only_longest_max",false);
  String wordListPath=settings.get("word_list_path",null);
  if (wordListPath == null) {
    throw new ElasticSearchIllegalArgumentException("word_list_path is a required setting.");
  }
  File wordListFile=new File(wordListPath);
  if (!wordListFile.exists()) {
    throw new ElasticSearchIllegalArgumentException("word_list_path file must exist.");
  }
  try {
    wordList=WordlistLoader.getWordSet(wordListFile);
  }
 catch (  IOException ioe) {
    throw new ElasticSearchIllegalArgumentException("IOException while reading word_list_path: " + ioe.getMessage());
  }
}
