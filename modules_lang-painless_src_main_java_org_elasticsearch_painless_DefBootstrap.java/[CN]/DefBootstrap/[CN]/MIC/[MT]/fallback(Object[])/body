{
  if (initialized) {
    MethodHandle generic=lookupGeneric();
    setTarget(generic.asType(type()));
    return generic.invokeWithArguments(args);
  }
  final MethodType type=type();
  MethodHandle target=lookup(args);
  try {
    target=target.asType(type);
  }
 catch (  WrongMethodTypeException e) {
    Exception exc=new ClassCastException("Cannot cast from: " + target.type().returnType() + " to "+ type.returnType());
    exc.initCause(e);
    throw exc;
  }
  final MethodHandle test;
  if (flavor == BINARY_OPERATOR || flavor == SHIFT_OPERATOR) {
    Class<?> clazz0=args[0] == null ? null : args[0].getClass();
    Class<?> clazz1=args[1] == null ? null : args[1].getClass();
    if (type.parameterType(1) != Object.class) {
      MethodHandle unaryTest=CHECK_LHS.bindTo(clazz0);
      test=unaryTest.asType(unaryTest.type().changeParameterType(0,type.parameterType(0)));
    }
 else     if (type.parameterType(0) != Object.class) {
      MethodHandle unaryTest=CHECK_RHS.bindTo(clazz0).bindTo(clazz1);
      test=unaryTest.asType(unaryTest.type().changeParameterType(0,type.parameterType(0)).changeParameterType(1,type.parameterType(1)));
    }
 else {
      MethodHandle binaryTest=CHECK_BOTH.bindTo(clazz0).bindTo(clazz1);
      test=binaryTest.asType(binaryTest.type().changeParameterType(0,type.parameterType(0)).changeParameterType(1,type.parameterType(1)));
    }
  }
 else {
    MethodHandle receiverTest=CHECK_LHS.bindTo(args[0].getClass());
    test=receiverTest.asType(receiverTest.type().changeParameterType(0,type.parameterType(0)));
  }
  MethodHandle guard=MethodHandles.guardWithTest(test,target,getTarget());
  if (flavor == BINARY_OPERATOR && (flags & OPERATOR_ALLOWS_NULL) != 0) {
    MethodHandle handler=MethodHandles.dropArguments(lookupGeneric().asType(type()),0,NullPointerException.class);
    guard=MethodHandles.catchException(guard,NullPointerException.class,handler);
  }
  initialized=true;
  setTarget(guard);
  return target.invokeWithArguments(args);
}
