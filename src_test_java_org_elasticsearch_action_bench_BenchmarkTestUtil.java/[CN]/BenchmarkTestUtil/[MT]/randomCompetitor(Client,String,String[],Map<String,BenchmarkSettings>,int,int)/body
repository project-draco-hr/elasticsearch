{
  final BenchmarkCompetitorBuilder builder=new BenchmarkCompetitorBuilder();
  final BenchmarkSettings settings=randomSettings(lowRandomIntervalBound,highRandomIntervalBound);
  builder.setClearCachesSettings(randomCacheSettings());
  builder.setIterations(settings.iterations());
  builder.setConcurrency(settings.concurrency());
  builder.setMultiplier(settings.multiplier());
  builder.setSearchType(settings.searchType());
  builder.setWarmup(settings.warmup());
  builder.setName(name);
  final int numSearches=between(lowRandomIntervalBound,highRandomIntervalBound);
  for (int i=0; i < numSearches; i++) {
    final SearchRequest searchRequest=randomSearch(client,indices);
    builder.addSearchRequest(searchRequest);
    settings.addSearchRequest(searchRequest);
  }
  if (competitionSettingsMap != null) {
    competitionSettingsMap.put(name,settings);
  }
  return builder.build();
}
