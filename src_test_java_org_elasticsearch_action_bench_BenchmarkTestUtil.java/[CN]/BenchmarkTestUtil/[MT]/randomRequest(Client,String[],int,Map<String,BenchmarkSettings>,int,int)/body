{
  final BenchmarkRequestBuilder builder=new BenchmarkRequestBuilder(client,indices);
  final BenchmarkSettings settings=randomSettings(lowRandomIntervalBound,highRandomIntervalBound);
  builder.setIterations(settings.iterations());
  builder.setConcurrency(settings.concurrency());
  builder.setMultiplier(settings.multiplier());
  builder.setSearchType(settings.searchType());
  builder.setWarmup(settings.warmup());
  builder.setNumExecutorNodes(numExecutorNodes);
  final int numCompetitors=between(lowRandomIntervalBound,highRandomIntervalBound);
  for (int i=0; i < numCompetitors; i++) {
    builder.addCompetitor(randomCompetitor(client,COMPETITOR_PREFIX + i,indices,competitionSettingsMap,lowRandomIntervalBound,highRandomIntervalBound));
  }
  final BenchmarkRequest request=builder.request();
  request.benchmarkName(BENCHMARK_NAME);
  request.cascadeGlobalSettings();
  request.applyLateBoundSettings(indices,new String[]{INDEX_TYPE});
  return request;
}
