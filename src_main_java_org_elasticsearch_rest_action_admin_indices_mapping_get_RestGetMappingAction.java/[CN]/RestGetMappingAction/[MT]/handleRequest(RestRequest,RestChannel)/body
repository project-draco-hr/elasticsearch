{
  final String[] indices=splitIndices(request.param("index"));
  final Set<String> types=ImmutableSet.copyOf(splitTypes(request.param("type")));
  ClusterStateRequest clusterStateRequest=Requests.clusterStateRequest().filterRoutingTable(true).filterNodes(true).filteredIndices(indices);
  client.admin().cluster().state(clusterStateRequest,new ActionListener<ClusterStateResponse>(){
    @Override public void onResponse(    ClusterStateResponse response){
      try {
        boolean foundAny=false;
        MetaData metaData=response.state().metaData();
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        if (indices.length == 1 && metaData.indices().isEmpty()) {
          channel.sendResponse(new XContentThrowableRestResponse(request,new IndexMissingException(new Index(indices[0]))));
          return;
        }
        if (indices.length == 1 && types.size() == 1) {
          boolean foundType=false;
          IndexMetaData indexMetaData=metaData.iterator().next();
          for (          MappingMetaData mappingMd : indexMetaData.mappings().values()) {
            if (!types.isEmpty() && !types.contains(mappingMd.type())) {
              continue;
            }
            foundAny=true;
            foundType=true;
            builder.field(mappingMd.type());
            builder.map(mappingMd.sourceAsMap());
          }
          if (!foundType) {
            channel.sendResponse(new XContentThrowableRestResponse(request,new TypeMissingException(new Index(indices[0]),types.iterator().next())));
            return;
          }
        }
 else {
          for (          IndexMetaData indexMetaData : metaData) {
            builder.startObject(indexMetaData.index(),XContentBuilder.FieldCaseConversion.NONE);
            for (            MappingMetaData mappingMd : indexMetaData.mappings().values()) {
              if (!types.isEmpty() && !types.contains(mappingMd.type())) {
                continue;
              }
              foundAny=true;
              builder.field(mappingMd.type());
              builder.map(mappingMd.sourceAsMap());
            }
            builder.endObject();
          }
        }
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,foundAny ? OK : NOT_FOUND,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
