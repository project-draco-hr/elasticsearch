{
  MetaDataStateFormat<MetaData> format=metaDataFormat(randomFrom(XContentType.values()));
  final Path[] dirs=new Path[2];
  dirs[0]=createTempDir();
  dirs[1]=createTempDir();
  for (  Path dir : dirs) {
    Files.createDirectories(dir.resolve(MetaDataStateFormat.STATE_DIR_NAME));
  }
  final long v=randomInt(10);
  MetaData meta=randomMeta();
  String uuid=meta.clusterUUID();
  final Path dir2=randomFrom(dirs);
  MetaData meta2=randomMeta();
  assertFalse(meta2.clusterUUID().equals(uuid));
  try (XContentBuilder xcontentBuilder=XContentFactory.contentBuilder(MetaData.FORMAT.format(),Files.newOutputStream(dir2.resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve(MetaData.GLOBAL_STATE_FILE_PREFIX + v)))){
    xcontentBuilder.startObject();
    MetaData.Builder.toXContent(randomMeta(),xcontentBuilder,ToXContent.EMPTY_PARAMS);
    xcontentBuilder.endObject();
  }
   format.write(meta,v,dirs);
  MetaData state=format.loadLatestState(logger,dirs);
  final Path path=randomFrom(dirs);
  assertTrue(Files.exists(path.resolve(MetaDataStateFormat.STATE_DIR_NAME).resolve("global-" + (v + 1) + ".st")));
  assertEquals(state.clusterUUID(),uuid);
}
