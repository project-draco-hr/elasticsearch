{
  super.readFrom(in);
  id=in.readLong();
  int termsSize=in.readVInt();
  if (termsSize == 0) {
    terms=EMPTY_TERMS;
  }
 else {
    terms=new Term[termsSize];
    for (int i=0; i < terms.length; i++) {
      terms[i]=new Term(in.readString(),in.readBytesRef());
    }
  }
  int termsStatsSize=in.readVInt();
  if (termsStatsSize == 0) {
    termStatistics=EMPTY_TERM_STATS;
  }
 else {
    termStatistics=new TermStatistics[termsStatsSize];
    for (int i=0; i < termStatistics.length; i++) {
      BytesRef term=terms[i].bytes();
      long docFreq=in.readVLong();
      long totalTermFreq=in.readVLong();
      termStatistics[i]=new TermStatistics(term,docFreq,totalTermFreq);
    }
  }
  int numFieldStatistics=in.readVInt();
  for (int i=0; i < numFieldStatistics; i++) {
    String field=in.readString();
    CollectionStatistics stats=new CollectionStatistics(field,in.readVLong(),in.readVLong(),in.readVLong(),in.readVLong());
    fieldStatistics.put(field,stats);
  }
  maxDoc=in.readVInt();
}
