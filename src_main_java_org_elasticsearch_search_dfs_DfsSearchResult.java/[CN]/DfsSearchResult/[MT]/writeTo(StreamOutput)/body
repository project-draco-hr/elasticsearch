{
  super.writeTo(out);
  out.writeLong(id);
  out.writeVInt(terms.length);
  for (  Term term : terms) {
    out.writeString(term.field());
    out.writeBytesRef(term.bytes());
  }
  out.writeVInt(termStatistics.length);
  for (  TermStatistics termStatistic : termStatistics) {
    out.writeVLong(termStatistic.docFreq());
    out.writeVLong(termStatistic.totalTermFreq());
  }
  out.writeVInt(fieldStatistics.size());
  for (  Map.Entry<String,CollectionStatistics> entry : fieldStatistics.entrySet()) {
    out.writeString(entry.getKey());
    out.writeVLong(entry.getValue().maxDoc());
    out.writeVLong(entry.getValue().docCount());
    out.writeVLong(entry.getValue().sumTotalTermFreq());
    out.writeVLong(entry.getValue().sumDocFreq());
  }
  out.writeVInt(maxDoc);
}
