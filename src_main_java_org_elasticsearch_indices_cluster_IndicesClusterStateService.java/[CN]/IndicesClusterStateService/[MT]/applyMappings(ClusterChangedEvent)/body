{
  for (  IndexMetaData indexMetaData : event.state().metaData()) {
    if (!indicesService.hasIndex(indexMetaData.index())) {
      continue;
    }
    List<String> typesToRefresh=null;
    String index=indexMetaData.index();
    IndexService indexService=indicesService.indexService(index);
    if (indexService == null) {
      return;
    }
    MapperService mapperService=indexService.mapperService();
    if (indexMetaData.mappings().containsKey(MapperService.DEFAULT_MAPPING)) {
      processMapping(index,mapperService,MapperService.DEFAULT_MAPPING,indexMetaData.mapping(MapperService.DEFAULT_MAPPING).source());
    }
    for (    ObjectCursor<MappingMetaData> cursor : indexMetaData.mappings().values()) {
      MappingMetaData mappingMd=cursor.value;
      String mappingType=mappingMd.type();
      CompressedString mappingSource=mappingMd.source();
      if (mappingType.equals(MapperService.DEFAULT_MAPPING)) {
        continue;
      }
      boolean requireRefresh=processMapping(index,mapperService,mappingType,mappingSource);
      if (requireRefresh) {
        if (typesToRefresh == null) {
          typesToRefresh=Lists.newArrayList();
        }
        typesToRefresh.add(mappingType);
      }
    }
    if (typesToRefresh != null) {
      if (sendRefreshMapping) {
        nodeMappingRefreshAction.nodeMappingRefresh(event.state(),new NodeMappingRefreshAction.NodeMappingRefreshRequest(index,indexMetaData.uuid(),typesToRefresh.toArray(new String[typesToRefresh.size()]),event.state().nodes().localNodeId()));
      }
    }
    for (    DocumentMapper documentMapper : mapperService) {
      if (seenMappings.containsKey(new Tuple<>(index,documentMapper.type())) && !indexMetaData.mappings().containsKey(documentMapper.type())) {
        mapperService.remove(documentMapper.type());
        seenMappings.remove(new Tuple<>(index,documentMapper.type()));
      }
    }
  }
}
