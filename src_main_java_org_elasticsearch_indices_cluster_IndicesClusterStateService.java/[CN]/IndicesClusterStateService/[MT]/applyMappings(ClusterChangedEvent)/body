{
  for (  IndexMetaData indexMetaData : event.state().metaData()) {
    if (!indicesService.hasIndex(indexMetaData.index())) {
      continue;
    }
    List<String> typesToRefresh=Lists.newArrayList();
    String index=indexMetaData.index();
    IndexService indexService=indicesService.indexService(index);
    if (indexService == null) {
      return;
    }
    try {
      MapperService mapperService=indexService.mapperService();
      if (indexMetaData.mappings().containsKey(MapperService.DEFAULT_MAPPING)) {
        boolean requireRefresh=processMapping(index,mapperService,MapperService.DEFAULT_MAPPING,indexMetaData.mapping(MapperService.DEFAULT_MAPPING).source());
        if (requireRefresh) {
          typesToRefresh.add(MapperService.DEFAULT_MAPPING);
        }
      }
      for (      ObjectCursor<MappingMetaData> cursor : indexMetaData.mappings().values()) {
        MappingMetaData mappingMd=cursor.value;
        String mappingType=mappingMd.type();
        CompressedString mappingSource=mappingMd.source();
        if (mappingType.equals(MapperService.DEFAULT_MAPPING)) {
          continue;
        }
        boolean requireRefresh=processMapping(index,mapperService,mappingType,mappingSource);
        if (requireRefresh) {
          typesToRefresh.add(mappingType);
        }
      }
      if (!typesToRefresh.isEmpty() && sendRefreshMapping) {
        nodeMappingRefreshAction.nodeMappingRefresh(event.state(),new NodeMappingRefreshAction.NodeMappingRefreshRequest(index,indexMetaData.uuid(),typesToRefresh.toArray(new String[typesToRefresh.size()]),event.state().nodes().localNodeId()));
      }
    }
 catch (    Throwable t) {
      for (      IndexShard indexShard : indexService) {
        ShardRouting shardRouting=indexShard.routingEntry();
        failAndRemoveShard(shardRouting,indexService,true,"failed to update mappings",t);
      }
    }
  }
}
