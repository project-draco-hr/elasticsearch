{
synchronized (mutex) {
    if (indexService.hasShard(shardRouting.shardId().id())) {
      try {
        logger.debug("[{}][{}] removing shard on failed recovery [{}]",shardRouting.index(),shardRouting.shardId().id(),failure.getMessage());
        indexService.removeShard(shardRouting.shardId().id(),"recovery failure [" + ExceptionsHelper.detailedMessage(failure) + "]");
      }
 catch (      IndexShardMissingException e) {
      }
catch (      Throwable e1) {
        logger.warn("[{}][{}] failed to delete shard after recovery failure",e1,indexService.index().name(),shardRouting.shardId().id());
      }
    }
    if (sendShardFailure) {
      logger.warn("[{}][{}] sending failed shard after recovery failure",failure,indexService.index().name(),shardRouting.shardId().id());
      try {
        failedShards.put(shardRouting.shardId(),new FailedShard(shardRouting.version()));
        shardStateAction.shardFailed(shardRouting,indexMetaData.getUUID(),"Failed to start shard, message [" + detailedMessage(failure) + "]");
      }
 catch (      Throwable e1) {
        logger.warn("[{}][{}] failed to mark shard as failed after a failed start",e1,indexService.index().name(),shardRouting.id());
      }
    }
  }
}
