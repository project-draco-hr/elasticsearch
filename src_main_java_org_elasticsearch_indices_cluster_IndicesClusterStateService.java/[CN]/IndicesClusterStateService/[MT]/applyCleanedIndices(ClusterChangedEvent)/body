{
  for (  Map.Entry<String,IndexService> entry : indicesService.indices().entrySet()) {
    String index=entry.getKey();
    IndexMetaData indexMetaData=event.state().metaData().index(index);
    if (indexMetaData != null && indexMetaData.state() == IndexMetaData.State.CLOSE) {
      IndexService indexService=entry.getValue();
      for (      Integer shardId : indexService.shardIds()) {
        logger.debug("[{}][{}] removing shard (index is closed)",index,shardId);
        try {
          indexService.removeShard(shardId,"removing shard (index is closed)");
        }
 catch (        Throwable e) {
          logger.warn("[{}] failed to remove shard (index is closed)",e,index);
        }
      }
    }
  }
  for (  Map.Entry<String,IndexService> entry : indicesService.indices().entrySet()) {
    String index=entry.getKey();
    IndexService indexService=entry.getValue();
    if (indexService.shardIds().isEmpty()) {
      if (logger.isDebugEnabled()) {
        logger.debug("[{}] cleaning index (no shards allocated)",index);
      }
      removeIndex(index,"removing index (no shards allocated)");
    }
  }
}
