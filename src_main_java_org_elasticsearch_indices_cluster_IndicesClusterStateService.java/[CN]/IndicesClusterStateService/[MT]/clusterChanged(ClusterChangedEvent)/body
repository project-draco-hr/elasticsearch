{
  if (!indicesService.changesAllowed()) {
    return;
  }
  if (!lifecycle.started()) {
    return;
  }
synchronized (mutex) {
    if (event.state().blocks().disableStatePersistence()) {
      for (      Map.Entry<String,IndexService> entry : indicesService.indices().entrySet()) {
        String index=entry.getKey();
        IndexService indexService=entry.getValue();
        for (        Integer shardId : indexService.shardIds()) {
          logger.debug("[{}][{}] removing shard (disabled block persistence)",index,shardId);
          try {
            indexService.removeShard(shardId,"removing shard (disabled block persistence)");
          }
 catch (          Throwable e) {
            logger.warn("[{}] failed to remove shard (disabled block persistence)",e,index);
          }
        }
        removeIndex(index,"cleaning index (disabled block persistence)");
      }
      return;
    }
    cleanFailedShards(event);
    cleanMismatchedIndexUUIDs(event);
    applyNewIndices(event);
    applyMappings(event);
    applyAliases(event);
    applyNewOrUpdatedShards(event);
    applyDeletedIndices(event);
    applyDeletedShards(event);
    applyCleanedIndices(event);
    applySettings(event);
    sendIndexLifecycleEvents(event);
  }
}
