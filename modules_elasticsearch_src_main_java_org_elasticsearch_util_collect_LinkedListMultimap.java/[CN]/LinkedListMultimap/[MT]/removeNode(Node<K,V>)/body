{
  if (node.previous != null) {
    node.previous.next=node.next;
  }
 else {
    head=node.next;
  }
  if (node.next != null) {
    node.next.previous=node.previous;
  }
 else {
    tail=node.previous;
  }
  if (node.previousSibling != null) {
    node.previousSibling.nextSibling=node.nextSibling;
  }
 else   if (node.nextSibling != null) {
    keyToKeyHead.put(node.key,node.nextSibling);
  }
 else {
    keyToKeyHead.remove(node.key);
  }
  if (node.nextSibling != null) {
    node.nextSibling.previousSibling=node.previousSibling;
  }
 else   if (node.previousSibling != null) {
    keyToKeyTail.put(node.key,node.previousSibling);
  }
 else {
    keyToKeyTail.remove(node.key);
  }
  keyCount.remove(node.key);
}
