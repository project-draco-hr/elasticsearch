{
  for (long i=0; i < collectors.size(); ++i) {
    collectors.set(i,null);
  }
  return new LeafBucketCollector(){
    Scorer scorer;
    @Override public void setScorer(    Scorer scorer) throws IOException {
      this.scorer=scorer;
    }
    @Override public void collect(    int doc,    long bucket) throws IOException {
      collectors=bigArrays.grow(collectors,bucket + 1);
      LeafBucketCollector collector=collectors.get(bucket);
      if (collector == null) {
        aggregators=bigArrays.grow(aggregators,bucket + 1);
        Aggregator aggregator=aggregators.get(bucket);
        if (aggregator == null) {
          aggregator=factory.create(parent,true);
          aggregator.preCollection();
          aggregators.set(bucket,aggregator);
        }
        collector=aggregator.getLeafCollector(ctx);
        collector.setScorer(scorer);
        collectors.set(bucket,collector);
      }
      collector.collect(doc,0);
    }
  }
;
}
