{
  final AggregatedDfs dfs=searchPhaseController.aggregateDfs(firstResults);
  final AtomicInteger counter=new AtomicInteger(firstResults.asList().size());
  int localOperations=0;
  for (  final AtomicArray.Entry<DfsSearchResult> entry : firstResults.asList()) {
    DfsSearchResult dfsResult=entry.value;
    DiscoveryNode node=nodes.get(dfsResult.shardTarget().nodeId());
    if (node.id().equals(nodes.localNodeId())) {
      localOperations++;
    }
 else {
      QuerySearchRequest querySearchRequest=new QuerySearchRequest(request,dfsResult.id(),dfs);
      executeQuery(entry.index,dfsResult,counter,querySearchRequest,node);
    }
  }
  if (localOperations > 0) {
    if (request.operationThreading() == SearchOperationThreading.SINGLE_THREAD) {
      threadPool.executor(ThreadPool.Names.SEARCH).execute(new Runnable(){
        @Override public void run(){
          for (          final AtomicArray.Entry<DfsSearchResult> entry : firstResults.asList()) {
            DfsSearchResult dfsResult=entry.value;
            DiscoveryNode node=nodes.get(dfsResult.shardTarget().nodeId());
            if (node.id().equals(nodes.localNodeId())) {
              QuerySearchRequest querySearchRequest=new QuerySearchRequest(request,dfsResult.id(),dfs);
              executeQuery(entry.index,dfsResult,counter,querySearchRequest,node);
            }
          }
        }
      }
);
    }
 else {
      boolean localAsync=request.operationThreading() == SearchOperationThreading.THREAD_PER_SHARD;
      for (      final AtomicArray.Entry<DfsSearchResult> entry : firstResults.asList()) {
        final DfsSearchResult dfsResult=entry.value;
        final DiscoveryNode node=nodes.get(dfsResult.shardTarget().nodeId());
        if (node.id().equals(nodes.localNodeId())) {
          final QuerySearchRequest querySearchRequest=new QuerySearchRequest(request,dfsResult.id(),dfs);
          try {
            if (localAsync) {
              threadPool.executor(ThreadPool.Names.SEARCH).execute(new Runnable(){
                @Override public void run(){
                  executeQuery(entry.index,dfsResult,counter,querySearchRequest,node);
                }
              }
);
            }
 else {
              executeQuery(entry.index,dfsResult,counter,querySearchRequest,node);
            }
          }
 catch (          Throwable t) {
            onQueryFailure(t,querySearchRequest,entry.index,dfsResult,counter);
          }
        }
      }
    }
  }
}
