{
  MockNode nodeA=createMockNode("nodeA",Settings.EMPTY,Version.CURRENT).setAsMaster();
  MockNode nodeB=createMockNode("nodeB",Settings.EMPTY,Version.CURRENT);
  ClusterState clusterState=nodeA.clusterState;
  DiscoveryNodes discoveryNodes=DiscoveryNodes.builder(clusterState.nodes()).put(nodeB.discoveryNode).build();
  ClusterState previousClusterState=clusterState;
  clusterState=ClusterState.builder(clusterState).nodes(discoveryNodes).incrementVersion().build();
  publishStateAndWait(nodeA.action,clusterState,previousClusterState);
  assertSameStateFromFull(nodeB.clusterState,clusterState);
  previousClusterState=clusterState;
  clusterState=ClusterState.builder(clusterState).blocks(ClusterBlocks.builder().addGlobalBlock(MetaData.CLUSTER_READ_ONLY_BLOCK)).incrementVersion().build();
  publishStateAndWait(nodeA.action,clusterState,previousClusterState);
  assertSameStateFromDiff(nodeB.clusterState,clusterState);
  assertThat(nodeB.clusterState.blocks().global().size(),equalTo(1));
  previousClusterState=clusterState;
  clusterState=ClusterState.builder(clusterState).blocks(ClusterBlocks.EMPTY_CLUSTER_BLOCK).incrementVersion().build();
  publishStateAndWait(nodeA.action,clusterState,previousClusterState);
  assertSameStateFromDiff(nodeB.clusterState,clusterState);
  assertTrue(nodeB.clusterState.wasReadFromDiff());
  MockNode nodeC=createMockNode("nodeC",Settings.EMPTY,Version.CURRENT);
  previousClusterState=clusterState;
  discoveryNodes=DiscoveryNodes.builder(discoveryNodes).put(nodeC.discoveryNode).build();
  clusterState=ClusterState.builder(clusterState).nodes(discoveryNodes).incrementVersion().build();
  publishStateAndWait(nodeA.action,clusterState,previousClusterState);
  assertSameStateFromDiff(nodeB.clusterState,clusterState);
  assertSameStateFromFull(nodeC.clusterState,clusterState);
  previousClusterState=clusterState;
  MetaData metaData=MetaData.builder(clusterState.metaData()).transientSettings(Settings.settingsBuilder().put("foo","bar").build()).build();
  clusterState=ClusterState.builder(clusterState).metaData(metaData).incrementVersion().build();
  publishStateAndWait(nodeA.action,clusterState,previousClusterState);
  assertSameStateFromDiff(nodeB.clusterState,clusterState);
  assertThat(nodeB.clusterState.blocks().global().size(),equalTo(0));
  assertSameStateFromDiff(nodeC.clusterState,clusterState);
  assertThat(nodeC.clusterState.blocks().global().size(),equalTo(0));
  previousClusterState=ClusterState.builder(clusterState).incrementVersion().build();
  clusterState=ClusterState.builder(clusterState).incrementVersion().build();
  publishStateAndWait(nodeA.action,clusterState,previousClusterState);
  assertSameStateFromFull(nodeB.clusterState,clusterState);
  assertSameStateFromFull(nodeC.clusterState,clusterState);
  assertFalse(nodeC.clusterState.wasReadFromDiff());
  nodeA.resetMasterId();
  nodeB.resetMasterId();
  nodeC.resetMasterId();
  discoveryNodes=DiscoveryNodes.builder(discoveryNodes).put(nodeA.discoveryNode).put(nodeB.discoveryNode).put(nodeC.discoveryNode).masterNodeId(nodeB.discoveryNode.getId()).localNodeId(nodeB.discoveryNode.getId()).build();
  previousClusterState=ClusterState.builder(new ClusterName("test")).nodes(discoveryNodes).build();
  clusterState=ClusterState.builder(clusterState).nodes(discoveryNodes).incrementVersion().build();
  publishStateAndWait(nodeB.action,clusterState,previousClusterState);
  assertSameStateFromFull(nodeA.clusterState,clusterState);
  assertSameStateFromFull(nodeC.clusterState,clusterState);
}
