{
  ClusterHealthRequest clusterHealthRequest=clusterHealthRequest(Strings.splitStringByCommaToArray(request.param("index")));
  clusterHealthRequest.local(request.paramAsBoolean("local",clusterHealthRequest.local()));
  clusterHealthRequest.listenerThreaded(false);
  try {
    clusterHealthRequest.masterNodeTimeout(request.paramAsTime("master_timeout",clusterHealthRequest.masterNodeTimeout()));
    clusterHealthRequest.timeout(request.paramAsTime("timeout",clusterHealthRequest.timeout()));
    String waitForStatus=request.param("wait_for_status");
    if (waitForStatus != null) {
      clusterHealthRequest.waitForStatus(ClusterHealthStatus.valueOf(waitForStatus.toUpperCase(Locale.ROOT)));
    }
    clusterHealthRequest.waitForRelocatingShards(request.paramAsInt("wait_for_relocating_shards",clusterHealthRequest.waitForRelocatingShards()));
    clusterHealthRequest.waitForActiveShards(request.paramAsInt("wait_for_active_shards",clusterHealthRequest.waitForActiveShards()));
    clusterHealthRequest.waitForNodes(request.param("wait_for_nodes",clusterHealthRequest.waitForNodes()));
  }
 catch (  Exception e) {
    try {
      XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
      channel.sendResponse(new XContentRestResponse(request,PRECONDITION_FAILED,builder.startObject().field("error",e.getMessage()).endObject()));
    }
 catch (    IOException e1) {
      logger.error("Failed to send failure response",e1);
    }
    return;
  }
  client.admin().cluster().health(clusterHealthRequest,new ActionListener<ClusterHealthResponse>(){
    @Override public void onResponse(    ClusterHealthResponse response){
      try {
        RestStatus status=RestStatus.OK;
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        response.toXContent(builder,request);
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,status,builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
