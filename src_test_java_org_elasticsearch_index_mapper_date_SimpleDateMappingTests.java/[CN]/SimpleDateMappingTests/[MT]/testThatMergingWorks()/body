{
  String initialMapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","date").field("format","EEE MMM dd HH:mm:ss.S Z yyyy||EEE MMM dd HH:mm:ss.SSS Z yyyy").endObject().endObject().endObject().endObject().string();
  String updatedMapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","date").field("format","EEE MMM dd HH:mm:ss.S Z yyyy||EEE MMM dd HH:mm:ss.SSS Z yyyy||yyyy-MM-dd'T'HH:mm:ss.SSSZZ").endObject().endObject().endObject().endObject().string();
  DocumentMapper defaultMapper=mapper(initialMapping);
  DocumentMapper mergeMapper=mapper(updatedMapping);
  assertThat(defaultMapper.mappers().name("field").mapper(),is(instanceOf(DateFieldMapper.class)));
  DateFieldMapper initialDateFieldMapper=(DateFieldMapper)defaultMapper.mappers().name("field").mapper();
  Map<String,String> config=getConfigurationViaXContent(initialDateFieldMapper);
  assertThat(config.get("format"),is("EEE MMM dd HH:mm:ss.S Z yyyy||EEE MMM dd HH:mm:ss.SSS Z yyyy"));
  DocumentMapper.MergeResult mergeResult=defaultMapper.merge(mergeMapper,DocumentMapper.MergeFlags.mergeFlags().simulate(false));
  assertThat("Merging resulting in conflicts: " + Arrays.asList(mergeResult.conflicts()),mergeResult.hasConflicts(),is(false));
  assertThat(defaultMapper.mappers().name("field").mapper(),is(instanceOf(DateFieldMapper.class)));
  DateFieldMapper mergedFieldMapper=(DateFieldMapper)defaultMapper.mappers().name("field").mapper();
  Map<String,String> mergedConfig=getConfigurationViaXContent(mergedFieldMapper);
  assertThat(mergedConfig.get("format"),is("EEE MMM dd HH:mm:ss.S Z yyyy||EEE MMM dd HH:mm:ss.SSS Z yyyy||yyyy-MM-dd'T'HH:mm:ss.SSSZZ"));
}
