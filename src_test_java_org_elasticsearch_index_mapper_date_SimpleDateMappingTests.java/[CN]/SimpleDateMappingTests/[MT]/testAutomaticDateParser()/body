{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").endObject().endObject().endObject().string();
  DocumentMapper defaultMapper=mapper("type",mapping);
  ParsedDocument doc=defaultMapper.parse("type","1",XContentFactory.jsonBuilder().startObject().field("date_field1","2011/01/22").field("date_field2","2011/01/22 00:00:00").field("wrong_date1","-4").field("wrong_date2","2012/2").field("wrong_date3","2012/test").endObject().bytes());
  assertNotNull(doc.dynamicMappingsUpdate());
  client().admin().indices().preparePutMapping("test-0").setType("type").setSource(doc.dynamicMappingsUpdate().toString()).get();
  FieldMapper<?> fieldMapper=defaultMapper.mappers().smartNameFieldMapper("date_field1");
  assertThat(fieldMapper,instanceOf(DateFieldMapper.class));
  fieldMapper=defaultMapper.mappers().smartNameFieldMapper("date_field2");
  assertThat(fieldMapper,instanceOf(DateFieldMapper.class));
  fieldMapper=defaultMapper.mappers().smartNameFieldMapper("wrong_date1");
  assertThat(fieldMapper,instanceOf(StringFieldMapper.class));
  fieldMapper=defaultMapper.mappers().smartNameFieldMapper("wrong_date2");
  assertThat(fieldMapper,instanceOf(StringFieldMapper.class));
  fieldMapper=defaultMapper.mappers().smartNameFieldMapper("wrong_date3");
  assertThat(fieldMapper,instanceOf(StringFieldMapper.class));
}
