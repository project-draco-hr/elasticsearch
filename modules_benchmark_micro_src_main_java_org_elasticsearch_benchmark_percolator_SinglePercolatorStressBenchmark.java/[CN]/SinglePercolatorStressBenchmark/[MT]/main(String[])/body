{
  Settings settings=settingsBuilder().put("cluster.routing.schedule",200,TimeUnit.MILLISECONDS).put("gateway.type","none").put(SETTING_NUMBER_OF_SHARDS,2).put(SETTING_NUMBER_OF_REPLICAS,1).build();
  Node[] nodes=new Node[2];
  for (int i=0; i < nodes.length; i++) {
    nodes[i]=nodeBuilder().settings(settingsBuilder().put(settings).put("name","node" + i)).node();
  }
  Node client=nodeBuilder().settings(settingsBuilder().put(settings).put("name","client")).client(true).node();
  Client client1=client.client();
  client1.admin().indices().create(createIndexRequest("test")).actionGet();
  Thread.sleep(1000);
  int COUNT=200000;
  int QUERIES=10;
  for (int i=0; i < QUERIES; i++) {
    client1.prepareIndex("_percolator","test",Integer.toString(i)).setSource(jsonBuilder().startObject().field("query",termQuery("name","value")).endObject()).setRefresh(true).execute().actionGet();
  }
  StopWatch stopWatch=new StopWatch().start();
  System.out.println("Percolating [" + COUNT + "] ...");
  int i=1;
  for (; i <= COUNT; i++) {
    PercolateResponse percolate=client1.preparePercolate("test").setSource(source(Integer.toString(i),"value")).execute().actionGet();
    if (percolate.matches().size() != QUERIES) {
      System.err.println("No matching number of queries");
    }
    if ((i % 10000) == 0) {
      System.out.println("Percolated " + i + " took "+ stopWatch.stop().lastTaskTime());
      stopWatch.start();
    }
  }
  System.out.println("Percolation took " + stopWatch.totalTime() + ", TPS "+ (((double)COUNT) / stopWatch.totalTime().secondsFrac()));
  client.close();
  for (  Node node : nodes) {
    node.close();
  }
}
