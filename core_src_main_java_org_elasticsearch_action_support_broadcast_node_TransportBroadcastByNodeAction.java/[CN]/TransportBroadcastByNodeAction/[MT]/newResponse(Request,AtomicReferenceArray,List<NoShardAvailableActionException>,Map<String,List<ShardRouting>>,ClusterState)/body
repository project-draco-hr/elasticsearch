{
  int totalShards=0;
  int successfulShards=0;
  List<ShardOperationResult> broadcastByNodeResponses=new ArrayList<>();
  List<ShardOperationFailedException> exceptions=new ArrayList<>();
  for (int i=0; i < responses.length(); i++) {
    if (responses.get(i) instanceof FailedNodeException) {
      FailedNodeException exception=(FailedNodeException)responses.get(i);
      totalShards+=nodes.get(exception.nodeId()).size();
      for (      ShardRouting shard : nodes.get(exception.nodeId())) {
        exceptions.add(new DefaultShardOperationFailedException(shard.getIndexName(),shard.getId(),exception));
      }
    }
 else {
      NodeResponse response=(NodeResponse)responses.get(i);
      broadcastByNodeResponses.addAll(response.results);
      totalShards+=response.getTotalShards();
      successfulShards+=response.getSuccessfulShards();
      for (      BroadcastShardOperationFailedException throwable : response.getExceptions()) {
        if (!TransportActions.isShardNotAvailableException(throwable)) {
          exceptions.add(new DefaultShardOperationFailedException(throwable.getShardId().getIndexName(),throwable.getShardId().getId(),throwable));
        }
      }
    }
  }
  totalShards+=unavailableShardExceptions.size();
  int failedShards=exceptions.size();
  return newResponse(request,totalShards,successfulShards,failedShards,broadcastByNodeResponses,exceptions,clusterState);
}
