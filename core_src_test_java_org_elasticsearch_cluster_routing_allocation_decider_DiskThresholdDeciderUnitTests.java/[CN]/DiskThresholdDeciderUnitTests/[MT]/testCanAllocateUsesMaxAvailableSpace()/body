{
  ClusterSettingsService nss=new ClusterSettingsService(Settings.EMPTY,new ClusterSettings(ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));
  ClusterInfoService cis=EmptyClusterInfoService.INSTANCE;
  DiskThresholdDecider decider=new DiskThresholdDecider(Settings.EMPTY,nss,cis,null);
  ShardRouting test_0=ShardRouting.newUnassigned("test",0,null,true,new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED,"foo"));
  DiscoveryNode node_0=new DiscoveryNode("node_0",DummyTransportAddress.INSTANCE,Version.CURRENT);
  DiscoveryNode node_1=new DiscoveryNode("node_1",DummyTransportAddress.INSTANCE,Version.CURRENT);
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).build();
  RoutingTable routingTable=RoutingTable.builder().addAsNew(metaData.index("test")).build();
  ClusterState clusterState=ClusterState.builder(org.elasticsearch.cluster.ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).build();
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().put(node_0).put(node_1)).build();
  ImmutableOpenMap.Builder<String,DiskUsage> leastAvailableUsages=ImmutableOpenMap.builder();
  leastAvailableUsages.put("node_0",new DiskUsage("node_0","node_0","_na_",100,0));
  leastAvailableUsages.put("node_1",new DiskUsage("node_1","node_1","_na_",100,0));
  ImmutableOpenMap.Builder<String,DiskUsage> mostAvailableUsage=ImmutableOpenMap.builder();
  mostAvailableUsage.put("node_0",new DiskUsage("node_0","node_0","_na_",100,randomIntBetween(20,100)));
  mostAvailableUsage.put("node_1",new DiskUsage("node_1","node_1","_na_",100,randomIntBetween(0,10)));
  ImmutableOpenMap.Builder<String,Long> shardSizes=ImmutableOpenMap.builder();
  shardSizes.put("[test][0][p]",10L);
  final ClusterInfo clusterInfo=new ClusterInfo(leastAvailableUsages.build(),mostAvailableUsage.build(),shardSizes.build(),ImmutableOpenMap.of());
  RoutingAllocation allocation=new RoutingAllocation(new AllocationDeciders(Settings.EMPTY,new AllocationDecider[]{decider}),clusterState.getRoutingNodes(),clusterState.nodes(),clusterInfo,System.nanoTime());
  assertEquals(mostAvailableUsage.toString(),Decision.YES,decider.canAllocate(test_0,new RoutingNode("node_0",node_0),allocation));
  assertEquals(mostAvailableUsage.toString(),Decision.NO,decider.canAllocate(test_0,new RoutingNode("node_1",node_1),allocation));
}
