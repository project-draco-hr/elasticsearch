{
  ClusterSettings nss=new ClusterSettings(Settings.EMPTY,ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);
  DiskThresholdDecider decider=new DiskThresholdDecider(Settings.EMPTY,nss);
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).build();
  final Index index=metaData.index("test").getIndex();
  ShardRouting test_0=ShardRouting.newUnassigned(new ShardId(index,0),true,StoreRecoverySource.EMPTY_STORE_INSTANCE,new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED,"foo"));
  DiscoveryNode node_0=new DiscoveryNode("node_0",LocalTransportAddress.buildUnique(),Collections.emptyMap(),new HashSet<>(Arrays.asList(DiscoveryNode.Role.values())),Version.CURRENT);
  DiscoveryNode node_1=new DiscoveryNode("node_1",LocalTransportAddress.buildUnique(),Collections.emptyMap(),new HashSet<>(Arrays.asList(DiscoveryNode.Role.values())),Version.CURRENT);
  RoutingTable routingTable=RoutingTable.builder().addAsNew(metaData.index("test")).build();
  ClusterState clusterState=ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(routingTable).build();
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(node_0).add(node_1)).build();
  ImmutableOpenMap.Builder<String,DiskUsage> leastAvailableUsages=ImmutableOpenMap.builder();
  leastAvailableUsages.put("node_0",new DiskUsage("node_0","node_0","_na_",100,0));
  leastAvailableUsages.put("node_1",new DiskUsage("node_1","node_1","_na_",100,0));
  ImmutableOpenMap.Builder<String,DiskUsage> mostAvailableUsage=ImmutableOpenMap.builder();
  mostAvailableUsage.put("node_0",new DiskUsage("node_0","node_0","_na_",100,randomIntBetween(20,100)));
  mostAvailableUsage.put("node_1",new DiskUsage("node_1","node_1","_na_",100,randomIntBetween(0,10)));
  ImmutableOpenMap.Builder<String,Long> shardSizes=ImmutableOpenMap.builder();
  shardSizes.put("[test][0][p]",10L);
  final ClusterInfo clusterInfo=new ClusterInfo(leastAvailableUsages.build(),mostAvailableUsage.build(),shardSizes.build(),ImmutableOpenMap.of());
  RoutingAllocation allocation=new RoutingAllocation(new AllocationDeciders(Settings.EMPTY,Collections.singleton(decider)),clusterState.getRoutingNodes(),clusterState,clusterInfo,System.nanoTime(),false);
  assertEquals(mostAvailableUsage.toString(),Decision.YES,decider.canAllocate(test_0,new RoutingNode("node_0",node_0),allocation));
  assertEquals(mostAvailableUsage.toString(),Decision.NO,decider.canAllocate(test_0,new RoutingNode("node_1",node_1),allocation));
}
