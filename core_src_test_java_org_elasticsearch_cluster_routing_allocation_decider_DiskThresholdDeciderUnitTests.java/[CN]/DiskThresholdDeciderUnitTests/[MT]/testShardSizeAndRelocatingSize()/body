{
  ImmutableOpenMap.Builder<String,Long> shardSizes=ImmutableOpenMap.builder();
  shardSizes.put("[test][0][r]",10L);
  shardSizes.put("[test][1][r]",100L);
  shardSizes.put("[test][2][r]",1000L);
  shardSizes.put("[other][0][p]",10000L);
  ClusterInfo info=new DevNullClusterInfo(ImmutableOpenMap.of(),ImmutableOpenMap.of(),shardSizes.build());
  final Index index=new Index("test","_na_");
  ShardRouting test_0=ShardRouting.newUnassigned(index,0,null,false,new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED,"foo"));
  ShardRoutingHelper.initialize(test_0,"node1");
  ShardRoutingHelper.moveToStarted(test_0);
  ShardRoutingHelper.relocate(test_0,"node2");
  ShardRouting test_1=ShardRouting.newUnassigned(index,1,null,false,new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED,"foo"));
  ShardRoutingHelper.initialize(test_1,"node2");
  ShardRoutingHelper.moveToStarted(test_1);
  ShardRoutingHelper.relocate(test_1,"node1");
  ShardRouting test_2=ShardRouting.newUnassigned(index,2,null,false,new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED,"foo"));
  ShardRoutingHelper.initialize(test_2,"node1");
  ShardRoutingHelper.moveToStarted(test_2);
  assertEquals(1000L,DiskThresholdDecider.getShardSize(test_2,info));
  assertEquals(100L,DiskThresholdDecider.getShardSize(test_1,info));
  assertEquals(10L,DiskThresholdDecider.getShardSize(test_0,info));
  RoutingNode node=new RoutingNode("node1",new DiscoveryNode("node1",LocalTransportAddress.PROTO,Version.CURRENT),Arrays.asList(test_0,test_1.buildTargetRelocatingShard(),test_2));
  assertEquals(100L,DiskThresholdDecider.sizeOfRelocatingShards(node,info,false,"/dev/null"));
  assertEquals(90L,DiskThresholdDecider.sizeOfRelocatingShards(node,info,true,"/dev/null"));
  assertEquals(0L,DiskThresholdDecider.sizeOfRelocatingShards(node,info,true,"/dev/some/other/dev"));
  assertEquals(0L,DiskThresholdDecider.sizeOfRelocatingShards(node,info,true,"/dev/some/other/dev"));
  ShardRouting test_3=ShardRouting.newUnassigned(index,3,null,false,new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED,"foo"));
  ShardRoutingHelper.initialize(test_3,"node1");
  ShardRoutingHelper.moveToStarted(test_3);
  assertEquals(0L,DiskThresholdDecider.getShardSize(test_3,info));
  ShardRouting other_0=ShardRouting.newUnassigned(new Index("other","_NA_"),0,null,randomBoolean(),new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED,"foo"));
  ShardRoutingHelper.initialize(other_0,"node2");
  ShardRoutingHelper.moveToStarted(other_0);
  ShardRoutingHelper.relocate(other_0,"node1");
  node=new RoutingNode("node1",new DiscoveryNode("node1",LocalTransportAddress.PROTO,Version.CURRENT),Arrays.asList(test_0,test_1.buildTargetRelocatingShard(),test_2,other_0.buildTargetRelocatingShard()));
  if (other_0.primary()) {
    assertEquals(10100L,DiskThresholdDecider.sizeOfRelocatingShards(node,info,false,"/dev/null"));
    assertEquals(10090L,DiskThresholdDecider.sizeOfRelocatingShards(node,info,true,"/dev/null"));
  }
 else {
    assertEquals(100L,DiskThresholdDecider.sizeOfRelocatingShards(node,info,false,"/dev/null"));
    assertEquals(90L,DiskThresholdDecider.sizeOfRelocatingShards(node,info,true,"/dev/null"));
  }
}
