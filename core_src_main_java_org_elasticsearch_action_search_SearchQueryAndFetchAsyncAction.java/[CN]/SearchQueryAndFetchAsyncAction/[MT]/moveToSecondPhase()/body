{
  threadPool.executor(ThreadPool.Names.SEARCH).execute(new ActionRunnable<SearchResponse>(listener){
    @Override public void doRun() throws IOException {
      boolean useScroll=request.scroll() != null;
      sortedShardList=searchPhaseController.sortDocs(useScroll,firstResults);
      final InternalSearchResponse internalResponse=searchPhaseController.merge(sortedShardList,firstResults,firstResults);
      String scrollId=null;
      if (request.scroll() != null) {
        scrollId=TransportSearchHelper.buildScrollId(request.searchType(),firstResults);
      }
      listener.onResponse(new SearchResponse(internalResponse,scrollId,expectedSuccessfulOps,successfulOps.get(),buildTookInMillis(),buildShardFailures()));
    }
    @Override public void onFailure(    Throwable t){
      ReduceSearchPhaseException failure=new ReduceSearchPhaseException("merge","",t,buildShardFailures());
      if (logger.isDebugEnabled()) {
        logger.debug("failed to reduce search",failure);
      }
      super.onFailure(failure);
    }
  }
);
}
