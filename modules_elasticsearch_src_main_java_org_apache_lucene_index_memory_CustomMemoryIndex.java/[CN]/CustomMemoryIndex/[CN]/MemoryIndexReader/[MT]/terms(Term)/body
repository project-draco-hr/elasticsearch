{
  if (DEBUG)   System.err.println("MemoryIndexReader.terms: " + term);
  int i;
  int j;
  sortFields();
  if (sortedFields.length == 1 && sortedFields[0].getKey() == term.field()) {
    j=0;
  }
 else {
    j=Arrays.binarySearch(sortedFields,term.field(),termComparator);
  }
  if (j < 0) {
    j=-j - 1;
    i=0;
    if (j < sortedFields.length)     getInfo(j).sortTerms();
  }
 else {
    Info info=getInfo(j);
    info.sortTerms();
    i=Arrays.binarySearch(info.sortedTerms,term.text(),termComparator);
    if (i < 0) {
      i=-i - 1;
      if (i >= info.sortedTerms.length) {
        j++;
        i=0;
        if (j < sortedFields.length)         getInfo(j).sortTerms();
      }
    }
  }
  final int ix=i;
  final int jx=j;
  return new TermEnum(){
    private int i=ix;
    private int j=jx;
    @Override public boolean next(){
      if (DEBUG)       System.err.println("TermEnum.next");
      if (j >= sortedFields.length)       return false;
      Info info=getInfo(j);
      if (++i < info.sortedTerms.length)       return true;
      j++;
      i=0;
      if (j >= sortedFields.length)       return false;
      getInfo(j).sortTerms();
      return true;
    }
    @Override public Term term(){
      if (DEBUG)       System.err.println("TermEnum.term: " + i);
      if (j >= sortedFields.length)       return null;
      Info info=getInfo(j);
      if (i >= info.sortedTerms.length)       return null;
      return createTerm(info,j,info.sortedTerms[i].getKey());
    }
    @Override public int docFreq(){
      if (DEBUG)       System.err.println("TermEnum.docFreq");
      if (j >= sortedFields.length)       return 0;
      Info info=getInfo(j);
      if (i >= info.sortedTerms.length)       return 0;
      return numPositions(info.getPositions(i));
    }
    @Override public void close(){
      if (DEBUG)       System.err.println("TermEnum.close");
    }
    /** 
 * Returns a new Term object, minimizing String.intern() overheads. 
 */
    private Term createTerm(    Info info,    int pos,    String text){
      Term template=info.template;
      if (template == null) {
        String fieldName=sortedFields[pos].getKey();
        template=new Term(fieldName);
        info.template=template;
      }
      return template.createTerm(text);
    }
  }
;
}
