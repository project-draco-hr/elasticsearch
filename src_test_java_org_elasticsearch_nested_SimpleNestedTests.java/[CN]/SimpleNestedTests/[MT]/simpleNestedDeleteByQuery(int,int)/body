{
  client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards",1).put("index.referesh_interval",-1).build()).addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("nested1").field("type","nested").endObject().endObject().endObject().endObject()).execute().actionGet();
  ensureGreen();
  for (int i=0; i < total; i++) {
    client().prepareIndex("test","type1",Integer.toString(i)).setSource(jsonBuilder().startObject().field("field1","value1").startArray("nested1").startObject().field("n_field1","n_value1_1").field("n_field2","n_value2_1").endObject().startObject().field("n_field1","n_value1_2").field("n_field2","n_value2_2").endObject().endArray().endObject()).execute().actionGet();
  }
  flush();
  IndicesStatusResponse statusResponse=client().admin().indices().prepareStatus().execute().actionGet();
  assertThat(statusResponse.getIndex("test").getDocs().getNumDocs(),equalTo(total * 3l));
  client().prepareDeleteByQuery("test").setQuery(QueryBuilders.idsQuery("type1").ids(Integer.toString(docToDelete))).execute().actionGet();
  flush();
  refresh();
  statusResponse=client().admin().indices().prepareStatus().execute().actionGet();
  assertThat(statusResponse.getIndex("test").getDocs().getNumDocs(),equalTo((total * 3l) - 3));
  for (int i=0; i < total; i++) {
    assertThat(client().prepareGet("test","type1",Integer.toString(i)).execute().actionGet().isExists(),equalTo(i != docToDelete));
  }
}
