{
  client().admin().indices().prepareCreate("test").addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("nested1").field("type","nested").startObject("properties").startObject("nested2").field("type","nested").endObject().endObject().endObject().endObject().endObject().endObject()).execute().actionGet();
  ensureGreen();
  client().prepareIndex("test","type1","1").setSource(jsonBuilder().startObject().field("field","value").startArray("nested1").startObject().field("field1","1").startArray("nested2").startObject().field("field2","2").endObject().startObject().field("field2","3").endObject().endArray().endObject().startObject().field("field1","4").startArray("nested2").startObject().field("field2","5").endObject().startObject().field("field2","6").endObject().endArray().endObject().endArray().endObject()).execute().actionGet();
  flush();
  GetResponse getResponse=client().prepareGet("test","type1","1").execute().actionGet();
  assertThat(getResponse.isExists(),equalTo(true));
  waitForRelocation(ClusterHealthStatus.GREEN);
  IndicesStatusResponse statusResponse=client().admin().indices().prepareStatus().execute().actionGet();
  assertThat(statusResponse.getIndex("test").getDocs().getNumDocs(),equalTo(7l));
  SearchResponse searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",termQuery("nested1.field1","1"))).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1.nested2",termQuery("nested1.nested2.field2","2"))).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",boolQuery().must(termQuery("nested1.field1","1")).must(nestedQuery("nested1.nested2",termQuery("nested1.nested2.field2","2"))))).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",boolQuery().must(termQuery("nested1.field1","1")).must(nestedQuery("nested1.nested2",termQuery("nested1.nested2.field2","3"))))).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",boolQuery().must(termQuery("nested1.field1","1")).must(nestedQuery("nested1.nested2",termQuery("nested1.nested2.field2","4"))))).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(0l));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",boolQuery().must(termQuery("nested1.field1","1")).must(nestedQuery("nested1.nested2",termQuery("nested1.nested2.field2","5"))))).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(0l));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",boolQuery().must(termQuery("nested1.field1","4")).must(nestedQuery("nested1.nested2",termQuery("nested1.nested2.field2","5"))))).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",boolQuery().must(termQuery("nested1.field1","4")).must(nestedQuery("nested1.nested2",termQuery("nested1.nested2.field2","2"))))).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(0l));
}
