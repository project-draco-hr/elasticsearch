{
  super.readFrom(in);
  timestamp=in.readVLong();
  if (in.readBoolean()) {
    indices=NodeIndicesStats.readIndicesStats(in);
  }
  if (in.readBoolean()) {
    os=OsStats.readOsStats(in);
  }
  if (in.readBoolean()) {
    process=ProcessStats.readProcessStats(in);
  }
  if (in.readBoolean()) {
    jvm=JvmStats.readJvmStats(in);
  }
  if (in.readBoolean()) {
    threadPool=ThreadPoolStats.readThreadPoolStats(in);
  }
  if (in.readBoolean()) {
    network=NetworkStats.readNetworkStats(in);
  }
  if (in.readBoolean()) {
    fs=FsStats.readFsStats(in);
  }
  if (in.readBoolean()) {
    transport=TransportStats.readTransportStats(in);
  }
  if (in.readBoolean()) {
    http=HttpStats.readHttpStats(in);
  }
  if (in.getVersion().onOrAfter(Version.V_1_4_0)) {
    breaker=AllCircuitBreakerStats.readOptionalAllCircuitBreakerStats(in);
  }
 else {
    CircuitBreakerStats fdStats=CircuitBreakerStats.readOptionalCircuitBreakerStats(in);
    CircuitBreakerStats reqStats=new CircuitBreakerStats(CircuitBreaker.Name.REQUEST,0,0,1.0,-1);
    CircuitBreakerStats parentStats=new CircuitBreakerStats(CircuitBreaker.Name.PARENT,0,0,1.0,-1);
    breaker=new AllCircuitBreakerStats(new CircuitBreakerStats[]{parentStats,fdStats,reqStats});
  }
}
