{
  assertAcked(client().admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put(MockFSDirectoryService.CHECK_INDEX_ON_CLOSE,true).build()));
  ensureGreen("test");
  final int numIters=scaledRandomIntBetween(10,30);
  for (int i=0; i < numIters; i++) {
    for (int j=0; j < 10; j++) {
      client().prepareIndex("test","test").setSource("{}").get();
    }
    final CountDownLatch latch=new CountDownLatch(10);
    final CopyOnWriteArrayList<Throwable> errors=new CopyOnWriteArrayList<>();
    for (int j=0; j < 10; j++) {
      client().admin().indices().prepareFlush("test").setWaitIfOngoing(true).execute(new ActionListener<FlushResponse>(){
        @Override public void onResponse(        FlushResponse flushResponse){
          try {
            assertThat("Unexpected ShardFailures: " + Arrays.toString(flushResponse.getShardFailures()),flushResponse.getFailedShards(),equalTo(0));
            latch.countDown();
          }
 catch (          Throwable ex) {
            onFailure(ex);
          }
        }
        @Override public void onFailure(        Throwable e){
          errors.add(e);
          latch.countDown();
        }
      }
);
    }
    latch.await();
    assertThat(errors,emptyIterable());
  }
}
