{
  internalCluster().ensureAtLeastNumDataNodes(2);
  prepareCreate("test").setSettings(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).get();
  ensureGreen();
  IndexStats indexStats=client().admin().indices().prepareStats("test").get().getIndex("test");
  for (  ShardStats shardStats : indexStats.getShards()) {
    assertNull(shardStats.getCommitStats().getUserData().get(Engine.SYNC_COMMIT_ID));
  }
  ClusterStateResponse state=client().admin().cluster().prepareState().get();
  String nodeId=state.getState().getRoutingTable().index("test").shard(0).getShards().get(0).currentNodeId();
  SyncedFlushResponse syncedFlushResponse=internalCluster().getInstance(SyncedFlushService.class).attemptSyncedFlush(new ShardId("test",0));
  assertTrue(syncedFlushResponse.success());
  indexStats=client().admin().indices().prepareStats("test").get().getIndex("test");
  assertThat(indexStats.getShards().length,equalTo(client().admin().indices().prepareGetIndex().get().getSettings().get("test").getAsInt(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,-1) + 1));
  for (  ShardStats shardStats : indexStats.getShards()) {
    assertThat(shardStats.getCommitStats().getUserData().get(Engine.SYNC_COMMIT_ID),equalTo(syncedFlushResponse.getSyncId()));
  }
}
