{
  if (positionIncrementGap != POSITION_INCREMENT_GAP_USE_ANALYZER) {
    if (fieldType.tokenized() == false && fieldType.indexOptions() != IndexOptions.NONE) {
      throw new IllegalArgumentException("Cannot set position_increment_gap on not_analyzed field [" + fieldType.name() + "]");
    }
    fieldType.setIndexAnalyzer(new NamedAnalyzer(fieldType.indexAnalyzer(),positionIncrementGap));
    fieldType.setSearchAnalyzer(new NamedAnalyzer(fieldType.searchAnalyzer(),positionIncrementGap));
    fieldType.setSearchQuoteAnalyzer(new NamedAnalyzer(fieldType.searchQuoteAnalyzer(),positionIncrementGap));
  }
  if (fieldType.indexOptions() != IndexOptions.NONE && !fieldType.tokenized()) {
    defaultFieldType.setOmitNorms(true);
    defaultFieldType.setIndexOptions(IndexOptions.DOCS);
    if (!omitNormsSet && fieldType.boost() == 1.0f) {
      fieldType.setOmitNorms(true);
    }
    if (!indexOptionsSet) {
      fieldType.setIndexOptions(IndexOptions.DOCS);
    }
  }
  setupFieldType(context);
  StringFieldMapper fieldMapper=new StringFieldMapper(name,fieldType(),defaultFieldType,positionIncrementGap,ignoreAbove,context.indexSettings(),multiFieldsBuilder.build(this,context),copyTo);
  return fieldMapper.includeInAll(includeInAll);
}
