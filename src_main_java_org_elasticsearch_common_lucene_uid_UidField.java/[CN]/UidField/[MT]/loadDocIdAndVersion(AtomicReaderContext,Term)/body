{
  int docId=Lucene.NO_DOC;
  try {
    DocsAndPositionsEnum uid=context.reader().termPositionsEnum(term);
    if (uid == null || uid.nextDoc() == DocIdSetIterator.NO_MORE_DOCS) {
      return null;
    }
    do {
      docId=uid.docID();
      uid.nextPosition();
      if (uid.getPayload() == null) {
        continue;
      }
      if (uid.getPayload().length < 8) {
        continue;
      }
      byte[] payload=new byte[uid.getPayload().length];
      System.arraycopy(uid.getPayload().bytes,uid.getPayload().offset,payload,0,uid.getPayload().length);
      return new DocIdAndVersion(docId,Numbers.bytesToLong(payload),context);
    }
 while (uid.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);
    return new DocIdAndVersion(docId,-2,context);
  }
 catch (  Exception e) {
    return new DocIdAndVersion(docId,-2,context);
  }
}
