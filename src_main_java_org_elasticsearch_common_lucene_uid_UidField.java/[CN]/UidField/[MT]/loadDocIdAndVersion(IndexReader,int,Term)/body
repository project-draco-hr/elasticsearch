{
  int docId=Lucene.NO_DOC;
  TermPositions uid=null;
  try {
    uid=subReader.termPositions(term);
    if (!uid.next()) {
      return null;
    }
    do {
      docId=uid.doc();
      uid.nextPosition();
      if (!uid.isPayloadAvailable()) {
        continue;
      }
      if (uid.getPayloadLength() < 8) {
        continue;
      }
      byte[] payload=uid.getPayload(new byte[8],0);
      return new DocIdAndVersion(docId,Numbers.bytesToLong(payload),subReader,docStart);
    }
 while (uid.next());
    return new DocIdAndVersion(docId,-2,subReader,docStart);
  }
 catch (  Exception e) {
    return new DocIdAndVersion(docId,-2,subReader,docStart);
  }
 finally {
    if (uid != null) {
      try {
        uid.close();
      }
 catch (      IOException e) {
      }
    }
  }
}
