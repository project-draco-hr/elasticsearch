{
  BytesReference content=XContentFactory.jsonBuilder().startObject().field("text","THIS IS A TEST").field("tokenizer","keyword").array("filters","lowercase").endObject().bytes();
  AnalyzeRequest analyzeRequest=new AnalyzeRequest("for test");
  try {
    RestAnalyzeAction.buildFromContent(content,analyzeRequest,new ParseFieldMatcher(Settings.EMPTY));
  }
 catch (  Exception e) {
    assertThat(e,instanceOf(IllegalArgumentException.class));
    assertThat(e.getMessage(),startsWith("Unknown parameter [filters]"));
  }
  content=XContentFactory.jsonBuilder().startObject().field("text","THIS IS A TEST").field("tokenizer","keyword").array("token_filters","lowercase").endObject().bytes();
  analyzeRequest=new AnalyzeRequest("for test");
  try {
    RestAnalyzeAction.buildFromContent(content,analyzeRequest,new ParseFieldMatcher(Settings.EMPTY));
  }
 catch (  Exception e) {
    assertThat(e,instanceOf(IllegalArgumentException.class));
    assertThat(e.getMessage(),startsWith("Unknown parameter [token_filters]"));
  }
  content=XContentFactory.jsonBuilder().startObject().field("text","THIS IS A TEST").field("tokenizer","keyword").array("char_filters","lowercase").endObject().bytes();
  analyzeRequest=new AnalyzeRequest("for test");
  try {
    RestAnalyzeAction.buildFromContent(content,analyzeRequest,new ParseFieldMatcher(Settings.EMPTY));
  }
 catch (  Exception e) {
    assertThat(e,instanceOf(IllegalArgumentException.class));
    assertThat(e.getMessage(),startsWith("Unknown parameter [char_filters]"));
  }
}
