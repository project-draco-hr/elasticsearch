{
  createIndex("test1","test2");
  ensureGreen();
  client().prepareIndex("test1","type1",Integer.toString(1)).setSource("field","value").execute().actionGet();
  client().prepareIndex("test1","type2",Integer.toString(1)).setSource("field","value").execute().actionGet();
  client().prepareIndex("test2","type",Integer.toString(1)).setSource("field","value").execute().actionGet();
  refresh();
  NumShards test1=getNumShards("test1");
  long test1ExpectedWrites=2 * test1.dataCopies;
  NumShards test2=getNumShards("test2");
  long test2ExpectedWrites=test2.dataCopies;
  long totalExpectedWrites=test1ExpectedWrites + test2ExpectedWrites;
  IndicesStatsResponse stats=client().admin().indices().prepareStats().execute().actionGet();
  assertThat(stats.getPrimaries().getDocs().getCount(),equalTo(3l));
  assertThat(stats.getTotal().getDocs().getCount(),equalTo(totalExpectedWrites));
  assertThat(stats.getPrimaries().getIndexing().getTotal().getIndexCount(),equalTo(3l));
  assertThat(stats.getPrimaries().getIndexing().getTotal().isThrottled(),equalTo(false));
  assertThat(stats.getPrimaries().getIndexing().getTotal().getThrottleTimeInMillis(),equalTo(0l));
  assertThat(stats.getTotal().getIndexing().getTotal().getIndexCount(),equalTo(totalExpectedWrites));
  assertThat(stats.getTotal().getStore(),notNullValue());
  assertThat(stats.getTotal().getMerge(),notNullValue());
  assertThat(stats.getTotal().getFlush(),notNullValue());
  assertThat(stats.getTotal().getRefresh(),notNullValue());
  assertThat(stats.getIndex("test1").getPrimaries().getDocs().getCount(),equalTo(2l));
  assertThat(stats.getIndex("test1").getTotal().getDocs().getCount(),equalTo(test1ExpectedWrites));
  assertThat(stats.getIndex("test1").getPrimaries().getStore(),notNullValue());
  assertThat(stats.getIndex("test1").getPrimaries().getMerge(),notNullValue());
  assertThat(stats.getIndex("test1").getPrimaries().getFlush(),notNullValue());
  assertThat(stats.getIndex("test1").getPrimaries().getRefresh(),notNullValue());
  assertThat(stats.getIndex("test2").getPrimaries().getDocs().getCount(),equalTo(1l));
  assertThat(stats.getIndex("test2").getTotal().getDocs().getCount(),equalTo(test2ExpectedWrites));
  assertThat(stats.getIndex("test1").getTotal().getIndexing().getTotal().getIndexCurrent(),equalTo(0l));
  assertThat(stats.getIndex("test1").getTotal().getIndexing().getTotal().getDeleteCurrent(),equalTo(0l));
  assertThat(stats.getIndex("test1").getTotal().getSearch().getTotal().getFetchCurrent(),equalTo(0l));
  assertThat(stats.getIndex("test1").getTotal().getSearch().getTotal().getQueryCurrent(),equalTo(0l));
  stats=client().admin().indices().prepareStats().clear().setFlush(true).setRefresh(true).setMerge(true).execute().actionGet();
  assertThat(stats.getTotal().getDocs(),nullValue());
  assertThat(stats.getTotal().getStore(),nullValue());
  assertThat(stats.getTotal().getIndexing(),nullValue());
  assertThat(stats.getTotal().getMerge(),notNullValue());
  assertThat(stats.getTotal().getFlush(),notNullValue());
  assertThat(stats.getTotal().getRefresh(),notNullValue());
  stats=client().admin().indices().prepareStats().setTypes("type1","type").execute().actionGet();
  assertThat(stats.getPrimaries().getIndexing().getTypeStats().get("type1").getIndexCount(),equalTo(1l));
  assertThat(stats.getPrimaries().getIndexing().getTypeStats().get("type").getIndexCount(),equalTo(1l));
  assertThat(stats.getPrimaries().getIndexing().getTypeStats().get("type2"),nullValue());
  assertThat(stats.getPrimaries().getIndexing().getTypeStats().get("type1").getIndexCurrent(),equalTo(0l));
  assertThat(stats.getPrimaries().getIndexing().getTypeStats().get("type1").getDeleteCurrent(),equalTo(0l));
  assertThat(stats.getTotal().getGet().getCount(),equalTo(0l));
  GetResponse getResponse=client().prepareGet("test1","type1","1").execute().actionGet();
  assertThat(getResponse.isExists(),equalTo(true));
  stats=client().admin().indices().prepareStats().execute().actionGet();
  assertThat(stats.getTotal().getGet().getCount(),equalTo(1l));
  assertThat(stats.getTotal().getGet().getExistsCount(),equalTo(1l));
  assertThat(stats.getTotal().getGet().getMissingCount(),equalTo(0l));
  getResponse=client().prepareGet("test1","type1","2").execute().actionGet();
  assertThat(getResponse.isExists(),equalTo(false));
  stats=client().admin().indices().prepareStats().execute().actionGet();
  assertThat(stats.getTotal().getGet().getCount(),equalTo(2l));
  assertThat(stats.getTotal().getGet().getExistsCount(),equalTo(1l));
  assertThat(stats.getTotal().getGet().getMissingCount(),equalTo(1l));
  stats=client().admin().indices().prepareStats().setDocs(false).setStore(false).setIndexing(false).setFlush(true).setRefresh(true).setMerge(true).clear().execute().actionGet();
  assertThat(stats.getTotal().getDocs(),nullValue());
  assertThat(stats.getTotal().getStore(),nullValue());
  assertThat(stats.getTotal().getIndexing(),nullValue());
  assertThat(stats.getTotal().getGet(),nullValue());
  assertThat(stats.getTotal().getSearch(),nullValue());
}
