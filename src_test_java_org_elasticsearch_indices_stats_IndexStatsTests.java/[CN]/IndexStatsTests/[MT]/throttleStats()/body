{
  String luceneIWLevel=Loggers.getLogger("lucene.iw").getLevel();
  Loggers.getLogger("lucene.iw").setLevel("TRACE");
  String msLevel=Loggers.getLogger("index.merge.scheduler").getLevel();
  Loggers.getLogger("index.merge.scheduler").setLevel("TRACE");
  String indexShardLevel=Loggers.getLogger("index.shard.service").getLevel();
  Loggers.getLogger("index.shard.service").setLevel("TRACE");
  String engineLevel=Loggers.getLogger("test.engine").getLevel();
  Loggers.getLogger("test.engine").setLevel("TRACE");
  try {
    assertAcked(prepareCreate("test").setSettings(ImmutableSettings.builder().put(AbstractIndexStore.INDEX_STORE_THROTTLE_TYPE,"merge").put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,"1").put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,"0").put(TieredMergePolicyProvider.INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE,"2").put(TieredMergePolicyProvider.INDEX_MERGE_POLICY_SEGMENTS_PER_TIER,"2").put(ConcurrentMergeSchedulerProvider.MAX_THREAD_COUNT,"1").put(ConcurrentMergeSchedulerProvider.MAX_MERGE_COUNT,"1").put("index.merge.policy.type","tiered")));
    ensureGreen();
    long termUpto=0;
    IndicesStatsResponse stats;
    boolean done=false;
    long start=System.currentTimeMillis();
    while (!done) {
      for (int i=0; i < 100; i++) {
        StringBuilder sb=new StringBuilder();
        for (int j=0; j < 100; j++) {
          sb.append(' ');
          sb.append(termUpto++);
        }
        client().prepareIndex("test","type","" + termUpto).setSource("field" + (i % 10),sb.toString()).get();
        if (i % 2 == 0) {
          refresh();
        }
      }
      refresh();
      stats=client().admin().indices().prepareStats().execute().actionGet();
      done=stats.getPrimaries().getIndexing().getTotal().getThrottleTimeInMillis() > 0;
      if (System.currentTimeMillis() - start > 300 * 1000) {
        fail("index throttling didn't kick in after 5 minutes of intense merging");
      }
    }
  }
  finally {
    Loggers.getLogger("lucene.iw").setLevel(luceneIWLevel);
    Loggers.getLogger("index.merge.scheduler").setLevel(msLevel);
    Loggers.getLogger("index.shard.service").setLevel(indexShardLevel);
    Loggers.getLogger("test.engine").setLevel(engineLevel);
  }
}
