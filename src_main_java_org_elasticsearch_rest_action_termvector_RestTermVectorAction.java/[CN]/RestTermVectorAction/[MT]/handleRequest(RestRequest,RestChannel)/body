{
  TermVectorRequest termVectorRequest=new TermVectorRequest(request.param("index"),request.param("type"),request.param("id"));
  XContentParser parser=null;
  if (request.hasContent()) {
    try {
      parser=XContentFactory.xContent(request.content()).createParser(request.content());
      TermVectorRequest.parseRequest(termVectorRequest,parser);
    }
 catch (    IOException e) {
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        channel.sendResponse(new XContentRestResponse(request,BAD_REQUEST,builder.startObject().field("error",e.getMessage()).endObject()));
      }
 catch (      IOException e1) {
        logger.warn("Failed to send response",e1);
        return;
      }
    }
 finally {
      if (parser != null) {
        parser.close();
      }
    }
  }
  readURIParameters(termVectorRequest,request);
  client.termVector(termVectorRequest,new ActionListener<TermVectorResponse>(){
    @Override public void onResponse(    TermVectorResponse response){
      try {
        XContentBuilder builder=restContentBuilder(request);
        response.toXContent(builder,request);
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
