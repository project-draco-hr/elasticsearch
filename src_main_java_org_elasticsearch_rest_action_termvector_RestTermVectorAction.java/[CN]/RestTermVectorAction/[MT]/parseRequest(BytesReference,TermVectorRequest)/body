{
  XContentParser parser=XContentFactory.xContent(cont).createParser(cont);
  try {
    XContentParser.Token token;
    String currentFieldName=null;
    List<String> fields=new ArrayList<String>();
    while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
      if (token == XContentParser.Token.FIELD_NAME) {
        currentFieldName=parser.currentName();
      }
 else       if (currentFieldName != null) {
        if (currentFieldName.equals("fields")) {
          if (token == XContentParser.Token.START_ARRAY) {
            while (parser.nextToken() != XContentParser.Token.END_ARRAY) {
              fields.add(parser.text());
            }
          }
 else {
            throw new ElasticSearchParseException("The parameter fields must be given as an array! Use syntax : \"fields\" : [\"field1\", \"field2\",...]");
          }
        }
 else         if (currentFieldName.equals("offsets")) {
          termVectorRequest.offsets(parser.booleanValue());
        }
 else         if (currentFieldName.equals("positions")) {
          termVectorRequest.positions(parser.booleanValue());
        }
 else         if (currentFieldName.equals("payloads")) {
          termVectorRequest.payloads(parser.booleanValue());
        }
 else         if (currentFieldName.equals("term_statistics") || currentFieldName.equals("termStatistics")) {
          termVectorRequest.termStatistics(parser.booleanValue());
        }
 else         if (currentFieldName.equals("field_statistics") || currentFieldName.equals("fieldStatistics")) {
          termVectorRequest.fieldStatistics(parser.booleanValue());
        }
 else {
          throw new ElasticSearchParseException("The parameter " + currentFieldName + " is not valid for term vector request!");
        }
      }
    }
    String[] fieldsAsArray=new String[fields.size()];
    termVectorRequest.selectedFields(fields.toArray(fieldsAsArray));
  }
  finally {
    parser.close();
  }
}
