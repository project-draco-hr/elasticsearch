{
  String masterNode=startMasterNode();
  String blueNode=startDataNode("blue");
  String redNode=startDataNode("red");
  assertAcked(prepareCreate("blue_index").setSettings(ImmutableSettings.builder().put("index.number_of_replicas",0).put(FilterAllocationDecider.INDEX_ROUTING_INCLUDE_GROUP + "color","blue")));
  index("blue_index","doc","1",jsonBuilder().startObject().field("text","some text").endObject());
  assertAcked(prepareCreate("red_index").setSettings(ImmutableSettings.builder().put("index.number_of_replicas",0).put(FilterAllocationDecider.INDEX_ROUTING_INCLUDE_GROUP + "color","red")));
  index("red_index","doc","1",jsonBuilder().startObject().field("text","some text").endObject());
  ensureGreen();
  waitForConcreteMappingsOnAll("blue_index","doc","text");
  waitForConcreteMappingsOnAll("red_index","doc","text");
  assertIndexNotInMetaState(blueNode,"red_index");
  assertIndexNotInMetaState(redNode,"blue_index");
  assertIndexInMetaState(blueNode,"blue_index");
  assertIndexInMetaState(redNode,"red_index");
  assertIndexInMetaState(masterNode,"red_index");
  assertIndexInMetaState(masterNode,"blue_index");
  stopNode(redNode);
  ((InternalTestCluster)cluster()).stopCurrentMasterNode();
  masterNode=startMasterNode();
  redNode=startDataNode("red");
  ensureGreen();
  assertIndexNotInMetaState(blueNode,"red_index");
  assertIndexInMetaState(blueNode,"blue_index");
  assertIndexNotInMetaState(redNode,"red_index");
  assertIndexNotInMetaState(redNode,"blue_index");
  assertIndexNotInMetaState(masterNode,"red_index");
  assertIndexInMetaState(masterNode,"blue_index");
  assertFalse(client().admin().indices().prepareExists("red_index").get().isExists());
  assertTrue(client().prepareGet("blue_index","doc","1").get().isExists());
  assertFalse(client().admin().indices().prepareExists("red_index").get().isExists());
}
