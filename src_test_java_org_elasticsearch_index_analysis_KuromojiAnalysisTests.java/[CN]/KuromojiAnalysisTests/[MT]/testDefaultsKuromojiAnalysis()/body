{
  Index index=new Index("test");
  Injector parentInjector=new ModulesBuilder().add(new SettingsModule(EMPTY_SETTINGS),new EnvironmentModule(new Environment(EMPTY_SETTINGS)),new IndicesAnalysisModule()).createInjector();
  AnalysisModule analysisModule=new AnalysisModule(EMPTY_SETTINGS,parentInjector.getInstance(IndicesAnalysisService.class));
  new AnalysisKuromojiPlugin().onModule(analysisModule);
  Injector injector=new ModulesBuilder().add(new IndexSettingsModule(index,EMPTY_SETTINGS),new IndexNameModule(index),analysisModule).createChildInjector(parentInjector);
  AnalysisService analysisService=injector.getInstance(AnalysisService.class);
  TokenizerFactory tokenizerFactory=analysisService.tokenizer("kuromoji_tokenizer");
  MatcherAssert.assertThat(tokenizerFactory,instanceOf(KuromojiTokenizerFactory.class));
  TokenFilterFactory filterFactory=analysisService.tokenFilter("kuromoji_part_of_speech");
  MatcherAssert.assertThat(filterFactory,instanceOf(KuromojiPartOfSpeechFilterFactory.class));
  filterFactory=analysisService.tokenFilter("kuromoji_readingform");
  MatcherAssert.assertThat(filterFactory,instanceOf(KuromojiReadingFormFilterFactory.class));
  filterFactory=analysisService.tokenFilter("kuromoji_baseform");
  MatcherAssert.assertThat(filterFactory,instanceOf(KuromojiBaseFormFilterFactory.class));
  filterFactory=analysisService.tokenFilter("kuromoji_stemmer");
  MatcherAssert.assertThat(filterFactory,instanceOf(KuromojiKatakanaStemmerFactory.class));
  NamedAnalyzer analyzer=analysisService.analyzer("kuromoji");
  MatcherAssert.assertThat(analyzer.analyzer(),instanceOf(JapaneseAnalyzer.class));
}
