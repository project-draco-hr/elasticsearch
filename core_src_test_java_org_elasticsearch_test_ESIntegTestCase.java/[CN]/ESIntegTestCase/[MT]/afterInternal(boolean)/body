{
  boolean success=false;
  try {
    final Scope currentClusterScope=getCurrentClusterScope();
    printTestMessage("cleaning up after");
    clearDisruptionScheme();
    try {
      if (cluster() != null) {
        if (currentClusterScope != Scope.TEST) {
          MetaData metaData=client().admin().cluster().prepareState().execute().actionGet().getState().getMetaData();
          assertThat("test leaves persistent cluster metadata behind: " + metaData.persistentSettings().getAsMap(),metaData.persistentSettings().getAsMap().size(),equalTo(0));
          assertThat("test leaves transient cluster metadata behind: " + metaData.transientSettings().getAsMap(),metaData.transientSettings().getAsMap().size(),equalTo(0));
        }
        ensureClusterSizeConsistency();
        ensureClusterStateConsistency();
        if (isInternalCluster()) {
          for (          Discovery discovery : internalCluster().getInstances(Discovery.class)) {
            if (discovery instanceof ZenDiscovery) {
              final ZenDiscovery zenDiscovery=(ZenDiscovery)discovery;
              assertBusy(new Runnable(){
                @Override public void run(){
                  assertThat(zenDiscovery.pendingClusterStates(),emptyArray());
                }
              }
);
            }
          }
        }
        beforeIndexDeletion();
        cluster().wipe();
        if (afterClass || currentClusterScope == Scope.TEST) {
          cluster().close();
        }
        cluster().assertAfterTest();
      }
    }
  finally {
      if (currentClusterScope == Scope.TEST) {
        clearClusters();
      }
    }
    printTestMessage("cleaned up after");
    success=true;
  }
  finally {
    if (!success) {
    }
  }
}
