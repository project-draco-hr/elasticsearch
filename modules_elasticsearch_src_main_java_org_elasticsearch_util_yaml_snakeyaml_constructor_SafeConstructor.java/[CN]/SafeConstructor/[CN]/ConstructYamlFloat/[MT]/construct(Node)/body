{
  String value=constructScalar((ScalarNode)node).toString().replaceAll("_","");
  int sign=+1;
  char first=value.charAt(0);
  if (first == '-') {
    sign=-1;
    value=value.substring(1);
  }
 else   if (first == '+') {
    value=value.substring(1);
  }
  String valLower=value.toLowerCase();
  if (".inf".equals(valLower)) {
    return new Double(sign == -1 ? Double.NEGATIVE_INFINITY : Double.POSITIVE_INFINITY);
  }
 else   if (".nan".equals(valLower)) {
    return new Double(Double.NaN);
  }
 else   if (value.indexOf(':') != -1) {
    String[] digits=value.split(":");
    int bes=1;
    double val=0.0;
    for (int i=0, j=digits.length; i < j; i++) {
      val+=(Double.parseDouble(digits[(j - i) - 1]) * bes);
      bes*=60;
    }
    return new Double(sign * val);
  }
 else {
    Double d=Double.valueOf(value);
    return new Double(d.doubleValue() * sign);
  }
}
