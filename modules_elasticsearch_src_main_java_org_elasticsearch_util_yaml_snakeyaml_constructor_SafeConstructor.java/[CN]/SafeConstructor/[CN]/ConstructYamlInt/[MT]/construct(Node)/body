{
  String value=constructScalar((ScalarNode)node).toString().replaceAll("_","");
  int sign=+1;
  char first=value.charAt(0);
  if (first == '-') {
    sign=-1;
    value=value.substring(1);
  }
 else   if (first == '+') {
    value=value.substring(1);
  }
  int base=10;
  if ("0".equals(value)) {
    return new Integer(0);
  }
 else   if (value.startsWith("0b")) {
    value=value.substring(2);
    base=2;
  }
 else   if (value.startsWith("0x")) {
    value=value.substring(2);
    base=16;
  }
 else   if (value.startsWith("0")) {
    value=value.substring(1);
    base=8;
  }
 else   if (value.indexOf(':') != -1) {
    String[] digits=value.split(":");
    int bes=1;
    int val=0;
    for (int i=0, j=digits.length; i < j; i++) {
      val+=(Long.parseLong(digits[(j - i) - 1]) * bes);
      bes*=60;
    }
    return createNumber(sign,String.valueOf(val),10);
  }
 else {
    return createNumber(sign,value,10);
  }
  return createNumber(sign,value,base);
}
