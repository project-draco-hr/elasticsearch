{
  final String indexName="test";
  final ShardId shardId=new ShardId(indexName,"_na_",0);
  int numReplicas=randomIntBetween(0,5);
  int idxSettingWaitForActiveShards=randomIntBetween(0,numReplicas + 1);
  ClusterState state=changeWaitForActiveShardsSetting(indexName,stateWithActivePrimary(indexName,randomBoolean(),numReplicas),idxSettingWaitForActiveShards);
  setState(clusterService,state);
  Request request=new Request(shardId).waitForActiveShards(ActiveShardCount.DEFAULT);
  action.resolveRequest(state.metaData(),state.metaData().index(indexName),request);
  assertEquals(ActiveShardCount.from(idxSettingWaitForActiveShards),request.waitForActiveShards());
  int requestWaitForActiveShards=randomIntBetween(0,numReplicas + 1);
  request=new Request(shardId).waitForActiveShards(ActiveShardCount.from(requestWaitForActiveShards));
  action.resolveRequest(state.metaData(),state.metaData().index(indexName),request);
  assertEquals(ActiveShardCount.from(requestWaitForActiveShards),request.waitForActiveShards());
}
