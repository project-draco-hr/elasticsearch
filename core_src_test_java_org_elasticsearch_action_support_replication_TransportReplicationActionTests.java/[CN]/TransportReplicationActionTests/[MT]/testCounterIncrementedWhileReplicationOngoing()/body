{
  final String index="test";
  final ShardId shardId=new ShardId(index,0);
  clusterService.setState(state(index,true,ShardRoutingState.STARTED,ShardRoutingState.STARTED));
  logger.debug("--> using initial state:\n{}",clusterService.state().prettyPrint());
  Request request=new Request(shardId).timeout("100ms");
  PlainActionFuture<Response> listener=new PlainActionFuture<>();
  TransportReplicationAction<Request,Request,Response>.PrimaryPhase primaryPhase=action.new PrimaryPhase(request,listener);
  primaryPhase.run();
  assertIndexShardCounter(2);
  assertThat(transport.capturedRequests().length,equalTo(1));
  transport.handleResponse(transport.capturedRequests()[0].requestId,TransportResponse.Empty.INSTANCE);
  assertIndexShardCounter(1);
  transport.clear();
  request=new Request(shardId).timeout("100ms");
  primaryPhase=action.new PrimaryPhase(request,listener);
  primaryPhase.run();
  assertIndexShardCounter(2);
  CapturingTransport.CapturedRequest[] replicationRequests=transport.capturedRequests();
  transport.clear();
  assertThat(replicationRequests.length,equalTo(1));
  transport.handleResponse(replicationRequests[0].requestId,new CorruptIndexException("simulated",(String)null));
  CapturingTransport.CapturedRequest[] shardFailedRequests=transport.capturedRequests();
  transport.clear();
  assertEquals(1,shardFailedRequests.length);
  transport.handleResponse(shardFailedRequests[0].requestId,TransportResponse.Empty.INSTANCE);
  assertIndexShardCounter(1);
}
