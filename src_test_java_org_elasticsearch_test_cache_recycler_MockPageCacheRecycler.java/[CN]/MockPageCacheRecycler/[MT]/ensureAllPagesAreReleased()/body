{
  final Map<Object,Throwable> masterCopy=Maps.newHashMap(ACQUIRED_PAGES);
  if (masterCopy.isEmpty()) {
    return;
  }
  boolean success=ElasticsearchTestCase.awaitBusy(new Predicate<Object>(){
    @Override public boolean apply(    Object input){
      return Sets.intersection(masterCopy.keySet(),ACQUIRED_PAGES.keySet()).isEmpty();
    }
  }
);
  if (success) {
    return;
  }
  masterCopy.keySet().retainAll(ACQUIRED_PAGES.keySet());
  ACQUIRED_PAGES.keySet().removeAll(masterCopy.keySet());
  if (!masterCopy.isEmpty()) {
    final Throwable t=masterCopy.entrySet().iterator().next().getValue();
    throw new RuntimeException(masterCopy.size() + " pages have not been released",t);
  }
}
