{
  int iterations=iterations(10,30);
  for (int i=0; i < iterations; i++) {
    OriginalIndices originalIndices;
    boolean missing=randomBoolean();
    if (missing) {
      originalIndices=randomOriginalIndices();
    }
 else {
      originalIndices=OriginalIndices.EMPTY;
    }
    BytesStreamOutput out=new BytesStreamOutput();
    out.setVersion(randomVersion());
    OriginalIndices.writeOptionalOriginalIndices(originalIndices,out);
    BytesStreamInput in=new BytesStreamInput(out.bytes());
    in.setVersion(out.getVersion());
    OriginalIndices originalIndices2=OriginalIndices.readOptionalOriginalIndices(in);
    if (out.getVersion().onOrAfter(Version.V_1_4_0_Beta1)) {
      assertThat(originalIndices2.indices(),equalTo(originalIndices.indices()));
      assertThat(originalIndices2.indicesOptions(),equalTo(originalIndices.indicesOptions()));
    }
 else {
      assertThat(originalIndices2.indices(),nullValue());
      assertThat(originalIndices2.indicesOptions(),nullValue());
    }
  }
}
