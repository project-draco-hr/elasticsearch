{
  logger.info("--> start node A");
  String nodeA=internalCluster().startNode(settingsBuilder().put("gateway.type","local"));
  logger.info("--> create index on node: {}",nodeA);
  ByteSizeValue shardSize=createAndPopulateIndex(INDEX_NAME,1,SHARD_COUNT,REPLICA_COUNT).getShards()[0].getStats().getStore().size();
  logger.info("--> start node B");
  String nodeB=internalCluster().startNode(settingsBuilder().put("gateway.type","local"));
  ensureGreen();
  logger.info("--> slowing down recoveries");
  slowDownRecovery(shardSize);
  logger.info("--> move shard from: {} to: {}",nodeA,nodeB);
  client().admin().cluster().prepareReroute().add(new MoveAllocationCommand(new ShardId(INDEX_NAME,0),nodeA,nodeB)).execute().actionGet().getState();
  logger.info("--> request recoveries");
  RecoveryResponse response=client().admin().indices().prepareRecoveries(INDEX_NAME).execute().actionGet();
  List<ShardRecoveryResponse> shardResponses=response.shardResponses().get(INDEX_NAME);
  List<ShardRecoveryResponse> nodeAResponses=findRecoveriesForTargetNode(nodeA,shardResponses);
  assertThat(nodeAResponses.size(),equalTo(1));
  List<ShardRecoveryResponse> nodeBResponses=findRecoveriesForTargetNode(nodeB,shardResponses);
  assertThat(nodeBResponses.size(),equalTo(1));
  assertRecoveryState(nodeAResponses.get(0).recoveryState(),0,Type.GATEWAY,Stage.DONE,nodeA,nodeA,false);
  validateIndexRecoveryState(nodeAResponses.get(0).recoveryState().getIndex());
  assertOnGoingRecoveryState(nodeBResponses.get(0).recoveryState(),0,Type.RELOCATION,nodeA,nodeB,false);
  validateIndexRecoveryState(nodeBResponses.get(0).recoveryState().getIndex());
  logger.info("--> speeding up recoveries");
  restoreRecoverySpeed();
  ensureGreen();
  response=client().admin().indices().prepareRecoveries(INDEX_NAME).execute().actionGet();
  shardResponses=response.shardResponses().get(INDEX_NAME);
  assertThat(shardResponses.size(),equalTo(1));
  assertRecoveryState(shardResponses.get(0).recoveryState(),0,Type.RELOCATION,Stage.DONE,nodeA,nodeB,false);
  validateIndexRecoveryState(shardResponses.get(0).recoveryState().getIndex());
  logger.info("--> bump replica count");
  client().admin().indices().prepareUpdateSettings(INDEX_NAME).setSettings(settingsBuilder().put("number_of_replicas",1)).execute().actionGet();
  ensureGreen();
  logger.info("--> start node C");
  String nodeC=internalCluster().startNode(settingsBuilder().put("gateway.type","local"));
  assertFalse(client().admin().cluster().prepareHealth().setWaitForNodes("3").get().isTimedOut());
  logger.info("--> slowing down recoveries");
  slowDownRecovery(shardSize);
  logger.info("--> move replica shard from: {} to: {}",nodeA,nodeC);
  client().admin().cluster().prepareReroute().add(new MoveAllocationCommand(new ShardId(INDEX_NAME,0),nodeA,nodeC)).execute().actionGet().getState();
  response=client().admin().indices().prepareRecoveries(INDEX_NAME).execute().actionGet();
  shardResponses=response.shardResponses().get(INDEX_NAME);
  nodeAResponses=findRecoveriesForTargetNode(nodeA,shardResponses);
  assertThat(nodeAResponses.size(),equalTo(1));
  nodeBResponses=findRecoveriesForTargetNode(nodeB,shardResponses);
  assertThat(nodeBResponses.size(),equalTo(1));
  List<ShardRecoveryResponse> nodeCResponses=findRecoveriesForTargetNode(nodeC,shardResponses);
  assertThat(nodeCResponses.size(),equalTo(1));
  assertRecoveryState(nodeAResponses.get(0).recoveryState(),0,Type.REPLICA,Stage.DONE,nodeB,nodeA,false);
  validateIndexRecoveryState(nodeAResponses.get(0).recoveryState().getIndex());
  assertRecoveryState(nodeBResponses.get(0).recoveryState(),0,Type.RELOCATION,Stage.DONE,nodeA,nodeB,false);
  validateIndexRecoveryState(nodeBResponses.get(0).recoveryState().getIndex());
  assertOnGoingRecoveryState(nodeCResponses.get(0).recoveryState(),0,Type.REPLICA,nodeB,nodeC,false);
  validateIndexRecoveryState(nodeCResponses.get(0).recoveryState().getIndex());
  logger.info("--> speeding up recoveries");
  restoreRecoverySpeed();
  ensureGreen();
  response=client().admin().indices().prepareRecoveries(INDEX_NAME).execute().actionGet();
  shardResponses=response.shardResponses().get(INDEX_NAME);
  nodeAResponses=findRecoveriesForTargetNode(nodeA,shardResponses);
  assertThat(nodeAResponses.size(),equalTo(0));
  nodeBResponses=findRecoveriesForTargetNode(nodeB,shardResponses);
  assertThat(nodeBResponses.size(),equalTo(1));
  nodeCResponses=findRecoveriesForTargetNode(nodeC,shardResponses);
  assertThat(nodeCResponses.size(),equalTo(1));
  assertRecoveryState(nodeBResponses.get(0).recoveryState(),0,Type.RELOCATION,Stage.DONE,nodeA,nodeB,false);
  validateIndexRecoveryState(nodeBResponses.get(0).recoveryState().getIndex());
  assertRecoveryState(nodeCResponses.get(0).recoveryState(),0,Type.REPLICA,Stage.DONE,nodeB,nodeC,false);
  validateIndexRecoveryState(nodeCResponses.get(0).recoveryState().getIndex());
}
