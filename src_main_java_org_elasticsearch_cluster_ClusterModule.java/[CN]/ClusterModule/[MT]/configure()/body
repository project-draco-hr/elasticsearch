{
  bind(DiscoveryNodeService.class).asEagerSingleton();
  bind(ClusterService.class).to(InternalClusterService.class).asEagerSingleton();
  bind(MetaDataService.class).asEagerSingleton();
  bind(MetaDataCreateIndexService.class).asEagerSingleton();
  bind(MetaDataDeleteIndexService.class).asEagerSingleton();
  bind(MetaDataIndexStateService.class).asEagerSingleton();
  bind(MetaDataMappingService.class).asEagerSingleton();
  bind(MetaDataIndexAliasesService.class).asEagerSingleton();
  bind(MetaDataUpdateSettingsService.class).asEagerSingleton();
  bind(MetaDataIndexTemplateService.class).asEagerSingleton();
  bind(RoutingService.class).asEagerSingleton();
  bind(ShardStateAction.class).asEagerSingleton();
  bind(NodeIndexDeletedAction.class).asEagerSingleton();
  bind(NodeMappingRefreshAction.class).asEagerSingleton();
  bind(MappingUpdatedAction.class).asEagerSingleton();
  bind(ClusterInfoService.class).to(settings.getAsClass(CLUSTER_SERVICE_IMPL,InternalClusterInfoService.class)).asEagerSingleton();
  Multibinder<IndexTemplateFilter> mbinder=Multibinder.newSetBinder(binder(),IndexTemplateFilter.class);
  for (  Class<? extends IndexTemplateFilter> indexTemplateFilter : indexTemplateFilters) {
    mbinder.addBinding().to(indexTemplateFilter);
  }
}
