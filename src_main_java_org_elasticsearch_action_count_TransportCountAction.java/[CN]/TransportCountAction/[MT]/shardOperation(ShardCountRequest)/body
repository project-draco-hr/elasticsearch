{
  IndexService indexService=indicesService.indexServiceSafe(request.index());
  IndexShard indexShard=indexService.shardSafe(request.shardId());
  SearchShardTarget shardTarget=new SearchShardTarget(clusterService.localNode().id(),request.index(),request.shardId());
  SearchContext context=new DefaultSearchContext(0,new ShardSearchRequest().types(request.types()).filteringAliases(request.filteringAliases()).nowInMillis(request.nowInMillis()),shardTarget,indexShard.acquireSearcher("count"),indexService,indexShard,scriptService,cacheRecycler,pageCacheRecycler,bigArrays);
  SearchContext.setCurrent(context);
  try {
    if (request.minScore() != -1) {
      context.minimumScore(request.minScore());
    }
    BytesReference source=request.querySource();
    if (source != null && source.length() > 0) {
      try {
        QueryParseContext.setTypes(request.types());
        context.parsedQuery(indexService.queryParserService().parseQuery(source));
      }
  finally {
        QueryParseContext.removeTypes();
      }
    }
    context.preProcess();
    try {
      long count=Lucene.count(context.searcher(),context.query());
      return new ShardCountResponse(request.index(),request.shardId(),count);
    }
 catch (    Exception e) {
      throw new QueryPhaseExecutionException(context,"failed to execute count",e);
    }
  }
  finally {
    context.close();
    SearchContext.removeCurrent();
  }
}
