{
  IndexService indexService=indicesService.indexServiceSafe(request.getIndex());
  IndexShard indexShard=indexService.shardSafe(request.getShardId());
  SearchShardTarget shardTarget=new SearchShardTarget(clusterService.localNode().id(),request.getIndex(),request.getShardId());
  SearchContext context=new SearchContext(0,new ShardSearchRequest().types(request.getTypes()).filteringAliases(request.getFilteringAliases()),shardTarget,indexShard.searcher(),indexService,indexShard,scriptService);
  SearchContext.setCurrent(context);
  try {
    if (request.getMinScore() != -1) {
      context.minimumScore(request.getMinScore());
    }
    BytesReference querySource=request.getQuerySource();
    if (querySource != null && querySource.length() > 0) {
      try {
        QueryParseContext.setTypes(request.getTypes());
        context.parsedQuery(indexService.queryParserService().parse(querySource));
      }
  finally {
        QueryParseContext.removeTypes();
      }
    }
    context.preProcess();
    try {
      long count=Lucene.count(context.searcher(),context.query());
      return new ShardCountResponse(request.getIndex(),request.getShardId(),count);
    }
 catch (    Exception e) {
      throw new QueryPhaseExecutionException(context,"failed to execute count",e);
    }
  }
  finally {
    context.release();
    SearchContext.removeCurrent();
  }
}
