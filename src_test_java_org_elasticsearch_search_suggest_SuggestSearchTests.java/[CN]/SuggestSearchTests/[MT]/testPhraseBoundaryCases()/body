{
  CreateIndexRequestBuilder builder=prepareCreate("test").setSettings(settingsBuilder().put("index.analysis.analyzer.body.tokenizer","standard").putArray("index.analysis.analyzer.body.filter","lowercase").put("index.analysis.analyzer.bigram.tokenizer","standard").putArray("index.analysis.analyzer.bigram.filter","my_shingle","lowercase").put("index.analysis.analyzer.ngram.tokenizer","standard").putArray("index.analysis.analyzer.ngram.filter","my_shingle2","lowercase").put("index.analysis.analyzer.myDefAnalyzer.tokenizer","standard").putArray("index.analysis.analyzer.myDefAnalyzer.filter","shingle","lowercase").put("index.analysis.filter.my_shingle.type","shingle").put("index.analysis.filter.my_shingle.output_unigrams",false).put("index.analysis.filter.my_shingle.min_shingle_size",2).put("index.analysis.filter.my_shingle.max_shingle_size",2).put("index.analysis.filter.my_shingle2.type","shingle").put("index.analysis.filter.my_shingle2.output_unigrams",true).put("index.analysis.filter.my_shingle2.min_shingle_size",2).put("index.analysis.filter.my_shingle2.max_shingle_size",2));
  XContentBuilder mapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("_all").field("store","yes").field("termVector","with_positions_offsets").endObject().startObject("properties").startObject("body").field("type","string").field("analyzer","body").endObject().startObject("bigram").field("type","string").field("analyzer","bigram").endObject().startObject("ngram").field("type","string").field("analyzer","ngram").endObject().endObject().endObject().endObject();
  assertAcked(builder.addMapping("type1",mapping));
  ensureGreen();
  for (  String line : Resources.readLines(SuggestSearchTests.class.getResource("/config/names.txt"),Charsets.UTF_8)) {
    index("test","type1",line,"body",line,"bigram",line,"ngram",line);
  }
  refresh();
  PhraseSuggestionBuilder phraseSuggestion=phraseSuggestion("simple_phrase").field("bigram").analyzer("body").addCandidateGenerator(candidateGenerator("does_not_exist").minWordLength(1).suggestMode("always")).realWordErrorLikelihood(0.95f).maxErrors(0.5f).size(1);
  try {
    searchSuggest(client(),"Xor the Got-Jewel",5,phraseSuggestion);
    fail("field does not exists");
  }
 catch (  SearchPhaseExecutionException e) {
  }
  phraseSuggestion.clearCandidateGenerators().analyzer(null);
  try {
    searchSuggest(client(),"Xor the Got-Jewel",5,phraseSuggestion);
    fail("analyzer does only produce ngrams");
  }
 catch (  SearchPhaseExecutionException e) {
  }
  phraseSuggestion.analyzer("bigram");
  try {
    searchSuggest(client(),"Xor the Got-Jewel",5,phraseSuggestion);
    fail("analyzer does only produce ngrams");
  }
 catch (  SearchPhaseExecutionException e) {
  }
  phraseSuggestion.forceUnigrams(false);
  searchSuggest(client(),"Xor the Got-Jewel",phraseSuggestion);
  phraseSuggestion.forceUnigrams(true).field("bigram").analyzer("ngram");
  searchSuggest(client(),"Xor the Got-Jewel",phraseSuggestion);
  phraseSuggestion.field("ngram").analyzer("myDefAnalyzer").addCandidateGenerator(candidateGenerator("body").minWordLength(1).suggestMode("always"));
  Suggest suggest=searchSuggest(client(),"Xor the Got-Jewel",phraseSuggestion);
  assertSuggestion(suggest,0,"simple_phrase","xorr the god jewel");
  phraseSuggestion.analyzer(null);
  suggest=searchSuggest(client(),"Xor the Got-Jewel",phraseSuggestion);
  assertSuggestion(suggest,0,"simple_phrase","xorr the god jewel");
}
