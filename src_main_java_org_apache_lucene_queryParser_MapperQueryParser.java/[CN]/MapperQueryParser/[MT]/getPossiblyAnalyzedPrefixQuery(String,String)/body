{
  if (!analyzeWildcard) {
    return super.getPrefixQuery(field,termStr);
  }
  TokenStream source;
  try {
    source=getAnalyzer().reusableTokenStream(field,new StringReader(termStr));
  }
 catch (  IOException e) {
    return super.getPrefixQuery(field,termStr);
  }
  List<String> tlist=new ArrayList<String>();
  CharTermAttribute termAtt=source.addAttribute(CharTermAttribute.class);
  while (true) {
    try {
      if (!source.incrementToken())       break;
    }
 catch (    IOException e) {
      break;
    }
    tlist.add(termAtt.toString());
  }
  try {
    source.close();
  }
 catch (  IOException e) {
  }
  if (tlist.size() == 1) {
    return super.getPrefixQuery(field,tlist.get(0));
  }
 else {
    List<BooleanClause> clauses=new ArrayList<BooleanClause>();
    for (    String token : tlist) {
      clauses.add(new BooleanClause(super.getPrefixQuery(field,token),BooleanClause.Occur.SHOULD));
    }
    return getBooleanQuery(clauses,true);
  }
}
