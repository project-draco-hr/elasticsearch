{
  FieldQueryExtension fieldQueryExtension=fieldQueryExtensions.get(field);
  if (fieldQueryExtension != null) {
    return fieldQueryExtension.query(parseContext,queryText);
  }
  currentMapper=null;
  Analyzer oldAnalyzer=analyzer;
  try {
    MapperService.SmartNameFieldMappers fieldMappers=parseContext.smartFieldMappers(field);
    if (fieldMappers != null) {
      if (!forcedAnalyzer) {
        analyzer=fieldMappers.searchAnalyzer();
      }
      currentMapper=fieldMappers.fieldMappers().mapper();
      if (currentMapper != null) {
        Query query=null;
        if (currentMapper.useFieldQueryWithQueryString()) {
          if (fieldMappers.hasDocMapper()) {
            String[] previousTypes=QueryParseContext.setTypesWithPrevious(new String[]{fieldMappers.docMapper().type()});
            try {
              query=currentMapper.fieldQuery(queryText,parseContext);
            }
  finally {
              QueryParseContext.setTypes(previousTypes);
            }
          }
 else {
            query=currentMapper.fieldQuery(queryText,parseContext);
          }
        }
        if (query == null) {
          query=super.getFieldQuery(currentMapper.names().indexName(),queryText,quoted);
        }
        return wrapSmartNameQuery(query,fieldMappers,parseContext);
      }
    }
    return super.getFieldQuery(field,queryText,quoted);
  }
  finally {
    analyzer=oldAnalyzer;
  }
}
