{
  XContentParser parser=parseContext.parser();
  Query query=Queries.newMatchAllQuery();
  Query filter=null;
  boolean filterFound=false;
  float boost=1.0f;
  String queryName=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (parseContext.isDeprecatedSetting(currentFieldName)) {
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("query".equals(currentFieldName)) {
        query=parseContext.parseInnerQuery();
      }
 else       if ("filter".equals(currentFieldName)) {
        filterFound=true;
        filter=parseContext.parseInnerFilter();
      }
 else {
        throw new QueryParsingException(parseContext,"[filtered] query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token.isValue()) {
      if ("strategy".equals(currentFieldName)) {
      }
 else       if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else       if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else {
        throw new QueryParsingException(parseContext,"[filtered] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (query == null) {
    return null;
  }
  if (filter == null) {
    if (!filterFound) {
      return query;
    }
 else {
      return query;
    }
  }
  if (Queries.isConstantMatchAllQuery(filter)) {
    return query;
  }
  if (Queries.isConstantMatchAllQuery(query)) {
    Query q=new ConstantScoreQuery(filter);
    q.setBoost(boost);
    return q;
  }
  BooleanQuery filteredQuery=Queries.filtered(query,filter);
  filteredQuery.setBoost(boost);
  if (queryName != null) {
    parseContext.addNamedQuery(queryName,filteredQuery);
  }
  return filteredQuery;
}
