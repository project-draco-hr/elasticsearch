{
  boolean changed=false;
  final Set<String> toRemove=new HashSet<>();
  Settings.Builder settingsBuilder=Settings.settingsBuilder();
  for (  Map.Entry<String,String> entry : toApply.getAsMap().entrySet()) {
    if (entry.getValue() == null) {
      toRemove.add(entry.getKey());
    }
 else     if (clusterSettings.isLoggerSetting(entry.getKey()) || clusterSettings.hasDynamicSetting(entry.getKey())) {
      settingsBuilder.put(entry.getKey(),entry.getValue());
      updates.put(entry.getKey(),entry.getValue());
      changed=true;
    }
 else {
      throw new IllegalArgumentException(type + " setting [" + entry.getKey()+ "], not dynamically updateable");
    }
  }
  changed|=applyDeletes(toRemove,target);
  target.put(settingsBuilder.build());
  return changed;
}
