{
  return new AbstractSet<Map.Entry<Long,TypeV>>(){
    public void clear(){
      NonBlockingHashMapLong.this.clear();
    }
    public int size(){
      return NonBlockingHashMapLong.this.size();
    }
    public boolean remove(    final Object o){
      if (!(o instanceof Map.Entry))       return false;
      final Map.Entry<?,?> e=(Map.Entry<?,?>)o;
      return NonBlockingHashMapLong.this.remove(e.getKey(),e.getValue());
    }
    public boolean contains(    final Object o){
      if (!(o instanceof Map.Entry))       return false;
      final Map.Entry<?,?> e=(Map.Entry<?,?>)o;
      TypeV v=get(e.getKey());
      return v.equals(e.getValue());
    }
    public Iterator<Map.Entry<Long,TypeV>> iterator(){
      return new SnapshotE();
    }
  }
;
}
