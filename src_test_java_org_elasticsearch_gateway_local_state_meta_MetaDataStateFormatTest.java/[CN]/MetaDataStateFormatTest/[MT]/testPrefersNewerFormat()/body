{
  final ToXContent.Params params=ToXContent.EMPTY_PARAMS;
  MetaDataStateFormat<MetaData> format=LocalGatewayMetaState.globalStateFormat(randomFrom(XContentType.values()),params,randomBoolean());
  final File[] dirs=new File[2];
  dirs[0]=newTempDir(LifecycleScope.TEST);
  dirs[1]=newTempDir(LifecycleScope.TEST);
  for (  File dir : dirs) {
    Files.createDirectories(new File(dir,MetaDataStateFormat.STATE_DIR_NAME).toPath());
  }
  final File dir1=randomFrom(dirs);
  final long v=randomInt(10);
  MetaData meta=randomMeta();
  String uuid=meta.uuid();
  final File dir2=randomFrom(dirs);
  MetaData meta2=randomMeta();
  assertFalse(meta2.uuid().equals(uuid));
  try (XContentBuilder xcontentBuilder=XContentFactory.contentBuilder(format.format(),new FileOutputStream(new File(new File(dir2,MetaDataStateFormat.STATE_DIR_NAME),LocalGatewayMetaState.GLOBAL_STATE_FILE_PREFIX + v)))){
    xcontentBuilder.startObject();
    MetaData.Builder.toXContent(randomMeta(),xcontentBuilder,params);
    xcontentBuilder.endObject();
  }
   format.write(meta,LocalGatewayMetaState.GLOBAL_STATE_FILE_PREFIX,v,dir1);
  MetaData state=MetaDataStateFormat.loadLatestState(logger,format,LocalGatewayMetaState.GLOBAL_STATE_FILE_PATTERN,"foobar",dirs);
  assertThat(state.uuid(),equalTo(uuid));
}
