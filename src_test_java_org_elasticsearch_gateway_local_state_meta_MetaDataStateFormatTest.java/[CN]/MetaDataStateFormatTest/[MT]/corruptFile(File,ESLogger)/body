{
  File fileToCorrupt=file;
  try (final SimpleFSDirectory dir=new SimpleFSDirectory(fileToCorrupt.getParentFile())){
    long checksumBeforeCorruption;
    try (IndexInput input=dir.openInput(fileToCorrupt.getName(),IOContext.DEFAULT)){
      checksumBeforeCorruption=CodecUtil.retrieveChecksum(input);
    }
     try (RandomAccessFile raf=new RandomAccessFile(fileToCorrupt,"rw")){
      raf.seek(randomIntBetween(0,(int)Math.min(Integer.MAX_VALUE,raf.length() - 1)));
      long filePointer=raf.getFilePointer();
      byte b=raf.readByte();
      raf.seek(filePointer);
      raf.writeByte(~b);
      raf.getFD().sync();
      logger.debug("Corrupting file {} --  flipping at position {} from {} to {} ",fileToCorrupt.getName(),filePointer,Integer.toHexString(b),Integer.toHexString(~b));
    }
     long checksumAfterCorruption;
    long actualChecksumAfterCorruption;
    try (ChecksumIndexInput input=dir.openChecksumInput(fileToCorrupt.getName(),IOContext.DEFAULT)){
      assertThat(input.getFilePointer(),is(0l));
      input.seek(input.length() - 8);
      checksumAfterCorruption=input.getChecksum();
      actualChecksumAfterCorruption=input.readLong();
    }
     StringBuilder msg=new StringBuilder();
    msg.append("Checksum before: [").append(checksumBeforeCorruption).append("]");
    msg.append(" after: [").append(checksumAfterCorruption).append("]");
    msg.append(" checksum value after corruption: ").append(actualChecksumAfterCorruption).append("]");
    msg.append(" file: ").append(fileToCorrupt.getName()).append(" length: ").append(dir.fileLength(fileToCorrupt.getName()));
    logger.debug(msg.toString());
    assumeTrue("Checksum collision - " + msg.toString(),checksumAfterCorruption != checksumBeforeCorruption || actualChecksumAfterCorruption != checksumBeforeCorruption);
  }
 }
