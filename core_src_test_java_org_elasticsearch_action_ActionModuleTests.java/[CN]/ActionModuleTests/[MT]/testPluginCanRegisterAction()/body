{
class FakeRequest extends ActionRequest<FakeRequest> {
    @Override public ActionRequestValidationException validate(){
      return null;
    }
  }
class FakeTransportAction extends TransportAction<FakeRequest,ActionResponse> {
    protected FakeTransportAction(    Settings settings,    String actionName,    ThreadPool threadPool,    ActionFilters actionFilters,    IndexNameExpressionResolver indexNameExpressionResolver,    TaskManager taskManager){
      super(settings,actionName,threadPool,actionFilters,indexNameExpressionResolver,taskManager);
    }
    @Override protected void doExecute(    FakeRequest request,    ActionListener<ActionResponse> listener){
    }
  }
class FakeAction extends GenericAction<FakeRequest,ActionResponse> {
    protected FakeAction(){
      super("fake");
    }
    @Override public ActionResponse newResponse(){
      return null;
    }
  }
  FakeAction action=new FakeAction();
  ActionPlugin registersFakeAction=new ActionPlugin(){
    @Override public List<ActionHandler<? extends ActionRequest<?>,? extends ActionResponse>> getActions(){
      return singletonList(new ActionHandler<>(action,FakeTransportAction.class));
    }
  }
;
  assertThat(ActionModule.setupActions(singletonList(registersFakeAction)),hasEntry("fake",new ActionHandler<>(action,FakeTransportAction.class)));
}
