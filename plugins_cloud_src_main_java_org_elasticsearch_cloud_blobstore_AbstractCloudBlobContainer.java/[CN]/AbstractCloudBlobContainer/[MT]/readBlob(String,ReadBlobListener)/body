{
  final ListenableFuture<? extends Blob> future=cloudBlobStore.async().getBlob(cloudBlobStore.container(),buildBlobPath(blobName));
  future.addListener(new Runnable(){
    @Override public void run(){
      Blob blob;
      try {
        blob=future.get();
      }
 catch (      InterruptedException e) {
        listener.onFailure(e);
        return;
      }
catch (      ExecutionException e) {
        listener.onFailure(e.getCause());
        return;
      }
      byte[] buffer=new byte[cloudBlobStore.bufferSizeInBytes()];
      InputStream is=blob.getContent();
      try {
        int bytesRead;
        while ((bytesRead=is.read(buffer)) != -1) {
          listener.onPartial(buffer,0,bytesRead);
        }
        listener.onCompleted();
      }
 catch (      Exception e) {
        try {
          is.close();
        }
 catch (        IOException e1) {
        }
        listener.onFailure(e);
      }
    }
  }
,cloudBlobStore.executorService());
}
