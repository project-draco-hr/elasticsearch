{
  HashSet<DiscoveryNode> newNodes=new HashSet<>();
  HashSet<DiscoveryNode> newFilteredNodes=new HashSet<>();
  for (  DiscoveryNode listedNode : listedNodes) {
    if (!transportService.nodeConnected(listedNode)) {
      try {
        logger.trace("connecting to listed node (light) [{}]",listedNode);
        transportService.connectToNodeLight(listedNode);
      }
 catch (      Throwable e) {
        logger.debug("failed to connect to node [{}], removed from nodes list",e,listedNode);
        continue;
      }
    }
    try {
      NodesInfoResponse nodeInfo=transportService.submitRequest(listedNode,NodesInfoAction.NAME,Requests.nodesInfoRequest("_local"),TransportRequestOptions.options().withType(TransportRequestOptions.Type.STATE).withTimeout(pingTimeout),new FutureTransportResponseHandler<NodesInfoResponse>(){
        @Override public NodesInfoResponse newInstance(){
          return new NodesInfoResponse();
        }
      }
).txGet();
      if (!ignoreClusterName && !clusterName.equals(nodeInfo.getClusterName())) {
        logger.warn("node {} not part of the cluster {}, ignoring...",listedNode,clusterName);
        newFilteredNodes.add(listedNode);
      }
 else       if (nodeInfo.getNodes().length != 0) {
        DiscoveryNode nodeWithInfo=nodeInfo.getNodes()[0].getNode();
        newNodes.add(new DiscoveryNode(nodeWithInfo.name(),nodeWithInfo.id(),nodeWithInfo.getHostName(),nodeWithInfo.getHostAddress(),listedNode.address(),nodeWithInfo.attributes(),nodeWithInfo.version()));
      }
 else {
        logger.debug("node {} didn't return any discovery info, temporarily using transport discovery node",listedNode);
        newNodes.add(listedNode);
      }
    }
 catch (    Throwable e) {
      logger.info("failed to get node info for {}, disconnecting...",e,listedNode);
      transportService.disconnectFromNode(listedNode);
    }
  }
  nodes=validateNewNodes(newNodes);
  filteredNodes=ImmutableList.copyOf(newFilteredNodes);
}
