{
  InternalEngine currentEngine=InternalEngineHolder.this.currentEngine.get();
  boolean change=false;
  long gcDeletesInMillis=settings.getAsTime(INDEX_GC_DELETES,TimeValue.timeValueMillis(InternalEngineHolder.this.gcDeletesInMillis)).millis();
  if (gcDeletesInMillis != InternalEngineHolder.this.gcDeletesInMillis) {
    logger.info("updating index.gc_deletes from [{}] to [{}]",TimeValue.timeValueMillis(InternalEngineHolder.this.gcDeletesInMillis),TimeValue.timeValueMillis(gcDeletesInMillis));
    InternalEngineHolder.this.gcDeletesInMillis=gcDeletesInMillis;
    change=true;
  }
  final boolean compoundOnFlush=settings.getAsBoolean(INDEX_COMPOUND_ON_FLUSH,InternalEngineHolder.this.compoundOnFlush);
  if (compoundOnFlush != InternalEngineHolder.this.compoundOnFlush) {
    logger.info("updating {} from [{}] to [{}]",INDEX_COMPOUND_ON_FLUSH,InternalEngineHolder.this.compoundOnFlush,compoundOnFlush);
    InternalEngineHolder.this.compoundOnFlush=compoundOnFlush;
    change=true;
  }
  final boolean failEngineOnCorruption=settings.getAsBoolean(INDEX_FAIL_ON_CORRUPTION,InternalEngineHolder.this.failEngineOnCorruption);
  if (failEngineOnCorruption != InternalEngineHolder.this.failEngineOnCorruption) {
    logger.info("updating {} from [{}] to [{}]",INDEX_FAIL_ON_CORRUPTION,InternalEngineHolder.this.failEngineOnCorruption,failEngineOnCorruption);
    InternalEngineHolder.this.failEngineOnCorruption=failEngineOnCorruption;
    change=true;
  }
  int indexConcurrency=settings.getAsInt(INDEX_INDEX_CONCURRENCY,InternalEngineHolder.this.indexConcurrency);
  if (indexConcurrency != InternalEngineHolder.this.indexConcurrency) {
    logger.info("updating index.index_concurrency from [{}] to [{}]",InternalEngineHolder.this.indexConcurrency,indexConcurrency);
    InternalEngineHolder.this.indexConcurrency=indexConcurrency;
    change=true;
  }
  if (!codecName.equals(InternalEngineHolder.this.codecName)) {
    logger.info("updating index.codec from [{}] to [{}]",InternalEngineHolder.this.codecName,codecName);
    InternalEngineHolder.this.codecName=codecName;
    change=true;
  }
  if (failOnMergeFailure != InternalEngineHolder.this.failOnMergeFailure) {
    logger.info("updating {} from [{}] to [{}]",INDEX_FAIL_ON_MERGE_FAILURE,InternalEngineHolder.this.failOnMergeFailure,failOnMergeFailure);
    InternalEngineHolder.this.failOnMergeFailure=failOnMergeFailure;
  }
  if (change && currentEngine != null) {
    currentEngine.updateSettings(gcDeletesInMillis,compoundOnFlush,failEngineOnCorruption,indexConcurrency,codecName);
  }
}
