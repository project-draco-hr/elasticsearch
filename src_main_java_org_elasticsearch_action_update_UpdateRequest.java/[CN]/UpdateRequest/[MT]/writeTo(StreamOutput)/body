{
  super.writeTo(out);
  out.writeByte(replicationType.id());
  out.writeByte(consistencyLevel.id());
  out.writeSharedString(type);
  out.writeString(id);
  out.writeOptionalString(routing);
  out.writeOptionalString(script);
  if (script != null) {
    ScriptService.ScriptType.writeTo(scriptType,out);
  }
  out.writeOptionalString(scriptLang);
  out.writeMap(scriptParams);
  out.writeVInt(retryOnConflict);
  out.writeBoolean(refresh);
  if (doc == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    doc.index(index);
    doc.type(type);
    doc.id(id);
    doc.writeTo(out);
  }
  if (fields == null) {
    out.writeInt(-1);
  }
 else {
    out.writeInt(fields.length);
    for (    String field : fields) {
      out.writeString(field);
    }
  }
  if (upsertRequest == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    upsertRequest.index(index);
    upsertRequest.type(type);
    upsertRequest.id(id);
    upsertRequest.writeTo(out);
  }
  out.writeBoolean(docAsUpsert);
  Versions.writeVersion(version,out);
  out.writeByte(versionType.getValue());
}
