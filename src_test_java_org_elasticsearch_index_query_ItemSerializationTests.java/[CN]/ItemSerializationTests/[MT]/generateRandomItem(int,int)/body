{
  String index=randomAsciiOfLength(stringSize);
  String type=randomAsciiOfLength(stringSize);
  String id=String.valueOf(Math.abs(randomInt()));
  String routing=randomBoolean() ? randomAsciiOfLength(stringSize) : null;
  String[] fields=generateRandomStringArray(arraySize,stringSize);
  long version=Math.abs(randomLong());
  VersionType versionType=RandomPicks.randomFrom(new Random(),VersionType.values());
  FetchSourceContext fetchSourceContext;
switch (randomIntBetween(0,3)) {
case 0:
    fetchSourceContext=new FetchSourceContext(randomBoolean());
  break;
case 1:
fetchSourceContext=new FetchSourceContext(generateRandomStringArray(arraySize,stringSize));
break;
case 2:
fetchSourceContext=new FetchSourceContext(generateRandomStringArray(arraySize,stringSize),generateRandomStringArray(arraySize,stringSize));
break;
default :
fetchSourceContext=null;
break;
}
return (Item)new Item(index,type,id).routing(routing).fields(fields).version(version).versionType(versionType).fetchSourceContext(fetchSourceContext);
}
