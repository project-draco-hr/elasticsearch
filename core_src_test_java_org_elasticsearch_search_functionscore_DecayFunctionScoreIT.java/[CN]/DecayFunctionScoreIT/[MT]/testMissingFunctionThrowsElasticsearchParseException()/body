{
  String doc="{\n" + "  \"text\": \"baseball bats\"\n" + "}\n";
  String query="{\n" + "    \"query\": {\n" + "      \"function_score\": {\n"+ "        \"score_mode\": \"sum\",\n"+ "        \"boost_mode\": \"replace\",\n"+ "        \"functions\": [\n"+ "          {\n"+ "            \"filter\": {\n"+ "              \"term\": {\n"+ "                \"text\": \"baseball\"\n"+ "              }\n"+ "            }\n"+ "          }\n"+ "        ]\n"+ "      }\n"+ "    }\n"+ "}\n";
  client().prepareIndex("t","test").setSource(doc).get();
  refresh();
  ensureYellow("t");
  try {
    client().search(searchRequest().source(new BytesArray(query))).actionGet();
    fail("Should fail with SearchPhaseExecutionException");
  }
 catch (  SearchPhaseExecutionException failure) {
    assertThat(failure.toString(),containsString("SearchParseException"));
    assertThat(failure.toString(),not(containsString("NullPointerException")));
  }
  query="{\n" + "    \"query\": {\n" + "      \"function_score\": {\n"+ "        \"score_mode\": \"sum\",\n"+ "        \"boost_mode\": \"replace\",\n"+ "        \"functions\": [\n"+ "          {\n"+ "            \"filter\": {\n"+ "              \"term\": {\n"+ "                \"text\": \"baseball\"\n"+ "              }\n"+ "            },\n"+ "            \"weight\": 2\n"+ "          },\n"+ "          {\n"+ "            \"filter\": {\n"+ "              \"term\": {\n"+ "                \"text\": \"baseball\"\n"+ "              }\n"+ "            }\n"+ "          }\n"+ "        ]\n"+ "      }\n"+ "    }\n"+ "}";
  try {
    client().search(searchRequest().source(new BytesArray(query))).actionGet();
    fail("Should fail with SearchPhaseExecutionException");
  }
 catch (  SearchPhaseExecutionException failure) {
    assertThat(failure.toString(),containsString("SearchParseException"));
    assertThat(failure.toString(),not(containsString("NullPointerException")));
    assertThat(failure.toString(),containsString("an entry in functions list is missing a function"));
  }
  try {
    client().prepareSearch("t").setQuery(QueryBuilders.functionScoreQuery(QueryBuilders.matchAllQuery(),null)).get();
  }
 catch (  IllegalArgumentException failure) {
    assertThat(failure.toString(),containsString("function must not be null"));
  }
  try {
    client().prepareSearch("t").setQuery(QueryBuilders.functionScoreQuery().add(QueryBuilders.matchAllQuery(),null)).get();
  }
 catch (  IllegalArgumentException failure) {
    assertThat(failure.toString(),containsString("function must not be null"));
  }
  try {
    client().prepareSearch("t").setQuery(QueryBuilders.functionScoreQuery().add(null)).get();
  }
 catch (  IllegalArgumentException failure) {
    assertThat(failure.toString(),containsString("function must not be null"));
  }
}
