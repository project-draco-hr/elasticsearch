{
  assertAcked(prepareCreate("test").addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("test").field("type","text").endObject().startObject("num").field("type","double").endObject().endObject().endObject().endObject()));
  ensureYellow();
  client().prepareIndex().setType("type1").setId("1").setIndex("test").setRefreshPolicy(IMMEDIATE).setSource(jsonBuilder().startObject().field("test","value value").field("num",1.0).endObject()).get();
  FunctionScoreQueryBuilder baseQuery=functionScoreQuery(constantScoreQuery(termQuery("test","value")),ScoreFunctionBuilders.weightFactorFunction(2));
  ActionFuture<SearchResponse> response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().query(functionScoreQuery(baseQuery,gaussDecayFunction("num",0.0,1.0,null,0.5)).boostMode(CombineFunction.MULTIPLY))));
  SearchResponse sr=response.actionGet();
  SearchHits sh=sr.getHits();
  assertThat(sh.getTotalHits(),equalTo((long)(1)));
  assertThat(sh.getAt(0).getId(),equalTo("1"));
  assertThat((double)sh.getAt(0).score(),closeTo(1.0,1.e-5));
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().query(functionScoreQuery(baseQuery,gaussDecayFunction("num",0.0,1.0,null,0.5)).boostMode(CombineFunction.REPLACE))));
  sr=response.actionGet();
  sh=sr.getHits();
  assertThat(sh.getTotalHits(),equalTo((long)(1)));
  assertThat(sh.getAt(0).getId(),equalTo("1"));
  assertThat((double)sh.getAt(0).score(),closeTo(0.5,1.e-5));
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().query(functionScoreQuery(baseQuery,gaussDecayFunction("num",0.0,1.0,null,0.5)).boostMode(CombineFunction.SUM))));
  sr=response.actionGet();
  sh=sr.getHits();
  assertThat(sh.getTotalHits(),equalTo((long)(1)));
  assertThat(sh.getAt(0).getId(),equalTo("1"));
  assertThat((double)sh.getAt(0).score(),closeTo(2.0 + 0.5,1.e-5));
  logger.info("--> Hit[0] {} Explanation:\n {}",sr.getHits().getAt(0).id(),sr.getHits().getAt(0).explanation());
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().query(functionScoreQuery(baseQuery,gaussDecayFunction("num",0.0,1.0,null,0.5)).boostMode(CombineFunction.AVG))));
  sr=response.actionGet();
  sh=sr.getHits();
  assertThat(sh.getTotalHits(),equalTo((long)(1)));
  assertThat(sh.getAt(0).getId(),equalTo("1"));
  assertThat((double)sh.getAt(0).score(),closeTo((2.0 + 0.5) / 2,1.e-5));
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().query(functionScoreQuery(baseQuery,gaussDecayFunction("num",0.0,1.0,null,0.5)).boostMode(CombineFunction.MIN))));
  sr=response.actionGet();
  sh=sr.getHits();
  assertThat(sh.getTotalHits(),equalTo((long)(1)));
  assertThat(sh.getAt(0).getId(),equalTo("1"));
  assertThat((double)sh.getAt(0).score(),closeTo(0.5,1.e-5));
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().query(functionScoreQuery(baseQuery,gaussDecayFunction("num",0.0,1.0,null,0.5)).boostMode(CombineFunction.MAX))));
  sr=response.actionGet();
  sh=sr.getHits();
  assertThat(sh.getTotalHits(),equalTo((long)(1)));
  assertThat(sh.getAt(0).getId(),equalTo("1"));
  assertThat((double)sh.getAt(0).score(),closeTo(2.0,1.e-5));
}
