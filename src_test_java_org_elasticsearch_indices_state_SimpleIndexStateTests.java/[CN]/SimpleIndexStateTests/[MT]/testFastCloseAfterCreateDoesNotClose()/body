{
  logger.info("--> creating test index that cannot be allocated");
  client().admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.routing.allocation.include.tag","no_such_node").put("index.number_of_replicas",1).build()).get();
  ClusterHealthResponse health=client().admin().cluster().prepareHealth("test").setWaitForNodes(">=2").get();
  assertThat(health.isTimedOut(),equalTo(false));
  assertThat(health.getStatus(),equalTo(ClusterHealthStatus.RED));
  try {
    client().admin().indices().prepareClose("test").get();
    fail("Exception should have been thrown");
  }
 catch (  IndexPrimaryShardNotAllocatedException e) {
  }
  logger.info("--> updating test index settings to allow allocation");
  client().admin().indices().prepareUpdateSettings("test").setSettings(ImmutableSettings.settingsBuilder().put("index.routing.allocation.include.tag","").build()).get();
  logger.info("--> waiting for green status");
  ensureGreen();
  ClusterStateResponse stateResponse=client().admin().cluster().prepareState().get();
  assertThat(stateResponse.getState().metaData().index("test").state(),equalTo(IndexMetaData.State.OPEN));
  assertThat(stateResponse.getState().routingTable().index("test").shards().size(),equalTo(5));
  assertThat(stateResponse.getState().routingTable().index("test").shardsWithState(ShardRoutingState.STARTED).size(),equalTo(10));
  logger.info("--> indexing a simple document");
  client().prepareIndex("test","type1","1").setSource("field1","value1").get();
}
