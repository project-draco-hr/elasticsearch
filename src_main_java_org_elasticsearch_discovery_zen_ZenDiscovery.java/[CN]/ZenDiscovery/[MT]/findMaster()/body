{
  ZenPing.PingResponse[] fullPingResponses=pingService.pingAndWait(pingTimeout);
  if (fullPingResponses == null) {
    logger.trace("No full ping responses");
    return null;
  }
  if (logger.isTraceEnabled()) {
    StringBuilder sb=new StringBuilder("full ping responses:");
    if (fullPingResponses.length == 0) {
      sb.append(" {none}");
    }
 else {
      for (      ZenPing.PingResponse pingResponse : fullPingResponses) {
        sb.append("\n\t--> ").append("target [").append(pingResponse.target()).append("], master [").append(pingResponse.master()).append("]");
      }
    }
    logger.trace(sb.toString());
  }
  List<ZenPing.PingResponse> pingResponses=Lists.newArrayList();
  for (  ZenPing.PingResponse pingResponse : fullPingResponses) {
    DiscoveryNode node=pingResponse.target();
    if (masterElectionFilterClientNodes && (node.clientNode() || (!node.masterNode() && !node.dataNode()))) {
    }
 else     if (masterElectionFilterDataNodes && (!node.masterNode() && node.dataNode())) {
    }
 else {
      pingResponses.add(pingResponse);
    }
  }
  if (logger.isDebugEnabled()) {
    StringBuilder sb=new StringBuilder("filtered ping responses: (filter_client[").append(masterElectionFilterClientNodes).append("], filter_data[").append(masterElectionFilterDataNodes).append("])");
    if (pingResponses.isEmpty()) {
      sb.append(" {none}");
    }
 else {
      for (      ZenPing.PingResponse pingResponse : pingResponses) {
        sb.append("\n\t--> ").append("target [").append(pingResponse.target()).append("], master [").append(pingResponse.master()).append("]");
      }
    }
    logger.debug(sb.toString());
  }
  List<DiscoveryNode> pingMasters=newArrayList();
  for (  ZenPing.PingResponse pingResponse : pingResponses) {
    if (pingResponse.master() != null) {
      pingMasters.add(pingResponse.master());
    }
  }
  Set<DiscoveryNode> possibleMasterNodes=Sets.newHashSet();
  possibleMasterNodes.add(localNode);
  for (  ZenPing.PingResponse pingResponse : pingResponses) {
    possibleMasterNodes.add(pingResponse.target());
  }
  if (pingMasters.isEmpty()) {
    if (!electMaster.hasEnoughMasterNodes(possibleMasterNodes)) {
      logger.trace("not enough master nodes [{}]",possibleMasterNodes);
      return null;
    }
    DiscoveryNode electedMaster=electMaster.electMaster(possibleMasterNodes);
    if (localNode.equals(electedMaster)) {
      return localNode;
    }
  }
 else {
    DiscoveryNode electedMaster=electMaster.electMaster(pingMasters);
    if (electedMaster != null) {
      return electedMaster;
    }
  }
  return null;
}
