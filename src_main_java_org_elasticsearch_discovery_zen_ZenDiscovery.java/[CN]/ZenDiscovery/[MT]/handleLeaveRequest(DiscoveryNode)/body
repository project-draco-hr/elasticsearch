{
  if (lifecycleState() != Lifecycle.State.STARTED) {
    return;
  }
  if (master) {
    clusterService.submitStateUpdateTask("zen-disco-node_left(" + node + ")",Priority.URGENT,new ClusterStateUpdateTask(){
      @Override public ClusterState execute(      ClusterState currentState){
        DiscoveryNodes.Builder builder=new DiscoveryNodes.Builder().putAll(currentState.nodes()).remove(node.id());
        latestDiscoNodes=builder.build();
        currentState=newClusterStateBuilder().state(currentState).nodes(latestDiscoNodes).build();
        if (!electMaster.hasEnoughMasterNodes(currentState.nodes())) {
          return rejoin(currentState,"not enough master nodes");
        }
        RoutingAllocation.Result routingResult=allocationService.reroute(newClusterStateBuilder().state(currentState).build());
        return newClusterStateBuilder().state(currentState).routingResult(routingResult).build();
      }
      @Override public void onFailure(      String source,      Throwable t){
        logger.error("unexpected failure during [{}]",t,source);
      }
    }
);
  }
 else {
    handleMasterGone(node,"shut_down");
  }
}
