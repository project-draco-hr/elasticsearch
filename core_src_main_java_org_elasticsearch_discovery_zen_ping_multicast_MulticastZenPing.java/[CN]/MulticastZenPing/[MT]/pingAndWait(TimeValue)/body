{
  final AtomicReference<PingResponse[]> response=new AtomicReference<>();
  final CountDownLatch latch=new CountDownLatch(1);
  try {
    ping(new PingListener(){
      @Override public void onPing(      PingResponse[] pings){
        response.set(pings);
        latch.countDown();
      }
    }
,timeout);
  }
 catch (  EsRejectedExecutionException ex) {
    logger.debug("Ping execution rejected",ex);
    return PingResponse.EMPTY;
  }
  try {
    latch.await();
    return response.get();
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    return PingResponse.EMPTY;
  }
}
