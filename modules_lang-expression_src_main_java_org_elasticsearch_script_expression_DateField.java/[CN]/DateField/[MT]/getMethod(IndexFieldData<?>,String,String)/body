{
switch (method) {
case GETVALUE_METHOD:
    return new FieldDataValueSource(fieldData,MultiValueMode.MIN);
case ISEMPTY_METHOD:
  return new EmptyMemberValueSource(fieldData);
case SIZE_METHOD:
return new CountMethodValueSource(fieldData);
case MINIMUM_METHOD:
return new FieldDataValueSource(fieldData,MultiValueMode.MIN);
case MAXIMUM_METHOD:
return new FieldDataValueSource(fieldData,MultiValueMode.MAX);
case AVERAGE_METHOD:
return new FieldDataValueSource(fieldData,MultiValueMode.AVG);
case MEDIAN_METHOD:
return new FieldDataValueSource(fieldData,MultiValueMode.MEDIAN);
case SUM_METHOD:
return new FieldDataValueSource(fieldData,MultiValueMode.SUM);
case COUNT_METHOD:
return new CountMethodValueSource(fieldData);
case GET_YEAR_METHOD:
return new DateMethodValueSource(fieldData,MultiValueMode.MIN,method,Calendar.YEAR);
case GET_MONTH_METHOD:
return new DateMethodValueSource(fieldData,MultiValueMode.MIN,method,Calendar.MONTH);
case GET_DAY_OF_MONTH_METHOD:
return new DateMethodValueSource(fieldData,MultiValueMode.MIN,method,Calendar.DAY_OF_MONTH);
case GET_HOUR_OF_DAY_METHOD:
return new DateMethodValueSource(fieldData,MultiValueMode.MIN,method,Calendar.HOUR_OF_DAY);
case GET_MINUTES_METHOD:
return new DateMethodValueSource(fieldData,MultiValueMode.MIN,method,Calendar.MINUTE);
case GET_SECONDS_METHOD:
return new DateMethodValueSource(fieldData,MultiValueMode.MIN,method,Calendar.SECOND);
default :
throw new IllegalArgumentException("Member method [" + method + "] does not exist for date field ["+ fieldName+ "].");
}
}
