{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  client.admin().indices().prepareCreate("test").execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("id","1").field("svalue","aaa").field("ivalue",100).field("dvalue",0.1).endObject()).execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("id","2").field("svalue","bbb").field("ivalue",200).field("dvalue",0.2).endObject()).execute().actionGet();
  client.admin().indices().prepareFlush().setRefresh(true).execute().actionGet();
  SearchResponse searchResponse=client.prepareSearch().setQuery(matchAllQuery()).addSort("svalue",SortOrder.ASC).execute().actionGet();
  assertThat(searchResponse.hits().getMaxScore(),equalTo(Float.NaN));
  for (  SearchHit hit : searchResponse.hits()) {
    assertThat(hit.getScore(),equalTo(Float.NaN));
  }
  searchResponse=client.prepareSearch().setQuery(matchAllQuery()).addSort("svalue",SortOrder.ASC).setTrackScores(true).execute().actionGet();
  assertThat(searchResponse.hits().getMaxScore(),not(equalTo(Float.NaN)));
  for (  SearchHit hit : searchResponse.hits()) {
    assertThat(hit.getScore(),not(equalTo(Float.NaN)));
  }
}
