{
  final DocIdSetIterator in=scorer.iterator();
  return new DocIdSetIterator(){
    @Override public int advance(    int target) throws IOException {
      profile.startTime(ProfileBreakdown.TimingType.ADVANCE);
      try {
        return in.advance(target);
      }
  finally {
        profile.stopAndRecordTime();
      }
    }
    @Override public int nextDoc() throws IOException {
      profile.startTime(ProfileBreakdown.TimingType.NEXT_DOC);
      try {
        return in.nextDoc();
      }
  finally {
        profile.stopAndRecordTime();
      }
    }
    @Override public int docID(){
      return in.docID();
    }
    @Override public long cost(){
      return in.cost();
    }
  }
;
}
