{
  QueryValidationException exception=checkLatLon(context.indexVersionCreated().before(Version.V_2_0_0));
  if (exception != null) {
    throw new QueryShardException(context,"couldn't validate latitude/ longitude values",exception);
  }
  GeoPoint luceneTopLeft=new GeoPoint(topLeft);
  GeoPoint luceneBottomRight=new GeoPoint(bottomRight);
  if (GeoValidationMethod.isCoerce(validationMethod)) {
    double right=luceneBottomRight.getLon();
    double left=luceneTopLeft.getLon();
    boolean completeLonRange=((right - left) % 360 == 0 && right > left);
    GeoUtils.normalizePoint(luceneTopLeft,true,!completeLonRange);
    GeoUtils.normalizePoint(luceneBottomRight,true,!completeLonRange);
    if (completeLonRange) {
      luceneTopLeft.resetLon(-180);
      luceneBottomRight.resetLon(180);
    }
  }
  MappedFieldType fieldType=context.fieldMapper(fieldName);
  if (fieldType == null) {
    throw new QueryShardException(context,"failed to find geo_point field [" + fieldName + "]");
  }
  if (!(fieldType instanceof GeoPointFieldMapper.GeoPointFieldType)) {
    throw new QueryShardException(context,"field [" + fieldName + "] is not a geo_point field");
  }
  GeoPointFieldMapper.GeoPointFieldType geoFieldType=((GeoPointFieldMapper.GeoPointFieldType)fieldType);
  if (context.indexVersionCreated().after(Version.CURRENT)) {
    return new GeoPointInBBoxQuery(fieldType.names().fullName(),topLeft.lon(),bottomRight.lat(),bottomRight.lon(),topLeft.lat());
  }
  Query query;
switch (type) {
case INDEXED:
    query=IndexedGeoBoundingBoxQuery.create(luceneTopLeft,luceneBottomRight,geoFieldType);
  break;
case MEMORY:
IndexGeoPointFieldData indexFieldData=context.getForField(fieldType);
query=new InMemoryGeoBoundingBoxQuery(luceneTopLeft,luceneBottomRight,indexFieldData);
break;
default :
throw new IllegalStateException("geo bounding box type [" + type + "] not supported.");
}
return query;
}
