{
  if (Double.isNaN(box[TOP])) {
    throw new IllegalArgumentException("geo_bounding_box requires top latitude to be set");
  }
 else   if (Double.isNaN(box[BOTTOM])) {
    throw new IllegalArgumentException("geo_bounding_box requires bottom latitude to be set");
  }
 else   if (Double.isNaN(box[RIGHT])) {
    throw new IllegalArgumentException("geo_bounding_box requires right longitude to be set");
  }
 else   if (Double.isNaN(box[LEFT])) {
    throw new IllegalArgumentException("geo_bounding_box requires left longitude to be set");
  }
  builder.startObject(NAME);
  builder.startObject(name);
  builder.array(TOP_LEFT,box[LEFT],box[TOP]);
  builder.array(BOTTOM_RIGHT,box[RIGHT],box[BOTTOM]);
  builder.endObject();
  if (type != null) {
    builder.field("type",type);
  }
  if (coerce != null) {
    builder.field("coerce",coerce);
  }
  if (ignoreMalformed != null) {
    builder.field("ignore_malformed",ignoreMalformed);
  }
  printBoostAndQueryName(builder);
  builder.endObject();
}
