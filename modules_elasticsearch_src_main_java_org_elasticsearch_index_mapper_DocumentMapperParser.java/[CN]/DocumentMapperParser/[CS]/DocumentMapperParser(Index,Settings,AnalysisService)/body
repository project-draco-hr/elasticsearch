{
  super(index,indexSettings);
  this.analysisService=analysisService;
  typeParsers=new MapBuilder<String,Mapper.TypeParser>().put(ByteFieldMapper.CONTENT_TYPE,new ByteFieldMapper.TypeParser()).put(ShortFieldMapper.CONTENT_TYPE,new ShortFieldMapper.TypeParser()).put(IntegerFieldMapper.CONTENT_TYPE,new IntegerFieldMapper.TypeParser()).put(LongFieldMapper.CONTENT_TYPE,new LongFieldMapper.TypeParser()).put(FloatFieldMapper.CONTENT_TYPE,new FloatFieldMapper.TypeParser()).put(DoubleFieldMapper.CONTENT_TYPE,new DoubleFieldMapper.TypeParser()).put(BooleanFieldMapper.CONTENT_TYPE,new BooleanFieldMapper.TypeParser()).put(BinaryFieldMapper.CONTENT_TYPE,new BinaryFieldMapper.TypeParser()).put(DateFieldMapper.CONTENT_TYPE,new DateFieldMapper.TypeParser()).put(IpFieldMapper.CONTENT_TYPE,new IpFieldMapper.TypeParser()).put(StringFieldMapper.CONTENT_TYPE,new StringFieldMapper.TypeParser()).put(ObjectMapper.CONTENT_TYPE,new ObjectMapper.TypeParser()).put(MultiFieldMapper.CONTENT_TYPE,new MultiFieldMapper.TypeParser()).put(GeoPointFieldMapper.CONTENT_TYPE,new GeoPointFieldMapper.TypeParser()).immutableMap();
}
