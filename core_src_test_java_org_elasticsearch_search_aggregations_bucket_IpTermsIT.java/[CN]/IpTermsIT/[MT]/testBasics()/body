{
  assertAcked(prepareCreate("index").addMapping("type","ip","type=ip"));
  indexRandom(true,client().prepareIndex("index","type","1").setSource("ip","192.168.1.7"),client().prepareIndex("index","type","2").setSource("ip","192.168.1.7"),client().prepareIndex("index","type","3").setSource("ip","2001:db8::2:1"));
  SearchResponse response=client().prepareSearch("index").addAggregation(AggregationBuilders.terms("my_terms").field("ip").executionHint(randomExecutionHint())).get();
  assertSearchResponse(response);
  Terms terms=response.getAggregations().get("my_terms");
  assertEquals(2,terms.getBuckets().size());
  Terms.Bucket bucket1=terms.getBuckets().get(0);
  assertEquals(2,bucket1.getDocCount());
  assertEquals("192.168.1.7",bucket1.getKey());
  assertEquals("192.168.1.7",bucket1.getKeyAsString());
  Terms.Bucket bucket2=terms.getBuckets().get(1);
  assertEquals(1,bucket2.getDocCount());
  assertEquals("2001:db8::2:1",bucket2.getKey());
  assertEquals("2001:db8::2:1",bucket2.getKeyAsString());
}
