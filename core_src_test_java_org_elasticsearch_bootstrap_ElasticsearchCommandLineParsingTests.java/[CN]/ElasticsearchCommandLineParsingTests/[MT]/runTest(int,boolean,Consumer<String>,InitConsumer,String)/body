{
  final MockTerminal terminal=new MockTerminal();
  try {
    final AtomicBoolean init=new AtomicBoolean();
    final int status=Elasticsearch.main(args,new Elasticsearch(){
      @Override void init(      final boolean daemonize,      final String pathHome,      final String pidFile,      final Map<String,String> esSettings){
        init.set(true);
        initConsumer.accept(daemonize,pathHome,pidFile,esSettings);
      }
    }
,terminal);
    assertThat(status,equalTo(expectedStatus));
    assertThat(init.get(),equalTo(expectedInit));
    outputConsumer.accept(terminal.getOutput());
  }
 catch (  Throwable t) {
    logger.info(terminal.getOutput());
    throw t;
  }
}
