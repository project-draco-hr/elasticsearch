{
  logger.info("-->  creating a snapshot is not blocked when an index is read only");
  try {
    enableIndexBlock(INDEX_NAME,SETTING_READ_ONLY);
    assertThat(client().admin().cluster().prepareCreateSnapshot(REPOSITORY_NAME,"snapshot-1").setIndices(COMMON_INDEX_NAME_MASK).setWaitForCompletion(true).get().status(),equalTo(RestStatus.OK));
  }
  finally {
    disableIndexBlock(INDEX_NAME,SETTING_READ_ONLY);
  }
  logger.info("-->  creating a snapshot is blocked when an index is blocked for reads");
  try {
    enableIndexBlock(INDEX_NAME,SETTING_BLOCKS_READ);
    assertBlocked(client().admin().cluster().prepareCreateSnapshot(REPOSITORY_NAME,"snapshot-2").setIndices(COMMON_INDEX_NAME_MASK),IndexMetaData.INDEX_READ_BLOCK);
    logger.info("-->  creating a snapshot is not blocked when an read-blocked index is not part of the snapshot");
    assertThat(client().admin().cluster().prepareCreateSnapshot(REPOSITORY_NAME,"snapshot-2").setIndices(OTHER_INDEX_NAME).setWaitForCompletion(true).get().status(),equalTo(RestStatus.OK));
  }
  finally {
    disableIndexBlock(INDEX_NAME,SETTING_BLOCKS_READ);
  }
}
