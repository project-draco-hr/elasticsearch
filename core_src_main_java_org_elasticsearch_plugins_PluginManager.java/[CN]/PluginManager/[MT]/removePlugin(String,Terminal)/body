{
  if (name == null) {
    throw new IllegalArgumentException("plugin name must be supplied with remove [name].");
  }
  PluginHandle pluginHandle=PluginHandle.parse(name);
  boolean removed=false;
  checkForForbiddenName(pluginHandle.name);
  Path pluginToDelete=pluginHandle.extractedDir(environment);
  if (Files.exists(pluginToDelete)) {
    terminal.println(VERBOSE,"Removing: %s",pluginToDelete);
    try {
      IOUtils.rm(pluginToDelete);
    }
 catch (    IOException ex) {
      throw new IOException("Unable to remove " + pluginHandle.name + ". Check file permissions on "+ pluginToDelete.toString(),ex);
    }
    removed=true;
  }
  Path binLocation=pluginHandle.binDir(environment);
  if (Files.exists(binLocation)) {
    terminal.println(VERBOSE,"Removing: %s",binLocation);
    try {
      IOUtils.rm(binLocation);
    }
 catch (    IOException ex) {
      throw new IOException("Unable to remove " + pluginHandle.name + ". Check file permissions on "+ binLocation.toString(),ex);
    }
    removed=true;
  }
  if (removed) {
    terminal.println("Removed %s",name);
  }
 else {
    terminal.println("Plugin %s not found. Run \"plugin list\" to get list of installed plugins.",name);
  }
}
