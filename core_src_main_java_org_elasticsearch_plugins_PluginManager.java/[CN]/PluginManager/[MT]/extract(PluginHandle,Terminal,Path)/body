{
  Path tmp=Files.createTempDirectory(environment.tmpFile(),null);
  Path root=tmp.resolve(pluginHandle.name);
  unzipPlugin(pluginFile,root);
  root=findPluginRoot(root);
  PluginInfo info=PluginInfo.readFromProperties(root);
  terminal.println("%s",info);
  if (info.isJvm()) {
    jarHellCheck(root,info.isIsolated());
  }
  pluginHandle=new PluginHandle(info.getName(),pluginHandle.version,pluginHandle.user);
  final Path extractLocation=pluginHandle.extractedDir(environment);
  if (Files.exists(extractLocation)) {
    throw new IOException("plugin directory " + extractLocation.toAbsolutePath() + " already exists. To update the plugin, uninstall it first using 'remove "+ pluginHandle.name+ "' command");
  }
  FileSystemUtils.copyDirectoryRecursively(root,extractLocation);
  terminal.println("Installed %s into %s",pluginHandle.name,extractLocation.toAbsolutePath());
  IOUtils.rm(tmp,pluginFile);
  Path binFile=extractLocation.resolve("bin");
  if (Files.isDirectory(binFile)) {
    Path toLocation=pluginHandle.binDir(environment);
    terminal.println(VERBOSE,"Found bin, moving to %s",toLocation.toAbsolutePath());
    if (Files.exists(toLocation)) {
      IOUtils.rm(toLocation);
    }
    try {
      FileSystemUtils.move(binFile,toLocation);
    }
 catch (    IOException e) {
      throw new IOException("Could not move [" + binFile + "] to ["+ toLocation+ "]",e);
    }
    if (Environment.getFileStore(toLocation).supportsFileAttributeView(PosixFileAttributeView.class)) {
      final Set<PosixFilePermission> executePerms=new HashSet<>();
      executePerms.add(PosixFilePermission.OWNER_READ);
      executePerms.add(PosixFilePermission.GROUP_READ);
      executePerms.add(PosixFilePermission.OTHERS_READ);
      executePerms.add(PosixFilePermission.OWNER_EXECUTE);
      executePerms.add(PosixFilePermission.GROUP_EXECUTE);
      executePerms.add(PosixFilePermission.OTHERS_EXECUTE);
      Files.walkFileTree(toLocation,new SimpleFileVisitor<Path>(){
        @Override public FileVisitResult visitFile(        Path file,        BasicFileAttributes attrs) throws IOException {
          if (attrs.isRegularFile()) {
            Set<PosixFilePermission> perms=Files.getPosixFilePermissions(file);
            perms.addAll(executePerms);
            Files.setPosixFilePermissions(file,perms);
          }
          return FileVisitResult.CONTINUE;
        }
      }
);
    }
 else {
      terminal.println(VERBOSE,"Skipping posix permissions - filestore doesn't support posix permission");
    }
    terminal.println(VERBOSE,"Installed %s into %s",pluginHandle.name,toLocation.toAbsolutePath());
  }
  Path configFile=extractLocation.resolve("config");
  if (Files.isDirectory(configFile)) {
    Path configDestLocation=pluginHandle.configDir(environment);
    terminal.println(VERBOSE,"Found config, moving to %s",configDestLocation.toAbsolutePath());
    moveFilesWithoutOverwriting(configFile,configDestLocation,".new");
    terminal.println(VERBOSE,"Installed %s into %s",pluginHandle.name,configDestLocation.toAbsolutePath());
  }
}
