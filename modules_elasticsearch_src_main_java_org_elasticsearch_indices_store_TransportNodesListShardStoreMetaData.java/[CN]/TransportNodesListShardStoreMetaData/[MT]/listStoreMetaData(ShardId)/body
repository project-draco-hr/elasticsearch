{
  IndexService indexService=indicesService.indexService(shardId.index().name());
  if (indexService != null) {
    InternalIndexShard indexShard=(InternalIndexShard)indexService.shard(shardId.id());
    if (indexShard != null) {
      return new StoreFilesMetaData(true,shardId,indexShard.store().list());
    }
  }
  IndexMetaData metaData=clusterService.state().metaData().index(shardId.index().name());
  if (metaData == null) {
    return new StoreFilesMetaData(false,shardId,ImmutableMap.<String,StoreFileMetaData>of());
  }
  String storeType=metaData.settings().get("index.store.type","fs");
  if (!storeType.contains("fs")) {
    return new StoreFilesMetaData(false,shardId,ImmutableMap.<String,StoreFileMetaData>of());
  }
  File indexFile=new File(new File(new File(new File(nodeEnv.nodeLocation(),"indices"),shardId.index().name()),Integer.toString(shardId.id())),"index");
  if (!indexFile.exists()) {
    return new StoreFilesMetaData(false,shardId,ImmutableMap.<String,StoreFileMetaData>of());
  }
  Map<String,StoreFileMetaData> files=Maps.newHashMap();
  for (  File file : indexFile.listFiles()) {
    files.put(file.getName(),new StoreFileMetaData(file.getName(),file.length(),file.lastModified()));
  }
  return new StoreFilesMetaData(false,shardId,files);
}
