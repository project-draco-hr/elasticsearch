{
  Map<String,Object> map=new HashMap<>();
  map.put("field","value");
  map.put("obj",new HashMap<String,Object>(){
{
      put("field","value");
      put("field2","value2");
    }
  }
);
  map.put("array",Arrays.asList(1,new HashMap<String,Object>(){
{
      put("field","value");
      put("field2","value2");
    }
  }
));
  Map<String,Object> filteredMap=XContentMapValues.filter(map,new String[]{"obj"},Strings.EMPTY_ARRAY);
  assertThat(filteredMap.size(),equalTo(1));
  assertThat(((Map<String,Object>)filteredMap.get("obj")).size(),equalTo(2));
  assertThat(((Map<String,Object>)filteredMap.get("obj")).get("field").toString(),equalTo("value"));
  assertThat(((Map<String,Object>)filteredMap.get("obj")).get("field2").toString(),equalTo("value2"));
  filteredMap=XContentMapValues.filter(map,new String[]{"obj"},new String[]{"*.field2"});
  assertThat(filteredMap.size(),equalTo(1));
  assertThat(((Map<String,Object>)filteredMap.get("obj")).size(),equalTo(1));
  assertThat(((Map<String,Object>)filteredMap.get("obj")).get("field").toString(),equalTo("value"));
  filteredMap=XContentMapValues.filter(map,new String[]{"array"},new String[]{});
  assertThat(filteredMap.size(),equalTo(1));
  assertThat(((List)filteredMap.get("array")).size(),equalTo(2));
  assertThat((Integer)((List)filteredMap.get("array")).get(0),equalTo(1));
  assertThat(((Map<String,Object>)((List)filteredMap.get("array")).get(1)).size(),equalTo(2));
  filteredMap=XContentMapValues.filter(map,new String[]{"array"},new String[]{"*.field2"});
  assertThat(filteredMap.size(),equalTo(1));
  assertThat(((List)filteredMap.get("array")).size(),equalTo(2));
  assertThat((Integer)((List)filteredMap.get("array")).get(0),equalTo(1));
  assertThat(((Map<String,Object>)((List)filteredMap.get("array")).get(1)).size(),equalTo(1));
  assertThat(((Map<String,Object>)((List)filteredMap.get("array")).get(1)).get("field").toString(),equalTo("value"));
}
