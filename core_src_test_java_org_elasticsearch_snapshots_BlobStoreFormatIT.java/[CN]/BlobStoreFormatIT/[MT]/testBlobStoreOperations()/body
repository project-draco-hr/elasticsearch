{
  BlobStore blobStore=createTestBlobStore();
  BlobContainer blobContainer=blobStore.blobContainer(BlobPath.cleanPath());
  ChecksumBlobStoreFormat<BlobObj> checksumJSON=new ChecksumBlobStoreFormat<>(BLOB_CODEC,"%s",BlobObj.PROTO,parseFieldMatcher,false,XContentType.JSON);
  ChecksumBlobStoreFormat<BlobObj> checksumSMILE=new ChecksumBlobStoreFormat<>(BLOB_CODEC,"%s",BlobObj.PROTO,parseFieldMatcher,false,XContentType.SMILE);
  ChecksumBlobStoreFormat<BlobObj> checksumSMILECompressed=new ChecksumBlobStoreFormat<>(BLOB_CODEC,"%s",BlobObj.PROTO,parseFieldMatcher,true,XContentType.SMILE);
  LegacyEmulationBlobStoreFormat<BlobObj> legacyJSON=new LegacyEmulationBlobStoreFormat<>("%s",BlobObj.PROTO,parseFieldMatcher,false,XContentType.JSON);
  LegacyEmulationBlobStoreFormat<BlobObj> legacySMILE=new LegacyEmulationBlobStoreFormat<>("%s",BlobObj.PROTO,parseFieldMatcher,false,XContentType.SMILE);
  LegacyEmulationBlobStoreFormat<BlobObj> legacySMILECompressed=new LegacyEmulationBlobStoreFormat<>("%s",BlobObj.PROTO,parseFieldMatcher,true,XContentType.SMILE);
  checksumJSON.write(new BlobObj("checksum json"),blobContainer,"check-json");
  checksumSMILE.write(new BlobObj("checksum smile"),blobContainer,"check-smile");
  checksumSMILECompressed.write(new BlobObj("checksum smile compressed"),blobContainer,"check-smile-comp");
  legacyJSON.write(new BlobObj("legacy json"),blobContainer,"legacy-json");
  legacySMILE.write(new BlobObj("legacy smile"),blobContainer,"legacy-smile");
  legacySMILECompressed.write(new BlobObj("legacy smile compressed"),blobContainer,"legacy-smile-comp");
  assertEquals(checksumJSON.read(blobContainer,"check-json").getText(),"checksum json");
  assertEquals(checksumSMILE.read(blobContainer,"check-json").getText(),"checksum json");
  assertEquals(checksumJSON.read(blobContainer,"check-smile").getText(),"checksum smile");
  assertEquals(checksumSMILE.read(blobContainer,"check-smile").getText(),"checksum smile");
  assertEquals(checksumJSON.read(blobContainer,"check-smile-comp").getText(),"checksum smile compressed");
  assertEquals(checksumSMILE.read(blobContainer,"check-smile-comp").getText(),"checksum smile compressed");
  assertEquals(legacyJSON.read(blobContainer,"legacy-json").getText(),"legacy json");
  assertEquals(legacySMILE.read(blobContainer,"legacy-json").getText(),"legacy json");
  assertEquals(legacyJSON.read(blobContainer,"legacy-smile").getText(),"legacy smile");
  assertEquals(legacySMILE.read(blobContainer,"legacy-smile").getText(),"legacy smile");
  assertEquals(legacyJSON.read(blobContainer,"legacy-smile-comp").getText(),"legacy smile compressed");
  assertEquals(legacySMILE.read(blobContainer,"legacy-smile-comp").getText(),"legacy smile compressed");
}
