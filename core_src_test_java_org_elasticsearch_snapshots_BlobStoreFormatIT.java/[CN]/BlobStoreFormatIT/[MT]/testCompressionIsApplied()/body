{
  BlobStore blobStore=createTestBlobStore();
  BlobContainer blobContainer=blobStore.blobContainer(BlobPath.cleanPath());
  StringBuilder veryRedundantText=new StringBuilder();
  for (int i=0; i < randomIntBetween(100,300); i++) {
    veryRedundantText.append("Blah ");
  }
  ChecksumBlobStoreFormat<BlobObj> checksumFormat=new ChecksumBlobStoreFormat<>(BLOB_CODEC,"%s",BlobObj.PROTO,parseFieldMatcher,false,randomBoolean() ? XContentType.SMILE : XContentType.JSON);
  ChecksumBlobStoreFormat<BlobObj> checksumFormatComp=new ChecksumBlobStoreFormat<>(BLOB_CODEC,"%s",BlobObj.PROTO,parseFieldMatcher,true,randomBoolean() ? XContentType.SMILE : XContentType.JSON);
  BlobObj blobObj=new BlobObj(veryRedundantText.toString());
  checksumFormatComp.write(blobObj,blobContainer,"blob-comp");
  checksumFormat.write(blobObj,blobContainer,"blob-not-comp");
  Map<String,BlobMetaData> blobs=blobContainer.listBlobsByPrefix("blob-");
  assertEquals(blobs.size(),2);
  assertThat(blobs.get("blob-not-comp").length(),greaterThan(blobs.get("blob-comp").length()));
}
