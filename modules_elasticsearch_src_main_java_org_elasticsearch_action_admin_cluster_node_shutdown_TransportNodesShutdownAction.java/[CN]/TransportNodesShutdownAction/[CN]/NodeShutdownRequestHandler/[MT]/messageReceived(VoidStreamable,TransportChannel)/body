{
  if (disabled) {
    throw new ElasticSearchIllegalStateException("Shutdown is disabled");
  }
  logger.info("shutting down in [{}]",delay);
  Thread t=new Thread(new Runnable(){
    @Override public void run(){
      try {
        Thread.sleep(delay.millis());
      }
 catch (      InterruptedException e) {
      }
      boolean shutdownWithWrapper=false;
      if (System.getProperty("elasticsearch-service") != null) {
        try {
          Class wrapperManager=settings.getClassLoader().loadClass("org.tanukisoftware.wrapper.WrapperManager");
          logger.info("initiating requested shutdown (using service)");
          wrapperManager.getMethod("stopAndReturn",int.class).invoke(null,0);
          shutdownWithWrapper=true;
        }
 catch (        Throwable e) {
          e.printStackTrace();
        }
      }
      if (!shutdownWithWrapper) {
        logger.info("initiating requested shutdown...");
        try {
          node.close();
        }
 catch (        Exception e) {
          logger.warn("Failed to shutdown",e);
        }
 finally {
          System.exit(0);
        }
      }
    }
  }
);
  t.start();
  channel.sendResponse(VoidStreamable.INSTANCE);
}
