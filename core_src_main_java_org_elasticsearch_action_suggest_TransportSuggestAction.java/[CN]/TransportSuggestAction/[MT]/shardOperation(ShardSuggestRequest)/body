{
  IndexService indexService=indicesService.indexServiceSafe(request.shardId().getIndex());
  IndexShard indexShard=indexService.getShard(request.shardId().id());
  ShardSuggestMetric suggestMetric=indexShard.getSuggestMetric();
  suggestMetric.preSuggest();
  long startTime=System.nanoTime();
  XContentParser parser=null;
  try (Engine.Searcher searcher=indexShard.acquireSearcher("suggest")){
    BytesReference suggest=request.suggest();
    if (suggest != null && suggest.length() > 0) {
      parser=XContentFactory.xContent(suggest).createParser(suggest);
      if (parser.nextToken() != XContentParser.Token.START_OBJECT) {
        throw new IllegalArgumentException("suggest content missing");
      }
      final SuggestionSearchContext context=suggestPhase.parseElement().parseInternal(parser,indexService.mapperService(),indexService.fieldData(),request.shardId());
      final Suggest result=suggestPhase.execute(context,searcher.searcher());
      return new ShardSuggestResponse(request.shardId(),result);
    }
    return new ShardSuggestResponse(request.shardId(),new Suggest());
  }
 catch (  Throwable ex) {
    throw new ElasticsearchException("failed to execute suggest",ex);
  }
 finally {
    if (parser != null) {
      parser.close();
    }
    suggestMetric.postSuggest(System.nanoTime() - startTime);
  }
}
