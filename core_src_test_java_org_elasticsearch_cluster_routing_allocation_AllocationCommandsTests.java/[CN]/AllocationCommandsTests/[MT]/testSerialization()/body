{
  AllocationCommands commands=new AllocationCommands(new AllocateEmptyPrimaryAllocationCommand(new ShardId("test",1),"node1",true),new AllocateStalePrimaryAllocationCommand(new ShardId("test",2),"node1",true),new AllocateReplicaAllocationCommand(new ShardId("test",2),"node1"),new MoveAllocationCommand(new ShardId("test",3),"node2","node3"),new CancelAllocationCommand(new ShardId("test",4),"node5",true));
  BytesStreamOutput bytes=new BytesStreamOutput();
  AllocationCommands.writeTo(commands,bytes);
  AllocationCommands sCommands=AllocationCommands.readFrom(StreamInput.wrap(bytes.bytes()));
  assertThat(sCommands.commands().size(),equalTo(5));
  assertThat(((AllocateEmptyPrimaryAllocationCommand)(sCommands.commands().get(0))).shardId(),equalTo(new ShardId("test",1)));
  assertThat(((AllocateEmptyPrimaryAllocationCommand)(sCommands.commands().get(0))).node(),equalTo("node1"));
  assertThat(((AllocateEmptyPrimaryAllocationCommand)(sCommands.commands().get(0))).acceptDataLoss(),equalTo(true));
  assertThat(((AllocateStalePrimaryAllocationCommand)(sCommands.commands().get(1))).shardId(),equalTo(new ShardId("test",2)));
  assertThat(((AllocateStalePrimaryAllocationCommand)(sCommands.commands().get(1))).node(),equalTo("node1"));
  assertThat(((AllocateStalePrimaryAllocationCommand)(sCommands.commands().get(1))).acceptDataLoss(),equalTo(true));
  assertThat(((AllocateReplicaAllocationCommand)(sCommands.commands().get(2))).shardId(),equalTo(new ShardId("test",2)));
  assertThat(((AllocateReplicaAllocationCommand)(sCommands.commands().get(2))).node(),equalTo("node1"));
  assertThat(((MoveAllocationCommand)(sCommands.commands().get(3))).shardId(),equalTo(new ShardId("test",3)));
  assertThat(((MoveAllocationCommand)(sCommands.commands().get(3))).fromNode(),equalTo("node2"));
  assertThat(((MoveAllocationCommand)(sCommands.commands().get(3))).toNode(),equalTo("node3"));
  assertThat(((CancelAllocationCommand)(sCommands.commands().get(4))).shardId(),equalTo(new ShardId("test",4)));
  assertThat(((CancelAllocationCommand)(sCommands.commands().get(4))).node(),equalTo("node5"));
  assertThat(((CancelAllocationCommand)(sCommands.commands().get(4))).allowPrimary(),equalTo(true));
}
