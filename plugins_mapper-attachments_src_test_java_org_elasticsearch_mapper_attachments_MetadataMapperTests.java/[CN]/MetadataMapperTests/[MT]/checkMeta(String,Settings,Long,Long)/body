{
  Settings settings=Settings.builder().put(this.testSettings).put(otherSettings).build();
  DocumentMapperParser mapperParser=MapperTestUtils.newMapperService(createTempDir(),settings,getIndicesModuleWithRegisteredAttachmentMapper()).documentMapperParser();
  String mapping=copyToStringFromClasspath("/org/elasticsearch/index/mapper/attachment/test/unit/metadata/test-mapping.json");
  DocumentMapper docMapper=mapperParser.parse("person",new CompressedXContent(mapping));
  byte[] html=copyToBytesFromClasspath("/org/elasticsearch/index/mapper/attachment/test/sample-files/" + filename);
  BytesReference json=jsonBuilder().startObject().startObject("file").field("_name",filename).field("_content",html).endObject().endObject().bytes();
  ParseContext.Document doc=docMapper.parse("person","person","1",json).rootDoc();
  assertThat(doc.get(docMapper.mappers().getMapper("file.content").fieldType().name()),containsString("World"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.name").fieldType().name()),equalTo(filename));
  if (expectedDate == null) {
    assertThat(doc.getField(docMapper.mappers().getMapper("file.date").fieldType().name()),nullValue());
  }
 else {
    assertThat(doc.getField(docMapper.mappers().getMapper("file.date").fieldType().name()).numericValue().longValue(),is(expectedDate));
  }
  assertThat(doc.get(docMapper.mappers().getMapper("file.title").fieldType().name()),equalTo("Hello"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.author").fieldType().name()),equalTo("kimchy"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.keywords").fieldType().name()),equalTo("elasticsearch,cool,bonsai"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.content_type").fieldType().name()),startsWith("text/html;"));
  if (expectedLength == null) {
    assertNull(doc.getField(docMapper.mappers().getMapper("file.content_length").fieldType().name()).numericValue().longValue());
  }
 else {
    assertThat(doc.getField(docMapper.mappers().getMapper("file.content_length").fieldType().name()).numericValue().longValue(),greaterThan(0L));
  }
}
