{
  Settings settings=Settings.builder().put(this.testSettings).put(otherSettings).build();
  DocumentMapperParser mapperParser=MapperTestUtils.newMapperService(createTempDir(),settings).documentMapperParser();
  String mapping=copyToStringFromClasspath("/org/elasticsearch/index/mapper/attachment/test/unit/metadata/test-mapping.json");
  DocumentMapper docMapper=mapperParser.parse(mapping);
  byte[] html=copyToBytesFromClasspath("/org/elasticsearch/index/mapper/attachment/test/sample-files/" + filename);
  BytesReference json=jsonBuilder().startObject().startObject("file").field("_name",filename).field("_content",html).endObject().endObject().bytes();
  ParseContext.Document doc=docMapper.parse("person","person","1",json).rootDoc();
  assertThat(doc.get(docMapper.mappers().getMapper("file.content").fieldType().names().indexName()),containsString("World"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.name").fieldType().names().indexName()),equalTo(filename));
  if (expectedDate == null) {
    assertThat(doc.getField(docMapper.mappers().getMapper("file.date").fieldType().names().indexName()),nullValue());
  }
 else {
    assertThat(doc.getField(docMapper.mappers().getMapper("file.date").fieldType().names().indexName()).numericValue().longValue(),is(expectedDate));
  }
  assertThat(doc.get(docMapper.mappers().getMapper("file.title").fieldType().names().indexName()),equalTo("Hello"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.author").fieldType().names().indexName()),equalTo("kimchy"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.keywords").fieldType().names().indexName()),equalTo("elasticsearch,cool,bonsai"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.content_type").fieldType().names().indexName()),startsWith("text/html;"));
  assertThat(doc.getField(docMapper.mappers().getMapper("file.content_length").fieldType().names().indexName()).numericValue().longValue(),is(expectedLength));
}
