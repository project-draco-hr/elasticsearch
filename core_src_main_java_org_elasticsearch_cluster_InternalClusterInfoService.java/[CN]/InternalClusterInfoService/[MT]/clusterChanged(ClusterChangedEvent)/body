{
  if (!this.enabled) {
    return;
  }
  boolean dataNodeAdded=false;
  for (  DiscoveryNode addedNode : event.nodesDelta().addedNodes()) {
    if (addedNode.dataNode()) {
      dataNodeAdded=true;
      break;
    }
  }
  if (this.isMaster && dataNodeAdded && clusterService.state().getNodes().getDataNodes().size() > 1) {
    if (logger.isDebugEnabled()) {
      logger.debug("data node was added, retrieving new cluster info");
    }
    updateOnce();
  }
  if (this.isMaster && event.nodesRemoved()) {
    for (    DiscoveryNode removedNode : event.nodesDelta().removedNodes()) {
      if (removedNode.dataNode()) {
        if (logger.isTraceEnabled()) {
          logger.trace("Removing node from cluster info: {}",removedNode.getId());
        }
        if (leastAvailableSpaceUsages.containsKey(removedNode.getId())) {
          Map<String,DiskUsage> newMaxUsages=new HashMap<>(leastAvailableSpaceUsages);
          newMaxUsages.remove(removedNode.getId());
          leastAvailableSpaceUsages=Collections.unmodifiableMap(newMaxUsages);
        }
        if (mostAvailableSpaceUsages.containsKey(removedNode.getId())) {
          Map<String,DiskUsage> newMinUsages=new HashMap<>(mostAvailableSpaceUsages);
          newMinUsages.remove(removedNode.getId());
          mostAvailableSpaceUsages=Collections.unmodifiableMap(newMinUsages);
        }
      }
    }
  }
}
