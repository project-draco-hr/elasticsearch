{
  createIndex("idx");
  createIndex("idx_unmapped");
  ensureSearchable();
  final int numDocs=randomInt(5);
  IndexRequestBuilder[] builders=new IndexRequestBuilder[numDocs];
  for (int i=0; i < builders.length; i++) {
    final boolean singleValue=randomBoolean();
    if (singleValue) {
      numSingleTrues++;
    }
 else {
      numSingleFalses++;
    }
    final boolean[] multiValue;
switch (randomInt(3)) {
case 0:
      multiValue=new boolean[0];
    break;
case 1:
  numMultiFalses++;
multiValue=new boolean[]{false};
break;
case 2:
numMultiTrues++;
multiValue=new boolean[]{true};
break;
case 3:
numMultiFalses++;
numMultiTrues++;
multiValue=new boolean[]{false,true};
break;
default :
throw new AssertionError();
}
builders[i]=client().prepareIndex("idx","type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,singleValue).field(MULTI_VALUED_FIELD_NAME,multiValue).endObject());
}
indexRandom(true,builders);
}
