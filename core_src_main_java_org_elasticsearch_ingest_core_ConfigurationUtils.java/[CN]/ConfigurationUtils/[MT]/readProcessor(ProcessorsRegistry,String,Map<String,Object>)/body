{
  Processor.Factory factory=processorRegistry.getProcessorFactory(type);
  if (factory != null) {
    List<Map<String,Map<String,Object>>> onFailureProcessorConfigs=ConfigurationUtils.readOptionalList(null,null,config,Pipeline.ON_FAILURE_KEY);
    List<Processor> onFailureProcessors=readProcessorConfigs(onFailureProcessorConfigs,processorRegistry);
    Processor processor;
    processor=factory.create(config);
    if (!config.isEmpty()) {
      throw new ElasticsearchParseException("processor [{}] doesn't support one or more provided configuration parameters {}",type,Arrays.toString(config.keySet().toArray()));
    }
    if (onFailureProcessors.isEmpty()) {
      return processor;
    }
    return new CompoundProcessor(Collections.singletonList(processor),onFailureProcessors);
  }
  throw new ElasticsearchParseException("No processor type exists with name [" + type + "]");
}
