{
  fillSingleValueWithMissing();
  IndexNumericFieldData indexFieldData=getForField("value");
  AtomicNumericFieldData fieldData=indexFieldData.load(refreshReader());
  SortedNumericDocValues longValues=fieldData.getLongValues();
  assertThat(FieldData.isMultiValued(longValues),equalTo(false));
  longValues.setDocument(0);
  assertThat(longValues.count(),equalTo(1));
  assertThat(longValues.valueAt(0),equalTo(2l));
  longValues.setDocument(1);
  assertThat(longValues.count(),equalTo(0));
  longValues.setDocument(2);
  assertThat(longValues.count(),equalTo(1));
  assertThat(longValues.valueAt(0),equalTo(3l));
  SortedNumericDoubleValues doubleValues=fieldData.getDoubleValues();
  assertThat(FieldData.isMultiValued(doubleValues),equalTo(false));
  doubleValues.setDocument(0);
  assertThat(1,equalTo(doubleValues.count()));
  assertThat(doubleValues.valueAt(0),equalTo(2d));
  doubleValues.setDocument(1);
  assertThat(0,equalTo(doubleValues.count()));
  doubleValues.setDocument(2);
  assertThat(1,equalTo(doubleValues.count()));
  assertThat(doubleValues.valueAt(0),equalTo(3d));
  IndexSearcher searcher=new IndexSearcher(readerContext.reader());
  TopFieldDocs topDocs;
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null,MultiValueMode.MIN,null))));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(1));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null,MultiValueMode.MAX,null),true)));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(1));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource("_first",MultiValueMode.MIN,null))));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(1));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(2));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource("_first",MultiValueMode.MAX,null),true)));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(1));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(0));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource("1",MultiValueMode.MIN,null))));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(1));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(2));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource("1",MultiValueMode.MAX,null),true)));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(1));
}
