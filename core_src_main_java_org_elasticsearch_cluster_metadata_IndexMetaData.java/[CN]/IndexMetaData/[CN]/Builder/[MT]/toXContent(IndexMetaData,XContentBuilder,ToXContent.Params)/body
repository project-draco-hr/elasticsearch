{
  builder.startObject(indexMetaData.getIndex(),XContentBuilder.FieldCaseConversion.NONE);
  builder.field("version",indexMetaData.getVersion());
  builder.field("state",indexMetaData.getState().toString().toLowerCase(Locale.ENGLISH));
  boolean binary=params.paramAsBoolean("binary",false);
  builder.startObject("settings");
  for (  Map.Entry<String,String> entry : indexMetaData.getSettings().getAsMap().entrySet()) {
    builder.field(entry.getKey(),entry.getValue());
  }
  builder.endObject();
  builder.startArray("mappings");
  for (  ObjectObjectCursor<String,MappingMetaData> cursor : indexMetaData.getMappings()) {
    if (binary) {
      builder.value(cursor.value.source().compressed());
    }
 else {
      byte[] data=cursor.value.source().uncompressed();
      XContentParser parser=XContentFactory.xContent(data).createParser(data);
      Map<String,Object> mapping=parser.mapOrdered();
      parser.close();
      builder.map(mapping);
    }
  }
  builder.endArray();
  for (  ObjectObjectCursor<String,Custom> cursor : indexMetaData.getCustoms()) {
    builder.startObject(cursor.key,XContentBuilder.FieldCaseConversion.NONE);
    cursor.value.toXContent(builder,params);
    builder.endObject();
  }
  builder.startObject("aliases");
  for (  ObjectCursor<AliasMetaData> cursor : indexMetaData.getAliases().values()) {
    AliasMetaData.Builder.toXContent(cursor.value,builder,params);
  }
  builder.endObject();
  builder.endObject();
}
