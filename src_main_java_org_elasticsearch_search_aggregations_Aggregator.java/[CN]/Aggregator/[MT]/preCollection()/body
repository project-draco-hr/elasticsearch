{
  Iterable<Aggregator> collectables=Iterables.filter(Arrays.asList(subAggregators),COLLECTABLE_AGGREGATOR);
  List<BucketCollector> nextPassCollectors=new ArrayList<>();
  List<BucketCollector> thisPassCollectors=new ArrayList<>();
  for (  Aggregator aggregator : collectables) {
    if (shouldDefer(aggregator)) {
      nextPassCollectors.add(aggregator);
    }
 else {
      thisPassCollectors.add(aggregator);
    }
  }
  if (nextPassCollectors.size() > 0) {
    BucketCollector deferreds=BucketCollector.wrap(nextPassCollectors);
    recordingWrapper=new DeferringBucketCollector(deferreds,context);
    context.registerReaderContextAware(recordingWrapper);
    thisPassCollectors.add(recordingWrapper);
  }
  collectableSubAggregators=BucketCollector.wrap(thisPassCollectors);
}
