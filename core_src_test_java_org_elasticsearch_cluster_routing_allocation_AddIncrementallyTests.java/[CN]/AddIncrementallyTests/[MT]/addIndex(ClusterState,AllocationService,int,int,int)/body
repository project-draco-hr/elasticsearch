{
  MetaData.Builder metaDataBuilder=MetaData.builder(clusterState.getMetaData());
  RoutingTable.Builder routingTableBuilder=RoutingTable.builder(clusterState.routingTable());
  IndexMetaData.Builder index=IndexMetaData.builder("test" + indexOrdinal).settings(settings(Version.CURRENT)).numberOfShards(numberOfShards).numberOfReplicas(numberOfReplicas);
  IndexMetaData imd=index.build();
  metaDataBuilder=metaDataBuilder.put(imd,true);
  routingTableBuilder.addAsNew(imd);
  MetaData metaData=metaDataBuilder.build();
  clusterState=ClusterState.builder(clusterState).metaData(metaData).routingTable(routingTableBuilder.build()).build();
  clusterState=service.reroute(clusterState,"reroute");
  logger.info("restart all the primary shards, replicas will start initializing");
  RoutingNodes routingNodes=clusterState.getRoutingNodes();
  clusterState=service.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING));
  logger.info("start the replica shards");
  routingNodes=clusterState.getRoutingNodes();
  clusterState=service.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING));
  logger.info("complete rebalancing");
  return applyStartedShardsUntilNoChange(clusterState,service);
}
