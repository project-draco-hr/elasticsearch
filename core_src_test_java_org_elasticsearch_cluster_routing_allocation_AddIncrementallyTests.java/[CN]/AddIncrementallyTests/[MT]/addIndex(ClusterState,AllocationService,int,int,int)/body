{
  MetaData.Builder metaDataBuilder=MetaData.builder(clusterState.getMetaData());
  RoutingTable.Builder routingTableBuilder=RoutingTable.builder(clusterState.routingTable());
  IndexMetaData.Builder index=IndexMetaData.builder("test" + indexOrdinal).settings(settings(Version.CURRENT)).numberOfShards(numberOfShards).numberOfReplicas(numberOfReplicas);
  IndexMetaData imd=index.build();
  metaDataBuilder=metaDataBuilder.put(imd,true);
  routingTableBuilder.addAsNew(imd);
  MetaData metaData=metaDataBuilder.build();
  RoutingTable routingTable=routingTableBuilder.build();
  clusterState=ClusterState.builder(clusterState).metaData(metaData).routingTable(routingTable).build();
  routingTable=service.reroute(clusterState).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  RoutingNodes routingNodes=clusterState.getRoutingNodes();
  logger.info("restart all the primary shards, replicas will start initializing");
  routingNodes=clusterState.getRoutingNodes();
  routingTable=service.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING)).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  routingNodes=clusterState.getRoutingNodes();
  logger.info("start the replica shards");
  routingNodes=clusterState.getRoutingNodes();
  routingTable=service.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING)).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  routingNodes=clusterState.getRoutingNodes();
  logger.info("complete rebalancing");
  RoutingTable prev=routingTable;
  while (true) {
    logger.debug("ClusterState: {}",clusterState.getRoutingNodes().prettyPrint());
    routingTable=service.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING)).routingTable();
    clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
    routingNodes=clusterState.getRoutingNodes();
    if (routingTable == prev)     break;
    prev=routingTable;
  }
  return clusterState;
}
