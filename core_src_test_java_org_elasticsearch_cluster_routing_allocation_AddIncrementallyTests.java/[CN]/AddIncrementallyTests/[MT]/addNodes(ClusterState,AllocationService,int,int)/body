{
  logger.info("now, start [{}] more node, check that rebalancing will happen because we set it to always",numNodes);
  DiscoveryNodes.Builder nodes=DiscoveryNodes.builder(clusterState.nodes());
  for (int i=0; i < numNodes; i++) {
    nodes.add(newNode("node" + (i + nodeOffset)));
  }
  clusterState=ClusterState.builder(clusterState).nodes(nodes.build()).build();
  RoutingTable routingTable=service.reroute(clusterState,"reroute").routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  RoutingNodes routingNodes=clusterState.getRoutingNodes();
  RoutingTable prev=routingTable;
  while (true) {
    logger.debug("ClusterState: {}",clusterState.getRoutingNodes().prettyPrint());
    routingTable=service.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING)).routingTable();
    clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
    routingNodes=clusterState.getRoutingNodes();
    if (routingTable == prev)     break;
    prev=routingTable;
  }
  return clusterState;
}
