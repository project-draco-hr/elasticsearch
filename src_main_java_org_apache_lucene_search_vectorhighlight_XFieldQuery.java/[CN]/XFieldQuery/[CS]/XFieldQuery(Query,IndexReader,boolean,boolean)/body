{
  this.fieldMatch=fieldMatch;
  Set<Query> flatQueries=new LinkedHashSet<Query>();
  flatten(query,reader,flatQueries);
  saveTerms(flatQueries,reader);
  Collection<Query> expandQueries=expand(flatQueries);
  for (  Query flatQuery : expandQueries) {
    QueryPhraseMap rootMap=getRootMap(flatQuery);
    rootMap.add(flatQuery,reader);
    if (!phraseHighlight && flatQuery instanceof PhraseQuery) {
      PhraseQuery pq=(PhraseQuery)flatQuery;
      if (pq.getTerms().length > 1) {
        for (        Term term : pq.getTerms())         rootMap.addTerm(term,flatQuery.getBoost());
      }
    }
  }
}
