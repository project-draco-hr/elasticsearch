{
  values=new double[numHits];
  this.fieldName=fieldName;
  this.lat=lat;
  this.lon=lon;
  this.unit=unit;
  this.geoDistance=geoDistance;
  this.fieldDataCache=fieldDataCache;
  FieldMapper mapper=mapperService.smartNameFieldMapper(fieldName + XContentGeoPointFieldMapper.Names.LAT_SUFFIX);
  if (mapper == null) {
    throw new ElasticSearchIllegalArgumentException("No mapping found for field [" + fieldName + "] for geo distance sort");
  }
  this.indexLatFieldName=mapper.names().indexName();
  mapper=mapperService.smartNameFieldMapper(fieldName + XContentGeoPointFieldMapper.Names.LON_SUFFIX);
  if (mapper == null) {
    throw new ElasticSearchIllegalArgumentException("No mapping found for field [" + fieldName + "] for geo distance sort");
  }
  this.indexLonFieldName=mapper.names().indexName();
  this.fieldDataType=mapper.fieldDataType();
}
