{
  Explanation functionExplanation=getFiltersFunctionScoreExplanation(searcher,RANDOM_SCORE_FUNCTION);
  checkFiltersFunctionScoreExplanation(functionExplanation,"random score function (seed: 0)",0);
  assertThat(functionExplanation.getDetails()[0].getDetails()[0].getDetails()[1].getDetails().length,equalTo(0));
  functionExplanation=getFiltersFunctionScoreExplanation(searcher,FIELD_VALUE_FACTOR_FUNCTION);
  checkFiltersFunctionScoreExplanation(functionExplanation,"field value function: ln(doc['test'].value?:1.0 * factor=1.0)",0);
  assertThat(functionExplanation.getDetails()[0].getDetails()[0].getDetails()[1].getDetails().length,equalTo(0));
  functionExplanation=getFiltersFunctionScoreExplanation(searcher,GAUSS_DECAY_FUNCTION);
  checkFiltersFunctionScoreExplanation(functionExplanation,"Function for field test:",0);
  assertThat(functionExplanation.getDetails()[0].getDetails()[0].getDetails()[1].getDetails()[0].toString(),equalTo("0.1 = " + "exp(-0.5*pow(MAX[Math.max(Math.abs(1.0(=doc value) - 0.0(=origin))) - 0.0(=offset), 0)],2.0)/0.21714724095162594)\n"));
  assertThat(functionExplanation.getDetails()[0].getDetails()[0].getDetails()[1].getDetails()[0].getDetails().length,equalTo(0));
  functionExplanation=getFiltersFunctionScoreExplanation(searcher,EXP_DECAY_FUNCTION);
  checkFiltersFunctionScoreExplanation(functionExplanation,"Function for field test:",0);
  assertThat(functionExplanation.getDetails()[0].getDetails()[0].getDetails()[1].getDetails()[0].toString(),equalTo("0.1 = exp(- MAX[Math.max(Math.abs(1.0(=doc value) - 0.0(=origin))) - 0.0(=offset), 0)] * 2.3025850929940455)\n"));
  assertThat(functionExplanation.getDetails()[0].getDetails()[0].getDetails()[1].getDetails()[0].getDetails().length,equalTo(0));
  functionExplanation=getFiltersFunctionScoreExplanation(searcher,LIN_DECAY_FUNCTION);
  checkFiltersFunctionScoreExplanation(functionExplanation,"Function for field test:",0);
  assertThat(functionExplanation.getDetails()[0].getDetails()[0].getDetails()[1].getDetails()[0].toString(),equalTo("0.1 = max(0.0, ((1.1111111111111112 - MAX[Math.max(Math.abs(1.0(=doc value) - 0.0(=origin)))" + " - 0.0(=offset), 0)])/1.1111111111111112)\n"));
  assertThat(functionExplanation.getDetails()[0].getDetails()[0].getDetails()[1].getDetails()[0].getDetails().length,equalTo(0));
  functionExplanation=getFiltersFunctionScoreExplanation(searcher,RANDOM_SCORE_FUNCTION,FIELD_VALUE_FACTOR_FUNCTION,GAUSS_DECAY_FUNCTION,EXP_DECAY_FUNCTION,LIN_DECAY_FUNCTION);
  checkFiltersFunctionScoreExplanation(functionExplanation,"random score function (seed: 0)",0);
  assertThat(functionExplanation.getDetails()[0].getDetails()[0].getDetails()[1].getDetails().length,equalTo(0));
  checkFiltersFunctionScoreExplanation(functionExplanation,"field value function: ln(doc['test'].value?:1.0 * factor=1.0)",1);
  assertThat(functionExplanation.getDetails()[0].getDetails()[1].getDetails()[1].getDetails().length,equalTo(0));
  checkFiltersFunctionScoreExplanation(functionExplanation,"Function for field test:",2);
  assertThat(functionExplanation.getDetails()[0].getDetails()[2].getDetails()[1].getDetails()[0].toString(),equalTo("0.1 = " + "exp(-0.5*pow(MAX[Math.max(Math.abs(1.0(=doc value) - 0.0(=origin))) - 0.0(=offset), 0)],2.0)/0.21714724095162594)\n"));
  assertThat(functionExplanation.getDetails()[0].getDetails()[2].getDetails()[1].getDetails()[0].getDetails().length,equalTo(0));
  checkFiltersFunctionScoreExplanation(functionExplanation,"Function for field test:",3);
  assertThat(functionExplanation.getDetails()[0].getDetails()[3].getDetails()[1].getDetails()[0].toString(),equalTo("0.1 = exp(- " + "MAX[Math.max(Math.abs(1.0(=doc value) - 0.0(=origin))) - 0.0(=offset), 0)] * 2.3025850929940455)\n"));
  assertThat(functionExplanation.getDetails()[0].getDetails()[3].getDetails()[1].getDetails()[0].getDetails().length,equalTo(0));
  checkFiltersFunctionScoreExplanation(functionExplanation,"Function for field test:",4);
  assertThat(functionExplanation.getDetails()[0].getDetails()[4].getDetails()[1].getDetails()[0].toString(),equalTo("0.1 = max(0.0, ((1.1111111111111112 - MAX[Math.max(Math.abs(1.0(=doc value) - 0.0(=origin)))" + " - 0.0(=offset), 0)])/1.1111111111111112)\n"));
  assertThat(functionExplanation.getDetails()[0].getDetails()[4].getDetails()[1].getDetails()[0].getDetails().length,equalTo(0));
}
