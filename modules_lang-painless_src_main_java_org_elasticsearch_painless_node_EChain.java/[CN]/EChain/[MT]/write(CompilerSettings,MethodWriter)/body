{
  if (cat) {
    adapter.writeNewStrings();
  }
  final ALink last=links.get(links.size() - 1);
  for (  final ALink link : links) {
    link.write(settings,adapter);
    if (link == last && link.store) {
      if (cat) {
        adapter.writeDup(link.size,1);
        link.load(settings,adapter);
        adapter.writeAppendStrings(link.after);
        expression.write(settings,adapter);
        if (!(expression instanceof EBinary) || ((EBinary)expression).operation != Operation.ADD || expression.actual.sort != Sort.STRING) {
          adapter.writeAppendStrings(expression.actual);
        }
        adapter.writeToStrings();
        adapter.writeCast(back);
        if (link.load) {
          adapter.writeDup(link.after.sort.size,link.size);
        }
        link.store(settings,adapter);
      }
 else       if (operation != null) {
        adapter.writeDup(link.size,0);
        link.load(settings,adapter);
        if (link.load && post) {
          adapter.writeDup(link.after.sort.size,link.size);
        }
        adapter.writeCast(there);
        expression.write(settings,adapter);
        adapter.writeBinaryInstruction(location,promote,operation);
        adapter.writeCast(back);
        if (link.load && !post) {
          adapter.writeDup(link.after.sort.size,link.size);
        }
        link.store(settings,adapter);
      }
 else {
        expression.write(settings,adapter);
        if (link.load) {
          adapter.writeDup(link.after.sort.size,link.size);
        }
        link.store(settings,adapter);
      }
    }
 else {
      link.load(settings,adapter);
    }
  }
  adapter.writeBranch(tru,fals);
}
