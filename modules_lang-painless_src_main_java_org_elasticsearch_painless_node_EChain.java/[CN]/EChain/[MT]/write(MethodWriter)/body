{
  writer.writeDebugInfo(location);
  if (cat) {
    writer.writeNewStrings();
  }
  ALink last=links.get(links.size() - 1);
  for (  ALink link : links) {
    link.write(writer);
    if (link == last && link.store) {
      if (cat) {
        writer.writeDup(link.size,1);
        link.load(writer);
        writer.writeAppendStrings(link.after);
        expression.write(writer);
        if (!(expression instanceof EBinary) || ((EBinary)expression).operation != Operation.ADD || expression.actual.sort != Sort.STRING) {
          writer.writeAppendStrings(expression.actual);
        }
        writer.writeToStrings();
        writer.writeCast(back);
        if (link.load) {
          writer.writeDup(link.after.sort.size,link.size);
        }
        link.store(writer);
      }
 else       if (operation != null) {
        writer.writeDup(link.size,0);
        link.load(writer);
        if (link.load && post) {
          writer.writeDup(link.after.sort.size,link.size);
        }
        writer.writeCast(there);
        expression.write(writer);
        if (promote.sort == Sort.DEF) {
          writer.writeDynamicBinaryInstruction(location,promote,Definition.DEF_TYPE,Definition.DEF_TYPE,operation);
        }
 else {
          writer.writeBinaryInstruction(location,promote,operation);
        }
        writer.writeCast(back);
        if (link.load && !post) {
          writer.writeDup(link.after.sort.size,link.size);
        }
        link.store(writer);
      }
 else {
        expression.write(writer);
        if (link.load) {
          writer.writeDup(link.after.sort.size,link.size);
        }
        link.store(writer);
      }
    }
 else {
      link.load(writer);
    }
  }
  writer.writeBranch(tru,fals);
}
