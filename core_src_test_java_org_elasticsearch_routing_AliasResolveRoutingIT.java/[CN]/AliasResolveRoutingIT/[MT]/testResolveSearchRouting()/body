{
  createIndex("test1");
  createIndex("test2");
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();
  client().admin().indices().prepareAliases().addAliasAction(newAddAliasAction("test1","alias")).execute().actionGet();
  client().admin().indices().prepareAliases().addAliasAction(newAddAliasAction("test1","alias10").routing("0")).execute().actionGet();
  client().admin().indices().prepareAliases().addAliasAction(newAddAliasAction("test2","alias20").routing("0")).execute().actionGet();
  client().admin().indices().prepareAliases().addAliasAction(newAddAliasAction("test2","alias21").routing("1")).execute().actionGet();
  client().admin().indices().prepareAliases().addAliasAction(newAddAliasAction("test1","alias0").routing("0")).execute().actionGet();
  client().admin().indices().prepareAliases().addAliasAction(newAddAliasAction("test2","alias0").routing("0")).execute().actionGet();
  ClusterState state=clusterService().state();
  IndexNameExpressionResolver indexNameExpressionResolver=internalCluster().getInstance(IndexNameExpressionResolver.class);
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,null,"alias"),nullValue());
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,"0,1","alias"),equalTo(newMap("test1",newSet("0","1"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,null,"alias10"),equalTo(newMap("test1",newSet("0"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,null,"alias10"),equalTo(newMap("test1",newSet("0"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,"0","alias10"),equalTo(newMap("test1",newSet("0"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,"1","alias10"),nullValue());
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,null,"alias0"),equalTo(newMap("test1",newSet("0"),"test2",newSet("0"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,null,new String[]{"alias10","alias20"}),equalTo(newMap("test1",newSet("0"),"test2",newSet("0"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,null,new String[]{"alias10","alias21"}),equalTo(newMap("test1",newSet("0"),"test2",newSet("1"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,null,new String[]{"alias20","alias21"}),equalTo(newMap("test2",newSet("0","1"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,null,new String[]{"test1","alias10"}),nullValue());
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,null,new String[]{"alias10","test1"}),nullValue());
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,"0",new String[]{"alias10","alias20"}),equalTo(newMap("test1",newSet("0"),"test2",newSet("0"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,"0,1",new String[]{"alias10","alias20"}),equalTo(newMap("test1",newSet("0"),"test2",newSet("0"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,"1",new String[]{"alias10","alias20"}),nullValue());
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,"0",new String[]{"alias10","alias21"}),equalTo(newMap("test1",newSet("0"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,"1",new String[]{"alias10","alias21"}),equalTo(newMap("test2",newSet("1"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,"0,1,2",new String[]{"alias10","alias21"}),equalTo(newMap("test1",newSet("0"),"test2",newSet("1"))));
  assertThat(indexNameExpressionResolver.resolveSearchRouting(state,"0,1,2",new String[]{"test1","alias10","alias21"}),equalTo(newMap("test1",newSet("0","1","2"),"test2",newSet("1"))));
}
