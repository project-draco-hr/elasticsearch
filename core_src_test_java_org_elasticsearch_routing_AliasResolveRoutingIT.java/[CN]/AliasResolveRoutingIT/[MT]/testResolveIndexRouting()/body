{
  createIndex("test1");
  createIndex("test2");
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();
  client().admin().indices().prepareAliases().addAliasAction(AliasActions.add().index("test1").alias("alias")).addAliasAction(AliasActions.add().index("test1").alias("alias10").routing("0")).addAliasAction(AliasActions.add().index("test1").alias("alias110").searchRouting("1,0")).addAliasAction(AliasActions.add().index("test1").alias("alias12").routing("2")).addAliasAction(AliasActions.add().index("test2").alias("alias20").routing("0")).addAliasAction(AliasActions.add().index("test2").alias("alias21").routing("1")).addAliasAction(AliasActions.add().index("test1").alias("alias0").routing("0")).addAliasAction(AliasActions.add().index("test2").alias("alias0").routing("0")).get();
  assertThat(clusterService().state().metaData().resolveIndexRouting(null,null,"test1"),nullValue());
  assertThat(clusterService().state().metaData().resolveIndexRouting(null,null,"alias"),nullValue());
  assertThat(clusterService().state().metaData().resolveIndexRouting(null,null,"test1"),nullValue());
  assertThat(clusterService().state().metaData().resolveIndexRouting(null,null,"alias10"),equalTo("0"));
  assertThat(clusterService().state().metaData().resolveIndexRouting(null,null,"alias20"),equalTo("0"));
  assertThat(clusterService().state().metaData().resolveIndexRouting(null,null,"alias21"),equalTo("1"));
  assertThat(clusterService().state().metaData().resolveIndexRouting(null,"3","test1"),equalTo("3"));
  assertThat(clusterService().state().metaData().resolveIndexRouting(null,"0","alias10"),equalTo("0"));
  assertThat(clusterService().state().metaData().resolveIndexRouting("1",null,"alias10"),equalTo("0"));
  try {
    clusterService().state().metaData().resolveIndexRouting(null,"1","alias10");
    fail("should fail");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    clusterService().state().metaData().resolveIndexRouting(null,null,"alias0");
    fail("should fail");
  }
 catch (  IllegalArgumentException ex) {
  }
}
