{
  if (line.length() == 0 || line.charAt(0) == '#') {
    return;
  }
  CharsRef inputs[];
  CharsRef outputs[];
  String sides[]=split(line,"=>");
  if (sides.length > 1) {
    if (sides.length != 2) {
      throw new IllegalArgumentException("more than one explicit mapping specified on the same line");
    }
    String inputStrings[]=split(sides[0],",");
    inputs=new CharsRef[inputStrings.length];
    for (int i=0; i < inputs.length; i++) {
      inputs[i]=analyze(analyzer,unescape(inputStrings[i]).trim(),new CharsRef());
    }
    String outputStrings[]=split(sides[1],",");
    outputs=new CharsRef[outputStrings.length];
    for (int i=0; i < outputs.length; i++) {
      outputs[i]=analyze(analyzer,unescape(outputStrings[i]).trim(),new CharsRef());
    }
  }
 else {
    String inputStrings[]=split(line,",");
    inputs=new CharsRef[inputStrings.length];
    for (int i=0; i < inputs.length; i++) {
      inputs[i]=analyze(analyzer,unescape(inputStrings[i]).trim(),new CharsRef());
    }
    if (expand) {
      outputs=inputs;
    }
 else {
      outputs=new CharsRef[1];
      outputs[0]=inputs[0];
    }
  }
  for (int i=0; i < inputs.length; i++) {
    for (int j=0; j < outputs.length; j++) {
      add(inputs[i],outputs[j],false);
    }
  }
}
