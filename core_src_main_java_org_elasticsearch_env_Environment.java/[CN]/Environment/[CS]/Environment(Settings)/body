{
  this.settings=settings;
  final Path homeFile;
  if (settings.get("path.home") != null) {
    homeFile=PathUtils.get(cleanPath(settings.get("path.home")));
  }
 else {
    throw new IllegalStateException("path.home is not configured");
  }
  if (settings.get("path.conf") != null) {
    configFile=PathUtils.get(cleanPath(settings.get("path.conf")));
  }
 else {
    configFile=homeFile.resolve("config");
  }
  if (settings.get("path.scripts") != null) {
    scriptsFile=PathUtils.get(cleanPath(settings.get("path.scripts")));
  }
 else {
    scriptsFile=configFile.resolve("scripts");
  }
  if (settings.get("path.plugins") != null) {
    pluginsFile=PathUtils.get(cleanPath(settings.get("path.plugins")));
  }
 else {
    pluginsFile=homeFile.resolve("plugins");
  }
  String[] dataPaths=settings.getAsArray("path.data");
  if (dataPaths.length > 0) {
    dataFiles=new Path[dataPaths.length];
    dataWithClusterFiles=new Path[dataPaths.length];
    for (int i=0; i < dataPaths.length; i++) {
      dataFiles[i]=PathUtils.get(dataPaths[i]);
      dataWithClusterFiles[i]=dataFiles[i].resolve(ClusterName.clusterNameFromSettings(settings).value());
    }
  }
 else {
    dataFiles=new Path[]{homeFile.resolve("data")};
    dataWithClusterFiles=new Path[]{homeFile.resolve("data").resolve(ClusterName.clusterNameFromSettings(settings).value())};
  }
  String[] repoPaths=settings.getAsArray("path.repo");
  if (repoPaths.length > 0) {
    repoFiles=new Path[repoPaths.length];
    for (int i=0; i < repoPaths.length; i++) {
      repoFiles[i]=PathUtils.get(repoPaths[i]);
    }
  }
 else {
    repoFiles=new Path[0];
  }
  if (settings.get("path.logs") != null) {
    logsFile=PathUtils.get(cleanPath(settings.get("path.logs")));
  }
 else {
    logsFile=homeFile.resolve("logs");
  }
  if (settings.get("pidfile") != null) {
    pidFile=PathUtils.get(cleanPath(settings.get("pidfile")));
  }
 else {
    pidFile=null;
  }
  binFile=homeFile.resolve("bin");
  libFile=homeFile.resolve("lib");
}
