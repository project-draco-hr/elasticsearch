{
  this.settings=settings;
  final Path homeFile;
  if (PATH_HOME_SETTING.exists(settings)) {
    homeFile=PathUtils.get(cleanPath(PATH_HOME_SETTING.get(settings)));
  }
 else {
    throw new IllegalStateException(PATH_HOME_SETTING.getKey() + " is not configured");
  }
  if (PATH_CONF_SETTING.exists(settings)) {
    configFile=PathUtils.get(cleanPath(PATH_CONF_SETTING.get(settings)));
  }
 else {
    configFile=homeFile.resolve("config");
  }
  if (PATH_SCRIPTS_SETTING.exists(settings)) {
    scriptsFile=PathUtils.get(cleanPath(PATH_SCRIPTS_SETTING.get(settings)));
  }
 else {
    scriptsFile=configFile.resolve("scripts");
  }
  pluginsFile=homeFile.resolve("plugins");
  List<String> dataPaths=PATH_DATA_SETTING.get(settings);
  final ClusterName clusterName=ClusterName.CLUSTER_NAME_SETTING.get(settings);
  if (dataPaths.isEmpty() == false) {
    dataFiles=new Path[dataPaths.size()];
    dataWithClusterFiles=new Path[dataPaths.size()];
    for (int i=0; i < dataPaths.size(); i++) {
      dataFiles[i]=PathUtils.get(dataPaths.get(i));
      dataWithClusterFiles[i]=dataFiles[i].resolve(clusterName.value());
    }
  }
 else {
    dataFiles=new Path[]{homeFile.resolve("data")};
    dataWithClusterFiles=new Path[]{homeFile.resolve("data").resolve(clusterName.value())};
  }
  if (PATH_SHARED_DATA_SETTING.exists(settings)) {
    sharedDataFile=PathUtils.get(cleanPath(PATH_SHARED_DATA_SETTING.get(settings)));
  }
 else {
    sharedDataFile=null;
  }
  List<String> repoPaths=PATH_REPO_SETTING.get(settings);
  if (repoPaths.isEmpty() == false) {
    repoFiles=new Path[repoPaths.size()];
    for (int i=0; i < repoPaths.size(); i++) {
      repoFiles[i]=PathUtils.get(repoPaths.get(i));
    }
  }
 else {
    repoFiles=new Path[0];
  }
  if (PATH_LOGS_SETTING.exists(settings)) {
    logsFile=PathUtils.get(cleanPath(PATH_LOGS_SETTING.get(settings)));
  }
 else {
    logsFile=homeFile.resolve("logs");
  }
  if (PIDFILE_SETTING.exists(settings)) {
    pidFile=PathUtils.get(cleanPath(PIDFILE_SETTING.get(settings)));
  }
 else {
    pidFile=null;
  }
  binFile=homeFile.resolve("bin");
  libFile=homeFile.resolve("lib");
  modulesFile=homeFile.resolve("modules");
}
