{
  double previous=val[0];
  int max=val.length;
  for (int i=1; i < max; i++) {
    if (dir > 0) {
      if (strict) {
        if (val[i] <= previous) {
          throw MathRuntimeException.createIllegalArgumentException("points {0} and {1} are not strictly increasing ({2} >= {3})",i - 1,i,previous,val[i]);
        }
      }
 else {
        if (val[i] < previous) {
          throw MathRuntimeException.createIllegalArgumentException("points {0} and {1} are not increasing ({2} > {3})",i - 1,i,previous,val[i]);
        }
      }
    }
 else {
      if (strict) {
        if (val[i] >= previous) {
          throw MathRuntimeException.createIllegalArgumentException("points {0} and {1} are not strictly decreasing ({2} <= {3})",i - 1,i,previous,val[i]);
        }
      }
 else {
        if (val[i] > previous) {
          throw MathRuntimeException.createIllegalArgumentException("points {0} and {1} are not decreasing ({2} < {3})",i - 1,i,previous,val[i]);
        }
      }
    }
    previous=val[i];
  }
}
