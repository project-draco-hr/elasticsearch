{
  if (value == null) {
    throw new NullPointerException();
  }
  final Segment<K,V>[] segments=this.segments;
  int[] mc=new int[segments.length];
  for (int k=0; k < RETRIES_BEFORE_LOCK; ++k) {
    int mcsum=0;
    for (int i=0; i < segments.length; ++i) {
      mcsum+=mc[i]=segments[i].modCount;
      if (segments[i].containsValue(value)) {
        return true;
      }
    }
    boolean cleanSweep=true;
    if (mcsum != 0) {
      for (int i=0; i < segments.length; ++i) {
        if (mc[i] != segments[i].modCount) {
          cleanSweep=false;
          break;
        }
      }
    }
    if (cleanSweep) {
      return false;
    }
  }
  for (int i=0; i < segments.length; ++i) {
    segments[i].lock();
  }
  boolean found=false;
  try {
    for (int i=0; i < segments.length; ++i) {
      if (segments[i].containsValue(value)) {
        found=true;
        break;
      }
    }
  }
  finally {
    for (int i=0; i < segments.length; ++i) {
      segments[i].unlock();
    }
  }
  return found;
}
