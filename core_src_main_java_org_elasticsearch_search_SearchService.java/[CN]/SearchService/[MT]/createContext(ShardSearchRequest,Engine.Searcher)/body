{
  IndexService indexService=indicesService.indexServiceSafe(request.shardId().getIndex());
  IndexShard indexShard=indexService.getShard(request.shardId().getId());
  SearchShardTarget shardTarget=new SearchShardTarget(clusterService.localNode().id(),indexShard.shardId());
  Engine.Searcher engineSearcher=searcher == null ? indexShard.acquireSearcher("search") : searcher;
  DefaultSearchContext context=new DefaultSearchContext(idGenerator.incrementAndGet(),request,shardTarget,engineSearcher,indexService,indexShard,scriptService,pageCacheRecycler,bigArrays,threadPool.estimatedTimeInMillisCounter(),parseFieldMatcher,defaultSearchTimeout,fetchPhase);
  context.getQueryShardContext().setFieldStatsProvider(new FieldStatsProvider(engineSearcher,indexService.mapperService()));
  request.rewrite(context.getQueryShardContext());
  SearchContext.setCurrent(context);
  try {
    if (request.scroll() != null) {
      context.scrollContext(new ScrollContext());
      context.scrollContext().scroll=request.scroll();
    }
    if (request.template() != null) {
      ExecutableScript executable=this.scriptService.executable(request.template(),ScriptContext.Standard.SEARCH,Collections.emptyMap());
      BytesReference run=(BytesReference)executable.run();
      try (XContentParser parser=XContentFactory.xContent(run).createParser(run)){
        QueryParseContext queryParseContext=new QueryParseContext(indicesService.getIndicesQueryRegistry());
        queryParseContext.reset(parser);
        queryParseContext.parseFieldMatcher(parseFieldMatcher);
        parseSource(context,SearchSourceBuilder.parseSearchSource(parser,queryParseContext,aggParsers,suggesters));
      }
     }
    parseSource(context,request.source());
    if (context.from() == -1) {
      context.from(0);
    }
    if (context.size() == -1) {
      context.size(10);
    }
    dfsPhase.preProcess(context);
    queryPhase.preProcess(context);
    fetchPhase.preProcess(context);
    long keepAlive=defaultKeepAlive;
    if (request.scroll() != null && request.scroll().keepAlive() != null) {
      keepAlive=request.scroll().keepAlive().millis();
    }
    context.keepAlive(keepAlive);
  }
 catch (  Throwable e) {
    context.close();
    throw ExceptionsHelper.convertToRuntime(e);
  }
  return context;
}
