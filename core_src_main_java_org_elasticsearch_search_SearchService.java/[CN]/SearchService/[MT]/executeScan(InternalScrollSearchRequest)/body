{
  final SearchContext context=findContext(request.id());
  ShardSearchStats shardSearchStats=context.indexShard().searchService();
  contextProcessing(context);
  try {
    processScroll(request,context);
    shardSearchStats.onPreQueryPhase(context);
    long time=System.nanoTime();
    try {
      if (context.searchType() == SearchType.QUERY_THEN_FETCH) {
        context.searchType(SearchType.SCAN);
        context.from(0);
      }
      queryPhase.execute(context);
    }
 catch (    Throwable e) {
      shardSearchStats.onFailedQueryPhase(context);
      throw ExceptionsHelper.convertToRuntime(e);
    }
    long queryFinishTime=System.nanoTime();
    shardSearchStats.onQueryPhase(context,queryFinishTime - time);
    shardSearchStats.onPreFetchPhase(context);
    try {
      shortcutDocIdsToLoadForScanning(context);
      fetchPhase.execute(context);
      if (context.scroll() == null || context.fetchResult().hits().hits().length < context.size()) {
        freeContext(request.id());
      }
 else {
        contextProcessedSuccessfully(context);
      }
    }
 catch (    Throwable e) {
      shardSearchStats.onFailedQueryPhase(context);
      throw ExceptionsHelper.convertToRuntime(e);
    }
    shardSearchStats.onFetchPhase(context,System.nanoTime() - queryFinishTime);
    return new ScrollQueryFetchSearchResult(new QueryFetchSearchResult(context.queryResult(),context.fetchResult()),context.shardTarget());
  }
 catch (  Throwable e) {
    logger.trace("Scan phase failed",e);
    processFailure(context,e);
    throw ExceptionsHelper.convertToRuntime(e);
  }
 finally {
    cleanContext(context);
  }
}
