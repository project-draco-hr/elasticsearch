{
  final SearchContext context=findContext(request.id());
  contextProcessing(context);
  try {
    final IndexShard indexShard=context.indexShard();
    final IndexCache indexCache=indexShard.indexService().cache();
    final QueryCachingPolicy cachingPolicy=indexShard.getQueryCachingPolicy();
    context.searcher().dfSource(new CachedDfSource(context.searcher().getIndexReader(),request.dfs(),context.similarityService().similarity(),indexCache.query(),cachingPolicy));
  }
 catch (  Throwable e) {
    freeContext(context.id());
    cleanContext(context);
    throw new QueryPhaseExecutionException(context,"Failed to set aggregated df",e);
  }
  try {
    ShardSearchStats shardSearchStats=context.indexShard().searchService();
    shardSearchStats.onPreQueryPhase(context);
    long time=System.nanoTime();
    try {
      queryPhase.execute(context);
    }
 catch (    Throwable e) {
      shardSearchStats.onFailedQueryPhase(context);
      throw ExceptionsHelper.convertToRuntime(e);
    }
    long time2=System.nanoTime();
    shardSearchStats.onQueryPhase(context,time2 - time);
    shardSearchStats.onPreFetchPhase(context);
    try {
      shortcutDocIdsToLoad(context);
      fetchPhase.execute(context);
      if (context.scroll() == null) {
        freeContext(request.id());
      }
 else {
        contextProcessedSuccessfully(context);
      }
    }
 catch (    Throwable e) {
      shardSearchStats.onFailedFetchPhase(context);
      throw ExceptionsHelper.convertToRuntime(e);
    }
    shardSearchStats.onFetchPhase(context,System.nanoTime() - time2);
    return new QueryFetchSearchResult(context.queryResult(),context.fetchResult());
  }
 catch (  Throwable e) {
    logger.trace("Fetch phase failed",e);
    processFailure(context,e);
    throw ExceptionsHelper.convertToRuntime(e);
  }
 finally {
    cleanContext(context);
  }
}
