{
  final SearchContext context=findContext(request.id());
  context.incRef();
  try {
    contextProcessing(context);
    context.searcher().setAggregatedDfs(request.dfs());
    SearchOperationListener operationListener=context.indexShard().getSearchOperationListener();
    operationListener.onPreQueryPhase(context);
    long time=System.nanoTime();
    try {
      queryPhase.execute(context);
    }
 catch (    Exception e) {
      operationListener.onFailedQueryPhase(context);
      throw ExceptionsHelper.convertToRuntime(e);
    }
    long time2=System.nanoTime();
    operationListener.onQueryPhase(context,time2 - time);
    operationListener.onPreFetchPhase(context);
    try {
      shortcutDocIdsToLoad(context);
      fetchPhase.execute(context);
      if (fetchPhaseShouldFreeContext(context)) {
        freeContext(request.id());
      }
 else {
        contextProcessedSuccessfully(context);
      }
    }
 catch (    Exception e) {
      operationListener.onFailedFetchPhase(context);
      throw ExceptionsHelper.convertToRuntime(e);
    }
    operationListener.onFetchPhase(context,System.nanoTime() - time2);
    return new QueryFetchSearchResult(context.queryResult(),context.fetchResult());
  }
 catch (  Exception e) {
    logger.trace("Fetch phase failed",e);
    processFailure(context,e);
    throw ExceptionsHelper.convertToRuntime(e);
  }
 finally {
    cleanContext(context);
  }
}
