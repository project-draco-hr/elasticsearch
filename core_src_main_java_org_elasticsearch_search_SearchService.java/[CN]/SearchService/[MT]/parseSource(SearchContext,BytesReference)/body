{
  if (source == null || source.length() == 0) {
    return;
  }
  XContentParser parser=null;
  try {
    parser=XContentFactory.xContent(source).createParser(source);
    XContentParser.Token token;
    token=parser.nextToken();
    if (token != XContentParser.Token.START_OBJECT) {
      throw new ElasticsearchParseException("failed to parse search source. source must be an object, but found [{}] instead",token.name());
    }
    while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
      if (token == XContentParser.Token.FIELD_NAME) {
        String fieldName=parser.currentName();
        parser.nextToken();
        SearchParseElement element=elementParsers.get(fieldName);
        if (element == null) {
          throw new SearchParseException(context,"failed to parse search source. unknown search element [" + fieldName + "]",parser.getTokenLocation());
        }
        element.parse(parser,context);
      }
 else {
        if (token == null) {
          throw new ElasticsearchParseException("failed to parse search source. end of query source reached but query is not complete.");
        }
 else {
          throw new ElasticsearchParseException("failed to parse search source. expected field name but got [{}]",token);
        }
      }
    }
  }
 catch (  Throwable e) {
    String sSource="_na_";
    try {
      sSource=XContentHelper.convertToJson(source,false);
    }
 catch (    Throwable e1) {
    }
    XContentLocation location=parser != null ? parser.getTokenLocation() : null;
    throw new SearchParseException(context,"failed to parse search source [" + sSource + "]",location,e);
  }
 finally {
    if (parser != null) {
      parser.close();
    }
  }
}
