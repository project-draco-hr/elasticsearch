{
  if (source == null) {
    return;
  }
  context.from(source.from());
  context.size(source.size());
  ObjectFloatHashMap<String> indexBoostMap=source.indexBoost();
  if (indexBoostMap != null) {
    Float indexBoost=indexBoostMap.get(context.shardTarget().index());
    if (indexBoost != null) {
      context.queryBoost(indexBoost);
    }
  }
  if (source.query() != null) {
    context.parsedQuery(context.queryParserService().parse(source.query()));
  }
  if (source.postFilter() != null) {
    context.parsedPostFilter(context.queryParserService().parse(source.postFilter()));
  }
  if (source.sorts() != null) {
    XContentParser completeSortParser=null;
    try {
      XContentBuilder completeSortBuilder=XContentFactory.jsonBuilder();
      completeSortBuilder.startObject();
      completeSortBuilder.startArray("sort");
      for (      BytesReference sort : source.sorts()) {
        XContentParser parser=XContentFactory.xContent(sort).createParser(sort);
        parser.nextToken();
        completeSortBuilder.copyCurrentStructure(parser);
      }
      completeSortBuilder.endArray();
      completeSortBuilder.endObject();
      BytesReference completeSortBytes=completeSortBuilder.bytes();
      completeSortParser=XContentFactory.xContent(completeSortBytes).createParser(completeSortBytes);
      completeSortParser.nextToken();
      completeSortParser.nextToken();
      completeSortParser.nextToken();
      this.elementParsers.get("sort").parse(completeSortParser,context);
    }
 catch (    Exception e) {
      String sSource="_na_";
      try {
        sSource=source.toString();
      }
 catch (      Throwable e1) {
      }
      XContentLocation location=completeSortParser != null ? completeSortParser.getTokenLocation() : null;
      throw new SearchParseException(context,"failed to parse sort source [" + sSource + "]",location,e);
    }
  }
  context.trackScores(source.trackScores());
  if (source.minScore() != null) {
    context.minimumScore(source.minScore());
  }
  context.timeoutInMillis(source.timeoutInMillis());
  context.terminateAfter(source.terminateAfter());
  if (source.aggregations() != null) {
    XContentParser completeAggregationsParser=null;
    try {
      XContentBuilder completeAggregationsBuilder=XContentFactory.jsonBuilder();
      completeAggregationsBuilder.startObject();
      for (      BytesReference agg : source.aggregations()) {
        XContentParser parser=XContentFactory.xContent(agg).createParser(agg);
        parser.nextToken();
        parser.nextToken();
        completeAggregationsBuilder.field(parser.currentName());
        parser.nextToken();
        completeAggregationsBuilder.copyCurrentStructure(parser);
      }
      completeAggregationsBuilder.endObject();
      BytesReference completeAggregationsBytes=completeAggregationsBuilder.bytes();
      completeAggregationsParser=XContentFactory.xContent(completeAggregationsBytes).createParser(completeAggregationsBytes);
      completeAggregationsParser.nextToken();
      this.elementParsers.get("aggregations").parse(completeAggregationsParser,context);
    }
 catch (    Exception e) {
      String sSource="_na_";
      try {
        sSource=source.toString();
      }
 catch (      Throwable e1) {
      }
      XContentLocation location=completeAggregationsParser != null ? completeAggregationsParser.getTokenLocation() : null;
      throw new SearchParseException(context,"failed to parse rescore source [" + sSource + "]",location,e);
    }
  }
  if (source.suggest() != null) {
    XContentParser suggestParser=null;
    try {
      suggestParser=XContentFactory.xContent(source.suggest()).createParser(source.suggest());
      suggestParser.nextToken();
      this.elementParsers.get("suggest").parse(suggestParser,context);
    }
 catch (    Exception e) {
      String sSource="_na_";
      try {
        sSource=source.toString();
      }
 catch (      Throwable e1) {
      }
      XContentLocation location=suggestParser != null ? suggestParser.getTokenLocation() : null;
      throw new SearchParseException(context,"failed to parse suggest source [" + sSource + "]",location,e);
    }
  }
  if (source.rescores() != null) {
    XContentParser completeRescoreParser=null;
    try {
      XContentBuilder completeRescoreBuilder=XContentFactory.jsonBuilder();
      completeRescoreBuilder.startObject();
      completeRescoreBuilder.startArray("rescore");
      for (      BytesReference rescore : source.rescores()) {
        XContentParser parser=XContentFactory.xContent(rescore).createParser(rescore);
        parser.nextToken();
        completeRescoreBuilder.copyCurrentStructure(parser);
      }
      completeRescoreBuilder.endArray();
      completeRescoreBuilder.endObject();
      BytesReference completeRescoreBytes=completeRescoreBuilder.bytes();
      completeRescoreParser=XContentFactory.xContent(completeRescoreBytes).createParser(completeRescoreBytes);
      completeRescoreParser.nextToken();
      completeRescoreParser.nextToken();
      completeRescoreParser.nextToken();
      this.elementParsers.get("rescore").parse(completeRescoreParser,context);
    }
 catch (    Exception e) {
      String sSource="_na_";
      try {
        sSource=source.toString();
      }
 catch (      Throwable e1) {
      }
      XContentLocation location=completeRescoreParser != null ? completeRescoreParser.getTokenLocation() : null;
      throw new SearchParseException(context,"failed to parse rescore source [" + sSource + "]",location,e);
    }
  }
  if (source.fields() != null) {
    context.fieldNames().addAll(source.fields());
  }
  if (source.explain() != null) {
    context.explain(source.explain());
  }
  if (source.fetchSource() != null) {
    context.fetchSourceContext(source.fetchSource());
  }
  if (source.fieldDataFields() != null) {
    FieldDataFieldsContext fieldDataFieldsContext=context.getFetchSubPhaseContext(FieldDataFieldsFetchSubPhase.CONTEXT_FACTORY);
    for (    String field : source.fieldDataFields()) {
      fieldDataFieldsContext.add(new FieldDataField(field));
    }
  }
  if (source.highlighter() != null) {
    XContentParser highlighterParser=null;
    try {
      highlighterParser=XContentFactory.xContent(source.highlighter()).createParser(source.highlighter());
      this.elementParsers.get("highlight").parse(highlighterParser,context);
    }
 catch (    Exception e) {
      String sSource="_na_";
      try {
        sSource=source.toString();
      }
 catch (      Throwable e1) {
      }
      XContentLocation location=highlighterParser != null ? highlighterParser.getTokenLocation() : null;
      throw new SearchParseException(context,"failed to parse suggest source [" + sSource + "]",location,e);
    }
  }
  if (source.innerHits() != null) {
    XContentParser innerHitsParser=null;
    try {
      innerHitsParser=XContentFactory.xContent(source.innerHits()).createParser(source.innerHits());
      this.elementParsers.get("highlight").parse(innerHitsParser,context);
    }
 catch (    Exception e) {
      String sSource="_na_";
      try {
        sSource=source.toString();
      }
 catch (      Throwable e1) {
      }
      XContentLocation location=innerHitsParser != null ? innerHitsParser.getTokenLocation() : null;
      throw new SearchParseException(context,"failed to parse suggest source [" + sSource + "]",location,e);
    }
  }
  if (source.scriptFields() != null) {
    for (    org.elasticsearch.search.builder.SearchSourceBuilder.ScriptField field : source.scriptFields()) {
      SearchScript searchScript=context.scriptService().search(context.lookup(),field.script(),ScriptContext.Standard.SEARCH);
      context.scriptFields().add(new ScriptField(field.fieldName(),searchScript,false));
    }
  }
  if (source.version() != null) {
    context.version(source.version());
  }
  if (source.stats() != null) {
    context.groupStats(Arrays.asList(source.stats()));
  }
}
