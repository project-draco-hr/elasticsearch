{
  if (source == null) {
    return;
  }
  context.from(source.from());
  context.size(source.size());
  Float indexBoost=source.indexBoost().get(context.shardTarget().index());
  if (indexBoost != null) {
    context.queryBoost(indexBoost);
  }
  context.parsedQuery(context.queryParserService().parse(source.query()));
  context.parsedPostFilter(context.queryParserService().parse(source.postFilter()));
  context.sort(null);
  context.trackScores(source.trackScores());
  context.minimumScore(source.minScore());
  context.timeoutInMillis(source.timeoutInMillis());
  context.terminateAfter(source.terminateAfter());
  context.aggregations(null);
  XContentParser suggestParser=null;
  try {
    suggestParser=XContentFactory.xContent(source.suggest()).createParser(source.suggest());
    this.elementParsers.get("suggest").parse(suggestParser,context);
  }
 catch (  Exception e) {
    String sSource="_na_";
    try {
      sSource=source.toString();
    }
 catch (    Throwable e1) {
    }
    XContentLocation location=suggestParser != null ? suggestParser.getTokenLocation() : null;
    throw new SearchParseException(context,"failed to parse suggest source [" + sSource + "]",location,e);
  }
  context.addRescore(null);
  context.fieldNames().addAll(source.fields());
  context.explain(source.explain());
  context.fetchSourceContext(source.fetchSource());
  FieldDataFieldsContext fieldDataFieldsContext=context.getFetchSubPhaseContext(FieldDataFieldsFetchSubPhase.CONTEXT_FACTORY);
  for (  String field : source.fieldDataFields()) {
    fieldDataFieldsContext.add(new FieldDataField(field));
  }
  XContentParser highlighterParser=null;
  try {
    highlighterParser=XContentFactory.xContent(source.highlighter()).createParser(source.highlighter());
    this.elementParsers.get("highlight").parse(highlighterParser,context);
  }
 catch (  Exception e) {
    String sSource="_na_";
    try {
      sSource=source.toString();
    }
 catch (    Throwable e1) {
    }
    XContentLocation location=highlighterParser != null ? highlighterParser.getTokenLocation() : null;
    throw new SearchParseException(context,"failed to parse suggest source [" + sSource + "]",location,e);
  }
  XContentParser innerHitsParser=null;
  try {
    innerHitsParser=XContentFactory.xContent(source.innerHits()).createParser(source.innerHits());
    this.elementParsers.get("highlight").parse(innerHitsParser,context);
  }
 catch (  Exception e) {
    String sSource="_na_";
    try {
      sSource=source.toString();
    }
 catch (    Throwable e1) {
    }
    XContentLocation location=innerHitsParser != null ? innerHitsParser.getTokenLocation() : null;
    throw new SearchParseException(context,"failed to parse suggest source [" + sSource + "]",location,e);
  }
  for (  org.elasticsearch.search.builder.SearchSourceBuilder.ScriptField field : source.scriptFields()) {
    SearchScript searchScript=context.scriptService().search(context.lookup(),field.script(),ScriptContext.Standard.SEARCH);
    context.scriptFields().add(new ScriptField(field.fieldName(),searchScript,false));
  }
  context.version(source.version());
  context.groupStats(Arrays.asList(source.stats()));
}
