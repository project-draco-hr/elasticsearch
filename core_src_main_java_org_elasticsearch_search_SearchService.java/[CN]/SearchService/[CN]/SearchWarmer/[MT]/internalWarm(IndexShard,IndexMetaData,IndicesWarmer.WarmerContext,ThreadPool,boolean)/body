{
  IndexWarmersMetaData custom=indexMetaData.custom(IndexWarmersMetaData.TYPE);
  if (custom == null) {
    return TerminationHandle.NO_WAIT;
  }
  final Executor executor=threadPool.executor(executor());
  final CountDownLatch latch=new CountDownLatch(custom.entries().size());
  for (  final IndexWarmersMetaData.Entry entry : custom.entries()) {
    executor.execute(new Runnable(){
      @Override public void run(){
        SearchContext context=null;
        try {
          long now=System.nanoTime();
          long took=System.nanoTime() - now;
          if (indexShard.warmerService().logger().isTraceEnabled()) {
            indexShard.warmerService().logger().trace("warmed [{}], took [{}]",entry.name(),TimeValue.timeValueNanos(took));
          }
        }
 catch (        Throwable t) {
          indexShard.warmerService().logger().warn("warmer [{}] failed",t,entry.name());
        }
 finally {
          try {
            if (context != null) {
              freeContext(context.id());
              cleanContext(context);
            }
          }
  finally {
            latch.countDown();
          }
        }
      }
    }
);
  }
  return new TerminationHandle(){
    @Override public void awaitTermination() throws InterruptedException {
      latch.await();
    }
  }
;
}
