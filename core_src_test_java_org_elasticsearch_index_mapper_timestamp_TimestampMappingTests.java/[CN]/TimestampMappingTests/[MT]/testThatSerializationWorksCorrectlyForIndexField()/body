{
  String enabledMapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_timestamp").field("enabled",true).field("store","yes").field("index","no").endObject().endObject().endObject().string();
  DocumentMapper enabledMapper=createIndex("test",BWC_SETTINGS).mapperService().documentMapperParser().parse("type",new CompressedXContent(enabledMapping));
  XContentBuilder builder=JsonXContent.contentBuilder().startObject();
  enabledMapper.timestampFieldMapper().toXContent(builder,ToXContent.EMPTY_PARAMS).endObject();
  builder.close();
  Map<String,Object> serializedMap;
  try (XContentParser parser=JsonXContent.jsonXContent.createParser(builder.bytes())){
    serializedMap=parser.map();
  }
   assertThat(serializedMap,hasKey("_timestamp"));
  assertThat(serializedMap.get("_timestamp"),instanceOf(Map.class));
  Map<String,Object> timestampConfiguration=(Map<String,Object>)serializedMap.get("_timestamp");
  assertThat(timestampConfiguration,hasKey("index"));
  assertThat(timestampConfiguration.get("index").toString(),is("no"));
}
