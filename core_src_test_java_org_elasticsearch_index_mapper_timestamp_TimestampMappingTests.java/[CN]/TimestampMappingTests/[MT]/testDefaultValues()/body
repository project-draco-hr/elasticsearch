{
  Version version;
  do {
    version=randomVersion(random());
  }
 while (version.before(Version.V_2_0_0_beta1));
  for (  String mapping : Arrays.asList(XContentFactory.jsonBuilder().startObject().startObject("type").endObject().string(),XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_timestamp").endObject().endObject().string())) {
    DocumentMapper docMapper=createIndex("test",Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,version).build()).mapperService().documentMapperParser().parse("type",new CompressedXContent(mapping));
    assertThat(docMapper.timestampFieldMapper().enabled(),equalTo(TimestampFieldMapper.Defaults.ENABLED.enabled));
    assertThat(docMapper.timestampFieldMapper().fieldType().stored(),equalTo(version.onOrAfter(Version.V_2_0_0_beta1)));
    assertThat(docMapper.timestampFieldMapper().fieldType().indexOptions(),equalTo(TimestampFieldMapper.Defaults.FIELD_TYPE.indexOptions()));
    assertThat(docMapper.timestampFieldMapper().fieldType().hasDocValues(),equalTo(version.onOrAfter(Version.V_2_0_0_beta1)));
    assertThat(docMapper.timestampFieldMapper().fieldType().dateTimeFormatter().format(),equalTo(TimestampFieldMapper.DEFAULT_DATE_TIME_FORMAT));
    assertAcked(client().admin().indices().prepareDelete("test").execute().get());
  }
}
