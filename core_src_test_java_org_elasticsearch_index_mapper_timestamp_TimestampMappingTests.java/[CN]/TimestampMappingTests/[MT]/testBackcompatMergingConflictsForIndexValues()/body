{
  List<String> indexValues=new ArrayList<>();
  indexValues.add("analyzed");
  indexValues.add("no");
  indexValues.add("not_analyzed");
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_timestamp").field("index",indexValues.remove(randomInt(2))).endObject().endObject().endObject().string();
  MapperService mapperService=createIndex("test",BWC_SETTINGS).mapperService();
  mapperService.merge("type",new CompressedXContent(mapping),true,false);
  mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_timestamp").field("index",indexValues.remove(randomInt(1))).endObject().endObject().endObject().string();
  try {
    mapperService.merge("type",new CompressedXContent(mapping),false,false);
    fail();
  }
 catch (  IllegalArgumentException e) {
    assertThat(e.getMessage(),containsString("mapper [_timestamp] has different [index] values"));
  }
}
