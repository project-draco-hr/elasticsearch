{
  ShapeType shapeType=ShapeType.randomType(random());
  ShapeBuilder shape=RandomShapeGenerator.createShapeWithin(random(),null,shapeType);
  GeoShapeQueryBuilder builder;
  clearShapeFields();
  if (randomBoolean()) {
    builder=new GeoShapeQueryBuilder(GEO_SHAPE_FIELD_NAME,shape);
  }
 else {
    indexedShapeToReturn=shape;
    indexedShapeId=randomAsciiOfLengthBetween(3,20);
    indexedShapeType=randomAsciiOfLengthBetween(3,20);
    builder=new GeoShapeQueryBuilder(GEO_SHAPE_FIELD_NAME,indexedShapeId,indexedShapeType);
    if (randomBoolean()) {
      indexedShapeIndex=randomAsciiOfLengthBetween(3,20);
      builder.indexedShapeIndex(indexedShapeIndex);
    }
    if (randomBoolean()) {
      indexedShapePath=randomAsciiOfLengthBetween(3,20);
      builder.indexedShapePath(indexedShapePath);
    }
  }
  if (randomBoolean()) {
    SpatialStrategy strategy=randomFrom(SpatialStrategy.values());
    while (shapeType == ShapeType.MULTILINESTRING && strategy == SpatialStrategy.TERM) {
      strategy=randomFrom(SpatialStrategy.values());
    }
    builder.strategy(strategy);
    if (strategy != SpatialStrategy.TERM) {
      builder.relation(randomFrom(ShapeRelation.values()));
    }
  }
  if (randomBoolean()) {
    builder.ignoreUnmapped(randomBoolean());
  }
  return builder;
}
