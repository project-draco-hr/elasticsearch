{
  MetaData.Builder mdBuilder=MetaData.builder().put(indexBuilder("testXXX").state(IndexMetaData.State.OPEN)).put(indexBuilder("testXXY").state(IndexMetaData.State.OPEN)).put(indexBuilder("testXYY").state(IndexMetaData.State.CLOSE)).put(indexBuilder("testYYY").state(IndexMetaData.State.OPEN)).put(indexBuilder("testYYX").state(IndexMetaData.State.CLOSE)).put(indexBuilder("kuku").state(IndexMetaData.State.OPEN));
  ClusterState state=ClusterState.builder(new ClusterName("_name")).metaData(mdBuilder).build();
  IndexNameExpressionResolver.WildcardExpressionResolver resolver=new IndexNameExpressionResolver.WildcardExpressionResolver();
  IndexNameExpressionResolver.Context context=new IndexNameExpressionResolver.Context(state,IndicesOptions.fromOptions(true,true,true,true));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("testX*"))),equalTo(newHashSet("testXXX","testXXY","testXYY")));
  context=new IndexNameExpressionResolver.Context(state,IndicesOptions.fromOptions(true,true,false,true));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("testX*"))),equalTo(newHashSet("testXYY")));
  context=new IndexNameExpressionResolver.Context(state,IndicesOptions.fromOptions(true,true,true,false));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("testX*"))),equalTo(newHashSet("testXXX","testXXY")));
}
