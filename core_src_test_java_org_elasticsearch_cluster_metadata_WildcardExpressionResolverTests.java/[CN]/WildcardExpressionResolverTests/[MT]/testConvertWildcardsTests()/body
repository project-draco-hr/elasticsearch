{
  MetaData.Builder mdBuilder=MetaData.builder().put(indexBuilder("testXXX").putAlias(AliasMetaData.builder("alias1")).putAlias(AliasMetaData.builder("alias2"))).put(indexBuilder("testXYY").putAlias(AliasMetaData.builder("alias2"))).put(indexBuilder("testYYY").putAlias(AliasMetaData.builder("alias3"))).put(indexBuilder("kuku"));
  ClusterState state=ClusterState.builder(new ClusterName("_name")).metaData(mdBuilder).build();
  IndexNameExpressionResolver.WildcardExpressionResolver resolver=new IndexNameExpressionResolver.WildcardExpressionResolver();
  IndexNameExpressionResolver.Context context=new IndexNameExpressionResolver.Context(state,IndicesOptions.lenientExpandOpen());
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("testYY*","alias*"))),equalTo(newHashSet("testXXX","testXYY","testYYY")));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("-kuku"))),equalTo(newHashSet("testXXX","testXYY","testYYY")));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("+test*","-testYYY"))),equalTo(newHashSet("testXXX","testXYY")));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("+testX*","+testYYY"))),equalTo(newHashSet("testXXX","testXYY","testYYY")));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("+testYYY","+testX*"))),equalTo(newHashSet("testXXX","testXYY","testYYY")));
}
