{
  MetaData.Builder mdBuilder=MetaData.builder().put(indexBuilder("testXXX")).put(indexBuilder("testXYY")).put(indexBuilder("testYYY")).put(indexBuilder("kuku"));
  ClusterState state=ClusterState.builder(new ClusterName("_name")).metaData(mdBuilder).build();
  IndexNameExpressionResolver.WildcardExpressionResolver resolver=new IndexNameExpressionResolver.WildcardExpressionResolver();
  IndexNameExpressionResolver.Context context=new IndexNameExpressionResolver.Context(state,IndicesOptions.lenientExpandOpen());
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("testXXX"))),equalTo(newHashSet("testXXX")));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("testXXX","testYYY"))),equalTo(newHashSet("testXXX","testYYY")));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("testXXX","ku*"))),equalTo(newHashSet("testXXX","kuku")));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("test*"))),equalTo(newHashSet("testXXX","testXYY","testYYY")));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("testX*"))),equalTo(newHashSet("testXXX","testXYY")));
  assertThat(newHashSet(resolver.resolve(context,Arrays.asList("testX*","kuku"))),equalTo(newHashSet("testXXX","testXYY","kuku")));
}
