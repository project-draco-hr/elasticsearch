{
  super(settings);
  this.indexShards=indexServices;
  ByteSizeValue indexingBuffer=INDEX_BUFFER_SIZE_SETTING.get(settings);
  String indexingBufferSetting=settings.get(INDEX_BUFFER_SIZE_SETTING.getKey());
  if (indexingBufferSetting == null || indexingBufferSetting.endsWith("%")) {
    ByteSizeValue minIndexingBuffer=MIN_INDEX_BUFFER_SIZE_SETTING.get(this.settings);
    ByteSizeValue maxIndexingBuffer=MAX_INDEX_BUFFER_SIZE_SETTING.get(this.settings);
    if (indexingBuffer.getBytes() < minIndexingBuffer.getBytes()) {
      indexingBuffer=minIndexingBuffer;
    }
    if (maxIndexingBuffer.getBytes() != -1 && indexingBuffer.getBytes() > maxIndexingBuffer.getBytes()) {
      indexingBuffer=maxIndexingBuffer;
    }
  }
  this.indexingBuffer=indexingBuffer;
  this.inactiveTime=SHARD_INACTIVE_TIME_SETTING.get(this.settings);
  this.interval=SHARD_MEMORY_INTERVAL_TIME_SETTING.get(this.settings);
  this.statusChecker=new ShardsIndicesStatusChecker();
  logger.debug("using indexing buffer size [{}] with {} [{}], {} [{}]",this.indexingBuffer,SHARD_INACTIVE_TIME_SETTING.getKey(),this.inactiveTime,SHARD_MEMORY_INTERVAL_TIME_SETTING.getKey(),this.interval);
  this.scheduler=scheduleTask(threadPool);
  this.threadPool=threadPool;
}
