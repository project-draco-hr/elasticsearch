{
  Path path=createTempDir();
  ImmutableSettings.Builder settingsBuilder=ImmutableSettings.builder();
  settingsBuilder.put("path.home",path.resolve("home").toString());
  settingsBuilder.put("path.conf",path.resolve("conf").toString());
  settingsBuilder.put("path.plugins",path.resolve("plugins").toString());
  settingsBuilder.putArray("path.data",path.resolve("data1").toString(),path.resolve("data2").toString());
  settingsBuilder.put("path.logs",path.resolve("logs").toString());
  Settings settings=settingsBuilder.build();
  Environment environment=new Environment(settings);
  Path policyFile=Security.processTemplate(new ByteArrayInputStream(new byte[0]),environment);
  ProtectionDomain domain=getClass().getProtectionDomain();
  Policy policy=Policy.getInstance("JavaPolicy",new URIParameter(policyFile.toUri()));
  assertTrue(policy.implies(domain,new FilePermission(environment.homeFile().toString(),"read,readlink,write,delete")));
  assertTrue(policy.implies(domain,new FilePermission(environment.configFile().toString(),"read,readlink,write,delete")));
  assertTrue(policy.implies(domain,new FilePermission(environment.pluginsFile().toString(),"read,readlink,write,delete")));
  for (  Path dataPath : environment.dataFiles()) {
    assertTrue(policy.implies(domain,new FilePermission(dataPath.toString(),"read,readlink,write,delete")));
  }
  for (  Path dataPath : environment.dataWithClusterFiles()) {
    assertTrue(policy.implies(domain,new FilePermission(dataPath.toString(),"read,readlink,write,delete")));
  }
  assertTrue(policy.implies(domain,new FilePermission(environment.logsFile().toString(),"read,readlink,write,delete")));
}
