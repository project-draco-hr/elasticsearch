{
  startNode("server1");
  client("server1").admin().indices().prepareCreate("test").execute().actionGet();
  final AtomicLong idGenerator=new AtomicLong();
  final AtomicBoolean stop=new AtomicBoolean(false);
  Thread[] writers=new Thread[5];
  final CountDownLatch stopLatch=new CountDownLatch(writers.length);
  for (int i=0; i < writers.length; i++) {
    writers[i]=new Thread(){
      @Override public void run(){
        while (!stop.get()) {
          long id=idGenerator.incrementAndGet();
          client("server1").prepareIndex("test","type1",Long.toString(id)).setSource(MapBuilder.<String,Object>newMapBuilder().put("test","value" + id).map()).execute().actionGet();
        }
        stopLatch.countDown();
      }
    }
;
    writers[i].start();
  }
  while (client("server1").prepareCount().setQuery(matchAllQuery()).execute().actionGet().count() < 20000) {
    Thread.sleep(100);
    client("server1").admin().indices().prepareRefresh().execute().actionGet();
  }
  client("server1").admin().indices().prepareFlush().execute().actionGet();
  while (client("server1").prepareCount().setQuery(matchAllQuery()).execute().actionGet().count() < 40000) {
    Thread.sleep(100);
    client("server1").admin().indices().prepareRefresh().execute().actionGet();
  }
  startNode("server2");
  assertThat(client("server1").admin().cluster().prepareHealth().setTimeout("1m").setWaitForGreenStatus().execute().actionGet().status(),equalTo(ClusterHealthStatus.GREEN));
  while (client("server1").prepareCount().setQuery(matchAllQuery()).execute().actionGet().count() < 100000) {
    Thread.sleep(100);
    client("server1").admin().indices().prepareRefresh().execute().actionGet();
  }
  stop.set(true);
  stopLatch.await();
  client("server1").admin().indices().prepareRefresh().execute().actionGet();
  for (int i=0; i < 10; i++) {
    assertThat(client("server1").prepareCount().setQuery(matchAllQuery()).execute().actionGet().count(),equalTo(idGenerator.get()));
  }
}
