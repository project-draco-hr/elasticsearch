{
  super.doXContentBody(builder,includeDefaults,params);
  doXContentAnalyzers(builder,includeDefaults);
  if (includeInAll != null) {
    builder.field("include_in_all",includeInAll);
  }
 else   if (includeDefaults) {
    builder.field("include_in_all",true);
  }
  if (includeDefaults || positionIncrementGap != POSITION_INCREMENT_GAP_USE_ANALYZER) {
    builder.field("position_increment_gap",positionIncrementGap);
  }
  if (includeDefaults || fieldType().fielddata() != ((TextFieldType)defaultFieldType).fielddata()) {
    builder.field("fielddata",fieldType().fielddata());
  }
  if (fieldType().fielddata()) {
    if (includeDefaults || fieldType().fielddataMinFrequency() != Defaults.FIELDDATA_MIN_FREQUENCY || fieldType().fielddataMaxFrequency() != Defaults.FIELDDATA_MAX_FREQUENCY || fieldType().fielddataMinSegmentSize() != Defaults.FIELDDATA_MIN_SEGMENT_SIZE) {
      builder.startObject("fielddata_frequency_filter");
      if (includeDefaults || fieldType().fielddataMinFrequency() != Defaults.FIELDDATA_MIN_FREQUENCY) {
        builder.field("min",fieldType().fielddataMinFrequency());
      }
      if (includeDefaults || fieldType().fielddataMaxFrequency() != Defaults.FIELDDATA_MAX_FREQUENCY) {
        builder.field("max",fieldType().fielddataMaxFrequency());
      }
      if (includeDefaults || fieldType().fielddataMinSegmentSize() != Defaults.FIELDDATA_MIN_SEGMENT_SIZE) {
        builder.field("min_segment_size",fieldType().fielddataMinSegmentSize());
      }
      builder.endObject();
    }
  }
}
