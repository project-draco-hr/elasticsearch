{
  Map<String,Object> processorConfig=new HashMap<>();
  processorConfig.put("unused","value");
  Map<String,Object> pipelineConfig=new HashMap<>();
  pipelineConfig.put("description","_description");
  pipelineConfig.put("processors",Collections.singletonList(Collections.singletonMap("test",processorConfig)));
  Pipeline.Factory factory=new Pipeline.Factory();
  Map<String,Processor.Factory> processorRegistry=new HashMap<>();
  Processor processor=mock(Processor.class);
  when(processor.getType()).thenReturn("test-processor");
  Processor.Factory processorFactory=mock(Processor.Factory.class);
  when(processorFactory.create(processorConfig)).thenReturn(processor);
  processorRegistry.put("test",processorFactory);
  try {
    factory.create("_id",pipelineConfig,processorRegistry);
  }
 catch (  IllegalArgumentException e) {
    assertThat(e.getMessage(),equalTo("processor [test] doesn't support one or more provided configuration parameters [unused]"));
  }
}
