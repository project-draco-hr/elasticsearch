{
  Directory directory=newDirectory();
  RandomIndexWriter indexWriter=new RandomIndexWriter(random(),directory);
  for (int parent=1; parent <= 5; parent++) {
    Document document=new Document();
    document.add(new StringField(UidFieldMapper.NAME,Uid.createUid("parent",Integer.toString(parent)),Field.Store.NO));
    document.add(new StringField(TypeFieldMapper.NAME,"parent",Field.Store.NO));
    indexWriter.addDocument(document);
    for (int child=1; child <= 3; child++) {
      document=new Document();
      document.add(new StringField(UidFieldMapper.NAME,Uid.createUid("child",Integer.toString(parent * 3 + child)),Field.Store.NO));
      document.add(new StringField(TypeFieldMapper.NAME,"child",Field.Store.NO));
      document.add(new StringField(ParentFieldMapper.NAME,Uid.createUid("parent",Integer.toString(parent)),Field.Store.NO));
      document.add(new StringField("field1","value" + child,Field.Store.NO));
      indexWriter.addDocument(document);
    }
  }
  IndexReader indexReader=DirectoryReader.open(indexWriter.w,false);
  IndexSearcher searcher=new IndexSearcher(indexReader);
  TermQuery childQuery=new TermQuery(new Term("field1","value" + (1 + random().nextInt(3))));
  TermFilter parentFilter=new TermFilter(new Term(TypeFieldMapper.NAME,"parent"));
  int shortCircuitParentDocSet=random().nextInt(5);
  ChildrenConstantScoreQuery query=new ChildrenConstantScoreQuery(childQuery,"parent","child",parentFilter,shortCircuitParentDocSet,true);
  BitSetCollector collector=new BitSetCollector(indexReader.maxDoc());
  searcher.search(query,collector);
  FixedBitSet actualResult=collector.getResult();
  assertThat(actualResult.cardinality(),equalTo(5));
  indexWriter.close();
  indexReader.close();
  directory.close();
}
