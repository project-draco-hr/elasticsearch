{
  XContentParser parser=parseContext.parser();
  QueryBuilder innerQuery=null;
  Collection<String> indices=new ArrayList<>();
  QueryBuilder noMatchQuery=defaultNoMatchQuery();
  String queryName=null;
  float boost=AbstractQueryBuilder.DEFAULT_BOOST;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if (parseContext.getParseFieldMatcher().match(currentFieldName,QUERY_FIELD)) {
        innerQuery=parseContext.parseInnerQueryBuilder();
      }
 else       if (parseContext.getParseFieldMatcher().match(currentFieldName,NO_MATCH_QUERY)) {
        noMatchQuery=parseContext.parseInnerQueryBuilder();
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"[indices] query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if (parseContext.getParseFieldMatcher().match(currentFieldName,INDICES_FIELD)) {
        if (indices.isEmpty() == false) {
          throw new ParsingException(parser.getTokenLocation(),"[indices] indices or index already specified");
        }
        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {
          String value=parser.textOrNull();
          if (value == null) {
            throw new ParsingException(parser.getTokenLocation(),"[indices] no value specified for 'indices' entry");
          }
          indices.add(value);
        }
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"[indices] query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token.isValue()) {
      if (parseContext.getParseFieldMatcher().match(currentFieldName,INDEX_FIELD)) {
        if (indices.isEmpty() == false) {
          throw new ParsingException(parser.getTokenLocation(),"[indices] indices or index already specified");
        }
        indices.add(parser.text());
      }
 else       if (parseContext.getParseFieldMatcher().match(currentFieldName,NO_MATCH_QUERY)) {
        noMatchQuery=parseNoMatchQuery(parser.text());
      }
 else       if (parseContext.getParseFieldMatcher().match(currentFieldName,AbstractQueryBuilder.NAME_FIELD)) {
        queryName=parser.text();
      }
 else       if (parseContext.getParseFieldMatcher().match(currentFieldName,AbstractQueryBuilder.BOOST_FIELD)) {
        boost=parser.floatValue();
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"[indices] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (innerQuery == null) {
    throw new ParsingException(parser.getTokenLocation(),"[indices] requires 'query' element");
  }
  if (indices.isEmpty()) {
    throw new ParsingException(parser.getTokenLocation(),"[indices] requires 'indices' or 'index' element");
  }
  return new IndicesQueryBuilder(innerQuery,indices.toArray(new String[indices.size()])).noMatchQuery(noMatchQuery).boost(boost).queryName(queryName);
}
