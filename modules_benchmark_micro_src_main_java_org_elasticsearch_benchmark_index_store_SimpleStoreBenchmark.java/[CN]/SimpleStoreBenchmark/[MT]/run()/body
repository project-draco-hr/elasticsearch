{
  for (int i=0; i < 3; i++) {
    System.gc();
    MILLISECONDS.sleep(100);
  }
  long emptyUsed=ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed();
  System.out.println("Running:");
  System.out.println("   -- Readers [" + readerThreads.length + "] with ["+ readerIterations+ "] iterations");
  System.out.println("   -- Writers [" + writerThreads.length + "] with ["+ writerIterations+ "] iterations");
  for (  Thread t : readerThreads) {
    t.start();
  }
  for (  Thread t : writerThreads) {
    t.start();
  }
  barrier1.await();
  StopWatch stopWatch=new StopWatch();
  stopWatch.start();
  barrier2.await();
  latch.await();
  stopWatch.stop();
  System.out.println("Took: " + stopWatch.shortSummary());
  for (int i=0; i < 3; i++) {
    System.gc();
    MILLISECONDS.sleep(100);
  }
  long bytesTaken=ManagementFactory.getMemoryMXBean().getHeapMemoryUsage().getUsed() - emptyUsed;
  System.out.println("Size of [" + staticFiles.length + "], each with size ["+ staticFileSize+ "], is "+ new SizeValue(bytesTaken,SizeUnit.BYTES));
}
