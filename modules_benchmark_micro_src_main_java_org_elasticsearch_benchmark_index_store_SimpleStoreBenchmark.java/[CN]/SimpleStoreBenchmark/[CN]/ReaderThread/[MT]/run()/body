{
  try {
    barrier1.await();
    barrier2.await();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  try {
    for (int i=0; i < readerIterations; i++) {
      for (      String staticFile : staticFiles) {
        store.directory().listAll();
        IndexInput ii=store.directory().openInput(staticFile);
        for (long counter=0; counter < ii.length(); counter++) {
          byte result=ii.readByte();
          if (result != 1) {
            System.out.println("Failure, read wrong value [" + result + "]");
          }
        }
        store.directory().listAll();
        ii.seek(ii.length() / 2);
        ii.readByte();
        ii.readByte();
        store.directory().listAll();
      }
    }
  }
 catch (  Exception e) {
    System.out.println("Reader Thread failed: " + e.getMessage());
    e.printStackTrace();
  }
  latch.countDown();
}
