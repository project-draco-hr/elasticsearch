{
  try {
    barrier1.await();
    barrier2.await();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  try {
    for (int i=0; i < writerIterations; i++) {
      String dynamicFileName="dynamic" + dynamicFilesCounter.incrementAndGet();
      IndexOutput io=store.directory().createOutput(dynamicFileName);
      for (long sizeCounter=0; sizeCounter < dynamicFileSize.bytes(); sizeCounter++) {
        io.writeByte((byte)1);
      }
      io.close();
      store.directory().deleteFile(dynamicFileName);
    }
  }
 catch (  Exception e) {
    System.out.println("Writer thread failed: " + e.getMessage());
    e.printStackTrace();
  }
  latch.countDown();
}
