{
  XContentParser parser=parseContext.parser();
  Query query=null;
  float boost=1.0f;
  String script=null;
  String scriptLang=null;
  Map<String,Object> vars=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("query".equals(currentFieldName)) {
        query=parseContext.parseInnerQuery();
      }
 else       if ("params".equals(currentFieldName)) {
        vars=parser.map();
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[custom_score] query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token.isValue()) {
      if ("script".equals(currentFieldName)) {
        script=parser.text();
      }
 else       if ("lang".equals(currentFieldName)) {
        scriptLang=parser.text();
      }
 else       if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[custom_score] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (query == null) {
    throw new QueryParsingException(parseContext.index(),"[custom_score] requires 'query' field");
  }
  if (script == null) {
    throw new QueryParsingException(parseContext.index(),"[custom_score] requires 'script' field");
  }
  SearchScript searchScript=parseContext.scriptService().search(parseContext.lookup(),scriptLang,script,vars);
  FunctionScoreQuery functionScoreQuery=new FunctionScoreQuery(query,new ScriptScoreFunction(script,vars,searchScript));
  functionScoreQuery.setBoost(boost);
  return functionScoreQuery;
}
