{
synchronized (sendMutex) {
    try {
      HandlesStreamOutput out=BytesStreamOutput.Cached.cachedHandles();
      out.writeInt(id);
      clusterName.writeTo(out);
      nodesProvider.nodes().localNode().writeTo(out);
      datagramPacketSend.setData(((BytesStreamOutput)out.wrappedOut()).copiedByteArray());
      datagramPacketSend.setAddress(groupAddress);
      datagramPacketSend.setPort(port);
    }
 catch (    IOException e) {
      receivedResponses.remove(id);
      throw new ZenPingException("Failed to serialize ping request",e);
    }
    if (networkInterfaces != null) {
      Exception lastException=null;
      boolean sentToAtLeastOne=false;
      for (      NetworkInterface inf : networkInterfaces) {
        if (logger.isTraceEnabled()) {
          logger.trace("[{}] Sending ping request on interface {}",id,inf);
        }
        try {
          multicastSocket.setNetworkInterface(inf);
          multicastSocket.send(datagramPacketSend);
          sentToAtLeastOne=true;
        }
 catch (        Exception e) {
          logger.trace("[{}] Failed to send multicast ping on interface {}",e,id,inf);
          lastException=e;
        }
      }
      if (!sentToAtLeastOne) {
        throw new ZenPingException("Failed to send on any of the network interfaces",lastException);
      }
    }
 else {
      try {
        if (logger.isTraceEnabled()) {
          logger.trace("[{}] Sending ping request",id);
        }
        multicastSocket.send(datagramPacketSend);
      }
 catch (      IOException e) {
        receivedResponses.remove(id);
        throw new ZenPingException("Failed to send ping request over multicast",e);
      }
    }
  }
}
