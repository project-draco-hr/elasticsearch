{
synchronized (sendMutex) {
    CachedStreamOutput.Entry cachedEntry=CachedStreamOutput.popEntry();
    try {
      HandlesStreamOutput out=cachedEntry.cachedHandlesBytes();
      out.writeInt(id);
      clusterName.writeTo(out);
      nodesProvider.nodes().localNode().writeTo(out);
      datagramPacketSend.setData(cachedEntry.bytes().copiedByteArray());
    }
 catch (    IOException e) {
      if (remove) {
        receivedResponses.remove(id);
      }
      throw new ZenPingException("Failed to serialize ping request",e);
    }
 finally {
      CachedStreamOutput.pushEntry(cachedEntry);
    }
    try {
      multicastSocket.send(datagramPacketSend);
      if (logger.isTraceEnabled()) {
        logger.trace("[{}] sending ping request",id);
      }
    }
 catch (    IOException e) {
      if (remove) {
        receivedResponses.remove(id);
      }
      if (lifecycle.stoppedOrClosed()) {
        return;
      }
      throw new ZenPingException("Failed to send ping request over multicast on " + multicastSocket,e);
    }
  }
}
