{
  ClusterAllocationExplainRequest req;
  if (RestActions.hasBodyContent(request) == false) {
    req=new ClusterAllocationExplainRequest();
  }
 else {
    BytesReference content=RestActions.getRestContent(request);
    try (XContentParser parser=XContentFactory.xContent(content).createParser(content)){
      req=ClusterAllocationExplainRequest.parse(parser);
    }
 catch (    IOException e) {
      logger.debug("failed to parse allocation explain request",e);
      channel.sendResponse(new BytesRestResponse(ExceptionsHelper.status(e)));
      return;
    }
  }
  try {
    req.includeYesDecisions(request.paramAsBoolean("include_yes_decisions",false));
    client.admin().cluster().allocationExplain(req,new RestBuilderListener<ClusterAllocationExplainResponse>(channel){
      @Override public RestResponse buildResponse(      ClusterAllocationExplainResponse response,      XContentBuilder builder) throws Exception {
        response.getExplanation().toXContent(builder,ToXContent.EMPTY_PARAMS);
        return new BytesRestResponse(RestStatus.OK,builder);
      }
    }
);
  }
 catch (  Exception e) {
    logger.error("failed to explain allocation",e);
    channel.sendResponse(new BytesRestResponse(ExceptionsHelper.status(e)));
  }
}
