{
  IngestDocument ingestDocument=RandomDocumentPicks.randomIngestDocument(random());
  Scalar scalar=randomFrom(Scalar.values());
  List<Object> list=new ArrayList<>();
  int size=randomIntBetween(0,10);
  for (int i=0; i < size; i++) {
    list.add(scalar.randomValue());
  }
  List<Object> checkList=new ArrayList<>(list);
  String field=RandomDocumentPicks.addRandomField(random(),ingestDocument,list);
  List<Object> values=new ArrayList<>();
  Processor appendProcessor;
  if (randomBoolean()) {
    Object value=scalar.randomValue();
    values.add(value);
    appendProcessor=createAppendProcessor(field,value);
  }
 else {
    int valuesSize=randomIntBetween(0,10);
    for (int i=0; i < valuesSize; i++) {
      values.add(scalar.randomValue());
    }
    appendProcessor=createAppendProcessor(field,values);
  }
  appendProcessor.execute(ingestDocument);
  Object fieldValue=ingestDocument.getFieldValue(field,Object.class);
  assertThat(fieldValue,sameInstance(list));
  assertThat(list.size(),equalTo(size + values.size()));
  for (int i=0; i < size; i++) {
    assertThat(list.get(i),equalTo(checkList.get(i)));
  }
  for (int i=size; i < size + values.size(); i++) {
    assertThat(list.get(i),equalTo(values.get(i - size)));
  }
}
