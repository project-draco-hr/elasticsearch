{
  Object filterKey=filter;
  if (filter instanceof CacheKeyFilter) {
    filterKey=((CacheKeyFilter)filter).cacheKey();
  }
  FilterCacheKey cacheKey=new FilterCacheKey(cache.index().name(),reader.getCoreCacheKey(),filterKey);
  Cache<FilterCacheKey,DocSet> innerCache=cache.indicesFilterCache.cache();
  DocSet cacheValue=innerCache.getIfPresent(cacheKey);
  if (cacheValue == null) {
    if (!cache.seenReaders.containsKey(reader.getCoreCacheKey())) {
      Boolean previous=cache.seenReaders.putIfAbsent(reader.getCoreCacheKey(),Boolean.TRUE);
      if (previous == null && (reader instanceof SegmentReader)) {
        ((SegmentReader)reader).addCoreClosedListener(cache);
        cache.seenReadersCount.inc();
      }
    }
    cacheValue=DocSets.cacheable(reader,filter.getDocIdSet(reader));
    cache.totalMetric.inc(cacheValue.sizeInBytes());
    innerCache.put(cacheKey,cacheValue);
  }
  return cacheValue == DocSet.EMPTY_DOC_SET ? null : cacheValue;
}
