{
  Object filterKey=filter;
  if (filter instanceof CacheKeyFilter) {
    filterKey=((CacheKeyFilter)filter).cacheKey();
  }
  FilterCacheKey cacheKey=new FilterCacheKey(cache.index().name(),context.reader().getCoreCacheKey(),filterKey);
  Cache<FilterCacheKey,DocSet> innerCache=cache.indicesFilterCache.cache();
  DocSet cacheValue=innerCache.getIfPresent(cacheKey);
  if (cacheValue == null) {
    if (!cache.seenReaders.containsKey(context.reader().getCoreCacheKey())) {
      Boolean previous=cache.seenReaders.putIfAbsent(context.reader().getCoreCacheKey(),Boolean.TRUE);
      if (previous == null && (context.reader() instanceof SegmentReader)) {
        ((SegmentReader)context.reader()).addCoreClosedListener(cache);
        cache.seenReadersCount.inc();
      }
    }
    cacheValue=DocSets.cacheable(context.reader(),filter.getDocIdSet(context,acceptDocs));
    cache.totalMetric.inc(cacheValue.sizeInBytes());
    innerCache.put(cacheKey,cacheValue);
  }
  return cacheValue == DocSet.EMPTY_DOC_SET ? null : cacheValue;
}
