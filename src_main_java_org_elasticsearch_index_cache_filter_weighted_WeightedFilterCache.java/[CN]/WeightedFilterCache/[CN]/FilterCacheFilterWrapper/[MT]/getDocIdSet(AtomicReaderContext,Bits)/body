{
  Object filterKey=filter;
  if (filter instanceof CacheKeyFilter) {
    filterKey=((CacheKeyFilter)filter).cacheKey();
  }
  FilterCacheKey cacheKey=new FilterCacheKey(this.cache,context.reader().getCoreCacheKey(),filterKey);
  Cache<FilterCacheKey,DocIdSet> innerCache=cache.indicesFilterCache.cache();
  DocIdSet cacheValue=innerCache.getIfPresent(cacheKey);
  if (cacheValue == null) {
    if (!cache.seenReaders.containsKey(context.reader().getCoreCacheKey())) {
      Boolean previous=cache.seenReaders.putIfAbsent(context.reader().getCoreCacheKey(),Boolean.TRUE);
      if (previous == null && (context.reader() instanceof SegmentReader)) {
        ((SegmentReader)context.reader()).addCoreClosedListener(cache);
        cache.seenReadersCount.inc();
      }
    }
    cacheValue=DocIdSets.toCacheable(context.reader(),filter.getDocIdSet(context,context.reader().getLiveDocs()));
    cache.totalMetric.inc(sizeInBytes(cacheValue));
    innerCache.put(cacheKey,cacheValue);
  }
  return cacheValue == DocIdSet.EMPTY_DOCIDSET ? null : cacheValue;
}
