{
  Callable<?> runCallable=mock(Callable.class);
  when(lifecycle.stoppedOrClosed()).thenReturn(true);
  AbstractLifecycleRunnable runnable=new AbstractLifecycleRunnable(lifecycle,logger){
    @Override public void onFailure(    Exception e){
      fail("It should not fail");
    }
    @Override protected void doRunInLifecycle() throws Exception {
      fail("Should not run with lifecycle stopped or closed.");
    }
  }
;
  runnable.run();
  InOrder inOrder=inOrder(lifecycle,logger,runCallable);
  inOrder.verify(lifecycle).stoppedOrClosed();
  inOrder.verify(logger).trace(anyString());
  inOrder.verify(lifecycle).stoppedOrClosed();
  inOrder.verifyNoMoreInteractions();
}
