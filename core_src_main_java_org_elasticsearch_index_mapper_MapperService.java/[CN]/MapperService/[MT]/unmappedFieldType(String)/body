{
  final ImmutableMap<String,MappedFieldType> unmappedFieldMappers=this.unmappedFieldTypes;
  MappedFieldType fieldType=unmappedFieldMappers.get(type);
  if (fieldType == null) {
    final Mapper.TypeParser.ParserContext parserContext=documentMapperParser().parserContext();
    Mapper.TypeParser typeParser=parserContext.typeParser(type);
    if (typeParser == null) {
      throw new IllegalArgumentException("No mapper found for type [" + type + "]");
    }
    final Mapper.Builder<?,?> builder=typeParser.parse("__anonymous_" + type,ImmutableMap.<String,Object>of(),parserContext);
    final BuilderContext builderContext=new BuilderContext(indexSettings,new ContentPath(1));
    fieldType=((FieldMapper)builder.build(builderContext)).fieldType();
    this.unmappedFieldTypes=ImmutableMap.<String,MappedFieldType>builder().putAll(unmappedFieldMappers).put(type,fieldType).build();
  }
  return fieldType;
}
