{
  if (type.equals("string")) {
    deprecationLogger.deprecated("[unmapped_type:string] should be replaced with [unmapped_type:keyword]");
    type="keyword";
  }
  MappedFieldType fieldType=unmappedFieldTypes.get(type);
  if (fieldType == null) {
    final Mapper.TypeParser.ParserContext parserContext=documentMapperParser().parserContext(type);
    Mapper.TypeParser typeParser=parserContext.typeParser(type);
    if (typeParser == null) {
      throw new IllegalArgumentException("No mapper found for type [" + type + "]");
    }
    final Mapper.Builder<?,?> builder=typeParser.parse("__anonymous_" + type,emptyMap(),parserContext);
    final BuilderContext builderContext=new BuilderContext(indexSettings.getSettings(),new ContentPath(1));
    fieldType=((FieldMapper)builder.build(builderContext)).fieldType();
    Map<String,MappedFieldType> newUnmappedFieldTypes=new HashMap<>();
    newUnmappedFieldTypes.putAll(unmappedFieldTypes);
    newUnmappedFieldTypes.put(type,fieldType);
    unmappedFieldTypes=unmodifiableMap(newUnmappedFieldTypes);
  }
  return fieldType;
}
