{
  createIndex("test");
  client().admin().indices().preparePutMapping("test").setType("type1").setSource(XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("ip").field("type","ip").endObject().endObject().endObject().endObject()).execute().actionGet();
  ensureGreen();
  client().prepareIndex("test","type1","1").setSource("ip","192.168.0.1").execute().actionGet();
  client().prepareIndex("test","type1","2").setSource("ip","192.168.0.2").execute().actionGet();
  client().prepareIndex("test","type1","3").setSource("ip","192.168.0.3").execute().actionGet();
  client().prepareIndex("test","type1","4").setSource("ip","192.168.1.4").execute().actionGet();
  refresh();
  SearchResponse search=client().prepareSearch().setQuery(boolQuery().must(QueryBuilders.termQuery("ip","192.168.0.1/32"))).execute().actionGet();
  assertHitCount(search,1l);
  search=client().prepareSearch().setQuery(boolQuery().must(QueryBuilders.termQuery("ip","192.168.0.1/24"))).execute().actionGet();
  assertHitCount(search,3l);
  search=client().prepareSearch().setQuery(boolQuery().must(QueryBuilders.termQuery("ip","192.168.0.1/8"))).execute().actionGet();
  assertHitCount(search,4l);
  search=client().prepareSearch().setQuery(boolQuery().must(QueryBuilders.termQuery("ip","192.168.1.1/24"))).execute().actionGet();
  assertHitCount(search,1l);
  search=client().prepareSearch().setQuery(boolQuery().must(QueryBuilders.termQuery("ip","0.0.0.0/0"))).execute().actionGet();
  assertHitCount(search,4l);
  search=client().prepareSearch().setQuery(boolQuery().must(QueryBuilders.termQuery("ip","192.168.1.5/32"))).execute().actionGet();
  assertHitCount(search,0l);
  assertFailures(client().prepareSearch().setQuery(boolQuery().must(QueryBuilders.termQuery("ip","0/0/0/0/0"))),RestStatus.BAD_REQUEST,containsString("not a valid ip address"));
}
