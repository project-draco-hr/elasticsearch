{
  byte tokenType=(byte)is.read();
  if (tokenType == -1) {
    xsonType=null;
    currentToken=null;
    currentNumberType=null;
    return null;
  }
 else   if (tokenType == XsonType.START_ARRAY.code()) {
    xsonType=XsonType.START_ARRAY;
    currentToken=Token.START_ARRAY;
  }
 else   if (tokenType == XsonType.END_ARRAY.code()) {
    xsonType=XsonType.END_ARRAY;
    currentToken=Token.END_ARRAY;
  }
 else   if (tokenType == XsonType.START_OBJECT.code()) {
    xsonType=XsonType.START_OBJECT;
    currentToken=Token.START_OBJECT;
  }
 else   if (tokenType == XsonType.END_OBJECT.code()) {
    xsonType=XsonType.END_OBJECT;
    currentToken=Token.END_OBJECT;
  }
 else   if (tokenType == XsonType.FIELD_NAME.code()) {
    xsonType=XsonType.FIELD_NAME;
    currentToken=Token.FIELD_NAME;
    currentName=StringHelper.intern(inUTF());
  }
 else   if (tokenType == XsonType.VALUE_STRING.code()) {
    xsonType=XsonType.VALUE_STRING;
    currentToken=Token.VALUE_STRING;
    inUtf16();
  }
 else   if (tokenType == XsonType.VALUE_BINARY.code()) {
    xsonType=XsonType.VALUE_BINARY;
    currentToken=Token.VALUE_STRING;
    int length=inVInt();
    valueBytes=new byte[length];
    inBytes(valueBytes,0,length);
  }
 else   if (tokenType == XsonType.VALUE_INTEGER.code()) {
    xsonType=XsonType.VALUE_INTEGER;
    currentToken=Token.VALUE_NUMBER;
    currentNumberType=NumberType.INT;
    valueInt=inInt();
  }
 else   if (tokenType == XsonType.VALUE_LONG.code()) {
    xsonType=XsonType.VALUE_LONG;
    currentToken=Token.VALUE_NUMBER;
    currentNumberType=NumberType.LONG;
    valueLong=inLong();
  }
 else   if (tokenType == XsonType.VALUE_FLOAT.code()) {
    xsonType=XsonType.VALUE_FLOAT;
    currentToken=Token.VALUE_NUMBER;
    currentNumberType=NumberType.FLOAT;
    valueFloat=inFloat();
  }
 else   if (tokenType == XsonType.VALUE_DOUBLE.code()) {
    xsonType=XsonType.VALUE_DOUBLE;
    currentToken=Token.VALUE_NUMBER;
    currentNumberType=NumberType.DOUBLE;
    valueDouble=inDouble();
  }
 else   if (tokenType == XsonType.VALUE_BOOLEAN.code()) {
    xsonType=XsonType.VALUE_BOOLEAN;
    currentToken=Token.VALUE_BOOLEAN;
    valueBoolean=inBoolean();
  }
 else   if (tokenType == XsonType.VALUE_NULL.code()) {
    xsonType=XsonType.VALUE_NULL;
    currentToken=Token.VALUE_NULL;
  }
  return currentToken;
}
