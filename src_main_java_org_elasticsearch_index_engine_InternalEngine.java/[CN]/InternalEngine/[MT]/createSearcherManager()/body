{
  boolean success=false;
  SearcherManager searcherManager=null;
  try {
    try {
      final DirectoryReader directoryReader=ElasticsearchDirectoryReader.wrap(DirectoryReader.open(indexWriter,true),shardId);
      searcherManager=new SearcherManager(directoryReader,searcherFactory);
      lastCommittedSegmentInfos=readLastCommittedSegmentInfos(searcherManager);
      success=true;
      return searcherManager;
    }
 catch (    IOException e) {
      maybeFailEngine("start",e);
      try {
        indexWriter.rollback();
      }
 catch (      IOException e1) {
        e.addSuppressed(e1);
      }
      throw new EngineCreationFailureException(shardId,"failed to open reader on writer",e);
    }
  }
  finally {
    if (success == false) {
      IOUtils.closeWhileHandlingException(searcherManager,indexWriter);
    }
  }
}
