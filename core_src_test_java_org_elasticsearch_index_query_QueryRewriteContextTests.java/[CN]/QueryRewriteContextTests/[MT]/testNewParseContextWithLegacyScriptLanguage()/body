{
  String defaultLegacyScriptLanguage=randomAsciiOfLength(4);
  IndexMetaData.Builder indexMetadata=new IndexMetaData.Builder("index");
  indexMetadata.settings(Settings.builder().put("index.version.created",Version.CURRENT).put("index.number_of_shards",1).put("index.number_of_replicas",1));
  IndicesQueriesRegistry indicesQueriesRegistry=new SearchModule(Settings.EMPTY,false,emptyList()).getQueryParserRegistry();
  IndexSettings indexSettings=new IndexSettings(indexMetadata.build(),Settings.builder().put(ScriptSettings.LEGACY_SCRIPT_SETTING,defaultLegacyScriptLanguage).build());
  QueryRewriteContext queryRewriteContext=new QueryRewriteContext(indexSettings,null,null,indicesQueriesRegistry,null,null,null);
  ;
  QueryParseContext queryParseContext=queryRewriteContext.newParseContextWithLegacyScriptLanguage(XContentHelper.createParser(new BytesArray("{}")));
  assertEquals(defaultLegacyScriptLanguage,queryParseContext.getDefaultScriptLanguage());
  XContentParser parser=XContentHelper.createParser(new BytesArray("{\"script\" : {\"script\": \"return true\"}}"));
  queryParseContext=queryRewriteContext.newParseContextWithLegacyScriptLanguage(parser);
  ScriptQueryBuilder queryBuilder=(ScriptQueryBuilder)queryParseContext.parseInnerQueryBuilder().get();
  assertEquals(defaultLegacyScriptLanguage,queryBuilder.script().getLang());
}
