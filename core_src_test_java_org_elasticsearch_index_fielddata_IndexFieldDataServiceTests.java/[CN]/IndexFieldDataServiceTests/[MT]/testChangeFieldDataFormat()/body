{
  final IndexService indexService=createIndex("test");
  final IndexFieldDataService ifdService=indexService.fieldData();
  final BuilderContext ctx=new BuilderContext(indexService.settingsService().getSettings(),new ContentPath(1));
  final StringFieldMapper mapper1=MapperBuilders.stringField("s").tokenized(false).fieldDataSettings(Settings.builder().put(FieldDataType.FORMAT_KEY,"paged_bytes").build()).build(ctx);
  final IndexWriter writer=new IndexWriter(new RAMDirectory(),new IndexWriterConfig(new KeywordAnalyzer()));
  Document doc=new Document();
  doc.add(new StringField("s","thisisastring",Store.NO));
  writer.addDocument(doc);
  final IndexReader reader1=DirectoryReader.open(writer,true);
  IndexFieldData<?> ifd=ifdService.getForField(mapper1);
  assertThat(ifd,instanceOf(PagedBytesIndexFieldData.class));
  Set<LeafReader> oldSegments=Collections.newSetFromMap(new IdentityHashMap<LeafReader,Boolean>());
  for (  LeafReaderContext arc : reader1.leaves()) {
    oldSegments.add(arc.reader());
    AtomicFieldData afd=ifd.load(arc);
    assertThat(afd,instanceOf(PagedBytesAtomicFieldData.class));
  }
  writer.addDocument(doc);
  final IndexReader reader2=DirectoryReader.open(writer,true);
  final StringFieldMapper mapper2=MapperBuilders.stringField("s").tokenized(false).fieldDataSettings(Settings.builder().put(FieldDataType.FORMAT_KEY,"fst").build()).build(ctx);
  ifdService.onMappingUpdate();
  ifd=ifdService.getForField(mapper2);
  assertThat(ifd,instanceOf(FSTBytesIndexFieldData.class));
  for (  LeafReaderContext arc : reader2.leaves()) {
    AtomicFieldData afd=ifd.load(arc);
    if (oldSegments.contains(arc.reader())) {
      assertThat(afd,instanceOf(PagedBytesAtomicFieldData.class));
    }
 else {
      assertThat(afd,instanceOf(FSTBytesAtomicFieldData.class));
    }
  }
  reader1.close();
  reader2.close();
  writer.close();
  writer.getDirectory().close();
}
