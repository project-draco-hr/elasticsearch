{
  final IndexService indexService=createIndex("test");
  final IndexFieldDataService ifdService=indexService.fieldData();
  final BuilderContext ctx=new BuilderContext(indexService.settingsService().getSettings(),new ContentPath(1));
  final MappedFieldType stringMapper=MapperBuilders.stringField("string").tokenized(false).fieldDataSettings(DOC_VALUES_SETTINGS).fieldDataSettings(Settings.builder().put("format","fst").build()).build(ctx).fieldType();
  ifdService.clear();
  IndexFieldData<?> fd=ifdService.getForField(stringMapper);
  assertTrue(fd instanceof FSTBytesIndexFieldData);
  final Settings fdSettings=Settings.builder().put("format","array").build();
  for (  MappedFieldType mapper : Arrays.asList(new ByteFieldMapper.Builder("int").fieldDataSettings(DOC_VALUES_SETTINGS).fieldDataSettings(fdSettings).build(ctx).fieldType(),new ShortFieldMapper.Builder("int").fieldDataSettings(DOC_VALUES_SETTINGS).fieldDataSettings(fdSettings).build(ctx).fieldType(),new IntegerFieldMapper.Builder("int").fieldDataSettings(DOC_VALUES_SETTINGS).fieldDataSettings(fdSettings).build(ctx).fieldType(),new LongFieldMapper.Builder("long").fieldDataSettings(DOC_VALUES_SETTINGS).fieldDataSettings(fdSettings).build(ctx).fieldType())) {
    ifdService.clear();
    fd=ifdService.getForField(mapper);
    assertTrue(fd instanceof PackedArrayIndexFieldData);
  }
  final MappedFieldType floatMapper=MapperBuilders.floatField("float").fieldDataSettings(DOC_VALUES_SETTINGS).fieldDataSettings(fdSettings).build(ctx).fieldType();
  ifdService.clear();
  fd=ifdService.getForField(floatMapper);
  assertTrue(fd instanceof FloatArrayIndexFieldData);
  final MappedFieldType doubleMapper=MapperBuilders.doubleField("double").fieldDataSettings(DOC_VALUES_SETTINGS).fieldDataSettings(fdSettings).build(ctx).fieldType();
  ifdService.clear();
  fd=ifdService.getForField(doubleMapper);
  assertTrue(fd instanceof DoubleArrayIndexFieldData);
}
