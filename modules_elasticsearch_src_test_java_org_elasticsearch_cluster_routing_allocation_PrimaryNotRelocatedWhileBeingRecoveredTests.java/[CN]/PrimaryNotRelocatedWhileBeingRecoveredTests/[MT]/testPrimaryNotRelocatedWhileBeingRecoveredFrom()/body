{
  ShardsAllocation strategy=new ShardsAllocation(settingsBuilder().put("cluster.routing.allocation.concurrent_recoveries",10).build());
  logger.info("Building initial routing table");
  MetaData metaData=newMetaDataBuilder().put(newIndexMetaDataBuilder("test").numberOfShards(5).numberOfReplicas(1)).build();
  RoutingTable routingTable=routingTable().add(indexRoutingTable("test").initializeEmpty(metaData.index("test"))).build();
  ClusterState clusterState=newClusterStateBuilder().metaData(metaData).routingTable(routingTable).build();
  logger.info("Adding two nodes and performing rerouting");
  clusterState=newClusterStateBuilder().state(clusterState).nodes(newNodesBuilder().put(newNode("node1"))).build();
  routingTable=strategy.reroute(clusterState).routingTable();
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  logger.info("Start the primary shard (on node1)");
  RoutingNodes routingNodes=clusterState.routingNodes();
  routingTable=strategy.applyStartedShards(clusterState,routingNodes.node("node1").shardsWithState(INITIALIZING)).routingTable();
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  assertThat(routingTable.shardsWithState(STARTED).size(),equalTo(5));
  logger.info("start another node, replica will start recovering form primary");
  clusterState=newClusterStateBuilder().state(clusterState).nodes(newNodesBuilder().putAll(clusterState.nodes()).put(newNode("node2"))).build();
  routingTable=strategy.reroute(clusterState).routingTable();
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  assertThat(routingTable.shardsWithState(STARTED).size(),equalTo(5));
  assertThat(routingTable.shardsWithState(INITIALIZING).size(),equalTo(5));
  logger.info("start another node, make sure the primary is not relocated");
  clusterState=newClusterStateBuilder().state(clusterState).nodes(newNodesBuilder().putAll(clusterState.nodes()).put(newNode("node3"))).build();
  routingTable=strategy.reroute(clusterState).routingTable();
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  assertThat(routingTable.shardsWithState(STARTED).size(),equalTo(5));
  assertThat(routingTable.shardsWithState(INITIALIZING).size(),equalTo(5));
}
