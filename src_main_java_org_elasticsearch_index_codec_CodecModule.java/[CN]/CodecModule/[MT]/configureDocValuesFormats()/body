{
  Map<String,Class<? extends DocValuesFormatProvider>> docValuesFormatProviders=Maps.newHashMap(customDocValuesFormatProviders);
  Map<String,Settings> docValuesFormatSettings=indexSettings.getGroups(DocValuesFormatProvider.DOC_VALUES_FORMAT_SETTINGS_PREFIX);
  for (  Map.Entry<String,Settings> entry : docValuesFormatSettings.entrySet()) {
    final String name=entry.getKey();
    final Settings settings=entry.getValue();
    final String sType=settings.get("type");
    if (sType == null || sType.trim().isEmpty()) {
      throw new ElasticSearchIllegalArgumentException("DocValuesFormat Factory [" + name + "] must have a type associated with it");
    }
    final Class<? extends DocValuesFormatProvider> type;
    try {
      type=settings.getAsClass("type",null,"org.elasticsearch.index.codec.docvaluesformat.","DocValuesFormatProvider");
    }
 catch (    NoClassSettingsException e) {
      throw new ElasticSearchIllegalArgumentException("The specified type [" + sType + "] for docValuesFormat Factory ["+ name+ "] can't be found");
    }
    docValuesFormatProviders.put(name,type);
  }
  MapBinder<String,DocValuesFormatProvider.Factory> docValuesFormatFactoryBinder=MapBinder.newMapBinder(binder(),String.class,DocValuesFormatProvider.Factory.class);
  for (  Map.Entry<String,Class<? extends DocValuesFormatProvider>> entry : docValuesFormatProviders.entrySet()) {
    docValuesFormatFactoryBinder.addBinding(entry.getKey()).toProvider(FactoryProvider.newFactory(DocValuesFormatProvider.Factory.class,entry.getValue())).in(Scopes.SINGLETON);
  }
  for (  PreBuiltDocValuesFormatProvider.Factory factory : DocValuesFormats.listFactories()) {
    if (docValuesFormatProviders.containsKey(factory.name())) {
      continue;
    }
    docValuesFormatFactoryBinder.addBinding(factory.name()).toInstance(factory);
  }
  bind(DocValuesFormatService.class).asEagerSingleton();
}
