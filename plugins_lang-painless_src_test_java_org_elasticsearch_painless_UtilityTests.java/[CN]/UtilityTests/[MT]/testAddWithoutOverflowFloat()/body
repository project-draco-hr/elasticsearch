{
  assertEquals(10F,Utility.addWithoutOverflow(5F,5F),0F);
  assertTrue(Float.isNaN(Utility.addWithoutOverflow(5F,Float.NaN)));
  assertTrue(Float.isNaN(Utility.addWithoutOverflow(Float.POSITIVE_INFINITY,Float.NEGATIVE_INFINITY)));
  try {
    Utility.addWithoutOverflow(Float.MAX_VALUE,Float.MAX_VALUE);
    fail("did not get expected exception");
  }
 catch (  ArithmeticException expected) {
  }
  try {
    Utility.addWithoutOverflow(-Float.MAX_VALUE,-Float.MAX_VALUE);
    fail("did not get expected exception");
  }
 catch (  ArithmeticException expected) {
  }
}
