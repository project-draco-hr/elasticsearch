{
  bind(MemcachedServer.class).asEagerSingleton();
  Class<? extends Module> defaultMemcachedServerTransportModule=null;
  try {
    Classes.getDefaultClassLoader().loadClass("org.elasticsearch.memcached.netty.NettyMemcachedServerTransport");
    defaultMemcachedServerTransportModule=(Class<? extends Module>)Classes.getDefaultClassLoader().loadClass("org.elasticsearch.memcached.netty.NettyMemcachedServerTransportModule");
  }
 catch (  ClassNotFoundException e) {
    if (settings.get("memcached.type") == null) {
      return;
    }
  }
  Class<? extends Module> moduleClass=settings.getAsClass("memcached.type",defaultMemcachedServerTransportModule,"org.elasticsearch.memcached.","MemcachedServerTransportModule");
  createModule(moduleClass,settings).configure(binder());
}
