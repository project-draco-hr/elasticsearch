{
  XContentParser parser=parseContext.parser();
  Query query=null;
  boolean queryFound=false;
  float boost=1.0f;
  String scriptLang=null;
  Map<String,Object> vars=null;
  FiltersFunctionScoreQuery.ScoreMode scoreMode=FiltersFunctionScoreQuery.ScoreMode.First;
  ArrayList<Filter> filters=new ArrayList<Filter>();
  boolean filtersFound=false;
  ArrayList<String> scripts=new ArrayList<String>();
  TFloatArrayList boosts=new TFloatArrayList();
  float maxBoost=Float.MAX_VALUE;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("query".equals(currentFieldName)) {
        query=parseContext.parseInnerQuery();
        queryFound=true;
      }
 else       if ("params".equals(currentFieldName)) {
        vars=parser.map();
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[custom_filters_score] query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if ("filters".equals(currentFieldName)) {
        filtersFound=true;
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          String script=null;
          Filter filter=null;
          boolean filterFound=false;
          float fboost=Float.NaN;
          while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
            if (token == XContentParser.Token.FIELD_NAME) {
              currentFieldName=parser.currentName();
            }
 else             if (token == XContentParser.Token.START_OBJECT) {
              if ("filter".equals(currentFieldName)) {
                filter=parseContext.parseInnerFilter();
                filterFound=true;
              }
            }
 else             if (token.isValue()) {
              if ("script".equals(currentFieldName)) {
                script=parser.text();
              }
 else               if ("boost".equals(currentFieldName)) {
                fboost=parser.floatValue();
              }
            }
          }
          if (script == null && fboost == -1) {
            throw new QueryParsingException(parseContext.index(),"[custom_filters_score] missing 'script' or 'boost' in filters array element");
          }
          if (!filterFound) {
            throw new QueryParsingException(parseContext.index(),"[custom_filters_score] missing 'filter' in filters array element");
          }
          if (filter != null) {
            filters.add(filter);
            scripts.add(script);
            boosts.add(fboost);
          }
        }
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[custom_filters_score] query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token.isValue()) {
      if ("lang".equals(currentFieldName)) {
        scriptLang=parser.text();
      }
 else       if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else       if ("score_mode".equals(currentFieldName) || "scoreMode".equals(currentFieldName)) {
        String sScoreMode=parser.text();
        if ("avg".equals(sScoreMode)) {
          scoreMode=FiltersFunctionScoreQuery.ScoreMode.Avg;
        }
 else         if ("max".equals(sScoreMode)) {
          scoreMode=FiltersFunctionScoreQuery.ScoreMode.Max;
        }
 else         if ("min".equals(sScoreMode)) {
          scoreMode=FiltersFunctionScoreQuery.ScoreMode.Min;
        }
 else         if ("total".equals(sScoreMode)) {
          scoreMode=FiltersFunctionScoreQuery.ScoreMode.Total;
        }
 else         if ("multiply".equals(sScoreMode)) {
          scoreMode=FiltersFunctionScoreQuery.ScoreMode.Multiply;
        }
 else         if ("first".equals(sScoreMode)) {
          scoreMode=FiltersFunctionScoreQuery.ScoreMode.First;
        }
 else {
          throw new QueryParsingException(parseContext.index(),"[custom_filters_score] illegal score_mode [" + sScoreMode + "]");
        }
      }
 else       if ("max_boost".equals(currentFieldName) || "maxBoost".equals(currentFieldName)) {
        maxBoost=parser.floatValue();
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[custom_filters_score] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (!queryFound) {
    throw new QueryParsingException(parseContext.index(),"[custom_filters_score] requires 'query' field");
  }
  if (query == null) {
    return null;
  }
  if (!filtersFound) {
    throw new QueryParsingException(parseContext.index(),"[custom_filters_score] requires 'filters' field");
  }
  if (filters.isEmpty()) {
    return query;
  }
  FiltersFunctionScoreQuery.FilterFunction[] filterFunctions=new FiltersFunctionScoreQuery.FilterFunction[filters.size()];
  for (int i=0; i < filterFunctions.length; i++) {
    ScoreFunction scoreFunction;
    String script=scripts.get(i);
    if (script != null) {
      SearchScript searchScript=parseContext.scriptService().search(parseContext.lookup(),scriptLang,script,vars);
      scoreFunction=new ScriptScoreFunction(script,vars,searchScript);
    }
 else {
      scoreFunction=new BoostScoreFunction(boosts.get(i));
    }
    filterFunctions[i]=new FiltersFunctionScoreQuery.FilterFunction(filters.get(i),scoreFunction);
  }
  FiltersFunctionScoreQuery functionScoreQuery=new FiltersFunctionScoreQuery(query,scoreMode,filterFunctions,maxBoost);
  functionScoreQuery.setBoost(boost);
  return functionScoreQuery;
}
