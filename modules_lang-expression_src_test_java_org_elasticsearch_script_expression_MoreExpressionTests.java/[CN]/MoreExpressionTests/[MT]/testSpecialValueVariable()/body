{
  createIndex("test");
  ensureGreen("test");
  indexRandom(true,client().prepareIndex("test","doc","1").setSource("x",5,"y",1.2),client().prepareIndex("test","doc","2").setSource("x",10,"y",1.4),client().prepareIndex("test","doc","3").setSource("x",13,"y",1.8));
  SearchRequestBuilder req=client().prepareSearch().setIndices("test");
  req.setQuery(QueryBuilders.matchAllQuery()).addAggregation(AggregationBuilders.stats("int_agg").field("x").script(new Script("_value * 3",ScriptType.INLINE,ExpressionScriptEngineService.NAME,null))).addAggregation(AggregationBuilders.stats("double_agg").field("y").script(new Script("_value - 1.1",ScriptType.INLINE,ExpressionScriptEngineService.NAME,null))).addAggregation(AggregationBuilders.stats("const_agg").field("x").script(new Script("3.0",ScriptType.INLINE,ExpressionScriptEngineService.NAME,null)));
  SearchResponse rsp=req.get();
  assertEquals(3,rsp.getHits().getTotalHits());
  Stats stats=rsp.getAggregations().get("int_agg");
  assertEquals(39.0,stats.getMax(),0.0001);
  assertEquals(15.0,stats.getMin(),0.0001);
  stats=rsp.getAggregations().get("double_agg");
  assertEquals(0.7,stats.getMax(),0.0001);
  assertEquals(0.1,stats.getMin(),0.0001);
  stats=rsp.getAggregations().get("const_agg");
  assertThat(stats.getMax(),equalTo(3.0));
  assertThat(stats.getMin(),equalTo(3.0));
  assertThat(stats.getAvg(),equalTo(3.0));
}
