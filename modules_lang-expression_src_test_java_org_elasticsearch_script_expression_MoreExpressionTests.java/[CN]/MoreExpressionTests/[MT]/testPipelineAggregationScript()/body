{
  createIndex("agg_index");
  ensureGreen("agg_index");
  indexRandom(true,client().prepareIndex("agg_index","doc","1").setSource("one",1.0,"two",2.0,"three",3.0,"four",4.0),client().prepareIndex("agg_index","doc","2").setSource("one",2.0,"two",2.0,"three",3.0,"four",4.0),client().prepareIndex("agg_index","doc","3").setSource("one",3.0,"two",2.0,"three",3.0,"four",4.0),client().prepareIndex("agg_index","doc","4").setSource("one",4.0,"two",2.0,"three",3.0,"four",4.0),client().prepareIndex("agg_index","doc","5").setSource("one",5.0,"two",2.0,"three",3.0,"four",4.0));
  SearchResponse response=client().prepareSearch("agg_index").addAggregation(histogram("histogram").field("one").interval(2).subAggregation(sum("twoSum").field("two")).subAggregation(sum("threeSum").field("three")).subAggregation(sum("fourSum").field("four")).subAggregation(bucketScript("totalSum",new Script("_value0 + _value1 + _value2",ScriptType.INLINE,ExpressionScriptEngineService.NAME,null),"twoSum","threeSum","fourSum"))).execute().actionGet();
  Histogram histogram=response.getAggregations().get("histogram");
  assertThat(histogram,notNullValue());
  assertThat(histogram.getName(),equalTo("histogram"));
  List<Histogram.Bucket> buckets=histogram.getBuckets();
  for (int bucketCount=0; bucketCount < buckets.size(); ++bucketCount) {
    Histogram.Bucket bucket=buckets.get(bucketCount);
    if (bucket.getDocCount() == 1) {
      SimpleValue seriesArithmetic=bucket.getAggregations().get("totalSum");
      assertThat(seriesArithmetic,notNullValue());
      double seriesArithmeticValue=seriesArithmetic.value();
      assertEquals(9.0,seriesArithmeticValue,0.001);
    }
 else     if (bucket.getDocCount() == 2) {
      SimpleValue seriesArithmetic=bucket.getAggregations().get("totalSum");
      assertThat(seriesArithmetic,notNullValue());
      double seriesArithmeticValue=seriesArithmetic.value();
      assertEquals(18.0,seriesArithmeticValue,0.001);
    }
 else {
      fail("Incorrect number of documents in a bucket in the histogram.");
    }
  }
}
