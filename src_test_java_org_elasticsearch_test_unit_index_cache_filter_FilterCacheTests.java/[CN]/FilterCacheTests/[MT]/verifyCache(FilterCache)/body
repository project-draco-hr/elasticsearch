{
  Directory dir=new RAMDirectory();
  IndexWriter indexWriter=new IndexWriter(dir,new IndexWriterConfig(Lucene.VERSION,Lucene.STANDARD_ANALYZER));
  DirectoryReader reader=IndexReader.open(indexWriter,true);
  for (int i=0; i < 100; i++) {
    Document document=new Document();
    document.add(new TextField("id",Integer.toString(i),Field.Store.YES));
    indexWriter.addDocument(document);
  }
  reader=refreshReader(reader);
  IndexSearcher searcher=new IndexSearcher(reader);
  assertThat(Lucene.count(searcher,new ConstantScoreQuery(filterCache.cache(new TermFilter(new Term("id","1"))))),equalTo(1l));
  assertThat(Lucene.count(searcher,new XFilteredQuery(new MatchAllDocsQuery(),filterCache.cache(new TermFilter(new Term("id","1"))))),equalTo(1l));
  indexWriter.deleteDocuments(new Term("id","1"));
  reader=refreshReader(reader);
  searcher=new IndexSearcher(reader);
  TermFilter filter=new TermFilter(new Term("id","1"));
  Filter cachedFilter=filterCache.cache(filter);
  long constantScoreCount=filter == cachedFilter ? 0 : 1;
  assertThat(Lucene.count(searcher,new ConstantScoreQuery(cachedFilter)),equalTo(constantScoreCount));
  assertThat(Lucene.count(searcher,new XConstantScoreQuery(cachedFilter)),equalTo(0l));
  assertThat(Lucene.count(searcher,new XFilteredQuery(new MatchAllDocsQuery(),cachedFilter)),equalTo(0l));
  indexWriter.close();
}
