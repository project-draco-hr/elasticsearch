{
  ParseContext context=cache.get().get();
  if (source.type() != null && !source.type().equals(this.type)) {
    throw new MapperParsingException("Type mismatch, provide type [" + source.type() + "] but mapper is of type ["+ this.type+ "]");
  }
  source.type(this.type);
  XContentParser parser=null;
  try {
    parser=XContentFactory.xContent(source.source()).createParser(source.source());
    context.reset(parser,new Document(),type,source.source(),listener);
    XContentParser.Token token=parser.nextToken();
    if (token != XContentParser.Token.START_OBJECT) {
      throw new MapperException("Malformed content, must start with an object");
    }
    token=parser.nextToken();
    if (token != XContentParser.Token.FIELD_NAME) {
      throw new MapperException("Malformed content, after first object, either the type field or the actual properties should exist");
    }
    if (parser.currentName().equals(type)) {
      token=parser.nextToken();
    }
    if (sourceFieldMapper.enabled()) {
      sourceFieldMapper.parse(context);
    }
    if (source.id() != null) {
      context.id(source.id());
      uidFieldMapper.parse(context);
    }
    typeFieldMapper.parse(context);
    if (source.routing() != null) {
      context.externalValue(source.routing());
      routingFieldMapper.parse(context);
    }
    indexFieldMapper.parse(context);
    rootObjectMapper.parse(context);
    if (source.id() == null) {
      uidFieldMapper.parse(context);
    }
    if (context.parsedIdState() != ParseContext.ParsedIdState.PARSED) {
      context.parsedId(ParseContext.ParsedIdState.EXTERNAL);
      idFieldMapper.parse(context);
    }
    if (parentFieldMapper != null) {
      context.externalValue(source.parent());
      parentFieldMapper.parse(context);
    }
    analyzerMapper.parse(context);
    allFieldMapper.parse(context);
    routingFieldMapper.validate(context,source.routing());
  }
 catch (  IOException e) {
    throw new MapperParsingException("Failed to parse",e);
  }
 finally {
    if (parser != null) {
      parser.close();
    }
  }
  ParsedDocument doc=new ParsedDocument(context.uid(),context.id(),context.type(),source.routing(),context.doc(),context.analyzer(),source.source(),context.mappersAdded()).parent(source.parent());
  context.reset(null,null,null,null,null);
  return doc;
}
