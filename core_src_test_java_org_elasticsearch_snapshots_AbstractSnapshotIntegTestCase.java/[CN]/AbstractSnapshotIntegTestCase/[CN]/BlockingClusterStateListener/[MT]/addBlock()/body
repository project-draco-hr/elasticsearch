{
  clusterService.submitStateUpdateTask("test_block",new ClusterStateUpdateTask(passThroughPriority){
    @Override public ClusterState execute(    ClusterState currentState) throws Exception {
      while (System.currentTimeMillis() < stopWaitingAt) {
        for (        PendingClusterTask task : clusterService.pendingTasks()) {
          if (task.getSource().string().equals("test_block") == false && passThroughPriority.sameOrAfter(task.getPriority())) {
            logger.info("passing through cluster state task {}",task.getSource());
            addBlock();
            return currentState;
          }
        }
        try {
          logger.info("waiting....");
          if (latch.await(Math.min(100,timeout.millis()),TimeUnit.MILLISECONDS)) {
            logger.info("unblocked");
            return currentState;
          }
          logger.info("done waiting....");
        }
 catch (        InterruptedException ex) {
          logger.info("interrupted....");
          Thread.currentThread().interrupt();
          return currentState;
        }
      }
      timedOut=true;
      return currentState;
    }
    @Override public void onFailure(    String source,    Exception e){
      logger.warn("failed to execute [{}]",e,source);
    }
  }
);
}
