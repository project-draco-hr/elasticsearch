{
  super(shardId,indexSettings,threadPool,indexSettingsService,indexingService,warmer,store,deletionPolicy,translog,mergePolicyProvider,mergeScheduler,analysisService,similarityService,codecService);
  final long seed=indexSettings.getAsLong(ElasticsearchIntegrationTest.SETTING_INDEX_SEED,0l);
  Random random=new Random(seed);
  final double ratio=indexSettings.getAsDouble(WRAP_READER_RATIO,0.0d);
  Class<? extends AssertingDirectoryReader> wrapper=indexSettings.getAsClass(READER_WRAPPER_TYPE,AssertingDirectoryReader.class);
  boolean wrapReader=random.nextDouble() < ratio;
  if (logger.isTraceEnabled()) {
    logger.trace("Using [{}] for shard [{}] seed: [{}] wrapReader: [{}]",this.getClass().getName(),shardId,seed,wrapReader);
  }
  mockContext=new MockContext(random,wrapReader,wrapper,indexSettings);
}
