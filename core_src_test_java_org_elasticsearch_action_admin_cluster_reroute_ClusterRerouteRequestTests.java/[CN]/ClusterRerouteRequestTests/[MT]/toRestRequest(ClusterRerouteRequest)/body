{
  Map<String,String> params=new HashMap<>();
  XContentBuilder builder=XContentFactory.contentBuilder(randomFrom(XContentType.values()));
  boolean hasBody=false;
  if (randomBoolean()) {
    builder.prettyPrint();
  }
  builder.startObject();
  if (randomBoolean()) {
    params.put("dry_run",Boolean.toString(original.dryRun()));
  }
 else {
    hasBody=true;
    builder.field("dry_run",original.dryRun());
  }
  params.put("explain",Boolean.toString(original.explain()));
  if (false == original.timeout().equals(AcknowledgedRequest.DEFAULT_ACK_TIMEOUT) || randomBoolean()) {
    params.put("timeout",original.timeout().toString());
  }
  if (original.isRetryFailed() || randomBoolean()) {
    params.put("retry_failed",Boolean.toString(original.isRetryFailed()));
  }
  if (false == original.masterNodeTimeout().equals(MasterNodeRequest.DEFAULT_MASTER_NODE_TIMEOUT) || randomBoolean()) {
    params.put("master_timeout",original.masterNodeTimeout().toString());
  }
  if (original.getCommands() != null) {
    hasBody=true;
    original.getCommands().toXContent(builder,ToXContent.EMPTY_PARAMS);
  }
  builder.endObject();
  FakeRestRequest.Builder requestBuilder=new FakeRestRequest.Builder();
  requestBuilder.withParams(params);
  if (hasBody) {
    requestBuilder.withContent(builder.bytes());
  }
  return requestBuilder.build();
}
