{
  for (int round=0; round < ROUNDS; round++) {
    ClusterRerouteRequest request=randomRequest();
    assertEquals(request,request);
    assertEquals(request.hashCode(),request.hashCode());
    ClusterRerouteRequest copy=new ClusterRerouteRequest().add(request.getCommands().commands().toArray(new AllocationCommand[0]));
    copy.dryRun(request.dryRun()).explain(request.explain()).timeout(request.timeout()).setRetryFailed(request.isRetryFailed());
    copy.masterNodeTimeout(request.masterNodeTimeout());
    assertEquals(request,copy);
    assertEquals(copy,request);
    assertEquals(request.hashCode(),copy.hashCode());
    copy.dryRun(!copy.dryRun());
    assertNotEquals(request,copy);
    assertNotEquals(request.hashCode(),copy.hashCode());
    copy.dryRun(!copy.dryRun());
    assertEquals(request,copy);
    assertEquals(request.hashCode(),copy.hashCode());
    copy.explain(!copy.explain());
    assertNotEquals(request,copy);
    assertNotEquals(request.hashCode(),copy.hashCode());
    copy.explain(!copy.explain());
    assertEquals(request,copy);
    assertEquals(request.hashCode(),copy.hashCode());
    copy.timeout(timeValueMillis(request.timeout().millis() + 1));
    assertNotEquals(request,copy);
    assertNotEquals(request.hashCode(),copy.hashCode());
    copy.timeout(request.timeout());
    assertEquals(request,copy);
    assertEquals(request.hashCode(),copy.hashCode());
    copy.masterNodeTimeout(timeValueMillis(request.masterNodeTimeout().millis() + 1));
    assertNotEquals(request,copy);
    assertNotEquals(request.hashCode(),copy.hashCode());
    copy.masterNodeTimeout(request.masterNodeTimeout());
    assertEquals(request,copy);
    assertEquals(request.hashCode(),copy.hashCode());
    copy.add(randomFrom(RANDOM_COMMAND_GENERATORS).get());
    assertNotEquals(request,copy);
  }
}
