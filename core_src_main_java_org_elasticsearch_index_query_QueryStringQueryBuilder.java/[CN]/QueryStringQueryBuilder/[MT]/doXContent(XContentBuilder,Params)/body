{
  builder.startObject(NAME);
  builder.field("query",this.queryString);
  if (this.defaultField != null) {
    builder.field("default_field",this.defaultField);
  }
  builder.startArray("fields");
  for (  Map.Entry<String,Float> fieldEntry : this.fieldsAndWeights.entrySet()) {
    builder.value(fieldEntry.getKey() + "^" + fieldEntry.getValue());
  }
  builder.endArray();
  builder.field("use_dis_max",this.useDisMax);
  builder.field("tie_breaker",this.tieBreaker);
  builder.field("default_operator",this.defaultOperator.name().toLowerCase(Locale.ROOT));
  if (this.analyzer != null) {
    builder.field("analyzer",this.analyzer);
  }
  if (this.quoteAnalyzer != null) {
    builder.field("quote_analyzer",this.quoteAnalyzer);
  }
  builder.field("auto_generate_phrase_queries",this.autoGeneratePhraseQueries);
  builder.field("max_determinized_states",this.maxDeterminizedStates);
  if (this.allowLeadingWildcard != null) {
    builder.field("allow_leading_wildcard",this.allowLeadingWildcard);
  }
  builder.field("lowercase_expanded_terms",this.lowercaseExpandedTerms);
  builder.field("enable_position_increments",this.enablePositionIncrements);
  this.fuzziness.toXContent(builder,params);
  builder.field("fuzzy_prefix_length",this.fuzzyPrefixLength);
  builder.field("fuzzy_max_expansions",this.fuzzyMaxExpansions);
  if (this.fuzzyRewrite != null) {
    builder.field("fuzzy_rewrite",this.fuzzyRewrite);
  }
  builder.field("phrase_slop",this.phraseSlop);
  if (this.analyzeWildcard != null) {
    builder.field("analyze_wildcard",this.analyzeWildcard);
  }
  if (this.rewrite != null) {
    builder.field("rewrite",this.rewrite);
  }
  if (this.minimumShouldMatch != null) {
    builder.field("minimum_should_match",this.minimumShouldMatch);
  }
  if (this.quoteFieldSuffix != null) {
    builder.field("quote_field_suffix",this.quoteFieldSuffix);
  }
  if (this.lenient != null) {
    builder.field("lenient",this.lenient);
  }
  builder.field("locale",this.locale.toLanguageTag());
  if (this.timeZone != null) {
    builder.field("time_zone",this.timeZone.getID());
  }
  builder.field("escape",this.escape);
  printBoostAndQueryName(builder);
  builder.endObject();
}
