{
  IndexFieldData fieldData=loadedFieldData.get(fieldNames.indexName());
  if (fieldData == null) {
synchronized (loadedFieldData) {
      fieldData=loadedFieldData.get(fieldNames.indexName());
      if (fieldData == null) {
        IndexFieldData.Builder builder=null;
        String format=type.getSettings().get("format",indexSettings.get("index.fielddata.type." + type.getType() + ".format",null));
        if (format != null) {
          builder=buildersByTypeAndFormat.get(Tuple.tuple(type.getType(),format));
          if (builder == null) {
            logger.warn("failed to find format [" + format + "] for field ["+ fieldNames.fullName()+ "], will use default");
          }
        }
        if (builder == null) {
          builder=buildersByType.get(type.getType());
        }
        if (builder == null) {
          throw new ElasticSearchIllegalArgumentException("failed to find field data builder for field " + fieldNames.fullName() + ", and type "+ type);
        }
        IndexFieldDataCache cache;
        String cacheType=type.getSettings().get("cache",indexSettings.get("index.fielddata.cache","node"));
        if ("resident".equals(cacheType)) {
          cache=new IndexFieldDataCache.Resident(index,fieldNames,type,this);
        }
 else         if ("soft".equals(cacheType)) {
          cache=new IndexFieldDataCache.Soft(index,fieldNames,type,this);
        }
 else         if ("node".equals(cacheType)) {
          cache=indicesFieldDataCache.buildIndexFieldDataCache(index,fieldNames,type,this);
        }
 else {
          throw new ElasticSearchIllegalArgumentException("cache type not supported [" + cacheType + "] for field ["+ fieldNames.fullName()+ "]");
        }
        fieldData=builder.build(index,indexSettings,fieldNames,type,cache);
        loadedFieldData.put(fieldNames.indexName(),fieldData);
      }
    }
  }
  return (IFD)fieldData;
}
