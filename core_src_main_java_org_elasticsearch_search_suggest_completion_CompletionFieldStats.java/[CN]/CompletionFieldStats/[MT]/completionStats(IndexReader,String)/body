{
  long sizeInBytes=0;
  ObjectLongHashMap<String> completionFields=null;
  if (fieldNamePatterns != null && fieldNamePatterns.length > 0) {
    completionFields=new ObjectLongHashMap<>(fieldNamePatterns.length);
  }
  for (  LeafReaderContext atomicReaderContext : indexReader.leaves()) {
    LeafReader atomicReader=atomicReaderContext.reader();
    try {
      Fields fields=atomicReader.fields();
      for (      String fieldName : fields) {
        Terms terms=fields.terms(fieldName);
        if (terms instanceof CompletionTerms) {
          long fstSize=((CompletionTerms)terms).suggester().ramBytesUsed();
          if (fieldNamePatterns != null && fieldNamePatterns.length > 0 && Regex.simpleMatch(fieldNamePatterns,fieldName)) {
            completionFields.addTo(fieldName,fstSize);
          }
          sizeInBytes+=fstSize;
        }
      }
    }
 catch (    IOException ioe) {
      throw new ElasticsearchException(ioe);
    }
  }
  return new CompletionStats(sizeInBytes,completionFields);
}
