{
  assumeTrue("test runs only when at least a type is registered",getCurrentTypes().length > 0);
  String queryAsString="{\n" + "    \"query_string\":{\n" + "        \"time_zone\":\"Europe/Paris\",\n"+ "        \"query\":\"" + DATE_FIELD_NAME + ":[2012 TO 2014]\"\n"+ "    }\n"+ "}";
  QueryBuilder queryBuilder=parseQuery(queryAsString);
  assertThat(queryBuilder,instanceOf(QueryStringQueryBuilder.class));
  QueryStringQueryBuilder queryStringQueryBuilder=(QueryStringQueryBuilder)queryBuilder;
  assertThat(queryStringQueryBuilder.timeZone(),equalTo(DateTimeZone.forID("Europe/Paris")));
  try {
    queryAsString="{\n" + "    \"query_string\":{\n" + "        \"time_zone\":\"This timezone does not exist\",\n"+ "        \"query\":\"" + DATE_FIELD_NAME + ":[2012 TO 2014]\"\n"+ "    }\n"+ "}";
    parseQuery(queryAsString);
    fail("we expect a ParsingException as we are providing an unknown time_zome");
  }
 catch (  IllegalArgumentException e) {
  }
}
