{
  assumeTrue("test runs only when at least a type is registered",getCurrentTypes().length > 0);
  QueryShardContext shardContext=createShardContext();
  QueryStringQueryBuilder queryStringQuery=queryStringQuery(STRING_FIELD_NAME + ":boosted^2");
  Query query=queryStringQuery.toQuery(shardContext);
  assertThat(query,instanceOf(TermQuery.class));
  assertThat(((TermQuery)query).getTerm(),equalTo(new Term(STRING_FIELD_NAME,"boosted")));
  assertThat(query.getBoost(),equalTo(2.0f));
  queryStringQuery.boost(2.0f);
  query=queryStringQuery.toQuery(shardContext);
  assertThat(query.getBoost(),equalTo(4.0f));
  queryStringQuery=queryStringQuery("((" + STRING_FIELD_NAME + ":boosted^2) AND ("+ STRING_FIELD_NAME+ ":foo^1.5))^3");
  query=queryStringQuery.toQuery(shardContext);
  assertThat(query,instanceOf(BooleanQuery.class));
  assertThat(assertBooleanSubQuery(query,TermQuery.class,0).getTerm(),equalTo(new Term(STRING_FIELD_NAME,"boosted")));
  assertThat(assertBooleanSubQuery(query,TermQuery.class,0).getBoost(),equalTo(2.0f));
  assertThat(assertBooleanSubQuery(query,TermQuery.class,1).getTerm(),equalTo(new Term(STRING_FIELD_NAME,"foo")));
  assertThat(assertBooleanSubQuery(query,TermQuery.class,1).getBoost(),equalTo(1.5f));
  assertThat(query.getBoost(),equalTo(3.0f));
  queryStringQuery.boost(2.0f);
  query=queryStringQuery.toQuery(shardContext);
  assertThat(query.getBoost(),equalTo(6.0f));
}
