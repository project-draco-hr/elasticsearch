{
  if (entries.isEmpty()) {
    return new InternalTermsStatsDoubleFacet(facetName,comparatorType,size,ImmutableList.<InternalTermsStatsDoubleFacet.DoubleEntry>of(),missing);
  }
  if (size == 0) {
    return new InternalTermsStatsDoubleFacet(facetName,comparatorType,0,entries.valueCollection(),missing);
  }
  Object[] values=entries.internalValues();
  Arrays.sort(values,(Comparator)comparatorType.comparator());
  int limit=size;
  List<InternalTermsStatsDoubleFacet.DoubleEntry> ordered=Lists.newArrayList();
  for (int i=0; i < limit; i++) {
    InternalTermsStatsDoubleFacet.DoubleEntry value=(InternalTermsStatsDoubleFacet.DoubleEntry)values[i];
    if (value == null) {
      break;
    }
    ordered.add(value);
  }
  cacheRecycler.pushDoubleObjectMap(entries);
  return new InternalTermsStatsDoubleFacet(facetName,comparatorType,size,ordered,missing);
}
