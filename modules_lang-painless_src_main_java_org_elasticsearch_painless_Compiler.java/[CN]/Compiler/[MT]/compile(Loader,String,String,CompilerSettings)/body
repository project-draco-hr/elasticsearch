{
  if (source.length() > MAXIMUM_SOURCE_LENGTH) {
    throw new IllegalArgumentException("Scripts may be no longer than " + MAXIMUM_SOURCE_LENGTH + " characters.  The passed in script is "+ source.length()+ " characters.  Consider using a"+ " plugin if a script longer than this length is a requirement.");
  }
  Reserved reserved=new Reserved();
  SSource root=Walker.buildPainlessTree(name,source,reserved,settings);
  Variables variables=Analyzer.analyze(reserved,root);
  BitSet expressions=new BitSet(source.length());
  byte[] bytes=Writer.write(settings,name,source,variables,root,expressions);
  try {
    Class<? extends Executable> clazz=loader.define(CLASS_NAME,bytes);
    java.lang.reflect.Constructor<? extends Executable> constructor=clazz.getConstructor(String.class,String.class,BitSet.class);
    return constructor.newInstance(name,source,expressions);
  }
 catch (  Exception exception) {
    throw new IllegalStateException("An internal error occurred attempting to define the script [" + name + "].",exception);
  }
}
