{
  Type membersInjectorType=key.getTypeLiteral().getType();
  if (!(membersInjectorType instanceof ParameterizedType)) {
    throw errors.cannotInjectRawMembersInjector().toException();
  }
  @SuppressWarnings("unchecked") TypeLiteral<T> instanceType=(TypeLiteral<T>)TypeLiteral.get(((ParameterizedType)membersInjectorType).getActualTypeArguments()[0]);
  MembersInjector<T> membersInjector=membersInjectorStore.get(instanceType,errors);
  InternalFactory<MembersInjector<T>> factory=new ConstantFactory<MembersInjector<T>>(Initializables.of(membersInjector));
  return new InstanceBindingImpl<MembersInjector<T>>(this,key,SourceProvider.UNKNOWN_SOURCE,factory,ImmutableSet.<InjectionPoint>of(),membersInjector);
}
