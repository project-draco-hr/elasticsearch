{
  List<String> matchedQueries=Lists.newArrayListWithCapacity(2);
  try {
    DocIdSet docAndNestedDocsIdSet=null;
    if (context.mapperService().documentMapper(hitContext.hit().type()).hasNestedObjects()) {
      Filter docAndNestedDocsFilter=new TermFilter(new Term(UidFieldMapper.NAME,Uid.createUidAsBytes(hitContext.hit().type(),hitContext.hit().id())));
      docAndNestedDocsIdSet=docAndNestedDocsFilter.getDocIdSet(hitContext.readerContext(),null);
    }
    addMatchedQueries(hitContext,context.parsedQuery().namedFilters(),matchedQueries,docAndNestedDocsIdSet);
    if (context.parsedPostFilter() != null) {
      addMatchedQueries(hitContext,context.parsedPostFilter().namedFilters(),matchedQueries,docAndNestedDocsIdSet);
    }
  }
 catch (  IOException e) {
    throw ExceptionsHelper.convertToElastic(e);
  }
 finally {
    SearchContext.current().clearReleasables(Lifetime.COLLECTION);
  }
  hitContext.hit().matchedQueries(matchedQueries.toArray(new String[matchedQueries.size()]));
}
