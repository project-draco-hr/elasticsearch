{
  MockController controller=new MockController(Settings.builder().put(IndexingMemoryController.INDEX_BUFFER_SIZE_SETTING,"10mb").put(IndexingMemoryController.TRANSLOG_BUFFER_SIZE_SETTING,"100kb").put(IndexingMemoryController.SHARD_INACTIVE_TIME_SETTING,"5s").build());
  final ShardId shard1=new ShardId("test",1);
  controller.setTranslog(shard1,0,0);
  final ShardId shard2=new ShardId("test",2);
  controller.setTranslog(shard2,0,0);
  controller.forceCheck();
  controller.assertBuffers(shard1,new ByteSizeValue(5,ByteSizeUnit.MB),new ByteSizeValue(50,ByteSizeUnit.KB));
  controller.assertBuffers(shard2,new ByteSizeValue(5,ByteSizeUnit.MB),new ByteSizeValue(50,ByteSizeUnit.KB));
  controller.setTranslog(shard1,randomInt(2),randomInt(2) + 1);
  controller.setTranslog(shard2,randomInt(2) + 1,randomInt(2));
  controller.incrementTimeSec(10);
  controller.forceCheck();
  controller.assertBuffers(shard1,new ByteSizeValue(5,ByteSizeUnit.MB),new ByteSizeValue(50,ByteSizeUnit.KB));
  controller.assertBuffers(shard2,new ByteSizeValue(5,ByteSizeUnit.MB),new ByteSizeValue(50,ByteSizeUnit.KB));
  controller.incTranslog(shard1,randomInt(2),randomInt(2) + 1);
  controller.forceCheck();
  controller.incrementTimeSec(3);
  controller.forceCheck();
  controller.assertBuffers(shard1,new ByteSizeValue(5,ByteSizeUnit.MB),new ByteSizeValue(50,ByteSizeUnit.KB));
  controller.assertBuffers(shard2,new ByteSizeValue(5,ByteSizeUnit.MB),new ByteSizeValue(50,ByteSizeUnit.KB));
  controller.incrementTimeSec(3);
  controller.forceCheck();
  controller.assertBuffers(shard1,new ByteSizeValue(10,ByteSizeUnit.MB),new ByteSizeValue(64,ByteSizeUnit.KB));
  controller.assertInActive(shard2);
  if (randomBoolean()) {
    controller.simulateFlush(shard2);
    controller.forceCheck();
    controller.assertInActive(shard2);
  }
  controller.incTranslog(shard2,randomInt(2),1 + randomInt(2));
  controller.forceCheck();
  controller.assertBuffers(shard1,new ByteSizeValue(5,ByteSizeUnit.MB),new ByteSizeValue(50,ByteSizeUnit.KB));
  controller.assertBuffers(shard2,new ByteSizeValue(5,ByteSizeUnit.MB),new ByteSizeValue(50,ByteSizeUnit.KB));
}
