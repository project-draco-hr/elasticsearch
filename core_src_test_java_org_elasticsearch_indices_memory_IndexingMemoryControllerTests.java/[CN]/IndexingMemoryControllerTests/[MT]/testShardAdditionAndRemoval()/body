{
  createIndex("test",Settings.builder().put(SETTING_NUMBER_OF_SHARDS,3).put(SETTING_NUMBER_OF_REPLICAS,0).build());
  IndicesService indicesService=getInstanceFromNode(IndicesService.class);
  IndexService test=indicesService.indexService("test");
  MockController controller=new MockController(Settings.builder().put(IndexingMemoryController.INDEX_BUFFER_SIZE_SETTING,"10mb").put(IndexingMemoryController.TRANSLOG_BUFFER_SIZE_SETTING,"100kb").build());
  IndexShard shard0=test.getShard(0);
  controller.simulateIndexing(shard0);
  controller.assertBuffers(shard0,new ByteSizeValue(10,ByteSizeUnit.MB),new ByteSizeValue(64,ByteSizeUnit.KB));
  IndexShard shard1=test.getShard(1);
  controller.simulateIndexing(shard1);
  controller.assertBuffers(shard0,new ByteSizeValue(5,ByteSizeUnit.MB),new ByteSizeValue(50,ByteSizeUnit.KB));
  controller.assertBuffers(shard1,new ByteSizeValue(5,ByteSizeUnit.MB),new ByteSizeValue(50,ByteSizeUnit.KB));
  controller.deleteShard(shard0);
  controller.forceCheck();
  controller.assertBuffers(shard1,new ByteSizeValue(10,ByteSizeUnit.MB),new ByteSizeValue(64,ByteSizeUnit.KB));
  controller.deleteShard(shard1);
  controller.forceCheck();
  IndexShard shard2=test.getShard(2);
  controller.simulateIndexing(shard2);
  controller.assertBuffers(shard2,new ByteSizeValue(10,ByteSizeUnit.MB),new ByteSizeValue(64,ByteSizeUnit.KB));
}
