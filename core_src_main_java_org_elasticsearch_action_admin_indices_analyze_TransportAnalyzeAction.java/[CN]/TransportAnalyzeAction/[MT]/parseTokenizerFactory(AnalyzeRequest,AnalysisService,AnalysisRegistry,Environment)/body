{
  TokenizerFactory tokenizerFactory;
  final AnalyzeRequest.NameOrDefinition tokenizer=request.tokenizer();
  if (tokenizer.definition != null) {
    Settings settings=getAnonymousSettings(tokenizer.definition);
    String tokenizerTypeName=settings.get("type");
    if (tokenizerTypeName == null) {
      throw new IllegalArgumentException("Missing [type] setting for anonymous tokenizer: " + tokenizer.definition);
    }
    AnalysisModule.AnalysisProvider<TokenizerFactory> tokenizerFactoryFactory=analysisRegistry.getTokenizerProvider(tokenizerTypeName);
    if (tokenizerFactoryFactory == null) {
      throw new IllegalArgumentException("failed to find global tokenizer under [" + tokenizerTypeName + "]");
    }
    tokenizerFactory=tokenizerFactoryFactory.get(getNaIndexSettings(settings),environment,"_anonymous_tokenizer",settings);
  }
 else {
    if (analysisService == null) {
      AnalysisModule.AnalysisProvider<TokenizerFactory> tokenizerFactoryFactory=analysisRegistry.getTokenizerProvider(tokenizer.name);
      if (tokenizerFactoryFactory == null) {
        throw new IllegalArgumentException("failed to find global tokenizer under [" + tokenizer.name + "]");
      }
      tokenizerFactory=tokenizerFactoryFactory.get(environment,tokenizer.name);
    }
 else {
      tokenizerFactory=analysisService.tokenizer(tokenizer.name);
      if (tokenizerFactory == null) {
        throw new IllegalArgumentException("failed to find tokenizer under [" + tokenizer.name + "]");
      }
    }
  }
  return tokenizerFactory;
}
