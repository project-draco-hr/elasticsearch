{
  if (request.tokenFilters() != null && request.tokenFilters().size() > 0) {
    tokenFilterFactories=new TokenFilterFactory[request.tokenFilters().size()];
    for (int i=0; i < request.tokenFilters().size(); i++) {
      final AnalyzeRequest.NameOrDefinition tokenFilter=request.tokenFilters().get(i);
      if (tokenFilter.definition != null) {
        Settings settings=getAnonymousSettings(tokenFilter.definition);
        String filterTypeName=settings.get("type");
        if (filterTypeName == null) {
          throw new IllegalArgumentException("Missing [type] setting for anonymous token filter: " + tokenFilter.definition);
        }
        AnalysisModule.AnalysisProvider<TokenFilterFactory> tokenFilterFactoryFactory=analysisRegistry.getTokenFilterProvider(filterTypeName);
        if (tokenFilterFactoryFactory == null) {
          throw new IllegalArgumentException("failed to find global token filter under [" + filterTypeName + "]");
        }
        tokenFilterFactories[i]=tokenFilterFactoryFactory.get(getNaIndexSettings(settings),environment,"_anonymous_tokenfilter_[" + i + "]",settings);
      }
 else {
        if (analysisService == null) {
          AnalysisModule.AnalysisProvider<TokenFilterFactory> tokenFilterFactoryFactory=analysisRegistry.getTokenFilterProvider(tokenFilter.name);
          if (tokenFilterFactoryFactory == null) {
            throw new IllegalArgumentException("failed to find global token filter under [" + tokenFilter.name + "]");
          }
          tokenFilterFactories[i]=tokenFilterFactoryFactory.get(environment,tokenFilter.name);
        }
 else {
          tokenFilterFactories[i]=analysisService.tokenFilter(tokenFilter.name);
          if (tokenFilterFactories[i] == null) {
            throw new IllegalArgumentException("failed to find token filter under [" + tokenFilter.name + "]");
          }
        }
      }
      if (tokenFilterFactories[i] == null) {
        throw new IllegalArgumentException("failed to find or create token filter under [" + tokenFilter.name + "]");
      }
    }
  }
  return tokenFilterFactories;
}
