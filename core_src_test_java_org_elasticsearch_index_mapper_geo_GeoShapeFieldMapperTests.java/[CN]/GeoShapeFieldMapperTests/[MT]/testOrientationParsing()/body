{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("location").field("type","geo_shape").field("orientation","left").endObject().endObject().endObject().endObject().string();
  DocumentMapper defaultMapper=createIndex("test").mapperService().documentMapperParser().parse("type1",new CompressedXContent(mapping));
  FieldMapper fieldMapper=defaultMapper.mappers().getMapper("location");
  assertThat(fieldMapper,instanceOf(GeoShapeFieldMapper.class));
  ShapeBuilder.Orientation orientation=((GeoShapeFieldMapper)fieldMapper).fieldType().orientation();
  assertThat(orientation,equalTo(ShapeBuilder.Orientation.CLOCKWISE));
  assertThat(orientation,equalTo(ShapeBuilder.Orientation.LEFT));
  assertThat(orientation,equalTo(ShapeBuilder.Orientation.CW));
  mapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("location").field("type","geo_shape").field("orientation","right").endObject().endObject().endObject().endObject().string();
  defaultMapper=createIndex("test2").mapperService().documentMapperParser().parse("type1",new CompressedXContent(mapping));
  fieldMapper=defaultMapper.mappers().getMapper("location");
  assertThat(fieldMapper,instanceOf(GeoShapeFieldMapper.class));
  orientation=((GeoShapeFieldMapper)fieldMapper).fieldType().orientation();
  assertThat(orientation,equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE));
  assertThat(orientation,equalTo(ShapeBuilder.Orientation.RIGHT));
  assertThat(orientation,equalTo(ShapeBuilder.Orientation.CCW));
}
