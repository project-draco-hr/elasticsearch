{
  Transports.assertTransportThread();
  try {
    transportServiceAdapter.received(data.length);
    StreamInput stream=new FilterStreamInput(StreamInput.wrap(data),namedWriteableRegistry);
    stream.setVersion(version);
    long requestId=stream.readLong();
    byte status=stream.readByte();
    boolean isRequest=TransportStatus.isRequest(status);
    if (isRequest) {
      handleRequest(stream,requestId,sourceTransport,version);
    }
 else {
      final TransportResponseHandler handler=transportServiceAdapter.onResponseReceived(requestId);
      if (handler != null) {
        if (TransportStatus.isError(status)) {
          handlerResponseError(stream,handler);
        }
 else {
          handleResponse(stream,sourceTransport,handler);
        }
      }
    }
  }
 catch (  Throwable e) {
    if (sendRequestId != null) {
      TransportResponseHandler handler=transportServiceAdapter.onResponseReceived(sendRequestId);
      if (handler != null) {
        handleException(handler,new RemoteTransportException(nodeName(),localAddress,action,e));
      }
    }
 else {
      logger.warn("Failed to receive message for action [" + action + "]",e);
    }
  }
}
