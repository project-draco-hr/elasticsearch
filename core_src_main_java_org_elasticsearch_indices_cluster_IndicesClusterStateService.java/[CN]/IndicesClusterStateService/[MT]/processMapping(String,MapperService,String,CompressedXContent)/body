{
  boolean requiresRefresh=false;
  try {
    DocumentMapper existingMapper=mapperService.documentMapper(mappingType);
    if (existingMapper == null || mappingSource.equals(existingMapper.mappingSource()) == false) {
      String op=existingMapper == null ? "adding" : "updating";
      if (logger.isDebugEnabled() && mappingSource.compressed().length < 512) {
        logger.debug("[{}] {} mapping [{}], source [{}]",index,op,mappingType,mappingSource.string());
      }
 else       if (logger.isTraceEnabled()) {
        logger.trace("[{}] {} mapping [{}], source [{}]",index,op,mappingType,mappingSource.string());
      }
 else {
        logger.debug("[{}] {} mapping [{}] (source suppressed due to length, use TRACE level if needed)",index,op,mappingType);
      }
      mapperService.merge(mappingType,mappingSource,MapperService.MergeReason.MAPPING_RECOVERY,true);
      if (!mapperService.documentMapper(mappingType).mappingSource().equals(mappingSource)) {
        logger.debug("[{}] parsed mapping [{}], and got different sources\noriginal:\n{}\nparsed:\n{}",index,mappingType,mappingSource,mapperService.documentMapper(mappingType).mappingSource());
        requiresRefresh=true;
      }
    }
  }
 catch (  Throwable e) {
    logger.warn("[{}] failed to add mapping [{}], source [{}]",e,index,mappingType,mappingSource);
    throw e;
  }
  return requiresRefresh;
}
