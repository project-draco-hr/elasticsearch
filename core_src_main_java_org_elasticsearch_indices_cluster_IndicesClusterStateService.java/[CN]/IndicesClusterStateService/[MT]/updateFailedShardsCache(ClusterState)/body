{
  RoutingNode localRoutingNode=state.getRoutingNodes().node(state.nodes().getLocalNodeId());
  if (localRoutingNode == null) {
    failedShardsCache.clear();
    return;
  }
  DiscoveryNode masterNode=state.nodes().getMasterNode();
  for (Iterator<Map.Entry<ShardId,ShardRouting>> iterator=failedShardsCache.entrySet().iterator(); iterator.hasNext(); ) {
    ShardRouting failedShardRouting=iterator.next().getValue();
    ShardRouting matchedRouting=localRoutingNode.getByShardId(failedShardRouting.shardId());
    if (matchedRouting == null || matchedRouting.isSameAllocation(failedShardRouting) == false) {
      iterator.remove();
    }
 else {
      if (masterNode != null) {
        String message="master " + masterNode + " has not removed previously failed shard. resending shard failure";
        logger.trace("[{}] re-sending failed shard [{}], reason [{}]",matchedRouting.shardId(),matchedRouting,message);
        shardStateAction.shardFailed(matchedRouting,matchedRouting,message,null,SHARD_STATE_ACTION_LISTENER);
      }
    }
  }
}
