{
  RoutingTable routingTable=event.state().routingTable();
  RoutingNodes.RoutingNodeIterator routingNode=event.state().getRoutingNodes().routingNodeIter(event.state().nodes().localNodeId());
  if (routingNode == null) {
    failedShards.clear();
    return;
  }
  DiscoveryNodes nodes=event.state().nodes();
  long now=System.currentTimeMillis();
  String localNodeId=nodes.localNodeId();
  Iterator<Map.Entry<ShardId,FailedShard>> iterator=failedShards.entrySet().iterator();
  shards:   while (iterator.hasNext()) {
    Map.Entry<ShardId,FailedShard> entry=iterator.next();
    FailedShard failedShard=entry.getValue();
    IndexRoutingTable indexRoutingTable=routingTable.index(entry.getKey().getIndex());
    if (indexRoutingTable != null) {
      IndexShardRoutingTable shardRoutingTable=indexRoutingTable.shard(entry.getKey().id());
      if (shardRoutingTable != null) {
        for (        ShardRouting shardRouting : shardRoutingTable.assignedShards()) {
          if (localNodeId.equals(shardRouting.currentNodeId())) {
            if (shardRouting.version() == failedShard.version && ((now - failedShard.timestamp) < TimeValue.timeValueMinutes(60).millis())) {
              continue shards;
            }
 else {
              break;
            }
          }
        }
      }
    }
    iterator.remove();
  }
}
