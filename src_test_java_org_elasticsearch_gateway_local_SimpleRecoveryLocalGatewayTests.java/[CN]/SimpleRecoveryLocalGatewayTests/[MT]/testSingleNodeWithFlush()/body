{
  cluster().startNode(settingsBuilder().put("index.number_of_shards",1).build());
  client().prepareIndex("test","type1","1").setSource(jsonBuilder().startObject().field("field","value1").endObject()).execute().actionGet();
  client().admin().indices().prepareFlush().execute().actionGet();
  client().prepareIndex("test","type1","2").setSource(jsonBuilder().startObject().field("field","value2").endObject()).execute().actionGet();
  client().admin().indices().prepareRefresh().execute().actionGet();
  assertHitCount(client().prepareCount().setQuery(matchAllQuery()).execute().actionGet(),2);
  cluster().fullRestart();
  logger.info("Running Cluster Health (wait for the shards to startup)");
  ClusterHealthResponse clusterHealth=client().admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForActiveShards(1)).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.YELLOW));
  for (int i=0; i < 10; i++) {
    assertHitCount(client().prepareCount().setQuery(matchAllQuery()).execute().actionGet(),2);
  }
  cluster().fullRestart();
  logger.info("Running Cluster Health (wait for the shards to startup)");
  clusterHealth=client().admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForActiveShards(1)).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.YELLOW));
  for (int i=0; i < 10; i++) {
    assertHitCount(client().prepareCount().setQuery(matchAllQuery()).execute().actionGet(),2);
  }
}
