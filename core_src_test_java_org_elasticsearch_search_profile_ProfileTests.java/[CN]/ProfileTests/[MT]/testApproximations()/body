{
  Profiler profiler=new Profiler();
  Engine.Searcher engineSearcher=new Engine.Searcher("test",new IndexSearcher(reader));
  ContextIndexSearcher searcher=new ContextIndexSearcher(engineSearcher,null,MAYBE_CACHE_POLICY);
  searcher.setProfiler(profiler);
  Query query=new RandomApproximationQuery(new TermQuery(new Term("foo","bar")),random());
  searcher.count(query);
  List<ProfileResult> results=profiler.getQueryTree();
  assertEquals(1,results.size());
  Map<String,Long> breakdown=results.get(0).getTimeBreakdown();
  assertThat(breakdown.get(ProfileBreakdown.TimingType.CREATE_WEIGHT.toString()).longValue(),greaterThan(0L));
  assertThat(breakdown.get(ProfileBreakdown.TimingType.BUILD_SCORER.toString()).longValue(),greaterThan(0L));
  assertThat(breakdown.get(ProfileBreakdown.TimingType.NEXT_DOC.toString()).longValue(),greaterThan(0L));
  assertThat(breakdown.get(ProfileBreakdown.TimingType.ADVANCE.toString()).longValue(),equalTo(0L));
  assertThat(breakdown.get(ProfileBreakdown.TimingType.SCORE.toString()).longValue(),equalTo(0L));
  assertThat(breakdown.get(ProfileBreakdown.TimingType.MATCH.toString()).longValue(),greaterThan(0L));
  long rewriteTime=profiler.getRewriteTime();
  assertThat(rewriteTime,greaterThan(0L));
}
