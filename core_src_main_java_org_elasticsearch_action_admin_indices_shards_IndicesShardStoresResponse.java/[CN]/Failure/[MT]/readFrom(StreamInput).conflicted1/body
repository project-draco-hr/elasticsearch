{
  super.readFrom(in);
  int numResponse=in.readVInt();
  ImmutableOpenMap.Builder<String,ImmutableOpenIntMap<List<StoreStatus>>> storeStatusesBuilder=ImmutableOpenMap.builder();
  for (int i=0; i < numResponse; i++) {
    String index=in.readString();
    int indexEntries=in.readVInt();
    ImmutableOpenIntMap.Builder<List<StoreStatus>> shardEntries=ImmutableOpenIntMap.builder();
    for (int shardCount=0; shardCount < indexEntries; shardCount++) {
      int shardID=in.readInt();
      int nodeEntries=in.readVInt();
      List<StoreStatus> storeStatuses=new ArrayList<>(nodeEntries);
      for (int nodeCount=0; nodeCount < nodeEntries; nodeCount++) {
        storeStatuses.add(readStoreStatus(in));
      }
      shardEntries.put(shardID,storeStatuses);
    }
    storeStatusesBuilder.put(index,shardEntries.build());
  }
  int numFailure=in.readVInt();
  ImmutableList.Builder<Failure> failureBuilder=ImmutableList.builder();
  for (int i=0; i < numFailure; i++) {
    failureBuilder.add(Failure.readFailure(in));
  }
  storeStatuses=storeStatusesBuilder.build();
  failures=failureBuilder.build();
}
