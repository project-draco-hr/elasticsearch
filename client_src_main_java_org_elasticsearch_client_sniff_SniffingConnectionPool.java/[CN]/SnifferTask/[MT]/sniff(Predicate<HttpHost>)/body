{
  if (running.compareAndSet(false,true)) {
    try {
      Iterator<StatefulConnection> connectionIterator=nextConnection().iterator();
      if (connectionIterator.hasNext()) {
        sniff(connectionIterator,hostFilter);
      }
 else {
        StatefulConnection connection=lastResortConnection();
        logger.info("no healthy nodes available, trying " + connection.getHost());
        sniff(Stream.of(connection).iterator(),hostFilter);
      }
    }
 catch (    Throwable t) {
      logger.error("error while sniffing nodes",t);
    }
 finally {
      try {
        this.scheduledFuture.cancel(false);
        if (this.failure) {
          this.scheduledFuture=this.scheduledExecutorService.schedule(this,sniffAfterFailureDelay,TimeUnit.MILLISECONDS);
          this.failure=false;
        }
 else {
          this.scheduledFuture=this.scheduledExecutorService.schedule(this,sniffInterval,TimeUnit.MILLISECONDS);
        }
      }
 catch (      Throwable t) {
        logger.error("error while scheduling next sniffer task",t);
      }
 finally {
        running.set(false);
      }
    }
  }
}
