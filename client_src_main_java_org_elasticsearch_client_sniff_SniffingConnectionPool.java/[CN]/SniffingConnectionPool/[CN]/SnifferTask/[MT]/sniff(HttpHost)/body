{
  if (running.compareAndSet(false,true)) {
    try {
      Iterator<Connection> connectionIterator=nextConnection();
      if (connectionIterator.hasNext()) {
        sniff(connectionIterator,excludeHost);
      }
 else {
        Connection connection=lastResortConnection();
        logger.info("no healthy nodes available, trying " + connection.getHost());
        sniff(Collections.singleton(connection).iterator(),excludeHost);
      }
    }
 catch (    Throwable t) {
      logger.error("error while sniffing nodes",t);
    }
 finally {
      try {
        this.scheduledFuture.cancel(false);
        if (this.failure) {
          this.scheduledFuture=this.scheduledExecutorService.schedule(this,sniffAfterFailureDelay,TimeUnit.MILLISECONDS);
          this.failure=false;
        }
 else {
          this.scheduledFuture=this.scheduledExecutorService.schedule(this,sniffInterval,TimeUnit.MILLISECONDS);
        }
      }
 catch (      Throwable t) {
        logger.error("error while scheduling next sniffer task",t);
      }
 finally {
        running.set(false);
      }
    }
  }
}
