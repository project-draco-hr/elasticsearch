{
  XContentParser parser=parseContext.parser();
  BytesRef type=null;
  String queryName=null;
  float boost=AbstractQueryBuilder.DEFAULT_BOOST;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token.isValue()) {
      if (parseContext.parseFieldMatcher().match(currentFieldName,AbstractQueryBuilder.NAME_FIELD)) {
        queryName=parser.text();
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,AbstractQueryBuilder.BOOST_FIELD)) {
        boost=parser.floatValue();
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,VALUE_FIELD)) {
        type=parser.utf8Bytes();
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"[" + TypeQueryBuilder.NAME + "] filter doesn't support ["+ currentFieldName+ "]");
      }
    }
 else {
      throw new ParsingException(parser.getTokenLocation(),"[" + TypeQueryBuilder.NAME + "] filter doesn't support ["+ currentFieldName+ "]");
    }
  }
  if (type == null) {
    throw new ParsingException(parser.getTokenLocation(),"[" + TypeQueryBuilder.NAME + "] filter needs to be provided with a value for the type");
  }
  return new TypeQueryBuilder(type).boost(boost).queryName(queryName);
}
