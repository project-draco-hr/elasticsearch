{
  XContentParser parser=parseContext.parser();
  String queryName=null;
  float boost=AbstractQueryBuilder.DEFAULT_BOOST;
  BytesRef type=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token.isValue()) {
      if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else       if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else       if ("value".equals(currentFieldName)) {
        type=parser.utf8Bytes();
      }
    }
 else {
      throw new QueryParsingException(parseContext,"[type] filter doesn't support [" + currentFieldName + "]");
    }
  }
  if (type == null) {
    throw new QueryParsingException(parseContext,"[type] filter needs to be provided with a value for the type");
  }
  Query filter;
  DocumentMapper documentMapper=parseContext.mapperService().documentMapper(type.utf8ToString());
  if (documentMapper == null) {
    filter=new TermQuery(new Term(TypeFieldMapper.NAME,type));
  }
 else {
    filter=documentMapper.typeFilter();
  }
  if (queryName != null) {
    parseContext.addNamedQuery(queryName,filter);
  }
  if (filter != null) {
    filter.setBoost(boost);
  }
  return filter;
}
