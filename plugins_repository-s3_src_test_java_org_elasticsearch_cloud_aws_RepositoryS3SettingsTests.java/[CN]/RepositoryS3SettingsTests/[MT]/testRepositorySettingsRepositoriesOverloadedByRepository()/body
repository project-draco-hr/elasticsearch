{
  Settings nodeSettings=buildSettings(AWS,S3,REPOSITORIES);
  RepositorySettings repositorySettings=new RepositorySettings(nodeSettings,REPOSITORY);
  assertThat(getValue(repositorySettings,Repository.KEY_SETTING,Repositories.KEY_SETTING),is("repository-key"));
  assertThat(getValue(repositorySettings,Repository.SECRET_SETTING,Repositories.SECRET_SETTING),is("repository-secret"));
  assertThat(getValue(repositorySettings,Repository.BUCKET_SETTING,Repositories.BUCKET_SETTING),is("repository-bucket"));
  assertThat(getValue(repositorySettings,Repository.PROTOCOL_SETTING,Repositories.PROTOCOL_SETTING),is(Protocol.HTTPS));
  assertThat(getValue(repositorySettings,Repository.REGION_SETTING,Repositories.REGION_SETTING),is("repository-region"));
  assertThat(getValue(repositorySettings,Repository.ENDPOINT_SETTING,Repositories.ENDPOINT_SETTING),is("repository-endpoint"));
  assertThat(AwsS3Service.CLOUD_S3.PROXY_HOST_SETTING.get(nodeSettings),is("s3-proxy-host"));
  assertThat(AwsS3Service.CLOUD_S3.PROXY_PORT_SETTING.get(nodeSettings),is(20000));
  assertThat(AwsS3Service.CLOUD_S3.PROXY_USERNAME_SETTING.get(nodeSettings),is("s3-proxy-username"));
  assertThat(AwsS3Service.CLOUD_S3.PROXY_PASSWORD_SETTING.get(nodeSettings),is("s3-proxy-password"));
  assertThat(AwsS3Service.CLOUD_S3.SIGNER_SETTING.get(nodeSettings),is("s3-signer"));
  assertThat(getValue(repositorySettings,Repository.SERVER_SIDE_ENCRYPTION_SETTING,Repositories.SERVER_SIDE_ENCRYPTION_SETTING),is(false));
  assertThat(getValue(repositorySettings,Repository.BUFFER_SIZE_SETTING,Repositories.BUFFER_SIZE_SETTING).getMb(),is(7L));
  assertThat(getValue(repositorySettings,Repository.MAX_RETRIES_SETTING,Repositories.MAX_RETRIES_SETTING),is(5));
  assertThat(getValue(repositorySettings,Repository.CHUNK_SIZE_SETTING,Repositories.CHUNK_SIZE_SETTING).getMb(),is(120L));
  assertThat(getValue(repositorySettings,Repository.COMPRESS_SETTING,Repositories.COMPRESS_SETTING),is(false));
  assertThat(getValue(repositorySettings,Repository.STORAGE_CLASS_SETTING,Repositories.STORAGE_CLASS_SETTING),is("repository-class"));
  assertThat(getValue(repositorySettings,Repository.CANNED_ACL_SETTING,Repositories.CANNED_ACL_SETTING),is("repository-acl"));
  assertThat(getValue(repositorySettings,Repository.BASE_PATH_SETTING,Repositories.BASE_PATH_SETTING),is("repository-basepath"));
}
