{
  ShardsRoutingStrategy strategy=new ShardsRoutingStrategy();
  logger.info("Building initial routing table");
  MetaData metaData=newMetaDataBuilder().put(newIndexMetaDataBuilder("test").numberOfShards(1).numberOfReplicas(1)).build();
  RoutingTable routingTable=routingTable().add(indexRoutingTable("test").initializeEmpty(metaData.index("test"))).build();
  ClusterState clusterState=newClusterStateBuilder().metaData(metaData).routingTable(routingTable).build();
  assertThat(routingTable.index("test").shards().size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).size(),equalTo(2));
  assertThat(routingTable.index("test").shard(0).shards().size(),equalTo(2));
  assertThat(routingTable.index("test").shard(0).shards().get(0).state(),equalTo(UNASSIGNED));
  assertThat(routingTable.index("test").shard(0).shards().get(1).state(),equalTo(UNASSIGNED));
  assertThat(routingTable.index("test").shard(0).shards().get(0).currentNodeId(),nullValue());
  assertThat(routingTable.index("test").shard(0).shards().get(1).currentNodeId(),nullValue());
  logger.info("Adding one node and performing rerouting");
  clusterState=newClusterStateBuilder().state(clusterState).nodes(newNodesBuilder().put(newNode("node1")).put(newNode("node2"))).build();
  RoutingTable prevRoutingTable=routingTable;
  routingTable=strategy.reroute(clusterState);
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  assertThat(prevRoutingTable != routingTable,equalTo(true));
  assertThat(routingTable.index("test").shards().size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).size(),equalTo(2));
  assertThat(routingTable.index("test").shard(0).shards().size(),equalTo(2));
  assertThat(routingTable.index("test").shard(0).primaryShard().state(),equalTo(INITIALIZING));
  assertThat(routingTable.index("test").shard(0).primaryShard().currentNodeId(),equalTo("node1"));
  assertThat(routingTable.index("test").shard(0).backupsShards().size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).backupsShards().get(0).state(),equalTo(UNASSIGNED));
  assertThat(routingTable.index("test").shard(0).backupsShards().get(0).currentNodeId(),nullValue());
  logger.info("Start all the primary shards");
  RoutingNodes routingNodes=routingTable.routingNodes(clusterState.metaData());
  prevRoutingTable=routingTable;
  routingTable=strategy.applyStartedShards(clusterState,routingNodes.node("node1").shardsWithState(INITIALIZING));
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  assertThat(prevRoutingTable != routingTable,equalTo(true));
  assertThat(routingTable.index("test").shards().size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).size(),equalTo(2));
  assertThat(routingTable.index("test").shard(0).shards().size(),equalTo(2));
  assertThat(routingTable.index("test").shard(0).primaryShard().state(),equalTo(STARTED));
  assertThat(routingTable.index("test").shard(0).primaryShard().currentNodeId(),equalTo("node1"));
  assertThat(routingTable.index("test").shard(0).backupsShards().size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).backupsShards().get(0).state(),equalTo(INITIALIZING));
  assertThat(routingTable.index("test").shard(0).backupsShards().get(0).currentNodeId(),equalTo("node2"));
}
