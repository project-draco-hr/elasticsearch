{
  this.throwable=throwable;
  this.name=throwable.getClass().getName();
  this.message=throwable.getMessage();
  this.localizedMessage=throwable.getLocalizedMessage();
  final Map<String,CacheEntry> map=new HashMap<>();
  final Stack<Class<?>> stack=ReflectionUtil.getCurrentStackTrace();
  this.extendedStackTrace=this.toExtendedStackTrace(stack,map,null,throwable.getStackTrace());
  final Throwable throwableCause=throwable.getCause();
  final Set<Throwable> causeVisited=new HashSet<>(1);
  this.causeProxy=throwableCause == null ? null : new ThrowableProxy(throwable,stack,map,throwableCause,visited,causeVisited);
  this.suppressedProxies=this.toSuppressedProxies(throwable,visited);
}
