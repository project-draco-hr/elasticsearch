{
  MoreLikeThisQueryParser parser=(MoreLikeThisQueryParser)queryParser.queryParser("more_like_this");
  parser.setFetchService(new MockMoreLikeThisFetchService());
  List<LikeText> likeTexts=new ArrayList<>();
  likeTexts.add(new LikeText("name.first",new String[]{"test person 1 name.first","test person 2 name.first","test person 3 name.first","test person 4 name.first"}));
  likeTexts.add(new LikeText("name.last",new String[]{"test person 1 name.last","test person 2 name.last","test person 3 name.last","test person 4 name.last"}));
  IndexQueryParserService queryParser=queryParser();
  String query=copyToStringFromClasspath("/org/elasticsearch/index/query/mlt-items.json");
  Query parsedQuery=queryParser.parse(query).query();
  assertThat(parsedQuery,instanceOf(BooleanQuery.class));
  BooleanQuery booleanQuery=(BooleanQuery)parsedQuery;
  assertThat(booleanQuery.getClauses().length,is(likeTexts.size() + 1));
  BooleanClause[] boolClauses=booleanQuery.getClauses();
  for (int i=0; i < likeTexts.size(); i++) {
    BooleanClause booleanClause=booleanQuery.getClauses()[i];
    assertThat(booleanClause.getOccur(),is(BooleanClause.Occur.SHOULD));
    assertThat(booleanClause.getQuery(),instanceOf(MoreLikeThisQuery.class));
    MoreLikeThisQuery mltQuery=(MoreLikeThisQuery)booleanClause.getQuery();
    assertThat(mltQuery.getLikeTexts(),is(likeTexts.get(i).text));
    assertThat(mltQuery.getMoreLikeFields()[0],equalTo(likeTexts.get(i).field));
  }
  BooleanClause boolClause=boolClauses[boolClauses.length - 1];
  assertThat(boolClause.getOccur(),is(BooleanClause.Occur.SHOULD));
  assertThat(boolClause.getQuery(),instanceOf(MoreLikeThisQuery.class));
  MoreLikeThisQuery mltQuery=(MoreLikeThisQuery)boolClause.getQuery();
  assertArrayEquals("Not the same more like this 'fields'",new String[]{"name.first","name.last"},mltQuery.getMoreLikeFields());
  assertThat(mltQuery.getLikeText(),equalTo("Apache Lucene"));
}
