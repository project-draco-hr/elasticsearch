{
  IndexQueryParserService queryParser=queryParser();
  String query=copyToStringFromClasspath("/org/elasticsearch/index/query/bool-filter.json");
  Query parsedQuery=queryParser.parse(query).query();
  assertThat(parsedQuery,instanceOf(FilteredQuery.class));
  FilteredQuery filteredQuery=(FilteredQuery)parsedQuery;
  XBooleanFilter booleanFilter=(XBooleanFilter)filteredQuery.getFilter();
  Iterator<FilterClause> iterator=booleanFilter.iterator();
  assertThat(iterator.hasNext(),equalTo(true));
  FilterClause clause=iterator.next();
  assertThat(clause.getOccur(),equalTo(BooleanClause.Occur.MUST));
  assertThat(getTerm(clause.getFilter()),equalTo(new Term("name.first","shay1")));
  assertThat(iterator.hasNext(),equalTo(true));
  clause=iterator.next();
  assertThat(clause.getOccur(),equalTo(BooleanClause.Occur.MUST));
  assertThat(getTerm(clause.getFilter()),equalTo(new Term("name.first","shay4")));
  assertThat(iterator.hasNext(),equalTo(true));
  clause=iterator.next();
  assertThat(clause.getOccur(),equalTo(BooleanClause.Occur.MUST_NOT));
  assertThat(getTerm(clause.getFilter()),equalTo(new Term("name.first","shay2")));
  assertThat(iterator.hasNext(),equalTo(true));
  clause=iterator.next();
  assertThat(clause.getOccur(),equalTo(BooleanClause.Occur.SHOULD));
  assertThat(getTerm(clause.getFilter()),equalTo(new Term("name.first","shay3")));
  assertThat(iterator.hasNext(),equalTo(false));
}
