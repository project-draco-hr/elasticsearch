{
  super(settings);
  this.threadPool=threadPool;
  this.clusterService=clusterService;
  this.clientProvider=clientProvider;
  this.scrollTimeout=settings.getAsTime("ingest.pipeline.store.scroll.timeout",TimeValue.timeValueSeconds(30));
  this.pipelineUpdateInterval=settings.getAsTime("ingest.pipeline.store.update.interval",TimeValue.timeValueSeconds(1));
  Map<String,Processor.Factory> processorFactories=new HashMap<>();
  for (  Map.Entry<String,ProcessorFactoryProvider> entry : processorFactoryProviders.entrySet()) {
    Processor.Factory processorFactory=entry.getValue().get(environment);
    processorFactories.put(entry.getKey(),processorFactory);
  }
  this.processorFactoryRegistry=Collections.unmodifiableMap(processorFactories);
  clusterService.add(new PipelineStoreListener());
}
