{
  builder.startObject(NAME);
  builder.field("query",queryText);
  if (fieldsAndWeights.size() > 0) {
    builder.startArray("fields");
    for (    Map.Entry<String,Float> entry : fieldsAndWeights.entrySet()) {
      builder.value(entry.getKey() + "^" + entry.getValue());
    }
    builder.endArray();
  }
  if (analyzer != null) {
    builder.field("analyzer",analyzer);
  }
  builder.field("flags",flags);
  builder.field("default_operator",defaultOperator.name().toLowerCase(Locale.ROOT));
  builder.field("lowercase_expanded_terms",settings.lowercaseExpandedTerms());
  builder.field("lenient",settings.lenient());
  builder.field("analyze_wildcard",settings.analyzeWildcard());
  builder.field("locale",(settings.locale().toLanguageTag()));
  if (minimumShouldMatch != null) {
    builder.field("minimum_should_match",minimumShouldMatch);
  }
  printBoostAndQueryName(builder);
  builder.endObject();
}
