{
  builder.field("type",contentType());
  if (includeDefaults || fieldType().boost() != 1.0f) {
    builder.field("boost",fieldType().boost());
  }
  boolean indexed=fieldType().indexOptions() != IndexOptions.NONE;
  boolean defaultIndexed=defaultFieldType.indexOptions() != IndexOptions.NONE;
  if (includeDefaults || indexed != defaultIndexed || fieldType().tokenized() != defaultFieldType.tokenized()) {
    builder.field("index",indexTokenizeOption(indexed,fieldType().tokenized()));
  }
  if (includeDefaults || fieldType().stored() != defaultFieldType.stored()) {
    builder.field("store",fieldType().stored());
  }
  doXContentDocValues(builder,includeDefaults);
  if (includeDefaults || fieldType().storeTermVectors() != defaultFieldType.storeTermVectors()) {
    builder.field("term_vector",termVectorOptionsToString(fieldType()));
  }
  if (includeDefaults || fieldType().omitNorms() != defaultFieldType.omitNorms() || fieldType().normsLoading() != null) {
    builder.startObject("norms");
    if (includeDefaults || fieldType().omitNorms() != defaultFieldType.omitNorms()) {
      builder.field("enabled",!fieldType().omitNorms());
    }
    if (fieldType().normsLoading() != null) {
      builder.field(MappedFieldType.Loading.KEY,fieldType().normsLoading());
    }
    builder.endObject();
  }
  if (indexed && (includeDefaults || fieldType().indexOptions() != defaultFieldType.indexOptions())) {
    builder.field("index_options",indexOptionToString(fieldType().indexOptions()));
  }
  doXContentAnalyzers(builder,includeDefaults);
  if (fieldType().similarity() != null) {
    builder.field("similarity",fieldType().similarity().name());
  }
 else   if (includeDefaults) {
    builder.field("similarity",SimilarityService.DEFAULT_SIMILARITY);
  }
  if (includeDefaults || hasCustomFieldDataSettings()) {
    builder.field("fielddata",fieldType().fieldDataType().getSettings().getAsMap());
  }
  multiFields.toXContent(builder,params);
  if (copyTo != null) {
    copyTo.toXContent(builder,params);
  }
}
