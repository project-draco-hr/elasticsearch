{
  ImmutableOpenMap.Builder<String,FieldMapper> newMappersBuilder=ImmutableOpenMap.builder(mappers);
  for (  ObjectCursor<FieldMapper> cursor : mergeWith.mappers.values()) {
    FieldMapper mergeWithMapper=cursor.value;
    FieldMapper mergeIntoMapper=mappers.get(mergeWithMapper.simpleName());
    if (mergeIntoMapper == null) {
      if (mergeWithMapper instanceof AllFieldMapper.IncludeInAll) {
        mergeWithMapper=(FieldMapper)((AllFieldMapper.IncludeInAll)mergeWithMapper).unsetIncludeInAll();
      }
      newMappersBuilder.put(mergeWithMapper.simpleName(),mergeWithMapper);
    }
 else {
      FieldMapper merged=mergeIntoMapper.merge(mergeWithMapper,false);
      newMappersBuilder.put(merged.simpleName(),merged);
    }
  }
  ImmutableOpenMap<String,FieldMapper> mappers=newMappersBuilder.build();
  return new MultiFields(mappers);
}
