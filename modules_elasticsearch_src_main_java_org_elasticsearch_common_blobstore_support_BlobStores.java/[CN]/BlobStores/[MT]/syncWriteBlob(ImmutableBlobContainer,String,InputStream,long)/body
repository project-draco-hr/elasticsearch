{
  final CountDownLatch latch=new CountDownLatch(1);
  final AtomicReference<Throwable> failure=new AtomicReference<Throwable>();
  blobContainer.writeBlob(blobName,is,sizeInBytes,new ImmutableBlobContainer.WriterListener(){
    @Override public void onCompleted(){
      latch.countDown();
    }
    @Override public void onFailure(    Throwable t){
      failure.set(t);
      latch.countDown();
    }
  }
);
  try {
    latch.await();
  }
 catch (  InterruptedException e) {
    throw new InterruptedIOException("Interrupted while waiting to write [" + blobName + "]");
  }
  if (failure.get() != null) {
    if (failure.get() instanceof IOException) {
      throw (IOException)failure.get();
    }
 else {
      throw new IOException("Failed to get [" + blobName + "]",failure.get());
    }
  }
}
