{
  super(settings);
  this.threadPool=threadPool;
  this.clusterService=clusterService;
  this.indicesService=indicesService;
  this.indicesWarmer=indicesWarmer;
  this.scriptService=scriptService;
  this.cacheRecycler=cacheRecycler;
  this.dfsPhase=dfsPhase;
  this.queryPhase=queryPhase;
  this.fetchPhase=fetchPhase;
  TimeValue keepAliveInterval=componentSettings.getAsTime("keep_alive_interval",timeValueMinutes(1));
  this.defaultKeepAlive=componentSettings.getAsTime("default_keep_alive",timeValueMinutes(5)).millis();
  Map<String,SearchParseElement> elementParsers=new HashMap<String,SearchParseElement>();
  elementParsers.putAll(dfsPhase.parseElements());
  elementParsers.putAll(queryPhase.parseElements());
  elementParsers.putAll(fetchPhase.parseElements());
  elementParsers.put("stats",new StatsGroupsParseElement());
  this.elementParsers=ImmutableMap.copyOf(elementParsers);
  indicesLifecycle.addListener(indicesLifecycleListener);
  this.keepAliveReaper=threadPool.scheduleWithFixedDelay(new Reaper(),keepAliveInterval);
  this.indicesWarmer.addListener(new SearchWarmer());
}
