{
  final ExecutableScript executable;
  if (hasLength(request.templateName())) {
    executable=this.scriptService.executable(MustacheScriptEngineService.NAME,request.templateName(),request.templateType(),request.templateParams());
  }
 else {
    if (!hasLength(request.templateSource())) {
      return;
    }
    XContentParser parser=null;
    TemplateQueryParser.TemplateContext templateContext=null;
    try {
      parser=XContentFactory.xContent(request.templateSource()).createParser(request.templateSource());
      templateContext=TemplateQueryParser.parse(parser,"params","template");
      if (templateContext.scriptType() == ScriptService.ScriptType.INLINE) {
        parser=null;
        try {
          byte[] templateBytes=templateContext.template().getBytes(Charsets.UTF_8);
          parser=XContentFactory.xContent(templateBytes).createParser(templateBytes);
        }
 catch (        ElasticsearchParseException epe) {
          templateContext=new TemplateQueryParser.TemplateContext(ScriptService.ScriptType.FILE,templateContext.template(),templateContext.params());
        }
        if (parser != null) {
          TemplateQueryParser.TemplateContext innerContext=TemplateQueryParser.parse(parser,"params");
          if (hasLength(innerContext.template()) && !innerContext.scriptType().equals(ScriptService.ScriptType.INLINE)) {
            templateContext=new TemplateQueryParser.TemplateContext(innerContext.scriptType(),innerContext.template(),templateContext.params());
          }
        }
      }
    }
 catch (    IOException e) {
      throw new ElasticsearchParseException("Failed to parse template",e);
    }
 finally {
      Releasables.closeWhileHandlingException(parser);
    }
    if (!hasLength(templateContext.template())) {
      throw new ElasticsearchParseException("Template must have [template] field configured");
    }
    executable=this.scriptService.executable(MustacheScriptEngineService.NAME,templateContext.template(),templateContext.scriptType(),templateContext.params());
  }
  BytesReference processedQuery=(BytesReference)executable.run();
  request.source(processedQuery);
}
