{
  final SearchContext context=findContext(request.id());
  contextProcessing(context);
  try {
    final IndexCache indexCache=context.indexShard().indexService().cache();
    context.searcher().dfSource(new CachedDfSource(context.searcher().getIndexReader(),request.dfs(),context.similarityService().similarity(),indexCache.filter(),indexCache.filterPolicy()));
  }
 catch (  Throwable e) {
    freeContext(context.id());
    cleanContext(context);
    throw new QueryPhaseExecutionException(context,"Failed to set aggregated df",e);
  }
  try {
    context.indexShard().searchService().onPreQueryPhase(context);
    long time=System.nanoTime();
    queryPhase.execute(context);
    if (context.queryResult().topDocs().scoreDocs.length == 0 && context.scroll() == null) {
      freeContext(context.id());
    }
 else {
      contextProcessedSuccessfully(context);
    }
    context.indexShard().searchService().onQueryPhase(context,System.nanoTime() - time);
    return context.queryResult();
  }
 catch (  Throwable e) {
    context.indexShard().searchService().onFailedQueryPhase(context);
    logger.trace("Query phase failed",e);
    freeContext(context.id());
    throw ExceptionsHelper.convertToRuntime(e);
  }
 finally {
    cleanContext(context);
  }
}
