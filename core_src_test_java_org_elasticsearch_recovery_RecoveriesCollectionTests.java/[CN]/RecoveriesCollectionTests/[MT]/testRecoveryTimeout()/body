{
  try (ReplicationGroup shards=createGroup(0)){
    final RecoveriesCollection collection=new RecoveriesCollection(logger,threadPool);
    final AtomicBoolean failed=new AtomicBoolean();
    final CountDownLatch latch=new CountDownLatch(1);
    final long recoveryId=startRecovery(collection,shards.getPrimaryNode(),shards.addReplica(),new RecoveryTargetService.RecoveryListener(){
      @Override public void onRecoveryDone(      RecoveryState state){
        latch.countDown();
      }
      @Override public void onRecoveryFailure(      RecoveryState state,      RecoveryFailedException e,      boolean sendShardFailure){
        failed.set(true);
        latch.countDown();
      }
    }
,TimeValue.timeValueMillis(100));
    try {
      latch.await(30,TimeUnit.SECONDS);
      assertTrue("recovery failed to timeout",failed.get());
    }
  finally {
      collection.cancelRecovery(recoveryId,"meh");
    }
  }
 }
