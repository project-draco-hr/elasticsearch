{
  int totalShards=0;
  int cleanedShards=0;
  long cleaned=0;
  for (  IndexService indexService : indicesService) {
    for (    IndexShard indexShard : indexService) {
      if (indexShard.state() != IndexShardState.STARTED) {
        continue;
      }
      totalShards++;
      Translog translog=((InternalIndexShard)indexShard).translog();
      if (translog.size() > translogNumberOfOperationsThreshold) {
        cleanedShards++;
        cleaned=indexShard.estimateFlushableMemorySize().bytes();
        indexShard.flush(new Engine.Flush());
      }
    }
  }
  return new TranslogCleanResult(totalShards,cleanedShards,new SizeValue(cleaned,SizeUnit.BYTES));
}
