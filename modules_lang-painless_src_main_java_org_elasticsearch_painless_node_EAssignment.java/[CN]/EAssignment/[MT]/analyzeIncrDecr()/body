{
  if (pre && post) {
    throw createError(new IllegalStateException("Illegal tree structure."));
  }
 else   if (pre || post) {
    if (rhs != null) {
      throw createError(new IllegalStateException("Illegal tree structure."));
    }
    Sort sort=lhs.actual.sort;
    if (operation == Operation.INCR) {
      if (sort == Sort.DOUBLE) {
        rhs=new EConstant(location,1D);
      }
 else       if (sort == Sort.FLOAT) {
        rhs=new EConstant(location,1F);
      }
 else       if (sort == Sort.LONG) {
        rhs=new EConstant(location,1L);
      }
 else {
        rhs=new EConstant(location,1);
      }
      operation=Operation.ADD;
    }
 else     if (operation == Operation.DECR) {
      if (sort == Sort.DOUBLE) {
        rhs=new EConstant(location,1D);
      }
 else       if (sort == Sort.FLOAT) {
        rhs=new EConstant(location,1F);
      }
 else       if (sort == Sort.LONG) {
        rhs=new EConstant(location,1L);
      }
 else {
        rhs=new EConstant(location,1);
      }
      operation=Operation.SUB;
    }
 else {
      throw createError(new IllegalStateException("Illegal tree structure."));
    }
  }
}
