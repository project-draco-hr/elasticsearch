{
  if (!lifecycle.started()) {
    throw new ElasticSearchIllegalStateException("can't add nodes to a stopped transport");
  }
  if (node == null) {
    throw new ConnectTransportException(null,"can't connect to a null node");
  }
  globalLock.readLock().lock();
  try {
    if (!lifecycle.started()) {
      throw new ElasticSearchIllegalStateException("can't add nodes to a stopped transport");
    }
    NodeChannels nodeChannels=connectedNodes.get(node);
    if (nodeChannels != null) {
      return;
    }
    connectionLock.acquire(node.id());
    try {
      if (!lifecycle.started()) {
        throw new ElasticSearchIllegalStateException("can't add nodes to a stopped transport");
      }
      try {
        if (light) {
          nodeChannels=connectToChannelsLight(node);
        }
 else {
          nodeChannels=new NodeChannels(new Channel[connectionsPerNodeRecovery],new Channel[connectionsPerNodeBulk],new Channel[connectionsPerNodeReg],new Channel[connectionsPerNodeState],new Channel[connectionsPerNodePing]);
          try {
            connectToChannels(nodeChannels,node);
          }
 catch (          Exception e) {
            nodeChannels.close();
            throw e;
          }
        }
        NodeChannels existing=connectedNodes.putIfAbsent(node,nodeChannels);
        if (existing != null) {
          nodeChannels.close();
        }
 else {
          if (logger.isDebugEnabled()) {
            logger.debug("connected to node [{}]",node);
          }
          transportServiceAdapter.raiseNodeConnected(node);
        }
      }
 catch (      ConnectTransportException e) {
        throw e;
      }
catch (      Exception e) {
        throw new ConnectTransportException(node,"General node connection failure",e);
      }
    }
  finally {
      connectionLock.release(node.id());
    }
  }
  finally {
    globalLock.readLock().unlock();
  }
}
