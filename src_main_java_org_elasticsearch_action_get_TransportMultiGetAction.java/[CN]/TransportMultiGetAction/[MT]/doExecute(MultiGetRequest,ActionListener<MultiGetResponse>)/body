{
  ClusterState clusterState=clusterService.state();
  clusterState.blocks().globalBlockedRaiseException(ClusterBlockLevel.READ);
  Map<ShardId,MultiGetShardRequest> shardRequests=new HashMap<ShardId,MultiGetShardRequest>();
  for (int i=0; i < request.items.size(); i++) {
    MultiGetRequest.Item item=request.items.get(i);
    item.setRouting(clusterState.metaData().resolveIndexRouting(item.getRouting(),item.getIndex()));
    item.setIndex(clusterState.metaData().concreteIndex(item.getIndex()));
    ShardId shardId=clusterService.operationRouting().getShards(clusterState,item.getIndex(),item.getType(),item.getId(),item.getRouting(),null).shardId();
    MultiGetShardRequest shardRequest=shardRequests.get(shardId);
    if (shardRequest == null) {
      shardRequest=new MultiGetShardRequest(shardId.index().name(),shardId.id());
      shardRequest.setPreference(request.preference);
      shardRequest.setRealtime(request.realtime);
      shardRequest.setRefresh(request.refresh);
      shardRequests.put(shardId,shardRequest);
    }
    shardRequest.add(i,item.getType(),item.getId(),item.getFields());
  }
  final MultiGetItemResponse[] responses=new MultiGetItemResponse[request.items.size()];
  final AtomicInteger counter=new AtomicInteger(shardRequests.size());
  for (  final MultiGetShardRequest shardRequest : shardRequests.values()) {
    shardAction.execute(shardRequest,new ActionListener<MultiGetShardResponse>(){
      @Override public void onResponse(      MultiGetShardResponse response){
synchronized (responses) {
          for (int i=0; i < response.locations.size(); i++) {
            responses[response.locations.get(i)]=new MultiGetItemResponse(response.responses.get(i),response.failures.get(i));
          }
        }
        if (counter.decrementAndGet() == 0) {
          finishHim();
        }
      }
      @Override public void onFailure(      Throwable e){
        String message=ExceptionsHelper.detailedMessage(e);
synchronized (responses) {
          for (int i=0; i < shardRequest.locations.size(); i++) {
            responses[shardRequest.locations.get(i)]=new MultiGetItemResponse(null,new MultiGetResponse.Failure(shardRequest.getIndex(),shardRequest.types.get(i),shardRequest.ids.get(i),message));
          }
        }
        if (counter.decrementAndGet() == 0) {
          finishHim();
        }
      }
      private void finishHim(){
        listener.onResponse(new MultiGetResponse(responses));
      }
    }
);
  }
}
