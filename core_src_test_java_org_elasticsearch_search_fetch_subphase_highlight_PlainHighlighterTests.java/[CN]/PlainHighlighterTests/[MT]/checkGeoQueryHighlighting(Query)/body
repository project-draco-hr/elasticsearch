{
  Map analysers=new HashMap<String,Analyzer>();
  analysers.put("text",new StandardAnalyzer());
  FieldNameAnalyzer fieldNameAnalyzer=new FieldNameAnalyzer(analysers);
  Query termQuery=new TermQuery(new Term("text","failure"));
  Query boolQuery=new BooleanQuery.Builder().add(new BooleanClause(geoQuery,BooleanClause.Occur.SHOULD)).add(new BooleanClause(termQuery,BooleanClause.Occur.SHOULD)).build();
  org.apache.lucene.search.highlight.Highlighter highlighter=new org.apache.lucene.search.highlight.Highlighter(new CustomQueryScorer(boolQuery));
  String fragment=highlighter.getBestFragment(fieldNameAnalyzer.tokenStream("text","Arbitrary text field which should not cause " + "a failure"),"Arbitrary text field which should not cause a failure");
  assertThat(fragment,equalTo("Arbitrary text field which should not cause a <B>failure</B>"));
}
