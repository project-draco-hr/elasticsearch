{
  assertThat(Validator.EMPTY.validate("","anything goes",null),nullValue());
  assertThat(Validator.TIME.validate("","10m",null),nullValue());
  assertThat(Validator.TIME.validate("","10g",null),notNullValue());
  assertThat(Validator.TIME.validate("","bad timing",null),notNullValue());
  assertThat(Validator.BYTES_SIZE.validate("","10m",null),nullValue());
  assertThat(Validator.BYTES_SIZE.validate("","10g",null),nullValue());
  assertThat(Validator.BYTES_SIZE.validate("","bad",null),notNullValue());
  assertThat(Validator.FLOAT.validate("","10.2",null),nullValue());
  assertThat(Validator.FLOAT.validate("","10.2.3",null),notNullValue());
  assertThat(Validator.NON_NEGATIVE_FLOAT.validate("","10.2",null),nullValue());
  assertThat(Validator.NON_NEGATIVE_FLOAT.validate("","0.0",null),nullValue());
  assertThat(Validator.NON_NEGATIVE_FLOAT.validate("","-1.0",null),notNullValue());
  assertThat(Validator.NON_NEGATIVE_FLOAT.validate("","10.2.3",null),notNullValue());
  assertThat(Validator.DOUBLE.validate("","10.2",null),nullValue());
  assertThat(Validator.DOUBLE.validate("","10.2.3",null),notNullValue());
  assertThat(Validator.DOUBLE_GTE_2.validate("","10.2",null),nullValue());
  assertThat(Validator.DOUBLE_GTE_2.validate("","2.0",null),nullValue());
  assertThat(Validator.DOUBLE_GTE_2.validate("","1.0",null),notNullValue());
  assertThat(Validator.DOUBLE_GTE_2.validate("","10.2.3",null),notNullValue());
  assertThat(Validator.NON_NEGATIVE_DOUBLE.validate("","10.2",null),nullValue());
  assertThat(Validator.NON_NEGATIVE_DOUBLE.validate("","0.0",null),nullValue());
  assertThat(Validator.NON_NEGATIVE_DOUBLE.validate("","-1.0",null),notNullValue());
  assertThat(Validator.NON_NEGATIVE_DOUBLE.validate("","10.2.3",null),notNullValue());
  assertThat(Validator.INTEGER.validate("","10",null),nullValue());
  assertThat(Validator.INTEGER.validate("","10.2",null),notNullValue());
  assertThat(Validator.INTEGER_GTE_2.validate("","2",null),nullValue());
  assertThat(Validator.INTEGER_GTE_2.validate("","1",null),notNullValue());
  assertThat(Validator.INTEGER_GTE_2.validate("","0",null),notNullValue());
  assertThat(Validator.INTEGER_GTE_2.validate("","10.2.3",null),notNullValue());
  assertThat(Validator.NON_NEGATIVE_INTEGER.validate("","2",null),nullValue());
  assertThat(Validator.NON_NEGATIVE_INTEGER.validate("","1",null),nullValue());
  assertThat(Validator.NON_NEGATIVE_INTEGER.validate("","0",null),nullValue());
  assertThat(Validator.NON_NEGATIVE_INTEGER.validate("","-1",null),notNullValue());
  assertThat(Validator.NON_NEGATIVE_INTEGER.validate("","10.2",null),notNullValue());
  assertThat(Validator.POSITIVE_INTEGER.validate("","2",null),nullValue());
  assertThat(Validator.POSITIVE_INTEGER.validate("","1",null),nullValue());
  assertThat(Validator.POSITIVE_INTEGER.validate("","0",null),notNullValue());
  assertThat(Validator.POSITIVE_INTEGER.validate("","-1",null),notNullValue());
  assertThat(Validator.POSITIVE_INTEGER.validate("","10.2",null),notNullValue());
  assertThat(Validator.PERCENTAGE.validate("","asdasd",null),notNullValue());
  assertThat(Validator.PERCENTAGE.validate("","-1",null),notNullValue());
  assertThat(Validator.PERCENTAGE.validate("","20",null),notNullValue());
  assertThat(Validator.PERCENTAGE.validate("","-1%",null),notNullValue());
  assertThat(Validator.PERCENTAGE.validate("","101%",null),notNullValue());
  assertThat(Validator.PERCENTAGE.validate("","100%",null),nullValue());
  assertThat(Validator.PERCENTAGE.validate("","99%",null),nullValue());
  assertThat(Validator.PERCENTAGE.validate("","0%",null),nullValue());
  assertThat(Validator.BYTES_SIZE_OR_PERCENTAGE.validate("","asdasd",null),notNullValue());
  assertThat(Validator.BYTES_SIZE_OR_PERCENTAGE.validate("","20",null),notNullValue());
  assertThat(Validator.BYTES_SIZE_OR_PERCENTAGE.validate("","20mb",null),nullValue());
  assertThat(Validator.BYTES_SIZE_OR_PERCENTAGE.validate("","-1%",null),notNullValue());
  assertThat(Validator.BYTES_SIZE_OR_PERCENTAGE.validate("","101%",null),notNullValue());
  assertThat(Validator.BYTES_SIZE_OR_PERCENTAGE.validate("","100%",null),nullValue());
  assertThat(Validator.BYTES_SIZE_OR_PERCENTAGE.validate("","99%",null),nullValue());
  assertThat(Validator.BYTES_SIZE_OR_PERCENTAGE.validate("","0%",null),nullValue());
}
