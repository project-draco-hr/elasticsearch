{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").endObject().endObject().endObject().string();
  IndexService index=createIndex("test");
  client().admin().indices().preparePutMapping("test").setType("type").setSource(mapping).get();
  DocumentMapper defaultMapper=index.mapperService().documentMapper("type");
  ParsedDocument doc=defaultMapper.parse("test","type","1",XContentFactory.jsonBuilder().startObject().field("date_field1","2011/01/22").field("date_field2","2011/01/22 00:00:00").field("wrong_date1","-4").field("wrong_date2","2012/2").field("wrong_date3","2012/test").endObject().bytes());
  assertNotNull(doc.dynamicMappingsUpdate());
  client().admin().indices().preparePutMapping("test").setType("type").setSource(doc.dynamicMappingsUpdate().toString()).get();
  defaultMapper=index.mapperService().documentMapper("type");
  FieldMapper fieldMapper=defaultMapper.mappers().smartNameFieldMapper("date_field1");
  assertThat(fieldMapper,instanceOf(DateFieldMapper.class));
  DateFieldMapper dateFieldMapper=(DateFieldMapper)fieldMapper;
  assertEquals("yyyy/MM/dd HH:mm:ss||yyyy/MM/dd||epoch_millis",dateFieldMapper.fieldType().dateTimeFormatter().format());
  assertEquals(1265587200000L,dateFieldMapper.fieldType().dateTimeFormatter().parser().parseMillis("1265587200000"));
  fieldMapper=defaultMapper.mappers().smartNameFieldMapper("date_field2");
  assertThat(fieldMapper,instanceOf(DateFieldMapper.class));
  fieldMapper=defaultMapper.mappers().smartNameFieldMapper("wrong_date1");
  assertThat(fieldMapper,instanceOf(TextFieldMapper.class));
  fieldMapper=defaultMapper.mappers().smartNameFieldMapper("wrong_date2");
  assertThat(fieldMapper,instanceOf(TextFieldMapper.class));
  fieldMapper=defaultMapper.mappers().smartNameFieldMapper("wrong_date3");
  assertThat(fieldMapper,instanceOf(TextFieldMapper.class));
}
