{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").field("date_detection",false).startObject("properties").startObject("date_field").field("type","date").field("format","MMM dd HH:mm:ss").endObject().endObject().endObject().endObject().string();
  DocumentMapper defaultMapper=mapper("type",mapping);
  ParsedDocument doc=defaultMapper.parse("type","1",XContentFactory.jsonBuilder().startObject().field("date_field","Jan 02 10:00:00").endObject().bytes());
  assertThat(((LongFieldMapper.CustomLongNumericField)doc.rootDoc().getField("date_field")).numericAsString(),equalTo(Long.toString(new DateTime(TimeValue.timeValueHours(34).millis(),DateTimeZone.UTC).getMillis())));
  NumericRangeQuery<Long> rangeQuery;
  try {
    SearchContext.setCurrent(new TestSearchContext());
    rangeQuery=(NumericRangeQuery<Long>)defaultMapper.mappers().smartNameFieldMapper("date_field").fieldType().rangeQuery("Jan 02 10:00:00","Jan 02 11:00:00",true,true,null);
  }
  finally {
    SearchContext.removeCurrent();
  }
  assertThat(rangeQuery.getMax(),equalTo(new DateTime(TimeValue.timeValueHours(35).millis()).getMillis()));
  assertThat(rangeQuery.getMin(),equalTo(new DateTime(TimeValue.timeValueHours(34).millis()).getMillis()));
}
