{
  if (shardSize == 0) {
    shardSize=Integer.MAX_VALUE;
  }
  if (requiredSize == 0) {
    requiredSize=Integer.MAX_VALUE;
  }
  if (shardSize < 0) {
    shardSize=BucketUtils.suggestShardSideQueueSize(requiredSize,aggregationContext.searchContext().numberOfShards());
  }
  if (shardSize < requiredSize) {
    shardSize=requiredSize;
  }
  if (collectsFromSingleBucket == false) {
    return asMultiBucketAggregator(this,aggregationContext,parent);
  }
  CellIdSource cellIdSource=new CellIdSource(valuesSource,precision);
  return new GeoHashGridAggregator(name,factories,cellIdSource,requiredSize,shardSize,aggregationContext,parent,pipelineAggregators,metaData);
}
