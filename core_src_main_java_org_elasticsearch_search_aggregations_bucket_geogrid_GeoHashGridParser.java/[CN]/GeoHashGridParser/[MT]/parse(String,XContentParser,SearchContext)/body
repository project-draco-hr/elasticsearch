{
  ValuesSourceParser vsParser=ValuesSourceParser.geoPoint(aggregationName,InternalGeoHashGrid.TYPE,context).build();
  int precision=DEFAULT_PRECISION;
  int requiredSize=DEFAULT_MAX_NUM_CELLS;
  int shardSize=-1;
  XContentParser.Token token;
  String currentFieldName=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (vsParser.token(currentFieldName,token,parser)) {
      continue;
    }
 else     if (token == XContentParser.Token.VALUE_NUMBER) {
      if ("precision".equals(currentFieldName)) {
        precision=parser.intValue();
      }
 else       if ("size".equals(currentFieldName)) {
        requiredSize=parser.intValue();
      }
 else       if ("shard_size".equals(currentFieldName) || "shardSize".equals(currentFieldName)) {
        shardSize=parser.intValue();
      }
    }
  }
  if (shardSize == 0) {
    shardSize=Integer.MAX_VALUE;
  }
  if (requiredSize == 0) {
    requiredSize=Integer.MAX_VALUE;
  }
  if (shardSize < 0) {
    shardSize=BucketUtils.suggestShardSideQueueSize(requiredSize,context.numberOfShards());
  }
  if (shardSize < requiredSize) {
    shardSize=requiredSize;
  }
  return new GeoGridFactory(aggregationName,vsParser.config(),precision,requiredSize,shardSize);
}
