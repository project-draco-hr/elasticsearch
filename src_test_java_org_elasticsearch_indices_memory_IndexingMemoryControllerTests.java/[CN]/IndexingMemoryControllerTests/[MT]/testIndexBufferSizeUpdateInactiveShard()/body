{
  createNode(ImmutableSettings.builder().put("indices.memory.shard_inactive_time","100ms").build());
  prepareCreate("test1").setSettings(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1,IndexMetaData.SETTING_NUMBER_OF_REPLICAS,0).get();
  ensureGreen();
  final InternalIndexShard shard1=(InternalIndexShard)internalCluster().getInstance(IndicesService.class).indexService("test1").shard(0);
  boolean success=awaitBusy(new Predicate<Object>(){
    @Override public boolean apply(    Object input){
      return ((InternalEngineHolder)shard1.engine()).indexingBufferSize().bytes() == Engine.INACTIVE_SHARD_INDEXING_BUFFER.bytes();
    }
  }
);
  if (!success) {
    fail("failed to update shard indexing buffer size due to inactive state. expected [" + Engine.INACTIVE_SHARD_INDEXING_BUFFER + "] got ["+ ((InternalEngineHolder)shard1.engine()).indexingBufferSize().bytes()+ "]");
  }
  index("test1","type","1","f",1);
  success=awaitBusy(new Predicate<Object>(){
    @Override public boolean apply(    Object input){
      return ((InternalEngineHolder)shard1.engine()).indexingBufferSize().bytes() > Engine.INACTIVE_SHARD_INDEXING_BUFFER.bytes();
    }
  }
);
  if (!success) {
    fail("failed to update shard indexing buffer size due to inactive state. expected something larger then [" + Engine.INACTIVE_SHARD_INDEXING_BUFFER + "] got ["+ ((InternalEngineHolder)shard1.engine()).indexingBufferSize().bytes()+ "]");
  }
  flush();
  success=awaitBusy(new Predicate<Object>(){
    @Override public boolean apply(    Object input){
      return ((InternalEngineHolder)shard1.engine()).indexingBufferSize().bytes() == Engine.INACTIVE_SHARD_INDEXING_BUFFER.bytes();
    }
  }
);
  if (!success) {
    fail("failed to update shard indexing buffer size due to inactive state. expected [" + Engine.INACTIVE_SHARD_INDEXING_BUFFER + "] got ["+ ((InternalEngineHolder)shard1.engine()).indexingBufferSize().bytes()+ "]");
  }
}
