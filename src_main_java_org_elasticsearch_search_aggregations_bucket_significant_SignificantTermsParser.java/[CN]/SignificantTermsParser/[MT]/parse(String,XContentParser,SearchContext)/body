{
  SignificantTermsParametersParser aggParser=new SignificantTermsParametersParser();
  ValuesSourceParser vsParser=ValuesSourceParser.any(aggregationName,SignificantStringTerms.TYPE,context).scriptable(false).formattable(true).requiresSortedValues(true).requiresUniqueValues(true).build();
  IncludeExclude.Parser incExcParser=new IncludeExclude.Parser(aggregationName,SignificantStringTerms.TYPE,context);
  aggParser.parse(aggregationName,parser,context,vsParser,incExcParser);
  TermsAggregator.BucketCountThresholds bucketCountThresholds=aggParser.getBucketCountThresholds();
  if (bucketCountThresholds.getShardSize() == new SignificantTermsParametersParser().getDefaultBucketCountThresholds().getShardSize()) {
    bucketCountThresholds.setShardSize(2 * BucketUtils.suggestShardSideQueueSize(bucketCountThresholds.getRequiredSize(),context.numberOfShards()));
  }
  bucketCountThresholds.ensureValidity();
  return new SignificantTermsAggregatorFactory(aggregationName,vsParser.config(),bucketCountThresholds,aggParser.getIncludeExclude(),aggParser.getExecutionHint(),aggParser.getFilter());
}
