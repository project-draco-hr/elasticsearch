{
  SignificantTermsParametersParser aggParser=new SignificantTermsParametersParser();
  ValuesSourceParser vsParser=ValuesSourceParser.any(aggregationName,SignificantStringTerms.TYPE,context).scriptable(false).formattable(true).requiresSortedValues(true).requiresUniqueValues(true).build();
  IncludeExclude.Parser incExcParser=new IncludeExclude.Parser(aggregationName,SignificantStringTerms.TYPE,context);
  aggParser.parse(aggregationName,parser,context,vsParser,incExcParser);
  int shardSize=aggParser.getShardSize();
  if (shardSize == aggParser.DEFAULT_SHARD_SIZE) {
    shardSize=2 * BucketUtils.suggestShardSideQueueSize(aggParser.getRequiredSize(),context.numberOfShards());
  }
  if (shardSize < aggParser.getRequiredSize()) {
    shardSize=aggParser.getRequiredSize();
  }
  long shardMinDocCount=aggParser.getShardMinDocCount();
  if (shardMinDocCount > aggParser.getMinDocCount()) {
    shardMinDocCount=aggParser.getMinDocCount();
  }
  return new SignificantTermsAggregatorFactory(aggregationName,vsParser.config(),aggParser.getRequiredSize(),shardSize,aggParser.getMinDocCount(),shardMinDocCount,aggParser.getIncludeExclude(),aggParser.getExecutionHint(),aggParser.getFilter());
}
