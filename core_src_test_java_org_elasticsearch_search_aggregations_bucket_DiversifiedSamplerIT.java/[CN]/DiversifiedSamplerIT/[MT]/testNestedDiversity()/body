{
  int MAX_DOCS_PER_AUTHOR=1;
  TermsAggregatorBuilder rootTerms=terms("genres").field("genre");
  DiversifiedAggregatorBuilder sampleAgg=new DiversifiedAggregatorBuilder("sample").shardSize(100);
  sampleAgg.field("author").maxDocsPerValue(MAX_DOCS_PER_AUTHOR).executionHint(randomExecutionHint());
  sampleAgg.subAggregation(terms("authors").field("author"));
  rootTerms.subAggregation(sampleAgg);
  SearchResponse response=client().prepareSearch("test").setSearchType(SearchType.QUERY_AND_FETCH).addAggregation(rootTerms).execute().actionGet();
  assertSearchResponse(response);
  Terms genres=response.getAggregations().get("genres");
  Collection<Bucket> genreBuckets=genres.getBuckets();
  for (  Terms.Bucket genreBucket : genreBuckets) {
    Sampler sample=genreBucket.getAggregations().get("sample");
    Terms authors=sample.getAggregations().get("authors");
    Collection<Bucket> testBuckets=authors.getBuckets();
    for (    Terms.Bucket testBucket : testBuckets) {
      assertThat(testBucket.getDocCount(),lessThanOrEqualTo((long)NUM_SHARDS * MAX_DOCS_PER_AUTHOR));
    }
  }
}
