{
  FilterSettings settings=new FilterSettings();
  XContentParser.Token token;
  String currentFieldName=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (currentFieldName != null) {
      if (currentFieldName.equals("max_num_terms")) {
        settings.maxNumTerms=parser.intValue();
      }
 else       if (currentFieldName.equals("min_term_freq")) {
        settings.minTermFreq=parser.intValue();
      }
 else       if (currentFieldName.equals("max_term_freq")) {
        settings.maxTermFreq=parser.intValue();
      }
 else       if (currentFieldName.equals("min_doc_freq")) {
        settings.minDocFreq=parser.intValue();
      }
 else       if (currentFieldName.equals("max_doc_freq")) {
        settings.maxDocFreq=parser.intValue();
      }
 else       if (currentFieldName.equals("min_word_length")) {
        settings.minWordLength=parser.intValue();
      }
 else       if (currentFieldName.equals("max_word_length")) {
        settings.maxWordLength=parser.intValue();
      }
 else {
        throw new ElasticsearchParseException("failed to parse term vectors request. the field [{}] is not valid for filter parameter for term vector request",currentFieldName);
      }
    }
  }
  return settings;
}
