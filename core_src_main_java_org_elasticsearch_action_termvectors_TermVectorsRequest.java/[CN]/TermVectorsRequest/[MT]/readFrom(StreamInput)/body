{
  super.readFrom(in);
  type=in.readString();
  id=in.readString();
  if (in.readBoolean()) {
    doc=in.readBytesReference();
  }
  routing=in.readOptionalString();
  preference=in.readOptionalString();
  long flags=in.readVLong();
  flagsEnum.clear();
  for (  Flag flag : Flag.values()) {
    if ((flags & (1 << flag.ordinal())) != 0) {
      flagsEnum.add(flag);
    }
  }
  int numSelectedFields=in.readVInt();
  if (numSelectedFields > 0) {
    selectedFields=new HashSet<>();
    for (int i=0; i < numSelectedFields; i++) {
      selectedFields.add(in.readString());
    }
  }
  if (in.readBoolean()) {
    perFieldAnalyzer=readPerFieldAnalyzer(in.readMap());
  }
  if (in.readBoolean()) {
    filterSettings=new FilterSettings();
    filterSettings.readFrom(in);
  }
  realtime=in.readBoolean();
  versionType=VersionType.fromValue(in.readByte());
  version=in.readLong();
}
