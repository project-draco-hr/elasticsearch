{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","binary").field("store","yes").endObject().endObject().endObject().endObject().string();
  DocumentMapper mapper=createIndex("test").mapperService().documentMapperParser().parse(mapping);
  final byte[] binaryValue1=new byte[100];
  binaryValue1[56]=1;
  BytesStreamOutput out=new BytesStreamOutput();
  try (StreamOutput compressed=CompressorFactory.defaultCompressor().streamOutput(out)){
    new BytesArray(binaryValue1).writeTo(compressed);
  }
   final byte[] binaryValue2=out.bytes().toBytes();
  assertTrue(CompressorFactory.isCompressed(new BytesArray(binaryValue2)));
  for (  byte[] value : Arrays.asList(binaryValue1,binaryValue2)) {
    ParsedDocument doc=mapper.parse("test","type","id",XContentFactory.jsonBuilder().startObject().field("field",value).endObject().bytes());
    BytesRef indexedValue=doc.rootDoc().getBinaryValue("field");
    assertEquals(new BytesRef(value),indexedValue);
    FieldMapper fieldMapper=mapper.mappers().smartNameFieldMapper("field");
    Object originalValue=fieldMapper.fieldType().valueForSearch(indexedValue);
    assertEquals(new BytesArray(value),originalValue);
  }
}
