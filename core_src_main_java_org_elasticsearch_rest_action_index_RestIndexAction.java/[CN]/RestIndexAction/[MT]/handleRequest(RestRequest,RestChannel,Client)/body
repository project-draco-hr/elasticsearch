{
  IndexRequest indexRequest=new IndexRequest(request.param("index"),request.param("type"),request.param("id"));
  indexRequest.operationThreaded(true);
  indexRequest.routing(request.param("routing"));
  indexRequest.parent(request.param("parent"));
  indexRequest.timestamp(request.param("timestamp"));
  if (request.hasParam("ttl")) {
    indexRequest.ttl(request.paramAsTime("ttl",null).millis());
  }
  indexRequest.source(request.content());
  indexRequest.timeout(request.paramAsTime("timeout",IndexRequest.DEFAULT_TIMEOUT));
  indexRequest.refresh(request.paramAsBoolean("refresh",indexRequest.refresh()));
  indexRequest.version(RestActions.parseVersion(request));
  indexRequest.versionType(VersionType.fromString(request.param("version_type"),indexRequest.versionType()));
  String sOpType=request.param("op_type");
  if (sOpType != null) {
    try {
      indexRequest.opType(IndexRequest.OpType.fromString(sOpType));
    }
 catch (    IllegalArgumentException eia) {
      try {
        XContentBuilder builder=channel.newErrorBuilder();
        channel.sendResponse(new BytesRestResponse(BAD_REQUEST,builder.startObject().field("error",eia.getMessage()).endObject()));
      }
 catch (      IOException e1) {
        logger.warn("Failed to send response",e1);
        return;
      }
    }
  }
  String consistencyLevel=request.param("consistency");
  if (consistencyLevel != null) {
    indexRequest.consistencyLevel(WriteConsistencyLevel.fromString(consistencyLevel));
  }
  client.index(indexRequest,new RestBuilderListener<IndexResponse>(channel){
    @Override public RestResponse buildResponse(    IndexResponse response,    XContentBuilder builder) throws Exception {
      builder.startObject();
      ActionWriteResponse.ShardInfo shardInfo=response.getShardInfo();
      builder.field(Fields._INDEX,response.getIndex()).field(Fields._TYPE,response.getType()).field(Fields._ID,response.getId()).field(Fields._VERSION,response.getVersion());
      shardInfo.toXContent(builder,request);
      builder.field(Fields.CREATED,response.isCreated());
      builder.endObject();
      RestStatus status=shardInfo.status();
      if (response.isCreated()) {
        status=CREATED;
      }
      return new BytesRestResponse(status,builder);
    }
  }
);
}
