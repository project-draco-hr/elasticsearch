{
  client().admin().indices().prepareCreate(INDEX_NAME).addMapping(TYPE_NAME,"query","type=percolator").execute().actionGet();
  ensureGreen();
  logger.info("--> Adding docs");
  client().prepareIndex(INDEX_NAME,"type","1").setSource("field1","b").setRouting("4").execute().actionGet();
  client().prepareIndex(INDEX_NAME,"type","2").setSource("field1","c").setRouting("3").execute().actionGet();
  client().prepareIndex(INDEX_NAME,"type","3").setSource("field1","b c").setRouting("2").execute().actionGet();
  client().prepareIndex(INDEX_NAME,"type","4").setSource("field1","d").setRouting("1").execute().actionGet();
  logger.info("--> register a queries");
  client().prepareIndex(INDEX_NAME,TYPE_NAME,"1").setSource(jsonBuilder().startObject().field("query",matchQuery("field1","b")).field("a","b").endObject()).execute().actionGet();
  client().prepareIndex(INDEX_NAME,TYPE_NAME,"2").setSource(jsonBuilder().startObject().field("query",matchQuery("field1","c")).endObject()).execute().actionGet();
  client().prepareIndex(INDEX_NAME,TYPE_NAME,"3").setSource(jsonBuilder().startObject().field("query",boolQuery().must(matchQuery("field1","b")).must(matchQuery("field1","c"))).endObject()).execute().actionGet();
  client().prepareIndex(INDEX_NAME,TYPE_NAME,"4").setSource(jsonBuilder().startObject().field("query",matchAllQuery()).endObject()).execute().actionGet();
  refresh();
  logger.info("--> Percolate existing doc with id 1");
  PercolateResponse response=client().preparePercolate().setIndices(INDEX_NAME).setDocumentType("type").setGetRequest(Requests.getRequest(INDEX_NAME).type("type").id("1").routing("4")).execute().actionGet();
  assertMatchCount(response,2L);
  assertThat(response.getMatches(),arrayWithSize(2));
  assertThat(convertFromTextArray(response.getMatches(),INDEX_NAME),arrayContainingInAnyOrder("1","4"));
  logger.info("--> Percolate existing doc with id 2");
  response=client().preparePercolate().setIndices(INDEX_NAME).setDocumentType("type").setGetRequest(Requests.getRequest(INDEX_NAME).type("type").id("2").routing("3")).execute().actionGet();
  assertMatchCount(response,2L);
  assertThat(response.getMatches(),arrayWithSize(2));
  assertThat(convertFromTextArray(response.getMatches(),INDEX_NAME),arrayContainingInAnyOrder("2","4"));
  logger.info("--> Percolate existing doc with id 3");
  response=client().preparePercolate().setIndices(INDEX_NAME).setDocumentType("type").setGetRequest(Requests.getRequest(INDEX_NAME).type("type").id("3").routing("2")).execute().actionGet();
  assertMatchCount(response,4L);
  assertThat(response.getMatches(),arrayWithSize(4));
  assertThat(convertFromTextArray(response.getMatches(),INDEX_NAME),arrayContainingInAnyOrder("1","2","3","4"));
  logger.info("--> Percolate existing doc with id 4");
  response=client().preparePercolate().setIndices(INDEX_NAME).setDocumentType("type").setGetRequest(Requests.getRequest(INDEX_NAME).type("type").id("4").routing("1")).execute().actionGet();
  assertMatchCount(response,1L);
  assertThat(response.getMatches(),arrayWithSize(1));
  assertThat(convertFromTextArray(response.getMatches(),INDEX_NAME),arrayContaining("4"));
}
