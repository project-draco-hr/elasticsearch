{
  client().admin().indices().prepareCreate("test").execute().actionGet();
  ensureGreen();
  logger.info("--> Adding docs");
  client().prepareIndex("test","type","1").setSource("field1","b").execute().actionGet();
  client().prepareIndex("test","type","2").setSource("field1","c").execute().actionGet();
  client().prepareIndex("test","type","3").setSource("field1","b c").execute().actionGet();
  client().prepareIndex("test","type","4").setSource("field1","d").execute().actionGet();
  logger.info("--> registering queries");
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"1").setSource(jsonBuilder().startObject().field("query",matchQuery("field1","b")).field("a","b").endObject()).execute().actionGet();
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"2").setSource(jsonBuilder().startObject().field("query",matchQuery("field1","c")).endObject()).execute().actionGet();
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"3").setSource(jsonBuilder().startObject().field("query",boolQuery().must(matchQuery("field1","b")).must(matchQuery("field1","c"))).endObject()).execute().actionGet();
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"4").setSource(jsonBuilder().startObject().field("query",matchAllQuery()).endObject()).execute().actionGet();
  refresh();
  logger.info("--> Percolate existing doc with id 2 and version 1");
  PercolateResponse response=client().preparePercolate().setIndices("test").setDocumentType("type").setGetRequest(Requests.getRequest("test").type("type").id("2").version(1L)).execute().actionGet();
  assertMatchCount(response,2L);
  assertThat(response.getMatches(),arrayWithSize(2));
  assertThat(convertFromTextArray(response.getMatches(),"test"),arrayContainingInAnyOrder("2","4"));
  logger.info("--> Percolate existing doc with id 2 and version 2");
  try {
    client().preparePercolate().setIndices("test").setDocumentType("type").setGetRequest(Requests.getRequest("test").type("type").id("2").version(2L)).execute().actionGet();
    fail("Error should have been thrown");
  }
 catch (  VersionConflictEngineException e) {
  }
  logger.info("--> Index doc with id for the second time");
  client().prepareIndex("test","type","2").setSource("field1","c").execute().actionGet();
  logger.info("--> Percolate existing doc with id 2 and version 2");
  response=client().preparePercolate().setIndices("test").setDocumentType("type").setGetRequest(Requests.getRequest("test").type("type").id("2").version(2L)).execute().actionGet();
  assertMatchCount(response,2L);
  assertThat(response.getMatches(),arrayWithSize(2));
  assertThat(convertFromTextArray(response.getMatches(),"test"),arrayContainingInAnyOrder("2","4"));
}
