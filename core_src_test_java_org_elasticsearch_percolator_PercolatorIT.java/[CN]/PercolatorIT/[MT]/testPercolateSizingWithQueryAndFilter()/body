{
  client().admin().indices().prepareCreate("test").execute().actionGet();
  ensureGreen();
  int numLevels=randomIntBetween(1,25);
  long numQueriesPerLevel=randomIntBetween(10,250);
  long totalQueries=numLevels * numQueriesPerLevel;
  logger.info("--> register " + totalQueries + " queries");
  for (int level=1; level <= numLevels; level++) {
    for (int query=1; query <= numQueriesPerLevel; query++) {
      client().prepareIndex("my-index",PercolatorService.TYPE_NAME,level + "-" + query).setSource(jsonBuilder().startObject().field("query",matchAllQuery()).field("level",level).endObject()).execute().actionGet();
    }
  }
  refresh();
  boolean onlyCount=randomBoolean();
  PercolateResponse response=client().preparePercolate().setIndices("my-index").setDocumentType("my-type").setOnlyCount(onlyCount).setPercolateDoc(docBuilder().setDoc("field","value")).setSize((int)totalQueries).execute().actionGet();
  assertMatchCount(response,totalQueries);
  if (!onlyCount) {
    assertThat(response.getMatches().length,equalTo((int)totalQueries));
  }
  int size=randomIntBetween(0,(int)totalQueries - 1);
  response=client().preparePercolate().setIndices("my-index").setDocumentType("my-type").setOnlyCount(onlyCount).setPercolateDoc(docBuilder().setDoc("field","value")).setSize(size).execute().actionGet();
  assertMatchCount(response,totalQueries);
  if (!onlyCount) {
    assertThat(response.getMatches().length,equalTo(size));
  }
  refresh();
  int runs=randomIntBetween(3,16);
  for (int i=0; i < runs; i++) {
    onlyCount=randomBoolean();
    response=client().preparePercolate().setIndices("my-index").setDocumentType("my-type").setOnlyCount(onlyCount).setPercolateDoc(docBuilder().setDoc("field","value")).setPercolateQuery(termQuery("level",1 + randomInt(numLevels - 1))).setSize((int)numQueriesPerLevel).execute().actionGet();
    assertMatchCount(response,numQueriesPerLevel);
    if (!onlyCount) {
      assertThat(response.getMatches().length,equalTo((int)numQueriesPerLevel));
    }
  }
  for (int i=0; i < runs; i++) {
    onlyCount=randomBoolean();
    response=client().preparePercolate().setIndices("my-index").setDocumentType("my-type").setOnlyCount(onlyCount).setPercolateDoc(docBuilder().setDoc("field","value")).setPercolateQuery(termQuery("level",1 + randomInt(numLevels - 1))).setSize((int)numQueriesPerLevel).execute().actionGet();
    assertMatchCount(response,numQueriesPerLevel);
    if (!onlyCount) {
      assertThat(response.getMatches().length,equalTo((int)numQueriesPerLevel));
    }
  }
  for (int i=0; i < runs; i++) {
    onlyCount=randomBoolean();
    size=randomIntBetween(0,(int)numQueriesPerLevel - 1);
    response=client().preparePercolate().setIndices("my-index").setDocumentType("my-type").setOnlyCount(onlyCount).setSize(size).setPercolateDoc(docBuilder().setDoc("field","value")).setPercolateQuery(termQuery("level",1 + randomInt(numLevels - 1))).execute().actionGet();
    assertMatchCount(response,numQueriesPerLevel);
    if (!onlyCount) {
      assertThat(response.getMatches().length,equalTo(size));
    }
  }
}
