{
  createIndex("test");
  ensureGreen();
  int numDocs=iterations(10,50);
  IndexRequestBuilder[] indexRequestBuilders=new IndexRequestBuilder[numDocs + 1];
  for (int i=0; i < numDocs; i++) {
    indexRequestBuilders[i]=client().prepareIndex("test","test",Integer.toString(i)).setSource("field","value");
  }
  indexRequestBuilders[numDocs]=client().prepareIndex("test","test",Integer.toString(numDocs)).setSource("field","other_value");
  indexRandom(true,indexRequestBuilders);
  SearchResponse searchResponse=client().prepareSearch("test").get();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo((long)numDocs + 1));
  DeleteByQueryResponse deleteByQueryResponse=client().prepareDeleteByQuery("test").setQuery(QueryBuilders.termQuery("field","value")).get();
  assertThat(deleteByQueryResponse.getIndices().size(),equalTo(1));
  for (  IndexDeleteByQueryResponse indexDeleteByQueryResponse : deleteByQueryResponse) {
    assertThat(indexDeleteByQueryResponse.getIndex(),equalTo("test"));
    assertThat(indexDeleteByQueryResponse.getFailures().length,equalTo(0));
  }
  refresh();
  searchResponse=client().prepareSearch("test").get();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
}
