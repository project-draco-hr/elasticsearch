{
  double xmin=PackedQuadPrefixTree.this.xmin;
  double ymin=PackedQuadPrefixTree.this.ymin;
  int level=getLevel();
  byte b;
  for (short l=0, i=1; l < level; ++l, ++i) {
    b=(byte)((term >>> (64 - (i << 1))) & 0x3L);
switch (b) {
case 0x00:
      ymin+=levelH[l];
    break;
case 0x01:
  xmin+=levelW[l];
ymin+=levelH[l];
break;
case 0x02:
break;
case 0x03:
xmin+=levelW[l];
break;
default :
throw new RuntimeException("unexpected quadrant");
}
}
double width, height;
if (level > 0) {
width=levelW[level - 1];
height=levelH[level - 1];
}
 else {
width=gridW;
height=gridH;
}
return new RectangleImpl(xmin,xmin + width,ymin,ymin + height,ctx);
}
