{
  super.merge(mergeWith,mergeResult);
  if (!this.getClass().equals(mergeWith.getClass())) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different field type");
    return;
  }
  final GeoShapeFieldMapper fieldMergeWith=(GeoShapeFieldMapper)mergeWith;
  if (fieldType().strategyName().equals(fieldMergeWith.fieldType().strategyName()) == false) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different strategy");
  }
  if (fieldType().tree().equals(fieldMergeWith.fieldType().tree()) == false) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different tree");
  }
  if (fieldType().treeLevels() != fieldMergeWith.fieldType().treeLevels()) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different tree_levels");
  }
  if (fieldType().precisionInMeters() != fieldMergeWith.fieldType().precisionInMeters()) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different precision");
  }
  if (mergeResult.hasConflicts() || mergeResult.simulate()) {
    return;
  }
  this.fieldType=this.fieldType.clone();
  this.fieldType().setDistanceErrorPct(fieldMergeWith.fieldType().distanceErrorPct());
  this.fieldType().setOrientation(fieldMergeWith.fieldType().orientation());
  this.fieldType.freeze();
}
