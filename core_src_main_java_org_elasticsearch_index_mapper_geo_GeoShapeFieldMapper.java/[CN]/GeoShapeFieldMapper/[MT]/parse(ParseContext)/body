{
  try {
    Shape shape=context.parseExternalValue(Shape.class);
    if (shape == null) {
      ShapeBuilder shapeBuilder=ShapeBuilder.parse(context.parser(),this);
      if (shapeBuilder == null) {
        return null;
      }
      shape=shapeBuilder.build();
    }
    if (fieldType().defaultStrategy() instanceof RecursivePrefixTreeStrategy && fieldType().pointsOnly() && !(shape instanceof Point)) {
      throw new MapperParsingException("[{" + fieldType().names().fullName() + "}] is configured for points only but a "+ ((shape instanceof JtsGeometry) ? ((JtsGeometry)shape).getGeom().getGeometryType() : shape.getClass())+ " was found");
    }
    Field[] fields=fieldType().defaultStrategy().createIndexableFields(shape);
    if (fields == null || fields.length == 0) {
      return null;
    }
    for (    Field field : fields) {
      if (!customBoost()) {
        field.setBoost(fieldType().boost());
      }
      context.doc().add(field);
    }
  }
 catch (  Exception e) {
    throw new MapperParsingException("failed to parse [" + fieldType().names().fullName() + "]",e);
  }
  return null;
}
