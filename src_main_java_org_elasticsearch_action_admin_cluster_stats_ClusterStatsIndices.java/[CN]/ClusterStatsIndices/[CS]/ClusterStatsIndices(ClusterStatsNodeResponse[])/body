{
  ObjectObjectOpenHashMap<String,ShardStats> countsPerIndex=new ObjectObjectOpenHashMap<String,ShardStats>();
  this.docs=new DocsStats();
  this.store=new StoreStats();
  this.fieldData=new FieldDataStats();
  this.filterCache=new FilterCacheStats();
  this.idCache=new IdCacheStats();
  this.completion=new CompletionStats();
  this.segments=new SegmentsStats();
  this.percolate=new PercolateStats();
  for (  ClusterStatsNodeResponse r : nodeResponses) {
    for (    org.elasticsearch.action.admin.indices.stats.ShardStats shardStats : r.shardsStats()) {
      ShardStats indexShardStats=countsPerIndex.get(shardStats.getIndex());
      if (indexShardStats == null) {
        indexShardStats=new ShardStats();
        countsPerIndex.put(shardStats.getIndex(),indexShardStats);
      }
      indexShardStats.total++;
      CommonStats shardCommonStats=shardStats.getStats();
      if (shardStats.getShardRouting().primary()) {
        indexShardStats.primaries++;
        docs.add(shardCommonStats.docs);
      }
      store.add(shardCommonStats.store);
      fieldData.add(shardCommonStats.fieldData);
      filterCache.add(shardCommonStats.filterCache);
      idCache.add(shardCommonStats.idCache);
      completion.add(shardCommonStats.completion);
      segments.add(shardCommonStats.segments);
      percolate.add(shardCommonStats.percolate);
    }
  }
  shards=new ShardStats();
  indexCount=countsPerIndex.size();
  for (  ObjectObjectCursor<String,ShardStats> indexCountsCursor : countsPerIndex) {
    shards.addIndexShardCount(indexCountsCursor.value);
  }
}
