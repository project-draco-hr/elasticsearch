{
  if (interval == null) {
    throw new SearchSourceBuilderException("[interval] must be defined for histogram aggregation [" + getName() + "]");
  }
  if (interval instanceof Number) {
    interval=TimeValue.timeValueMillis(((Number)interval).longValue()).toString();
  }
  builder.field("interval",interval);
  if (minDocCount != null) {
    builder.field("min_doc_count",minDocCount);
  }
  if (order != null) {
    builder.field("order");
    order.toXContent(builder,params);
  }
  if (preZone != null) {
    builder.field("pre_zone",preZone);
  }
  if (postZone != null) {
    builder.field("post_zone",postZone);
  }
  if (preZoneAdjustLargeInterval) {
    builder.field("pre_zone_adjust_large_interval",true);
  }
  if (offset != null) {
    builder.field("offset",offset);
  }
  if (factor != 1.0f) {
    builder.field("factor",factor);
  }
  if (format != null) {
    builder.field("format",format);
  }
  if (extendedBoundsMin != null || extendedBoundsMax != null) {
    builder.startObject(DateHistogramParser.EXTENDED_BOUNDS.getPreferredName());
    if (extendedBoundsMin != null) {
      builder.field("min",extendedBoundsMin);
    }
    if (extendedBoundsMax != null) {
      builder.field("max",extendedBoundsMax);
    }
    builder.endObject();
  }
  return builder;
}
