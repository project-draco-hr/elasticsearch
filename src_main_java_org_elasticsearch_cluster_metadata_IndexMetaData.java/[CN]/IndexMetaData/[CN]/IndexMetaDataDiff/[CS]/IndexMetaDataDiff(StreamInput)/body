{
  index=in.readString();
  version=in.readLong();
  state=State.fromId(in.readByte());
  settings=ImmutableSettings.readSettingsFromStream(in);
  mappings=DiffableUtils.readImmutableOpenMapDiff(in,MappingMetaData.PROTO);
  aliases=DiffableUtils.readImmutableOpenMapDiff(in,AliasMetaData.PROTO);
  customs=DiffableUtils.readImmutableOpenMapDiff(in,new DiffableUtils.KeyedReader<Custom>(){
    @Override public Custom readFrom(    StreamInput in,    String key) throws IOException {
      return lookupPrototypeSafe(key).readFrom(in);
    }
    @Override public Diff<Custom> readDiffFrom(    StreamInput in,    String key) throws IOException {
      return lookupPrototypeSafe(key).readDiffFrom(in);
    }
  }
);
}
