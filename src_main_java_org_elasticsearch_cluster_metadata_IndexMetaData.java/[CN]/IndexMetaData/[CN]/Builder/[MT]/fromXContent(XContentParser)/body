{
  if (parser.currentToken() == XContentParser.Token.START_OBJECT) {
    parser.nextToken();
  }
  Builder builder=new Builder(parser.currentName());
  String currentFieldName=null;
  XContentParser.Token token=parser.nextToken();
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("settings".equals(currentFieldName)) {
        ImmutableSettings.Builder settingsBuilder=settingsBuilder();
        while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
          String key=parser.currentName();
          token=parser.nextToken();
          String value=parser.text();
          settingsBuilder.put(key,value);
        }
        builder.settings(settingsBuilder.build());
      }
 else       if ("mappings".equals(currentFieldName)) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
          if (token == XContentParser.Token.FIELD_NAME) {
            currentFieldName=parser.currentName();
          }
 else           if (token == XContentParser.Token.START_OBJECT) {
            String mappingType=currentFieldName;
            Map<String,Object> mappingSource=MapBuilder.<String,Object>newMapBuilder().put(mappingType,parser.mapOrdered()).map();
            builder.putMapping(new MappingMetaData(mappingType,mappingSource));
          }
        }
      }
 else       if ("aliases".equals(currentFieldName)) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
          builder.putAlias(AliasMetaData.Builder.fromXContent(parser));
        }
      }
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if ("mappings".equals(currentFieldName)) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) {
            builder.putMapping(new MappingMetaData(new CompressedString(parser.binaryValue())));
          }
 else {
            Map<String,Object> mapping=parser.mapOrdered();
            if (mapping.size() == 1) {
              String mappingType=mapping.keySet().iterator().next();
              builder.putMapping(new MappingMetaData(mappingType,mapping));
            }
          }
        }
      }
    }
 else     if (token.isValue()) {
      if ("state".equals(currentFieldName)) {
        builder.state(State.fromString(parser.text()));
      }
 else       if ("version".equals(currentFieldName)) {
        builder.version(parser.longValue());
      }
    }
  }
  return builder.build();
}
