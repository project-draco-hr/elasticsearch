{
  boolean autoCreateIndex;
  List<Tuple<String,Boolean>> expressions=new ArrayList<>();
  try {
    autoCreateIndex=Booleans.parseBooleanExact(value);
  }
 catch (  IllegalArgumentException ex) {
    try {
      String[] patterns=Strings.commaDelimitedListToStringArray(value);
      for (      String pattern : patterns) {
        if (pattern == null || pattern.length() == 0) {
          throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] must be either [true, false, or a comma separated list of index patterns]");
        }
        Tuple<String,Boolean> expression;
        if (pattern.startsWith("-")) {
          if (pattern.length() == 1) {
            throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] must contain an index name after [-]");
          }
          expression=new Tuple<>(pattern.substring(1),false);
        }
 else         if (pattern.startsWith("+")) {
          if (pattern.length() == 1) {
            throw new IllegalArgumentException("Can't parse [" + value + "] for setting [action.auto_create_index] must contain an index name after [+]");
          }
          expression=new Tuple<>(pattern.substring(1),true);
        }
 else {
          expression=new Tuple<>(pattern,true);
        }
        expressions.add(expression);
      }
      autoCreateIndex=true;
    }
 catch (    IllegalArgumentException ex1) {
      ex1.addSuppressed(ex);
      throw ex1;
    }
  }
  this.expressions=expressions;
  this.autoCreateIndex=autoCreateIndex;
}
