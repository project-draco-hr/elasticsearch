{
  if (aggregatorBuilders.isEmpty() && pipelineAggregatorBuilders.isEmpty()) {
    return EMPTY;
  }
  List<PipelineAggregatorBuilder<?>> orderedpipelineAggregators=null;
  if (skipResolveOrder) {
    orderedpipelineAggregators=new ArrayList<>(pipelineAggregatorBuilders);
  }
 else {
    orderedpipelineAggregators=resolvePipelineAggregatorOrder(this.pipelineAggregatorBuilders,this.aggregatorBuilders);
  }
  AggregatorFactory<?>[] aggFactories=new AggregatorFactory<?>[aggregatorBuilders.size()];
  for (int i=0; i < aggregatorBuilders.size(); i++) {
    aggFactories[i]=aggregatorBuilders.get(i).build(context,parent);
  }
  return new AggregatorFactories(parent,aggFactories,orderedpipelineAggregators);
}
