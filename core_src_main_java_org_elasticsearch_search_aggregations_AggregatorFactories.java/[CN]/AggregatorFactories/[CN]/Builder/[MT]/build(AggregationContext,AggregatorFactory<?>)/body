{
  if (aggregationBuilders.isEmpty() && pipelineAggregatorBuilders.isEmpty()) {
    return EMPTY;
  }
  List<PipelineAggregatorBuilder<?>> orderedpipelineAggregators=null;
  if (skipResolveOrder) {
    orderedpipelineAggregators=new ArrayList<>(pipelineAggregatorBuilders);
  }
 else {
    orderedpipelineAggregators=resolvePipelineAggregatorOrder(this.pipelineAggregatorBuilders,this.aggregationBuilders);
  }
  AggregatorFactory<?>[] aggFactories=new AggregatorFactory<?>[aggregationBuilders.size()];
  for (int i=0; i < aggregationBuilders.size(); i++) {
    aggFactories[i]=aggregationBuilders.get(i).build(context,parent);
  }
  return new AggregatorFactories(parent,aggFactories,orderedpipelineAggregators);
}
