{
  if (temporarilyMarked.contains(builder)) {
    throw new IllegalArgumentException("Cyclical dependancy found with pipeline aggregator [" + builder.getName() + "]");
  }
 else   if (unmarkedBuilders.contains(builder)) {
    temporarilyMarked.add(builder);
    String[] bucketsPaths=builder.getBucketsPaths();
    for (    String bucketsPath : bucketsPaths) {
      List<AggregationPath.PathElement> bucketsPathElements=AggregationPath.parse(bucketsPath).getPathElements();
      String firstAggName=bucketsPathElements.get(0).name;
      if (bucketsPath.equals("_count") || bucketsPath.equals("_key")) {
        continue;
      }
 else       if (aggBuildersMap.containsKey(firstAggName)) {
        AggregatorBuilder<?> aggBuilder=aggBuildersMap.get(firstAggName);
        for (int i=1; i < bucketsPathElements.size(); i++) {
          PathElement pathElement=bucketsPathElements.get(i);
          String aggName=pathElement.name;
          if ((i == bucketsPathElements.size() - 1) && (aggName.equalsIgnoreCase("_key") || aggName.equals("_count"))) {
            break;
          }
 else {
            AggregatorBuilder<?>[] subBuilders=aggBuilder.factoriesBuilder.getAggregatorFactories();
            boolean foundSubBuilder=false;
            for (            AggregatorBuilder<?> subBuilder : subBuilders) {
              if (aggName.equals(subBuilder.name)) {
                aggBuilder=subBuilder;
                foundSubBuilder=true;
                break;
              }
            }
            if (!foundSubBuilder && (i == bucketsPathElements.size() - 1)) {
              List<PipelineAggregatorBuilder<?>> subPipelineBuilders=aggBuilder.factoriesBuilder.pipelineAggregatorBuilders;
              for (              PipelineAggregatorBuilder<?> subFactory : subPipelineBuilders) {
                if (aggName.equals(subFactory.name())) {
                  foundSubBuilder=true;
                  break;
                }
              }
            }
            if (!foundSubBuilder) {
              throw new IllegalArgumentException("No aggregation [" + aggName + "] found for path ["+ bucketsPath+ "]");
            }
          }
        }
        continue;
      }
 else {
        PipelineAggregatorBuilder<?> matchingBuilder=pipelineAggregatorBuildersMap.get(firstAggName);
        if (matchingBuilder != null) {
          resolvePipelineAggregatorOrder(aggBuildersMap,pipelineAggregatorBuildersMap,orderedPipelineAggregators,unmarkedBuilders,temporarilyMarked,matchingBuilder);
        }
 else {
          throw new IllegalArgumentException("No aggregation found for path [" + bucketsPath + "]");
        }
      }
    }
    unmarkedBuilders.remove(builder);
    temporarilyMarked.remove(builder);
    orderedPipelineAggregators.add(builder);
  }
}
