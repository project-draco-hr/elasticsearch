{
  clearAttributes();
  if (!started) {
    started=true;
    gramSize=minGram;
    char[] chars=new char[1024];
    charsRead=0;
    while (charsRead < chars.length) {
      int inc=input.read(chars,charsRead,chars.length - charsRead);
      if (inc == -1) {
        break;
      }
      charsRead+=inc;
    }
    inStr=new String(chars,0,charsRead).trim();
    if (charsRead == chars.length) {
      char[] throwaway=new char[1024];
      while (true) {
        final int inc=input.read(throwaway,0,throwaway.length);
        if (inc == -1) {
          break;
        }
        charsRead+=inc;
      }
    }
    inLen=inStr.length();
    if (inLen == 0) {
      return false;
    }
  }
  if (pos + gramSize > inLen) {
    pos=0;
    gramSize++;
    if (gramSize > maxGram)     return false;
    if (pos + gramSize > inLen)     return false;
  }
  int oldPos=pos;
  pos++;
  termAtt.setEmpty().append(inStr,oldPos,oldPos + gramSize);
  offsetAtt.setOffset(correctOffset(oldPos),correctOffset(oldPos + gramSize));
  return true;
}
