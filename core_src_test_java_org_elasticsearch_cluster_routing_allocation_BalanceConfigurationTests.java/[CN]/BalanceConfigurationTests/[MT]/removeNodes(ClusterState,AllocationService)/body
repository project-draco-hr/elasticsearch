{
  logger.info("Removing half the nodes (" + (numberOfNodes + 1) / 2 + ")");
  DiscoveryNodes.Builder nodes=DiscoveryNodes.builder(clusterState.nodes());
  boolean removed=false;
  for (int i=(numberOfNodes + 1) / 2; i <= numberOfNodes; i++) {
    nodes.remove("node" + i);
    removed=true;
  }
  clusterState=ClusterState.builder(clusterState).nodes(nodes.build()).build();
  if (removed) {
    clusterState=strategy.deassociateDeadNodes(clusterState,randomBoolean(),"removed nodes");
  }
  logger.info("start all the primary shards, replicas will start initializing");
  RoutingNodes routingNodes=clusterState.getRoutingNodes();
  clusterState=strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING));
  logger.info("start the replica shards");
  routingNodes=clusterState.getRoutingNodes();
  clusterState=strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING));
  logger.info("rebalancing");
  clusterState=strategy.reroute(clusterState,"reroute");
  logger.info("complete rebalancing");
  return applyStartedShardsUntilNoChange(clusterState,strategy);
}
