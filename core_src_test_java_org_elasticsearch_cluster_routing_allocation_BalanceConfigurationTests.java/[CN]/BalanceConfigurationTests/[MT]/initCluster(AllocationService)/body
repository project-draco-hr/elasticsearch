{
  MetaData.Builder metaDataBuilder=MetaData.builder();
  RoutingTable.Builder routingTableBuilder=RoutingTable.builder();
  for (int i=0; i < numberOfIndices; i++) {
    IndexMetaData.Builder index=IndexMetaData.builder("test" + i).settings(settings(Version.CURRENT)).numberOfShards(numberOfShards).numberOfReplicas(numberOfReplicas);
    metaDataBuilder=metaDataBuilder.put(index);
  }
  MetaData metaData=metaDataBuilder.build();
  for (  ObjectCursor<IndexMetaData> cursor : metaData.indices().values()) {
    routingTableBuilder.addAsNew(cursor.value);
  }
  RoutingTable initialRoutingTable=routingTableBuilder.build();
  logger.info("start " + numberOfNodes + " nodes");
  DiscoveryNodes.Builder nodes=DiscoveryNodes.builder();
  for (int i=0; i < numberOfNodes; i++) {
    nodes.add(newNode("node" + i));
  }
  ClusterState clusterState=ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).nodes(nodes).metaData(metaData).routingTable(initialRoutingTable).build();
  RoutingAllocation.Result routingResult=strategy.reroute(clusterState,"reroute");
  clusterState=ClusterState.builder(clusterState).routingResult(routingResult).build();
  logger.info("restart all the primary shards, replicas will start initializing");
  RoutingNodes routingNodes=clusterState.getRoutingNodes();
  routingResult=strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING));
  clusterState=ClusterState.builder(clusterState).routingResult(routingResult).build();
  logger.info("start the replica shards");
  routingNodes=clusterState.getRoutingNodes();
  routingResult=strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING));
  clusterState=ClusterState.builder(clusterState).routingResult(routingResult).build();
  logger.info("complete rebalancing");
  return applyStartedShardsUntilNoChange(clusterState,strategy);
}
