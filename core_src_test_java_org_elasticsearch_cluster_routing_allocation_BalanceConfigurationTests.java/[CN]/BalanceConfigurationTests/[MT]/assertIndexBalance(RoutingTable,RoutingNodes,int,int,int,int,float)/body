{
  final int numShards=numberOfShards * (numberOfReplicas + 1);
  final float avgNumShards=(float)(numShards) / (float)(numberOfNodes);
  final int minAvgNumberOfShards=Math.round(Math.round(Math.floor(avgNumShards - treshold)));
  final int maxAvgNumberOfShards=Math.round(Math.round(Math.ceil(avgNumShards + treshold)));
  for (  ObjectCursor<String> index : routingTable.indicesRouting().keys()) {
    for (    RoutingNode node : nodes) {
      assertThat(node.shardsWithState(index.value,STARTED).size(),Matchers.greaterThanOrEqualTo(minAvgNumberOfShards));
      assertThat(node.shardsWithState(index.value,STARTED).size(),Matchers.lessThanOrEqualTo(maxAvgNumberOfShards));
    }
  }
}
