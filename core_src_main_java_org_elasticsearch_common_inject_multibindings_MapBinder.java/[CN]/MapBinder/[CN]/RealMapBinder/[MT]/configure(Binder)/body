{
  Multibinder.checkConfiguration(!isInitialized(),"MapBinder was already initialized");
  final Set<Dependency<?>> dependencies=singleton(Dependency.get(entrySetBinder.getSetKey()));
  final Provider<Set<Entry<K,Provider<V>>>> entrySetProvider=binder.getProvider(entrySetBinder.getSetKey());
  binder.bind(providerMapKey).toProvider(new MapBinderProviderWithDependencies(RealMapBinder.this,dependencies,entrySetProvider));
  final Provider<Map<K,Provider<V>>> mapProvider=binder.getProvider(providerMapKey);
  binder.bind(mapKey).toProvider(new ProviderWithDependencies<Map<K,V>>(){
    @Override public Map<K,V> get(){
      Map<K,V> map=new LinkedHashMap<>();
      for (      Entry<K,Provider<V>> entry : mapProvider.get().entrySet()) {
        V value=entry.getValue().get();
        K key=entry.getKey();
        Multibinder.checkConfiguration(value != null,"Map injection failed due to null value for key \"%s\"",key);
        map.put(key,value);
      }
      return Collections.unmodifiableMap(map);
    }
    @Override public Set<Dependency<?>> getDependencies(){
      return dependencies;
    }
  }
);
}
