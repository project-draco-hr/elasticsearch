{
  List<InternalAggregation> aggregations=reduceContext.aggregations();
  @SuppressWarnings("unchecked") List<Bucket>[] rangeList=new List[ranges.size()];
  for (int i=0; i < rangeList.length; ++i) {
    rangeList[i]=new ArrayList<Bucket>();
  }
  for (  InternalAggregation aggregation : aggregations) {
    InternalRange<?> ranges=(InternalRange<?>)aggregation;
    int i=0;
    for (    Bucket range : ranges.ranges) {
      rangeList[i++].add(range);
    }
  }
  final List<B> ranges=new ArrayList<>();
  for (int i=0; i < this.ranges.size(); ++i) {
    ranges.add((B)rangeList[i].get(0).reduce(rangeList[i],reduceContext.bigArrays()));
  }
  return getFactory().create(name,ranges,formatter,keyed);
}
