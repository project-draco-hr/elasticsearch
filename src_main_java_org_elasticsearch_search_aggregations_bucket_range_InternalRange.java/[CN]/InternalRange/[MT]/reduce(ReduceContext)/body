{
  List<InternalAggregation> aggregations=reduceContext.aggregations();
  if (aggregations.size() == 1) {
    InternalRange<B> reduced=(InternalRange<B>)aggregations.get(0);
    for (    B bucket : reduced.ranges) {
      bucket.aggregations.reduce(reduceContext.bigArrays());
    }
    return reduced;
  }
  List<List<Bucket>> rangesList=null;
  for (  InternalAggregation aggregation : aggregations) {
    InternalRange<Bucket> ranges=(InternalRange)aggregation;
    if (ranges.unmapped) {
      continue;
    }
    if (rangesList == null) {
      rangesList=new ArrayList<List<Bucket>>(ranges.ranges.size());
      for (      Bucket bucket : ranges.ranges) {
        List<Bucket> sameRangeList=new ArrayList<Bucket>(aggregations.size());
        sameRangeList.add(bucket);
        rangesList.add(sameRangeList);
      }
    }
 else {
      int i=0;
      for (      Bucket range : ranges.ranges) {
        rangesList.get(i++).add(range);
      }
    }
  }
  if (rangesList == null) {
    return aggregations.get(0);
  }
  InternalRange reduced=(InternalRange)aggregations.get(0);
  int i=0;
  for (  List<Bucket> sameRangeList : rangesList) {
    reduced.ranges.set(i++,(sameRangeList.get(0)).reduce(sameRangeList,reduceContext.bigArrays()));
  }
  return reduced;
}
