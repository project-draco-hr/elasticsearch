{
  FixedBitSet res=null;
  if (shouldFilters != null) {
    for (int i=0; i < shouldFilters.size(); i++) {
      final DocIdSet disi=getDISI(shouldFilters,i,reader);
      if (disi == null)       continue;
      if (res == null) {
        res=new FixedBitSet(reader.maxDoc());
      }
      DocSets.or(res,disi);
    }
    if (res == null && !shouldFilters.isEmpty()) {
      return null;
    }
  }
  if (notFilters != null) {
    for (int i=0; i < notFilters.size(); i++) {
      if (res == null) {
        res=new FixedBitSet(reader.maxDoc());
        res.set(0,reader.maxDoc());
      }
      final DocIdSet disi=getDISI(notFilters,i,reader);
      if (disi != null) {
        DocSets.andNot(res,disi);
      }
    }
  }
  if (mustFilters != null) {
    for (int i=0; i < mustFilters.size(); i++) {
      final DocIdSet disi=getDISI(mustFilters,i,reader);
      if (disi == null) {
        return null;
      }
      if (res == null) {
        res=new FixedBitSet(reader.maxDoc());
        DocSets.or(res,disi);
      }
 else {
        DocSets.and(res,disi);
      }
    }
  }
  return res;
}
