{
  String field=null;
  String[] fieldsNames=null;
  String script=null;
  String scriptLang=null;
  Map<String,Object> params=cachedParams.get().get();
  params.clear();
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("params".equals(currentFieldName)) {
        params=parser.map();
      }
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if ("fields".equals(currentFieldName)) {
        List<String> fields=Lists.newArrayListWithCapacity(4);
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          fields.add(parser.text());
        }
        fieldsNames=fields.toArray(new String[fields.size()]);
      }
    }
 else     if (token.isValue()) {
      if ("field".equals(currentFieldName)) {
        field=parser.text();
      }
 else       if ("script".equals(currentFieldName)) {
        script=parser.text();
      }
 else       if ("lang".equals(currentFieldName)) {
        scriptLang=parser.text();
      }
    }
  }
  if (fieldsNames != null) {
    return new StatisticalFieldsFacetCollector(facetName,fieldsNames,context);
  }
  if (script == null && field == null) {
    throw new FacetPhaseExecutionException(facetName,"statistical facet requires either [script] or [field] to be set");
  }
  if (field != null) {
    return new StatisticalFacetCollector(facetName,field,context);
  }
 else {
    return new ScriptStatisticalFacetCollector(facetName,scriptLang,script,params,context);
  }
}
