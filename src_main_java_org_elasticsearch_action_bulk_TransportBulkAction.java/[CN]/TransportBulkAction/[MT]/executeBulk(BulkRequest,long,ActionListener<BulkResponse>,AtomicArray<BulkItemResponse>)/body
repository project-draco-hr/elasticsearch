{
  final ClusterState clusterState=clusterService.state();
  clusterState.blocks().globalBlockedRaiseException(ClusterBlockLevel.WRITE);
  final ConcreteIndices concreteIndices=new ConcreteIndices(clusterState.metaData());
  MetaData metaData=clusterState.metaData();
  for (int i=0; i < bulkRequest.requests.size(); i++) {
    ActionRequest request=bulkRequest.requests.get(i);
    if (request instanceof DocumentRequest) {
      DocumentRequest req=(DocumentRequest)request;
      if (addFailureIfIndexIsClosed(req,bulkRequest,responses,i,concreteIndices,metaData)) {
        continue;
      }
      String concreteIndex=concreteIndices.resolveIfAbsent(req.index(),req.indicesOptions());
      if (request instanceof IndexRequest) {
        IndexRequest indexRequest=(IndexRequest)request;
        MappingMetaData mappingMd=null;
        if (metaData.hasIndex(concreteIndex)) {
          mappingMd=metaData.index(concreteIndex).mappingOrDefault(indexRequest.type());
        }
        try {
          indexRequest.process(metaData,mappingMd,allowIdGeneration,concreteIndex);
        }
 catch (        ElasticsearchParseException e) {
          BulkItemResponse.Failure failure=new BulkItemResponse.Failure(concreteIndex,indexRequest.type(),indexRequest.id(),e);
          BulkItemResponse bulkItemResponse=new BulkItemResponse(i,"index",failure);
          responses.set(i,bulkItemResponse);
          bulkRequest.requests.set(i,null);
        }
      }
 else {
        concreteIndices.resolveIfAbsent(req.index(),req.indicesOptions());
        req.routing(clusterState.metaData().resolveIndexRouting(req.routing(),req.index()));
      }
    }
  }
  Map<ShardId,List<BulkItemRequest>> requestsByShard=Maps.newHashMap();
  for (int i=0; i < bulkRequest.requests.size(); i++) {
    ActionRequest request=bulkRequest.requests.get(i);
    if (request instanceof IndexRequest) {
      IndexRequest indexRequest=(IndexRequest)request;
      String concreteIndex=concreteIndices.getConcreteIndex(indexRequest.index());
      ShardId shardId=clusterService.operationRouting().indexShards(clusterState,concreteIndex,indexRequest.type(),indexRequest.id(),indexRequest.routing()).shardId();
      List<BulkItemRequest> list=requestsByShard.get(shardId);
      if (list == null) {
        list=Lists.newArrayList();
        requestsByShard.put(shardId,list);
      }
      list.add(new BulkItemRequest(i,request));
    }
 else     if (request instanceof DeleteRequest) {
      DeleteRequest deleteRequest=(DeleteRequest)request;
      String concreteIndex=concreteIndices.getConcreteIndex(deleteRequest.index());
      MappingMetaData mappingMd=clusterState.metaData().index(concreteIndex).mappingOrDefault(deleteRequest.type());
      if (mappingMd != null && mappingMd.routing().required() && deleteRequest.routing() == null) {
        GroupShardsIterator groupShards=clusterService.operationRouting().broadcastDeleteShards(clusterState,concreteIndex);
        for (        ShardIterator shardIt : groupShards) {
          List<BulkItemRequest> list=requestsByShard.get(shardIt.shardId());
          if (list == null) {
            list=Lists.newArrayList();
            requestsByShard.put(shardIt.shardId(),list);
          }
          list.add(new BulkItemRequest(i,new DeleteRequest(deleteRequest)));
        }
      }
 else {
        ShardId shardId=clusterService.operationRouting().deleteShards(clusterState,concreteIndex,deleteRequest.type(),deleteRequest.id(),deleteRequest.routing()).shardId();
        List<BulkItemRequest> list=requestsByShard.get(shardId);
        if (list == null) {
          list=Lists.newArrayList();
          requestsByShard.put(shardId,list);
        }
        list.add(new BulkItemRequest(i,request));
      }
    }
 else     if (request instanceof UpdateRequest) {
      UpdateRequest updateRequest=(UpdateRequest)request;
      String concreteIndex=concreteIndices.getConcreteIndex(updateRequest.index());
      MappingMetaData mappingMd=clusterState.metaData().index(concreteIndex).mappingOrDefault(updateRequest.type());
      if (mappingMd != null && mappingMd.routing().required() && updateRequest.routing() == null) {
        continue;
      }
      ShardId shardId=clusterService.operationRouting().indexShards(clusterState,concreteIndex,updateRequest.type(),updateRequest.id(),updateRequest.routing()).shardId();
      List<BulkItemRequest> list=requestsByShard.get(shardId);
      if (list == null) {
        list=Lists.newArrayList();
        requestsByShard.put(shardId,list);
      }
      list.add(new BulkItemRequest(i,request));
    }
  }
  if (requestsByShard.isEmpty()) {
    listener.onResponse(new BulkResponse(responses.toArray(new BulkItemResponse[responses.length()]),System.currentTimeMillis() - startTime));
    return;
  }
  final AtomicInteger counter=new AtomicInteger(requestsByShard.size());
  for (  Map.Entry<ShardId,List<BulkItemRequest>> entry : requestsByShard.entrySet()) {
    final ShardId shardId=entry.getKey();
    final List<BulkItemRequest> requests=entry.getValue();
    BulkShardRequest bulkShardRequest=new BulkShardRequest(bulkRequest,shardId.index().name(),shardId.id(),bulkRequest.refresh(),requests.toArray(new BulkItemRequest[requests.size()]));
    bulkShardRequest.replicationType(bulkRequest.replicationType());
    bulkShardRequest.consistencyLevel(bulkRequest.consistencyLevel());
    bulkShardRequest.timeout(bulkRequest.timeout());
    shardBulkAction.execute(bulkShardRequest,new ActionListener<BulkShardResponse>(){
      @Override public void onResponse(      BulkShardResponse bulkShardResponse){
        for (        BulkItemResponse bulkItemResponse : bulkShardResponse.getResponses()) {
          responses.set(bulkItemResponse.getItemId(),bulkItemResponse);
        }
        if (counter.decrementAndGet() == 0) {
          finishHim();
        }
      }
      @Override public void onFailure(      Throwable e){
        String message=ExceptionsHelper.detailedMessage(e);
        RestStatus status=ExceptionsHelper.status(e);
        for (        BulkItemRequest request : requests) {
          if (request.request() instanceof IndexRequest) {
            IndexRequest indexRequest=(IndexRequest)request.request();
            responses.set(request.id(),new BulkItemResponse(request.id(),indexRequest.opType().toString().toLowerCase(Locale.ENGLISH),new BulkItemResponse.Failure(concreteIndices.getConcreteIndex(indexRequest.index()),indexRequest.type(),indexRequest.id(),message,status)));
          }
 else           if (request.request() instanceof DeleteRequest) {
            DeleteRequest deleteRequest=(DeleteRequest)request.request();
            responses.set(request.id(),new BulkItemResponse(request.id(),"delete",new BulkItemResponse.Failure(concreteIndices.getConcreteIndex(deleteRequest.index()),deleteRequest.type(),deleteRequest.id(),message,status)));
          }
 else           if (request.request() instanceof UpdateRequest) {
            UpdateRequest updateRequest=(UpdateRequest)request.request();
            responses.set(request.id(),new BulkItemResponse(request.id(),"update",new BulkItemResponse.Failure(concreteIndices.getConcreteIndex(updateRequest.index()),updateRequest.type(),updateRequest.id(),message,status)));
          }
        }
        if (counter.decrementAndGet() == 0) {
          finishHim();
        }
      }
      private void finishHim(){
        listener.onResponse(new BulkResponse(responses.toArray(new BulkItemResponse[responses.length()]),System.currentTimeMillis() - startTime));
      }
    }
);
  }
}
