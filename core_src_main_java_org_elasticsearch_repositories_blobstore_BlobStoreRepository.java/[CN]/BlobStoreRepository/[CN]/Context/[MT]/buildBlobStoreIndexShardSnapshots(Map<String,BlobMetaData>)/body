{
  int latest=-1;
  for (  String name : blobs.keySet()) {
    if (name.startsWith(SNAPSHOT_INDEX_PREFIX)) {
      try {
        int gen=Integer.parseInt(name.substring(SNAPSHOT_INDEX_PREFIX.length()));
        if (gen > latest) {
          latest=gen;
        }
      }
 catch (      NumberFormatException ex) {
        logger.warn("failed to parse index file name [{}]",name);
      }
    }
  }
  if (latest >= 0) {
    try {
      final BlobStoreIndexShardSnapshots shardSnapshots=indexShardSnapshotsFormat.read(blobContainer,Integer.toString(latest));
      return new Tuple<>(shardSnapshots,latest);
    }
 catch (    IOException e) {
      logger.warn(new ParameterizedMessage("failed to read index file  [{}]",SNAPSHOT_INDEX_PREFIX + latest),e);
    }
  }
  List<SnapshotFiles> snapshots=new ArrayList<>();
  for (  String name : blobs.keySet()) {
    try {
      BlobStoreIndexShardSnapshot snapshot=null;
      if (name.startsWith(SNAPSHOT_PREFIX)) {
        snapshot=indexShardSnapshotFormat.readBlob(blobContainer,snapshotId.getUUID());
      }
 else       if (name.startsWith(LEGACY_SNAPSHOT_PREFIX)) {
        snapshot=indexShardSnapshotLegacyFormat.readBlob(blobContainer,name);
      }
      if (snapshot != null) {
        snapshots.add(new SnapshotFiles(snapshot.snapshot(),snapshot.indexFiles()));
      }
    }
 catch (    IOException e) {
      logger.warn(new ParameterizedMessage("failed to read commit point [{}]",name),e);
    }
  }
  return new Tuple<>(new BlobStoreIndexShardSnapshots(snapshots),-1);
}
