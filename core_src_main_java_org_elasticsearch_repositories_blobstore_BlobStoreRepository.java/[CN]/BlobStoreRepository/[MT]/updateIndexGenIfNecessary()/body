{
  if (isReadOnly()) {
    return;
  }
  if (snapshotsBlobContainer.blobExists(SNAPSHOTS_FILE) == false) {
    return;
  }
  final RepositoryData repositoryData=getRepositoryData();
  final Map<String,Set<SnapshotId>> indexToSnapshots=new HashMap<>();
  for (  final SnapshotId snapshotId : repositoryData.getSnapshotIds()) {
    for (    final String indexName : getSnapshotInfo(snapshotId).indices()) {
      if (indexToSnapshots.containsKey(indexName)) {
        indexToSnapshots.get(indexName).add(snapshotId);
      }
 else {
        indexToSnapshots.put(indexName,Sets.newHashSet(snapshotId));
      }
    }
  }
  final Map<String,IndexMeta> indices=new HashMap<>();
  for (  Map.Entry<String,Set<SnapshotId>> entry : indexToSnapshots.entrySet()) {
    final String indexName=entry.getKey();
    indices.put(indexName,new IndexMeta(indexName,indexName,entry.getValue()));
  }
  try {
    writeIndexGen(repositoryData.addIndices(indices));
  }
 catch (  IOException e) {
    throw new RepositoryException(metadata.name(),"failed to update the repository index blob with indices data on startup",e);
  }
}
