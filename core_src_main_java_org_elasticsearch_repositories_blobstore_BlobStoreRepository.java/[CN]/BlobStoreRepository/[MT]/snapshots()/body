{
  try {
    List<SnapshotId> snapshots=new ArrayList<>();
    Map<String,BlobMetaData> blobs;
    try {
      blobs=snapshotsBlobContainer.listBlobsByPrefix(COMMON_SNAPSHOT_PREFIX);
    }
 catch (    UnsupportedOperationException ex) {
      return readSnapshotList();
    }
    int prefixLength=SNAPSHOT_PREFIX.length();
    int suffixLength=SNAPSHOT_SUFFIX.length();
    int legacyPrefixLength=LEGACY_SNAPSHOT_PREFIX.length();
    for (    BlobMetaData md : blobs.values()) {
      String blobName=md.name();
      final String name;
      String uuid;
      if (blobName.startsWith(SNAPSHOT_PREFIX) && blobName.length() > legacyPrefixLength) {
        final String str=blobName.substring(prefixLength,blobName.length() - suffixLength);
        Tuple<String,String> pair=parseNameUUIDFromBlobName(str);
        name=pair.v1();
        uuid=pair.v2();
      }
 else       if (blobName.startsWith(LEGACY_SNAPSHOT_PREFIX) && blobName.length() > suffixLength + prefixLength) {
        name=blobName.substring(legacyPrefixLength);
        uuid=SnapshotId.UNASSIGNED_UUID;
      }
 else {
        continue;
      }
      snapshots.add(new SnapshotId(name,uuid));
    }
    return Collections.unmodifiableList(snapshots);
  }
 catch (  IOException ex) {
    throw new RepositoryException(repositoryName,"failed to list snapshots in repository",ex);
  }
}
