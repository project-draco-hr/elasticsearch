{
  MetaData metaData;
  if (snapshotVersion == null) {
    assert ignoreIndexErrors;
    if (globalMetaDataFormat.exists(snapshotsBlobContainer,snapshotId.getName())) {
      snapshotVersion=Version.CURRENT;
    }
 else     if (globalMetaDataLegacyFormat.exists(snapshotsBlobContainer,snapshotId.getName())) {
      throw new SnapshotException(metadata.name(),snapshotId,"snapshot is too old");
    }
 else {
      throw new SnapshotMissingException(metadata.name(),snapshotId);
    }
  }
  try {
    metaData=globalMetaDataFormat(snapshotVersion).read(snapshotsBlobContainer,snapshotId.getName());
  }
 catch (  FileNotFoundException|NoSuchFileException ex) {
    throw new SnapshotMissingException(metadata.name(),snapshotId,ex);
  }
catch (  IOException ex) {
    throw new SnapshotException(metadata.name(),snapshotId,"failed to get snapshots",ex);
  }
  MetaData.Builder metaDataBuilder=MetaData.builder(metaData);
  for (  String index : indices) {
    BlobPath indexPath=basePath().add("indices").add(index);
    BlobContainer indexMetaDataBlobContainer=blobStore().blobContainer(indexPath);
    try {
      metaDataBuilder.put(indexMetaDataFormat(snapshotVersion).read(indexMetaDataBlobContainer,snapshotId.getName()),false);
    }
 catch (    ElasticsearchParseException|IOException ex) {
      if (ignoreIndexErrors) {
        logger.warn("[{}] [{}] failed to read metadata for index",ex,snapshotId,index);
      }
 else {
        throw ex;
      }
    }
  }
  return metaDataBuilder.build();
}
