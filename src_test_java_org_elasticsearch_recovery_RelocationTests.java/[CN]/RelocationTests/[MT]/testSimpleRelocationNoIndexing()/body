{
  logger.info("--> starting [node1] ...");
  final String node_1=cluster().startNode();
  logger.info("--> creating test index ...");
  client().admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",1).put("index.number_of_replicas",0)).execute().actionGet();
  logger.info("--> index 10 docs");
  for (int i=0; i < 10; i++) {
    client().prepareIndex("test","type",Integer.toString(i)).setSource("field","value" + i).execute().actionGet();
  }
  logger.info("--> flush so we have an actual index");
  client().admin().indices().prepareFlush().execute().actionGet();
  logger.info("--> index more docs so we have something in the translog");
  for (int i=10; i < 20; i++) {
    client().prepareIndex("test","type",Integer.toString(i)).setSource("field","value" + i).execute().actionGet();
  }
  logger.info("--> verifying count");
  client().admin().indices().prepareRefresh().execute().actionGet();
  assertThat(client().prepareCount("test").execute().actionGet().getCount(),equalTo(20l));
  logger.info("--> start another node");
  final String node_2=cluster().startNode();
  ClusterHealthResponse clusterHealthResponse=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForNodes("2").execute().actionGet();
  assertThat(clusterHealthResponse.isTimedOut(),equalTo(false));
  logger.info("--> relocate the shard from node1 to node2");
  client().admin().cluster().prepareReroute().add(new MoveAllocationCommand(new ShardId("test",0),node_1,node_2)).execute().actionGet();
  clusterHealthResponse=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForRelocatingShards(0).setTimeout(ACCEPTABLE_RELOCATION_TIME).execute().actionGet();
  assertThat(clusterHealthResponse.isTimedOut(),equalTo(false));
  clusterHealthResponse=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForRelocatingShards(0).setTimeout(ACCEPTABLE_RELOCATION_TIME).execute().actionGet();
  assertThat(clusterHealthResponse.isTimedOut(),equalTo(false));
  logger.info("--> verifying count again...");
  client().admin().indices().prepareRefresh().execute().actionGet();
  assertThat(client().prepareCount("test").execute().actionGet().getCount(),equalTo(20l));
}
