{
  client().admin().indices().prepareCreate("test").addMapping("type1","field1","type=string,analyzer=whitespace").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",1)).execute().actionGet();
  indexRandom(true,client().prepareIndex("test","type1","3").setSource("field1","quick lazy huge brown pidgin","field2","the quick lazy huge brown fox jumps over the tree"),client().prepareIndex("test","type1","1").setSource("field1","the quick brown fox"),client().prepareIndex("test","type1","2").setSource("field1","the quick lazy huge brown fox jumps over the tree"));
  SearchResponse searchResponse=client().prepareSearch().setQuery(QueryBuilders.commonTerms("field1","the quick brown").cutoffFrequency(3).lowFreqOperator(Operator.OR)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("2"));
  assertThat(searchResponse.getHits().getHits()[2].getId(),equalTo("3"));
  searchResponse=client().prepareSearch().setQuery(QueryBuilders.commonTerms("field1","the quick brown").cutoffFrequency(3).lowFreqOperator(Operator.AND)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(2l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("2"));
  searchResponse=client().prepareSearch().setQuery(QueryBuilders.commonTerms("field1","the quick brown").cutoffFrequency(3)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("2"));
  assertThat(searchResponse.getHits().getHits()[2].getId(),equalTo("3"));
  searchResponse=client().prepareSearch().setQuery(QueryBuilders.commonTerms("field1","the huge fox").lowFreqMinimumShouldMatch("2")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("2"));
  searchResponse=client().prepareSearch().setQuery(QueryBuilders.commonTerms("field1","the lazy fox brown").cutoffFrequency(1).highFreqMinimumShouldMatch("3")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(2l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("2"));
  searchResponse=client().prepareSearch().setQuery(QueryBuilders.commonTerms("field1","the lazy fox brown").cutoffFrequency(1).highFreqMinimumShouldMatch("4")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("2"));
  searchResponse=client().prepareSearch().setQuery("{ \"common\" : { \"field1\" : { \"query\" : \"the lazy fox brown\", \"cutoff_frequency\" : 1, \"minimum_should_match\" : { \"high_freq\" : 4 } } } }").execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("2"));
  searchResponse=client().prepareSearch().setQuery(QueryBuilders.commonTerms("field1","the lazy fox brown").cutoffFrequency(1)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("2"));
  searchResponse=client().prepareSearch().setQuery(QueryBuilders.commonTerms("field1","the quick brown").cutoffFrequency(3).analyzer("standard")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("3"));
  assertThat(searchResponse.getHits().getHits()[2].getId(),equalTo("2"));
  searchResponse=client().prepareSearch().setQuery(QueryBuilders.matchQuery("field1","the quick brown").cutoffFrequency(3).operator(MatchQueryBuilder.Operator.AND)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(2l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("2"));
  searchResponse=client().prepareSearch().setQuery(QueryBuilders.matchQuery("field1","the quick brown").cutoffFrequency(3).operator(MatchQueryBuilder.Operator.OR)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("2"));
  assertThat(searchResponse.getHits().getHits()[2].getId(),equalTo("3"));
  searchResponse=client().prepareSearch().setQuery(QueryBuilders.matchQuery("field1","the quick brown").cutoffFrequency(3).operator(MatchQueryBuilder.Operator.AND).analyzer("standard")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("3"));
  assertThat(searchResponse.getHits().getHits()[2].getId(),equalTo("2"));
  searchResponse=client().prepareSearch().setQuery(QueryBuilders.multiMatchQuery("the quick brown","field1","field2").cutoffFrequency(3).operator(MatchQueryBuilder.Operator.AND)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("3"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[2].getId(),equalTo("2"));
}
