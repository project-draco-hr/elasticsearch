{
  assertAcked(prepareCreate("test").addMapping("s",jsonBuilder().startObject().startObject("s").startObject("_routing").field("required",true).field("path","bs").endObject().startObject("properties").startObject("online").field("type","boolean").endObject().startObject("ts").field("type","date").field("ignore_malformed",false).field("format","dateOptionalTime").endObject().startObject("bs").field("type","string").field("index","not_analyzed").endObject().endObject().endObject().endObject()).addMapping("bs","online","type=boolean","ts","type=date,ignore_malformed=false,format=dateOptionalTime"));
  ensureGreen();
  client().prepareIndex("test","s","1").setSource("online",false,"bs","Y","ts",System.currentTimeMillis() - 100).get();
  client().prepareIndex("test","s","2").setSource("online",true,"bs","X","ts",System.currentTimeMillis() - 10000000).get();
  client().prepareIndex("test","bs","3").setSource("online",false,"ts",System.currentTimeMillis() - 100).get();
  client().prepareIndex("test","bs","4").setSource("online",true,"ts",System.currentTimeMillis() - 123123).get();
  refresh();
  SearchResponse response=client().prepareSearch("test").setSearchType(SearchType.DFS_QUERY_THEN_FETCH).setQuery(boolQuery().must(termQuery("online",true)).must(boolQuery().should(boolQuery().must(rangeQuery("ts").lt(System.currentTimeMillis() - (15 * 1000))).must(termQuery("_type","bs"))).should(boolQuery().must(rangeQuery("ts").lt(System.currentTimeMillis() - (15 * 1000))).must(termQuery("_type","s"))))).setVersion(true).setFrom(0).setSize(100).setExplain(true).get();
  assertNoFailures(response);
}
