{
  assertAcked(client().admin().indices().prepareCreate("test").addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("_all").field("omit_norms",true).endObject().endObject().endObject()));
  indexRandom(true,client().prepareIndex("test","type1","1").setSource("field1","the quick brown fox jumps"),client().prepareIndex("test","type1","2").setSource("field1","quick brown"),client().prepareIndex("test","type1","3").setSource("field1","quick"));
  assertHitCount(client().prepareSearch().setQuery(matchQuery("_all","quick")).get(),3l);
  SearchResponse searchResponse=client().prepareSearch().setQuery(matchQuery("_all","quick")).get();
  SearchHit[] hits=searchResponse.getHits().hits();
  assertThat(hits.length,equalTo(3));
  assertThat(hits[0].score(),allOf(equalTo(hits[1].getScore()),equalTo(hits[2].getScore())));
  wipeIndices("test");
  assertAcked(client().admin().indices().prepareCreate("test"));
  indexRandom(true,client().prepareIndex("test","type1","1").setSource("field1","the quick brown fox jumps"),client().prepareIndex("test","type1","2").setSource("field1","quick brown"),client().prepareIndex("test","type1","3").setSource("field1","quick"));
  assertHitCount(client().prepareSearch().setQuery(matchQuery("_all","quick")).get(),3l);
  searchResponse=client().prepareSearch().setQuery(matchQuery("_all","quick")).get();
  hits=searchResponse.getHits().hits();
  assertThat(hits.length,equalTo(3));
  assertThat(hits[0].score(),allOf(greaterThan(hits[1].getScore()),greaterThan(hits[2].getScore())));
}
