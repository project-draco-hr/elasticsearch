{
  GatewayService service=createService(ImmutableSettings.builder());
  assertNull(service.recoverAfterTime());
  service=createService(ImmutableSettings.builder().put("gateway.expected_nodes",1));
  assertThat(service.recoverAfterTime(),Matchers.equalTo(GatewayService.DEFAULT_RECOVER_AFTER_TIME_IF_EXPECTED_NODES_IS_SET));
  service=createService(ImmutableSettings.builder().put("gateway.expected_data_nodes",1));
  assertThat(service.recoverAfterTime(),Matchers.equalTo(GatewayService.DEFAULT_RECOVER_AFTER_TIME_IF_EXPECTED_NODES_IS_SET));
  service=createService(ImmutableSettings.builder().put("gateway.expected_master_nodes",1));
  assertThat(service.recoverAfterTime(),Matchers.equalTo(GatewayService.DEFAULT_RECOVER_AFTER_TIME_IF_EXPECTED_NODES_IS_SET));
  TimeValue timeValue=TimeValue.timeValueHours(3);
  service=createService(ImmutableSettings.builder().put("gateway.expected_nodes",1).put("gateway.recover_after_time",timeValue.toString()));
  assertThat(service.recoverAfterTime().millis(),Matchers.equalTo(timeValue.millis()));
}
