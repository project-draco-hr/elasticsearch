{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  iwc.setMergePolicy(newLogMergePolicy());
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,iwc);
  FieldType offsetsType=new FieldType(TextField.TYPE_STORED);
  offsetsType.setIndexOptions(FieldInfo.IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);
  Field body=new Field("body","",offsetsType);
  Document doc=new Document();
  doc.add(body);
  body.setStringValue("This is a test. Just a test highlighting from postings. Feel free to ignore.");
  iw.addDocument(doc);
  IndexReader ir=iw.getReader();
  iw.close();
  IndexSearcher searcher=newSearcher(ir);
  XPostingsHighlighter highlighter=new XPostingsHighlighter(){
    @Override protected XPassageFormatter getFormatter(    String field){
      return new XPassageFormatter(){
        XPassageFormatter defaultFormatter=new XDefaultPassageFormatter();
        @Override public String[] format(        Passage passages[],        String content){
          return new String[]{"blah blah",defaultFormatter.format(passages,content).toString()};
        }
      }
;
    }
  }
;
  Query query=new TermQuery(new Term("body","highlighting"));
  TopDocs topDocs=searcher.search(query,null,10,Sort.INDEXORDER);
  assertEquals(1,topDocs.totalHits);
  int[] docIDs=new int[1];
  docIDs[0]=topDocs.scoreDocs[0].doc;
  Map<String,Object[]> snippets=highlighter.highlightFieldsAsObjects(new String[]{"body"},query,searcher,docIDs,new int[]{1});
  Object[] bodySnippets=snippets.get("body");
  assertEquals(1,bodySnippets.length);
  assertTrue(Arrays.equals(new String[]{"blah blah","Just a test <b>highlighting</b> from postings. "},(String[])bodySnippets[0]));
  ir.close();
  dir.close();
}
