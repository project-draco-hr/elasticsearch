{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(new MockAnalyzer(random(),MockTokenizer.SIMPLE,true));
  iwc.setMergePolicy(newLogMergePolicy());
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,iwc);
  Document doc=new Document();
  FieldType offsetsType=new FieldType(TextField.TYPE_NOT_STORED);
  offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);
  final String text="This is a test.  Just highlighting from postings. This is also a much sillier test.  Feel free to test test test test test test test.";
  Field body=new Field("body",text,offsetsType);
  doc.add(body);
  iw.addDocument(doc);
  IndexReader ir=iw.getReader();
  iw.close();
  IndexSearcher searcher=newSearcher(ir);
  XPostingsHighlighter highlighter=new XPostingsHighlighter(10000){
    @Override protected String[][] loadFieldValues(    IndexSearcher searcher,    String[] fields,    int[] docids,    int maxLength) throws IOException {
      assertThat(fields.length,equalTo(1));
      assertThat(docids.length,equalTo(1));
      String[][] contents=new String[1][1];
      contents[0][0]=text;
      return contents;
    }
    @Override protected BreakIterator getBreakIterator(    String field){
      return new WholeBreakIterator();
    }
  }
;
  Query query=new TermQuery(new Term("body","test"));
  TopDocs topDocs=searcher.search(query,null,10,Sort.INDEXORDER);
  assertEquals(1,topDocs.totalHits);
  String snippets[]=highlighter.highlight("body",query,searcher,topDocs,2);
  assertEquals(1,snippets.length);
  assertEquals("This is a <b>test</b>.  Just highlighting from postings. This is also a much sillier <b>test</b>.  Feel free to <b>test</b> <b>test</b> <b>test</b> <b>test</b> <b>test</b> <b>test</b> <b>test</b>.",snippets[0]);
  ir.close();
  dir.close();
}
