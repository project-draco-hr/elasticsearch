{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()));
  iwc.setMergePolicy(newLogMergePolicy());
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,iwc);
  FieldType offsetsType=new FieldType(TextField.TYPE_STORED);
  offsetsType.setIndexOptions(FieldInfo.IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);
  Field body=new Field("body","",offsetsType);
  Document doc=new Document();
  doc.add(body);
  body.setStringValue("This test is another test. Not a good sentence. Test test test test.");
  iw.addDocument(doc);
  IndexReader ir=iw.getReader();
  iw.close();
  XPostingsHighlighter highlighter=new XPostingsHighlighter();
  IndexSearcher searcher=newSearcher(ir);
  Query query=new TermQuery(new Term("body","test"));
  TopDocs topDocs=searcher.search(query,null,10,Sort.INDEXORDER);
  assertThat(topDocs.totalHits,equalTo(1));
  String snippets[]=highlighter.highlight("body",query,searcher,topDocs,5);
  assertThat(snippets.length,equalTo(1));
  assertThat(snippets[0],equalTo("This <b>test</b> is another test. ... <b>Test</b> <b>test</b> <b>test</b> test."));
  final CustomPassageFormatter passageFormatter=new CustomPassageFormatter("<b>","</b>",new DefaultEncoder());
  highlighter=new XPostingsHighlighter(){
    @Override protected PassageFormatter getFormatter(    String field){
      return passageFormatter;
    }
  }
;
  final ScoreDoc scoreDocs[]=topDocs.scoreDocs;
  int docids[]=new int[scoreDocs.length];
  int maxPassages[]=new int[scoreDocs.length];
  for (int i=0; i < docids.length; i++) {
    docids[i]=scoreDocs[i].doc;
    maxPassages[i]=5;
  }
  Map<String,Object[]> highlights=highlighter.highlightFieldsAsObjects(new String[]{"body"},query,searcher,docids,maxPassages);
  assertThat(highlights,notNullValue());
  assertThat(highlights.size(),equalTo(1));
  Object[] objectSnippets=highlights.get("body");
  assertThat(objectSnippets,notNullValue());
  assertThat(objectSnippets.length,equalTo(1));
  assertThat(objectSnippets[0],instanceOf(Snippet[].class));
  Snippet[] snippetsSnippet=(Snippet[])objectSnippets[0];
  assertThat(snippetsSnippet.length,equalTo(2));
  assertThat(snippetsSnippet[0].getText(),equalTo("This <b>test</b> is another test."));
  assertThat(snippetsSnippet[1].getText(),equalTo("<b>Test</b> <b>test</b> <b>test</b> test."));
  ir.close();
  dir.close();
}
