{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(new MockAnalyzer(random()));
  iwc.setMergePolicy(newLogMergePolicy());
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,iwc);
  FieldType offsetsType=new FieldType(TextField.TYPE_STORED);
  offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);
  Field body=new Field("body","",offsetsType);
  Document doc=new Document();
  doc.add(body);
  body.setStringValue("This is a test. Just a test highlighting from postings");
  Field body2=new Field("body","",offsetsType);
  doc.add(body2);
  body2.setStringValue("highlighter.");
  iw.addDocument(doc);
  IndexReader ir=iw.getReader();
  iw.close();
  IndexSearcher searcher=newSearcher(ir);
  XPostingsHighlighter highlighter=new XPostingsHighlighter();
  Query query=new TermQuery(new Term("body","highlighting"));
  TopDocs topDocs=searcher.search(query,null,10,Sort.INDEXORDER);
  assertThat(topDocs.totalHits,equalTo(1));
  String snippets[]=highlighter.highlight("body",query,searcher,topDocs);
  assertThat(snippets.length,equalTo(1));
  assertThat(snippets[0],equalTo("Just a test <b>highlighting</b> from postings highlighter."));
  highlighter=new XPostingsHighlighter(){
    @Override protected char getMultiValuedSeparator(    String field){
      return 8233;
    }
  }
;
  snippets=highlighter.highlight("body",query,searcher,topDocs);
  assertThat(snippets.length,equalTo(1));
  assertThat(snippets[0],equalTo("Just a test <b>highlighting</b> from postings" + (char)8233));
  ir.close();
  dir.close();
}
