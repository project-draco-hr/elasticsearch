{
  BufferedReader r=new BufferedReader(new InputStreamReader(this.getClass().getResourceAsStream("CambridgeMA.utf8"),"UTF-8"));
  String text=r.readLine();
  r.close();
  Directory dir=newDirectory();
  Analyzer analyzer=new MockAnalyzer(random(),MockTokenizer.SIMPLE,true);
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,analyzer);
  FieldType positionsType=new FieldType(TextField.TYPE_STORED);
  positionsType.setIndexOptions(FieldInfo.IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);
  Field body=new Field("body",text,positionsType);
  Document document=new Document();
  document.add(body);
  iw.addDocument(document);
  IndexReader ir=iw.getReader();
  iw.close();
  IndexSearcher searcher=newSearcher(ir);
  BooleanQuery query=new BooleanQuery();
  query.add(new TermQuery(new Term("body","porter")),BooleanClause.Occur.SHOULD);
  query.add(new TermQuery(new Term("body","square")),BooleanClause.Occur.SHOULD);
  query.add(new TermQuery(new Term("body","massachusetts")),BooleanClause.Occur.SHOULD);
  TopDocs topDocs=searcher.search(query,10);
  assertEquals(1,topDocs.totalHits);
  XPostingsHighlighter highlighter=new XPostingsHighlighter(Integer.MAX_VALUE - 1);
  String snippets[]=highlighter.highlight("body",query,searcher,topDocs,2);
  assertEquals(1,snippets.length);
  assertTrue(snippets[0].contains("<b>Square</b>"));
  assertTrue(snippets[0].contains("<b>Porter</b>"));
  ir.close();
  dir.close();
}
