{
  double equatorialDistance=2 * Math.PI * 6378137.0;
  double polarDistance=Math.PI * 6356752.314245;
  assertThat(GeoUtils.geoHashCellSize(0),equalTo(Math.sqrt(Math.pow(polarDistance,2) + Math.pow(equatorialDistance,2))));
  assertThat(GeoUtils.geoHashCellSize(1),equalTo(Math.sqrt(Math.pow(polarDistance / 4,2) + Math.pow(equatorialDistance / 8,2))));
  assertThat(GeoUtils.geoHashCellSize(2),equalTo(Math.sqrt(Math.pow(polarDistance / 32,2) + Math.pow(equatorialDistance / 32,2))));
  assertThat(GeoUtils.geoHashCellSize(3),equalTo(Math.sqrt(Math.pow(polarDistance / 128,2) + Math.pow(equatorialDistance / 256,2))));
  assertThat(GeoUtils.geoHashCellSize(4),equalTo(Math.sqrt(Math.pow(polarDistance / 1024,2) + Math.pow(equatorialDistance / 1024,2))));
  assertThat(GeoUtils.geoHashCellSize(5),equalTo(Math.sqrt(Math.pow(polarDistance / 4096,2) + Math.pow(equatorialDistance / 8192,2))));
  assertThat(GeoUtils.geoHashCellSize(6),equalTo(Math.sqrt(Math.pow(polarDistance / 32768,2) + Math.pow(equatorialDistance / 32768,2))));
  assertThat(GeoUtils.geoHashCellSize(7),equalTo(Math.sqrt(Math.pow(polarDistance / 131072,2) + Math.pow(equatorialDistance / 262144,2))));
  assertThat(GeoUtils.geoHashCellSize(8),equalTo(Math.sqrt(Math.pow(polarDistance / 1048576,2) + Math.pow(equatorialDistance / 1048576,2))));
  assertThat(GeoUtils.geoHashCellSize(9),equalTo(Math.sqrt(Math.pow(polarDistance / 4194304,2) + Math.pow(equatorialDistance / 8388608,2))));
  assertThat(GeoUtils.geoHashCellSize(10),equalTo(Math.sqrt(Math.pow(polarDistance / 33554432,2) + Math.pow(equatorialDistance / 33554432,2))));
  assertThat(GeoUtils.geoHashCellSize(11),equalTo(Math.sqrt(Math.pow(polarDistance / 134217728,2) + Math.pow(equatorialDistance / 268435456,2))));
  assertThat(GeoUtils.geoHashCellSize(12),equalTo(Math.sqrt(Math.pow(polarDistance / 1073741824,2) + Math.pow(equatorialDistance / 1073741824,2))));
}
