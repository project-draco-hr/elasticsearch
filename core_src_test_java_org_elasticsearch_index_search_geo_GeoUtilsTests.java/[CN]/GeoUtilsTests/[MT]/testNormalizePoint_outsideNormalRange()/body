{
  for (int i=0; i < 100; i++) {
    double normalisedLat=(randomDouble() * 180.0) - 90.0;
    double normalisedLon=(randomDouble() * 360.0) - 180.0;
    int shiftLat=(randomBoolean() ? 1 : -1) * randomIntBetween(1,10000);
    int shiftLon=(randomBoolean() ? 1 : -1) * randomIntBetween(1,10000);
    double testLat=normalisedLat + (180.0 * shiftLat);
    double testLon=normalisedLon + (360.0 * shiftLon);
    double expectedLat=normalisedLat * (shiftLat % 2 == 0 ? 1 : -1);
    double expectedLon=normalisedLon + (shiftLat % 2 == 0 ? 0 : 180);
    if (expectedLon > 180.0) {
      expectedLon-=360;
    }
    GeoPoint testPoint=new GeoPoint(testLat,testLon);
    GeoPoint expectedPoint=new GeoPoint(expectedLat,expectedLon);
    assertNormalizedPoint(testPoint,expectedPoint);
  }
}
