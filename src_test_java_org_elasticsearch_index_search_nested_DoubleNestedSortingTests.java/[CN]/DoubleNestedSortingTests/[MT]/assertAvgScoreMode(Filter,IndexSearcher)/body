{
  MultiValueMode sortMode=MultiValueMode.AVG;
  Filter childFilter=new NotFilter(parentFilter);
  XFieldComparatorSource nestedComparatorSource=createFieldComparator("field2",sortMode,-127,createNested(parentFilter,childFilter));
  Query query=new ToParentBlockJoinQuery(new XFilteredQuery(new MatchAllDocsQuery(),childFilter),new FixedBitSetCachingWrapperFilter(parentFilter),ScoreMode.None);
  Sort sort=new Sort(new SortField("field2",nestedComparatorSource));
  TopDocs topDocs=searcher.search(query,5,sort);
  assertThat(topDocs.totalHits,equalTo(7));
  assertThat(topDocs.scoreDocs.length,equalTo(5));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(11));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[0]).fields[0]).intValue(),equalTo(2));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(7));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[1]).fields[0]).intValue(),equalTo(2));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(3));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[2]).fields[0]).intValue(),equalTo(3));
  assertThat(topDocs.scoreDocs[3].doc,equalTo(15));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[3]).fields[0]).intValue(),equalTo(3));
  assertThat(topDocs.scoreDocs[4].doc,equalTo(19));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[4]).fields[0]).intValue(),equalTo(3));
}
