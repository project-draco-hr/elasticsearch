{
  if (!config.isSingle() && args.length > 0 && (args[0].equals("-h") || args[0].equals("--help"))) {
    config.printUsage(terminal);
    return ExitStatus.OK.status;
  }
  CliToolConfig.Cmd cmd;
  if (config.isSingle()) {
    cmd=config.single();
  }
 else {
    if (args.length == 0) {
      terminal.printError("command not specified");
      config.printUsage(terminal);
      return ExitStatus.USAGE.status;
    }
    String cmdName=args[0];
    cmd=config.cmd(cmdName);
    if (cmd == null) {
      terminal.printError("unknown command [%s]. Use [-h] option to list available commands",cmdName);
      return ExitStatus.USAGE.status;
    }
    if (args.length == 1) {
      args=new String[0];
    }
 else {
      String[] cmdArgs=new String[args.length - 1];
      System.arraycopy(args,1,cmdArgs,0,cmdArgs.length);
      args=cmdArgs;
    }
  }
  Command command=null;
  try {
    command=parse(cmd,args);
    return command.execute(settings,env).status;
  }
 catch (  IOException ioe) {
    terminal.printError(ioe);
    return ExitStatus.IO_ERROR.status;
  }
catch (  IllegalArgumentException|ElasticsearchIllegalArgumentException ilae) {
    terminal.printError(ilae);
    return ExitStatus.USAGE.status;
  }
catch (  Throwable t) {
    terminal.printError(t);
    if (command == null) {
      return ExitStatus.USAGE.status;
    }
    return ExitStatus.CODE_ERROR.status;
  }
}
