{
  Processor processor=mock(Processor.class);
  doThrow(new RuntimeException("error")).doNothing().when(processor).execute(ingestDocument);
  Processor processorToFail=mock(Processor.class);
  doThrow(new RuntimeException("error")).doNothing().when(processorToFail).execute(ingestDocument);
  Processor lastProcessor=mock(Processor.class);
  CompoundProcessor innerCompoundOnFailProcessor=new CompoundProcessor(Arrays.asList(processorToFail),Arrays.asList(lastProcessor));
  CompoundProcessor compoundOnFailProcessor=spy(innerCompoundOnFailProcessor);
  CompoundProcessor innerCompoundProcessor=new CompoundProcessor(Arrays.asList(processor),Arrays.asList(compoundOnFailProcessor));
  CompoundProcessor compoundProcessor=spy(innerCompoundProcessor);
  assertThat(compoundProcessor.getProcessors().size(),equalTo(1));
  assertThat(compoundProcessor.getProcessors().get(0),equalTo(processor));
  assertThat(compoundProcessor.getOnFailureProcessors().size(),equalTo(1));
  assertThat(compoundProcessor.getOnFailureProcessors().get(0),equalTo(compoundOnFailProcessor));
  compoundProcessor.execute(ingestDocument);
  verify(processor,times(1)).execute(ingestDocument);
  verify(compoundProcessor,times(1)).executeOnFailure(ingestDocument);
  verify(compoundOnFailProcessor,times(1)).execute(ingestDocument);
  verify(processorToFail,times(1)).execute(ingestDocument);
  verify(compoundOnFailProcessor,times(1)).executeOnFailure(ingestDocument);
  verify(lastProcessor,times(1)).execute(ingestDocument);
}
