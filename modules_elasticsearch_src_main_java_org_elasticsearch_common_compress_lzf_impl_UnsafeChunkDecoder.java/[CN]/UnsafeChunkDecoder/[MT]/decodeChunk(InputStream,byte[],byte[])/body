{
  int bytesInOutput;
  int bytesRead=readHeader(is,inputBuffer);
  if ((bytesRead < HEADER_BYTES) || inputBuffer[0] != LZFChunk.BYTE_Z || inputBuffer[1] != LZFChunk.BYTE_V) {
    if (bytesRead == 0) {
      return -1;
    }
    throw new IOException("Corrupt input data, block did not start with 2 byte signature ('ZV') followed by type byte, 2-byte length)");
  }
  int type=inputBuffer[2];
  int compLen=uint16(inputBuffer,3);
  if (type == LZFChunk.BLOCK_TYPE_NON_COMPRESSED) {
    readFully(is,false,outputBuffer,0,compLen);
    bytesInOutput=compLen;
  }
 else {
    readFully(is,true,inputBuffer,0,2 + compLen);
    int uncompLen=uint16(inputBuffer,0);
    decodeChunk(inputBuffer,2,outputBuffer,0,uncompLen);
    bytesInOutput=uncompLen;
  }
  return bytesInOutput;
}
