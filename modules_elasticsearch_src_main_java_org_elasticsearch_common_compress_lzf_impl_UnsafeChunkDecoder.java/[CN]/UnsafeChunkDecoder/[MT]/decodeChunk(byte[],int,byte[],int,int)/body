{
  main_loop:   do {
    int ctrl=in[inPos++] & 255;
    while (ctrl < LZFChunk.MAX_LITERAL) {
      copyUpTo32(in,inPos,out,outPos,ctrl);
      ++ctrl;
      inPos+=ctrl;
      outPos+=ctrl;
      if (outPos >= outEnd) {
        break main_loop;
      }
      ctrl=in[inPos++] & 255;
    }
    int len=ctrl >> 5;
    ctrl=-((ctrl & 0x1f) << 8) - 1;
    if (len < 7) {
      ctrl-=in[inPos++] & 255;
      if (ctrl < -7) {
        moveLong(out,outPos,outEnd,ctrl);
        outPos+=len + 2;
        continue;
      }
      outPos=copyOverlappingShort(out,outPos,ctrl,len);
      continue;
    }
    len=in[inPos++] & 255;
    ctrl-=in[inPos++] & 255;
    if ((ctrl + len) >= -9) {
      outPos=copyOverlappingLong(out,outPos,ctrl,len);
      continue;
    }
    len+=9;
    if (len <= 32) {
      copyUpTo32(out,outPos + ctrl,out,outPos,len - 1);
    }
 else {
      System.arraycopy(out,outPos + ctrl,out,outPos,len);
    }
    outPos+=len;
  }
 while (outPos < outEnd);
  if (outPos != outEnd)   throw new IOException("Corrupt data: overrun in decompress, input offset " + inPos + ", output offset "+ outPos);
}
