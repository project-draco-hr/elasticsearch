import random
import os
import tempfile
import shutil
import subprocess
import time
import argparse
import logging
import sys
import re
from datetime import datetime
try:
    from elasticsearch import Elasticsearch
    from elasticsearch.exceptions import ConnectionError
    from elasticsearch.exceptions import TransportError
except ImportError as e:
    print "Can't import elasticsearch please install `sudo pip install elasticsearch`"
    raise e
'This file executes a basic upgrade test by running a full cluster restart.\n\nThe upgrade test starts 2 or more nodes of an old elasticserach version, indexes\na random number of documents into the running nodes and executes a full cluster restart.\nAfter the nodes are recovered a small set of basic checks are executed to ensure all\ndocuments are still searchable and field data can be loaded etc.\n\nNOTE: This script requires the elasticsearch python client `elasticsearch-py` run the following command to install:\n\n  `sudo pip install elasticsearch`\n\nif you are running python3 you need to install the client using pip3. On OSX `pip3` will be included in the Python 3.4\nrelease available on `https://www.python.org/download/`:\n\n  `sudo pip3 install elasticsearch`\n\nSee `https://github.com/elasticsearch/elasticsearch-py` for details\n\nIn order to run this test two different version of elasticsearch are required. Both need to be unpacked into\nthe same directory:\n\n```\n   $ cd /path/to/elasticsearch/clone\n   $ mkdir backwards && cd backwards\n   $ wget  https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.1.tar.gz\n   $ wget  https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-0.90.13.tar.gz\n   $ tar -zxvf elasticsearch-1.3.1.tar.gz && tar -zxvf elasticsearch-0.90.13.tar.gz\n   $ cd ..\n   $ python dev-tools/upgrade-tests.py --version.backwards 0.90.13 --version.current 1.3.1\n```\n'
BLACK_LIST = {'1.2.0': {'reason': 'Contains a major bug where routing hashes are not consistent with previous version', 'issue': 'https://github.com/elasticsearch/elasticsearch/pull/6393', }, '1.3.0': {'reason': 'Lucene Related bug prevents upgrades from 0.90.7 and some earlier versions ', 'issue': 'https://github.com/elasticsearch/elasticsearch/pull/7055', }, }
if (__name__ == '__main__'):
    logging.basicConfig(format='[%(levelname)s] [%(asctime)s] %(message)s', level=logging.INFO, datefmt='%Y-%m-%d %I:%M:%S %p')
    logging.getLogger('elasticsearch').setLevel(logging.ERROR)
    logging.getLogger('urllib3').setLevel(logging.WARN)
    parser = argparse.ArgumentParser(description='Tests Full Cluster Restarts across major version')
    parser.add_argument('--version.backwards', '-b', dest='backwards_version', metavar='V', help='The elasticsearch version to upgrade from')
    parser.add_argument('--version.current', '-c', dest='current_version', metavar='V', help='The elasticsearch version to upgrade to')
    parser.add_argument('--seed', '-s', dest='seed', metavar='N', type=int, help='The random seed to use')
    parser.add_argument('--backwards.dir', '-d', dest='bwc_directory', default='backwards', metavar='dir', help='The directory to the backwards compatibility sources')
    parser.add_argument('--tcp.port', '-p', dest='tcp_port', default=9300, metavar='port', type=int, help='The port to use as the minimum port for TCP communication')
    parser.add_argument('--http.port', '-t', dest='http_port', default=9200, metavar='port', type=int, help='The port to use as the minimum port for HTTP communication')
    parser.set_defaults(bwc_directory='backwards')
    parser.set_defaults(seed=int(time.time()))
    args = parser.parse_args()
    node_dir = args.bwc_directory
    current_version = args.current_version
    bwc_version = args.backwards_version
    seed = args.seed
    random.seed(seed)
    (bwc_version, current_version) = pick_random_upgrade_version(node_dir, bwc_version, current_version)
    tcp_port = args.tcp_port
    http_port = args.http_port
    try:
        full_cluster_restart(node_dir, current_version, bwc_version, tcp_port, http_port)
    except:
        logging.warn(('REPRODUCE WITH: \n\t`python %s --version.backwards %s --version.current %s --seed %s --tcp.port %s --http.port %s`' % (sys.argv[0], bwc_version, current_version, seed, tcp_port, http_port)))
        raise
