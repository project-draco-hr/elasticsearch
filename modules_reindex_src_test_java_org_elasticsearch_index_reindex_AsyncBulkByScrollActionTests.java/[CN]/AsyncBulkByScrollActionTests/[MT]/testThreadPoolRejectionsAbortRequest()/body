{
  testTask.rethrottle(1);
  threadPool.shutdown();
  threadPool=new TestThreadPool(getTestName()){
    @Override public ScheduledFuture<?> schedule(    TimeValue delay,    String name,    Runnable command){
      assertThat(delay.nanos(),greaterThan(0L));
      assertThat(delay.seconds(),lessThanOrEqualTo(10L));
      ((AbstractRunnable)command).onRejection(new EsRejectedExecutionException("test"));
      return null;
    }
  }
;
  InternalSearchHits hits=new InternalSearchHits(null,0,0);
  InternalSearchResponse searchResponse=new InternalSearchResponse(hits,null,null,null,false,false);
  new DummyAbstractAsyncBulkByScrollAction().onScrollResponse(timeValueNanos(System.nanoTime()),10,new SearchResponse(searchResponse,scrollId(),5,4,randomLong(),null));
  try {
    listener.get();
    fail("Expected a failure");
  }
 catch (  ExecutionException e) {
    assertThat(e.getMessage(),equalTo("EsRejectedExecutionException[test]"));
  }
  assertThat(client.scrollsCleared,contains(scrollId));
  assertEquals(timeValueMillis(0),testTask.getStatus().getThrottled());
}
