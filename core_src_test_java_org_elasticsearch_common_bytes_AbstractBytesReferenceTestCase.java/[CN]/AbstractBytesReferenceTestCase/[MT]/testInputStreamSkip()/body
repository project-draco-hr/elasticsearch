{
  int length=randomIntBetween(10,scaledRandomIntBetween(PAGE_SIZE * 2,PAGE_SIZE * 20));
  BytesReference pbr=newBytesReference(length);
  final int iters=randomIntBetween(5,50);
  for (int i=0; i < iters; i++) {
    try (StreamInput input=pbr.streamInput()){
      final int offset=randomIntBetween(0,length - 1);
      assertEquals(offset,input.skip(offset));
      assertEquals(pbr.get(offset),input.readByte());
      final int nextOffset=randomIntBetween(offset,length - 2);
      assertEquals(nextOffset - offset,input.skip(nextOffset - offset));
      assertEquals(pbr.get(nextOffset + 1),input.readByte());
      assertEquals(length - (nextOffset + 2),input.skip(Long.MAX_VALUE));
      assertEquals(0,input.skip(randomIntBetween(0,Integer.MAX_VALUE)));
    }
   }
}
