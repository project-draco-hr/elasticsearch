{
  int numDocs=randomIntBetween(1,10);
  Map<String,Object> requestContent=new HashMap<>();
  List<Map<String,Object>> docs=new ArrayList<>();
  List<Map<String,Object>> expectedDocs=new ArrayList<>();
  requestContent.put(Fields.DOCS,docs);
  for (int i=0; i < numDocs; i++) {
    Map<String,Object> doc=new HashMap<>();
    String index=randomAsciiOfLengthBetween(1,10);
    String type=randomAsciiOfLengthBetween(1,10);
    String id=randomAsciiOfLengthBetween(1,10);
    doc.put(INDEX.getFieldName(),index);
    doc.put(TYPE.getFieldName(),type);
    doc.put(ID.getFieldName(),id);
    String fieldName=randomAsciiOfLengthBetween(1,10);
    String fieldValue=randomAsciiOfLengthBetween(1,10);
    doc.put(Fields.SOURCE,Collections.singletonMap(fieldName,fieldValue));
    docs.add(doc);
    Map<String,Object> expectedDoc=new HashMap<>();
    expectedDoc.put(INDEX.getFieldName(),index);
    expectedDoc.put(TYPE.getFieldName(),type);
    expectedDoc.put(ID.getFieldName(),id);
    expectedDoc.put(Fields.SOURCE,Collections.singletonMap(fieldName,fieldValue));
    expectedDocs.add(expectedDoc);
  }
  SimulatePipelineRequest.Parsed actualRequest=SimulatePipelineRequest.parseWithPipelineId(SimulatePipelineRequest.SIMULATED_PIPELINE_ID,requestContent,false,store);
  assertThat(actualRequest.isVerbose(),equalTo(false));
  assertThat(actualRequest.getDocuments().size(),equalTo(numDocs));
  Iterator<Map<String,Object>> expectedDocsIterator=expectedDocs.iterator();
  for (  IngestDocument ingestDocument : actualRequest.getDocuments()) {
    Map<String,Object> expectedDocument=expectedDocsIterator.next();
    assertThat(ingestDocument.getSource(),equalTo(expectedDocument.get(Fields.SOURCE)));
    assertThat(ingestDocument.getMetadata(INDEX),equalTo(expectedDocument.get(INDEX.getFieldName())));
    assertThat(ingestDocument.getMetadata(TYPE),equalTo(expectedDocument.get(TYPE.getFieldName())));
    assertThat(ingestDocument.getMetadata(ID),equalTo(expectedDocument.get(ID.getFieldName())));
  }
  assertThat(actualRequest.getPipeline().getId(),equalTo(SimulatePipelineRequest.SIMULATED_PIPELINE_ID));
  assertThat(actualRequest.getPipeline().getDescription(),nullValue());
  assertThat(actualRequest.getPipeline().getProcessors().size(),equalTo(1));
}
