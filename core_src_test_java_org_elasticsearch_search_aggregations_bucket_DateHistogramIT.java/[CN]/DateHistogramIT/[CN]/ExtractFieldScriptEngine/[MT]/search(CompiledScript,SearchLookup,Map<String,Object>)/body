{
  return new SearchScript(){
    @Override public LeafSearchScript getLeafSearchScript(    LeafReaderContext context) throws IOException {
      final LeafSearchLookup leafLookup=lookup.getLeafSearchLookup(context);
      return new LeafSearchScript(){
        @Override public Object unwrap(        Object value){
          return null;
        }
        @Override public void setNextVar(        String name,        Object value){
        }
        @Override public Object run(){
          String fieldName=(String)compiledScript.compiled();
          return leafLookup.doc().get(fieldName);
        }
        @Override public void setScorer(        Scorer scorer){
        }
        @Override public void setSource(        Map<String,Object> source){
        }
        @Override public void setDocument(        int doc){
          if (leafLookup != null) {
            leafLookup.setDocument(doc);
          }
        }
        @Override public long runAsLong(){
          throw new UnsupportedOperationException();
        }
        @Override public float runAsFloat(){
          throw new UnsupportedOperationException();
        }
        @Override public double runAsDouble(){
          throw new UnsupportedOperationException();
        }
      }
;
    }
    @Override public boolean needsScores(){
      return false;
    }
  }
;
}
