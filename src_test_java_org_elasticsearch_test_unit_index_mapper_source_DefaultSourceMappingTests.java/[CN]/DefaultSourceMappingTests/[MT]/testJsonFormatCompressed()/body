{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_source").field("format","json").field("compress",true).endObject().endObject().endObject().string();
  DocumentMapper documentMapper=MapperTests.newParser().parse(mapping);
  ParsedDocument doc=documentMapper.parse("type","1",XContentFactory.jsonBuilder().startObject().field("field","value").endObject().copiedBytes());
  assertThat(CompressorFactory.isCompressed(doc.source(),doc.sourceOffset(),doc.sourceLength()),equalTo(true));
  byte[] uncompressed=CompressorFactory.uncompressIfNeeded(new BytesHolder(doc.source(),doc.sourceOffset(),doc.sourceLength())).copyBytes();
  assertThat(XContentFactory.xContentType(uncompressed),equalTo(XContentType.JSON));
  documentMapper=MapperTests.newParser().parse(mapping);
  doc=documentMapper.parse("type","1",XContentFactory.smileBuilder().startObject().field("field","value").endObject().copiedBytes());
  assertThat(CompressorFactory.isCompressed(doc.source(),doc.sourceOffset(),doc.sourceLength()),equalTo(true));
  uncompressed=CompressorFactory.uncompressIfNeeded(new BytesHolder(doc.source(),doc.sourceOffset(),doc.sourceLength())).copyBytes();
  assertThat(XContentFactory.xContentType(uncompressed),equalTo(XContentType.JSON));
}
