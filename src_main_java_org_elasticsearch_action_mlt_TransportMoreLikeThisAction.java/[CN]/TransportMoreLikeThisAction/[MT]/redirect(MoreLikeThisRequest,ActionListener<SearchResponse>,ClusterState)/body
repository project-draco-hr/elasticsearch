{
  final String concreteIndex=clusterState.metaData().concreteIndex(request.index());
  ShardIterator shardIterator=clusterService.operationRouting().getShards(clusterState,concreteIndex,request.type(),request.id(),request.routing(),null);
  ShardRouting shardRouting=shardIterator.firstOrNull();
  if (shardRouting == null) {
    throw new ElasticSearchException("No shards for index " + request.index());
  }
  String nodeId=shardRouting.currentNodeId();
  DiscoveryNode discoveryNode=clusterState.nodes().get(nodeId);
  transportService.sendRequest(discoveryNode,MoreLikeThisAction.NAME,request,new TransportResponseHandler<SearchResponse>(){
    @Override public SearchResponse newInstance(){
      return new SearchResponse();
    }
    @Override public void handleResponse(    SearchResponse response){
      listener.onResponse(response);
    }
    @Override public void handleException(    TransportException exp){
      listener.onFailure(exp);
    }
    @Override public String executor(){
      return ThreadPool.Names.SAME;
    }
  }
);
}
