{
  request.beforeStart();
  int localOperations=0;
  for (  final ShardIterator shardIt : shardsIts) {
    final ShardRouting shard=shardIt.firstOrNull();
    if (shard != null) {
      if (shard.currentNodeId().equals(nodes.localNodeId())) {
        localOperations++;
      }
 else {
        performFirstPhase(shardIt);
      }
    }
 else {
      onFirstPhaseResult(null,shardIt,null);
    }
  }
  if (localOperations > 0) {
    if (request.getOperationThreading() == SearchOperationThreading.SINGLE_THREAD) {
      request.beforeLocalFork();
      threadPool.executor(ThreadPool.Names.SEARCH).execute(new Runnable(){
        @Override public void run(){
          for (          final ShardIterator shardIt : shardsIts) {
            final ShardRouting shard=shardIt.firstOrNull();
            if (shard != null) {
              if (shard.currentNodeId().equals(nodes.localNodeId())) {
                performFirstPhase(shardIt);
              }
            }
          }
        }
      }
);
    }
 else {
      boolean localAsync=request.getOperationThreading() == SearchOperationThreading.THREAD_PER_SHARD;
      if (localAsync) {
        request.beforeLocalFork();
      }
      for (      final ShardIterator shardIt : shardsIts) {
        final ShardRouting shard=shardIt.firstOrNull();
        if (shard != null) {
          if (shard.currentNodeId().equals(nodes.localNodeId())) {
            if (localAsync) {
              threadPool.executor(ThreadPool.Names.SEARCH).execute(new Runnable(){
                @Override public void run(){
                  performFirstPhase(shardIt);
                }
              }
);
            }
 else {
              performFirstPhase(shardIt);
            }
          }
        }
      }
    }
  }
}
