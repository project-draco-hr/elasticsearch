{
  SearchShardTarget shardTarget=new SearchShardTarget(nodeId,shardIt.shardId().getIndex(),shardIt.shardId().getId());
  addShardFailure(shardIndex,shardTarget,t);
  if (totalOps.incrementAndGet() == expectedTotalOps) {
    if (logger.isDebugEnabled()) {
      if (t != null && !TransportActions.isShardNotAvailableException(t)) {
        if (shard != null) {
          logger.debug(shard.shortSummary() + ": Failed to execute [" + request+ "]",t);
        }
 else {
          logger.debug(shardIt.shardId() + ": Failed to execute [" + request+ "]",t);
        }
      }
    }
    if (successulOps.get() == 0) {
      if (logger.isDebugEnabled()) {
        logger.debug("All shards failed for phase: [{}]",firstPhaseName(),t);
      }
      listener.onFailure(new SearchPhaseExecutionException(firstPhaseName(),"all shards failed",buildShardFailures()));
    }
 else {
      try {
        innerMoveToSecondPhase();
      }
 catch (      Throwable e) {
        listener.onFailure(new ReduceSearchPhaseException(firstPhaseName(),"",e,buildShardFailures()));
      }
    }
  }
 else {
    ShardRouting nextShard=shardIt.nextOrNull();
    final boolean lastShard=nextShard == null;
    if (logger.isTraceEnabled() && t != null) {
      logger.trace(executionFailureMsg(shard,shardIt,request,lastShard),t);
    }
    if (!lastShard) {
      performFirstPhase(shardIndex,shardIt,nextShard);
    }
 else {
      if (logger.isDebugEnabled() && !logger.isTraceEnabled()) {
        if (t != null && !TransportActions.isShardNotAvailableException(t)) {
          logger.debug(executionFailureMsg(shard,shardIt,request,lastShard),t);
        }
      }
    }
  }
}
