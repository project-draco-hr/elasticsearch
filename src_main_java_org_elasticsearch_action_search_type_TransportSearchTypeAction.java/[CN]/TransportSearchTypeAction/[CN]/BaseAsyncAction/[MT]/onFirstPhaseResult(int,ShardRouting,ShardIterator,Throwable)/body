{
  if (totalOps.incrementAndGet() == expectedTotalOps) {
    if (logger.isDebugEnabled()) {
      if (t != null) {
        if (shard != null) {
          logger.debug(shard.shortSummary() + ": Failed to execute [" + request+ "]",t);
        }
 else {
          logger.debug(shardIt.shardId() + ": Failed to execute [" + request+ "]",t);
        }
      }
    }
    if (t == null) {
      addShardFailure(shardRequestId,new ShardSearchFailure("No active shards",new SearchShardTarget(null,shardIt.shardId().index().name(),shardIt.shardId().id()),RestStatus.SERVICE_UNAVAILABLE));
    }
 else {
      addShardFailure(shardRequestId,new ShardSearchFailure(t));
    }
    if (successulOps.get() == 0) {
      listener.onFailure(new SearchPhaseExecutionException(firstPhaseName(),"total failure",buildShardFailures()));
    }
 else {
      try {
        innerMoveToSecondPhase();
      }
 catch (      Throwable e) {
        listener.onFailure(new ReduceSearchPhaseException(firstPhaseName(),"",e,buildShardFailures()));
      }
    }
  }
 else {
    ShardRouting nextShard=shardIt.nextOrNull();
    if (nextShard != null) {
      if (logger.isTraceEnabled()) {
        if (t != null) {
          if (shard != null) {
            logger.trace(shard.shortSummary() + ": Failed to execute [" + request+ "]",t);
          }
 else {
            logger.trace(shardIt.shardId() + ": Failed to execute [" + request+ "]",t);
          }
        }
      }
      performFirstPhase(shardRequestId,shardIt,nextShard);
    }
 else {
      if (logger.isDebugEnabled()) {
        if (t != null) {
          if (shard != null) {
            logger.debug(shard.shortSummary() + ": Failed to execute [" + request+ "]",t);
          }
 else {
            logger.debug(shardIt.shardId() + ": Failed to execute [" + request+ "]",t);
          }
        }
      }
      if (t == null) {
        addShardFailure(shardRequestId,new ShardSearchFailure("No active shards",new SearchShardTarget(null,shardIt.shardId().index().name(),shardIt.shardId().id()),RestStatus.SERVICE_UNAVAILABLE));
      }
 else {
        addShardFailure(shardRequestId,new ShardSearchFailure(t));
      }
    }
  }
}
