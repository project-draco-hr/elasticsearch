{
  SearchResponse response=client().prepareSearch("idx").addAggregation(dateHistogram("histo").field("dates").interval(DateHistogramInterval.MONTH).subAggregation(derivative("deriv").setBucketsPaths("_count"))).execute().actionGet();
  assertSearchResponse(response);
  InternalHistogram deriv=response.getAggregations().get("histo");
  assertThat(deriv,notNullValue());
  assertThat(deriv.getName(),equalTo("histo"));
  List<? extends Bucket> buckets=deriv.getBuckets();
  assertThat(buckets.size(),equalTo(4));
  DateTime key=new DateTime(2012,1,1,0,0,DateTimeZone.UTC);
  Histogram.Bucket bucket=buckets.get(0);
  assertThat(bucket,notNullValue());
  assertThat((DateTime)bucket.getKey(),equalTo(key));
  assertThat(bucket.getDocCount(),equalTo(1l));
  assertThat(bucket.getAggregations().asList().isEmpty(),is(true));
  SimpleValue docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,nullValue());
  key=new DateTime(2012,2,1,0,0,DateTimeZone.UTC);
  bucket=buckets.get(1);
  assertThat(bucket,notNullValue());
  assertThat((DateTime)bucket.getKey(),equalTo(key));
  assertThat(bucket.getDocCount(),equalTo(3l));
  assertThat(bucket.getAggregations().asList().isEmpty(),is(false));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(2.0));
  key=new DateTime(2012,3,1,0,0,DateTimeZone.UTC);
  bucket=buckets.get(2);
  assertThat(bucket,notNullValue());
  assertThat((DateTime)bucket.getKey(),equalTo(key));
  assertThat(bucket.getDocCount(),equalTo(5l));
  assertThat(bucket.getAggregations().asList().isEmpty(),is(false));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(2.0));
  key=new DateTime(2012,4,1,0,0,DateTimeZone.UTC);
  bucket=buckets.get(3);
  assertThat(bucket,notNullValue());
  assertThat((DateTime)bucket.getKey(),equalTo(key));
  assertThat(bucket.getDocCount(),equalTo(3l));
  assertThat(bucket.getAggregations().asList().isEmpty(),is(false));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(-2.0));
}
