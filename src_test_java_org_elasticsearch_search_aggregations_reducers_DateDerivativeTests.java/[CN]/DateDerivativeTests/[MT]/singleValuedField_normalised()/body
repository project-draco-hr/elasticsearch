{
  SearchResponse response=client().prepareSearch("idx").addAggregation(dateHistogram("histo").field("date").interval(DateHistogramInterval.MONTH).minDocCount(0).subAggregation(derivative("deriv").setBucketsPaths("_count").unit(DateHistogramInterval.DAY))).execute().actionGet();
  assertSearchResponse(response);
  InternalHistogram deriv=response.getAggregations().get("histo");
  assertThat(deriv,notNullValue());
  assertThat(deriv.getName(),equalTo("histo"));
  List<? extends Bucket> buckets=deriv.getBuckets();
  assertThat(buckets.size(),equalTo(3));
  DateTime key=new DateTime(2012,1,1,0,0,DateTimeZone.UTC);
  Histogram.Bucket bucket=buckets.get(0);
  assertThat(bucket,notNullValue());
  assertThat((DateTime)bucket.getKey(),equalTo(key));
  assertThat(bucket.getDocCount(),equalTo(1l));
  Derivative docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,nullValue());
  key=new DateTime(2012,2,1,0,0,DateTimeZone.UTC);
  bucket=buckets.get(1);
  assertThat(bucket,notNullValue());
  assertThat((DateTime)bucket.getKey(),equalTo(key));
  assertThat(bucket.getDocCount(),equalTo(2l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),closeTo(1d,0.00001));
  assertThat(docCountDeriv.normalizedValue(),closeTo(1d / 31d,0.00001));
  key=new DateTime(2012,3,1,0,0,DateTimeZone.UTC);
  bucket=buckets.get(2);
  assertThat(bucket,notNullValue());
  assertThat((DateTime)bucket.getKey(),equalTo(key));
  assertThat(bucket.getDocCount(),equalTo(3l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),closeTo(1d,0.00001));
  assertThat(docCountDeriv.normalizedValue(),closeTo(1d / 29d,0.00001));
}
