{
  if (realWordErrorLikelihood != null) {
    builder.field("real_word_error_likelihood",realWordErrorLikelihood);
  }
  if (confidence != null) {
    builder.field("confidence",confidence);
  }
  if (separator != null) {
    builder.field("separator",separator);
  }
  if (maxErrors != null) {
    builder.field("max_errors",maxErrors);
  }
  if (gramSize != null) {
    builder.field("gram_size",gramSize);
  }
  if (forceUnigrams != null) {
    builder.field("force_unigrams",forceUnigrams);
  }
  if (!generators.isEmpty()) {
    Set<Entry<String,List<CandidateGenerator>>> entrySet=generators.entrySet();
    for (    Entry<String,List<CandidateGenerator>> entry : entrySet) {
      builder.startArray(entry.getKey());
      for (      CandidateGenerator generator : entry.getValue()) {
        generator.toXContent(builder,params);
      }
      builder.endArray();
    }
  }
  if (model != null) {
    builder.startObject(model.type);
    model.toXContent(builder,params);
    builder.endObject();
  }
  return builder;
}
