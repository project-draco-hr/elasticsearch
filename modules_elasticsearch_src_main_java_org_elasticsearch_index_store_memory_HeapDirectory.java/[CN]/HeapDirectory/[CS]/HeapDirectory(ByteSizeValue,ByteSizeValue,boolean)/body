{
  disableCache=cacheSize.bytes() == 0;
  if (!disableCache && cacheSize.bytes() < bufferSize.bytes()) {
    throw new IllegalArgumentException("Cache size [" + cacheSize + "] is smaller than buffer size ["+ bufferSize+ "]");
  }
  this.bufferSize=bufferSize;
  this.bufferSizeInBytes=(int)bufferSize.bytes();
  int numberOfCacheEntries=(int)(cacheSize.bytes() / bufferSize.bytes());
  this.cache=disableCache ? null : new ArrayBlockingQueue<byte[]>(numberOfCacheEntries);
  this.cacheSize=disableCache ? new ByteSizeValue(0,ByteSizeUnit.BYTES) : new ByteSizeValue(numberOfCacheEntries * bufferSize.bytes(),ByteSizeUnit.BYTES);
  setLockFactory(new SingleInstanceLockFactory());
  if (!disableCache && warmCache) {
    for (int i=0; i < numberOfCacheEntries; i++) {
      cache.add(createBuffer());
    }
  }
}
