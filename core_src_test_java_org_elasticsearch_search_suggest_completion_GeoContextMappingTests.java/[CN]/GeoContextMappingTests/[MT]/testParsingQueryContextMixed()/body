{
  XContentBuilder builder=jsonBuilder().startArray().startObject().startObject("context").field("lat",23.654242).field("lon",90.047153).endObject().field("boost",10).array("neighbours",1,2).endObject().startObject().field("lat",22.337374).field("lon",92.112583).endObject().endArray();
  XContentParser parser=XContentFactory.xContent(XContentType.JSON).createParser(builder.bytes());
  GeoContextMapping mapping=ContextBuilder.geo("geo").build();
  List<ContextMapping.InternalQueryContext> internalQueryContexts=mapping.parseQueryContext(parser);
  assertThat(internalQueryContexts.size(),equalTo(1 + 1 + 8+ 1+ 8+ 1+ 8));
  Collection<String> firstLocations=new ArrayList<>();
  firstLocations.add("wh0n94");
  firstLocations.add("w");
  addNeighbors("w",1,firstLocations);
  firstLocations.add("wh");
  addNeighbors("wh",2,firstLocations);
  Collection<String> secondLocations=new ArrayList<>();
  secondLocations.add("w5cx04");
  addNeighbors("w5cx04",6,secondLocations);
  for (  ContextMapping.InternalQueryContext internalQueryContext : internalQueryContexts) {
    if (firstLocations.contains(internalQueryContext.context)) {
      assertThat(internalQueryContext.boost,equalTo(10));
    }
 else     if (secondLocations.contains(internalQueryContext.context)) {
      assertThat(internalQueryContext.boost,equalTo(1));
    }
 else {
      fail(internalQueryContext.context + " was not expected");
    }
    assertThat(internalQueryContext.isPrefix,equalTo(internalQueryContext.context.length() < GeoContextMapping.DEFAULT_PRECISION));
  }
}
