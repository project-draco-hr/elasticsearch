{
  ValueType valueType=this.valueType != null ? this.valueType : targetValueType;
  if (field == null) {
    if (script == null) {
      ValuesSourceConfig<VS> config=new ValuesSourceConfig(ValuesSourceType.ANY);
      config.format=resolveFormat(null,valueType);
      return config;
    }
    ValuesSourceType valuesSourceType=valueType != null ? valueType.getValuesSourceType() : this.valuesSourceType;
    if (valuesSourceType == null || valuesSourceType == ValuesSourceType.ANY) {
      valuesSourceType=ValuesSourceType.BYTES;
    }
    ValuesSourceConfig<VS> config=new ValuesSourceConfig<VS>(valuesSourceType);
    config.missing=missing;
    config.format=resolveFormat(format,valueType);
    config.script=createScript(script,context.searchContext());
    config.scriptValueType=valueType;
    return config;
  }
  MappedFieldType fieldType=context.searchContext().smartNameFieldTypeFromAnyType(field);
  if (fieldType == null) {
    ValuesSourceType valuesSourceType=valueType != null ? valueType.getValuesSourceType() : this.valuesSourceType;
    ValuesSourceConfig<VS> config=new ValuesSourceConfig<>(valuesSourceType);
    config.missing=missing;
    config.format=resolveFormat(format,valueType);
    config.unmapped=true;
    if (valueType != null) {
      config.scriptValueType=valueType;
    }
    return config;
  }
  IndexFieldData<?> indexFieldData=context.searchContext().fieldData().getForField(fieldType);
  ValuesSourceConfig config;
  if (valuesSourceType == ValuesSourceType.ANY) {
    if (indexFieldData instanceof IndexNumericFieldData) {
      config=new ValuesSourceConfig<>(ValuesSourceType.NUMERIC);
    }
 else     if (indexFieldData instanceof IndexGeoPointFieldData) {
      config=new ValuesSourceConfig<>(ValuesSourceType.GEOPOINT);
    }
 else {
      config=new ValuesSourceConfig<>(ValuesSourceType.BYTES);
    }
  }
 else {
    config=new ValuesSourceConfig(valuesSourceType);
  }
  config.fieldContext=new FieldContext(field,indexFieldData,fieldType);
  config.missing=missing;
  config.script=createScript(script,context.searchContext());
  config.format=resolveFormat(format,this.timeZone,fieldType);
  return config;
}
