{
  final String container=getContainerName().concat("-testremove");
  final AzureStorageService storageService=internalCluster().getInstance(AzureStorageService.class);
  assertBusy(new Runnable(){
    @Override public void run(){
      try {
        storageService.createContainer(null,LocationMode.PRIMARY_ONLY,container);
        logger.debug(" -> container created...");
      }
 catch (      URISyntaxException e) {
        fail();
      }
catch (      StorageException e) {
        logger.debug(" -> container is being removed. Let's wait a bit...");
        fail();
      }
    }
  }
,30,TimeUnit.SECONDS);
  storageService.removeContainer(null,LocationMode.PRIMARY_ONLY,container);
  ClusterAdminClient client=client().admin().cluster();
  logger.info("-->  creating azure repository while container is being removed");
  try {
    client.preparePutRepository("test-repo").setType("azure").setSettings(Settings.settingsBuilder().put(Repository.CONTAINER,container)).get();
    fail("we should get a RepositoryVerificationException");
  }
 catch (  RepositoryVerificationException e) {
  }
}
