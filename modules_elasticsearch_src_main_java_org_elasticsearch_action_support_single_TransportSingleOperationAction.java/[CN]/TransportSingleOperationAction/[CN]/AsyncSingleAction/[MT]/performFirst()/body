{
  while (shardsIt.hasNext()) {
    final ShardRouting shard=shardsIt.next();
    if (!shard.active()) {
      continue;
    }
    if (shard.currentNodeId().equals(nodes.localNodeId())) {
      if (request.threadedOperation()) {
        threadPool.execute(new Runnable(){
          @Override public void run(){
            try {
              Response response=shardOperation(request,shard.id());
              listener.onResponse(response);
            }
 catch (            Exception e) {
              onFailure(shard,e);
            }
          }
        }
);
        return;
      }
 else {
        try {
          final Response response=shardOperation(request,shard.id());
          if (request.listenerThreaded()) {
            threadPool.execute(new Runnable(){
              @Override public void run(){
                listener.onResponse(response);
              }
            }
);
          }
 else {
            listener.onResponse(response);
          }
          return;
        }
 catch (        Exception e) {
          onFailure(shard,e);
        }
      }
    }
  }
  if (!shardsIt.hasNext()) {
    shardsIt=shards.reset().iterator();
    perform(null);
  }
}
