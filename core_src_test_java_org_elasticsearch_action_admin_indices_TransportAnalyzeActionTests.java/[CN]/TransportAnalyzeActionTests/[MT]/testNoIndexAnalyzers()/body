{
  AnalyzeRequest request=new AnalyzeRequest();
  request.analyzer("standard");
  request.text("the quick brown fox");
  AnalyzeResponse analyze=TransportAnalyzeAction.analyze(request,AllFieldMapper.NAME,null,null,registry,environment);
  List<AnalyzeResponse.AnalyzeToken> tokens=analyze.getTokens();
  assertEquals(4,tokens.size());
  request.analyzer(null);
  request.tokenizer("whitespace");
  request.addTokenFilter("lowercase");
  request.addTokenFilter("word_delimiter");
  request.text("the qu1ck brown fox");
  analyze=TransportAnalyzeAction.analyze(request,AllFieldMapper.NAME,null,randomBoolean() ? indexAnalyzers : null,registry,environment);
  tokens=analyze.getTokens();
  assertEquals(6,tokens.size());
  assertEquals("qu",tokens.get(1).getTerm());
  assertEquals("1",tokens.get(2).getTerm());
  assertEquals("ck",tokens.get(3).getTerm());
  request.analyzer(null);
  request.tokenizer("whitespace");
  request.addCharFilter("html_strip");
  request.addTokenFilter("lowercase");
  request.addTokenFilter("word_delimiter");
  request.text("<p>the qu1ck brown fox</p>");
  analyze=TransportAnalyzeAction.analyze(request,AllFieldMapper.NAME,null,randomBoolean() ? indexAnalyzers : null,registry,environment);
  tokens=analyze.getTokens();
  assertEquals(6,tokens.size());
  assertEquals("the",tokens.get(0).getTerm());
  assertEquals("qu",tokens.get(1).getTerm());
  assertEquals("1",tokens.get(2).getTerm());
  assertEquals("ck",tokens.get(3).getTerm());
  assertEquals("brown",tokens.get(4).getTerm());
  assertEquals("fox",tokens.get(5).getTerm());
}
