{
  boolean notGlobal=randomBoolean();
  try {
    AnalyzeRequest request=new AnalyzeRequest();
    request.analyzer("foobar");
    request.text("the qu1ck brown fox");
    TransportAnalyzeAction.analyze(request,AllFieldMapper.NAME,null,notGlobal ? analysisService : null,registry,environment);
    fail("no such analyzer");
  }
 catch (  IllegalArgumentException e) {
    if (notGlobal) {
      assertEquals(e.getMessage(),"failed to find analyzer [foobar]");
    }
 else {
      assertEquals(e.getMessage(),"failed to find global analyzer [foobar]");
    }
  }
  try {
    AnalyzeRequest request=new AnalyzeRequest();
    request.tokenizer("foobar");
    request.text("the qu1ck brown fox");
    TransportAnalyzeAction.analyze(request,AllFieldMapper.NAME,null,notGlobal ? analysisService : null,registry,environment);
    fail("no such analyzer");
  }
 catch (  IllegalArgumentException e) {
    if (notGlobal) {
      assertEquals(e.getMessage(),"failed to find tokenizer under [foobar]");
    }
 else {
      assertEquals(e.getMessage(),"failed to find global tokenizer under [foobar]");
    }
  }
  try {
    AnalyzeRequest request=new AnalyzeRequest();
    request.tokenizer("whitespace");
    request.tokenFilters("foobar");
    request.text("the qu1ck brown fox");
    TransportAnalyzeAction.analyze(request,AllFieldMapper.NAME,null,notGlobal ? analysisService : null,registry,environment);
    fail("no such analyzer");
  }
 catch (  IllegalArgumentException e) {
    if (notGlobal) {
      assertEquals(e.getMessage(),"failed to find token filter under [foobar]");
    }
 else {
      assertEquals(e.getMessage(),"failed to find global token filter under [foobar]");
    }
  }
  try {
    AnalyzeRequest request=new AnalyzeRequest();
    request.tokenizer("whitespace");
    request.tokenFilters("lowercase");
    request.charFilters("foobar");
    request.text("the qu1ck brown fox");
    TransportAnalyzeAction.analyze(request,AllFieldMapper.NAME,null,notGlobal ? analysisService : null,registry,environment);
    fail("no such analyzer");
  }
 catch (  IllegalArgumentException e) {
    if (notGlobal) {
      assertEquals(e.getMessage(),"failed to find char filter under [foobar]");
    }
 else {
      assertEquals(e.getMessage(),"failed to find global char filter under [foobar]");
    }
  }
}
