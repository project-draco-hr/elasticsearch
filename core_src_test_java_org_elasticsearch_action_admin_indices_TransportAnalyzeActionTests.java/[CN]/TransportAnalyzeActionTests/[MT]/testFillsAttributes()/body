{
  AnalyzeRequest request=new AnalyzeRequest();
  request.analyzer("standard");
  request.text("the 1 brown fox");
  AnalyzeResponse analyze=TransportAnalyzeAction.analyze(request,AllFieldMapper.NAME,null,null,registry,environment);
  List<AnalyzeResponse.AnalyzeToken> tokens=analyze.getTokens();
  assertEquals(4,tokens.size());
  assertEquals("the",tokens.get(0).getTerm());
  assertEquals(0,tokens.get(0).getStartOffset());
  assertEquals(3,tokens.get(0).getEndOffset());
  assertEquals(0,tokens.get(0).getPosition());
  assertEquals("<ALPHANUM>",tokens.get(0).getType());
  assertEquals("1",tokens.get(1).getTerm());
  assertEquals(4,tokens.get(1).getStartOffset());
  assertEquals(5,tokens.get(1).getEndOffset());
  assertEquals(1,tokens.get(1).getPosition());
  assertEquals("<NUM>",tokens.get(1).getType());
  assertEquals("brown",tokens.get(2).getTerm());
  assertEquals(6,tokens.get(2).getStartOffset());
  assertEquals(11,tokens.get(2).getEndOffset());
  assertEquals(2,tokens.get(2).getPosition());
  assertEquals("<ALPHANUM>",tokens.get(2).getType());
  assertEquals("fox",tokens.get(3).getTerm());
  assertEquals(12,tokens.get(3).getStartOffset());
  assertEquals(15,tokens.get(3).getEndOffset());
  assertEquals(3,tokens.get(3).getPosition());
  assertEquals("<ALPHANUM>",tokens.get(3).getType());
}
