{
  ThreadPool threadPool=new ThreadPool(Settings.builder().put("name","_name").put(PipelineExecutionService.additionalSettings(Settings.EMPTY)).build());
  PipelineStore store=mock(PipelineStore.class);
  Processor processor=new Processor(){
    @Override public void execute(    IngestDocument ingestDocument){
      ingestDocument.setPropertyValue("field2","value2");
    }
    @Override public String getType(){
      return null;
    }
  }
;
  when(store.get("_id")).thenReturn(new Pipeline("_id","_description",Collections.singletonList(processor)));
  executionService=new PipelineExecutionService(store,threadPool);
  filter=new IngestActionFilter(Settings.EMPTY,executionService);
  BulkRequest bulkRequest=new BulkRequest();
  bulkRequest.putHeader(IngestPlugin.PIPELINE_ID_PARAM,"_id");
  int numRequest=scaledRandomIntBetween(8,64);
  for (int i=0; i < numRequest; i++) {
    if (rarely()) {
      ActionRequest request;
      if (randomBoolean()) {
        request=new DeleteRequest("_index","_type","_id");
      }
 else {
        request=new UpdateRequest("_index","_type","_id");
      }
      bulkRequest.add(request);
    }
 else {
      IndexRequest indexRequest=new IndexRequest("_index","_type","_id");
      indexRequest.source("field1","value1");
      bulkRequest.add(indexRequest);
    }
  }
  ActionListener actionListener=mock(ActionListener.class);
  ActionFilterChain actionFilterChain=mock(ActionFilterChain.class);
  filter.apply("_action",bulkRequest,actionListener,actionFilterChain);
  assertBusy(new Runnable(){
    @Override public void run(){
      verify(actionFilterChain).proceed("_action",bulkRequest,actionListener);
      verifyZeroInteractions(actionListener);
      int assertedRequests=0;
      for (      ActionRequest actionRequest : bulkRequest.requests()) {
        if (actionRequest instanceof IndexRequest) {
          IndexRequest indexRequest=(IndexRequest)actionRequest;
          assertThat(indexRequest.sourceAsMap().size(),equalTo(2));
          assertThat(indexRequest.sourceAsMap().get("field1"),equalTo("value1"));
          assertThat(indexRequest.sourceAsMap().get("field2"),equalTo("value2"));
        }
        assertedRequests++;
      }
      assertThat(assertedRequests,equalTo(numRequest));
    }
  }
);
  threadPool.shutdown();
}
