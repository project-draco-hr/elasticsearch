{
  List<Automaton> subs=new ArrayList<>();
  FiniteStringsIterator finiteStrings=new FiniteStringsIterator(automaton);
  for (IntsRef string; (string=finiteStrings.next()) != null; ) {
    if (string.length <= nonFuzzyPrefix || string.length < minFuzzyLength) {
      subs.add(Automata.makeString(string.ints,string.offset,string.length));
    }
 else {
      int ints[]=new int[string.length - nonFuzzyPrefix];
      System.arraycopy(string.ints,string.offset + nonFuzzyPrefix,ints,0,ints.length);
      LevenshteinAutomata lev=new LevenshteinAutomata(ints,unicodeAware ? Character.MAX_CODE_POINT : 255,transpositions);
      subs.add(lev.toAutomaton(maxEdits,UnicodeUtil.newString(string.ints,string.offset,nonFuzzyPrefix)));
    }
  }
  if (subs.isEmpty()) {
    return Automata.makeEmpty();
  }
 else   if (subs.size() == 1) {
    return subs.get(0);
  }
 else {
    Automaton a=Operations.union(subs);
    return Operations.determinize(a,DEFAULT_MAX_DETERMINIZED_STATES);
  }
}
