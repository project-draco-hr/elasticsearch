{
  fillSingleValueAllSet();
  IndexFieldData indexFieldData=getForField("value");
  AtomicReaderContext readerContext=refreshReader();
  AtomicFieldData fieldData=indexFieldData.load(readerContext);
  assertThat(fieldData.ramBytesUsed(),greaterThan(0l));
  SortedBinaryDocValues bytesValues=fieldData.getBytesValues();
  bytesValues.setDocument(0);
  assertThat(bytesValues.count(),equalTo(1));
  assertThat(bytesValues.valueAt(0),equalTo(new BytesRef(two())));
  bytesValues.setDocument(1);
  assertThat(bytesValues.count(),equalTo(1));
  assertThat(bytesValues.valueAt(0),equalTo(new BytesRef(one())));
  bytesValues.setDocument(2);
  assertThat(bytesValues.count(),equalTo(1));
  assertThat(bytesValues.valueAt(0),equalTo(new BytesRef(three())));
  assertValues(bytesValues,0,two());
  assertValues(bytesValues,1,one());
  assertValues(bytesValues,2,three());
  IndexSearcher searcher=new IndexSearcher(readerContext.reader());
  TopFieldDocs topDocs;
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null,MultiValueMode.MIN))));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(1));
  assertThat(toString(((FieldDoc)topDocs.scoreDocs[0]).fields[0]),equalTo(one()));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(0));
  assertThat(toString(((FieldDoc)topDocs.scoreDocs[1]).fields[0]),equalTo(two()));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(2));
  assertThat(toString(((FieldDoc)topDocs.scoreDocs[2]).fields[0]),equalTo(three()));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null,MultiValueMode.MAX),true)));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(1));
}
