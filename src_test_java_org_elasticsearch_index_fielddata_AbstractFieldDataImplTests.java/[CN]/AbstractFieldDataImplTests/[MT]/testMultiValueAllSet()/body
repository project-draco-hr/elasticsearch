{
  fillMultiValueAllSet();
  IndexFieldData indexFieldData=getForField("value");
  AtomicFieldData fieldData=indexFieldData.load(refreshReader());
  assertThat(fieldData.ramBytesUsed(),greaterThanOrEqualTo(minRamBytesUsed()));
  SortedBinaryDocValues bytesValues=fieldData.getBytesValues();
  assertValues(bytesValues,0,two(),four());
  assertValues(bytesValues,1,one());
  assertValues(bytesValues,2,three());
  IndexSearcher searcher=new IndexSearcher(DirectoryReader.open(writer,true));
  TopFieldDocs topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null,MultiValueMode.MIN,null))));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs.length,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(1));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(2));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null,MultiValueMode.MAX,null),true)));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs.length,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(1));
}
