{
  fillAllMissing();
  IndexFieldData indexFieldData=getForField("value");
  AtomicFieldData fieldData=indexFieldData.load(refreshReader());
  assertThat(fieldData.getMemorySizeInBytes(),greaterThanOrEqualTo(0l));
  assertThat(fieldData.getNumDocs(),equalTo(3));
  BytesValues bytesValues=fieldData.getBytesValues();
  assertThat(bytesValues.isMultiValued(),equalTo(false));
  assertThat(bytesValues.hasValue(0),equalTo(false));
  assertThat(bytesValues.hasValue(1),equalTo(false));
  assertThat(bytesValues.hasValue(2),equalTo(false));
  assertThat(bytesValues.getValue(0),equalTo(new BytesRef()));
  assertThat(bytesValues.getValue(1),equalTo(new BytesRef()));
  assertThat(bytesValues.getValue(2),equalTo(new BytesRef()));
  assertValues(bytesValues,0,Strings.EMPTY_ARRAY);
  assertValues(bytesValues,1,Strings.EMPTY_ARRAY);
  assertValues(bytesValues,2,Strings.EMPTY_ARRAY);
  BytesValues hashedBytesValues=fieldData.getBytesValues();
  assertThat(hashedBytesValues.hasValue(0),equalTo(false));
  assertThat(hashedBytesValues.hasValue(1),equalTo(false));
  assertThat(hashedBytesValues.hasValue(2),equalTo(false));
  assertThat(hashedBytesValues.getValue(0),equalTo(new BytesRef()));
  assertThat(hashedBytesValues.getValue(1),equalTo(new BytesRef()));
  assertThat(hashedBytesValues.getValue(2),equalTo(new BytesRef()));
  assertValues(hashedBytesValues,0,Strings.EMPTY_ARRAY);
  assertValues(hashedBytesValues,1,Strings.EMPTY_ARRAY);
  assertValues(hashedBytesValues,2,Strings.EMPTY_ARRAY);
}
