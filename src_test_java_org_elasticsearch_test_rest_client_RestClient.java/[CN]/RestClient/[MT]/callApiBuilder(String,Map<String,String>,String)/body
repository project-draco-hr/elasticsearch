{
  RestApi restApi=restApi(apiName);
  HttpRequestBuilder httpRequestBuilder=httpRequestBuilder();
  if (Strings.hasLength(body)) {
    if (!restApi.isBodySupported()) {
      throw new IllegalArgumentException("body is not supported by [" + restApi.getName() + "] api");
    }
    httpRequestBuilder.body(body);
  }
 else {
    if (restApi.isBodyRequired()) {
      throw new IllegalArgumentException("body is required by [" + restApi.getName() + "] api");
    }
  }
  Map<String,String> pathParts=Maps.newHashMap();
  if (params != null) {
    for (    Map.Entry<String,String> entry : params.entrySet()) {
      if (restApi.getPathParts().contains(entry.getKey())) {
        pathParts.put(entry.getKey(),entry.getValue());
      }
 else {
        if (!restApi.getParams().contains(entry.getKey())) {
          throw new IllegalArgumentException("param [" + entry.getKey() + "] not supported in ["+ restApi.getName()+ "] api");
        }
        httpRequestBuilder.addParam(entry.getKey(),entry.getValue());
      }
    }
  }
  return httpRequestBuilder.method(RandomizedTest.randomFrom(restApi.getSupportedMethods(pathParts.keySet()))).path(RandomizedTest.randomFrom(restApi.getFinalPaths(pathParts)));
}
