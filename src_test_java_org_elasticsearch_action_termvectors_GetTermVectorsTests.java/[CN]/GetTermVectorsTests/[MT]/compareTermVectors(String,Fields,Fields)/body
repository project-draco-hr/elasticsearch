{
  Terms terms0=fields0.terms(fieldName);
  Terms terms1=fields1.terms(fieldName);
  assertThat(terms0,notNullValue());
  assertThat(terms1,notNullValue());
  assertThat(terms0.size(),equalTo(terms1.size()));
  TermsEnum iter0=terms0.iterator();
  TermsEnum iter1=terms1.iterator();
  for (int i=0; i < terms0.size(); i++) {
    BytesRef next0=iter0.next();
    assertThat(next0,notNullValue());
    BytesRef next1=iter1.next();
    assertThat(next1,notNullValue());
    String string0=next0.utf8ToString();
    String string1=next1.utf8ToString();
    assertThat("expected: " + string0,string0,equalTo(string1));
    assertThat("term: " + string0,iter0.docFreq(),equalTo(iter1.docFreq()));
    assertThat("term: " + string0,iter0.totalTermFreq(),equalTo(iter1.totalTermFreq()));
    PostingsEnum docsAndPositions0=iter0.postings(null,null,PostingsEnum.ALL);
    PostingsEnum docsAndPositions1=iter1.postings(null,null,PostingsEnum.ALL);
    assertThat("term: " + string0,docsAndPositions0.nextDoc(),equalTo(docsAndPositions1.nextDoc()));
    assertThat("term: " + string0,docsAndPositions0.freq(),equalTo(docsAndPositions1.freq()));
    for (int j=0; j < docsAndPositions0.freq(); j++) {
      assertThat("term: " + string0,docsAndPositions0.nextPosition(),equalTo(docsAndPositions1.nextPosition()));
      assertThat("term: " + string0,docsAndPositions0.startOffset(),equalTo(docsAndPositions1.startOffset()));
      assertThat("term: " + string0,docsAndPositions0.endOffset(),equalTo(docsAndPositions1.endOffset()));
    }
  }
  assertThat(iter0.next(),nullValue());
  assertThat(iter1.next(),nullValue());
}
