{
  try {
    if (scrollTimedOut) {
      logger.trace("delete-by-query response marked as timed out");
      timedOut.set(true);
    }
    if (Strings.hasText(scrollId)) {
      ClearScrollRequest clearScrollRequest=new ClearScrollRequest(request);
      clearScrollRequest.addScrollId(scrollId);
      client.clearScroll(clearScrollRequest,new ActionListener<ClearScrollResponse>(){
        @Override public void onResponse(        ClearScrollResponse clearScrollResponse){
          logger.trace("scroll id [{}] cleared",scrollId);
        }
        @Override public void onFailure(        Throwable e){
          logger.warn("unable to clear scroll id [{}]: {}",scrollId,e.getMessage());
        }
      }
);
    }
    if (failure != null) {
      logger.trace("scrolling document(s) terminated with failures: {}",failure.getMessage());
      listener.onFailure(failure);
    }
 else {
      logger.trace("scrolling document(s) terminated with success");
      listener.onResponse(buildResponse());
    }
  }
 catch (  Throwable t) {
    listener.onFailure(t);
  }
}
