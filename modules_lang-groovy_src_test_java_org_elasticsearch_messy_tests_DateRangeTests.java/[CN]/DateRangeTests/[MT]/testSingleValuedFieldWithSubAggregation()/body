{
  SearchResponse response=client().prepareSearch("idx").addAggregation(dateRange("range").field("date").addUnboundedTo("r1",date(2,15)).addRange("r2",date(2,15),date(3,15)).addUnboundedFrom("r3",date(3,15)).subAggregation(sum("sum").field("value"))).execute().actionGet();
  assertSearchResponse(response);
  Range range=response.getAggregations().get("range");
  assertThat(range,notNullValue());
  assertThat(range.getName(),equalTo("range"));
  List<? extends Bucket> buckets=range.getBuckets();
  assertThat(buckets.size(),equalTo(3));
  Object[] propertiesKeys=(Object[])range.getProperty("_key");
  Object[] propertiesDocCounts=(Object[])range.getProperty("_count");
  Object[] propertiesCounts=(Object[])range.getProperty("sum.value");
  Range.Bucket bucket=buckets.get(0);
  assertThat(bucket,notNullValue());
  assertThat((String)bucket.getKey(),equalTo("r1"));
  assertThat(((DateTime)bucket.getFrom()),nullValue());
  assertThat(((DateTime)bucket.getTo()),equalTo(date(2,15)));
  assertThat(bucket.getFromAsString(),nullValue());
  assertThat(bucket.getToAsString(),equalTo("2012-02-15T00:00:00.000Z"));
  assertThat(bucket.getDocCount(),equalTo(2l));
  Sum sum=bucket.getAggregations().get("sum");
  assertThat(sum,notNullValue());
  assertThat(sum.getValue(),equalTo((double)1 + 2));
  assertThat((String)propertiesKeys[0],equalTo("r1"));
  assertThat((long)propertiesDocCounts[0],equalTo(2l));
  assertThat((double)propertiesCounts[0],equalTo((double)1 + 2));
  bucket=buckets.get(1);
  assertThat(bucket,notNullValue());
  assertThat((String)bucket.getKey(),equalTo("r2"));
  assertThat(((DateTime)bucket.getFrom()),equalTo(date(2,15)));
  assertThat(((DateTime)bucket.getTo()),equalTo(date(3,15)));
  assertThat(bucket.getFromAsString(),equalTo("2012-02-15T00:00:00.000Z"));
  assertThat(bucket.getToAsString(),equalTo("2012-03-15T00:00:00.000Z"));
  assertThat(bucket.getDocCount(),equalTo(2l));
  sum=bucket.getAggregations().get("sum");
  assertThat(sum,notNullValue());
  assertThat(sum.getValue(),equalTo((double)3 + 4));
  assertThat((String)propertiesKeys[1],equalTo("r2"));
  assertThat((long)propertiesDocCounts[1],equalTo(2l));
  assertThat((double)propertiesCounts[1],equalTo((double)3 + 4));
  bucket=buckets.get(2);
  assertThat(bucket,notNullValue());
  assertThat((String)bucket.getKey(),equalTo("r3"));
  assertThat(((DateTime)bucket.getFrom()),equalTo(date(3,15)));
  assertThat(((DateTime)bucket.getTo()),nullValue());
  assertThat(bucket.getFromAsString(),equalTo("2012-03-15T00:00:00.000Z"));
  assertThat(bucket.getToAsString(),nullValue());
  assertThat(bucket.getDocCount(),equalTo(numDocs - 4l));
  sum=bucket.getAggregations().get("sum");
  assertThat(sum,notNullValue());
  assertThat((String)propertiesKeys[2],equalTo("r3"));
  assertThat((long)propertiesDocCounts[2],equalTo(numDocs - 4l));
}
