{
  logger.info("--> start node A");
  String nodeA=internalCluster().startNode();
  logger.info("--> create index on node: {}",nodeA);
  createAndPopulateIndex(INDEX_NAME,1,SHARD_COUNT,REPLICA_COUNT);
  logger.info("--> start node B");
  String nodeB=internalCluster().startNode();
  ensureGreen();
  logger.info("--> bump replica count");
  client().admin().indices().prepareUpdateSettings(INDEX_NAME).setSettings(Settings.builder().put("number_of_replicas",1)).execute().actionGet();
  ensureGreen();
  logger.info("--> request recoveries");
  RecoveryResponse response=client().admin().indices().prepareRecoveries(INDEX_NAME).execute().actionGet();
  List<RecoveryState> recoveryStates=response.shardRecoveryStates().get(INDEX_NAME);
  assertThat(recoveryStates.size(),equalTo(2));
  List<RecoveryState> nodeAResponses=findRecoveriesForTargetNode(nodeA,recoveryStates);
  assertThat(nodeAResponses.size(),equalTo(1));
  List<RecoveryState> nodeBResponses=findRecoveriesForTargetNode(nodeB,recoveryStates);
  assertThat(nodeBResponses.size(),equalTo(1));
  RecoveryState nodeARecoveryState=nodeAResponses.get(0);
  assertRecoveryState(nodeARecoveryState,0,Type.STORE,Stage.DONE,nodeA,nodeA,false);
  validateIndexRecoveryState(nodeARecoveryState.getIndex());
  RecoveryState nodeBRecoveryState=nodeBResponses.get(0);
  assertRecoveryState(nodeBRecoveryState,0,Type.REPLICA,Stage.DONE,nodeA,nodeB,false);
  validateIndexRecoveryState(nodeBRecoveryState.getIndex());
}
