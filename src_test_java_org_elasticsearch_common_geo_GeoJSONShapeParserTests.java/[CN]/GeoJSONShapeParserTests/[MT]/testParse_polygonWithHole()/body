{
  String polygonGeoJson=XContentFactory.jsonBuilder().startObject().field("type","Polygon").startArray("coordinates").startArray().startArray().value(100.0).value(1.0).endArray().startArray().value(101.0).value(1.0).endArray().startArray().value(101.0).value(0.0).endArray().startArray().value(100.0).value(0.0).endArray().startArray().value(100.0).value(1.0).endArray().endArray().startArray().startArray().value(100.2).value(0.8).endArray().startArray().value(100.2).value(0.2).endArray().startArray().value(100.8).value(0.2).endArray().startArray().value(100.8).value(0.8).endArray().startArray().value(100.2).value(0.8).endArray().endArray().endArray().endObject().string();
  List<GeoPoint> shellCoordinates=new ArrayList<>();
  shellCoordinates.add(new GeoPoint(0,100));
  shellCoordinates.add(new GeoPoint(0,101));
  shellCoordinates.add(new GeoPoint(1,101));
  shellCoordinates.add(new GeoPoint(1,100));
  shellCoordinates.add(new GeoPoint(0,100));
  List<GeoPoint> holeCoordinates=new ArrayList<>();
  holeCoordinates.add(new GeoPoint(0.2,100.2));
  holeCoordinates.add(new GeoPoint(0.2,100.8));
  holeCoordinates.add(new GeoPoint(0.8,100.8));
  holeCoordinates.add(new GeoPoint(0.8,100.2));
  holeCoordinates.add(new GeoPoint(0.2,100.2));
  LinearRing shell=GEOMETRY_FACTORY.createLinearRing(shellCoordinates.toArray(new GeoPoint[shellCoordinates.size()]));
  LinearRing[] holes=new LinearRing[1];
  holes[0]=GEOMETRY_FACTORY.createLinearRing(holeCoordinates.toArray(new GeoPoint[holeCoordinates.size()]));
  Polygon expected=GEOMETRY_FACTORY.createPolygon(shell,holes);
  assertGeometryEquals(jtsGeom(expected),polygonGeoJson);
}
