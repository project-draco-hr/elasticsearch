{
  String invalidPoly=XContentFactory.jsonBuilder().startObject().field("type","polygon").startArray("coordinates").startArray().startArray().value(-74.011).value(40.753).endArray().startArray().value(-75.022).value(41.783).endArray().endArray().endArray().endObject().string();
  XContentParser parser=JsonXContent.jsonXContent.createParser(invalidPoly);
  parser.nextToken();
  ElasticsearchGeoAssertions.assertValidException(parser,ElasticsearchParseException.class);
  invalidPoly=XContentFactory.jsonBuilder().startObject().field("type","polygon").startArray("coordinates").startArray().startArray().value(-74.011).value(40.753).endArray().endArray().endArray().endObject().string();
  parser=JsonXContent.jsonXContent.createParser(invalidPoly);
  parser.nextToken();
  ElasticsearchGeoAssertions.assertValidException(parser,ElasticsearchParseException.class);
  invalidPoly=XContentFactory.jsonBuilder().startObject().field("type","polygon").startArray("coordinates").startArray().startArray().endArray().endArray().endArray().endObject().string();
  parser=JsonXContent.jsonXContent.createParser(invalidPoly);
  parser.nextToken();
  ElasticsearchGeoAssertions.assertValidException(parser,ElasticsearchParseException.class);
  invalidPoly=XContentFactory.jsonBuilder().startObject().field("type","polygon").startArray("coordinates").startArray().startArray().nullValue().nullValue().endArray().endArray().endArray().endObject().string();
  parser=JsonXContent.jsonXContent.createParser(invalidPoly);
  parser.nextToken();
  ElasticsearchGeoAssertions.assertValidException(parser,ElasticsearchIllegalArgumentException.class);
  invalidPoly=XContentFactory.jsonBuilder().startObject().field("type","polygon").startArray("coordinates").nullValue().nullValue().endArray().endObject().string();
  parser=JsonXContent.jsonXContent.createParser(invalidPoly);
  parser.nextToken();
  ElasticsearchGeoAssertions.assertValidException(parser,ElasticsearchIllegalArgumentException.class);
  invalidPoly=XContentFactory.jsonBuilder().startObject().field("type","polygon").startArray("coordinates").endArray().endObject().string();
  parser=JsonXContent.jsonXContent.createParser(invalidPoly);
  parser.nextToken();
  ElasticsearchGeoAssertions.assertValidException(parser,ElasticsearchParseException.class);
  invalidPoly=XContentFactory.jsonBuilder().startObject().field("type","polygon").startArray("coordinates").startArray().value(-74.011).value(40.753).endArray().endArray().endObject().string();
  parser=JsonXContent.jsonXContent.createParser(invalidPoly);
  parser.nextToken();
  ElasticsearchGeoAssertions.assertValidException(parser,ElasticsearchParseException.class);
}
