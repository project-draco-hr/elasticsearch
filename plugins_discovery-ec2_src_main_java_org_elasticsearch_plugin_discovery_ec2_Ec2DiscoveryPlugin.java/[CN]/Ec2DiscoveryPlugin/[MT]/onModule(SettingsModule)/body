{
  registerSettingIfMissing(settingsModule,AwsEc2Service.KEY_SETTING);
  registerSettingIfMissing(settingsModule,AwsEc2Service.SECRET_SETTING);
  registerSettingIfMissing(settingsModule,AwsEc2Service.PROTOCOL_SETTING);
  registerSettingIfMissing(settingsModule,AwsEc2Service.PROXY_HOST_SETTING);
  registerSettingIfMissing(settingsModule,AwsEc2Service.PROXY_PORT_SETTING);
  registerSettingIfMissing(settingsModule,AwsEc2Service.PROXY_USERNAME_SETTING);
  registerSettingIfMissing(settingsModule,AwsEc2Service.PROXY_PASSWORD_SETTING);
  registerSettingIfMissing(settingsModule,AwsEc2Service.SIGNER_SETTING);
  registerSettingIfMissing(settingsModule,AwsEc2Service.REGION_SETTING);
  settingsModule.registerSetting(AwsEc2Service.CLOUD_EC2.KEY_SETTING);
  settingsModule.registerSetting(AwsEc2Service.CLOUD_EC2.SECRET_SETTING);
  settingsModule.registerSetting(AwsEc2Service.CLOUD_EC2.PROTOCOL_SETTING);
  settingsModule.registerSetting(AwsEc2Service.CLOUD_EC2.PROXY_HOST_SETTING);
  settingsModule.registerSetting(AwsEc2Service.CLOUD_EC2.PROXY_PORT_SETTING);
  settingsModule.registerSetting(AwsEc2Service.CLOUD_EC2.PROXY_USERNAME_SETTING);
  settingsModule.registerSetting(AwsEc2Service.CLOUD_EC2.PROXY_PASSWORD_SETTING);
  settingsModule.registerSetting(AwsEc2Service.CLOUD_EC2.SIGNER_SETTING);
  settingsModule.registerSetting(AwsEc2Service.CLOUD_EC2.REGION_SETTING);
  settingsModule.registerSetting(AwsEc2Service.CLOUD_EC2.ENDPOINT_SETTING);
  settingsModule.registerSetting(AwsEc2Service.DISCOVERY_EC2.HOST_TYPE_SETTING);
  settingsModule.registerSetting(AwsEc2Service.DISCOVERY_EC2.ANY_GROUP_SETTING);
  settingsModule.registerSetting(AwsEc2Service.DISCOVERY_EC2.GROUPS_SETTING);
  settingsModule.registerSetting(AwsEc2Service.DISCOVERY_EC2.AVAILABILITY_ZONES_SETTING);
  settingsModule.registerSetting(AwsEc2Service.DISCOVERY_EC2.NODE_CACHE_TIME_SETTING);
  settingsModule.registerSettingsFilterIfMissing(AwsEc2Service.KEY_SETTING.getKey());
  settingsModule.registerSettingsFilterIfMissing(AwsEc2Service.SECRET_SETTING.getKey());
  settingsModule.registerSettingsFilterIfMissing(AwsEc2Service.PROXY_PASSWORD_SETTING.getKey());
  settingsModule.registerSettingsFilterIfMissing(AwsEc2Service.CLOUD_EC2.KEY_SETTING.getKey());
  settingsModule.registerSettingsFilterIfMissing(AwsEc2Service.CLOUD_EC2.SECRET_SETTING.getKey());
  settingsModule.registerSettingsFilterIfMissing(AwsEc2Service.CLOUD_EC2.PROXY_PASSWORD_SETTING.getKey());
}
