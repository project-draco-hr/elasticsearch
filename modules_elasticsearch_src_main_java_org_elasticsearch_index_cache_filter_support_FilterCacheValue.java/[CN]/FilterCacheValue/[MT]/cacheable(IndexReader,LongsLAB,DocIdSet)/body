{
  if (set == null) {
    return DocSet.EMPTY_DOC_SET;
  }
  if (set == DocIdSet.EMPTY_DOCIDSET) {
    return DocSet.EMPTY_DOC_SET;
  }
  DocIdSetIterator it=set.iterator();
  if (it == null) {
    return DocSet.EMPTY_DOC_SET;
  }
  int doc=it.nextDoc();
  if (doc == DocIdSetIterator.NO_MORE_DOCS) {
    return DocSet.EMPTY_DOC_SET;
  }
  if (longsLAB == null) {
    return DocSets.cacheable(reader,set);
  }
  int numOfWords=OpenBitSet.bits2words(reader.maxDoc());
  LongsLAB.Allocation allocation=longsLAB.allocateLongs(numOfWords);
  if (allocation == null) {
    return DocSets.cacheable(reader,set);
  }
  if (set instanceof OpenBitSet) {
    return new SlicedOpenBitSet(allocation.getData(),allocation.getOffset(),(OpenBitSet)set);
  }
 else   if (set instanceof OpenBitDocSet) {
    return new SlicedOpenBitSet(allocation.getData(),allocation.getOffset(),((OpenBitDocSet)set).set());
  }
 else {
    SlicedOpenBitSet slicedSet=new SlicedOpenBitSet(allocation.getData(),numOfWords,allocation.getOffset());
    slicedSet.fastSet(doc);
    while ((doc=it.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {
      slicedSet.fastSet(doc);
    }
    return slicedSet;
  }
}
