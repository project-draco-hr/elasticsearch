{
  SortedSet<BytesRef> set=new TreeSet<>();
  final int numValues=scaledRandomIntBetween(0,10000);
  List<BytesRef> tmpList=new ArrayList<>();
  BytesRefArray array=new BytesRefArray(Counter.newCounter());
  for (int i=0; i < numValues; i++) {
    String s=randomRealisticUnicodeOfCodepointLengthBetween(1,100);
    set.add(new BytesRef(s));
    tmpList.add(new BytesRef(s));
    array.append(new BytesRef(s));
  }
  if (randomBoolean()) {
    Collections.shuffle(tmpList,getRandom());
    for (    BytesRef ref : tmpList) {
      array.append(ref);
    }
  }
  int[] indices=new int[array.size()];
  for (int i=0; i < indices.length; i++) {
    indices[i]=i;
  }
  int numUnique=CollectionUtils.sortAndDedup(array,indices);
  assertThat(numUnique,equalTo(set.size()));
  Iterator<BytesRef> iterator=set.iterator();
  BytesRefBuilder spare=new BytesRefBuilder();
  for (int i=0; i < numUnique; i++) {
    assertThat(iterator.hasNext(),is(true));
    assertThat(array.get(spare,indices[i]),equalTo(iterator.next()));
  }
}
