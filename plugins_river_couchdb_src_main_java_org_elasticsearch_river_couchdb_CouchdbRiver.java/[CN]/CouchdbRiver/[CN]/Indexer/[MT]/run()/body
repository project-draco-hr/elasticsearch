{
  while (true) {
    if (closed) {
      return;
    }
    String s;
    try {
      s=stream.take();
    }
 catch (    InterruptedException e) {
      if (closed) {
        return;
      }
      continue;
    }
    BulkRequestBuilder bulk=client.prepareBulk();
    Object lastSeq=null;
    Object lineSeq=processLine(s,bulk);
    if (lineSeq != null) {
      lastSeq=lineSeq;
    }
    try {
      while ((s=stream.poll(bulkTimeout.millis(),TimeUnit.MILLISECONDS)) != null) {
        lineSeq=processLine(s,bulk);
        if (lineSeq != null) {
          lastSeq=lineSeq;
        }
        if (bulk.numberOfActions() >= bulkSize) {
          break;
        }
      }
    }
 catch (    InterruptedException e) {
      if (closed) {
        return;
      }
    }
    if (lastSeq != null) {
      try {
        String lastSeqAsString=null;
        if (lastSeq instanceof List) {
          try {
            XContentBuilder builder=XContentFactory.jsonBuilder();
            builder.startArray();
            for (            Object value : ((List)lastSeq)) {
              builder.value(value);
            }
            builder.endArray();
            lastSeqAsString=builder.string();
          }
 catch (          Exception e) {
            logger.error("failed to convert last_seq to a json string",e);
          }
        }
 else {
          lastSeqAsString=lastSeq.toString();
        }
        if (logger.isTraceEnabled()) {
          logger.trace("processing [_seq  ]: [{}]/[{}]/[{}], last_seq [{}]",riverIndexName,riverName.name(),"_seq",lastSeqAsString);
        }
        bulk.add(indexRequest(riverIndexName).type(riverName.name()).id("_seq").source(jsonBuilder().startObject().startObject("couchdb").field("last_seq",lastSeqAsString).endObject().endObject()));
      }
 catch (      IOException e) {
        logger.warn("failed to add last_seq entry to bulk indexing");
      }
    }
    try {
      BulkResponse response=bulk.execute().actionGet();
      if (response.hasFailures()) {
        logger.warn("failed to execute" + response.buildFailureMessage());
      }
    }
 catch (    Exception e) {
      logger.warn("failed to execute bulk",e);
    }
  }
}
