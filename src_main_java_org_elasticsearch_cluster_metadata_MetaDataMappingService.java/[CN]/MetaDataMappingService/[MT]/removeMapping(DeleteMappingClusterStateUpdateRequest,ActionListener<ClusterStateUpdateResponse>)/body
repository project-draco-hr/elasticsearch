{
  clusterService.submitStateUpdateTask("remove-mapping [" + Arrays.toString(request.types()) + "]",Priority.HIGH,new AckedClusterStateUpdateTask<ClusterStateUpdateResponse>(request,listener){
    @Override protected ClusterStateUpdateResponse newResponse(    boolean acknowledged){
      return new ClusterStateUpdateResponse(acknowledged);
    }
    @Override public ClusterState execute(    ClusterState currentState){
      if (request.indices().length == 0) {
        throw new IndexMissingException(new Index("_all"));
      }
      MetaData.Builder builder=MetaData.builder(currentState.metaData());
      boolean changed=false;
      String latestIndexWithout=null;
      for (      String indexName : request.indices()) {
        IndexMetaData indexMetaData=currentState.metaData().index(indexName);
        IndexMetaData.Builder indexBuilder=IndexMetaData.builder(indexMetaData);
        if (indexMetaData != null) {
          boolean isLatestIndexWithout=true;
          for (          String type : request.types()) {
            if (indexMetaData.mappings().containsKey(type)) {
              indexBuilder.removeMapping(type);
              changed=true;
              isLatestIndexWithout=false;
            }
          }
          if (isLatestIndexWithout) {
            latestIndexWithout=indexMetaData.index();
          }
        }
        builder.put(indexBuilder);
      }
      if (!changed) {
        throw new TypeMissingException(new Index(latestIndexWithout),request.types());
      }
      logger.info("[{}] remove_mapping [{}]",request.indices(),request.types());
      return ClusterState.builder(currentState).metaData(builder).build();
    }
  }
);
}
