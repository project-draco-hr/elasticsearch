{
  ContentPath.Type origPathType=context.path().pathType();
  context.path().pathType(pathType);
  XContentNumberFieldMapper latMapper=null;
  XContentNumberFieldMapper lonMapper=null;
  XContentStringFieldMapper geohashMapper=null;
  context.path().add(name);
  if (enableLatLon) {
    XContentNumberFieldMapper.Builder latMapperBuilder;
    XContentNumberFieldMapper.Builder lonMapperBuilder;
    if ("32".equals(resolution)) {
      latMapperBuilder=floatField(Names.LAT).includeInAll(false);
      lonMapperBuilder=floatField(Names.LON).includeInAll(false);
    }
 else     if ("64".equals(resolution)) {
      latMapperBuilder=doubleField(Names.LAT).includeInAll(false);
      lonMapperBuilder=doubleField(Names.LON).includeInAll(false);
    }
 else {
      throw new ElasticSearchIllegalArgumentException("Can't handle geo_point resolution [" + resolution + "]");
    }
    if (precisionStep != null) {
      latMapperBuilder.precisionStep(precisionStep);
      lonMapperBuilder.precisionStep(precisionStep);
    }
    latMapper=(XContentNumberFieldMapper)latMapperBuilder.includeInAll(false).build(context);
    lonMapper=(XContentNumberFieldMapper)lonMapperBuilder.includeInAll(false).build(context);
  }
  if (enableGeohash) {
    geohashMapper=stringField(Names.GEOHASH).includeInAll(false).build(context);
  }
  context.path().remove();
  context.path().pathType(origPathType);
  return new XContentGeoPointFieldMapper(name,pathType,enableLatLon,enableGeohash,resolution,precisionStep,geohashPrecision,latMapper,lonMapper,geohashMapper);
}
