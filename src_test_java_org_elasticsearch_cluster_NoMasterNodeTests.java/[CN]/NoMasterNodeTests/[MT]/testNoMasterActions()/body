{
  boolean autoCreateIndex=randomBoolean();
  logger.info("auto_create_index set to {}",autoCreateIndex);
  Settings settings=settingsBuilder().put("discovery.type","zen").put("action.auto_create_index",autoCreateIndex).put("discovery.zen.minimum_master_nodes",2).put("discovery.zen.ping_timeout","200ms").put("discovery.initial_state_timeout","500ms").build();
  TimeValue timeout=TimeValue.timeValueMillis(200);
  internalCluster().startNode(settings);
  internalCluster().startNode(settings);
  createIndex("test");
  client().admin().cluster().prepareHealth("test").setWaitForGreenStatus().execute().actionGet();
  internalCluster().stopRandomDataNode();
  assertBusy(new Runnable(){
    @Override public void run(){
      ClusterState state=client().admin().cluster().prepareState().setLocal(true).execute().actionGet().getState();
      assertTrue(state.blocks().hasGlobalBlock(Discovery.NO_MASTER_BLOCK));
    }
  }
);
  try {
    client().prepareGet("test","type1","1").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    client().prepareGet("no_index","type1","1").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    client().prepareMultiGet().add("test","type1","1").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    client().prepareMultiGet().add("no_index","type1","1").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    PercolateSourceBuilder percolateSource=new PercolateSourceBuilder();
    percolateSource.percolateDocument().setDoc(new HashMap());
    client().preparePercolate().setIndices("test").setDocumentType("type1").setSource(percolateSource).execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    PercolateSourceBuilder percolateSource=new PercolateSourceBuilder();
    percolateSource.percolateDocument().setDoc(new HashMap());
    client().preparePercolate().setIndices("no_index").setDocumentType("type1").setSource(percolateSource).execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  long now=System.currentTimeMillis();
  try {
    client().prepareUpdate("test","type1","1").setScript("test script",ScriptService.ScriptType.INLINE).setTimeout(timeout).execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(System.currentTimeMillis() - now,greaterThan(timeout.millis() - 50));
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  now=System.currentTimeMillis();
  try {
    client().prepareUpdate("no_index","type1","1").setScript("test script",ScriptService.ScriptType.INLINE).setTimeout(timeout).execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(System.currentTimeMillis() - now,greaterThan(timeout.millis() - 50));
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    client().admin().indices().prepareAnalyze("test","this is a test").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    client().admin().indices().prepareAnalyze("no_index","this is a test").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    client().prepareCount("test").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    client().prepareCount("no_index").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  now=System.currentTimeMillis();
  try {
    client().prepareIndex("test","type1","1").setSource(XContentFactory.jsonBuilder().startObject().endObject()).setTimeout(timeout).execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(System.currentTimeMillis() - now,greaterThan(timeout.millis() - 50));
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  now=System.currentTimeMillis();
  try {
    client().prepareIndex("no_index","type1","1").setSource(XContentFactory.jsonBuilder().startObject().endObject()).setTimeout(timeout).execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException|MasterNotDiscoveredException e) {
    assertThat(System.currentTimeMillis() - now,greaterThan(timeout.millis() - 50));
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  now=System.currentTimeMillis();
  try {
    BulkRequestBuilder bulkRequestBuilder=client().prepareBulk();
    bulkRequestBuilder.add(client().prepareIndex("test","type1","1").setSource(XContentFactory.jsonBuilder().startObject().endObject()));
    bulkRequestBuilder.add(client().prepareIndex("test","type1","2").setSource(XContentFactory.jsonBuilder().startObject().endObject()));
    bulkRequestBuilder.setTimeout(timeout);
    bulkRequestBuilder.get();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException e) {
    if (!autoCreateIndex) {
      assertThat(System.currentTimeMillis() - now,lessThan(timeout.millis() / 2));
    }
 else {
      assertThat(System.currentTimeMillis() - now,greaterThan(timeout.millis() - 50));
      assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
    }
  }
  now=System.currentTimeMillis();
  try {
    BulkRequestBuilder bulkRequestBuilder=client().prepareBulk();
    bulkRequestBuilder.add(client().prepareIndex("no_index","type1","1").setSource(XContentFactory.jsonBuilder().startObject().endObject()));
    bulkRequestBuilder.add(client().prepareIndex("no_index","type1","2").setSource(XContentFactory.jsonBuilder().startObject().endObject()));
    bulkRequestBuilder.setTimeout(timeout);
    bulkRequestBuilder.get();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException e) {
    if (!autoCreateIndex) {
      assertThat(System.currentTimeMillis() - now,lessThan(timeout.millis() / 2));
    }
 else {
      assertThat(System.currentTimeMillis() - now,greaterThan(timeout.millis() - 50));
      assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
    }
  }
  internalCluster().startNode(settings);
  client().admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
}
