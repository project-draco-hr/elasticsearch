{
  Settings settings=settingsBuilder().put("discovery.type","zen").put("action.auto_create_index",false).put("discovery.zen.minimum_master_nodes",2).put("discovery.zen.ping_timeout","200ms").put("discovery.initial_state_timeout","500ms").put("index.number_of_shards",1).build();
  TimeValue timeout=TimeValue.timeValueMillis(200);
  cluster().startNode(settings);
  cluster().startNode(settings);
  createIndex("test");
  client().admin().cluster().prepareHealth("test").setWaitForGreenStatus().execute().actionGet();
  cluster().stopRandomNode();
  assertThat(awaitBusy(new Predicate<Object>(){
    public boolean apply(    Object o){
      ClusterState state=client().admin().cluster().prepareState().setLocal(true).execute().actionGet().getState();
      return state.blocks().hasGlobalBlock(Discovery.NO_MASTER_BLOCK);
    }
  }
),equalTo(true));
  try {
    client().prepareGet("test","type1","1").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    client().prepareMultiGet().add("test","type1","1").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    PercolateSourceBuilder percolateSource=new PercolateSourceBuilder();
    percolateSource.percolateDocument().setDoc(new HashMap());
    client().preparePercolate().setIndices("test").setDocumentType("type1").setSource(percolateSource).execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  long now=System.currentTimeMillis();
  try {
    client().prepareUpdate("test","type1","1").setScript("test script").setTimeout(timeout).execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException e) {
    assertThat(System.currentTimeMillis() - now,greaterThan(timeout.millis() - 50));
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    client().admin().indices().prepareAnalyze("test","this is a test").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  try {
    client().prepareCount("test").execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException e) {
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
  now=System.currentTimeMillis();
  try {
    client().prepareIndex("test","type1","1").setSource(XContentFactory.jsonBuilder().startObject().endObject()).setTimeout(timeout).execute().actionGet();
    fail("Expected ClusterBlockException");
  }
 catch (  ClusterBlockException e) {
    assertThat(System.currentTimeMillis() - now,greaterThan(timeout.millis() - 50));
    assertThat(e.status(),equalTo(RestStatus.SERVICE_UNAVAILABLE));
  }
}
