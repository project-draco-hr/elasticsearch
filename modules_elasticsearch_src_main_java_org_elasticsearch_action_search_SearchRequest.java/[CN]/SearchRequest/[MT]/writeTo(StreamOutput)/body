{
  out.writeByte(operationThreading.id());
  out.writeByte(searchType.id());
  out.writeVInt(indices.length);
  for (  String index : indices) {
    out.writeUTF(index);
  }
  if (queryHint == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    out.writeUTF(queryHint);
  }
  if (scroll == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    scroll.writeTo(out);
  }
  if (timeout == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    timeout.writeTo(out);
  }
  if (source == null && sourceBuilder == null) {
    out.writeVInt(0);
  }
 else {
    if (source != null) {
      out.writeVInt(source.length);
      out.writeBytes(source);
    }
 else {
      FastByteArrayOutputStream os=sourceBuilder.buildAsUnsafeBytes(contentType);
      out.writeVInt(os.size());
      out.writeBytes(os.unsafeByteArray(),0,os.size());
    }
  }
  if (extraSource == null && extraSourceBuilder == null) {
    out.writeVInt(0);
  }
 else {
    if (extraSource != null) {
      out.writeVInt(extraSource.length);
      out.writeBytes(extraSource);
    }
 else {
      FastByteArrayOutputStream os=extraSourceBuilder.buildAsUnsafeBytes(contentType);
      out.writeVInt(os.size());
      out.writeBytes(os.unsafeByteArray(),0,os.size());
    }
  }
  out.writeVInt(types.length);
  for (  String type : types) {
    out.writeUTF(type);
  }
}
