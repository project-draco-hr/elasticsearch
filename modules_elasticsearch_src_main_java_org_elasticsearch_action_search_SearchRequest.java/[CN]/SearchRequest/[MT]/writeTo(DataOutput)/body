{
  out.writeByte(operationThreading.id());
  out.writeByte(searchType.id());
  out.writeInt(indices.length);
  for (  String index : indices) {
    out.writeUTF(index);
  }
  if (queryHint == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    out.writeUTF(queryHint);
  }
  if (scroll == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    scroll.writeTo(out);
  }
  out.writeInt(from);
  out.writeInt(size);
  if (timeout == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    timeout.writeTo(out);
  }
  out.writeUTF(source);
  if (indexBoost == null) {
    out.writeInt(0);
  }
 else {
    out.writeInt(indexBoost.size());
    for (TObjectFloatIterator<String> it=indexBoost.iterator(); it.hasNext(); ) {
      it.advance();
      out.writeUTF(it.key());
      out.writeFloat(it.value());
    }
  }
  out.writeInt(types.length);
  for (  String type : types) {
    out.writeUTF(type);
  }
}
