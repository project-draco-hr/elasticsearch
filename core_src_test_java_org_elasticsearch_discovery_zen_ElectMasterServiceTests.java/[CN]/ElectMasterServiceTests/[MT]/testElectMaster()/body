{
  List<DiscoveryNode> nodes=generateRandomNodes();
  ElectMasterService service=electMasterService();
  int min_master_nodes=randomIntBetween(0,nodes.size());
  service.minimumMasterNodes(min_master_nodes);
  int master_nodes=0;
  for (  DiscoveryNode node : nodes) {
    if (node.masterNode()) {
      master_nodes++;
    }
  }
  DiscoveryNode master=null;
  if (service.hasEnoughMasterNodes(nodes)) {
    master=service.electMaster(nodes);
  }
  if (master_nodes == 0) {
    assertNull(master);
  }
 else   if (min_master_nodes > 0 && master_nodes < min_master_nodes) {
    assertNull(master);
  }
 else {
    assertNotNull(master);
    for (    DiscoveryNode node : nodes) {
      if (node.masterNode()) {
        assertTrue(master.id().compareTo(node.id()) <= 0);
      }
    }
  }
}
