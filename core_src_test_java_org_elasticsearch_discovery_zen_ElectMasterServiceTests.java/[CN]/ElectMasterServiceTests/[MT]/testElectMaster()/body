{
  List<MasterCandidate> candidates=generateRandomCandidates();
  ElectMasterService service=electMasterService();
  int minMasterNodes=randomIntBetween(0,candidates.size());
  service.minimumMasterNodes(minMasterNodes);
  MasterCandidate master=service.electMaster(candidates);
  assertNotNull(master);
  for (  MasterCandidate candidate : candidates) {
    if (candidate.getNode().equals(master.getNode())) {
    }
 else     if (candidate.getClusterStateVersion() == master.getClusterStateVersion()) {
      assertThat("candidate " + candidate + " has a lower or equal id than master "+ master,candidate.getNode().getId(),greaterThan(master.getNode().getId()));
    }
 else {
      assertThat("candidate " + master + " has a higher cluster state version than candidate "+ candidate,master.getClusterStateVersion(),greaterThan(candidate.getClusterStateVersion()));
    }
  }
}
