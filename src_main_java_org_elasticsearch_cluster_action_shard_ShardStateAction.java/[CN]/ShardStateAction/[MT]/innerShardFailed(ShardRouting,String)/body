{
  logger.warn("received shard failed for {}, reason [{}]",shardRouting,reason);
  clusterService.submitStateUpdateTask("shard-failed (" + shardRouting + "), reason ["+ reason+ "]",new ClusterStateUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState){
      if (logger.isDebugEnabled()) {
        logger.debug("Received failed shard {}, reason [{}]",shardRouting,reason);
      }
      RoutingAllocation.Result routingResult=allocationService.applyFailedShard(currentState,shardRouting);
      if (!routingResult.changed()) {
        return currentState;
      }
      if (logger.isDebugEnabled()) {
        logger.debug("Applying failed shard {}, reason [{}]",shardRouting,reason);
      }
      return newClusterStateBuilder().state(currentState).routingResult(routingResult).build();
    }
  }
);
}
