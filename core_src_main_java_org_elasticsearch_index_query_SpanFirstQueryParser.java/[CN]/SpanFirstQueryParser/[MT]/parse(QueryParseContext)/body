{
  XContentParser parser=parseContext.parser();
  float boost=AbstractQueryBuilder.DEFAULT_BOOST;
  SpanQuery match=null;
  int end=-1;
  String queryName=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("match".equals(currentFieldName)) {
        Query query=parseContext.parseInnerQuery();
        if (!(query instanceof SpanQuery)) {
          throw new QueryParsingException(parseContext,"spanFirst [match] must be of type span query");
        }
        match=(SpanQuery)query;
      }
 else {
        throw new QueryParsingException(parseContext,"[span_first] query does not support [" + currentFieldName + "]");
      }
    }
 else {
      if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else       if ("end".equals(currentFieldName)) {
        end=parser.intValue();
      }
 else       if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else {
        throw new QueryParsingException(parseContext,"[span_first] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (match == null) {
    throw new QueryParsingException(parseContext,"spanFirst must have [match] span query clause");
  }
  if (end == -1) {
    throw new QueryParsingException(parseContext,"spanFirst must have [end] set for it");
  }
  SpanFirstQuery query=new SpanFirstQuery(match,end);
  query.setBoost(boost);
  if (queryName != null) {
    parseContext.addNamedQuery(queryName,query);
  }
  return query;
}
