{
  CountRequest countRequest;
  if (randomBoolean()) {
    countRequest=new CountRequest(randomStringArray());
  }
 else {
    countRequest=new CountRequest();
  }
  if (randomBoolean()) {
    countRequest.indicesOptions(IndicesOptions.fromOptions(randomBoolean(),randomBoolean(),randomBoolean(),randomBoolean()));
  }
  if (randomBoolean()) {
    countRequest.types(randomStringArray());
  }
  if (randomBoolean()) {
    countRequest.routing(randomStringArray());
  }
  if (randomBoolean()) {
    countRequest.preference(randomAsciiOfLengthBetween(1,10));
  }
  final boolean querySet;
  if (querySet=randomBoolean()) {
    countRequest.query(QueryBuilders.termQuery("field","value"));
  }
  if (randomBoolean()) {
    countRequest.minScore(randomFloat());
  }
  if (randomBoolean()) {
    countRequest.terminateAfter(randomIntBetween(1,1000));
  }
  SearchRequest searchRequest=countRequest.toSearchRequest();
  assertThat(searchRequest.indices(),equalTo(countRequest.indices()));
  assertThat(searchRequest.indicesOptions(),equalTo(countRequest.indicesOptions()));
  assertThat(searchRequest.types(),equalTo(countRequest.types()));
  assertThat(searchRequest.routing(),equalTo(countRequest.routing()));
  assertThat(searchRequest.preference(),equalTo(countRequest.preference()));
  SearchSourceBuilder source=searchRequest.source();
  assertThat(source.size(),equalTo(0));
  if (querySet) {
    assertThat(source.query(),notNullValue());
  }
 else {
    assertNull(source.query());
  }
  if (countRequest.minScore() == CountRequest.DEFAULT_MIN_SCORE) {
    assertThat(source.minScore(),nullValue());
  }
 else {
    assertThat(source.minScore(),equalTo(countRequest.minScore()));
  }
  assertThat(source.terminateAfter(),equalTo(countRequest.terminateAfter()));
}
