{
  CountRequest countRequest;
  if (randomBoolean()) {
    countRequest=new CountRequest(randomStringArray());
  }
 else {
    countRequest=new CountRequest();
  }
  if (randomBoolean()) {
    countRequest.indicesOptions(IndicesOptions.fromOptions(randomBoolean(),randomBoolean(),randomBoolean(),randomBoolean()));
  }
  if (randomBoolean()) {
    countRequest.types(randomStringArray());
  }
  if (randomBoolean()) {
    countRequest.routing(randomStringArray());
  }
  if (randomBoolean()) {
    countRequest.preference(randomAsciiOfLengthBetween(1,10));
  }
  if (randomBoolean()) {
    countRequest.source(new QuerySourceBuilder().setQuery(QueryBuilders.termQuery("field","value")));
  }
  if (randomBoolean()) {
    countRequest.minScore(randomFloat());
  }
  if (randomBoolean()) {
    countRequest.terminateAfter(randomIntBetween(1,1000));
  }
  SearchRequest searchRequest=countRequest.toSearchRequest();
  assertThat(searchRequest.indices(),equalTo(countRequest.indices()));
  assertThat(searchRequest.indicesOptions(),equalTo(countRequest.indicesOptions()));
  assertThat(searchRequest.types(),equalTo(countRequest.types()));
  assertThat(searchRequest.routing(),equalTo(countRequest.routing()));
  assertThat(searchRequest.preference(),equalTo(countRequest.preference()));
  if (countRequest.source() == null) {
    assertThat(searchRequest.source(),nullValue());
  }
 else {
    assertThat(searchRequest.source().query(),notNullValue());
  }
  Map<String,Object> extraSourceMap=XContentHelper.convertToMap(searchRequest.extraSource(),false).v2();
  int count=1;
  assertThat((Integer)extraSourceMap.get("size"),equalTo(0));
  if (countRequest.minScore() == CountRequest.DEFAULT_MIN_SCORE) {
    assertThat(extraSourceMap.get("min_score"),nullValue());
  }
 else {
    assertThat(((Number)extraSourceMap.get("min_score")).floatValue(),equalTo(countRequest.minScore()));
    count++;
  }
  if (countRequest.terminateAfter() == SearchContext.DEFAULT_TERMINATE_AFTER) {
    assertThat(extraSourceMap.get("terminate_after"),nullValue());
  }
 else {
    assertThat((Integer)extraSourceMap.get("terminate_after"),equalTo(countRequest.terminateAfter()));
    count++;
  }
  assertThat(extraSourceMap.size(),equalTo(count));
}
