{
  logger.info("Creating index test");
  assertAcked(prepareCreate("test").addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("text").field("type","text").endObject().endObject().endObject().endObject()));
  logger.info("Creating aliases alias release");
  client().admin().indices().prepareAliases().addAlias("test","release",termQuery("text","release")).addAlias("test","beta",termQuery("text","beta")).get();
  logger.info("Running Cluster Health");
  assertThat(ensureGreen(),equalTo(ClusterHealthStatus.GREEN));
  logger.info("Indexing...");
  client().index(indexRequest("test").type("type1").id("1").source(jsonBuilder().startObject().field("text","lucene beta").endObject())).actionGet();
  client().index(indexRequest("test").type("type1").id("2").source(jsonBuilder().startObject().field("text","lucene release").endObject())).actionGet();
  client().index(indexRequest("test").type("type1").id("3").source(jsonBuilder().startObject().field("text","elasticsearch beta").endObject())).actionGet();
  client().index(indexRequest("test").type("type1").id("4").source(jsonBuilder().startObject().field("text","elasticsearch release").endObject())).actionGet();
  client().admin().indices().refresh(refreshRequest()).actionGet();
  logger.info("Running moreLikeThis on index");
  SearchResponse response=client().prepareSearch().setQuery(new MoreLikeThisQueryBuilder(null,new Item[]{new Item("test","type1","1")}).minTermFreq(1).minDocFreq(1)).get();
  assertHitCount(response,2L);
  logger.info("Running moreLikeThis on beta shard");
  response=client().prepareSearch("beta").setQuery(new MoreLikeThisQueryBuilder(null,new Item[]{new Item("test","type1","1")}).minTermFreq(1).minDocFreq(1)).get();
  assertHitCount(response,1L);
  assertThat(response.getHits().getAt(0).id(),equalTo("3"));
  logger.info("Running moreLikeThis on release shard");
  response=client().prepareSearch("release").setQuery(new MoreLikeThisQueryBuilder(null,new Item[]{new Item("test","type1","1")}).minTermFreq(1).minDocFreq(1)).get();
  assertHitCount(response,1L);
  assertThat(response.getHits().getAt(0).id(),equalTo("2"));
  logger.info("Running moreLikeThis on alias with node client");
  response=internalCluster().coordOnlyNodeClient().prepareSearch("beta").setQuery(new MoreLikeThisQueryBuilder(null,new Item[]{new Item("test","type1","1")}).minTermFreq(1).minDocFreq(1)).get();
  assertHitCount(response,1L);
  assertThat(response.getHits().getAt(0).id(),equalTo("3"));
}
