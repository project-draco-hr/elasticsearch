{
  List<GeoQueryContext> queryContexts=new ArrayList<>();
  Token token=parser.nextToken();
  if (token == Token.START_OBJECT || token == Token.VALUE_STRING) {
    queryContexts.add(GeoQueryContext.PROTOTYPE.fromXContext(parser));
  }
 else   if (token == Token.START_ARRAY) {
    while (parser.nextToken() != Token.END_ARRAY) {
      queryContexts.add(GeoQueryContext.PROTOTYPE.fromXContext(parser));
    }
  }
  List<QueryContext> queryContextList=new ArrayList<>();
  for (  GeoQueryContext queryContext : queryContexts) {
    int minPrecision=Math.min(this.precision,queryContext.getPrecision());
    GeoPoint point=queryContext.getGeoPoint();
    final Collection<String> locations=new HashSet<>();
    String geoHash=stringEncode(point.getLon(),point.getLat(),minPrecision);
    locations.add(geoHash);
    if (queryContext.getNeighbours().isEmpty() && geoHash.length() == this.precision) {
      addNeighbors(geoHash,locations);
    }
 else     if (queryContext.getNeighbours().isEmpty() == false) {
      for (      Integer neighbourPrecision : queryContext.getNeighbours()) {
        if (neighbourPrecision < geoHash.length()) {
          String truncatedGeoHash=geoHash.substring(0,neighbourPrecision);
          locations.add(truncatedGeoHash);
          addNeighbors(truncatedGeoHash,locations);
        }
      }
    }
    for (    String location : locations) {
      queryContextList.add(new QueryContext(location,queryContext.getBoost(),location.length() < this.precision));
    }
  }
  return queryContextList;
}
