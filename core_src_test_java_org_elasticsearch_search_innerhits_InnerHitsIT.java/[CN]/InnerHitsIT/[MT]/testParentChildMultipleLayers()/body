{
  assertAcked(prepareCreate("articles").addMapping("article","title","type=text").addMapping("comment","_parent","type=article","message","type=text").addMapping("remark","_parent","type=comment","message","type=text"));
  List<IndexRequestBuilder> requests=new ArrayList<>();
  requests.add(client().prepareIndex("articles","article","1").setSource("title","quick brown fox"));
  requests.add(client().prepareIndex("articles","comment","1").setParent("1").setSource("message","fox eat quick"));
  requests.add(client().prepareIndex("articles","remark","1").setParent("1").setRouting("1").setSource("message","good"));
  requests.add(client().prepareIndex("articles","article","2").setSource("title","big gray elephant"));
  requests.add(client().prepareIndex("articles","comment","2").setParent("2").setSource("message","elephant captured"));
  requests.add(client().prepareIndex("articles","remark","2").setParent("2").setRouting("2").setSource("message","bad"));
  indexRandom(true,requests);
  InnerHitsBuilder innerInnerHitsBuilder=new InnerHitsBuilder();
  innerInnerHitsBuilder.addInnerHit("remark",new InnerHitBuilder().setParentChildType("remark").setQuery(matchQuery("message","good")));
  InnerHitsBuilder innerHitsBuilder=new InnerHitsBuilder();
  innerHitsBuilder.addInnerHit("comment",new InnerHitBuilder().setParentChildType("comment").setQuery(hasChildQuery("remark",matchQuery("message","good"),ScoreMode.None)).setInnerHitsBuilder(innerInnerHitsBuilder));
  SearchResponse response=client().prepareSearch("articles").setQuery(hasChildQuery("comment",hasChildQuery("remark",matchQuery("message","good"),ScoreMode.None),ScoreMode.None)).innerHits(innerHitsBuilder).get();
  assertNoFailures(response);
  assertHitCount(response,1);
  assertSearchHit(response,1,hasId("1"));
  assertThat(response.getHits().getAt(0).getInnerHits().size(),equalTo(1));
  SearchHits innerHits=response.getHits().getAt(0).getInnerHits().get("comment");
  assertThat(innerHits.totalHits(),equalTo(1L));
  assertThat(innerHits.getAt(0).getId(),equalTo("1"));
  assertThat(innerHits.getAt(0).type(),equalTo("comment"));
  innerHits=innerHits.getAt(0).getInnerHits().get("remark");
  assertThat(innerHits.totalHits(),equalTo(1L));
  assertThat(innerHits.getAt(0).getId(),equalTo("1"));
  assertThat(innerHits.getAt(0).type(),equalTo("remark"));
  innerInnerHitsBuilder=new InnerHitsBuilder();
  innerInnerHitsBuilder.addInnerHit("remark",new InnerHitBuilder().setParentChildType("remark").setQuery(matchQuery("message","bad")));
  innerHitsBuilder=new InnerHitsBuilder();
  innerHitsBuilder.addInnerHit("comment",new InnerHitBuilder().setParentChildType("comment").setQuery(hasChildQuery("remark",matchQuery("message","bad"),ScoreMode.None)).setInnerHitsBuilder(innerInnerHitsBuilder));
  response=client().prepareSearch("articles").setQuery(hasChildQuery("comment",hasChildQuery("remark",matchQuery("message","bad"),ScoreMode.None),ScoreMode.None)).innerHits(innerHitsBuilder).get();
  assertNoFailures(response);
  assertHitCount(response,1);
  assertSearchHit(response,1,hasId("2"));
  assertThat(response.getHits().getAt(0).getInnerHits().size(),equalTo(1));
  innerHits=response.getHits().getAt(0).getInnerHits().get("comment");
  assertThat(innerHits.totalHits(),equalTo(1L));
  assertThat(innerHits.getAt(0).getId(),equalTo("2"));
  assertThat(innerHits.getAt(0).type(),equalTo("comment"));
  innerHits=innerHits.getAt(0).getInnerHits().get("remark");
  assertThat(innerHits.totalHits(),equalTo(1L));
  assertThat(innerHits.getAt(0).getId(),equalTo("2"));
  assertThat(innerHits.getAt(0).type(),equalTo("remark"));
}
