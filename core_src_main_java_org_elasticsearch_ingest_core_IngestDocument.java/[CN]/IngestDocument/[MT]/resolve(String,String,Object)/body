{
  if (context == null) {
    throw new IllegalArgumentException("cannot resolve [" + pathElement + "] from null as part of path ["+ fullPath+ "]");
  }
  if (context instanceof Map) {
    @SuppressWarnings("unchecked") Map<String,Object> map=(Map<String,Object>)context;
    if (map.containsKey(pathElement)) {
      return map.get(pathElement);
    }
    throw new IllegalArgumentException("field [" + pathElement + "] not present as part of path ["+ fullPath+ "]");
  }
  if (context instanceof List) {
    @SuppressWarnings("unchecked") List<Object> list=(List<Object>)context;
    int index;
    try {
      index=Integer.parseInt(pathElement);
    }
 catch (    NumberFormatException e) {
      throw new IllegalArgumentException("[" + pathElement + "] is not an integer, cannot be used as an index as part of path ["+ fullPath+ "]",e);
    }
    if (index < 0 || index >= list.size()) {
      throw new IllegalArgumentException("[" + index + "] is out of bounds for array with length ["+ list.size()+ "] as part of path ["+ fullPath+ "]");
    }
    return list.get(index);
  }
  throw new IllegalArgumentException("cannot resolve [" + pathElement + "] from object of type ["+ context.getClass().getName()+ "] as part of path ["+ fullPath+ "]");
}
