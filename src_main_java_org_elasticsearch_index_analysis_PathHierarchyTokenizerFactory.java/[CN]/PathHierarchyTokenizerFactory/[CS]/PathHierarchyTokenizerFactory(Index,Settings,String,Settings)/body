{
  super(index,indexSettings,name,settings);
  bufferSize=settings.getAsInt("buffer_size",1024);
  String delimiter=settings.get("delimiter");
  if (delimiter == null) {
    this.delimiter=PathHierarchyTokenizer.DEFAULT_DELIMITER;
  }
 else   if (delimiter.length() > 1) {
    throw new ElasticsearchIllegalArgumentException("delimiter can only be a one char value");
  }
 else {
    this.delimiter=delimiter.charAt(0);
  }
  String replacement=settings.get("replacement");
  if (replacement == null) {
    this.replacement=this.delimiter;
  }
 else   if (replacement.length() > 1) {
    throw new ElasticsearchIllegalArgumentException("replacement can only be a one char value");
  }
 else {
    this.replacement=replacement.charAt(0);
  }
  this.skip=settings.getAsInt("skip",PathHierarchyTokenizer.DEFAULT_SKIP);
  this.reverse=settings.getAsBoolean("reverse",false);
}
