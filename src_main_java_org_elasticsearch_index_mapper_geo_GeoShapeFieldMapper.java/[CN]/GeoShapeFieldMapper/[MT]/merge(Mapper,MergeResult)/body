{
  super.merge(mergeWith,mergeResult);
  if (!this.getClass().equals(mergeWith.getClass())) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different field type");
    return;
  }
  final GeoShapeFieldMapper fieldMergeWith=(GeoShapeFieldMapper)mergeWith;
  final PrefixTreeStrategy mergeWithStrategy=fieldMergeWith.fieldType().defaultStrategy();
  if (!(this.fieldType().defaultStrategy().getClass().equals(mergeWithStrategy.getClass()))) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different strategy");
  }
  final SpatialPrefixTree grid=this.fieldType().defaultStrategy().getGrid();
  final SpatialPrefixTree mergeGrid=mergeWithStrategy.getGrid();
  if (!grid.getClass().equals(mergeGrid.getClass())) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different tree");
  }
  if (grid.getMaxLevels() != mergeGrid.getMaxLevels()) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different tree_levels or precision");
  }
  if (mergeResult.hasConflicts() || mergeResult.simulate()) {
    return;
  }
  this.fieldType=this.fieldType.clone();
  this.fieldType().setDistErrPct(mergeWithStrategy.getDistErrPct());
  this.fieldType().setOrientation(fieldMergeWith.fieldType().orientation());
  this.fieldType.freeze();
}
