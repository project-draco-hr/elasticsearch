{
  createIndex("test");
  ensureGreen();
  IndexResponse indexResponse=client().prepareIndex("test","type","1").setSource("field1","value1_1").setVersion(12).setVersionType(VersionType.EXTERNAL).execute().actionGet();
  assertThat(indexResponse.getVersion(),equalTo(12l));
  indexResponse=client().prepareIndex("test","type","1").setSource("field1","value1_1").setVersion(14).setVersionType(VersionType.EXTERNAL).execute().actionGet();
  assertThat(indexResponse.getVersion(),equalTo(14l));
  assertThrows(client().prepareIndex("test","type","1").setSource("field1","value1_1").setVersion(13).setVersionType(VersionType.EXTERNAL).execute(),VersionConflictEngineException.class);
  client().admin().indices().prepareRefresh().execute().actionGet();
  for (int i=0; i < 10; i++) {
    assertThat(client().prepareGet("test","type","1").execute().actionGet().getVersion(),equalTo(14l));
  }
  assertThrows(client().prepareDelete("test","type","1").setVersion(2).setVersionType(VersionType.EXTERNAL).execute(),VersionConflictEngineException.class);
  DeleteResponse deleteResponse=client().prepareDelete("test","type","1").setVersion(17).setVersionType(VersionType.EXTERNAL).execute().actionGet();
  assertThat(deleteResponse.isFound(),equalTo(true));
  assertThat(deleteResponse.getVersion(),equalTo(17l));
  assertThrows(client().prepareDelete("test","type","1").setVersion(2).setVersionType(VersionType.EXTERNAL).execute(),VersionConflictEngineException.class);
  deleteResponse=client().prepareDelete("test","type","1").setVersion(18).setVersionType(VersionType.EXTERNAL).execute().actionGet();
  assertThat(deleteResponse.isFound(),equalTo(false));
  assertThat(deleteResponse.getVersion(),equalTo(18l));
  indexResponse=client().prepareIndex("test","type","1").setSource("field1","value1_1").setVersion(19).setVersionType(VersionType.EXTERNAL).execute().actionGet();
  assertThat(indexResponse.getVersion(),equalTo(19l));
  deleteResponse=client().prepareDelete("test","type","1").setVersion(20).setVersionType(VersionType.EXTERNAL).execute().actionGet();
  assertThat(deleteResponse.isFound(),equalTo(true));
  assertThat(deleteResponse.getVersion(),equalTo(20l));
  HashMap<String,Object> newSettings=new HashMap<String,Object>();
  newSettings.put("index.gc_deletes",-1);
  client().admin().indices().prepareUpdateSettings("test").setSettings(newSettings).execute().actionGet();
  Thread.sleep(300);
  indexResponse=client().prepareIndex("test","type","1").setSource("field1","value1_1").setVersion(20).setVersionType(VersionType.EXTERNAL).execute().actionGet();
  assertThat(indexResponse.getVersion(),equalTo(20l));
}
