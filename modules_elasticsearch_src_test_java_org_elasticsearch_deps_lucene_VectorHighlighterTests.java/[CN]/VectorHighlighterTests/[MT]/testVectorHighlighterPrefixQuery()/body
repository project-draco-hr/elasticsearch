{
  Directory dir=new RAMDirectory();
  IndexWriter indexWriter=new IndexWriter(dir,new IndexWriterConfig(Lucene.VERSION,Lucene.STANDARD_ANALYZER));
  indexWriter.addDocument(doc().add(field("_id","1")).add(field("content","the big bad dog",Field.Store.YES,Field.Index.ANALYZED,Field.TermVector.WITH_POSITIONS_OFFSETS)).build());
  IndexReader reader=IndexReader.open(indexWriter,true);
  IndexSearcher searcher=new IndexSearcher(reader);
  TopDocs topDocs=searcher.search(new TermQuery(new Term("_id","1")),1);
  assertThat(topDocs.totalHits,equalTo(1));
  FastVectorHighlighter highlighter=new FastVectorHighlighter();
  PrefixQuery prefixQuery=new PrefixQuery(new Term("content","ba"));
  assertThat(prefixQuery.getRewriteMethod().getClass().getName(),equalTo(PrefixQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT.getClass().getName()));
  String fragment=highlighter.getBestFragment(highlighter.getFieldQuery(prefixQuery),reader,topDocs.scoreDocs[0].doc,"content",30);
  assertThat(fragment,nullValue());
  prefixQuery.setRewriteMethod(PrefixQuery.SCORING_BOOLEAN_QUERY_REWRITE);
  Query rewriteQuery=prefixQuery.rewrite(reader);
  fragment=highlighter.getBestFragment(highlighter.getFieldQuery(rewriteQuery),reader,topDocs.scoreDocs[0].doc,"content",30);
  assertThat(fragment,notNullValue());
  System.out.println(fragment);
  prefixQuery=new PrefixQuery(new Term("content","ba"));
  assertThat(prefixQuery.getRewriteMethod().getClass().getName(),equalTo(PrefixQuery.CONSTANT_SCORE_AUTO_REWRITE_DEFAULT.getClass().getName()));
  CustomFieldQuery.reader.set(reader);
  fragment=highlighter.getBestFragment(new CustomFieldQuery(prefixQuery,highlighter),reader,topDocs.scoreDocs[0].doc,"content",30);
  assertThat(fragment,notNullValue());
  System.out.println(fragment);
}
