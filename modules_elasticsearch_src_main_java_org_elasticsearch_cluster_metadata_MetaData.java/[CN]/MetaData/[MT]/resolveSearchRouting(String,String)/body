{
  Map<String,Set<String>> routings=null;
  List<String> paramRouting=null;
  if (routing != null) {
    paramRouting=Arrays.asList(routingPattern.split(routing));
  }
  ImmutableMap<String,ImmutableSet<String>> indexToRoutingMap=aliasToIndexToSearchRoutingMap.get(aliasOrIndex);
  if (indexToRoutingMap != null && !indexToRoutingMap.isEmpty()) {
    for (    Map.Entry<String,ImmutableSet<String>> indexRouting : indexToRoutingMap.entrySet()) {
      if (!indexRouting.getValue().isEmpty()) {
        Set<String> r=new THashSet<String>(indexRouting.getValue());
        if (paramRouting != null) {
          r.retainAll(paramRouting);
        }
        if (!r.isEmpty()) {
          if (routings == null) {
            routings=newHashMap();
          }
          routings.put(indexRouting.getKey(),r);
        }
      }
 else {
        if (paramRouting != null) {
          Set<String> r=new THashSet<String>(paramRouting);
          if (routings == null) {
            routings=newHashMap();
          }
          routings.put(indexRouting.getKey(),r);
        }
      }
    }
  }
 else {
    if (paramRouting != null) {
      Set<String> r=new THashSet<String>(paramRouting);
      if (routings == null) {
        routings=newHashMap();
      }
      routings.put(aliasOrIndex,r);
    }
  }
  return routings;
}
