{
  clusterService.submitStateUpdateTask("index-aliases",new ProcessedClusterStateUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState){
      for (      AliasAction aliasAction : request.actions) {
        if (!currentState.metaData().hasIndex(aliasAction.index())) {
          listener.onFailure(new IndexMissingException(new Index(aliasAction.index())));
          return currentState;
        }
        if (currentState.metaData().hasIndex(aliasAction.alias())) {
          listener.onFailure(new InvalidAliasNameException(new Index(aliasAction.index()),aliasAction.alias(),"an index exists with the same name as the alias"));
          return currentState;
        }
      }
      MetaData.Builder builder=newMetaDataBuilder().metaData(currentState.metaData());
      for (      AliasAction aliasAction : request.actions) {
        IndexMetaData indexMetaData=builder.get(aliasAction.index());
        if (indexMetaData == null) {
          throw new IndexMissingException(new Index(aliasAction.index()));
        }
        IndexMetaData.Builder indexMetaDataBuilder=newIndexMetaDataBuilder(indexMetaData);
        if (aliasAction.actionType() == AliasAction.Type.ADD) {
          indexMetaDataBuilder.putAlias(AliasMetaData.newAliasMetaDataBuilder(aliasAction.alias()).build());
        }
 else         if (aliasAction.actionType() == AliasAction.Type.REMOVE) {
          indexMetaDataBuilder.removerAlias(aliasAction.alias());
        }
        builder.put(indexMetaDataBuilder);
      }
      return newClusterStateBuilder().state(currentState).metaData(builder).build();
    }
    @Override public void clusterStateProcessed(    ClusterState clusterState){
      listener.onResponse(new Response());
    }
  }
);
}
