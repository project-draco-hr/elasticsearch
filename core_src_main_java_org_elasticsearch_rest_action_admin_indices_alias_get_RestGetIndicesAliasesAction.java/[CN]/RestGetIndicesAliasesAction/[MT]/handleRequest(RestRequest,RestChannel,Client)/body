{
  final String[] indices=Strings.splitStringByCommaToArray(request.param("index"));
  final String[] aliases=Strings.splitStringByCommaToArray(request.param("name"));
  ClusterStateRequest clusterStateRequest=Requests.clusterStateRequest().routingTable(false).nodes(false).indices(indices);
  clusterStateRequest.local(request.paramAsBoolean("local",clusterStateRequest.local()));
  client.admin().cluster().state(clusterStateRequest,new RestBuilderListener<ClusterStateResponse>(channel){
    @Override public RestResponse buildResponse(    ClusterStateResponse response,    XContentBuilder builder) throws Exception {
      MetaData metaData=response.getState().metaData();
      builder.startObject();
      final boolean isAllAliasesRequested=isAllOrWildcard(aliases);
      for (      IndexMetaData indexMetaData : metaData) {
        builder.startObject(indexMetaData.getIndex().getName(),XContentBuilder.FieldCaseConversion.NONE);
        builder.startObject("aliases");
        for (        ObjectCursor<AliasMetaData> cursor : indexMetaData.getAliases().values()) {
          if (isAllAliasesRequested || Regex.simpleMatch(aliases,cursor.value.alias())) {
            AliasMetaData.Builder.toXContent(cursor.value,builder,ToXContent.EMPTY_PARAMS);
          }
        }
        builder.endObject();
        builder.endObject();
      }
      builder.endObject();
      return new BytesRestResponse(OK,builder);
    }
  }
);
}
