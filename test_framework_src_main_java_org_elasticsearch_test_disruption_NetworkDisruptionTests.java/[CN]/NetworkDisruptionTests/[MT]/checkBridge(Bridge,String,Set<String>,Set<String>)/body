{
  for (int i=0; i < 10; i++) {
    assertTrue(topology.disrupt(randomFrom(partition1),randomFrom(partition2)));
    assertTrue(topology.disrupt(randomFrom(partition2),randomFrom(partition1)));
    assertFalse(topology.disrupt(randomFrom(partition1),randomFrom(partition1)));
    assertFalse(topology.disrupt(randomFrom(partition1),bridgeNode));
    assertFalse(topology.disrupt(bridgeNode,randomFrom(partition1)));
    assertFalse(topology.disrupt(randomFrom(partition2),randomFrom(partition2)));
    assertFalse(topology.disrupt(randomFrom(partition2),bridgeNode));
    assertFalse(topology.disrupt(bridgeNode,randomFrom(partition2)));
    assertFalse(topology.disrupt(randomAsciiOfLength(10),randomFrom(partition1)));
    assertFalse(topology.disrupt(randomAsciiOfLength(10),randomFrom(partition2)));
    assertFalse(topology.disrupt(randomAsciiOfLength(10),bridgeNode));
    assertFalse(topology.disrupt(randomFrom(partition1),randomAsciiOfLength(10)));
    assertFalse(topology.disrupt(randomFrom(partition2),randomAsciiOfLength(10)));
    assertFalse(topology.disrupt(bridgeNode,randomAsciiOfLength(10)));
  }
}
