{
  ArrayList<CommitPoint.FileInfo> indexFiles=new ArrayList<>();
  indexFiles.add(new CommitPoint.FileInfo("file1","file1_p",100,"ck1"));
  indexFiles.add(new CommitPoint.FileInfo("file2","file2_p",200,"ck2"));
  ArrayList<CommitPoint.FileInfo> translogFiles=new ArrayList<>();
  translogFiles.add(new CommitPoint.FileInfo("t_file1","t_file1_p",100,null));
  translogFiles.add(new CommitPoint.FileInfo("t_file2","t_file2_p",200,null));
  CommitPoint commitPoint=new CommitPoint(1,"test",CommitPoint.Type.GENERATED,indexFiles,translogFiles);
  byte[] serialized=CommitPoints.toXContent(commitPoint);
  logger.info("serialized commit_point {}",new String(serialized,Charsets.UTF_8));
  CommitPoint desCp=CommitPoints.fromXContent(serialized);
  assertThat(desCp.version(),equalTo(commitPoint.version()));
  assertThat(desCp.name(),equalTo(commitPoint.name()));
  assertThat(desCp.indexFiles().size(),equalTo(commitPoint.indexFiles().size()));
  for (int i=0; i < desCp.indexFiles().size(); i++) {
    assertThat(desCp.indexFiles().get(i).name(),equalTo(commitPoint.indexFiles().get(i).name()));
    assertThat(desCp.indexFiles().get(i).physicalName(),equalTo(commitPoint.indexFiles().get(i).physicalName()));
    assertThat(desCp.indexFiles().get(i).length(),equalTo(commitPoint.indexFiles().get(i).length()));
    assertThat(desCp.indexFiles().get(i).checksum(),equalTo(commitPoint.indexFiles().get(i).checksum()));
  }
  assertThat(desCp.translogFiles().size(),equalTo(commitPoint.translogFiles().size()));
  for (int i=0; i < desCp.indexFiles().size(); i++) {
    assertThat(desCp.translogFiles().get(i).name(),equalTo(commitPoint.translogFiles().get(i).name()));
    assertThat(desCp.translogFiles().get(i).physicalName(),equalTo(commitPoint.translogFiles().get(i).physicalName()));
    assertThat(desCp.translogFiles().get(i).length(),equalTo(commitPoint.translogFiles().get(i).length()));
    assertThat(desCp.translogFiles().get(i).checksum(),nullValue());
  }
}
