import argparse
import tempfile
import os
import signal
import shutil
import urllib
import urllib.request
import hashlib
import time
import socket
import json
import base64
from prepare_release_candidate import run
from http.client import HTTPConnection
DEFAULT_PLUGINS = ['analysis-icu', 'analysis-kuromoji', 'analysis-phonetic', 'analysis-smartcn', 'analysis-stempel', 'cloud-gce', 'delete-by-query', 'discovery-azure', 'discovery-ec2', 'discovery-multicast', 'lang-expression', 'lang-groovy', 'lang-javascript', 'lang-python', 'mapper-murmur3', 'mapper-size', 'repository-azure', 'repository-s3', 'store-smb']
try:
    JAVA_HOME = os.environ['JAVA_HOME']
except KeyError:
    raise RuntimeError("\n  Please set JAVA_HOME in the env before running release tool\n  On OSX use: export JAVA_HOME=`/usr/libexec/java_home -v '1.7*'`")
if (__name__ == '__main__'):
    parser = argparse.ArgumentParser(description='SmokeTests a Release Candidate from S3 staging repo')
    parser.add_argument('--version', '-v', dest='version', default=None, help='The Elasticsearch Version to smoke-tests', required=True)
    parser.add_argument('--hash', '-s', dest='hash', default=None, required=True, help='The sha1 short hash of the git commit to smoketest')
    parser.add_argument('--plugins', '-p', dest='plugins', default=[], required=False, type=parse_list, help='A list of additional plugins to smoketest')
    parser.add_argument('--fetch_url', '-u', dest='url', default=None, help='Fetched from the specified URL')
    parser.set_defaults(hash=None)
    parser.set_defaults(plugins=[])
    parser.set_defaults(version=None)
    parser.set_defaults(url=None)
    args = parser.parse_args()
    plugins = args.plugins
    version = args.version
    hash = args.hash
    url = args.url
    files = [(x % {'version': version, }) for x in ['org/elasticsearch/distribution/tar/elasticsearch/%(version)s/elasticsearch-%(version)s.tar.gz', 'org/elasticsearch/distribution/zip/elasticsearch/%(version)s/elasticsearch-%(version)s.zip', 'org/elasticsearch/distribution/deb/elasticsearch/%(version)s/elasticsearch-%(version)s.deb', 'org/elasticsearch/distribution/rpm/elasticsearch/%(version)s/elasticsearch-%(version)s.rpm']]
    verify_java_version('1.7')
    if url:
        download_url = url
    else:
        download_url = ('%s/%s-%s' % ('http://download.elasticsearch.org/elasticsearch/staging', version, hash))
    download_and_verify(version, hash, files, download_url, plugins=(DEFAULT_PLUGINS + plugins))
