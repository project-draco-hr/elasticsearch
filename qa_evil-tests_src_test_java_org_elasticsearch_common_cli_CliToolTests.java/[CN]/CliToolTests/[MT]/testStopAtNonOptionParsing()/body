{
  final CliToolConfig.Cmd lenientCommand=cmd("lenient",CliTool.Command.Exit.class).stopAtNonOption(true).build();
  final CliToolConfig.Cmd strictCommand=cmd("strict",CliTool.Command.Exit.class).stopAtNonOption(false).build();
  final CliToolConfig config=CliToolConfig.config("elasticsearch",CliTool.class).cmds(lenientCommand,strictCommand).build();
  final CaptureOutputTerminal terminal=new CaptureOutputTerminal();
  final CliTool cliTool=new CliTool(config,terminal){
    @Override protected Command parse(    String cmdName,    CommandLine cli) throws Exception {
      return new NamedCommand(cmdName,terminal){
        @Override public ExitStatus execute(        Settings settings,        Environment env) throws Exception {
          return OK;
        }
      }
;
    }
  }
;
  assertStatus(cliTool.execute(args("lenient --verbose")),OK);
  assertStatus(cliTool.execute(args("lenient -v")),OK);
  assertStatus(cliTool.execute(args("lenient --unknown")),OK);
  assertStatus(cliTool.execute(args("lenient -u")),OK);
  assertStatus(cliTool.execute(args("strict --unknown")),USAGE);
  assertThat(terminal.getTerminalOutput(),hasItem(containsString("Unrecognized option: --unknown")));
  terminal.getTerminalOutput().clear();
  assertStatus(cliTool.execute(args("strict -u")),USAGE);
  assertThat(terminal.getTerminalOutput(),hasItem(containsString("Unrecognized option: -u")));
}
