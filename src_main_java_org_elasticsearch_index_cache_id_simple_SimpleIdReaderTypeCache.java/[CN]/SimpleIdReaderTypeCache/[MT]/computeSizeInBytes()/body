{
  long sizeInBytes=0;
  sizeInBytes+=RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (idToDoc._valuesSize() * RamUsageEstimator.NUM_BYTES_INT);
  for (  Object o : idToDoc._set) {
    if (o == TObjectHash.FREE || o == TObjectHash.REMOVED) {
      sizeInBytes+=RamUsageEstimator.NUM_BYTES_OBJECT_REF;
    }
 else {
      HashedBytesArray bytesArray=(HashedBytesArray)o;
      sizeInBytes+=RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + (bytesArray.length() + RamUsageEstimator.NUM_BYTES_INT);
    }
  }
  sizeInBytes+=RamUsageEstimator.NUM_BYTES_ARRAY_HEADER + (RamUsageEstimator.NUM_BYTES_OBJECT_REF * docIdToId.length);
  for (  HashedBytesArray bytesArray : parentIdsValues) {
    if (bytesArray == null) {
      sizeInBytes+=RamUsageEstimator.NUM_BYTES_OBJECT_REF;
    }
 else {
      sizeInBytes+=RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + (bytesArray.length() + RamUsageEstimator.NUM_BYTES_INT);
    }
  }
  sizeInBytes+=RamUsageEstimator.sizeOf(parentIdsOrdinals);
  return sizeInBytes;
}
