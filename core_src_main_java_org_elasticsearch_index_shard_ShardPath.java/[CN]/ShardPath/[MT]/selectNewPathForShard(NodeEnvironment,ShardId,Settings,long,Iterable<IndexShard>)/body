{
  final Path dataPath;
  final Path statePath;
  final String indexUUID=indexSettings.get(IndexMetaData.SETTING_INDEX_UUID,IndexMetaData.INDEX_UUID_NA_VALUE);
  if (NodeEnvironment.hasCustomDataPath(indexSettings)) {
    dataPath=env.resolveCustomLocation(indexSettings,shardId);
    statePath=env.nodePaths()[0].resolve(shardId);
  }
 else {
    Map<Path,Long> estReservedBytes=getEstimatedReservedBytes(env,avgShardSizeInBytes,shards);
    final NodeEnvironment.NodePath[] paths=env.nodePaths();
    NodeEnvironment.NodePath bestPath=null;
    long maxUsableBytes=Long.MIN_VALUE;
    for (    NodeEnvironment.NodePath nodePath : paths) {
      FileStore fileStore=nodePath.fileStore;
      long usableBytes=fileStore.getUsableSpace();
      Long reservedBytes=estReservedBytes.get(nodePath.path);
      if (reservedBytes != null) {
        usableBytes-=reservedBytes;
      }
      if (usableBytes > maxUsableBytes) {
        maxUsableBytes=usableBytes;
        bestPath=nodePath;
      }
    }
    statePath=bestPath.resolve(shardId);
    dataPath=statePath;
  }
  return new ShardPath(dataPath,statePath,indexUUID,shardId);
}
