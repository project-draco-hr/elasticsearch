{
  final ClusterRerouteRequest clusterRerouteRequest=Requests.clusterRerouteRequest();
  clusterRerouteRequest.listenerThreaded(false);
  clusterRerouteRequest.dryRun(request.paramAsBoolean("dry_run",clusterRerouteRequest.dryRun()));
  clusterRerouteRequest.timeout(request.paramAsTime("timeout",clusterRerouteRequest.timeout()));
  clusterRerouteRequest.masterNodeTimeout(request.paramAsTime("master_timeout",clusterRerouteRequest.masterNodeTimeout()));
  if (request.hasContent()) {
    try {
      clusterRerouteRequest.source(request.content());
    }
 catch (    Exception e) {
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.warn("Failed to send response",e1);
      }
      return;
    }
  }
  client.admin().cluster().reroute(clusterRerouteRequest,new AcknowledgedRestResponseActionListener<ClusterRerouteResponse>(request,channel,logger){
    @Override protected void addCustomFields(    XContentBuilder builder,    ClusterRerouteResponse response) throws IOException {
      builder.startObject("state");
      if (request.param("filter_metadata") == null) {
        request.params().put("filter_metadata","true");
      }
      response.getState().settingsFilter(settingsFilter).toXContent(builder,request);
      builder.endObject();
    }
    @Override public void onFailure(    Throwable e){
      if (logger.isDebugEnabled()) {
        logger.debug("failed to handle cluster reroute",e);
      }
      super.onFailure(e);
    }
  }
);
}
