{
  Tuple<Settings,Environment> tuple=InternalSettingsPerparer.prepareSettings(pSettings,loadConfigSettings);
  Settings settings=settings=settingsBuilder().put(tuple.v1()).put("network.server",false).put("node.client",true).build();
  this.environment=tuple.v2();
  this.pluginsService=new PluginsService(tuple.v1(),tuple.v2());
  this.settings=pluginsService.updatedSettings();
  ModulesBuilder modules=new ModulesBuilder();
  modules.add(new PluginsModule(settings,pluginsService));
  modules.add(new EnvironmentModule(environment));
  modules.add(new SettingsModule(settings));
  modules.add(new NetworkModule());
  modules.add(new ClusterNameModule(settings));
  modules.add(new ThreadPoolModule(settings));
  modules.add(new TransportSearchModule());
  modules.add(new TransportModule(settings));
  modules.add(new ActionModule(true));
  modules.add(new ClientTransportModule());
  injector=modules.createInjector();
  injector.getInstance(TransportService.class).start();
  nodesService=injector.getInstance(TransportClientNodesService.class);
  internalClient=injector.getInstance(InternalTransportClient.class);
}
