{
  Tuple<Settings,Environment> tuple=InternalSettingsPreparer.prepareSettings(pSettings,loadConfigSettings);
  Settings settings=settingsBuilder().put(NettyTransport.PING_SCHEDULE,"5s").put(tuple.v1()).put("network.server",false).put("node.client",true).put(CLIENT_TYPE_SETTING,CLIENT_TYPE).build();
  this.environment=tuple.v2();
  this.pluginsService=new PluginsService(settings,tuple.v2());
  this.settings=pluginsService.updatedSettings();
  Version version=Version.CURRENT;
  CompressorFactory.configure(this.settings);
  ModulesBuilder modules=new ModulesBuilder();
  modules.add(new Version.Module(version));
  modules.add(new PluginsModule(this.settings,pluginsService));
  modules.add(new EnvironmentModule(environment));
  modules.add(new SettingsModule(this.settings));
  modules.add(new NetworkModule());
  modules.add(new ClusterNameModule(this.settings));
  modules.add(new ThreadPoolModule(this.settings));
  modules.add(new TransportSearchModule());
  modules.add(new TransportModule(this.settings));
  modules.add(new ActionModule(true));
  modules.add(new ClientTransportModule());
  modules.add(new CircuitBreakerModule(this.settings));
  injector=modules.createInjector();
  injector.getInstance(TransportService.class).start();
  nodesService=injector.getInstance(TransportClientNodesService.class);
  internalClient=injector.getInstance(InternalTransportClient.class);
}
