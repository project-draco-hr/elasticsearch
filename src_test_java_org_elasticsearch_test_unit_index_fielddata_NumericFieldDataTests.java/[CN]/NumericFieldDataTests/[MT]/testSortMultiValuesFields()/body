{
  fillExtendedMvSet();
  IndexFieldData indexFieldData=getForField("value");
  IndexSearcher searcher=new IndexSearcher(DirectoryReader.open(writer,true));
  TopFieldDocs topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null))));
  assertThat(topDocs.totalHits,equalTo(8));
  assertThat(topDocs.scoreDocs.length,equalTo(8));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(7));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[0]).fields[0]).intValue(),equalTo(-10));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(0));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[1]).fields[0]).intValue(),equalTo(2));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(2));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[2]).fields[0]).intValue(),equalTo(3));
  assertThat(topDocs.scoreDocs[3].doc,equalTo(3));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[3]).fields[0]).intValue(),equalTo(4));
  assertThat(topDocs.scoreDocs[4].doc,equalTo(4));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[4]).fields[0]).intValue(),equalTo(6));
  assertThat(topDocs.scoreDocs[5].doc,equalTo(6));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[5]).fields[0]).intValue(),equalTo(8));
  assertThat(topDocs.scoreDocs[6].doc,equalTo(1));
  assertThat(topDocs.scoreDocs[7].doc,equalTo(5));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null),true)));
  assertThat(topDocs.totalHits,equalTo(8));
  assertThat(topDocs.scoreDocs.length,equalTo(8));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(6));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[0]).fields[0]).intValue(),equalTo(10));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(4));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[1]).fields[0]).intValue(),equalTo(8));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(3));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[2]).fields[0]).intValue(),equalTo(6));
  assertThat(topDocs.scoreDocs[3].doc,equalTo(0));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[3]).fields[0]).intValue(),equalTo(4));
  assertThat(topDocs.scoreDocs[4].doc,equalTo(2));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[4]).fields[0]).intValue(),equalTo(3));
  assertThat(topDocs.scoreDocs[5].doc,equalTo(7));
  assertThat(((Number)((FieldDoc)topDocs.scoreDocs[5]).fields[0]).intValue(),equalTo(-8));
  assertThat(topDocs.scoreDocs[6].doc,equalTo(1));
  assertThat(topDocs.scoreDocs[7].doc,equalTo(5));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource("_first"))));
  assertThat(topDocs.totalHits,equalTo(8));
  assertThat(topDocs.scoreDocs.length,equalTo(8));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(1));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(5));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(7));
  assertThat(topDocs.scoreDocs[3].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[4].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[5].doc,equalTo(3));
  assertThat(topDocs.scoreDocs[6].doc,equalTo(4));
  assertThat(topDocs.scoreDocs[7].doc,equalTo(6));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource("_first"),true)));
  assertThat(topDocs.totalHits,equalTo(8));
  assertThat(topDocs.scoreDocs.length,equalTo(8));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(1));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(5));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(6));
  assertThat(topDocs.scoreDocs[3].doc,equalTo(4));
  assertThat(topDocs.scoreDocs[4].doc,equalTo(3));
  assertThat(topDocs.scoreDocs[5].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[6].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[7].doc,equalTo(7));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource("-9"))));
  assertThat(topDocs.totalHits,equalTo(8));
  assertThat(topDocs.scoreDocs.length,equalTo(8));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(7));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(1));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(5));
  assertThat(topDocs.scoreDocs[3].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[4].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[5].doc,equalTo(3));
  assertThat(topDocs.scoreDocs[6].doc,equalTo(4));
  assertThat(topDocs.scoreDocs[7].doc,equalTo(6));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource("9"),true)));
  assertThat(topDocs.totalHits,equalTo(8));
  assertThat(topDocs.scoreDocs.length,equalTo(8));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(6));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(1));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(5));
  assertThat(topDocs.scoreDocs[3].doc,equalTo(4));
  assertThat(topDocs.scoreDocs[4].doc,equalTo(3));
  assertThat(topDocs.scoreDocs[5].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[6].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[7].doc,equalTo(7));
}
