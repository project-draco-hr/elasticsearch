{
  IndicesMemoryCleaner.TranslogCleanResult translogCleanResult=indicesMemoryCleaner.cleanTranslog(translogNumberOfOperationsThreshold);
  if (translogCleanResult.cleanedShards() > 0) {
    long totalClean=totalCleans.incrementAndGet();
    logger.debug("[" + totalClean + "] Translog Clean: "+ translogCleanResult);
  }
  long upperMemory=maxMemory.bytes();
  long totalMemory=totalMemory();
  long usedMemory=totalMemory - freeMemory();
  long upperThresholdMemory=(long)(upperMemory * upperMemoryThreshold);
  if (usedMemory - upperThresholdMemory <= 0) {
    gcCounter=0;
    performedClean=false;
    cleanCounter=0;
    return;
  }
  if (performedClean) {
    if (++cleanCounter < cleanThreshold) {
      return;
    }
  }
  long totalClean=totalCleans.incrementAndGet();
  long lowerThresholdMemory=(long)(upperMemory * lowerMemoryThreshold);
  long memoryToClean=usedMemory - lowerThresholdMemory;
  if (logger.isDebugEnabled()) {
    StringBuilder sb=new StringBuilder();
    sb.append('[').append(totalClean).append("]: ");
    sb.append("Cleaning, memoryToClean[").append(new SizeValue(memoryToClean)).append(']');
    sb.append(", lowerMemoryThreshold[").append(new SizeValue(lowerThresholdMemory)).append(']');
    sb.append(", upperMemoryThreshold[").append(new SizeValue(upperThresholdMemory)).append(']');
    sb.append(", usedMemory[").append(new SizeValue(usedMemory)).append(']');
    sb.append(", totalMemory[").append(new SizeValue(totalMemory)).append(']');
    sb.append(", maxMemory[").append(maxMemory).append(']');
    logger.debug(sb.toString());
  }
  IndicesMemoryCleaner.MemoryCleanResult memoryCleanResult=indicesMemoryCleaner.cleanMemory(memoryToClean,minimumFlushableSizeToClean);
  if (logger.isDebugEnabled()) {
    logger.debug("[" + totalClean + "] Memory Clean: "+ memoryCleanResult);
  }
  performedClean=true;
  cleanCounter=0;
  if (++gcCounter >= gcThreshold) {
    long totalGc=totalGCs.incrementAndGet();
    logger.debug("[" + totalGc + "]: Running GC after ["+ gcCounter+ "] memory clean swipes");
    System.gc();
    gcCounter=0;
  }
}
