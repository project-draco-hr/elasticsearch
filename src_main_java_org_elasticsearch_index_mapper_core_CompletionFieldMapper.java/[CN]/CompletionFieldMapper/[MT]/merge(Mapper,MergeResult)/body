{
  super.merge(mergeWith,mergeResult);
  CompletionFieldMapper fieldMergeWith=(CompletionFieldMapper)mergeWith;
  if (payloads != fieldMergeWith.payloads) {
    mergeResult.addConflict("mapper [" + names.fullName() + "] has different payload values");
  }
  if (preservePositionIncrements != fieldMergeWith.preservePositionIncrements) {
    mergeResult.addConflict("mapper [" + names.fullName() + "] has different 'preserve_position_increments' values");
  }
  if (preserveSeparators != fieldMergeWith.preserveSeparators) {
    mergeResult.addConflict("mapper [" + names.fullName() + "] has different 'preserve_separators' values");
  }
  if (!ContextMapping.mappingsAreEqual(getContextMapping(),fieldMergeWith.getContextMapping())) {
    mergeResult.addConflict("mapper [" + names.fullName() + "] has different 'context_mapping' values");
  }
  if (!mergeResult.simulate()) {
    this.maxInputLength=fieldMergeWith.maxInputLength;
  }
}
