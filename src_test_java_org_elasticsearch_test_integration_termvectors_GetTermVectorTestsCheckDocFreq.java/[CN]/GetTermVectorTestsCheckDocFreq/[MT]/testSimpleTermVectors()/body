{
  run(addMapping(prepareCreate("test"),"type1",new Object[]{"field","type","string","term_vector","with_positions_offsets_payloads","analyzer","tv_test"}).setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",1).put("index.analysis.analyzer.tv_test.tokenizer","whitespace").put("index.number_of_replicas",0).putArray("index.analysis.analyzer.tv_test.filter","type_as_payload","lowercase")));
  ensureGreen();
  int numDocs=15;
  for (int i=0; i < numDocs; i++) {
    client().prepareIndex("test","type1",Integer.toString(i)).setSource(XContentFactory.jsonBuilder().startObject().field("field","the quick brown fox jumps over the lazy dog").endObject()).execute().actionGet();
    refresh();
  }
  String[] values={"brown","dog","fox","jumps","lazy","over","quick","the"};
  int[] freq={1,1,1,1,1,1,1,2};
  int[][] pos={{2},{8},{3},{4},{7},{5},{1},{0,6}};
  int[][] startOffset={{10},{40},{16},{20},{35},{26},{4},{0,31}};
  int[][] endOffset={{15},{43},{19},{25},{39},{30},{9},{3,34}};
  for (int i=0; i < numDocs; i++) {
    checkAllInfo(numDocs,values,freq,pos,startOffset,endOffset,i);
    checkWithoutTermStatistics(numDocs,values,freq,pos,startOffset,endOffset,i);
    checkWithoutFieldStatistics(numDocs,values,freq,pos,startOffset,endOffset,i);
  }
}
