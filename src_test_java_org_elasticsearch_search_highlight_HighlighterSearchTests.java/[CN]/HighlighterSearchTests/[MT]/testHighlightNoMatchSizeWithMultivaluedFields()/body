{
  prepareCreate("test").addMapping("type1","text","type=string," + randomStoreField() + "term_vector=with_positions_offsets").get();
  ensureGreen();
  String text1="I am pretty long so some of me should get cut off";
  String text2="I am short";
  index("test","type1","1","text",new String[]{text1,text2});
  refresh();
  HighlightBuilder.Field field=new HighlightBuilder.Field("text").fragmentSize(21).numOfFragments(1).highlighterType("plain").noMatchSize(21);
  SearchResponse response=client().prepareSearch("test").addHighlightedField(field).get();
  assertHighlight(response,0,"text",0,equalTo("I am pretty long so"));
  field.highlighterType("fvh");
  response=client().prepareSearch("test").addHighlightedField(field).get();
  assertHighlight(response,0,"text",0,equalTo("I am pretty long so some"));
  index("test","type1","2","text",new String[]{"",text2});
  refresh();
  field.highlighterType("plain");
  response=client().prepareSearch("test").setQuery(QueryBuilders.idsQuery("type1").addIds("2")).addHighlightedField(field).get();
  assertNotHighlighted(response,0,"text");
  field.highlighterType("fvh");
  response=client().prepareSearch("test").addHighlightedField(field).get();
  assertNotHighlighted(response,0,"text");
  index("test","type1","3","text",new String[]{});
  refresh();
  field.highlighterType("plain");
  response=client().prepareSearch("test").setQuery(QueryBuilders.idsQuery("type1").addIds("3")).addHighlightedField(field).get();
  assertNotHighlighted(response,0,"text");
  field.highlighterType("fvh");
  response=client().prepareSearch("test").addHighlightedField(field).get();
  assertNotHighlighted(response,0,"text");
  index("test","type1","4");
  refresh();
  field.highlighterType("plain");
  response=client().prepareSearch("test").setQuery(QueryBuilders.idsQuery("type1").addIds("4")).addHighlightedField(field).get();
  assertNotHighlighted(response,0,"text");
  field.highlighterType("fvh");
  response=client().prepareSearch("test").addHighlightedField(field).get();
  assertNotHighlighted(response,0,"text");
  field=new HighlightBuilder.Field("unmapped").highlighterType("plain").noMatchSize(21);
  response=client().prepareSearch("test").addHighlightedField(field).get();
  assertNotHighlighted(response,0,"text");
  field.highlighterType("fvh");
  response=client().prepareSearch("test").addHighlightedField(field).get();
  assertNotHighlighted(response,0,"text");
}
