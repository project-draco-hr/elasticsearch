{
  assertAcked(client().admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",2)).addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("title").field("type","string").field("store","yes").field("index_options","docs").endObject().endObject().endObject().endObject()));
  ensureGreen();
  IndexRequestBuilder[] indexRequestBuilders=new IndexRequestBuilder[5];
  for (int i=0; i < indexRequestBuilders.length; i++) {
    indexRequestBuilders[i]=client().prepareIndex("test","type1",Integer.toString(i)).setSource("title","This is a test for the postings highlighter");
  }
  indexRandom(true,indexRequestBuilders);
  SearchResponse search=client().prepareSearch().setQuery(matchQuery("title","this is a test")).addHighlightedField("title").get();
  assertNoFailures(search);
  search=client().prepareSearch().setQuery(matchQuery("title","this is a test")).addHighlightedField("title").setHighlighterType("postings-highlighter").get();
  assertThat(search.getFailedShards(),equalTo(2));
  for (  ShardSearchFailure shardSearchFailure : search.getShardFailures()) {
    assertThat(shardSearchFailure.reason(),containsString("the field [title] should be indexed with positions and offsets in the postings list to be used with postings highlighter"));
  }
  search=client().prepareSearch().setQuery(matchQuery("title","this is a test")).addHighlightedField("title").setHighlighterType("postings").get();
  assertThat(search.getFailedShards(),equalTo(2));
  for (  ShardSearchFailure shardSearchFailure : search.getShardFailures()) {
    assertThat(shardSearchFailure.reason(),containsString("the field [title] should be indexed with positions and offsets in the postings list to be used with postings highlighter"));
  }
  search=client().prepareSearch().setQuery(matchQuery("title","this is a test")).addHighlightedField("tit*").setHighlighterType("postings").get();
  assertThat(search.getFailedShards(),equalTo(2));
  for (  ShardSearchFailure shardSearchFailure : search.getShardFailures()) {
    assertThat(shardSearchFailure.reason(),containsString("the field [title] should be indexed with positions and offsets in the postings list to be used with postings highlighter"));
  }
}
