{
  client().admin().indices().prepareCreate("test").addMapping("type1",type1PostingsffsetsMapping()).get();
  ensureGreen();
  client().prepareIndex("test","type1").setSource("field1","this is a test","field2","The quick brown fox jumps over the lazy dog").setRefresh(true).get();
  logger.info("--> highlighting and searching on field1");
  SearchSourceBuilder source=searchSource().query(termQuery("field1","test")).highlight(highlight().field("field1").preTags("<xxx>").postTags("</xxx>"));
  SearchResponse searchResponse=client().search(searchRequest("test").source(source)).actionGet();
  assertHitCount(searchResponse,1l);
  assertThat(searchResponse.getHits().getAt(0).highlightFields().get("field1").fragments()[0].string(),equalTo("this is a <xxx>test</xxx>"));
  logger.info("--> searching on _all, highlighting on field1");
  source=searchSource().query(termQuery("_all","test")).highlight(highlight().field("field1").preTags("<xxx>").postTags("</xxx>"));
  searchResponse=client().search(searchRequest("test").source(source)).actionGet();
  assertHitCount(searchResponse,1l);
  assertThat(searchResponse.getHits().getAt(0).highlightFields().get("field1").fragments()[0].string(),equalTo("this is a <xxx>test</xxx>"));
  logger.info("--> searching on _all, highlighting on field2");
  source=searchSource().query(termQuery("_all","quick")).highlight(highlight().field("field2").order("score").preTags("<xxx>").postTags("</xxx>"));
  searchResponse=client().search(searchRequest("test").source(source)).actionGet();
  assertHitCount(searchResponse,1l);
  assertThat(searchResponse.getHits().getAt(0).highlightFields().get("field2").fragments()[0].string(),equalTo("The <xxx>quick</xxx> brown fox jumps over the lazy dog"));
  logger.info("--> searching on _all, highlighting on field2");
  source=searchSource().query(prefixQuery("_all","qui")).highlight(highlight().field("field2").preTags("<xxx>").postTags("</xxx>"));
  searchResponse=client().search(searchRequest("test").source(source)).actionGet();
  assertHitCount(searchResponse,1l);
  assertThat(searchResponse.getHits().getAt(0).highlightFields().size(),equalTo(0));
  logger.info("--> searching on _all, highlighting on field2, falling back to the plain highlighter");
  source=searchSource().query(prefixQuery("_all","qui")).highlight(highlight().field("field2").preTags("<xxx>").postTags("</xxx>").highlighterType("highlighter"));
  searchResponse=client().search(searchRequest("test").source(source)).actionGet();
  assertHitCount(searchResponse,1l);
  assertThat(searchResponse.getHits().getAt(0).highlightFields().get("field2").fragments()[0].string(),equalTo("The <xxx>quick</xxx> brown fox jumps over the lazy dog"));
}
