{
  client().admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",2)).addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("_source").field("enabled",false).endObject().startObject("properties").startObject("title").field("type","multi_field").startObject("fields").startObject("title").field("type","string").field("store","yes").field("index_options","offsets").field("analyzer","classic").endObject().startObject("key").field("type","string").field("store","yes").field("index_options","offsets").field("analyzer","whitespace").endObject().endObject().endObject().endObject().endObject().endObject()).execute().actionGet();
  ensureGreen();
  client().prepareIndex("test","type1","1").setSource("title","this is a test . Second sentence.").get();
  refresh();
  SearchResponse searchResponse=client().prepareSearch().setQuery(matchQuery("title","This is a Test")).addHighlightedField("title").get();
  assertHitCount(searchResponse,1l);
  SearchHit hit=searchResponse.getHits().getAt(0);
  assertThat(hit.source(),nullValue());
  assertThat(hit.highlightFields().get("title").fragments()[0].string(),equalTo("this is a <em>test</em> ."));
  searchResponse=client().prepareSearch().setQuery(matchQuery("title.key","this is a test")).addHighlightedField("title.key").get();
  assertHitCount(searchResponse,1l);
  hit=searchResponse.getHits().getAt(0);
  assertThat(hit.highlightFields().get("title.key").fragments()[0].string(),equalTo("<em>this</em> <em>is</em> <em>a</em> <em>test</em> ."));
}
