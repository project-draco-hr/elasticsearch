{
  client().admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",2)).addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("title").field("type","string").field("store","no").field("index_options","offsets").endObject().startObject("attachments").startObject("properties").startObject("body").field("type","string").field("store","no").field("index_options","offsets").endObject().endObject().endObject().endObject().endObject().endObject()).execute().actionGet();
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForYellowStatus().execute().actionGet();
  for (int i=0; i < 5; i++) {
    client().prepareIndex("test","type1",Integer.toString(i)).setSource(XContentFactory.jsonBuilder().startObject().array("title","This is a test on the highlighting bug present in elasticsearch. Hopefully it works.","This is the second bug to perform highlighting on.").startArray("attachments").startObject().field("body","attachment for this test").endObject().startObject().field("body","attachment 2").endObject().endArray().endObject()).setRefresh(true).execute().actionGet();
  }
  SearchResponse search=client().prepareSearch().setQuery(matchQuery("title","bug")).addHighlightedField("title",-1,0).execute().actionGet();
  assertNoFailures(search);
  assertThat(search.getHits().totalHits(),equalTo(5l));
  assertThat(search.getHits().hits().length,equalTo(5));
  for (  SearchHit hit : search.getHits()) {
    Text[] fragments=hit.highlightFields().get("title").fragments();
    assertThat(fragments.length,equalTo(2));
    assertThat(fragments[0].string(),equalTo("This is a test on the highlighting <em>bug</em> present in elasticsearch. Hopefully it works."));
    assertThat(fragments[1].string(),equalTo("This is the second <em>bug</em> to perform highlighting on."));
  }
  search=client().prepareSearch().setQuery(matchQuery("title","bug")).addHighlightedField("title").execute().actionGet();
  assertNoFailures(search);
  assertThat(search.getHits().totalHits(),equalTo(5l));
  assertThat(search.getHits().hits().length,equalTo(5));
  for (  SearchHit hit : search.getHits()) {
    Text[] fragments=hit.highlightFields().get("title").fragments();
    assertThat(fragments.length,equalTo(2));
    assertThat(fragments[0].string(),equalTo("This is a test on the highlighting <em>bug</em> present in elasticsearch."));
    assertThat(fragments[1].string(),equalTo("This is the second <em>bug</em> to perform highlighting on."));
  }
  search=client().prepareSearch().setQuery(matchQuery("attachments.body","attachment")).addHighlightedField("attachments.body",-1,2).execute().actionGet();
  assertNoFailures(search);
  assertThat(search.getHits().totalHits(),equalTo(5l));
  assertThat(search.getHits().hits().length,equalTo(5));
  for (  SearchHit hit : search.getHits()) {
    assertThat(hit.highlightFields().get("attachments.body").fragments()[0].string(),equalTo("<em>attachment</em> for this test"));
    assertThat(hit.highlightFields().get("attachments.body").fragments()[1].string(),equalTo("<em>attachment</em> 2"));
  }
}
