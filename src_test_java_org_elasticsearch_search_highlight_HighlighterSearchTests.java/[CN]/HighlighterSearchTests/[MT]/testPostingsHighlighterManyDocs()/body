{
  assertAcked(prepareCreate("test").addMapping("type1",type1PostingsffsetsMapping()));
  ensureGreen();
  int COUNT=between(20,100);
  Map<String,String> prefixes=new HashMap<String,String>(COUNT);
  IndexRequestBuilder[] indexRequestBuilders=new IndexRequestBuilder[COUNT];
  for (int i=0; i < COUNT; i++) {
    String prefix=randomAsciiOfLengthBetween(5,30);
    prefixes.put(String.valueOf(i),prefix);
    indexRequestBuilders[i]=client().prepareIndex("test","type1",Integer.toString(i)).setSource("field1","Sentence " + prefix + " test. Sentence two.");
  }
  logger.info("--> indexing docs");
  indexRandom(true,indexRequestBuilders);
  logger.info("--> searching explicitly on field1 and highlighting on it");
  SearchResponse searchResponse=client().prepareSearch().setSize(COUNT).setQuery(termQuery("field1","test")).addHighlightedField("field1").get();
  assertHitCount(searchResponse,(long)COUNT);
  assertThat(searchResponse.getHits().hits().length,equalTo(COUNT));
  for (  SearchHit hit : searchResponse.getHits()) {
    String prefix=prefixes.get(hit.id());
    assertHighlight(hit,"field1",0,1,equalTo("Sentence " + prefix + " <em>test</em>."));
  }
  logger.info("--> searching explicitly on field1 and highlighting on it, with DFS");
  searchResponse=client().prepareSearch().setSearchType(SearchType.DFS_QUERY_THEN_FETCH).setSize(COUNT).setQuery(termQuery("field1","test")).addHighlightedField("field1").get();
  assertHitCount(searchResponse,(long)COUNT);
  assertThat(searchResponse.getHits().hits().length,equalTo(COUNT));
  for (  SearchHit hit : searchResponse.getHits()) {
    String prefix=prefixes.get(hit.id());
    assertHighlight(hit,"field1",0,1,equalTo("Sentence " + prefix + " <em>test</em>."));
  }
}
