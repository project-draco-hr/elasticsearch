{
  client().admin().indices().prepareCreate("test").addMapping("type1",type1PostingsffsetsMapping()).get();
  ensureGreen();
  int COUNT=between(20,100);
  logger.info("--> indexing docs");
  for (int i=0; i < COUNT; i++) {
    client().prepareIndex("test","type1",Integer.toString(i)).setSource("field1","Sentence test " + i + ". Sentence two.").get();
  }
  refresh();
  logger.info("--> searching explicitly on field1 and highlighting on it");
  SearchResponse searchResponse=client().prepareSearch().setSize(COUNT).setQuery(termQuery("field1","test")).addHighlightedField("field1").get();
  assertHitCount(searchResponse,(long)COUNT);
  assertThat(searchResponse.getHits().hits().length,equalTo(COUNT));
  for (  SearchHit hit : searchResponse.getHits()) {
    assertThat(hit.highlightFields().get("field1").fragments()[0].string(),equalTo("Sentence <em>test</em> " + hit.id() + "."));
  }
  logger.info("--> searching explicitly on field1 and highlighting on it, with DFS");
  searchResponse=client().prepareSearch().setSearchType(SearchType.DFS_QUERY_THEN_FETCH).setSize(COUNT).setQuery(termQuery("field1","test")).addHighlightedField("field1").get();
  assertHitCount(searchResponse,(long)COUNT);
  assertThat(searchResponse.getHits().hits().length,equalTo(COUNT));
  for (  SearchHit hit : searchResponse.getHits()) {
    assertThat(hit.highlightFields().get("field1").fragments()[0].string(),equalTo("Sentence <em>test</em> " + hit.id() + "."));
  }
}
