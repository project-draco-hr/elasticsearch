{
  client().admin().indices().prepareCreate("test").setSettings("{\"number_of_replicas\": 1}").get();
  ensureGreen();
  client().prepareIndex("test","type1").setSource("field1","value1").execute().actionGet();
  refresh();
  SearchResponse searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setPreference("_local").execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setPreference("_local").execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setPreference("_primary").execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setPreference("_primary").execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setPreference("_replica").execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setPreference("_replica").execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setPreference("_replica_first").execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setPreference("_replica_first").execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setPreference("1234").execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setPreference("1234").execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
}
