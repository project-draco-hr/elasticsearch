{
  if (disableSites) {
    channel.sendResponse(new StringRestResponse(FORBIDDEN));
    return;
  }
  if (request.method() == RestRequest.Method.OPTIONS) {
    StringRestResponse response=new StringRestResponse(OK);
    channel.sendResponse(response);
    return;
  }
  if (request.method() != RestRequest.Method.GET) {
    channel.sendResponse(new StringRestResponse(FORBIDDEN));
    return;
  }
  String path=request.rawPath().substring("/_plugin/".length());
  int i1=path.indexOf('/');
  String pluginName;
  String sitePath;
  if (i1 == -1) {
    if (!Strings.hasText(path)) {
      try {
        XContentBuilder json=jsonBuilder();
        if (request.hasParam("pretty")) {
          json.prettyPrint();
        }
        json.startObject().startArray("sites");
        for (        String plugin : PluginsHelper.sitePlugins(environment)) {
          json.startObject().field("name",plugin).field("url","/_plugin/" + plugin + "/").endObject();
        }
        json.endArray().endObject();
        channel.sendResponse(new BytesRestResponse(json.bytes().toBytes(),guessMimeType(guessMimeType("index.json"))));
      }
 catch (      IOException e) {
        channel.sendResponse(new StringRestResponse(INTERNAL_SERVER_ERROR));
      }
      return;
    }
    channel.sendResponse(new HttpRedirectRestResponse(request.rawPath() + "/"));
    return;
  }
 else {
    pluginName=path.substring(0,i1);
    sitePath=path.substring(i1 + 1);
  }
  if (sitePath.length() == 0) {
    sitePath="/index.html";
  }
  sitePath=sitePath.replace('/',File.separatorChar);
  File siteFile=new File(new File(environment.pluginsFile(),pluginName),"_site");
  File file=new File(siteFile,sitePath);
  if (!file.exists() || file.isHidden()) {
    channel.sendResponse(new StringRestResponse(NOT_FOUND));
    return;
  }
  if (!file.isFile()) {
    channel.sendResponse(new StringRestResponse(FORBIDDEN));
    return;
  }
  if (!file.getAbsolutePath().startsWith(siteFile.getAbsolutePath())) {
    channel.sendResponse(new StringRestResponse(FORBIDDEN));
    return;
  }
  try {
    byte[] data=Streams.copyToByteArray(file);
    channel.sendResponse(new BytesRestResponse(data,guessMimeType(sitePath)));
  }
 catch (  IOException e) {
    channel.sendResponse(new StringRestResponse(INTERNAL_SERVER_ERROR));
  }
}
