{
  if (disableSites) {
    channel.sendResponse(new BytesRestResponse(FORBIDDEN));
    return;
  }
  if (request.method() == RestRequest.Method.OPTIONS) {
    channel.sendResponse(new BytesRestResponse(OK));
    return;
  }
  if (request.method() != RestRequest.Method.GET) {
    channel.sendResponse(new BytesRestResponse(FORBIDDEN));
    return;
  }
  String path=request.rawPath().substring("/_plugin/".length());
  int i1=path.indexOf('/');
  String pluginName;
  String sitePath;
  if (i1 == -1) {
    pluginName=path;
    sitePath=null;
    String redirectUrl=request.rawPath() + "/";
    BytesRestResponse restResponse=new BytesRestResponse(RestStatus.MOVED_PERMANENTLY,"text/html","<head><meta http-equiv=\"refresh\" content=\"0; URL=" + redirectUrl + "></head>");
    restResponse.addHeader("Location",redirectUrl);
    channel.sendResponse(restResponse);
    return;
  }
 else {
    pluginName=path.substring(0,i1);
    sitePath=path.substring(i1 + 1);
  }
  if (sitePath.length() == 0) {
    sitePath="/index.html";
  }
  sitePath=sitePath.replace('/',File.separatorChar);
  File siteFile=new File(new File(environment.pluginsFile(),pluginName),"_site");
  File file=new File(siteFile,sitePath);
  if (!file.exists() || file.isHidden()) {
    channel.sendResponse(new BytesRestResponse(NOT_FOUND));
    return;
  }
  if (!file.isFile()) {
    if (!file.isDirectory()) {
      channel.sendResponse(new BytesRestResponse(FORBIDDEN));
      return;
    }
    file=new File(file,"index.html");
    if (!file.exists() || file.isHidden() || !file.isFile()) {
      channel.sendResponse(new BytesRestResponse(FORBIDDEN));
      return;
    }
  }
  if (!file.getAbsolutePath().startsWith(siteFile.getAbsolutePath())) {
    channel.sendResponse(new BytesRestResponse(FORBIDDEN));
    return;
  }
  try {
    byte[] data=Streams.copyToByteArray(file);
    channel.sendResponse(new BytesRestResponse(OK,guessMimeType(sitePath),data));
  }
 catch (  IOException e) {
    channel.sendResponse(new BytesRestResponse(INTERNAL_SERVER_ERROR));
  }
}
