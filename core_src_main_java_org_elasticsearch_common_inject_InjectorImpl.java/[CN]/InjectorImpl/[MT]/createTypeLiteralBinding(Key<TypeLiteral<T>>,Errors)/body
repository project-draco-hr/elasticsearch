{
  Type typeLiteralType=key.getTypeLiteral().getType();
  if (!(typeLiteralType instanceof ParameterizedType)) {
    throw errors.cannotInjectRawTypeLiteral().toException();
  }
  ParameterizedType parameterizedType=(ParameterizedType)typeLiteralType;
  Type innerType=parameterizedType.getActualTypeArguments()[0];
  if (!(innerType instanceof Class) && !(innerType instanceof GenericArrayType) && !(innerType instanceof ParameterizedType)) {
    throw errors.cannotInjectTypeLiteralOf(innerType).toException();
  }
  @SuppressWarnings("unchecked") TypeLiteral<T> value=(TypeLiteral<T>)TypeLiteral.get(innerType);
  InternalFactory<TypeLiteral<T>> factory=new ConstantFactory<>(Initializables.of(value));
  return new InstanceBindingImpl<>(this,key,SourceProvider.UNKNOWN_SOURCE,factory,emptySet(),value);
}
