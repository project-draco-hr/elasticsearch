{
  ClusterState clusterState=clusterService.state();
  String[] concreteIndices=clusterState.metaData().concreteIndices(request.indices());
  checkBlock(request,concreteIndices,clusterState);
  final AtomicInteger indexCounter=new AtomicInteger();
  final AtomicInteger completionCounter=new AtomicInteger(concreteIndices.length);
  final AtomicReferenceArray<Object> indexResponses=new AtomicReferenceArray<Object>(concreteIndices.length);
  for (  final String index : concreteIndices) {
    IndexRequest indexRequest=newIndexRequestInstance(request,index);
    indexRequest.listenerThreaded(false);
    indexAction.execute(indexRequest,new ActionListener<IndexResponse>(){
      @Override public void onResponse(      IndexResponse result){
        indexResponses.set(indexCounter.getAndIncrement(),result);
        if (completionCounter.decrementAndGet() == 0) {
          listener.onResponse(newResponseInstance(request,indexResponses));
        }
      }
      @Override public void onFailure(      Throwable e){
        e.printStackTrace();
        int index=indexCounter.getAndIncrement();
        if (accumulateExceptions()) {
          indexResponses.set(index,e);
        }
        if (completionCounter.decrementAndGet() == 0) {
          listener.onResponse(newResponseInstance(request,indexResponses));
        }
      }
    }
);
  }
}
