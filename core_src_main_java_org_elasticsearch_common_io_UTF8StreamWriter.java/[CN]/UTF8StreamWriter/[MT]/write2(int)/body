{
  if ((c & 0xfffff800) == 0) {
    _bytes[_index]=(byte)(0xc0 | (c >> 6));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | (c & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
  }
 else   if ((c & 0xffff0000) == 0) {
    _bytes[_index]=(byte)(0xe0 | (c >> 12));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | ((c >> 6) & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | (c & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
  }
 else   if ((c & 0xff200000) == 0) {
    _bytes[_index]=(byte)(0xf0 | (c >> 18));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | ((c >> 12) & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | ((c >> 6) & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | (c & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
  }
 else   if ((c & 0xf4000000) == 0) {
    _bytes[_index]=(byte)(0xf8 | (c >> 24));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | ((c >> 18) & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | ((c >> 12) & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | ((c >> 6) & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | (c & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
  }
 else   if ((c & 0x80000000) == 0) {
    _bytes[_index]=(byte)(0xfc | (c >> 30));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | ((c >> 24) & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | ((c >> 18) & 0x3f));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | ((c >> 12) & 0x3F));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | ((c >> 6) & 0x3F));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
    _bytes[_index]=(byte)(0x80 | (c & 0x3F));
    if (++_index >= _bytes.length) {
      flushBuffer();
    }
  }
 else {
    throw new CharConversionException("Illegal character U+" + Integer.toHexString(c));
  }
}
