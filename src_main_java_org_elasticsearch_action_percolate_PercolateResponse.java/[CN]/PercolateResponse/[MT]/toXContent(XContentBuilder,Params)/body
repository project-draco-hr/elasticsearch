{
  builder.startObject();
  builder.field(Fields.TOOK,tookInMillis);
  RestActions.buildBroadcastShardsHeader(builder,this);
  builder.field(Fields.TOTAL,count);
  if (matches.length != 0) {
    builder.startArray(Fields.MATCHES);
    boolean justIds="ids".equals(params.param("percolate_format"));
    if (justIds) {
      for (      PercolateResponse.Match match : matches) {
        builder.value(match.id());
      }
    }
 else {
      for (      PercolateResponse.Match match : matches) {
        builder.startObject();
        builder.field(Fields._INDEX,match.getIndex());
        builder.field(Fields._ID,match.getId());
        if (hasScores) {
          builder.field(Fields._SCORE,match.getScore());
        }
        builder.endObject();
      }
    }
    builder.endArray();
  }
  builder.endObject();
  return builder;
}
