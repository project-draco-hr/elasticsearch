{
  String mapping=jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("num").field("type","integer").endObject().startObject("date").field("type","date").endObject().endObject().endObject().endObject().string();
  prepareCreate("test").addMapping("type1",mapping).execute().actionGet();
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();
  client().prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("date","2009-03-05T01:01:01").field("num",1).endObject()).execute().actionGet();
  flushAndRefresh();
  client().prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("date","2009-03-05T04:01:01").field("num",2).endObject()).execute().actionGet();
  client().admin().indices().prepareRefresh().execute().actionGet();
  client().prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("date","2009-03-06T01:01:01").field("num",3).endObject()).execute().actionGet();
  client().admin().indices().prepareRefresh().execute().actionGet();
  for (int i=0; i < numberOfRuns(); i++) {
    SearchResponse searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addFacet(dateHistogramFacet("stats1").field("date").interval("day").mode(mode)).addFacet(dateHistogramFacet("stats2").field("date").interval("day").preZone("-02:00").mode(mode)).addFacet(dateHistogramFacet("stats3").field("date").valueField("num").interval("day").preZone("-02:00").mode(mode)).addFacet(dateHistogramFacet("stats4").field("date").valueScript("doc['num'].value * 2").interval("day").preZone("-02:00").mode(mode)).addFacet(dateHistogramFacet("stats5").field("date").interval("24h").mode(mode)).addFacet(dateHistogramFacet("stats6").field("date").valueField("num").interval("day").preZone("-02:00").postZone("-02:00").mode(mode)).addFacet(dateHistogramFacet("stats7").field("date").interval("quarter").mode(mode)).execute().actionGet();
    if (searchResponse.getFailedShards() > 0) {
      logger.warn("Failed shards:");
      for (      ShardSearchFailure shardSearchFailure : searchResponse.getShardFailures()) {
        logger.warn("-> {}",shardSearchFailure);
      }
    }
    assertThat(searchResponse.getFailedShards(),equalTo(0));
    DateHistogramFacet facet=searchResponse.getFacets().facet("stats1");
    assertThat(facet.getName(),equalTo("stats1"));
    assertThat(facet.getEntries().size(),equalTo(2));
    assertThat(facet.getEntries().get(0).getTime(),equalTo(utcTimeInMillis("2009-03-05")));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(1).getTime(),equalTo(utcTimeInMillis("2009-03-06")));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(1l));
    facet=searchResponse.getFacets().facet("stats2");
    assertThat(facet.getName(),equalTo("stats2"));
    assertThat(facet.getEntries().size(),equalTo(2));
    assertThat(facet.getEntries().get(0).getTime(),equalTo(utcTimeInMillis("2009-03-04")));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(1).getTime(),equalTo(utcTimeInMillis("2009-03-05")));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(2l));
    facet=searchResponse.getFacets().facet("stats3");
    assertThat(facet.getName(),equalTo("stats3"));
    assertThat(facet.getEntries().size(),equalTo(2));
    assertThat(facet.getEntries().get(0).getTime(),equalTo(utcTimeInMillis("2009-03-04")));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(0).getTotal(),equalTo(1d));
    assertThat(facet.getEntries().get(1).getTime(),equalTo(utcTimeInMillis("2009-03-05")));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(1).getTotal(),equalTo(5d));
    facet=searchResponse.getFacets().facet("stats4");
    assertThat(facet.getName(),equalTo("stats4"));
    assertThat(facet.getEntries().size(),equalTo(2));
    assertThat(facet.getEntries().get(0).getTime(),equalTo(utcTimeInMillis("2009-03-04")));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(0).getTotal(),equalTo(2d));
    assertThat(facet.getEntries().get(1).getTime(),equalTo(utcTimeInMillis("2009-03-05")));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(1).getTotal(),equalTo(10d));
    facet=searchResponse.getFacets().facet("stats5");
    assertThat(facet.getName(),equalTo("stats5"));
    assertThat(facet.getEntries().size(),equalTo(2));
    assertThat(facet.getEntries().get(0).getTime(),equalTo(utcTimeInMillis("2009-03-05")));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(1).getTime(),equalTo(utcTimeInMillis("2009-03-06")));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(1l));
    facet=searchResponse.getFacets().facet("stats6");
    assertThat(facet.getName(),equalTo("stats6"));
    assertThat(facet.getEntries().size(),equalTo(2));
    assertThat(facet.getEntries().get(0).getTime(),equalTo(utcTimeInMillis("2009-03-04") - TimeValue.timeValueHours(2).millis()));
    assertThat(facet.getEntries().get(0).getCount(),equalTo(1l));
    assertThat(facet.getEntries().get(0).getTotal(),equalTo(1d));
    assertThat(facet.getEntries().get(1).getTime(),equalTo(utcTimeInMillis("2009-03-05") - TimeValue.timeValueHours(2).millis()));
    assertThat(facet.getEntries().get(1).getCount(),equalTo(2l));
    assertThat(facet.getEntries().get(1).getTotal(),equalTo(5d));
    facet=searchResponse.getFacets().facet("stats7");
    assertThat(facet.getName(),equalTo("stats7"));
    assertThat(facet.getEntries().size(),equalTo(1));
    assertThat(facet.getEntries().get(0).getTime(),equalTo(utcTimeInMillis("2009-01-01")));
  }
}
