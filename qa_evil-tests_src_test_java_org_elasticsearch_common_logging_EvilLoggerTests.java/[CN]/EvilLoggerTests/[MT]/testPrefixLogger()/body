{
  setupLogging("prefix");
  final String prefix=randomBoolean() ? null : randomAsciiOfLength(16);
  final Logger logger=Loggers.getLogger("prefix",prefix);
  logger.info("test");
  logger.info("{}","test");
  final Exception e=new Exception("exception");
  logger.info(new ParameterizedMessage("{}","test"),e);
  final String path=System.getProperty("es.logs") + ".log";
  final List<String> events=Files.readAllLines(PathUtils.get(path));
  final StringWriter sw=new StringWriter();
  final PrintWriter pw=new PrintWriter(sw);
  e.printStackTrace(pw);
  final int stackTraceLength=sw.toString().split(System.getProperty("line.separator")).length;
  final int expectedLogLines=3;
  assertThat(events.size(),equalTo(expectedLogLines + stackTraceLength));
  for (int i=0; i < expectedLogLines; i++) {
    if (prefix == null) {
      assertThat(events.get(i),startsWith("test"));
    }
 else {
      assertThat(events.get(i),startsWith("[" + prefix + "] test"));
    }
  }
}
