{
  if (!SuggestUtils.parseDirectSpellcheckerSettings(parser,fieldName,generator,parseFieldMatcher)) {
    if ("field".equals(fieldName)) {
      generator.setField(parser.text());
      if (mapperService.smartNameFieldType(generator.field()) == null) {
        throw new IllegalArgumentException("No mapping found for field [" + generator.field() + "]");
      }
    }
 else     if ("size".equals(fieldName)) {
      generator.size(parser.intValue());
    }
 else     if ("pre_filter".equals(fieldName) || "preFilter".equals(fieldName)) {
      String analyzerName=parser.text();
      Analyzer analyzer=mapperService.analysisService().analyzer(analyzerName);
      if (analyzer == null) {
        throw new IllegalArgumentException("Analyzer [" + analyzerName + "] doesn't exists");
      }
      generator.preFilter(analyzer);
    }
 else     if ("post_filter".equals(fieldName) || "postFilter".equals(fieldName)) {
      String analyzerName=parser.text();
      Analyzer analyzer=mapperService.analysisService().analyzer(analyzerName);
      if (analyzer == null) {
        throw new IllegalArgumentException("Analyzer [" + analyzerName + "] doesn't exists");
      }
      generator.postFilter(analyzer);
    }
 else {
      throw new IllegalArgumentException("CandidateGenerator doesn't support [" + fieldName + "]");
    }
  }
}
