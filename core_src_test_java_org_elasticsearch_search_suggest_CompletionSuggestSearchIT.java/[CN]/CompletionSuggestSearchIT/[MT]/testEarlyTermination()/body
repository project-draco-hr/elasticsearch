{
  final CompletionMappingBuilder mapping=new CompletionMappingBuilder();
  createIndexAndMapping(mapping);
  int numDocs=atLeast(100);
  List<IndexRequestBuilder> indexRequestBuilders=new ArrayList<>();
  for (int i=0; i < numDocs; i++) {
    indexRequestBuilders.add(client().prepareIndex(INDEX,TYPE,"" + i).setSource(jsonBuilder().startObject().startObject(FIELD).field("input","suggestion" + (numDocs - i)).field("weight",numDocs - i).endObject().endObject()));
  }
  indexRandom(true,indexRequestBuilders);
  int size=randomIntBetween(3,10);
  String[] outputs=new String[size];
  for (int i=0; i < size; i++) {
    outputs[i]="suggestion" + (numDocs - i);
  }
  CompletionSuggestionBuilder prefix=SuggestBuilders.completionSuggestion(FIELD).prefix("sug").size(size);
  assertSuggestions("foo",prefix,outputs);
  CompletionSuggestionBuilder regex=SuggestBuilders.completionSuggestion(FIELD).regex("su[g|s]g").size(size);
  assertSuggestions("foo",regex,outputs);
  CompletionSuggestionBuilder fuzzyPrefix=SuggestBuilders.completionSuggestion(FIELD).prefix("sugg",Fuzziness.ONE).size(size);
  assertSuggestions("foo",fuzzyPrefix,outputs);
}
