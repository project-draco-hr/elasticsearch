{
  final CompletionMappingBuilder mapping=new CompletionMappingBuilder();
  createIndexAndMapping(mapping);
  List<IndexRequestBuilder> indexRequestBuilders=new ArrayList<>();
  XContentBuilder source=jsonBuilder().startObject().startObject(FIELD).field("input","suggest").field("weight",1).endObject().field("title","title1").field("count",1).endObject();
  indexRequestBuilders.add(client().prepareIndex(INDEX,TYPE,"1").setSource(source));
  source=jsonBuilder().startObject().startObject(FIELD).field("input","suggestion").field("weight",2).endObject().field("title","title2").field("count",2).endObject();
  indexRequestBuilders.add(client().prepareIndex(INDEX,TYPE,"2").setSource(source));
  indexRandom(true,indexRequestBuilders);
  CompletionSuggestionBuilder prefix=SuggestBuilders.completionSuggestion("foo").field(FIELD).prefix("sugg").payload(Arrays.asList("title","count"));
  SuggestResponse suggestResponse=client().prepareSuggest(INDEX).addSuggestion(prefix).execute().actionGet();
  assertNoFailures(suggestResponse);
  CompletionSuggestion completionSuggestion=suggestResponse.getSuggest().getSuggestion("foo");
  List<CompletionSuggestion.Entry.Option> options=completionSuggestion.getEntries().get(0).getOptions();
  assertThat(options.size(),equalTo(2));
  assertThat(options.get(0).getText().toString(),equalTo("suggestion"));
  assertThat(options.get(0).getScore(),equalTo(2f));
  assertThat(options.get(1).getText().toString(),equalTo("suggest"));
  assertThat(options.get(1).getScore(),equalTo(1f));
  Map<String,List<Object>> firstPayload=options.get(0).getPayload();
  assertThat(firstPayload.keySet(),containsInAnyOrder("title","count"));
  assertThat((String)firstPayload.get("title").get(0),equalTo("title2"));
  assertThat((long)firstPayload.get("count").get(0),equalTo(2L));
  Map<String,List<Object>> secondPayload=options.get(1).getPayload();
  assertThat(secondPayload.keySet(),containsInAnyOrder("title","count"));
  assertThat((String)secondPayload.get("title").get(0),equalTo("title1"));
  assertThat((long)secondPayload.get("count").get(0),equalTo(1L));
}
