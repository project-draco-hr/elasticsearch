{
  request.indices(state.metaData().concreteIndices(request.indices(),request.indicesOptions()));
  flushAction.execute(Requests.flushRequest(request.indices()),new ActionListener<FlushResponse>(){
    @Override public void onResponse(    FlushResponse flushResponse){
      ImmutableOpenMap<String,ImmutableOpenMap<String,MappingMetaData>> result=state.metaData().findMappings(request.indices(),request.types());
      OrFilterBuilder filterBuilder=new OrFilterBuilder();
      Set<String> types=new HashSet<String>();
      for (      ObjectObjectCursor<String,ImmutableOpenMap<String,MappingMetaData>> typesMeta : result) {
        for (        ObjectObjectCursor<String,MappingMetaData> type : typesMeta.value) {
          filterBuilder.add(new TypeFilterBuilder(type.key));
          types.add(type.key);
        }
      }
      request.types(types.toArray(new String[types.size()]));
      QuerySourceBuilder querySourceBuilder=new QuerySourceBuilder().setQuery(QueryBuilders.filteredQuery(QueryBuilders.matchAllQuery(),filterBuilder));
      deleteByQueryAction.execute(Requests.deleteByQueryRequest(request.indices()).source(querySourceBuilder),new ActionListener<DeleteByQueryResponse>(){
        @Override public void onResponse(        DeleteByQueryResponse deleteByQueryResponse){
          refreshAction.execute(Requests.refreshRequest(request.indices()),new ActionListener<RefreshResponse>(){
            @Override public void onResponse(            RefreshResponse refreshResponse){
              removeMapping();
            }
            @Override public void onFailure(            Throwable e){
              removeMapping();
            }
            protected void removeMapping(){
              DeleteMappingClusterStateUpdateRequest clusterStateUpdateRequest=new DeleteMappingClusterStateUpdateRequest().indices(request.indices()).types(request.types()).ackTimeout(request.timeout()).masterNodeTimeout(request.masterNodeTimeout());
              metaDataMappingService.removeMapping(clusterStateUpdateRequest,new ClusterStateUpdateListener(){
                @Override public void onResponse(                ClusterStateUpdateResponse response){
                  listener.onResponse(new DeleteMappingResponse(response.isAcknowledged()));
                }
                @Override public void onFailure(                Throwable t){
                  listener.onFailure(t);
                }
              }
);
            }
          }
);
        }
        @Override public void onFailure(        Throwable t){
          listener.onFailure(t);
        }
      }
);
    }
    @Override public void onFailure(    Throwable t){
      listener.onFailure(t);
    }
  }
);
}
