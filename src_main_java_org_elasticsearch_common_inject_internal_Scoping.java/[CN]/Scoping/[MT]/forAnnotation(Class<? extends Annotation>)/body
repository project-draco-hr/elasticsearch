{
  if (scopingAnnotation == Singleton.class) {
    return SINGLETON_ANNOTATION;
  }
  return new Scoping(){
    @Override public <V>V acceptVisitor(    BindingScopingVisitor<V> visitor){
      return visitor.visitScopeAnnotation(scopingAnnotation);
    }
    @Override public Class<? extends Annotation> getScopeAnnotation(){
      return scopingAnnotation;
    }
    @Override public String toString(){
      return scopingAnnotation.getName();
    }
    @Override public void applyTo(    ScopedBindingBuilder scopedBindingBuilder){
      scopedBindingBuilder.in(scopingAnnotation);
    }
  }
;
}
