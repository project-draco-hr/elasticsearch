{
  threadPool=new ThreadPool("internal-transport-client-tests");
  transport=new FailAndRetryMockTransport<TestResponse>(getRandom()){
    @Override protected TestResponse newResponse(){
      return new TestResponse();
    }
  }
;
  transportService=new TransportService(ImmutableSettings.EMPTY,transport,threadPool);
  transportService.start();
  transportClientNodesService=new TransportClientNodesService(ImmutableSettings.EMPTY,ClusterName.DEFAULT,transportService,threadPool,Headers.EMPTY,Version.CURRENT);
  Map<String,GenericAction> actions=new HashMap<>();
  actions.put(NodesInfoAction.NAME,NodesInfoAction.INSTANCE);
  actions.put(TestAction.NAME,TestAction.INSTANCE);
  actions.put(IndicesAdminTestAction.NAME,IndicesAdminTestAction.INSTANCE);
  actions.put(ClusterAdminTestAction.NAME,ClusterAdminTestAction.INSTANCE);
  InternalTransportIndicesAdminClient indicesAdminClient=new InternalTransportIndicesAdminClient(ImmutableSettings.EMPTY,transportClientNodesService,transportService,threadPool,actions,Headers.EMPTY);
  InternalTransportClusterAdminClient clusterAdminClient=new InternalTransportClusterAdminClient(ImmutableSettings.EMPTY,transportClientNodesService,threadPool,transportService,actions,Headers.EMPTY);
  InternalTransportAdminClient adminClient=new InternalTransportAdminClient(ImmutableSettings.EMPTY,indicesAdminClient,clusterAdminClient);
  internalTransportClient=new InternalTransportClient(ImmutableSettings.EMPTY,threadPool,transportService,transportClientNodesService,adminClient,actions,Headers.EMPTY);
  nodesCount=randomIntBetween(1,10);
  for (int i=0; i < nodesCount; i++) {
    transportClientNodesService.addTransportAddresses(new LocalTransportAddress("node" + i));
  }
  transport.endConnectMode();
}
