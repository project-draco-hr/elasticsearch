{
  int iters=iterations(10,100);
  for (int i=0; i < iters; i++) {
    try (final TestIteration iteration=new TestIteration()){
      TestResponse testResponse=null;
      Throwable finalFailure=null;
      try {
        Action action=randomFrom(Action.values());
        ActionFuture<TestResponse> future=action.execute(iteration);
        testResponse=future.actionGet();
      }
 catch (      Throwable t) {
        finalFailure=t;
      }
      assertThat(iteration.transport.failures() + iteration.transport.successes(),lessThanOrEqualTo(1));
      if (iteration.transport.successes() == 1) {
        assertThat(finalFailure,nullValue());
        assertThat(testResponse,notNullValue());
      }
 else {
        assertThat(testResponse,nullValue());
        assertThat(finalFailure,notNullValue());
        if (iteration.transport.failures() == 0) {
          assertThat(finalFailure,instanceOf(NoNodeAvailableException.class));
        }
      }
      assertThat(iteration.transport.triedNodes().size(),lessThanOrEqualTo(iteration.nodesCount));
      assertThat(iteration.transport.triedNodes().size(),equalTo(iteration.transport.connectTransportExceptions() + iteration.transport.failures() + iteration.transport.successes()));
    }
   }
}
