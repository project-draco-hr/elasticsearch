{
  if (keyScript == null) {
    throw new SearchSourceBuilderException("key_script must be set on range script facet for facet [" + name + "]");
  }
  if (valueScript == null) {
    throw new SearchSourceBuilderException("value_script must be set on range script facet for facet [" + name + "]");
  }
  if (entries.isEmpty()) {
    throw new SearchSourceBuilderException("at least one range must be defined for range facet [" + name + "]");
  }
  builder.startObject(name);
  builder.startObject(RangeFacet.TYPE);
  builder.field("key_script",keyScript);
  builder.field("value_script",valueScript);
  if (lang != null) {
    builder.field("lang",lang);
  }
  builder.startArray("ranges");
  for (  Entry entry : entries) {
    builder.startObject();
    if (!Double.isInfinite(entry.from)) {
      builder.field("from",entry.from);
    }
    if (!Double.isInfinite(entry.to)) {
      builder.field("to",entry.to);
    }
    builder.endObject();
  }
  builder.endArray();
  if (this.params != null) {
    builder.field("params",this.params);
  }
  builder.endObject();
  addFilterFacetAndGlobal(builder,params);
  builder.endObject();
  return builder;
}
