{
  DiscoveryNode masterNode=observer.observedState().nodes().getMasterNode();
  if (masterNode == null) {
    logger.warn("{} no master known for action [{}] for shard entry [{}]",shardEntry.shardId,actionName,shardEntry);
    waitForNewMasterAndRetry(actionName,observer,shardEntry,listener);
  }
 else {
    logger.debug("{} sending [{}] to [{}] for shard entry [{}]",shardEntry.shardId,actionName,masterNode.getId(),shardEntry);
    transportService.sendRequest(masterNode,actionName,shardEntry,new EmptyTransportResponseHandler(ThreadPool.Names.SAME){
      @Override public void handleResponse(      TransportResponse.Empty response){
        listener.onSuccess();
      }
      @Override public void handleException(      TransportException exp){
        if (isMasterChannelException(exp)) {
          waitForNewMasterAndRetry(actionName,observer,shardEntry,listener);
        }
 else {
          logger.warn(new ParameterizedMessage("{} unexpected failure while sending request [{}] to [{}] for shard entry [{}]",shardEntry.shardId,actionName,masterNode,shardEntry),exp);
          listener.onFailure(exp instanceof RemoteTransportException ? (Exception)(exp.getCause() instanceof Exception ? exp.getCause() : new ElasticsearchException(exp.getCause())) : exp);
        }
      }
    }
);
  }
}
