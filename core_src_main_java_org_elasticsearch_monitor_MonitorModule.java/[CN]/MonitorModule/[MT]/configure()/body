{
  boolean sigarLoaded=false;
  try {
    settings.getClassLoader().loadClass("org.hyperic.sigar.Sigar");
    SigarService sigarService=new SigarService(settings);
    if (sigarService.sigarAvailable()) {
      bind(SigarService.class).toInstance(sigarService);
      bind(ProcessProbe.class).to(SigarProcessProbe.class).asEagerSingleton();
      bind(OsProbe.class).to(SigarOsProbe.class).asEagerSingleton();
      bind(NetworkProbe.class).to(SigarNetworkProbe.class).asEagerSingleton();
      bind(FsProbe.class).to(SigarFsProbe.class).asEagerSingleton();
      sigarLoaded=true;
    }
  }
 catch (  Throwable e) {
    Loggers.getLogger(SigarService.class).trace("failed to load sigar",e);
  }
  if (!sigarLoaded) {
    bind(ProcessProbe.class).to(JmxProcessProbe.class).asEagerSingleton();
    bind(OsProbe.class).to(JmxOsProbe.class).asEagerSingleton();
    bind(NetworkProbe.class).to(JmxNetworkProbe.class).asEagerSingleton();
    bind(FsProbe.class).to(JmxFsProbe.class).asEagerSingleton();
  }
  bind(ProcessService.class).asEagerSingleton();
  bind(OsService.class).asEagerSingleton();
  bind(NetworkService.class).asEagerSingleton();
  bind(JvmService.class).asEagerSingleton();
  bind(FsService.class).asEagerSingleton();
  bind(JvmMonitorService.class).asEagerSingleton();
}
