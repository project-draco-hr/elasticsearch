{
  Path path=createTempDir();
  Path esHome=path.resolve("esHome");
  Settings.Builder settingsBuilder=Settings.builder();
  settingsBuilder.put(Environment.PATH_HOME_SETTING.getKey(),esHome.resolve("home").toString());
  settingsBuilder.put(Environment.PATH_CONF_SETTING.getKey(),esHome.resolve("conf").toString());
  settingsBuilder.put(Environment.PATH_SCRIPTS_SETTING.getKey(),esHome.resolve("scripts").toString());
  settingsBuilder.put(Environment.PATH_PLUGINS_SETTING.getKey(),esHome.resolve("plugins").toString());
  settingsBuilder.putArray(Environment.PATH_DATA_SETTING.getKey(),esHome.resolve("data1").toString(),esHome.resolve("data2").toString());
  settingsBuilder.put(Environment.PATH_SHARED_DATA_SETTING.getKey(),esHome.resolve("custom").toString());
  settingsBuilder.put(Environment.PATH_LOGS_SETTING.getKey(),esHome.resolve("logs").toString());
  settingsBuilder.put(Environment.PIDFILE_SETTING.getKey(),esHome.resolve("test.pid").toString());
  Settings settings=settingsBuilder.build();
  Path fakeTmpDir=createTempDir();
  String realTmpDir=System.getProperty("java.io.tmpdir");
  Permissions permissions;
  Environment environment;
  try {
    System.setProperty("java.io.tmpdir",fakeTmpDir.toString());
    environment=new Environment(settings);
    permissions=Security.createPermissions(environment);
  }
  finally {
    System.setProperty("java.io.tmpdir",realTmpDir);
  }
  assertNoPermissions(esHome,permissions);
  assertNoPermissions(esHome.getParent(),permissions);
  assertNoPermissions(esHome.getParent().resolve("other"),permissions);
  assertNoPermissions(PathUtils.get(realTmpDir),permissions);
  assertExactPermissions(new FilePermission(environment.binFile().toString(),"read,readlink"),permissions);
  assertExactPermissions(new FilePermission(environment.libFile().toString(),"read,readlink"),permissions);
  assertExactPermissions(new FilePermission(environment.modulesFile().toString(),"read,readlink"),permissions);
  assertExactPermissions(new FilePermission(environment.configFile().toString(),"read,readlink"),permissions);
  assertExactPermissions(new FilePermission(environment.scriptsFile().toString(),"read,readlink"),permissions);
  assertExactPermissions(new FilePermission(environment.pluginsFile().toString(),"read,readlink"),permissions);
  for (  Path dataPath : environment.dataFiles()) {
    assertExactPermissions(new FilePermission(dataPath.toString(),"read,readlink,write,delete"),permissions);
  }
  for (  Path dataPath : environment.dataWithClusterFiles()) {
    assertExactPermissions(new FilePermission(dataPath.toString(),"read,readlink,write,delete"),permissions);
  }
  assertExactPermissions(new FilePermission(environment.sharedDataFile().toString(),"read,readlink,write,delete"),permissions);
  assertExactPermissions(new FilePermission(environment.logsFile().toString(),"read,readlink,write,delete"),permissions);
  assertExactPermissions(new FilePermission(fakeTmpDir.toString(),"read,readlink,write,delete"),permissions);
  assertExactPermissions(new FilePermission(environment.pidFile().toString(),"delete"),permissions);
}
