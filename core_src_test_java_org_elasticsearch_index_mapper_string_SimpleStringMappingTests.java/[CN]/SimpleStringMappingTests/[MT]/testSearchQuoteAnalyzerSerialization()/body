{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field1").field("type","string").field("position_offset_gap",1000).endObject().startObject("field2").field("type","string").field("position_offset_gap",1000).field("analyzer","standard").endObject().startObject("field3").field("type","string").field("position_offset_gap",1000).field("analyzer","standard").field("search_analyzer","simple").endObject().startObject("field4").field("type","string").field("position_offset_gap",1000).field("analyzer","standard").field("search_analyzer","simple").field("search_quote_analyzer","simple").endObject().endObject().endObject().endObject().string();
  DocumentMapper mapper=parser.parse(mapping);
  for (  String fieldName : Lists.newArrayList("field1","field2","field3","field4")) {
    Map<String,Object> serializedMap=getSerializedMap(fieldName,mapper);
    assertFalse(fieldName,serializedMap.containsKey("search_quote_analyzer"));
  }
  mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field1").field("type","string").field("position_offset_gap",1000).field("search_quote_analyzer","simple").endObject().startObject("field2").field("type","string").field("position_offset_gap",1000).field("analyzer","standard").field("search_analyzer","standard").field("search_quote_analyzer","simple").endObject().endObject().endObject().endObject().string();
  mapper=parser.parse(mapping);
  for (  String fieldName : Lists.newArrayList("field1","field2")) {
    Map<String,Object> serializedMap=getSerializedMap(fieldName,mapper);
    assertEquals(serializedMap.get("search_quote_analyzer"),"simple");
  }
}
