{
  client.admin().indices().prepareDelete().execute().actionGet();
  client.admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",2)).addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("title").field("type","multi_field").startObject("fields").startObject("title").field("type","string").field("store","no").field("term_vector","with_positions_offsets").endObject().startObject("key").field("type","string").field("store","no").field("term_vector","with_positions_offsets").field("analyzer","whitespace").endObject().endObject().endObject().endObject().endObject().endObject()).execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForYellowStatus().execute().actionGet();
  client.prepareIndex("test","type1","1").setSource("title","this is a test").execute().actionGet();
  client.admin().indices().prepareRefresh().execute().actionGet();
  SearchResponse search=client.prepareSearch().setQuery(fieldQuery("title","this is a test")).setHighlighterEncoder("html").addHighlightedField("title",50,1).execute().actionGet();
  assertThat(Arrays.toString(search.getShardFailures()),search.getFailedShards(),equalTo(0));
  SearchHit hit=search.getHits().getAt(0);
  assertThat(hit.highlightFields().get("title").fragments()[0].string(),equalTo("this is a <em>test</em>"));
  search=client.prepareSearch().setQuery(fieldQuery("title.key","this is a test")).setHighlighterEncoder("html").addHighlightedField("title.key",50,1).execute().actionGet();
  assertThat(Arrays.toString(search.getShardFailures()),search.getFailedShards(),equalTo(0));
  hit=search.getHits().getAt(0);
  assertThat(hit.highlightFields().get("title.key").fragments()[0].string(),equalTo("<em>this</em> <em>is</em> <em>a</em> <em>test</em>"));
}
