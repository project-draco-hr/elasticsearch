{
  prepareCreate("test").setSettings(ImmutableSettings.builder().put("analysis.analyzer.code.type","custom").put("analysis.analyzer.code.tokenizer","code").put("analysis.analyzer.code.filter","code,lowercase").put("analysis.tokenizer.code.type","pattern").put("analysis.tokenizer.code.pattern","[.,:;/\"<>(){}\\[\\]\\s]").put("analysis.filter.code.type","word_delimiter").put("analysis.filter.code.generate_word_parts","true").put("analysis.filter.code.generate_number_parts","true").put("analysis.filter.code.catenate_words","false").put("analysis.filter.code.catenate_numbers","false").put("analysis.filter.code.catenate_all","false").put("analysis.filter.code.split_on_case_change","true").put("analysis.filter.code.preserve_original","true").put("analysis.filter.code.split_on_numerics","true").put("analysis.filter.code.stem_english_possessive","false").build()).addMapping("type",jsonBuilder().startObject().startObject("type").startObject("properties").startObject("text").field("type","string").field("analyzer","code").field("term_vector","with_positions_offsets").endObject().endObject().endObject().endObject()).execute().actionGet();
  ensureGreen();
  client().prepareIndex("test","type","1").setSource(jsonBuilder().startObject().field("text","def log_worker_status( worker )\n  pass").endObject()).setRefresh(true).execute().actionGet();
  SearchResponse response=client().prepareSearch("test").setQuery(QueryBuilders.matchPhraseQuery("text","def log_worker_status( worker )")).addHighlightedField("text").execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  assertThat(response.getHits().totalHits(),equalTo(1L));
  assertThat(response.getHits().getAt(0).getHighlightFields().get("text").fragments()[0].string(),equalTo("<em>def log_worker_status( worker</em> )\n  pass"));
}
