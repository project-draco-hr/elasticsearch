{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  client.admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",2)).addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("title").field("type","string").field("store","no").endObject().startObject("titleTV").field("type","string").field("store","no").field("term_vector","with_positions_offsets").endObject().endObject().endObject().endObject()).execute().actionGet();
  client.prepareIndex("test","type1","1").setSource(XContentFactory.jsonBuilder().startObject().startArray("title").value("This is a test on the highlighting bug present in elasticsearch").value("The bug is bugging us").endArray().startArray("titleTV").value("This is a test on the highlighting bug present in elasticsearch").value("The bug is bugging us").endArray().endObject()).setRefresh(true).execute().actionGet();
  client.prepareIndex("test","type1","2").setSource(XContentFactory.jsonBuilder().startObject().startArray("titleTV").value("some text to highlight").value("highlight other text").endArray().endObject()).setRefresh(true).execute().actionGet();
  SearchResponse search=client.prepareSearch().setQuery(fieldQuery("title","bug")).addHighlightedField("title",-1,2).addHighlightedField("titleTV",-1,2).execute().actionGet();
  assertThat(search.hits().totalHits(),equalTo(1l));
  assertThat(search.hits().hits().length,equalTo(1));
  assertThat(search.hits().hits()[0].highlightFields().get("title").fragments().length,equalTo(2));
  assertThat(search.hits().hits()[0].highlightFields().get("title").fragments()[0].string(),equalTo("This is a test on the highlighting <em>bug</em> present in elasticsearch"));
  assertThat(search.hits().hits()[0].highlightFields().get("title").fragments()[1].string(),equalTo("The <em>bug</em> is bugging us"));
  assertThat(search.hits().hits()[0].highlightFields().get("titleTV").fragments().length,equalTo(2));
  assertThat(search.hits().hits()[0].highlightFields().get("titleTV").fragments()[0].string(),equalTo("This is a test on the highlighting <em>bug</em> present in elasticsearch"));
  assertThat(search.hits().hits()[0].highlightFields().get("titleTV").fragments()[1].string(),equalTo("The <em>bug</em> is bugging us"));
  search=client.prepareSearch().setQuery(fieldQuery("titleTV","highlight")).addHighlightedField("titleTV",-1,2).execute().actionGet();
  assertThat(search.hits().totalHits(),equalTo(1l));
  assertThat(search.hits().hits().length,equalTo(1));
  assertThat(search.hits().hits()[0].highlightFields().get("titleTV").fragments().length,equalTo(2));
  assertThat(search.hits().hits()[0].highlightFields().get("titleTV").fragments()[0].string(),equalTo("some text to <em>highlight</em>"));
  assertThat(search.hits().hits()[0].highlightFields().get("titleTV").fragments()[1].string(),equalTo("<em>highlight</em> other text"));
}
