{
  UpdateRequest updateRequest=new UpdateRequest(request.param("index"),request.param("type"),request.param("id"));
  updateRequest.routing(request.param("routing"));
  updateRequest.parent(request.param("parent"));
  updateRequest.timeout(request.paramAsTime("timeout",updateRequest.timeout()));
  updateRequest.setRefreshPolicy(request.param("refresh"));
  String consistencyLevel=request.param("consistency");
  if (consistencyLevel != null) {
    updateRequest.consistencyLevel(WriteConsistencyLevel.fromString(consistencyLevel));
  }
  updateRequest.docAsUpsert(request.paramAsBoolean("doc_as_upsert",updateRequest.docAsUpsert()));
  String sField=request.param("fields");
  if (sField != null) {
    String[] sFields=Strings.splitStringByCommaToArray(sField);
    if (sFields != null) {
      updateRequest.fields(sFields);
    }
  }
  updateRequest.retryOnConflict(request.paramAsInt("retry_on_conflict",updateRequest.retryOnConflict()));
  updateRequest.version(RestActions.parseVersion(request));
  updateRequest.versionType(VersionType.fromString(request.param("version_type"),updateRequest.versionType()));
  if (request.hasContent()) {
    updateRequest.source(request.content());
    IndexRequest upsertRequest=updateRequest.upsertRequest();
    if (upsertRequest != null) {
      upsertRequest.routing(request.param("routing"));
      upsertRequest.parent(request.param("parent"));
      upsertRequest.timestamp(request.param("timestamp"));
      if (request.hasParam("ttl")) {
        upsertRequest.ttl(request.param("ttl"));
      }
      upsertRequest.version(RestActions.parseVersion(request));
      upsertRequest.versionType(VersionType.fromString(request.param("version_type"),upsertRequest.versionType()));
    }
    IndexRequest doc=updateRequest.doc();
    if (doc != null) {
      doc.routing(request.param("routing"));
      doc.parent(request.param("parent"));
      doc.timestamp(request.param("timestamp"));
      if (request.hasParam("ttl")) {
        doc.ttl(request.param("ttl"));
      }
      doc.version(RestActions.parseVersion(request));
      doc.versionType(VersionType.fromString(request.param("version_type"),doc.versionType()));
    }
  }
  client.update(updateRequest,new RestStatusToXContentListener<>(channel));
}
