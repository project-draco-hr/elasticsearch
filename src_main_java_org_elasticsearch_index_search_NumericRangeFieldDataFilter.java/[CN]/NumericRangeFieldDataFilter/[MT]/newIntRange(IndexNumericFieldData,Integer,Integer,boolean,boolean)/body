{
  return new NumericRangeFieldDataFilter<Integer>(indexFieldData,lowerVal,upperVal,includeLower,includeUpper){
    @Override public DocIdSet getDocIdSet(    LeafReaderContext ctx,    Bits acceptedDocs) throws IOException {
      final int inclusiveLowerPoint, inclusiveUpperPoint;
      if (lowerVal != null) {
        int i=lowerVal.intValue();
        if (!includeLower && i == Integer.MAX_VALUE)         return null;
        inclusiveLowerPoint=includeLower ? i : (i + 1);
      }
 else {
        inclusiveLowerPoint=Integer.MIN_VALUE;
      }
      if (upperVal != null) {
        int i=upperVal.intValue();
        if (!includeUpper && i == Integer.MIN_VALUE)         return null;
        inclusiveUpperPoint=includeUpper ? i : (i - 1);
      }
 else {
        inclusiveUpperPoint=Integer.MAX_VALUE;
      }
      if (inclusiveLowerPoint > inclusiveUpperPoint)       return null;
      final SortedNumericDocValues values=indexFieldData.load(ctx).getLongValues();
      return new LongRangeMatchDocIdSet(ctx.reader().maxDoc(),acceptedDocs,values,inclusiveLowerPoint,inclusiveUpperPoint);
    }
  }
;
}
