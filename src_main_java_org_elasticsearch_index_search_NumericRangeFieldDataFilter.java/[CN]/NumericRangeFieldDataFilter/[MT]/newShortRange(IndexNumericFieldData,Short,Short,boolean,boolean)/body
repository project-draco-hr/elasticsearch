{
  return new NumericRangeFieldDataFilter<Short>(indexFieldData,lowerVal,upperVal,includeLower,includeUpper){
    @Override public DocIdSet getDocIdSet(    LeafReaderContext ctx,    Bits acceptedDocs) throws IOException {
      final short inclusiveLowerPoint, inclusiveUpperPoint;
      if (lowerVal != null) {
        short i=lowerVal.shortValue();
        if (!includeLower && i == Short.MAX_VALUE)         return null;
        inclusiveLowerPoint=(short)(includeLower ? i : (i + 1));
      }
 else {
        inclusiveLowerPoint=Short.MIN_VALUE;
      }
      if (upperVal != null) {
        short i=upperVal.shortValue();
        if (!includeUpper && i == Short.MIN_VALUE)         return null;
        inclusiveUpperPoint=(short)(includeUpper ? i : (i - 1));
      }
 else {
        inclusiveUpperPoint=Short.MAX_VALUE;
      }
      if (inclusiveLowerPoint > inclusiveUpperPoint)       return null;
      final SortedNumericDocValues values=indexFieldData.load(ctx).getLongValues();
      return new LongRangeMatchDocIdSet(ctx.reader().maxDoc(),acceptedDocs,values,inclusiveLowerPoint,inclusiveUpperPoint);
    }
  }
;
}
