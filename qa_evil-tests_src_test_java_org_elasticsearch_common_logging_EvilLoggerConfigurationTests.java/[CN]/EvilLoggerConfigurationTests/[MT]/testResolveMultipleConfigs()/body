{
  final Level level=ESLoggerFactory.getLogger("test").getLevel();
  try {
    final Path configDir=getDataPath("config");
    final Settings settings=Settings.builder().put(Environment.PATH_CONF_SETTING.getKey(),configDir.toAbsolutePath()).put(Environment.PATH_HOME_SETTING.getKey(),createTempDir().toString()).build();
    final Environment environment=new Environment(settings);
    LogConfigurator.configure(environment);
{
      final LoggerContext ctx=(LoggerContext)LogManager.getContext(false);
      final Configuration config=ctx.getConfiguration();
      final LoggerConfig loggerConfig=config.getLoggerConfig("test");
      final Appender appender=loggerConfig.getAppenders().get("console");
      assertThat(appender,notNullValue());
    }
{
      final LoggerContext ctx=(LoggerContext)LogManager.getContext(false);
      final Configuration config=ctx.getConfiguration();
      final LoggerConfig loggerConfig=config.getLoggerConfig("second");
      final Appender appender=loggerConfig.getAppenders().get("console2");
      assertThat(appender,notNullValue());
    }
{
      final LoggerContext ctx=(LoggerContext)LogManager.getContext(false);
      final Configuration config=ctx.getConfiguration();
      final LoggerConfig loggerConfig=config.getLoggerConfig("third");
      final Appender appender=loggerConfig.getAppenders().get("console3");
      assertThat(appender,notNullValue());
    }
  }
  finally {
    Configurator.setLevel("test",level);
  }
}
