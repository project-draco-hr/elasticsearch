{
  if (version.onOrAfter(Version.LUCENE_4_4_0)) {
    return new HyphenationCompoundWordTokenFilter(tokenStream,hyphenationTree,wordList,minWordSize,minSubwordSize,maxSubwordSize,onlyLongestMatch);
  }
 else {
    return new Lucene43HyphenationCompoundWordTokenFilter(tokenStream,hyphenationTree,wordList,minWordSize,minSubwordSize,maxSubwordSize,onlyLongestMatch);
  }
}
