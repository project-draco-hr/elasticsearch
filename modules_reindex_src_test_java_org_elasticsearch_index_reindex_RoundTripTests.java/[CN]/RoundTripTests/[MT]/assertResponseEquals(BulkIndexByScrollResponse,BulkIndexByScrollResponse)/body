{
  assertEquals(expected.getTook(),actual.getTook());
  assertTaskStatusEquals(expected.getStatus(),actual.getStatus());
  assertEquals(expected.getBulkFailures().size(),actual.getBulkFailures().size());
  for (int i=0; i < expected.getBulkFailures().size(); i++) {
    Failure expectedFailure=expected.getBulkFailures().get(i);
    Failure actualFailure=actual.getBulkFailures().get(i);
    assertEquals(expectedFailure.getIndex(),actualFailure.getIndex());
    assertEquals(expectedFailure.getType(),actualFailure.getType());
    assertEquals(expectedFailure.getId(),actualFailure.getId());
    assertEquals(expectedFailure.getMessage(),actualFailure.getMessage());
    assertEquals(expectedFailure.getStatus(),actualFailure.getStatus());
  }
  assertEquals(expected.getSearchFailures().size(),actual.getSearchFailures().size());
  for (int i=0; i < expected.getSearchFailures().size(); i++) {
    SearchFailure expectedFailure=expected.getSearchFailures().get(i);
    SearchFailure actualFailure=actual.getSearchFailures().get(i);
    assertEquals(expectedFailure.getIndex(),actualFailure.getIndex());
    assertEquals(expectedFailure.getShardId(),actualFailure.getShardId());
    assertEquals(expectedFailure.getNodeId(),actualFailure.getNodeId());
    assertEquals(expectedFailure.getReason().getClass(),actualFailure.getReason().getClass());
    assertEquals(expectedFailure.getReason().getMessage(),actualFailure.getReason().getMessage());
  }
}
