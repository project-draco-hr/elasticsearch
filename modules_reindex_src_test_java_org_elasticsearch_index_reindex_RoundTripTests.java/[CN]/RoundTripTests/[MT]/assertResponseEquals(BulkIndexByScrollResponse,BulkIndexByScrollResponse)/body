{
  assertEquals(expected.getTook(),actual.getTook());
  assertTaskStatusEquals(expected.getStatus(),actual.getStatus());
  assertEquals(expected.getIndexingFailures().size(),actual.getIndexingFailures().size());
  for (int i=0; i < expected.getIndexingFailures().size(); i++) {
    Failure expectedFailure=expected.getIndexingFailures().get(i);
    Failure actualFailure=actual.getIndexingFailures().get(i);
    assertEquals(expectedFailure.getIndex(),actualFailure.getIndex());
    assertEquals(expectedFailure.getType(),actualFailure.getType());
    assertEquals(expectedFailure.getId(),actualFailure.getId());
    assertEquals(expectedFailure.getMessage(),actualFailure.getMessage());
    assertEquals(expectedFailure.getStatus(),actualFailure.getStatus());
  }
  assertEquals(expected.getSearchFailures().size(),actual.getSearchFailures().size());
  for (int i=0; i < expected.getSearchFailures().size(); i++) {
    ShardSearchFailure expectedFailure=expected.getSearchFailures().get(i);
    ShardSearchFailure actualFailure=actual.getSearchFailures().get(i);
    assertEquals(expectedFailure.shard(),actualFailure.shard());
    assertEquals(expectedFailure.status(),actualFailure.status());
    assertEquals(expectedFailure.reason(),actualFailure.reason());
  }
}
