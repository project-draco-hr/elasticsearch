{
  ReindexRequest reindex=new ReindexRequest(new SearchRequest(),new IndexRequest());
  randomRequest(reindex);
  reindex.getDestination().version(randomFrom(Versions.MATCH_ANY,Versions.MATCH_DELETED,12L,1L,123124L,12L));
  reindex.getDestination().index("test");
  if (randomBoolean()) {
    int port=between(1,Integer.MAX_VALUE);
    BytesReference query=new BytesArray(randomAsciiOfLength(5));
    String username=randomBoolean() ? randomAsciiOfLength(5) : null;
    String password=username != null && randomBoolean() ? randomAsciiOfLength(5) : null;
    int headersCount=randomBoolean() ? 0 : between(1,10);
    Map<String,String> headers=new HashMap<>(headersCount);
    while (headers.size() < headersCount) {
      headers.put(randomAsciiOfLength(5),randomAsciiOfLength(5));
    }
    reindex.setRemoteInfo(new RemoteInfo(randomAsciiOfLength(5),randomAsciiOfLength(5),port,query,username,password,headers));
  }
  ReindexRequest tripped=new ReindexRequest();
  roundTrip(reindex,tripped);
  assertRequestEquals(reindex,tripped);
  assertEquals(reindex.getDestination().version(),tripped.getDestination().version());
  assertEquals(reindex.getDestination().index(),tripped.getDestination().index());
  if (reindex.getRemoteInfo() == null) {
    assertNull(tripped.getRemoteInfo());
  }
 else {
    assertNotNull(tripped.getRemoteInfo());
    assertEquals(reindex.getRemoteInfo().getScheme(),tripped.getRemoteInfo().getScheme());
    assertEquals(reindex.getRemoteInfo().getHost(),tripped.getRemoteInfo().getHost());
    assertEquals(reindex.getRemoteInfo().getQuery(),tripped.getRemoteInfo().getQuery());
    assertEquals(reindex.getRemoteInfo().getUsername(),tripped.getRemoteInfo().getUsername());
    assertEquals(reindex.getRemoteInfo().getPassword(),tripped.getRemoteInfo().getPassword());
    assertEquals(reindex.getRemoteInfo().getHeaders(),tripped.getRemoteInfo().getHeaders());
  }
}
