{
  final NumericFieldData latFieldData=(NumericFieldData)fieldDataCache.cache(fieldDataType,reader,latFieldName);
  final NumericFieldData lonFieldData=(NumericFieldData)fieldDataCache.cache(fieldDataType,reader,lonFieldName);
  return new GetDocSet(reader.maxDoc()){
    @Override public boolean isCacheable(){
      return false;
    }
    @Override public boolean get(    int doc) throws IOException {
      if (!latFieldData.hasValue(doc) || !lonFieldData.hasValue(doc)) {
        return false;
      }
      if (latFieldData.multiValued()) {
        double[] lats=latFieldData.doubleValues(doc);
        double[] lons=latFieldData.doubleValues(doc);
        for (int i=0; i < lats.length; i++) {
          double d=geoDistance.calculate(lat,lon,lats[i],lons[i],DistanceUnit.MILES);
          if (d < distance) {
            return true;
          }
        }
        return false;
      }
 else {
        double d=geoDistance.calculate(lat,lon,latFieldData.doubleValue(doc),lonFieldData.doubleValue(doc),DistanceUnit.MILES);
        return d < distance;
      }
    }
  }
;
}
