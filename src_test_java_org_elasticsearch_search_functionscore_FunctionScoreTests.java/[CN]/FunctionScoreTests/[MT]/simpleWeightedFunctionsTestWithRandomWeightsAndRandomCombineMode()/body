{
  assertAcked(prepareCreate(INDEX).addMapping(TYPE,MAPPING_WITH_FLOAT_AND_GEO_POINT_AND_TEST_FIELD));
  ensureYellow();
  XContentBuilder doc=jsonBuilder().startObject().field(TEXT_FIELD,"value").startObject(GEO_POINT_FIELD).field("lat",10).field("lon",20).endObject().field(FLOAT_FIELD,10).endObject();
  index(INDEX,TYPE,"1",doc);
  refresh();
  ScoreFunctionBuilder[] scoreFunctionBuilders=getScoreFunctionBuilders();
  float[] weights=createRandomWeights(scoreFunctionBuilders.length);
  float[] scores=getScores(scoreFunctionBuilders);
  String scoreMode=getRandomScoreMode();
  FunctionScoreQueryBuilder withWeights=functionScoreQuery(termFilter(TEXT_FIELD,"value")).scoreMode(scoreMode);
  int weightscounter=0;
  for (  ScoreFunctionBuilder builder : scoreFunctionBuilders) {
    withWeights.add(builder.setWeight((float)weights[weightscounter]));
    weightscounter++;
  }
  SearchResponse responseWithWeights=client().search(searchRequest().source(searchSource().query(withWeights))).actionGet();
  double expectedScore=computeExpectedScore(weights,scores,scoreMode);
  assertThat(expectedScore / responseWithWeights.getHits().getAt(0).getScore(),closeTo(1.0,1.e-6));
}
