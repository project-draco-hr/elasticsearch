{
  logger.info("--> creating index test with auto expand replicas set to 0-2");
  assertAcked(prepareCreate("test",3,settingsBuilder().put("auto_expand_replicas","0-2")));
  NumShards numShards=getNumShards("test");
  logger.info("--> running cluster health");
  ClusterHealthResponse clusterHealth=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForActiveShards(numShards.numPrimaries * 3).execute().actionGet();
  logger.info("--> done cluster health, status {}",clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  assertThat(clusterHealth.getIndices().get("test").getActivePrimaryShards(),equalTo(numShards.numPrimaries));
  assertThat(clusterHealth.getIndices().get("test").getNumberOfReplicas(),equalTo(2));
  assertThat(clusterHealth.getIndices().get("test").getActiveShards(),equalTo(numShards.numPrimaries * 3));
  logger.info("--> add two more nodes");
  allowNodes("test",4);
  allowNodes("test",5);
  logger.info("--> update the auto expand replicas to 0-3");
  client().admin().indices().prepareUpdateSettings("test").setSettings(settingsBuilder().put("auto_expand_replicas","0-3")).execute().actionGet();
  logger.info("--> running cluster health");
  clusterHealth=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForActiveShards(numShards.numPrimaries * 4).execute().actionGet();
  logger.info("--> done cluster health, status {}",clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  assertThat(clusterHealth.getIndices().get("test").getActivePrimaryShards(),equalTo(numShards.numPrimaries));
  assertThat(clusterHealth.getIndices().get("test").getNumberOfReplicas(),equalTo(3));
  assertThat(clusterHealth.getIndices().get("test").getActiveShards(),equalTo(numShards.numPrimaries * 4));
}
