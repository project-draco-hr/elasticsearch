{
  ContextAndHeaderHolder contextAndHeaders=new ContextAndHeaderHolder();
  ScriptService scriptService=makeScriptService();
  Script script=new Script("1",ScriptService.ScriptType.INLINE,MockScriptEngine.NAME,null);
  try {
    scriptService.compile(script,new ScriptContext.Plugin(PLUGIN_NAME,"custom_exp_disabled_op"),contextAndHeaders);
    fail("script compilation should have been rejected");
  }
 catch (  ScriptException e) {
    assertTrue(e.getMessage(),e.getMessage().contains("scripts of type [inline], operation [" + PLUGIN_NAME + "_custom_exp_disabled_op] and lang ["+ MockScriptEngine.NAME+ "] are disabled"));
  }
  assertNotNull(scriptService.compile(script,ScriptContext.Standard.AGGS,contextAndHeaders));
  assertNotNull(scriptService.compile(script,ScriptContext.Standard.SEARCH,contextAndHeaders));
  assertNotNull(scriptService.compile(script,new ScriptContext.Plugin(PLUGIN_NAME,"custom_op"),contextAndHeaders));
}
