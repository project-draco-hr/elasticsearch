{
  builder.startObject(QueryStringQueryParser.NAME);
  builder.field("query",queryString);
  if (defaultField != null) {
    builder.field("default_field",defaultField);
  }
  if (fields != null) {
    builder.startArray("fields");
    for (    String field : fields) {
      if (fieldsBoosts != null && fieldsBoosts.containsKey(field)) {
        field+="^" + fieldsBoosts.get(field);
      }
      builder.value(field);
    }
    builder.endArray();
  }
  if (useDisMax != null) {
    builder.field("use_dis_max",useDisMax);
  }
  if (tieBreaker != -1) {
    builder.field("tie_breaker",tieBreaker);
  }
  if (defaultOperator != null) {
    builder.field("default_operator",defaultOperator.name().toLowerCase(Locale.ROOT));
  }
  if (analyzer != null) {
    builder.field("analyzer",analyzer);
  }
  if (quoteAnalyzer != null) {
    builder.field("quote_analyzer",quoteAnalyzer);
  }
  if (autoGeneratePhraseQueries != null) {
    builder.field("auto_generate_phrase_queries",autoGeneratePhraseQueries);
  }
  if (allowLeadingWildcard != null) {
    builder.field("allow_leading_wildcard",allowLeadingWildcard);
  }
  if (lowercaseExpandedTerms != null) {
    builder.field("lowercase_expanded_terms",lowercaseExpandedTerms);
  }
  if (enablePositionIncrements != null) {
    builder.field("enable_position_increments",enablePositionIncrements);
  }
  if (fuzziness != null) {
    fuzziness.toXContent(builder,params);
  }
  if (boost != -1) {
    builder.field("boost",boost);
  }
  if (fuzzyPrefixLength != -1) {
    builder.field("fuzzy_prefix_length",fuzzyPrefixLength);
  }
  if (fuzzyMaxExpansions != -1) {
    builder.field("fuzzy_max_expansions",fuzzyMaxExpansions);
  }
  if (fuzzyRewrite != null) {
    builder.field("fuzzy_rewrite",fuzzyRewrite);
  }
  if (phraseSlop != -1) {
    builder.field("phrase_slop",phraseSlop);
  }
  if (analyzeWildcard != null) {
    builder.field("analyze_wildcard",analyzeWildcard);
  }
  if (rewrite != null) {
    builder.field("rewrite",rewrite);
  }
  if (minimumShouldMatch != null) {
    builder.field("minimum_should_match",minimumShouldMatch);
  }
  if (quoteFieldSuffix != null) {
    builder.field("quote_field_suffix",quoteFieldSuffix);
  }
  if (lenient != null) {
    builder.field("lenient",lenient);
  }
  if (queryName != null) {
    builder.field("_name",queryName);
  }
  builder.endObject();
}
