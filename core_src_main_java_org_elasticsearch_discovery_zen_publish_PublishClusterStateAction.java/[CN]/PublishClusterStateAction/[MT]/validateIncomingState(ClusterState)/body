{
  final ClusterName incomingClusterName=state.getClusterName();
  if (!incomingClusterName.equals(PublishClusterStateAction.this.clusterName)) {
    logger.warn("received cluster state from [{}] which is also master but with a different cluster name [{}]",state.nodes().masterNode(),incomingClusterName);
    throw new IllegalStateException("received state from a node that is not part of the cluster");
  }
  final DiscoveryNodes currentNodes=nodesProvider.nodes();
  if (currentNodes.localNode().equals(state.nodes().localNode()) == false) {
    logger.warn("received a cluster state from [{}] and not part of the cluster, should not happen",state.nodes().masterNode());
    throw new IllegalStateException("received state from a node that is not part of the cluster");
  }
  if (currentNodes.localNodeMaster() == false) {
    ZenDiscovery.validateStateIsFromCurrentMaster(logger,currentNodes,state);
  }
}
