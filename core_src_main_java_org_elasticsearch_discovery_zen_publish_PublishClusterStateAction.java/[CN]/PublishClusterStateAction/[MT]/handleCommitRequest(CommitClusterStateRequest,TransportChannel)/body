{
  final ClusterState state=pendingStatesQueue.markAsCommitted(request.stateUUID,new PendingClusterStatesQueue.StateProcessedListener(){
    @Override public void onNewClusterStateProcessed(){
      try {
        channel.sendResponse(TransportResponse.Empty.INSTANCE);
      }
 catch (      Throwable e) {
        logger.debug("failed to send response on cluster state processed",e);
        onNewClusterStateFailed(e);
      }
    }
    @Override public void onNewClusterStateFailed(    Throwable t){
      try {
        channel.sendResponse(t);
      }
 catch (      Throwable e) {
        logger.debug("failed to send response on cluster state processed",e);
      }
    }
  }
);
  if (state != null) {
    newPendingClusterStatelistener.onNewClusterState("master " + state.nodes().masterNode() + " committed version ["+ state.version()+ "]");
  }
}
