{
  final ClusterAllocationExplanation.FinalDecision finalDecision;
  final ClusterAllocationExplanation.StoreCopy storeCopy;
  final String finalExplanation;
  if (storeStatus == null) {
    storeCopy=ClusterAllocationExplanation.StoreCopy.NONE;
  }
 else {
    final Throwable storeErr=storeStatus.getStoreException();
    if (storeErr != null) {
      if (ExceptionsHelper.unwrapCause(storeErr) instanceof CorruptIndexException) {
        storeCopy=ClusterAllocationExplanation.StoreCopy.CORRUPT;
      }
 else {
        storeCopy=ClusterAllocationExplanation.StoreCopy.IO_ERROR;
      }
    }
 else     if (activeAllocationIds.isEmpty()) {
      storeCopy=ClusterAllocationExplanation.StoreCopy.UNKNOWN;
    }
 else     if (activeAllocationIds.contains(storeStatus.getAllocationId())) {
      storeCopy=ClusterAllocationExplanation.StoreCopy.AVAILABLE;
    }
 else {
      storeCopy=ClusterAllocationExplanation.StoreCopy.STALE;
    }
  }
  if (node.getId().equals(assignedNodeId)) {
    finalDecision=ClusterAllocationExplanation.FinalDecision.ALREADY_ASSIGNED;
    finalExplanation="the shard is already assigned to this node";
  }
 else   if (shard.primary() && shard.unassigned() && storeCopy == ClusterAllocationExplanation.StoreCopy.STALE) {
    finalExplanation="the copy of the shard is stale, allocation ids do not match";
    finalDecision=ClusterAllocationExplanation.FinalDecision.NO;
  }
 else   if (shard.primary() && shard.unassigned() && storeCopy == ClusterAllocationExplanation.StoreCopy.CORRUPT) {
    finalExplanation="the copy of the shard is corrupt";
    finalDecision=ClusterAllocationExplanation.FinalDecision.NO;
  }
 else   if (shard.primary() && shard.unassigned() && storeCopy == ClusterAllocationExplanation.StoreCopy.IO_ERROR) {
    finalExplanation="the copy of the shard cannot be read";
    finalDecision=ClusterAllocationExplanation.FinalDecision.NO;
  }
 else {
    if (nodeDecision.type() == Decision.Type.NO) {
      finalDecision=ClusterAllocationExplanation.FinalDecision.NO;
      finalExplanation="the shard cannot be assigned because one or more allocation decider returns a 'NO' decision";
    }
 else {
      finalDecision=ClusterAllocationExplanation.FinalDecision.YES;
      if (storeCopy == ClusterAllocationExplanation.StoreCopy.AVAILABLE) {
        finalExplanation="the shard can be assigned and the node contains a valid copy of the shard data";
      }
 else {
        finalExplanation="the shard can be assigned";
      }
    }
  }
  return new NodeExplanation(node,nodeDecision,nodeWeight,storeStatus,finalDecision,finalExplanation,storeCopy);
}
