{
  String yaml="\"First test section\": \n" + "  - skip:\n" + "      version:  \"2.0.0 - 2.2.0\"\n"+ "      reason:   \"Update doesn't return metadata fields, waiting for #3259\"\n"+ "  - do :\n"+ "      catch: missing\n"+ "      indices.get_warmer:\n"+ "          index: test_index\n"+ "          name: test_warmer\n"+ "  - set: {_scroll_id: scroll_id}";
  ClientYamlTestSectionParser testSectionParser=new ClientYamlTestSectionParser();
  parser=YamlXContent.yamlXContent.createParser(yaml);
  ClientYamlTestSection testSection=testSectionParser.parse(new ClientYamlTestSuiteParseContext("api","suite",parser));
  assertThat(testSection,notNullValue());
  assertThat(testSection.getName(),equalTo("First test section"));
  assertThat(testSection.getSkipSection(),notNullValue());
  assertThat(testSection.getSkipSection().getLowerVersion(),equalTo(Version.V_2_0_0));
  assertThat(testSection.getSkipSection().getUpperVersion(),equalTo(Version.V_2_2_0));
  assertThat(testSection.getSkipSection().getReason(),equalTo("Update doesn't return metadata fields, waiting for #3259"));
  assertThat(testSection.getExecutableSections().size(),equalTo(2));
  DoSection doSection=(DoSection)testSection.getExecutableSections().get(0);
  assertThat(doSection.getCatch(),equalTo("missing"));
  assertThat(doSection.getApiCallSection(),notNullValue());
  assertThat(doSection.getApiCallSection().getApi(),equalTo("indices.get_warmer"));
  assertThat(doSection.getApiCallSection().getParams().size(),equalTo(2));
  assertThat(doSection.getApiCallSection().hasBody(),equalTo(false));
  SetSection setSection=(SetSection)testSection.getExecutableSections().get(1);
  assertThat(setSection.getStash().size(),equalTo(1));
  assertThat(setSection.getStash().get("_scroll_id"),equalTo("scroll_id"));
}
