{
  clusterService.submitStateUpdateTask("gateway (recovered meta-data)",new ProcessedClusterStateUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState){
      MetaData.Builder metaDataBuilder=newMetaDataBuilder().metaData(currentState.metaData()).maxNumberOfShardsPerNode(fMetaData.maxNumberOfShardsPerNode());
      metaDataBuilder.markAsRecoveredFromGateway();
      return newClusterStateBuilder().state(currentState).metaData(metaDataBuilder).build();
    }
    @Override public void clusterStateProcessed(    ClusterState clusterState){
      for (      final IndexMetaData indexMetaData : fMetaData) {
        createIndexService.createIndex(new MetaDataCreateIndexService.Request("gateway",indexMetaData.index()).settings(indexMetaData.settings()).mappings(indexMetaData.mappings()).timeout(timeValueSeconds(30)),new MetaDataCreateIndexService.Listener(){
          @Override public void onResponse(          MetaDataCreateIndexService.Response response){
            latch.countDown();
          }
          @Override public void onFailure(          Throwable t){
            logger.error("failed to create index [{}]",indexMetaData.index(),t);
          }
        }
);
      }
      clusterService.submitStateUpdateTask("gateway (remove block)",new ClusterStateUpdateTask(){
        @Override public ClusterState execute(        ClusterState currentState){
          ClusterBlocks.Builder blocks=ClusterBlocks.builder().blocks(currentState.blocks()).removeGlobalBlock(NOT_RECOVERED_FROM_GATEWAY_BLOCK);
          return newClusterStateBuilder().state(currentState).blocks(blocks).build();
        }
      }
);
    }
  }
);
}
