{
  logger.debug("reading state from gateway {} ...",gateway);
  StopWatch stopWatch=new StopWatch().start();
  MetaData metaData;
  try {
    metaData=gateway.read();
    logger.debug("read state from gateway {}, took {}",gateway,stopWatch.stop().totalTime());
  }
 catch (  Exception e) {
    logger.error("failed to read from gateway",e);
    markMetaDataAsReadFromGateway("failure");
    return false;
  }
  if (metaData == null) {
    logger.debug("no state read from gateway");
    markMetaDataAsReadFromGateway("no state");
    return true;
  }
  final MetaData fMetaData=metaData;
  final CountDownLatch latch=new CountDownLatch(fMetaData.indices().size());
  if (recoverAfterTime != null) {
    updateClusterStateBlockedOnNotRecovered();
    logger.debug("delaying initial state index creation for [{}]",recoverAfterTime);
    threadPool.schedule(new Runnable(){
      @Override public void run(){
        updateClusterStateFromGateway(fMetaData,latch);
      }
    }
,recoverAfterTime);
  }
 else {
    updateClusterStateFromGateway(fMetaData,latch);
  }
  if (recoverAfterTime != null) {
    return null;
  }
  if (waitTimeout != null) {
    try {
      return latch.await(waitTimeout.millis(),TimeUnit.MILLISECONDS);
    }
 catch (    InterruptedException e) {
    }
  }
  return null;
}
