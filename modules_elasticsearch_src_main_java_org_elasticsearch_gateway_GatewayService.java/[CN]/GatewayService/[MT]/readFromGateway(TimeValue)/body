{
  logger.debug("First master in the cluster, reading state from gateway");
  MetaData metaData;
  try {
    metaData=gateway.read();
  }
 catch (  Exception e) {
    logger.error("Failed to read from gateway",e);
    markMetaDataAsReadFromGateway("failure");
    return false;
  }
  if (metaData == null) {
    logger.debug("No state read from gateway");
    markMetaDataAsReadFromGateway("no state");
    return true;
  }
  final MetaData fMetaData=metaData;
  final CountDownLatch latch=new CountDownLatch(fMetaData.indices().size());
  if (delayIndexCreation != null) {
    logger.debug("Delaying initial state index creation for [{}]",delayIndexCreation);
    threadPool.schedule(new Runnable(){
      @Override public void run(){
        updateClusterStateFromGateway(fMetaData,latch);
      }
    }
,delayIndexCreation);
  }
 else {
    updateClusterStateFromGateway(fMetaData,latch);
  }
  if (delayIndexCreation != null) {
    return null;
  }
  if (waitTimeout != null) {
    try {
      return latch.await(waitTimeout.millis(),TimeUnit.MILLISECONDS);
    }
 catch (    InterruptedException e) {
    }
  }
  return null;
}
