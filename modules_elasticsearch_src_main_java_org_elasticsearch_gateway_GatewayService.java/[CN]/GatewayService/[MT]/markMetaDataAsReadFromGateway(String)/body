{
  clusterService.submitStateUpdateTask("gateway (marked as read, reroute, reason=" + reason + ")",new ProcessedClusterStateUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState){
      if (!currentState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK)) {
        return currentState;
      }
      ClusterBlocks.Builder blocks=ClusterBlocks.builder().blocks(currentState.blocks()).removeGlobalBlock(STATE_NOT_RECOVERED_BLOCK);
      RoutingTable.Builder routingTableBuilder=RoutingTable.builder().routingTable(currentState.routingTable());
      for (      IndexMetaData indexMetaData : currentState.metaData().indices().values()) {
        if (indexMetaData.state() == IndexMetaData.State.OPEN) {
          IndexRoutingTable.Builder indexRoutingBuilder=new IndexRoutingTable.Builder(indexMetaData.index()).initializeEmpty(currentState.metaData().index(indexMetaData.index()),false);
          routingTableBuilder.add(indexRoutingBuilder);
        }
      }
      RoutingAllocation.Result routingResult=shardsAllocation.reroute(newClusterStateBuilder().state(currentState).routingTable(routingTableBuilder).build());
      return newClusterStateBuilder().state(currentState).blocks(blocks).routingResult(routingResult).build();
    }
    @Override public void clusterStateProcessed(    ClusterState clusterState){
      logger.info("all indices created and rerouting has begun");
    }
  }
);
}
