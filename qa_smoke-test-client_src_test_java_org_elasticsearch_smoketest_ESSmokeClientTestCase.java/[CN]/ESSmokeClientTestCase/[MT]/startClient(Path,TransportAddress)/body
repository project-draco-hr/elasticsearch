{
  Settings.Builder builder=Settings.builder().put("node.name","qa_smoke_client_" + counter.getAndIncrement()).put("client.transport.ignore_cluster_name",true).put(Environment.PATH_HOME_SETTING.getKey(),tempDir);
  final Collection<Class<? extends Plugin>> plugins;
  if (random().nextBoolean()) {
    builder.put(NetworkModule.TRANSPORT_TYPE_KEY,MockTcpTransportPlugin.MOCK_TCP_TRANSPORT_NAME);
    plugins=Collections.singleton(MockTcpTransportPlugin.class);
  }
 else {
    plugins=Collections.emptyList();
  }
  TransportClient client=new PreBuiltTransportClient(builder.build(),plugins).addTransportAddresses(transportAddresses);
  logger.info("--> Elasticsearch Java TransportClient started");
  Exception clientException=null;
  try {
    ClusterHealthResponse health=client.admin().cluster().prepareHealth().get();
    logger.info("--> connected to [{}] cluster which is running [{}] node(s).",health.getClusterName(),health.getNumberOfNodes());
  }
 catch (  Exception e) {
    clientException=e;
  }
  assumeNoException("Sounds like your cluster is not running at " + clusterAddresses,clientException);
  return client;
}
