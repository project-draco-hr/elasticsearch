{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  client.admin().indices().prepareCreate("test").addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("field1").field("analyzer","whitespace").field("type","string").endObject().endObject().endObject().endObject()).setSettings(ImmutableSettings.settingsBuilder().put("number_of_shards",1)).execute().actionGet();
  client.prepareIndex("test","type1","1").setSource("field1","the quick brown fox").execute().actionGet();
  client.prepareIndex("test","type1","2").setSource("field1","the quick lazy huge brown fox jumps over the tree").execute().actionGet();
  client.prepareIndex("test","type1","3").setSource("field1","quick lazy huge brown","field2","the quick lazy huge brown fox jumps over the tree").setRefresh(true).execute().actionGet();
  SearchResponse searchResponse=client.prepareSearch().setQuery(QueryBuilders.commonTerms("field1","the quick brown").cutoffFrequency(3)).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(2l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("2"));
  searchResponse=client.prepareSearch().setQuery(QueryBuilders.commonTerms("field1","the quick brown").cutoffFrequency(3).lowFreqOperator(Operator.OR)).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("2"));
  assertThat(searchResponse.getHits().getHits()[2].getId(),equalTo("3"));
  searchResponse=client.prepareSearch().setQuery(QueryBuilders.commonTerms("field1","the quick brown").cutoffFrequency(3).analyzer("standard")).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("3"));
  assertThat(searchResponse.getHits().getHits()[2].getId(),equalTo("2"));
  searchResponse=client.prepareSearch().setQuery(QueryBuilders.matchQuery("field1","the quick brown").cutoffFrequency(3).operator(MatchQueryBuilder.Operator.AND)).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(2l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("2"));
  searchResponse=client.prepareSearch().setQuery(QueryBuilders.matchQuery("field1","the quick brown").cutoffFrequency(3).operator(MatchQueryBuilder.Operator.OR)).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("2"));
  assertThat(searchResponse.getHits().getHits()[2].getId(),equalTo("3"));
  searchResponse=client.prepareSearch().setQuery(QueryBuilders.matchQuery("field1","the quick brown").cutoffFrequency(3).operator(MatchQueryBuilder.Operator.AND).analyzer("standard")).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("3"));
  assertThat(searchResponse.getHits().getHits()[2].getId(),equalTo("2"));
  searchResponse=client.prepareSearch().setQuery(QueryBuilders.multiMatchQuery("the quick brown","field1","field2").cutoffFrequency(3).operator(MatchQueryBuilder.Operator.AND)).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(3l));
  assertThat(searchResponse.getHits().getHits()[0].getId(),equalTo("3"));
  assertThat(searchResponse.getHits().getHits()[1].getId(),equalTo("1"));
  assertThat(searchResponse.getHits().getHits()[2].getId(),equalTo("2"));
}
