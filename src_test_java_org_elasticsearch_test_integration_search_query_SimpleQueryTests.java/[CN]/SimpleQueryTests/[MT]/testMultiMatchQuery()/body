{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  client.admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",1)).execute().actionGet();
  client.prepareIndex("test","type1","1").setSource("field1","value1","field2","value4","field3","value3").execute().actionGet();
  client.prepareIndex("test","type1","2").setSource("field1","value2","field2","value5","field3","value2").execute().actionGet();
  client.prepareIndex("test","type1","3").setSource("field1","value3","field2","value6","field3","value1").execute().actionGet();
  client.admin().indices().prepareRefresh("test").execute().actionGet();
  MultiMatchQueryBuilder builder=QueryBuilders.multiMatchQuery("value1 value2 value4","field1","field2");
  SearchResponse searchResponse=client.prepareSearch().setQuery(builder).addFacet(FacetBuilders.termsFacet("field1").field("field1")).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(2l));
  assertThat("1",equalTo(searchResponse.hits().getAt(0).id()));
  assertThat("2",equalTo(searchResponse.hits().getAt(1).id()));
  builder.useDisMax(false);
  searchResponse=client.prepareSearch().setQuery(builder).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(2l));
  assertThat("1",equalTo(searchResponse.hits().getAt(0).id()));
  assertThat("2",equalTo(searchResponse.hits().getAt(1).id()));
  client.admin().indices().prepareRefresh("test").execute().actionGet();
  builder=QueryBuilders.multiMatchQuery("value1","field1","field2").operator(MatchQueryBuilder.Operator.AND);
  searchResponse=client.prepareSearch().setQuery(builder).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(1l));
  assertThat("1",equalTo(searchResponse.hits().getAt(0).id()));
  client.admin().indices().prepareRefresh("test").execute().actionGet();
  builder=QueryBuilders.multiMatchQuery("value1","field1","field3^1.5").operator(MatchQueryBuilder.Operator.AND);
  searchResponse=client.prepareSearch().setQuery(builder).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(2l));
  assertThat("3",equalTo(searchResponse.hits().getAt(0).id()));
  assertThat("1",equalTo(searchResponse.hits().getAt(1).id()));
  client.admin().indices().prepareRefresh("test").execute().actionGet();
  builder=QueryBuilders.multiMatchQuery("value1").field("field1").field("field3",1.5f).operator(MatchQueryBuilder.Operator.AND);
  searchResponse=client.prepareSearch().setQuery(builder).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(2l));
  assertThat("3",equalTo(searchResponse.hits().getAt(0).id()));
  assertThat("1",equalTo(searchResponse.hits().getAt(1).id()));
  client.prepareIndex("test","type1","3").setSource("field1","value7","field2","value8","field4",5).execute().actionGet();
  client.admin().indices().prepareRefresh("test").execute().actionGet();
  builder=QueryBuilders.multiMatchQuery("value1","field1","field2","field4");
  try {
    client.prepareSearch().setQuery(builder).execute().actionGet();
    fail("Exception expected");
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.shardFailures()[0].status(),equalTo(RestStatus.BAD_REQUEST));
  }
  builder.lenient(true);
  searchResponse=client.prepareSearch().setQuery(builder).execute().actionGet();
  assertThat(searchResponse.hits().totalHits(),equalTo(1l));
  assertThat("1",equalTo(searchResponse.hits().getAt(0).id()));
}
