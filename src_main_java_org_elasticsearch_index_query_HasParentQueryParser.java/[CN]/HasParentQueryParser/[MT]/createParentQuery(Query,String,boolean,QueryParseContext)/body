{
  Set<String> parentTypes=new HashSet<>(5);
  parentTypes.add(parentType);
  ParentChildIndexFieldData parentChildIndexFieldData=null;
  for (  DocumentMapper documentMapper : parseContext.mapperService().docMappers(false)) {
    ParentFieldMapper parentFieldMapper=documentMapper.parentFieldMapper();
    if (parentFieldMapper.active()) {
      DocumentMapper parentTypeDocumentMapper=parseContext.mapperService().documentMapper(parentFieldMapper.type());
      parentChildIndexFieldData=parseContext.getForField(parentFieldMapper);
      if (parentTypeDocumentMapper == null) {
        parentTypes.add(parentFieldMapper.type());
      }
    }
  }
  if (parentChildIndexFieldData == null) {
    throw new QueryParsingException(parseContext.index(),"[has_parent] no _parent field configured");
  }
  Filter parentFilter=null;
  if (parentTypes.size() == 1) {
    DocumentMapper documentMapper=parseContext.mapperService().documentMapper(parentTypes.iterator().next());
    if (documentMapper != null) {
      parentFilter=parseContext.cacheFilter(documentMapper.typeFilter(),null);
    }
  }
 else {
    XBooleanFilter parentsFilter=new XBooleanFilter();
    for (    String parentTypeStr : parentTypes) {
      DocumentMapper documentMapper=parseContext.mapperService().documentMapper(parentTypeStr);
      if (documentMapper != null) {
        Filter filter=parseContext.cacheFilter(documentMapper.typeFilter(),null);
        parentsFilter.add(filter,BooleanClause.Occur.SHOULD);
      }
    }
    parentFilter=parentsFilter;
  }
  if (parentFilter == null) {
    return null;
  }
  Filter childrenFilter=parseContext.cacheFilter(new NotFilter(parentFilter),null);
  if (score) {
    return new ParentQuery(parentChildIndexFieldData,innerQuery,parentType,childrenFilter);
  }
 else {
    return new ParentConstantScoreQuery(parentChildIndexFieldData,innerQuery,parentType,childrenFilter);
  }
}
