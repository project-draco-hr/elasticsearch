{
  XContentParser parser=parseContext.parser();
  Query query=null;
  Filter filter=null;
  float boost=1.0f;
  boolean cache=false;
  CacheKeyFilter.Key cacheKey=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("query".equals(currentFieldName)) {
        query=parseContext.parseInnerQuery();
      }
 else       if ("filter".equals(currentFieldName)) {
        filter=parseContext.parseInnerFilter();
      }
    }
 else     if (token.isValue()) {
      if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else       if ("_cache".equals(currentFieldName)) {
        cache=parser.booleanValue();
      }
 else       if ("_cache_key".equals(currentFieldName) || "_cacheKey".equals(currentFieldName)) {
        cacheKey=new CacheKeyFilter.Key(parser.text());
      }
    }
  }
  if (query == null) {
    throw new QueryParsingException(parseContext.index(),"[filtered] requires 'query' element");
  }
  if (filter == null) {
    throw new QueryParsingException(parseContext.index(),"[filtered] requires 'filter' element");
  }
  if (cache) {
    filter=parseContext.cacheFilter(filter,cacheKey);
  }
  if (Queries.isMatchAllQuery(query)) {
    Query q=new DeletionAwareConstantScoreQuery(filter);
    q.setBoost(boost);
    return q;
  }
  FilteredQuery filteredQuery=new FilteredQuery(query,filter);
  filteredQuery.setBoost(boost);
  return filteredQuery;
}
