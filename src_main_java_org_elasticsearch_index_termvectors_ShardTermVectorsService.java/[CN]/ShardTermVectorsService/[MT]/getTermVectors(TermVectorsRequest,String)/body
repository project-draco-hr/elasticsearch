{
  final TermVectorsResponse termVectorsResponse=new TermVectorsResponse(concreteIndex,request.type(),request.id());
  final Term uidTerm=new Term(UidFieldMapper.NAME,Uid.createUidAsBytes(request.type(),request.id()));
  Engine.GetResult get=indexShard.get(new Engine.Get(request.realtime(),uidTerm).version(request.version()).versionType(request.versionType()));
  boolean docFromTranslog=get.source() != null;
  AggregatedDfs dfs=null;
  if (docFromTranslog) {
    request.doc(get.source().source,false);
    termVectorsResponse.setDocVersion(get.version());
  }
  if (request.selectedFields() != null) {
    handleFieldWildcards(request);
  }
  final Engine.Searcher searcher=indexShard.acquireSearcher("term_vector");
  try {
    Fields topLevelFields=MultiFields.getFields(get.searcher() != null ? get.searcher().reader() : searcher.reader());
    Versions.DocIdAndVersion docIdAndVersion=get.docIdAndVersion();
    if (request.doc() != null) {
      Fields termVectorsByField=generateTermVectorsFromDoc(request,!docFromTranslog);
      if (topLevelFields == null) {
        topLevelFields=termVectorsByField;
      }
      if (termVectorsByField != null && useDfs(request)) {
        dfs=getAggregatedDfs(termVectorsByField,request);
      }
      termVectorsResponse.setFields(termVectorsByField,request.selectedFields(),request.getFlags(),topLevelFields,dfs);
      termVectorsResponse.setExists(true);
      termVectorsResponse.setArtificial(!docFromTranslog);
    }
 else     if (docIdAndVersion != null) {
      Fields termVectorsByField=docIdAndVersion.context.reader().getTermVectors(docIdAndVersion.docId);
      Set<String> selectedFields=request.selectedFields();
      if (selectedFields == null && request.perFieldAnalyzer() != null) {
        selectedFields=getFieldsToGenerate(request.perFieldAnalyzer(),termVectorsByField);
      }
      if (selectedFields != null) {
        termVectorsByField=addGeneratedTermVectors(get,termVectorsByField,request,selectedFields);
      }
      if (termVectorsByField != null && useDfs(request)) {
        dfs=getAggregatedDfs(termVectorsByField,request);
      }
      termVectorsResponse.setFields(termVectorsByField,request.selectedFields(),request.getFlags(),topLevelFields,dfs);
      termVectorsResponse.setDocVersion(docIdAndVersion.version);
      termVectorsResponse.setExists(true);
    }
 else {
      termVectorsResponse.setExists(false);
    }
  }
 catch (  Throwable ex) {
    throw new ElasticsearchException("failed to execute term vector request",ex);
  }
 finally {
    searcher.close();
    get.release();
  }
  return termVectorsResponse;
}
