{
  Request request=new Request(new String[]{TEST_INDEX});
  PlainActionFuture<Response> listener=new PlainActionFuture<>();
  action.new AsyncAction(null,request,listener).start();
  Map<String,List<CapturingTransport.CapturedRequest>> capturedRequests=transport.getCapturedRequestsByTargetNodeAndClear();
  ShardsIterator shardIt=clusterService.state().routingTable().allShards(new String[]{TEST_INDEX});
  Set<String> set=new HashSet<>();
  for (  ShardRouting shard : shardIt.asUnordered()) {
    set.add(shard.currentNodeId());
  }
  assertEquals(set.size(),capturedRequests.size());
  assertEquals(set,capturedRequests.keySet());
  for (  Map.Entry<String,List<CapturingTransport.CapturedRequest>> entry : capturedRequests.entrySet()) {
    assertEquals(1,entry.getValue().size());
  }
}
