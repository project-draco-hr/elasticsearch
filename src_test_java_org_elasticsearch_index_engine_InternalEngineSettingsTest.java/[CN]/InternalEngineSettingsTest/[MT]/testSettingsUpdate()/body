{
  final IndexService service=createIndex("foo");
  InternalEngine engine=((InternalEngine)engine(service));
  assertThat(engine.getCurrentIndexWriterConfig().getUseCompoundFile(),is(true));
  client().admin().indices().prepareUpdateSettings("foo").setSettings(ImmutableSettings.builder().put(EngineConfig.INDEX_COMPOUND_ON_FLUSH,false).build()).get();
  assertThat(engine.getCurrentIndexWriterConfig().getUseCompoundFile(),is(false));
  client().admin().indices().prepareUpdateSettings("foo").setSettings(ImmutableSettings.builder().put(EngineConfig.INDEX_COMPOUND_ON_FLUSH,true).build()).get();
  assertThat(engine.getCurrentIndexWriterConfig().getUseCompoundFile(),is(true));
  final int iters=between(1,20);
  for (int i=0; i < iters; i++) {
    boolean compoundOnFlush=randomBoolean();
    long gcDeletes=Math.max(0,randomLong());
    Settings build=ImmutableSettings.builder().put(EngineConfig.INDEX_COMPOUND_ON_FLUSH,compoundOnFlush).put(EngineConfig.INDEX_GC_DELETES_SETTING,gcDeletes).build();
    client().admin().indices().prepareUpdateSettings("foo").setSettings(build).get();
    LiveIndexWriterConfig currentIndexWriterConfig=engine.getCurrentIndexWriterConfig();
    assertEquals(engine.config().isCompoundOnFlush(),compoundOnFlush);
    assertEquals(currentIndexWriterConfig.getUseCompoundFile(),compoundOnFlush);
    assertEquals(engine.config().getGcDeletesInMillis(),gcDeletes);
    assertEquals(engine.getGcDeletesInMillis(),gcDeletes);
  }
  Settings settings=ImmutableSettings.builder().put(EngineConfig.INDEX_GC_DELETES_SETTING,1000).build();
  client().admin().indices().prepareUpdateSettings("foo").setSettings(settings).get();
  assertEquals(engine.getGcDeletesInMillis(),1000);
  assertTrue(engine.config().isEnableGcDeletes());
  settings=ImmutableSettings.builder().put(EngineConfig.INDEX_GC_DELETES_SETTING,"0ms").build();
  client().admin().indices().prepareUpdateSettings("foo").setSettings(settings).get();
  assertEquals(engine.getGcDeletesInMillis(),0);
  assertTrue(engine.config().isEnableGcDeletes());
  settings=ImmutableSettings.builder().put(EngineConfig.INDEX_GC_DELETES_SETTING,1000).build();
  client().admin().indices().prepareUpdateSettings("foo").setSettings(settings).get();
  assertEquals(engine.getGcDeletesInMillis(),1000);
  assertTrue(engine.config().isEnableGcDeletes());
}
