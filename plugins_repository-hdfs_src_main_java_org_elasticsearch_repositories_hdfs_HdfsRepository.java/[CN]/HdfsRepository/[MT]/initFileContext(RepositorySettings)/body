{
  Configuration cfg=new Configuration(repositorySettings.settings().getAsBoolean("load_defaults",true));
  cfg.setClassLoader(this.getClass().getClassLoader());
  cfg.reloadConfiguration();
  Map<String,String> map=repositorySettings.settings().getByPrefix("conf.").getAsMap();
  for (  Entry<String,String> entry : map.entrySet()) {
    cfg.set(entry.getKey(),entry.getValue());
  }
  try {
    UserGroupInformation.setConfiguration(cfg);
  }
 catch (  Throwable th) {
    throw new ElasticsearchGenerationException(String.format(Locale.ROOT,"Cannot initialize Hadoop"),th);
  }
  URI actualUri=URI.create(uri);
  try {
    cfg.setBoolean("fs.hdfs.impl.disable.cache",true);
    AbstractFileSystem fs=AbstractFileSystem.get(actualUri,cfg);
    return FileContext.getFileContext(fs,cfg);
  }
 catch (  Exception ex) {
    throw new ElasticsearchGenerationException(String.format(Locale.ROOT,"Cannot create Hdfs file-system for uri [%s]",actualUri),ex);
  }
}
