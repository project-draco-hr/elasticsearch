{
  Configuration cfg=new Configuration(repositorySettings.settings().getAsBoolean("load_defaults",true));
  cfg.setClassLoader(this.getClass().getClassLoader());
  cfg.reloadConfiguration();
  Map<String,String> map=repositorySettings.settings().getByPrefix("conf.").getAsMap();
  for (  Entry<String,String> entry : map.entrySet()) {
    cfg.set(entry.getKey(),entry.getValue());
  }
  Subject subject;
  try {
    Class<?> clazz=Class.forName("org.apache.hadoop.security.User");
    Constructor<?> ctor=clazz.getConstructor(String.class);
    ctor.setAccessible(true);
    Principal principal=(Principal)ctor.newInstance(System.getProperty("user.name"));
    subject=new Subject(false,Collections.singleton(principal),Collections.emptySet(),Collections.emptySet());
  }
 catch (  ReflectiveOperationException e) {
    throw new RuntimeException(e);
  }
  URI actualUri=URI.create(uri);
  cfg.setBoolean("fs.hdfs.impl.disable.cache",true);
  try {
    return Subject.doAs(subject,new PrivilegedExceptionAction<FileContext>(){
      @Override public FileContext run() throws IOException {
        AbstractFileSystem fs=AbstractFileSystem.get(actualUri,cfg);
        return FileContext.getFileContext(fs,cfg);
      }
    }
);
  }
 catch (  PrivilegedActionException e) {
    throw (IOException)e.getException();
  }
}
