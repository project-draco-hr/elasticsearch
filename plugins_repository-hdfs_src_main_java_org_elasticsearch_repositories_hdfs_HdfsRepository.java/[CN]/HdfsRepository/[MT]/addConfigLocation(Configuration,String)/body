{
  URL cfgURL=null;
  if (!confLocation.contains(":")) {
    cfgURL=cfg.getClassLoader().getResource(confLocation);
    if (cfgURL == null) {
      java.nio.file.Path path=PathUtils.get(confLocation);
      if (!Files.isReadable(path)) {
        throw new IllegalArgumentException(String.format(Locale.ROOT,"Cannot find classpath resource or file 'conf_location' [%s] defined for hdfs snapshot/restore",confLocation));
      }
      String pathLocation=path.toUri().toString();
      logger.debug("Adding path [{}] as file [{}]",confLocation,pathLocation);
      confLocation=pathLocation;
    }
 else {
      logger.debug("Resolving path [{}] to classpath [{}]",confLocation,cfgURL);
    }
  }
 else {
    logger.debug("Adding path [{}] as URL",confLocation);
  }
  if (cfgURL == null) {
    try {
      cfgURL=new URL(confLocation);
    }
 catch (    MalformedURLException ex) {
      throw new IllegalArgumentException(String.format(Locale.ROOT,"Invalid 'conf_location' URL [%s] defined for hdfs snapshot/restore",confLocation),ex);
    }
  }
  cfg.addResource(cfgURL);
}
