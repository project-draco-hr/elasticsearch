{
  int modifiers=method.getModifiers();
  if (!Modifier.isPrivate(modifiers) && !Modifier.isProtected(modifiers)) {
  }
  if (!Modifier.isPublic(modifiers)) {
    method.setAccessible(true);
  }
  return new MethodInvoker(){
    @Override public Object invoke(    Object target,    Object... parameters) throws IllegalAccessException, InvocationTargetException {
      return method.invoke(target,parameters);
    }
  }
;
}
