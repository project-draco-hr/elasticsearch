{
  Request request=new Request().masterNodeTimeout(TimeValue.timeValueHours(1));
  PlainActionFuture<Response> listener=new PlainActionFuture<>();
  final Response response=new Response();
  clusterService.setState(ClusterStateCreationUtils.state(localNode,localNode,allNodes));
  new Action(Settings.EMPTY,"testAction",transportService,clusterService,threadPool){
    @Override protected void masterOperation(    Request request,    ClusterState state,    ActionListener<Response> listener) throws Exception {
      TransportMasterNodeActionTests.this.clusterService.setState(ClusterStateCreationUtils.state(localNode,remoteNode,allNodes));
      Throwable failure=randomBoolean() ? new Discovery.FailedToCommitClusterStateException("Fake error") : new NotMasterException("Fake error");
      listener.onFailure(failure);
    }
  }
.execute(request,listener);
  assertThat(transport.capturedRequests().length,equalTo(1));
  CapturingTransport.CapturedRequest capturedRequest=transport.capturedRequests()[0];
  assertTrue(capturedRequest.node.isMasterNode());
  assertThat(capturedRequest.request,equalTo(request));
  assertThat(capturedRequest.action,equalTo("testAction"));
  transport.handleResponse(capturedRequest.requestId,response);
  assertTrue(listener.isDone());
  assertThat(listener.get(),equalTo(response));
}
