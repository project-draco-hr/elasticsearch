{
  final boolean masterOperationFailure=randomBoolean();
  Request request=new Request();
  PlainActionFuture<Response> listener=new PlainActionFuture<>();
  final Throwable exception=new Throwable();
  final Response response=new Response();
  clusterService.setState(ClusterStateCreationUtils.state(localNode,localNode,allNodes));
  new Action(Settings.EMPTY,"testAction",transportService,clusterService,threadPool){
    @Override protected void masterOperation(    Request request,    ClusterState state,    ActionListener<Response> listener) throws Exception {
      if (masterOperationFailure) {
        listener.onFailure(exception);
      }
 else {
        listener.onResponse(response);
      }
    }
  }
.execute(request,listener);
  assertTrue(listener.isDone());
  if (masterOperationFailure) {
    try {
      listener.get();
      fail("Expected exception but returned proper result");
    }
 catch (    ExecutionException ex) {
      assertThat(ex.getCause(),equalTo(exception));
    }
  }
 else {
    assertThat(listener.get(),equalTo(response));
  }
}
