{
  NodeEnvironment.NodePath[] nodePaths=nodeEnv.nodePaths();
  Path[] oldIndexPaths=new Path[nodePaths.length];
  for (int i=0; i < nodePaths.length; i++) {
    oldIndexPaths[i]=nodePaths[i].indicesPath.resolve(indexSettings.getIndex().getName());
  }
  IndexMetaData.FORMAT.write(indexSettings.getIndexMetaData(),1,oldIndexPaths);
  for (int id=0; id < indexSettings.getNumberOfShards(); id++) {
    Path oldIndexPath=randomFrom(oldIndexPaths);
    ShardId shardId=new ShardId(indexSettings.getIndex(),id);
    if (indexSettings.hasCustomDataPath()) {
      Path customIndexPath=nodeEnv.resolveBaseCustomLocation(indexSettings).resolve(indexSettings.getIndex().getName());
      writeShard(shardId,customIndexPath,numIdxFiles,numTranslogFiles);
    }
 else {
      writeShard(shardId,oldIndexPath,numIdxFiles,numTranslogFiles);
    }
    ShardStateMetaData state=new ShardStateMetaData(true,indexSettings.getUUID(),AllocationId.newInitializing());
    ShardStateMetaData.FORMAT.write(state,1,oldIndexPath.resolve(String.valueOf(shardId.getId())));
  }
}
