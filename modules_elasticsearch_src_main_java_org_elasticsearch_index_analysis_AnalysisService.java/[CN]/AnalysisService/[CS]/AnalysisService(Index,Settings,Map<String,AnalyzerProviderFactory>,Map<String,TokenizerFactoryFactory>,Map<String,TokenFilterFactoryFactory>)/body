{
  super(index,indexSettings);
  Map<String,AnalyzerProvider> analyzerProviders=newHashMap();
  if (analyzerFactoryFactories != null) {
    Map<String,Settings> analyzersSettings=indexSettings.getGroups("index.analysis.analyzer");
    for (    Map.Entry<String,AnalyzerProviderFactory> entry : analyzerFactoryFactories.entrySet()) {
      String analyzerName=entry.getKey();
      AnalyzerProviderFactory analyzerFactoryFactory=entry.getValue();
      Settings analyzerSettings=analyzersSettings.get(analyzerName);
      if (analyzerSettings == null) {
        analyzerSettings=ImmutableSettings.Builder.EMPTY_SETTINGS;
      }
      AnalyzerProvider analyzerFactory=analyzerFactoryFactory.create(analyzerName,analyzerSettings);
      analyzerProviders.put(analyzerName,analyzerFactory);
    }
  }
  if (!analyzerProviders.containsKey("default")) {
    analyzerProviders.put("default",new StandardAnalyzerProvider(index,indexSettings,"default",ImmutableSettings.Builder.EMPTY_SETTINGS));
  }
  if (!analyzerProviders.containsKey("default_index")) {
    analyzerProviders.put("default_index",analyzerProviders.get("default"));
  }
  if (!analyzerProviders.containsKey("default_search")) {
    analyzerProviders.put("default_search",analyzerProviders.get("default"));
  }
  Map<String,NamedAnalyzer> analyzers=newHashMap();
  for (  AnalyzerProvider analyzerFactory : analyzerProviders.values()) {
    analyzers.put(analyzerFactory.name(),new NamedAnalyzer(analyzerFactory.name(),analyzerFactory.get()));
  }
  this.analyzers=ImmutableMap.copyOf(analyzers);
  Map<String,TokenizerFactory> tokenizers=newHashMap();
  if (tokenizerFactoryFactories != null) {
    Map<String,Settings> tokenizersSettings=indexSettings.getGroups("index.analysis.tokenizer");
    for (    Map.Entry<String,TokenizerFactoryFactory> entry : tokenizerFactoryFactories.entrySet()) {
      String tokenizerName=entry.getKey();
      TokenizerFactoryFactory tokenizerFactoryFactory=entry.getValue();
      Settings tokenizerSettings=tokenizersSettings.get(tokenizerName);
      if (tokenizerSettings == null) {
        tokenizerSettings=ImmutableSettings.Builder.EMPTY_SETTINGS;
      }
      TokenizerFactory tokenizerFactory=tokenizerFactoryFactory.create(tokenizerName,tokenizerSettings);
      tokenizers.put(tokenizerName,tokenizerFactory);
    }
  }
  this.tokenizers=ImmutableMap.copyOf(tokenizers);
  Map<String,TokenFilterFactory> tokenFilters=newHashMap();
  if (tokenFilterFactoryFactories != null) {
    Map<String,Settings> tokenFiltersSettings=indexSettings.getGroups("index.analysis.filter");
    for (    Map.Entry<String,TokenFilterFactoryFactory> entry : tokenFilterFactoryFactories.entrySet()) {
      String tokenFilterName=entry.getKey();
      TokenFilterFactoryFactory tokenFilterFactoryFactory=entry.getValue();
      Settings tokenFilterSettings=tokenFiltersSettings.get(tokenFilterName);
      if (tokenFilterSettings == null) {
        tokenFilterSettings=ImmutableSettings.Builder.EMPTY_SETTINGS;
      }
      TokenFilterFactory tokenFilterFactory=tokenFilterFactoryFactory.create(tokenFilterName,tokenFilterSettings);
      tokenFilters.put(tokenFilterName,tokenFilterFactory);
    }
  }
  this.tokenFilters=ImmutableMap.copyOf(tokenFilters);
}
