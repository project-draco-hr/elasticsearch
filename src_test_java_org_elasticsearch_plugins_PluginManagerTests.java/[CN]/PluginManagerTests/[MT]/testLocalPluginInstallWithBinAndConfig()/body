{
  String pluginName="plugin-test";
  Tuple<Settings,Environment> initialSettings=InternalSettingsPreparer.prepareSettings(ImmutableSettings.settingsBuilder().build(),false);
  Environment env=initialSettings.v2();
  File binDir=new File(env.homeFile(),"bin");
  if (!binDir.exists() && !FileSystemUtils.mkdirs(binDir)) {
    throw new IOException("Could not create bin directory [" + binDir.getAbsolutePath() + "]");
  }
  File pluginBinDir=new File(binDir,pluginName);
  File configDir=env.configFile();
  if (!configDir.exists() && !FileSystemUtils.mkdirs(configDir)) {
    throw new IOException("Could not create config directory [" + configDir.getAbsolutePath() + "]");
  }
  File pluginConfigDir=new File(configDir,pluginName);
  try {
    PluginManager pluginManager=pluginManager(getPluginUrlForResource("plugin_with_bin_and_config.zip"),initialSettings);
    pluginManager.downloadAndExtract(pluginName);
    File[] plugins=pluginManager.getListInstalledPlugins();
    assertThat(plugins.length,is(1));
    assertTrue(pluginBinDir.exists());
    assertTrue(pluginConfigDir.exists());
    File toolFile=new File(pluginBinDir,"tool");
    assertThat(toolFile.exists(),is(true));
    assertThat(toolFile.canExecute(),is(true));
  }
  finally {
    FileSystemUtils.deleteRecursively(pluginBinDir);
    FileSystemUtils.deleteRecursively(pluginConfigDir);
  }
}
