{
  String pluginName="plugin-test";
  Tuple<Settings,Environment> initialSettings=buildInitialSettings();
  Environment env=initialSettings.v2();
  Path binDir=env.homeFile().resolve("bin");
  if (!Files.exists(binDir)) {
    Files.createDirectories(binDir);
  }
  Path pluginBinDir=binDir.resolve(pluginName);
  Path configDir=env.configFile();
  if (!Files.exists(configDir)) {
    Files.createDirectories(configDir);
  }
  Path pluginConfigDir=configDir.resolve(pluginName);
  try {
    PluginManager pluginManager=pluginManager(getPluginUrlForResource("plugin_with_bin_and_config.zip"),initialSettings);
    pluginManager.downloadAndExtract(pluginName);
    Path[] plugins=pluginManager.getListInstalledPlugins();
    assertThat(plugins,arrayWithSize(1));
    assertDirectoryExists(pluginBinDir);
    assertDirectoryExists(pluginConfigDir);
    Path toolFile=pluginBinDir.resolve("tool");
    assertFileExists(toolFile);
    PosixFileAttributeView view=Files.getFileAttributeView(toolFile,PosixFileAttributeView.class);
    if (view != null) {
      PosixFileAttributes attributes=view.readAttributes();
      assertTrue("unexpected permissions: " + attributes.permissions(),attributes.permissions().contains(PosixFilePermission.OWNER_EXECUTE));
    }
  }
  finally {
    IOUtils.rm(pluginBinDir,pluginConfigDir);
  }
}
