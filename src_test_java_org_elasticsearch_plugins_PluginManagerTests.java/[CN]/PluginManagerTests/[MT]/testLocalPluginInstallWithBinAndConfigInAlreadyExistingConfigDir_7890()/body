{
  String pluginName="plugin-test";
  Tuple<Settings,Environment> initialSettings=InternalSettingsPreparer.prepareSettings(ImmutableSettings.settingsBuilder().build(),false);
  Environment env=initialSettings.v2();
  File configDir=env.configFile();
  if (!configDir.exists() && !FileSystemUtils.mkdirs(configDir)) {
    throw new IOException("Could not create config directory [" + configDir.getAbsolutePath() + "]");
  }
  File pluginConfigDir=new File(configDir,pluginName);
  try {
    PluginManager pluginManager=pluginManager(getPluginUrlForResource("plugin_with_config_v1.zip"),initialSettings);
    pluginManager.downloadAndExtract(pluginName);
    File[] plugins=pluginManager.getListInstalledPlugins();
    assertThat(plugins,arrayWithSize(1));
    assertFileContent(pluginConfigDir,"test.txt","version1\n");
    pluginManager.removePlugin(pluginName);
    assertFileContent(pluginConfigDir,"test.txt","version1\n");
    pluginManager=pluginManager(getPluginUrlForResource("plugin_with_config_v2.zip"),initialSettings);
    pluginManager.downloadAndExtract(pluginName);
    assertFileContent(pluginConfigDir,"test.txt","version1\n");
    assertFileContent(pluginConfigDir,"test.txt.new","version2\n");
    assertFileContent(pluginConfigDir,"dir/testdir.txt","version1\n");
    assertFileContent(pluginConfigDir,"dir/subdir/testsubdir.txt","version1\n");
    pluginManager.removePlugin(pluginName);
    assertFileContent(pluginConfigDir,"test.txt","version1\n");
    assertFileContent(pluginConfigDir,"test.txt.new","version2\n");
    assertFileContent(pluginConfigDir,"dir/testdir.txt","version1\n");
    assertFileContent(pluginConfigDir,"dir/subdir/testsubdir.txt","version1\n");
    pluginManager=pluginManager(getPluginUrlForResource("plugin_with_config_v3.zip"),initialSettings);
    pluginManager.downloadAndExtract(pluginName);
    assertFileContent(pluginConfigDir,"test.txt","version1\n");
    assertFileContent(pluginConfigDir,"test2.txt","version1\n");
    assertFileContent(pluginConfigDir,"test.txt.new","version3\n");
    assertFileContent(pluginConfigDir,"dir/testdir.txt","version1\n");
    assertFileContent(pluginConfigDir,"dir/testdir.txt.new","version2\n");
    assertFileContent(pluginConfigDir,"dir/testdir2.txt","version1\n");
    assertFileContent(pluginConfigDir,"dir/subdir/testsubdir.txt","version1\n");
    assertFileContent(pluginConfigDir,"dir/subdir/testsubdir.txt.new","version2\n");
  }
  finally {
    IOUtils.rm(pluginConfigDir.toPath());
  }
}
