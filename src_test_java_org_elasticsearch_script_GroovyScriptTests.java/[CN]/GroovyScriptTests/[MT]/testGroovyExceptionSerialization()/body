{
  List<IndexRequestBuilder> reqs=newArrayList();
  for (int i=0; i < randomIntBetween(50,500); i++) {
    reqs.add(client().prepareIndex("test","doc","" + i).setSource("foo","bar"));
  }
  indexRandom(true,false,reqs);
  try {
    client().prepareSearch("test").setQuery(constantScoreQuery(scriptQuery("1 == not_found").lang(GroovyScriptEngineService.NAME))).get();
    fail("should have thrown an exception");
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.toString() + "should not contained NotSerializableTransportException",e.toString().contains("NotSerializableTransportException"),equalTo(false));
    assertThat(e.toString() + "should have contained GroovyScriptExecutionException",e.toString().contains("GroovyScriptExecutionException"),equalTo(true));
    assertThat(e.toString() + "should have contained not_found",e.toString().contains("No such property: not_found"),equalTo(true));
  }
  try {
    client().prepareSearch("test").setQuery(constantScoreQuery(scriptQuery("assert false").lang("groovy"))).get();
    fail("should have thrown an exception");
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.toString() + "should not contained NotSerializableTransportException",e.toString().contains("NotSerializableTransportException"),equalTo(false));
    assertThat(e.toString() + "should have contained GroovyScriptExecutionException",e.toString().contains("GroovyScriptExecutionException"),equalTo(true));
    assertThat(e.toString() + "should have contained an assert error",e.toString().contains("PowerAssertionError[assert false"),equalTo(true));
  }
}
