{
  super(shardId,indexSettings,indexStore);
  LockFactory lockFactory=buildLockFactory();
  File location=((FsIndexStore)indexStore).shardIndexLocation(shardId);
  location.mkdirs();
  this.fsDirectory=new NIOFSDirectory(location,lockFactory);
  boolean suggestUseCompoundFile;
  Tuple<SwitchDirectory,Boolean> switchDirectory=buildSwitchDirectoryIfNeeded(fsDirectory,byteBufferCache);
  if (switchDirectory != null) {
    suggestUseCompoundFile=true;
    if (switchDirectory.v2() != null) {
      suggestUseCompoundFile=switchDirectory.v2();
    }
    logger.debug("Using [nio_fs] Store with path [{}], cache [true] with extensions [{}]",fsDirectory.getFile(),switchDirectory.v1().primaryExtensions());
    directory=wrapDirectory(switchDirectory.v1());
  }
 else {
    suggestUseCompoundFile=true;
    directory=wrapDirectory(fsDirectory);
    logger.debug("Using [nio_fs] Store with path [{}]",fsDirectory.getFile());
  }
  this.suggestUseCompoundFile=suggestUseCompoundFile;
}
