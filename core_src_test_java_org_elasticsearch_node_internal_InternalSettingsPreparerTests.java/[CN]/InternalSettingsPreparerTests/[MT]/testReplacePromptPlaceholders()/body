{
  final List<String> replacedSecretProperties=new ArrayList<>();
  final List<String> replacedTextProperties=new ArrayList<>();
  final Terminal terminal=new CliToolTestCase.MockTerminal(){
    @Override public char[] readSecret(    String message,    Object... args){
      for (      Object arg : args) {
        replacedSecretProperties.add((String)arg);
      }
      return "replaced".toCharArray();
    }
    @Override public String readText(    String message,    Object... args){
      for (      Object arg : args) {
        replacedTextProperties.add((String)arg);
      }
      return "text";
    }
  }
;
  Settings.Builder builder=settingsBuilder().put("password.replace",InternalSettingsPreparer.SECRET_PROMPT_VALUE).put("dont.replace","prompt:secret").put("dont.replace2","_prompt:secret_").put("dont.replace3","_prompt:text__").put("dont.replace4","__prompt:text_").put("dont.replace5","prompt:secret__").put("replace_me",InternalSettingsPreparer.TEXT_PROMPT_VALUE);
  Settings settings=builder.build();
  settings=InternalSettingsPreparer.replacePromptPlaceholders(settings,terminal);
  assertThat(replacedSecretProperties.size(),is(1));
  assertThat(replacedTextProperties.size(),is(1));
  assertThat(settings.get("password.replace"),equalTo("replaced"));
  assertThat(settings.get("replace_me"),equalTo("text"));
  assertThat(settings.get("dont.replace"),equalTo("prompt:secret"));
  assertThat(settings.get("dont.replace2"),equalTo("_prompt:secret_"));
  assertThat(settings.get("dont.replace3"),equalTo("_prompt:text__"));
  assertThat(settings.get("dont.replace4"),equalTo("__prompt:text_"));
  assertThat(settings.get("dont.replace5"),equalTo("prompt:secret__"));
}
