{
  final AtomicInteger counter=new AtomicInteger();
  final Terminal terminal=new CliToolTestCase.MockTerminal(){
    @Override public char[] readSecret(    String message,    Object... args){
      fail("readSecret should never be called by this test");
      return null;
    }
    @Override public String readText(    String message,    Object... args){
      int count=counter.getAndIncrement();
      return "prompted name " + count;
    }
  }
;
  System.clearProperty("name");
  Settings settings=Settings.builder().put(baseEnvSettings).put("node.name",InternalSettingsPreparer.TEXT_PROMPT_VALUE).build();
  Environment env=InternalSettingsPreparer.prepareEnvironment(settings,terminal);
  settings=env.settings();
  assertThat(counter.intValue(),is(1));
  assertThat(settings.get("name"),is("prompted name 0"));
  assertThat(settings.get("node.name"),is("prompted name 0"));
}
