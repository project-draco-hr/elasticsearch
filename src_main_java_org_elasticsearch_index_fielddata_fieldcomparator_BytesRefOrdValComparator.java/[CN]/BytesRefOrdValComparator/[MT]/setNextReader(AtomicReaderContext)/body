{
  final int docBase=context.docBase;
  termsIndex=indexFieldData.load(context).getBytesValues();
  if (termsIndex.isMultiValued()) {
    throw new ElasticSearchIllegalArgumentException("can't sort on a multi valued field");
  }
  final Ordinals.Docs docToOrd=termsIndex.ordinals();
  Object ordsStorage=docToOrd.ordinals().getBackingStorage();
  FieldComparator<BytesRef> perSegComp=null;
  if (docToOrd.ordinals().hasSingleArrayBackingStorage()) {
    if (ordsStorage instanceof byte[]) {
      perSegComp=new ByteOrdComparator((byte[])ordsStorage,termsIndex,docBase);
    }
 else     if (ordsStorage instanceof short[]) {
      perSegComp=new ShortOrdComparator((short[])ordsStorage,termsIndex,docBase);
    }
 else     if (ordsStorage instanceof int[]) {
      perSegComp=new IntOrdComparator((int[])ordsStorage,termsIndex,docBase);
    }
  }
  if (perSegComp == null) {
    perSegComp=new AnyOrdComparator(indexFieldData,termsIndex,docBase);
  }
  currentReaderGen++;
  if (bottomSlot != -1) {
    perSegComp.setBottom(bottomSlot);
  }
  return perSegComp;
}
