{
  prepareCreate("test",1).execute().actionGet(5000);
  logger.info("Running Cluster Health");
  ClusterHealthResponse clusterHealth=client().admin().cluster().health(clusterHealthRequest().waitForYellowStatus()).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.YELLOW));
  client().index(indexRequest("test").type("type1").id("1").source(source("1","test"))).actionGet();
  FlushResponse flushResponse=client().admin().indices().flush(flushRequest("test")).actionGet();
  assertThat(flushResponse.getTotalShards(),equalTo(10));
  assertThat(flushResponse.getSuccessfulShards(),equalTo(5));
  assertThat(flushResponse.getFailedShards(),equalTo(0));
  client().index(indexRequest("test").type("type1").id("2").source(source("2","test"))).actionGet();
  RefreshResponse refreshResponse=client().admin().indices().refresh(refreshRequest("test")).actionGet();
  assertThat(refreshResponse.getTotalShards(),equalTo(10));
  assertThat(refreshResponse.getSuccessfulShards(),equalTo(5));
  assertThat(refreshResponse.getFailedShards(),equalTo(0));
  allowNodes("test",2);
  logger.info("Running Cluster Health");
  clusterHealth=client().admin().cluster().health(clusterHealthRequest().waitForGreenStatus().local(true).waitForNodes(">=2")).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  GetResponse getResult;
  for (int i=0; i < 5; i++) {
    getResult=client().get(getRequest("test").type("type1").id("1").operationThreaded(false)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("1","test")));
    getResult=client().get(getRequest("test").type("type1").id("1").operationThreaded(false)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("1","test")));
    getResult=client().get(getRequest("test").type("type1").id("2").operationThreaded(true)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("2","test")));
    getResult=client().get(getRequest("test").type("type1").id("2").operationThreaded(true)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("2","test")));
  }
  allowNodes("test",3);
  Thread.sleep(200);
  logger.info("Running Cluster Health");
  clusterHealth=client().admin().cluster().health(clusterHealthRequest().waitForGreenStatus().waitForRelocatingShards(0).waitForNodes(">=3")).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  for (int i=0; i < 5; i++) {
    getResult=client().get(getRequest("test").type("type1").id("1")).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("1","test")));
    getResult=client().get(getRequest("test").type("type1").id("1")).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("1","test")));
    getResult=client().get(getRequest("test").type("type1").id("1")).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("1","test")));
    getResult=client().get(getRequest("test").type("type1").id("2").operationThreaded(true)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("2","test")));
    getResult=client().get(getRequest("test").type("type1").id("2").operationThreaded(true)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("2","test")));
    getResult=client().get(getRequest("test").type("type1").id("2").operationThreaded(true)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("2","test")));
  }
}
