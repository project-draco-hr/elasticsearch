{
  startNode("server1",recoverySettings());
  client("server1").admin().indices().create(createIndexRequest("test")).actionGet(5000);
  logger.info("Running Cluster Health");
  ClusterHealthResponse clusterHealth=client("server1").admin().cluster().health(clusterHealthRequest().setWaitForYellowStatus()).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.YELLOW));
  client("server1").index(indexRequest("test").setType("type1").setId("1").setSource(source("1","test"))).actionGet();
  FlushResponse flushResponse=client("server1").admin().indices().flush(flushRequest("test")).actionGet();
  assertThat(flushResponse.getTotalShards(),equalTo(10));
  assertThat(flushResponse.getSuccessfulShards(),equalTo(5));
  assertThat(flushResponse.getFailedShards(),equalTo(0));
  client("server1").index(indexRequest("test").setType("type1").setId("2").setSource(source("2","test"))).actionGet();
  RefreshResponse refreshResponse=client("server1").admin().indices().refresh(refreshRequest("test")).actionGet();
  assertThat(refreshResponse.getTotalShards(),equalTo(10));
  assertThat(refreshResponse.getSuccessfulShards(),equalTo(5));
  assertThat(refreshResponse.getFailedShards(),equalTo(0));
  startNode("server2",recoverySettings());
  logger.info("Running Cluster Health");
  clusterHealth=client("server1").admin().cluster().health(clusterHealthRequest().setWaitForGreenStatus().setWaitForNodes("2")).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  GetResponse getResult;
  for (int i=0; i < 5; i++) {
    getResult=client("server1").get(getRequest("test").setType("type1").setId("1").setOperationThreaded(false)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("1","test")));
    getResult=client("server2").get(getRequest("test").setType("type1").setId("1").setOperationThreaded(false)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("1","test")));
    getResult=client("server1").get(getRequest("test").setType("type1").setId("2").setOperationThreaded(true)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("2","test")));
    getResult=client("server2").get(getRequest("test").setType("type1").setId("2").setOperationThreaded(true)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("2","test")));
  }
  startNode("server3",recoverySettings());
  Thread.sleep(200);
  logger.info("Running Cluster Health");
  clusterHealth=client("server1").admin().cluster().health(clusterHealthRequest().setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes("3")).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  for (int i=0; i < 5; i++) {
    getResult=client("server1").get(getRequest("test").setType("type1").setId("1")).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("1","test")));
    getResult=client("server2").get(getRequest("test").setType("type1").setId("1")).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("1","test")));
    getResult=client("server3").get(getRequest("test").setType("type1").setId("1")).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("1","test")));
    getResult=client("server1").get(getRequest("test").setType("type1").setId("2").setOperationThreaded(true)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("2","test")));
    getResult=client("server2").get(getRequest("test").setType("type1").setId("2").setOperationThreaded(true)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("2","test")));
    getResult=client("server3").get(getRequest("test").setType("type1").setId("2").setOperationThreaded(true)).actionGet(1000);
    assertThat(getResult.getSourceAsString(),equalTo(source("2","test")));
  }
}
