{
  AtomicBoolean failed=new AtomicBoolean();
  DiscoveryNodes nodes=clusterService.state().getNodes();
  AtomicInteger expectedResponses=new AtomicInteger(nodes.size());
  for (  DiscoveryNode node : nodes) {
    ReloadPipelinesRequest nodeRequest=new ReloadPipelinesRequest();
    transportService.sendRequest(node,ACTION_NAME,nodeRequest,new TransportResponseHandler<ReloadPipelinesResponse>(){
      @Override public ReloadPipelinesResponse newInstance(){
        return new ReloadPipelinesResponse();
      }
      @Override public void handleResponse(      ReloadPipelinesResponse response){
        decrementAndReturn();
      }
      @Override public void handleException(      TransportException exp){
        logger.warn("failed to update pipelines on remote node [{}]",exp,node);
        failed.set(true);
        decrementAndReturn();
      }
      void decrementAndReturn(){
        if (expectedResponses.decrementAndGet() == 0) {
          listener.accept(!failed.get());
        }
      }
      @Override public String executor(){
        return ThreadPool.Names.SAME;
      }
    }
);
  }
}
