{
  final Key key=new Key(this,context.reader().getCoreCacheKey());
  final Accountable accountable=cache.get(key,new Callable<AtomicFieldData>(){
    @Override public AtomicFieldData call() throws Exception {
      SegmentReaderUtils.registerCoreListener(context.reader(),IndexFieldCache.this);
      key.listeners.add(indicesFieldDataCacheListener);
      final ShardId shardId=ShardUtils.extractShardId(context.reader());
      if (shardId != null) {
        final IndexShard shard=indexService.shard(shardId.id());
        if (shard != null) {
          key.listeners.add(shard.fieldData());
        }
      }
      final AtomicFieldData fieldData=indexFieldData.loadDirect(context);
      for (      Listener listener : key.listeners) {
        try {
          listener.onLoad(fieldNames,fieldDataType,fieldData);
        }
 catch (        Throwable e) {
          logger.error("Failed to call listener on atomic field data loading",e);
        }
      }
      return fieldData;
    }
  }
);
  return (FD)accountable;
}
