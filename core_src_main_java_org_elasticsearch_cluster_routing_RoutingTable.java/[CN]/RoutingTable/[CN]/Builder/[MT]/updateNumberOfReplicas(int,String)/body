{
  if (indicesRouting == null) {
    throw new IllegalStateException("once build is called the builder cannot be reused");
  }
  if (indices == null || indices.length == 0) {
    indices=indicesRouting.keys().toArray(String.class);
  }
  for (  String index : indices) {
    IndexRoutingTable indexRoutingTable=indicesRouting.get(index);
    if (indexRoutingTable == null) {
      continue;
    }
    int currentNumberOfReplicas=indexRoutingTable.shards().get(0).size() - 1;
    IndexRoutingTable.Builder builder=new IndexRoutingTable.Builder(indexRoutingTable.getIndex());
    for (    IndexShardRoutingTable indexShardRoutingTable : indexRoutingTable) {
      builder.addIndexShard(indexShardRoutingTable);
    }
    if (currentNumberOfReplicas < numberOfReplicas) {
      for (int i=0; i < (numberOfReplicas - currentNumberOfReplicas); i++) {
        builder.addReplica();
      }
    }
 else     if (currentNumberOfReplicas > numberOfReplicas) {
      int delta=currentNumberOfReplicas - numberOfReplicas;
      if (delta <= 0) {
      }
 else {
        for (int i=0; i < delta; i++) {
          builder.removeReplica();
        }
      }
    }
    indicesRouting.put(index,builder.build());
  }
  return this;
}
