{
  XContentParser parser=parseContext.parser();
  float boost=1.0f;
  SpanQuery include=null;
  SpanQuery exclude=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("include".equals(currentFieldName)) {
        Query query=parseContext.parseInnerQuery();
        if (!(query instanceof SpanQuery)) {
          throw new QueryParsingException(parseContext.index(),"spanNot [include] must be of type span query");
        }
        include=(SpanQuery)query;
      }
 else       if ("exclude".equals(currentFieldName)) {
        Query query=parseContext.parseInnerQuery();
        if (!(query instanceof SpanQuery)) {
          throw new QueryParsingException(parseContext.index(),"spanNot [exclude] must be of type span query");
        }
        exclude=(SpanQuery)query;
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[span_not] query does not support [" + currentFieldName + "]");
      }
    }
 else {
      if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[span_not] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (include == null) {
    throw new QueryParsingException(parseContext.index(),"spanNot must have [include] span query clause");
  }
  if (exclude == null) {
    throw new QueryParsingException(parseContext.index(),"spanNot must have [exclude] span query clause");
  }
  SpanNotQuery query=new SpanNotQuery(include,exclude);
  query.setBoost(boost);
  return query;
}
