{
  if (blendedFields == null) {
    return super.blendTerm(term,mapper);
  }
  final Term[] terms=new Term[blendedFields.length];
  float[] blendedBoost=new float[blendedFields.length];
  for (int i=0; i < blendedFields.length; i++) {
    terms[i]=blendedFields[i].newTerm(term.text());
    blendedBoost[i]=blendedFields[i].boost;
  }
  if (commonTermsCutoff != null) {
    return BlendedTermQuery.commonTermsBlendedQuery(terms,blendedBoost,false,commonTermsCutoff);
  }
  if (tieBreaker == 1.0f) {
    return BlendedTermQuery.booleanBlendedQuery(terms,blendedBoost,false);
  }
  return BlendedTermQuery.dismaxBlendedQuery(terms,blendedBoost,tieBreaker);
}
