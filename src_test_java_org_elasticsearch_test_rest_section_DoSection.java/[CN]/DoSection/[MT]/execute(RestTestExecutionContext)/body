{
  if ("param".equals(catchParam)) {
    logger.info("found [catch: param], no request sent");
    return;
  }
  try {
    RestResponse restResponse=executionContext.callApi(apiCallSection.getApi(),apiCallSection.getParams(),apiCallSection.getBody());
    if (Strings.hasLength(catchParam)) {
      String catchStatusCode;
      if (catches.containsKey(catchParam)) {
        catchStatusCode=catches.get(catchParam).v1();
      }
 else       if (catchParam.startsWith("/") && catchParam.endsWith("/")) {
        catchStatusCode="4xx|5xx";
      }
 else {
        throw new UnsupportedOperationException("catch value [" + catchParam + "] not supported");
      }
      fail(formatStatusCodeMessage(restResponse,catchStatusCode));
    }
  }
 catch (  RestException e) {
    if (!Strings.hasLength(catchParam)) {
      fail(formatStatusCodeMessage(e.restResponse(),"2xx"));
    }
 else     if (catches.containsKey(catchParam)) {
      assertStatusCode(e.restResponse());
    }
 else     if (catchParam.startsWith("/") && catchParam.endsWith("/")) {
      assertThat(formatStatusCodeMessage(e.restResponse(),"4xx|5xx"),e.statusCode(),greaterThanOrEqualTo(400));
      Object error=executionContext.response("error");
      assertThat("error was expected in the response",error,notNullValue());
      String regex=catchParam.substring(1,catchParam.length() - 1);
      String errorMessage=error.toString();
      Matcher matcher=Pattern.compile(regex).matcher(errorMessage);
      assertThat("error message [" + errorMessage + "] was expected to match ["+ catchParam+ "] but didn't",matcher.find(),equalTo(true));
    }
 else {
      throw new UnsupportedOperationException("catch value [" + catchParam + "] not supported");
    }
  }
}
