{
  createIndex("test");
  ensureGreen();
  index("test","typ1","1","field1","prefix_abcd","field2","prefix_efgh");
  index("test","typ1","2","field1","prefix_aacd","field2","prefix_eeeh");
  index("test","typ1","3","field1","prefix_abbd","field2","prefix_efff");
  index("test","typ1","4","field1","prefix_abcc","field2","prefix_eggg");
  refresh();
  Map<String,SuggestionBuilder<?>> suggestions=new HashMap<>();
  suggestions.put("size1",termSuggestion("field1").size(1).text("prefix_abcd").maxTermFreq(10).prefixLength(1).minDocFreq(0).suggestMode(SuggestMode.ALWAYS));
  suggestions.put("field2",termSuggestion("field2").text("prefix_eeeh prefix_efgh").maxTermFreq(10).minDocFreq(0).suggestMode(SuggestMode.ALWAYS));
  suggestions.put("accuracy",termSuggestion("field2").text("prefix_efgh").accuracy(1f).maxTermFreq(10).minDocFreq(0).suggestMode(SuggestMode.ALWAYS));
  Suggest suggest=searchSuggest(null,0,suggestions);
  assertSuggestion(suggest,0,"size1","prefix_aacd");
  assertThat(suggest.getSuggestion("field2").getEntries().get(0).getText().string(),equalTo("prefix_eeeh"));
  assertSuggestion(suggest,0,"field2","prefix_efgh");
  assertThat(suggest.getSuggestion("field2").getEntries().get(1).getText().string(),equalTo("prefix_efgh"));
  assertSuggestion(suggest,1,"field2","prefix_eeeh","prefix_efff","prefix_eggg");
  assertSuggestionSize(suggest,0,0,"accuracy");
}
