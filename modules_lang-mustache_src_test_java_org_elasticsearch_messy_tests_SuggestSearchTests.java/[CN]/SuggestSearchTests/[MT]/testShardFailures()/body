{
  CreateIndexRequestBuilder builder=prepareCreate("test").setSettings(settingsBuilder().put(indexSettings()).put("index.analysis.analyzer.suggest.tokenizer","standard").putArray("index.analysis.analyzer.suggest.filter","standard","lowercase","shingler").put("index.analysis.filter.shingler.type","shingle").put("index.analysis.filter.shingler.min_shingle_size",2).put("index.analysis.filter.shingler.max_shingle_size",5).put("index.analysis.filter.shingler.output_unigrams",true));
  XContentBuilder mapping=XContentFactory.jsonBuilder().startObject().startObject("type2").startObject("properties").startObject("name").field("type","string").field("analyzer","suggest").endObject().endObject().endObject().endObject();
  assertAcked(builder.addMapping("type2",mapping));
  ensureGreen();
  index("test","type2","1","foo","bar");
  index("test","type2","2","foo","bar");
  index("test","type2","3","foo","bar");
  index("test","type2","4","foo","bar");
  index("test","type2","5","foo","bar");
  index("test","type2","1","name","Just testing the suggestions api");
  index("test","type2","2","name","An other title about equal length");
  refresh();
  SearchRequestBuilder request=client().prepareSearch().setSize(0).suggest(new SuggestBuilder().setGlobalText("tetsting sugestion").addSuggestion("did_you_mean",phraseSuggestion().field("fielddoesnotexist").maxErrors(5.0f)));
  assertThrows(request,SearchPhaseExecutionException.class);
  SearchResponse searchResponse=client().prepareSearch().setSize(0).suggest(new SuggestBuilder().setGlobalText("tetsting sugestion").addSuggestion("did_you_mean",phraseSuggestion().field("name").maxErrors(5.0f))).get();
  ElasticsearchAssertions.assertNoFailures(searchResponse);
  ElasticsearchAssertions.assertSuggestion(searchResponse.getSuggest(),0,0,"did_you_mean","testing suggestions");
}
