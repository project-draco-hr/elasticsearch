{
  CreateIndexRequestBuilder builder=prepareCreate("test").setSettings(settingsBuilder().put(indexSettings()).put(SETTING_NUMBER_OF_SHARDS,1).put("index.analysis.analyzer.text.tokenizer","standard").putArray("index.analysis.analyzer.text.filter","lowercase","my_shingle").put("index.analysis.filter.my_shingle.type","shingle").put("index.analysis.filter.my_shingle.output_unigrams",true).put("index.analysis.filter.my_shingle.min_shingle_size",2).put("index.analysis.filter.my_shingle.max_shingle_size",3));
  XContentBuilder mapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("title").field("type","string").field("analyzer","text").endObject().endObject().endObject().endObject();
  assertAcked(builder.addMapping("type1",mapping));
  ensureGreen();
  List<String> titles=new ArrayList<>();
  titles.add("United States House of Representatives Elections in Washington 2006");
  titles.add("United States House of Representatives Elections in Washington 2005");
  titles.add("State");
  titles.add("Houses of Parliament");
  titles.add("Representative Government");
  titles.add("Election");
  List<IndexRequestBuilder> builders=new ArrayList<>();
  for (  String title : titles) {
    builders.add(client().prepareIndex("test","type1").setSource("title",title));
  }
  indexRandom(true,builders);
  PhraseSuggestionBuilder suggest=phraseSuggestion("title").field("title").addCandidateGenerator(PhraseSuggestionBuilder.candidateGenerator("title").suggestMode("always").maxTermFreq(.99f).size(10).maxInspections(200)).confidence(0f).maxErrors(2f).shardSize(30000).size(10);
  Suggest searchSuggest=searchSuggest("united states house of representatives elections in washington 2006",suggest);
  assertSuggestionSize(searchSuggest,0,10,"title");
  String filterString=XContentFactory.jsonBuilder().startObject().startObject("match_phrase").field("{{field}}","{{suggestion}}").endObject().endObject().string();
  PhraseSuggestionBuilder filteredQuerySuggest=suggest.collateQuery(filterString);
  filteredQuerySuggest.collateParams(Collections.singletonMap("field","title"));
  searchSuggest=searchSuggest("united states house of representatives elections in washington 2006",filteredQuerySuggest);
  assertSuggestionSize(searchSuggest,0,2,"title");
  searchSuggest=searchSuggest("Elections of Representatives Parliament",filteredQuerySuggest);
  assertSuggestionSize(searchSuggest,0,0,"title");
  NumShards numShards=getNumShards("test");
  String incorrectFilterString=XContentFactory.jsonBuilder().startObject().startObject("test").field("title","{{suggestion}}").endObject().endObject().string();
  PhraseSuggestionBuilder incorrectFilteredSuggest=suggest.collateQuery(incorrectFilterString);
  try {
    searchSuggest("united states house of representatives elections in washington 2006",numShards.numPrimaries,incorrectFilteredSuggest);
    fail("Post query error has been swallowed");
  }
 catch (  ElasticsearchException e) {
  }
  String filterStringAsFilter=XContentFactory.jsonBuilder().startObject().startObject("match_phrase").field("title","{{suggestion}}").endObject().endObject().string();
  PhraseSuggestionBuilder filteredFilterSuggest=suggest.collateQuery(filterStringAsFilter);
  searchSuggest=searchSuggest("united states house of representatives elections in washington 2006",filteredFilterSuggest);
  assertSuggestionSize(searchSuggest,0,2,"title");
  String filterStr=XContentFactory.jsonBuilder().startObject().startObject("pprefix").field("title","{{suggestion}}").endObject().endObject().string();
  PhraseSuggestionBuilder in=suggest.collateQuery(filterStr);
  try {
    searchSuggest("united states house of representatives elections in washington 2006",numShards.numPrimaries,in);
    fail("Post filter error has been swallowed");
  }
 catch (  ElasticsearchException e) {
  }
  String collateWithParams=XContentFactory.jsonBuilder().startObject().startObject("{{query_type}}").field("{{query_field}}","{{suggestion}}").endObject().endObject().string();
  PhraseSuggestionBuilder phraseSuggestWithNoParams=suggest.collateQuery(collateWithParams);
  try {
    searchSuggest("united states house of representatives elections in washington 2006",numShards.numPrimaries,phraseSuggestWithNoParams);
    fail("Malformed query (lack of additional params) should fail");
  }
 catch (  ElasticsearchException e) {
  }
  Map<String,Object> params=new HashMap<>();
  params.put("query_type","match_phrase");
  params.put("query_field","title");
  PhraseSuggestionBuilder phraseSuggestWithParams=suggest.collateQuery(collateWithParams).collateParams(params);
  searchSuggest=searchSuggest("united states house of representatives elections in washington 2006",phraseSuggestWithParams);
  assertSuggestionSize(searchSuggest,0,2,"title");
  PhraseSuggestionBuilder phraseSuggestWithParamsAndReturn=suggest.collateQuery(collateWithParams).collateParams(params).collatePrune(true);
  searchSuggest=searchSuggest("united states house of representatives elections in washington 2006",phraseSuggestWithParamsAndReturn);
  assertSuggestionSize(searchSuggest,0,10,"title");
  assertSuggestionPhraseCollateMatchExists(searchSuggest,"title",2);
}
