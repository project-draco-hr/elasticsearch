{
  searchContext.queryResult().searchTimedOut(false);
  searchContext.searcher().inStage(ContextIndexSearcher.Stage.MAIN_QUERY);
  boolean rescore=false;
  try {
    searchContext.queryResult().from(searchContext.from());
    searchContext.queryResult().size(searchContext.size());
    Query query=searchContext.query();
    TopDocs topDocs;
    int numDocs=searchContext.from() + searchContext.size();
    if (numDocs == 0) {
      numDocs=1;
    }
    if (searchContext.searchType() == SearchType.COUNT) {
      TotalHitCountCollector collector=new TotalHitCountCollector();
      searchContext.searcher().search(query,collector);
      topDocs=new TopDocs(collector.getTotalHits(),Lucene.EMPTY_SCORE_DOCS,0);
    }
 else     if (searchContext.searchType() == SearchType.SCAN) {
      topDocs=searchContext.scanContext().execute(searchContext);
    }
 else     if (searchContext.sort() != null) {
      topDocs=searchContext.searcher().search(query,null,numDocs,searchContext.sort(),searchContext.trackScores(),searchContext.trackScores());
    }
 else {
      if (searchContext.rescore() != null) {
        rescore=true;
        numDocs=Math.max(searchContext.rescore().window(),numDocs);
      }
      topDocs=searchContext.searcher().search(query,numDocs);
    }
    searchContext.queryResult().topDocs(topDocs);
  }
 catch (  Throwable e) {
    throw new QueryPhaseExecutionException(searchContext,"Failed to execute main query",e);
  }
 finally {
    searchContext.searcher().finishStage(ContextIndexSearcher.Stage.MAIN_QUERY);
  }
  if (rescore) {
    rescorePhase.execute(searchContext);
  }
  suggestPhase.execute(searchContext);
  facetPhase.execute(searchContext);
}
