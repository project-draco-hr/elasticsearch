{
  List<SortBuilder<?>> sortFields=new ArrayList<>(2);
  XContentParser parser=context.parser();
  XContentParser.Token token=parser.currentToken();
  if (token == XContentParser.Token.START_ARRAY) {
    while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
      if (token == XContentParser.Token.START_OBJECT) {
        parseCompoundSortField(parser,context,sortFields);
      }
 else       if (token == XContentParser.Token.VALUE_STRING) {
        String fieldName=parser.text();
        sortFields.add(fieldOrScoreSort(fieldName));
      }
 else {
        throw new IllegalArgumentException("malformed sort format, " + "within the sort array, an object, or an actual string are allowed");
      }
    }
  }
 else   if (token == XContentParser.Token.VALUE_STRING) {
    String fieldName=parser.text();
    sortFields.add(fieldOrScoreSort(fieldName));
  }
 else   if (token == XContentParser.Token.START_OBJECT) {
    parseCompoundSortField(parser,context,sortFields);
  }
 else {
    throw new IllegalArgumentException("malformed sort format, either start with array, object, or an actual string");
  }
  return sortFields;
}
