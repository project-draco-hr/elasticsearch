{
  ImmutableBiMap.Builder<String,String> builder=ImmutableBiMap.builder();
  addNodeAction(NodesRestartAction.NAME,"cluster/nodes/restart",builder);
  builder.put(NodesShutdownAction.NAME,"cluster/nodes/shutdown");
  builder.put(TransportNodesShutdownAction.SHUTDOWN_NODE_ACTION_NAME,"/cluster/nodes/shutdown/node");
  builder.put(DeleteRepositoryAction.NAME,"cluster/repository/delete");
  builder.put(GetRepositoriesAction.NAME,"cluster/repository/get");
  builder.put(PutRepositoryAction.NAME,"cluster/repository/put");
  builder.put(ClusterRerouteAction.NAME,"cluster/reroute");
  builder.put(ClusterUpdateSettingsAction.NAME,"cluster/settings/update");
  builder.put(CreateSnapshotAction.NAME,"cluster/snapshot/create");
  builder.put(DeleteSnapshotAction.NAME,"cluster/snapshot/delete");
  builder.put(GetSnapshotsAction.NAME,"cluster/snapshot/get");
  builder.put(RestoreSnapshotAction.NAME,"cluster/snapshot/restore");
  builder.put(ClusterHealthAction.NAME,"cluster/health");
  addNodeAction(NodesHotThreadsAction.NAME,"cluster/nodes/hot_threads",builder);
  addNodeAction(NodesInfoAction.NAME,"cluster/nodes/info",builder);
  addNodeAction(NodesStatsAction.NAME,"cluster/nodes/stats",builder);
  builder.put(SnapshotsStatusAction.NAME,"cluster/snapshot/status");
  addNodeAction(TransportNodesSnapshotsStatus.ACTION_NAME,"cluster/snapshot/status/nodes",builder);
  builder.put(ClusterStateAction.NAME,"cluster/state");
  addNodeAction(ClusterStatsAction.NAME,"cluster/stats",builder);
  builder.put(PendingClusterTasksAction.NAME,"cluster/task");
  builder.put(IndicesAliasesAction.NAME,"indices/aliases");
  builder.put(AliasesExistAction.NAME,"indices/exists/aliases");
  builder.put(GetAliasesAction.NAME,"indices/get/aliases");
  addShardAction(AnalyzeAction.NAME,"indices/analyze",builder);
  addShardAction(ClearIndicesCacheAction.NAME,"indices/cache/clear",builder);
  builder.put(CloseIndexAction.NAME,"indices/close");
  builder.put(CreateIndexAction.NAME,"indices/create");
  builder.put(DeleteIndexAction.NAME,"indices/delete");
  builder.put(IndicesExistsAction.NAME,"indices/exists");
  addShardAction(FlushAction.NAME,"indices/flush",builder);
  builder.put(DeleteMappingAction.NAME,"indices/mapping/delete");
  builder.put(PutMappingAction.NAME,"indices/mapping/put");
  builder.put(GetFieldMappingsAction.NAME,"mappings/fields/get");
  builder.put(GetFieldMappingsAction.NAME + "[index]","mappings/fields/get/index");
  builder.put(GetFieldMappingsAction.NAME + "[index][s]","mappings/fields/get/index/s");
  builder.put(GetMappingsAction.NAME,"mappings/get");
  builder.put(OpenIndexAction.NAME,"indices/open");
  addShardAction(OptimizeAction.NAME,"indices/optimize",builder);
  addShardAction(RefreshAction.NAME,"indices/refresh",builder);
  builder.put(UpdateSettingsAction.NAME,"indices/settings/update");
  builder.put(ClusterSearchShardsAction.NAME,"cluster/shards/search_shards");
  builder.put(DeleteIndexTemplateAction.NAME,"indices/template/delete");
  builder.put(GetIndexTemplatesAction.NAME,"indices/template/get");
  builder.put(PutIndexTemplateAction.NAME,"indices/template/put");
  builder.put(TypesExistsAction.NAME,"indices/types/exists");
  addShardAction(ValidateQueryAction.NAME,"indices/validate/query",builder);
  builder.put(DeleteWarmerAction.NAME,"indices/warmer/delete");
  builder.put(GetWarmersAction.NAME,"warmers/get");
  builder.put(PutWarmerAction.NAME,"indices/warmer/put");
  addShardAction(CountAction.NAME,"count",builder);
  addShardAction(ExplainAction.NAME,"explain",builder);
  addShardAction(GetAction.NAME,"get",builder);
  builder.put(MultiGetAction.NAME,"mget");
  addShardAction(MultiGetAction.NAME + "[shard]","mget/shard",builder);
  builder.put(GetIndexedScriptAction.NAME,"getIndexedScript");
  builder.put(PutIndexedScriptAction.NAME,"putIndexedScript");
  builder.put(DeleteIndexedScriptAction.NAME,"deleteIndexedScript");
  builder.put(MoreLikeThisAction.NAME,"mlt");
  builder.put(MultiPercolateAction.NAME,"mpercolate");
  addShardAction(MultiPercolateAction.NAME + "[shard]","mpercolate/shard",builder);
  builder.put(MultiSearchAction.NAME,"msearch");
  builder.put(MultiTermVectorsAction.NAME,"mtv");
  addShardAction(MultiTermVectorsAction.NAME + "[shard]","mtv/shard",builder);
  addShardAction(PercolateAction.NAME,"percolate",builder);
  builder.put(SearchScrollAction.NAME,"search/scroll");
  builder.put(ClearScrollAction.NAME,"clear_sc");
  builder.put(SearchAction.NAME,"search");
  builder.put(SearchServiceTransportAction.FREE_CONTEXT_ACTION_NAME,"search/freeContext");
  builder.put(SearchServiceTransportAction.CLEAR_SCROLL_CONTEXTS_ACTION_NAME,"search/clearScrollContexts");
  builder.put(SearchServiceTransportAction.DFS_ACTION_NAME,"search/phase/dfs");
  builder.put(SearchServiceTransportAction.QUERY_ACTION_NAME,"search/phase/query");
  builder.put(SearchServiceTransportAction.QUERY_ID_ACTION_NAME,"search/phase/query/id");
  builder.put(SearchServiceTransportAction.QUERY_SCROLL_ACTION_NAME,"search/phase/query/scroll");
  builder.put(SearchServiceTransportAction.QUERY_FETCH_ACTION_NAME,"search/phase/query+fetch");
  builder.put(SearchServiceTransportAction.QUERY_QUERY_FETCH_ACTION_NAME,"search/phase/query/query+fetch");
  builder.put(SearchServiceTransportAction.QUERY_FETCH_SCROLL_ACTION_NAME,"search/phase/query+fetch/scroll");
  builder.put(SearchServiceTransportAction.FETCH_ID_ACTION_NAME,"search/phase/fetch/id");
  builder.put(SearchServiceTransportAction.SCAN_ACTION_NAME,"search/phase/scan");
  builder.put(SearchServiceTransportAction.SCAN_SCROLL_ACTION_NAME,"search/phase/scan/scroll");
  addShardAction(SuggestAction.NAME,"suggest",builder);
  addShardAction(TermVectorAction.NAME,"tv",builder);
  builder.put(BulkAction.NAME,"bulk");
  builder.put(BulkAction.NAME + "[s]","bulk/shard");
  builder.put(BulkAction.NAME + "[s][r]","bulk/shard/replica");
  builder.put(DeleteAction.NAME,"delete");
  builder.put(DeleteAction.NAME + "[r]","delete/replica");
  builder.put(DeleteAction.NAME + "[s]","indices/index/b_shard/delete");
  builder.put(DeleteAction.NAME + "[s][r]","indices/index/b_shard/delete/replica");
  builder.put(DeleteByQueryAction.NAME,"deleteByQuery");
  builder.put(DeleteByQueryAction.NAME + "[s]","deleteByQuery/shard");
  builder.put(DeleteByQueryAction.NAME + "[s][r]","deleteByQuery/shard/replica");
  builder.put(IndexAction.NAME,"index");
  builder.put(IndexAction.NAME + "[r]","index/replica");
  builder.put(UpdateAction.NAME,"update");
  addShardAction(RecoveryAction.NAME,"indices/recovery",builder);
  addShardAction(IndicesSegmentsAction.NAME,"indices/segments",builder);
  addShardAction(IndicesStatsAction.NAME,"indices/stats",builder);
  builder.put(GetSettingsAction.NAME,"indices/settings/get");
  builder.put(MappingUpdatedAction.ACTION_NAME,"cluster/mappingUpdated");
  builder.put(NodeIndexDeletedAction.INDEX_DELETED_ACTION_NAME,"cluster/nodeIndexDeleted");
  builder.put(NodeIndexDeletedAction.INDEX_STORE_DELETED_ACTION_NAME,"cluster/nodeIndexStoreDeleted");
  builder.put(NodeMappingRefreshAction.ACTION_NAME,"cluster/nodeMappingRefresh");
  addNodeAction(TransportNodesListShardStoreMetaData.ACTION_NAME,"/cluster/nodes/indices/shard/store",builder);
  builder.put(ShardStateAction.SHARD_STARTED_ACTION_NAME,"cluster/shardStarted");
  builder.put(ShardStateAction.SHARD_FAILED_ACTION_NAME,"cluster/shardFailure");
  builder.put(RestoreService.UPDATE_RESTORE_ACTION_NAME,"cluster/snapshot/update_restore");
  builder.put(SnapshotsService.UPDATE_SNAPSHOT_ACTION_NAME,"cluster/snapshot/update_snapshot");
  builder.put(MasterFaultDetection.MASTER_PING_ACTION_NAME,"discovery/zen/fd/masterPing");
  builder.put(NodesFaultDetection.PING_ACTION_NAME,"discovery/zen/fd/ping");
  builder.put(MembershipAction.DISCOVERY_JOIN_ACTION_NAME,"discovery/zen/join");
  builder.put(ZenDiscovery.DISCOVERY_REJOIN_ACTION_NAME,"discovery/zen/rejoin");
  builder.put(MembershipAction.DISCOVERY_JOIN_VALIDATE_ACTION_NAME,"discovery/zen/join/validate");
  builder.put(MembershipAction.DISCOVERY_LEAVE_ACTION_NAME,"discovery/zen/leave");
  builder.put(MulticastZenPing.ACTION_NAME,"discovery/zen/multicast");
  builder.put(PublishClusterStateAction.ACTION_NAME,"discovery/zen/publish");
  builder.put(UnicastZenPing.ACTION_NAME,"discovery/zen/unicast");
  builder.put(LocalAllocateDangledIndices.ACTION_NAME,"/gateway/local/allocate_dangled");
  addNodeAction(TransportNodesListGatewayMetaState.ACTION_NAME,"/gateway/local/meta-state",builder);
  addNodeAction(TransportNodesListGatewayStartedShards.ACTION_NAME,"/gateway/local/started-shards",builder);
  builder.put(RecoveryTarget.Actions.CLEAN_FILES,"index/shard/recovery/cleanFiles");
  builder.put(RecoveryTarget.Actions.FILE_CHUNK,"index/shard/recovery/fileChunk");
  builder.put(RecoveryTarget.Actions.FILES_INFO,"index/shard/recovery/filesInfo");
  builder.put(RecoveryTarget.Actions.FINALIZE,"index/shard/recovery/finalize");
  builder.put(RecoveryTarget.Actions.PREPARE_TRANSLOG,"index/shard/recovery/prepareTranslog");
  builder.put(RecoveryTarget.Actions.TRANSLOG_OPS,"index/shard/recovery/translogOps");
  builder.put(RecoverySource.Actions.START_RECOVERY,"index/shard/recovery/startRecovery");
  builder.put(IndicesStore.ACTION_SHARD_EXISTS,"index/shard/exists");
  builder.put(PublishRiverClusterStateAction.ACTION_NAME,"river/state/publish");
  return builder.build();
}
