{
  CountRequest countRequest=new CountRequest(HttpActions.splitIndices(request.param("index")));
  countRequest.listenerThreaded(false);
  try {
    BroadcastOperationThreading operationThreading=BroadcastOperationThreading.fromString(request.param("operationThreading"),BroadcastOperationThreading.SINGLE_THREAD);
    if (operationThreading == BroadcastOperationThreading.NO_THREADS) {
      operationThreading=BroadcastOperationThreading.SINGLE_THREAD;
    }
    countRequest.operationThreading(operationThreading);
    countRequest.querySource(HttpActions.parseQuerySource(request));
    countRequest.queryParserName(request.param("queryParserName"));
    countRequest.queryHint(request.param("queryHint"));
    countRequest.minScore(HttpActions.paramAsFloat(request.param("minScore"),DEFAULT_MIN_SCORE));
    String typesParam=request.param("type");
    if (typesParam != null) {
      countRequest.types(splitTypes(typesParam));
    }
  }
 catch (  Exception e) {
    try {
      channel.sendResponse(new JsonHttpResponse(request,BAD_REQUEST,JsonBuilder.cached().startObject().field("error",e.getMessage()).endObject()));
    }
 catch (    IOException e1) {
      logger.error("Failed to send failure response",e1);
    }
    return;
  }
  client.execCount(countRequest,new ActionListener<CountResponse>(){
    @Override public void onResponse(    CountResponse response){
      try {
        JsonBuilder builder=HttpJsonBuilder.cached(request);
        builder.startObject();
        builder.field("count",response.count());
        builder.startObject("_shards");
        builder.field("total",response.totalShards());
        builder.field("successful",response.successfulShards());
        builder.field("failed",response.failedShards());
        builder.endObject();
        builder.endObject();
        channel.sendResponse(new JsonHttpResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new JsonThrowableHttpResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
