{
  client().admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",1).put("index.number_of_replicas",0)).execute().actionGet();
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();
  ThreadPool.Info info=cluster().getInstance(ThreadPool.class).info(ThreadPool.Names.INDEX);
  int recCount=info.getMax() + (int)info.getQueueSize().getSingles();
  final CountDownLatch latch=new CountDownLatch(recCount);
  for (int rec=0; rec < recCount; rec++) {
    client().prepareIndex("test","type","rec" + rec).setSource("field" + rec,"some_value").execute(new ActionListener<IndexResponse>(){
      @Override public void onResponse(      IndexResponse indexResponse){
        latch.countDown();
      }
      @Override public void onFailure(      Throwable e){
        logger.error("failed to index in test",e);
        latch.countDown();
      }
    }
);
  }
  latch.await();
  logger.info("wait till the mappings have been processed...");
  awaitBusy(new Predicate<Object>(){
    @Override public boolean apply(    Object input){
      PendingClusterTasksResponse pendingTasks=client().admin().cluster().preparePendingClusterTasks().get();
      return pendingTasks.pendingTasks().isEmpty();
    }
  }
);
  logger.info("checking all the documents are there");
  RefreshResponse refreshResponse=client().admin().indices().prepareRefresh().execute().actionGet();
  assertThat(refreshResponse.getFailedShards(),equalTo(0));
  CountResponse response=client().prepareCount("test").execute().actionGet();
  assertThat(response.getCount(),equalTo((long)recCount));
  logger.info("checking all the fields are in the mappings");
  String source=client().admin().cluster().prepareState().get().getState().getMetaData().getIndices().get("test").getMappings().get("type").source().string();
  for (int rec=0; rec < recCount; rec++) {
    assertThat(source,containsString("\"field" + rec + "\""));
  }
}
