{
  FieldComparator wrappedComparator=wrappedSource.newComparator(fieldname,numHits + 1,sortPos,reversed);
switch (sortMode) {
case MAX:
    return new NestedFieldComparator.Highest(wrappedComparator,rootDocumentsFilter,innerDocumentsFilter,numHits);
case MIN:
  return new NestedFieldComparator.Lowest(wrappedComparator,rootDocumentsFilter,innerDocumentsFilter,numHits);
case SUM:
return new NestedFieldComparator.Sum((NumberComparatorBase<?>)wrappedComparator,rootDocumentsFilter,innerDocumentsFilter,numHits);
case AVG:
return new NestedFieldComparator.Avg((NumberComparatorBase<?>)wrappedComparator,rootDocumentsFilter,innerDocumentsFilter,numHits);
default :
throw new ElasticSearchIllegalArgumentException(String.format(Locale.ROOT,"Unsupported sort_mode[%s] for nested type",sortMode));
}
}
