def create_bwc_index(cfg, version):
    logging.info(('--> Creating bwc index for %s' % version))
    release_dir = os.path.join(cfg.releases_dir, ('elasticsearch-%s' % version))
    if (not os.path.exists(release_dir)):
        raise RuntimeError(('ES version %s does not exist in %s' % (version, cfg.releases_dir)))
    snapshot_supported = (not (version.startswith('0.') or (version == '1.0.0.Beta1')))
    tmp_dir = tempfile.mkdtemp()
    data_dir = os.path.join(tmp_dir, 'data')
    repo_dir = os.path.join(tmp_dir, 'repo')
    logging.info(('Temp data dir: %s' % data_dir))
    logging.info(('Temp repo dir: %s' % repo_dir))
    node = None
    try:
        node = start_node(version, release_dir, data_dir, repo_dir, cfg.tcp_port, cfg.http_port)
        client = create_client(cfg.http_port)
        index_name = ('index-%s' % version.lower())
        num_docs = generate_index(client, version, index_name)
        if snapshot_supported:
            snapshot_index(client, version, repo_dir)
        if (version.startswith('0.') or version.startswith('1.')):
            delete_by_query(client, version, index_name, 'doc')
        reindex_docs(client, index_name, 'doc', min(100, num_docs))
        shutdown_node(node)
        node = None
        compress_index(version, tmp_dir, cfg.output_dir)
        if snapshot_supported:
            compress_repo(version, tmp_dir, cfg.output_dir)
    finally:
        if (node is not None):
            shutdown_node(node)
        shutil.rmtree(tmp_dir)
