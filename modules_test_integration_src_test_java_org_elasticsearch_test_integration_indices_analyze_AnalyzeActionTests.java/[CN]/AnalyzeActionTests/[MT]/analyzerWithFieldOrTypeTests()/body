{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  client.admin().indices().prepareCreate("test").execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  client.admin().indices().preparePutMapping("test").setType("document").setSource("{\n" + "    \"document\":{\n" + "        \"properties\":{\n"+ "            \"simple\":{\n"+ "                \"type\":\"string\",\n"+ "                \"analyzer\": \"simple\"\n"+ "            }\n"+ "        }\n"+ "    }\n"+ "}").execute().actionGet();
  for (int i=0; i < 10; i++) {
    final AnalyzeRequestBuilder requestBuilder=client.admin().indices().prepareAnalyze("test","THIS IS A TEST");
    requestBuilder.type("document");
    requestBuilder.field("simple");
    AnalyzeResponse analyzeResponse=requestBuilder.execute().actionGet();
    assertThat(analyzeResponse.tokens().size(),equalTo(4));
    AnalyzeResponse.AnalyzeToken token=analyzeResponse.tokens().get(3);
    assertThat(token.term(),equalTo("test"));
    assertThat(token.startOffset(),equalTo(10));
    assertThat(token.endOffset(),equalTo(14));
  }
  for (int i=0; i < 10; i++) {
    final AnalyzeRequestBuilder requestBuilder=client.admin().indices().prepareAnalyze("test","THIS IS A TEST");
    requestBuilder.type("document");
    AnalyzeResponse analyzeResponse=requestBuilder.execute().actionGet();
    assertThat(analyzeResponse.tokens().size(),equalTo(1));
    AnalyzeResponse.AnalyzeToken token=analyzeResponse.tokens().get(0);
    assertThat(token.term(),equalTo("test"));
    assertThat(token.startOffset(),equalTo(10));
    assertThat(token.endOffset(),equalTo(14));
  }
  for (int i=0; i < 10; i++) {
    final AnalyzeRequestBuilder requestBuilder=client.admin().indices().prepareAnalyze("test","THIS IS A TEST");
    requestBuilder.field("simple");
    AnalyzeResponse analyzeResponse=requestBuilder.execute().actionGet();
    assertThat(analyzeResponse.tokens().size(),equalTo(1));
    AnalyzeResponse.AnalyzeToken token=analyzeResponse.tokens().get(0);
    assertThat(token.term(),equalTo("test"));
    assertThat(token.startOffset(),equalTo(10));
    assertThat(token.endOffset(),equalTo(14));
  }
}
