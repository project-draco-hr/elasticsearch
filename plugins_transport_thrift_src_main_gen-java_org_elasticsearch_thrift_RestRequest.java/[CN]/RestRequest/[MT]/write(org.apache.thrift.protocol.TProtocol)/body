{
  validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (this.method != null) {
    oprot.writeFieldBegin(METHOD_FIELD_DESC);
    oprot.writeI32(this.method.getValue());
    oprot.writeFieldEnd();
  }
  if (this.uri != null) {
    oprot.writeFieldBegin(URI_FIELD_DESC);
    oprot.writeString(this.uri);
    oprot.writeFieldEnd();
  }
  if (this.parameters != null) {
    if (isSetParameters()) {
      oprot.writeFieldBegin(PARAMETERS_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,this.parameters.size()));
        for (        Map.Entry<String,String> _iter8 : this.parameters.entrySet()) {
          oprot.writeString(_iter8.getKey());
          oprot.writeString(_iter8.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.headers != null) {
    if (isSetHeaders()) {
      oprot.writeFieldBegin(HEADERS_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,this.headers.size()));
        for (        Map.Entry<String,String> _iter9 : this.headers.entrySet()) {
          oprot.writeString(_iter9.getKey());
          oprot.writeString(_iter9.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.body != null) {
    if (isSetBody()) {
      oprot.writeFieldBegin(BODY_FIELD_DESC);
      oprot.writeBinary(this.body);
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
