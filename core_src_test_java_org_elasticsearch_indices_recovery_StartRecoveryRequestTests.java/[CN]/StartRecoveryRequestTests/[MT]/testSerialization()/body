{
  Version targetNodeVersion=randomVersion(random());
  StartRecoveryRequest outRequest=new StartRecoveryRequest(new ShardId("test","_na_",0),new DiscoveryNode("a",new LocalTransportAddress("1"),emptyMap(),emptySet(),targetNodeVersion),new DiscoveryNode("b",new LocalTransportAddress("1"),emptyMap(),emptySet(),targetNodeVersion),Store.MetadataSnapshot.EMPTY,RecoveryState.Type.PRIMARY_RELOCATION,1L);
  ByteArrayOutputStream outBuffer=new ByteArrayOutputStream();
  OutputStreamStreamOutput out=new OutputStreamStreamOutput(outBuffer);
  out.setVersion(targetNodeVersion);
  outRequest.writeTo(out);
  ByteArrayInputStream inBuffer=new ByteArrayInputStream(outBuffer.toByteArray());
  InputStreamStreamInput in=new InputStreamStreamInput(inBuffer);
  in.setVersion(targetNodeVersion);
  StartRecoveryRequest inRequest=new StartRecoveryRequest();
  inRequest.readFrom(in);
  assertThat(outRequest.shardId(),equalTo(inRequest.shardId()));
  assertThat(outRequest.sourceNode(),equalTo(inRequest.sourceNode()));
  assertThat(outRequest.targetNode(),equalTo(inRequest.targetNode()));
  assertThat(outRequest.metadataSnapshot().asMap(),equalTo(inRequest.metadataSnapshot().asMap()));
  assertThat(outRequest.recoveryId(),equalTo(inRequest.recoveryId()));
  assertThat(outRequest.recoveryType(),equalTo(inRequest.recoveryType()));
}
