{
  ClusterStateRequest clusterStateRequest=Requests.clusterStateRequest().listenerThreaded(false).filterRoutingTable(true).filterNodes(true);
  client.admin().cluster().state(clusterStateRequest,new ActionListener<ClusterStateResponse>(){
    @Override public void onResponse(    ClusterStateResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        builder.startObject("persistent");
        for (        Map.Entry<String,String> entry : response.getState().metaData().persistentSettings().getAsMap().entrySet()) {
          builder.field(entry.getKey(),entry.getValue());
        }
        builder.endObject();
        builder.startObject("transient");
        for (        Map.Entry<String,String> entry : response.getState().metaData().transientSettings().getAsMap().entrySet()) {
          builder.field(entry.getKey(),entry.getValue());
        }
        builder.endObject();
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,RestStatus.OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
