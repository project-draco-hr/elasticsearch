{
  createIndex("test");
  ensureGreen();
  final int numDocs=randomIntBetween(10,20);
  IndexRequestBuilder[] indexReqs=new IndexRequestBuilder[numDocs];
  for (int i=0; i < numDocs; ++i) {
    indexReqs[i]=client().prepareIndex("test","type",Integer.toString(i)).setSource();
  }
  indexRandom(true,indexReqs);
  SortOrder order=randomFrom(SortOrder.values());
  SearchResponse searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setSize(randomIntBetween(1,numDocs + 5)).addSort("_uid",order).execute().actionGet();
  assertNoFailures(searchResponse);
  SearchHit[] hits=searchResponse.getHits().hits();
  BytesRef previous=order == SortOrder.ASC ? new BytesRef() : UnicodeUtil.BIG_TERM;
  for (int i=0; i < hits.length; ++i) {
    final BytesRef uid=new BytesRef(Uid.createUid(hits[i].type(),hits[i].id()));
    assertThat(previous,order == SortOrder.ASC ? lessThan(uid) : greaterThan(uid));
    previous=uid;
  }
}
