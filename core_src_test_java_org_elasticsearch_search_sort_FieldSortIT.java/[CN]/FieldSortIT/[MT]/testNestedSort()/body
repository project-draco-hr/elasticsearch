{
  assertAcked(prepareCreate("test").addMapping("type",XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("nested").field("type","nested").startObject("properties").startObject("foo").field("type","text").field("fielddata",true).startObject("fields").startObject("sub").field("type","keyword").endObject().endObject().endObject().endObject().endObject().endObject().endObject().endObject()));
  ensureGreen();
  client().prepareIndex("test","type","1").setSource(jsonBuilder().startObject().startObject("nested").field("foo","bar bar").endObject().endObject()).execute().actionGet();
  refresh();
  SearchResponse searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addSort(SortBuilders.fieldSort("nested.foo").setNestedPath("nested").order(SortOrder.DESC)).execute().actionGet();
  assertNoFailures(searchResponse);
  SearchHit[] hits=searchResponse.getHits().hits();
  for (int i=0; i < hits.length; ++i) {
    assertThat(hits[i].getSortValues().length,is(1));
    assertThat(hits[i].getSortValues()[0],is("bar"));
  }
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addSort(SortBuilders.fieldSort("nested.foo.sub").setNestedPath("nested").order(SortOrder.DESC)).execute().actionGet();
  assertNoFailures(searchResponse);
  hits=searchResponse.getHits().hits();
  for (int i=0; i < hits.length; ++i) {
    assertThat(hits[i].getSortValues().length,is(1));
    assertThat(hits[i].getSortValues()[0],is("bar bar"));
  }
}
