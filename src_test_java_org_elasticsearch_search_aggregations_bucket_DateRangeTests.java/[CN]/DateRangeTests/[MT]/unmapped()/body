{
  client().admin().cluster().prepareHealth("idx_unmapped").setWaitForYellowStatus().execute().actionGet();
  SearchResponse response=client().prepareSearch("idx_unmapped").addAggregation(dateRange("range").field("date").addUnboundedTo(date(2,15)).addRange(date(2,15),date(3,15)).addUnboundedFrom(date(3,15))).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  DateRange range=response.getAggregations().get("range");
  assertThat(range,notNullValue());
  assertThat(range.getName(),equalTo("range"));
  assertThat(range.buckets().size(),equalTo(3));
  DateRange.Bucket bucket=range.getByKey("*-2012-02-15T00:00:00.000Z");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("*-2012-02-15T00:00:00.000Z"));
  assertThat(bucket.getFrom(),equalTo(Double.NEGATIVE_INFINITY));
  assertThat(bucket.getFromAsDate(),nullValue());
  assertThat(bucket.getTo(),equalTo((double)date(2,15).getMillis()));
  assertThat(bucket.getToAsDate(),equalTo(date(2,15)));
  assertThat(bucket.getDocCount(),equalTo(0l));
  bucket=range.getByKey("2012-02-15T00:00:00.000Z-2012-03-15T00:00:00.000Z");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("2012-02-15T00:00:00.000Z-2012-03-15T00:00:00.000Z"));
  assertThat(bucket.getFrom(),equalTo((double)date(2,15).getMillis()));
  assertThat(bucket.getFromAsDate(),equalTo(date(2,15)));
  assertThat(bucket.getTo(),equalTo((double)date(3,15).getMillis()));
  assertThat(bucket.getToAsDate(),equalTo(date(3,15)));
  assertThat(bucket.getDocCount(),equalTo(0l));
  bucket=range.getByKey("2012-03-15T00:00:00.000Z-*");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("2012-03-15T00:00:00.000Z-*"));
  assertThat(bucket.getFrom(),equalTo((double)date(3,15).getMillis()));
  assertThat(bucket.getFromAsDate(),equalTo(date(3,15)));
  assertThat(bucket.getTo(),equalTo(Double.POSITIVE_INFINITY));
  assertThat(bucket.getToAsDate(),nullValue());
  assertThat(bucket.getDocCount(),equalTo(0l));
}
