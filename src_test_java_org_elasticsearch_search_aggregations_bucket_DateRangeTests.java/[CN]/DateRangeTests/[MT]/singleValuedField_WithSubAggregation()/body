{
  SearchResponse response=client().prepareSearch("idx").addAggregation(dateRange("range").field("date").addUnboundedTo("r1",date(2,15)).addRange("r2",date(2,15),date(3,15)).addUnboundedFrom("r3",date(3,15)).subAggregation(sum("sum").field("value"))).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  DateRange range=response.getAggregations().get("range");
  assertThat(range,notNullValue());
  assertThat(range.getName(),equalTo("range"));
  assertThat(range.buckets().size(),equalTo(3));
  DateRange.Bucket bucket=range.getByKey("r1");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("r1"));
  assertThat(bucket.getFrom(),equalTo(Double.NEGATIVE_INFINITY));
  assertThat(bucket.getFromAsDate(),nullValue());
  assertThat(bucket.getTo(),equalTo((double)date(2,15).getMillis()));
  assertThat(bucket.getToAsDate(),equalTo(date(2,15)));
  assertThat(bucket.getDocCount(),equalTo(2l));
  Sum sum=bucket.getAggregations().get("sum");
  assertThat(sum,notNullValue());
  assertThat(sum.getValue(),equalTo((double)1 + 2));
  bucket=range.getByKey("r2");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("r2"));
  assertThat(bucket.getFrom(),equalTo((double)date(2,15).getMillis()));
  assertThat(bucket.getFromAsDate(),equalTo(date(2,15)));
  assertThat(bucket.getTo(),equalTo((double)date(3,15).getMillis()));
  assertThat(bucket.getToAsDate(),equalTo(date(3,15)));
  assertThat(bucket.getDocCount(),equalTo(2l));
  sum=bucket.getAggregations().get("sum");
  assertThat(sum,notNullValue());
  assertThat(sum.getValue(),equalTo((double)3 + 4));
  bucket=range.getByKey("r3");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("r3"));
  assertThat(bucket.getFrom(),equalTo((double)date(3,15).getMillis()));
  assertThat(bucket.getFromAsDate(),equalTo(date(3,15)));
  assertThat(bucket.getTo(),equalTo(Double.POSITIVE_INFINITY));
  assertThat(bucket.getToAsDate(),nullValue());
  assertThat(bucket.getDocCount(),equalTo(numDocs - 4l));
  sum=bucket.getAggregations().get("sum");
  assertThat(sum,notNullValue());
}
