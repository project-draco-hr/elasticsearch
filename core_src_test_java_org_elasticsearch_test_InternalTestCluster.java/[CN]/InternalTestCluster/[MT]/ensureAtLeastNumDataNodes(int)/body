{
  List<ListenableFuture<String>> futures=new ArrayList<>();
synchronized (this) {
    int size=numDataNodes();
    for (int i=size; i < n; i++) {
      logger.info("increasing cluster size from {} to {}",size,n);
      futures.add(startNodeAsync());
    }
  }
  try {
    Futures.allAsList(futures).get();
  }
 catch (  Exception e) {
    throw new ElasticsearchException("failed to start nodes",e);
  }
  if (!futures.isEmpty()) {
synchronized (this) {
      assertNoTimeout(client().admin().cluster().prepareHealth().setWaitForNodes(Integer.toString(nodes.size())).get());
    }
  }
}
