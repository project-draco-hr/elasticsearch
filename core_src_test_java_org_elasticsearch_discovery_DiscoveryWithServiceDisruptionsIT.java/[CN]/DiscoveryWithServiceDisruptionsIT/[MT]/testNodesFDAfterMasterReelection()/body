{
  startCluster(4);
  logger.info("--> stopping current master");
  internalCluster().stopCurrentMasterNode();
  ensureStableCluster(3);
  logger.info("--> reducing min master nodes to 2");
  assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(Settings.builder().put(ElectMasterService.DISCOVERY_ZEN_MINIMUM_MASTER_NODES_SETTING.getKey(),2)).get());
  String master=internalCluster().getMasterName();
  String nonMaster=null;
  for (  String node : internalCluster().getNodeNames()) {
    if (!node.equals(master)) {
      nonMaster=node;
    }
  }
  logger.info("--> isolating [{}]",nonMaster);
  addRandomIsolation(nonMaster).startDisrupting();
  logger.info("--> waiting for master to remove it");
  ensureStableCluster(2,master);
}
