{
  int[] states=new int[a.getNumStates()];
  final Set<Integer> visited=new HashSet<>();
  final LinkedList<Integer> worklist=new LinkedList<>();
  worklist.add(0);
  visited.add(0);
  int upto=0;
  states[upto]=0;
  upto++;
  Transition t=new Transition();
  while (worklist.size() > 0) {
    int s=worklist.removeFirst();
    int count=a.initTransition(s,t);
    for (int i=0; i < count; i++) {
      a.getNextTransition(t);
      if (!visited.contains(t.dest)) {
        visited.add(t.dest);
        worklist.add(t.dest);
        states[upto++]=t.dest;
      }
    }
  }
  return states;
}
