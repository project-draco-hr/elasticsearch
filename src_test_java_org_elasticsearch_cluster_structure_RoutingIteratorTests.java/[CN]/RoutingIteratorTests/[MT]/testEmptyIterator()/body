{
  ShardShuffler shuffler=new RotationShardShuffler(0);
  ShardIterator shardIterator=new PlainShardIterator(new ShardId("test1",0),shuffler.shuffle(ImmutableList.<ShardRouting>of()));
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.firstOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.nextOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.nextOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
  shardIterator=new PlainShardIterator(new ShardId("test1",0),shuffler.shuffle(ImmutableList.<ShardRouting>of()));
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.firstOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.nextOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.nextOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
  shardIterator=new PlainShardIterator(new ShardId("test1",0),shuffler.shuffle(ImmutableList.<ShardRouting>of()));
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.firstOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.nextOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.nextOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
  shardIterator=new PlainShardIterator(new ShardId("test1",0),shuffler.shuffle(ImmutableList.<ShardRouting>of()));
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.firstOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.nextOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
  assertThat(shardIterator.nextOrNull(),nullValue());
  assertThat(shardIterator.remaining(),equalTo(0));
}
