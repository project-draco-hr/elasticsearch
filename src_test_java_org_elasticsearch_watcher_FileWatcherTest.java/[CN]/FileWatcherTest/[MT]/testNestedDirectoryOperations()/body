{
  Path tempDir=createTempDir();
  RecordingChangeListener changes=new RecordingChangeListener(tempDir);
  Path testDir=tempDir.resolve("test-dir");
  Files.createDirectories(testDir);
  touch(testDir.resolve("test.txt"));
  Files.createDirectories(testDir.resolve("sub-dir"));
  touch(testDir.resolve("sub-dir/test0.txt"));
  FileWatcher fileWatcher=new FileWatcher(testDir);
  fileWatcher.addListener(changes);
  fileWatcher.init();
  assertThat(changes.notifications(),contains(equalTo("onDirectoryInit: test-dir/"),equalTo("onDirectoryInit: test-dir/sub-dir/"),equalTo("onFileInit: test-dir/sub-dir/test0.txt"),equalTo("onFileInit: test-dir/test.txt")));
  changes.notifications().clear();
  fileWatcher.checkAndNotify();
  assertThat(changes.notifications(),hasSize(0));
  touch(testDir.resolve("sub-dir/test1.txt"));
  fileWatcher.checkAndNotify();
  assertThat(changes.notifications(),contains(equalTo("onFileCreated: test-dir/sub-dir/test1.txt")));
  changes.notifications().clear();
  fileWatcher.checkAndNotify();
  assertThat(changes.notifications(),hasSize(0));
  Files.createDirectories(testDir.resolve("first-level"));
  touch(testDir.resolve("first-level/file1.txt"));
  Files.createDirectories(testDir.resolve("first-level/second-level"));
  touch(testDir.resolve("first-level/second-level/file2.txt"));
  fileWatcher.checkAndNotify();
  assertThat(changes.notifications(),contains(equalTo("onDirectoryCreated: test-dir/first-level/"),equalTo("onFileCreated: test-dir/first-level/file1.txt"),equalTo("onDirectoryCreated: test-dir/first-level/second-level/"),equalTo("onFileCreated: test-dir/first-level/second-level/file2.txt")));
  changes.notifications().clear();
  fileWatcher.checkAndNotify();
  assertThat(changes.notifications(),hasSize(0));
  Path path=testDir.resolve("first-level");
  if (Files.exists(path)) {
    IOUtils.rm(path);
  }
  fileWatcher.checkAndNotify();
  assertThat(changes.notifications(),contains(equalTo("onFileDeleted: test-dir/first-level/file1.txt"),equalTo("onFileDeleted: test-dir/first-level/second-level/file2.txt"),equalTo("onDirectoryDeleted: test-dir/first-level/second-level"),equalTo("onDirectoryDeleted: test-dir/first-level")));
}
