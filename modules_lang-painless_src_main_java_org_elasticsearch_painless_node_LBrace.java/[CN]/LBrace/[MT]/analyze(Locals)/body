{
  if (before == null) {
    throw createError(new IllegalArgumentException("Illegal array access made without target."));
  }
  Sort sort=before.sort;
  if (sort == Sort.ARRAY) {
    index.expected=Definition.INT_TYPE;
    index.analyze(locals);
    index=index.cast(locals);
    after=Definition.getType(before.struct,before.dimensions - 1);
    return this;
  }
 else   if (sort == Sort.DEF) {
    return new LDefArray(location,index).copy(this).analyze(locals);
  }
 else   if (Map.class.isAssignableFrom(before.clazz)) {
    return new LMapShortcut(location,index).copy(this).analyze(locals);
  }
 else   if (List.class.isAssignableFrom(before.clazz)) {
    return new LListShortcut(location,index).copy(this).analyze(locals);
  }
  throw createError(new IllegalArgumentException("Illegal array access on type [" + before.name + "]."));
}
