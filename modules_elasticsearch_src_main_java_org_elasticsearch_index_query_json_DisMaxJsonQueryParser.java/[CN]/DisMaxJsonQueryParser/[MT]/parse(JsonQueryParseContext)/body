{
  JsonParser jp=parseContext.jp();
  float boost=1.0f;
  float tieBreakerMultiplier=0.0f;
  List<Query> queries=newArrayList();
  String currentFieldName=null;
  JsonToken token;
  while ((token=jp.nextToken()) != JsonToken.END_OBJECT) {
    if (token == JsonToken.FIELD_NAME) {
      currentFieldName=jp.getCurrentName();
    }
 else     if (token == JsonToken.START_OBJECT) {
      if ("queries".equals(currentFieldName)) {
        queries.add(parseContext.parseInnerQuery());
      }
    }
 else     if (token == JsonToken.START_ARRAY) {
      if ("queries".equals(currentFieldName)) {
        while (token != JsonToken.END_ARRAY) {
          queries.add(parseContext.parseInnerQuery());
          token=jp.nextToken();
        }
      }
    }
 else {
      if ("boost".equals(currentFieldName)) {
        boost=jp.getFloatValue();
      }
 else       if ("tieBreakerMultiplier".equals(currentFieldName)) {
        tieBreakerMultiplier=jp.getFloatValue();
      }
 else       if ("tieBreaker".equals(currentFieldName)) {
        tieBreakerMultiplier=jp.getFloatValue();
      }
    }
  }
  DisjunctionMaxQuery query=new DisjunctionMaxQuery(queries,tieBreakerMultiplier);
  query.setBoost(boost);
  return query;
}
