{
  try {
    client().admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  try {
    client().admin().indices().prepareDelete("_percolator").execute().actionGet();
  }
 catch (  Exception e) {
  }
  client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards",2)).execute().actionGet();
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();
  logger.info("--> register a query");
  client().prepareIndex("_percolator","test","kuku").setSource(jsonBuilder().startObject().field("color","blue").field("query",termQuery("field1","value1")).endObject()).setRefresh(true).execute().actionGet();
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForActiveShards(4).execute().actionGet();
  for (int i=0; i < 10; i++) {
    IndexResponse index=client().prepareIndex("test","type1",Integer.toString(i)).setSource("field1","value1").setPercolate("*").execute().actionGet();
    assertThat(index.getMatches().size(),equalTo(1));
    assertThat(index.getMatches(),hasItem("kuku"));
  }
  for (int i=0; i < 10; i++) {
    IndexResponse index=client().prepareIndex("test","type1",Integer.toString(i)).setSource("field1","value1").setPercolate("color:blue").execute().actionGet();
    assertThat(index.getMatches().size(),equalTo(1));
    assertThat(index.getMatches(),hasItem("kuku"));
  }
  for (int i=0; i < 10; i++) {
    IndexResponse index=client().prepareIndex("test","type1",Integer.toString(i)).setSource("field1","value1").setPercolate("color:green").execute().actionGet();
    assertThat(index.getMatches().size(),equalTo(0));
  }
  BulkRequestBuilder bulkRequestBuilder=client().prepareBulk();
  for (int i=0; i < 10; i++) {
    bulkRequestBuilder.add(client().prepareIndex("test","type1",Integer.toString(i)).setSource("field1","value1").setPercolate("*"));
  }
  BulkResponse bulkResponse=bulkRequestBuilder.execute().actionGet();
  assertThat(bulkResponse.hasFailures(),equalTo(false));
  for (  BulkItemResponse bulkItemResponse : bulkResponse) {
    IndexResponse index=bulkItemResponse.getResponse();
    assertThat(index.getMatches().size(),equalTo(1));
    assertThat(index.getMatches(),hasItem("kuku"));
  }
}
