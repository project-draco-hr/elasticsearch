{
  String indexName=randomAsciiOfLength(10);
  ClusterState clusterState=ClusterState.builder(createClusterState(indexName,randomIntBetween(2,10),0,Settings.builder().put("index.blocks.write",true).build())).nodes(DiscoveryNodes.builder().put(newNode("node1"))).build();
  AllocationService service=new AllocationService(Settings.builder().build(),new AllocationDeciders(Settings.EMPTY,Collections.singleton(new MaxRetryAllocationDecider(Settings.EMPTY))),NoopGatewayAllocator.INSTANCE,new BalancedShardsAllocator(Settings.EMPTY),EmptyClusterInfoService.INSTANCE);
  RoutingTable routingTable=service.reroute(clusterState,"reroute").routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  routingTable=service.applyStartedShards(clusterState,routingTable.index(indexName).shardsWithState(ShardRoutingState.INITIALIZING)).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  DocsStats stats=new DocsStats(randomIntBetween(0,IndexWriter.MAX_DOCS - 1),randomIntBetween(1,1000));
  ShrinkRequest target=new ShrinkRequest("target",indexName);
  CreateIndexClusterStateUpdateRequest request=TransportShrinkAction.prepareCreateIndexRequest(target,clusterState,stats,new IndexNameExpressionResolver(Settings.EMPTY));
  assertNotNull(request.shrinkFrom());
  assertEquals(indexName,request.shrinkFrom().getName());
  assertEquals("1",request.settings().get("index.number_of_shards"));
  assertEquals("shrink_index",request.cause());
}
