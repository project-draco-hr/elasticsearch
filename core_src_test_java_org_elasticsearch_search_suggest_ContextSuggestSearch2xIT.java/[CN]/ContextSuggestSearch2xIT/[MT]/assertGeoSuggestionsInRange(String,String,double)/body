{
  String suggestionName=randomAsciiOfLength(10);
  CompletionSuggestionBuilder context=SuggestBuilders.completionSuggestion(FIELD).text(suggest).size(10).contexts(new CompletionSuggestionBuilder.Contexts2x().addGeoLocation("st",location));
  SearchRequestBuilder suggestionRequest=client().prepareSearch(INDEX).suggest(new SuggestBuilder().addSuggestion(suggestionName,context));
  SearchResponse suggestResponse=suggestionRequest.execute().actionGet();
  Suggest suggest2=suggestResponse.getSuggest();
  assertTrue(suggest2.iterator().hasNext());
  for (  Suggestion<? extends Entry<? extends Option>> s : suggest2) {
    CompletionSuggestion suggestion=(CompletionSuggestion)s;
    assertTrue(suggestion.iterator().hasNext());
    for (    CompletionSuggestion.Entry entry : suggestion) {
      List<CompletionSuggestion.Entry.Option> options=entry.getOptions();
      assertTrue(options.iterator().hasNext());
      for (      CompletionSuggestion.Entry.Option option : options) {
        String target=option.getPayloadAsString();
        assertDistance(location,target,Matchers.lessThanOrEqualTo(precision));
      }
    }
  }
}
