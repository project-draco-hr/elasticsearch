{
  final int nPrecision=randomIntBetween(4,12);
  List<Integer> precisions=new ArrayList<>(nPrecision);
  for (int i=0; i < nPrecision; i++) {
    precisions.add(i + 1);
  }
  Collections.shuffle(precisions,getRandom());
  int[] precision=new int[nPrecision];
  for (int i=0; i < precision.length; i++) {
    precision[i]=precisions.get(i);
  }
  XContentBuilder mapping=jsonBuilder().startObject().startObject(TYPE).startObject("properties").startObject("completion").field("type","completion").startObject("context").startObject("location").field("type","geo").field("precision",precision).endObject().endObject().endObject().endObject().endObject().endObject();
  assertAcked(prepareCreate(INDEX).setSettings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,PRE2X_VERSION.id)).addMapping(TYPE,mapping.string()));
  ensureYellow();
  Collections.shuffle(precisions,getRandom());
  for (int i=0; i < precision.length; i++) {
    precision[i]=precisions.get(i);
  }
  mapping=jsonBuilder().startObject().startObject(TYPE).startObject("properties").startObject("completion").field("type","completion").startObject("context").startObject("location").field("type","geo").field("precision",precision).endObject().endObject().endObject().endObject().endObject().endObject();
  assertAcked(client().admin().indices().preparePutMapping(INDEX).setType(TYPE).setSource(mapping.string()).get());
}
