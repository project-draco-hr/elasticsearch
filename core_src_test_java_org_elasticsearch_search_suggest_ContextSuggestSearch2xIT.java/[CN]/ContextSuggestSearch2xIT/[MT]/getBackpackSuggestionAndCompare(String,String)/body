{
  Set<String> expected=new HashSet<>();
  Collections.addAll(expected,expectedText);
  CompletionSuggestionBuilder context=SuggestBuilders.completionSuggestion("suggest_field").text("back").size(10).contexts(new CompletionSuggestionBuilder.Contexts2x().addContextField("color",contextValue));
  SearchRequestBuilder suggestionRequest=client().prepareSearch(INDEX).suggest(new SuggestBuilder().addSuggestion("suggestion",context));
  SearchResponse suggestResponse=suggestionRequest.execute().actionGet();
  Suggest suggest=suggestResponse.getSuggest();
  assertEquals(suggest.size(),1);
  for (  Suggestion<? extends Entry<? extends Option>> s : suggest) {
    CompletionSuggestion suggestion=(CompletionSuggestion)s;
    for (    CompletionSuggestion.Entry entry : suggestion) {
      List<CompletionSuggestion.Entry.Option> options=entry.getOptions();
      assertEquals(options.size(),expectedText.length);
      for (      CompletionSuggestion.Entry.Option option : options) {
        assertTrue(expected.contains(option.getText().string()));
        expected.remove(option.getText().string());
      }
    }
  }
}
