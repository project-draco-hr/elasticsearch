{
  SearchRequest countRequest=new SearchRequest(Strings.splitStringByCommaToArray(request.param("index")));
  countRequest.indicesOptions(IndicesOptions.fromRequest(request,countRequest.indicesOptions()));
  SearchSourceBuilder searchSourceBuilder=new SearchSourceBuilder().size(0);
  countRequest.source(searchSourceBuilder);
  if (RestActions.hasBodyContent(request)) {
    BytesReference restContent=RestActions.getRestContent(request);
    QueryParseContext context=new QueryParseContext(indicesQueriesRegistry);
    context.parseFieldMatcher(parseFieldMatcher);
    searchSourceBuilder.query(RestActions.getQueryContent(restContent,context));
  }
 else {
    QueryBuilder<?> queryBuilder=RestActions.urlParamsToQueryBuilder(request);
    if (queryBuilder != null) {
      searchSourceBuilder.query(queryBuilder);
    }
  }
  countRequest.routing(request.param("routing"));
  float minScore=request.paramAsFloat("min_score",-1f);
  if (minScore != -1f) {
    searchSourceBuilder.minScore(minScore);
  }
  countRequest.types(Strings.splitStringByCommaToArray(request.param("type")));
  countRequest.preference(request.param("preference"));
  final int terminateAfter=request.paramAsInt("terminate_after",DEFAULT_TERMINATE_AFTER);
  if (terminateAfter < 0) {
    throw new IllegalArgumentException("terminateAfter must be > 0");
  }
 else   if (terminateAfter > 0) {
    searchSourceBuilder.terminateAfter(terminateAfter);
  }
  client.search(countRequest,new RestBuilderListener<SearchResponse>(channel){
    @Override public RestResponse buildResponse(    SearchResponse response,    XContentBuilder builder) throws Exception {
      builder.startObject();
      if (terminateAfter != DEFAULT_TERMINATE_AFTER) {
        builder.field("terminated_early",response.isTerminatedEarly());
      }
      builder.field("count",response.getHits().totalHits());
      buildBroadcastShardsHeader(builder,request,response.getTotalShards(),response.getSuccessfulShards(),response.getFailedShards(),response.getShardFailures());
      builder.endObject();
      return new BytesRestResponse(response.status(),builder);
    }
  }
);
}
