{
  assertAcked(prepareCreate("test").addMapping("parent").addMapping("child","_parent","type=parent"));
  ensureGreen();
  for (int i=0; i < 10; i++) {
    client().prepareIndex("test","parent","p" + i).setSource("{}").get();
    client().prepareIndex("test","child","c" + i).setSource("{}").setParent("p" + i).get();
  }
  refresh();
  QueryBuilder[] queries=new QueryBuilder[]{hasChildQuery("child",matchAllQuery()),boolQuery().must(matchAllQuery()).filter(hasChildQuery("child",matchAllQuery())),hasParentQuery("parent",matchAllQuery()),boolQuery().must(matchAllQuery()).filter(hasParentQuery("parent",matchAllQuery()))};
  for (  QueryBuilder query : queries) {
    SearchResponse scrollResponse=client().prepareSearch("test").setScroll(TimeValue.timeValueSeconds(30)).setSize(1).addField("_id").setQuery(query).execute().actionGet();
    assertNoFailures(scrollResponse);
    assertThat(scrollResponse.getHits().totalHits(),equalTo(10L));
    int scannedDocs=0;
    do {
      assertThat(scrollResponse.getHits().totalHits(),equalTo(10L));
      scannedDocs+=scrollResponse.getHits().getHits().length;
      scrollResponse=client().prepareSearchScroll(scrollResponse.getScrollId()).setScroll(TimeValue.timeValueSeconds(30)).get();
    }
 while (scrollResponse.getHits().getHits().length > 0);
    clearScroll(scrollResponse.getScrollId());
    assertThat(scannedDocs,equalTo(10));
  }
}
