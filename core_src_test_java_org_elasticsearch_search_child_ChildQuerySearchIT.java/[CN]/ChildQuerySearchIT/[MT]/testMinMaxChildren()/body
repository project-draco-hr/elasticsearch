{
  assertAcked(prepareCreate("test").addMapping("parent","id","type=long").addMapping("child","_parent","type=parent"));
  ensureGreen();
  indexRandom(true,createMinMaxDocBuilders().toArray(new IndexRequestBuilder[0]));
  SearchResponse response;
  response=minMaxQuery(ScoreMode.None,0,0);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("2"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  assertThat(response.getHits().hits()[2].id(),equalTo("4"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.None,1,0);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("2"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  assertThat(response.getHits().hits()[2].id(),equalTo("4"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.None,2,0);
  assertThat(response.getHits().totalHits(),equalTo(2L));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("4"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.None,3,0);
  assertThat(response.getHits().totalHits(),equalTo(1L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.None,4,0);
  assertThat(response.getHits().totalHits(),equalTo(0L));
  response=minMaxQuery(ScoreMode.None,0,4);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("2"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  assertThat(response.getHits().hits()[2].id(),equalTo("4"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.None,0,3);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("2"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  assertThat(response.getHits().hits()[2].id(),equalTo("4"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.None,0,2);
  assertThat(response.getHits().totalHits(),equalTo(2L));
  assertThat(response.getHits().hits()[0].id(),equalTo("2"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.None,2,2);
  assertThat(response.getHits().totalHits(),equalTo(1L));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  try {
    response=minMaxQuery(ScoreMode.None,3,2);
    fail();
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.toString(),containsString("[has_child] 'max_children' is less than 'min_children'"));
  }
  response=minMaxQuery(ScoreMode.Total,0,0);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(3f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Total,1,0);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(3f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Total,2,0);
  assertThat(response.getHits().totalHits(),equalTo(2L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(3f));
  response=minMaxQuery(ScoreMode.Total,3,0);
  assertThat(response.getHits().totalHits(),equalTo(1L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  response=minMaxQuery(ScoreMode.Total,4,0);
  assertThat(response.getHits().totalHits(),equalTo(0L));
  response=minMaxQuery(ScoreMode.Total,0,4);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(3f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Total,0,3);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(3f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Total,0,2);
  assertThat(response.getHits().totalHits(),equalTo(2L));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("2"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Total,2,2);
  assertThat(response.getHits().totalHits(),equalTo(1L));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  try {
    response=minMaxQuery(ScoreMode.Total,3,2);
    fail();
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.toString(),containsString("[has_child] 'max_children' is less than 'min_children'"));
  }
  response=minMaxQuery(ScoreMode.Max,0,0);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(2f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Max,1,0);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(2f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Max,2,0);
  assertThat(response.getHits().totalHits(),equalTo(2L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(2f));
  response=minMaxQuery(ScoreMode.Max,3,0);
  assertThat(response.getHits().totalHits(),equalTo(1L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  response=minMaxQuery(ScoreMode.Max,4,0);
  assertThat(response.getHits().totalHits(),equalTo(0L));
  response=minMaxQuery(ScoreMode.Max,0,4);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(2f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Max,0,3);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(2f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Max,0,2);
  assertThat(response.getHits().totalHits(),equalTo(2L));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("2"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Max,2,2);
  assertThat(response.getHits().totalHits(),equalTo(1L));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  try {
    response=minMaxQuery(ScoreMode.Max,3,2);
    fail();
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.toString(),containsString("[has_child] 'max_children' is less than 'min_children'"));
  }
  response=minMaxQuery(ScoreMode.Avg,0,0);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1.5f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Avg,1,0);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1.5f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Avg,2,0);
  assertThat(response.getHits().totalHits(),equalTo(2L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1.5f));
  response=minMaxQuery(ScoreMode.Avg,3,0);
  assertThat(response.getHits().totalHits(),equalTo(1L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  response=minMaxQuery(ScoreMode.Avg,4,0);
  assertThat(response.getHits().totalHits(),equalTo(0L));
  response=minMaxQuery(ScoreMode.Avg,0,4);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1.5f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Avg,0,3);
  assertThat(response.getHits().totalHits(),equalTo(3L));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1.5f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Avg,0,2);
  assertThat(response.getHits().totalHits(),equalTo(2L));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1.5f));
  assertThat(response.getHits().hits()[1].id(),equalTo("2"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  response=minMaxQuery(ScoreMode.Avg,2,2);
  assertThat(response.getHits().totalHits(),equalTo(1L));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1.5f));
  try {
    response=minMaxQuery(ScoreMode.Avg,3,2);
    fail();
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.toString(),containsString("[has_child] 'max_children' is less than 'min_children'"));
  }
}
