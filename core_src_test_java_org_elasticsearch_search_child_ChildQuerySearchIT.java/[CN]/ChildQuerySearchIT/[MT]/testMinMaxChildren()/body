{
  assertAcked(prepareCreate("test").addMapping("parent","id","type=long").addMapping("child","_parent","type=parent"));
  ensureGreen();
  indexRandom(true,createMinMaxDocBuilders().toArray(new IndexRequestBuilder[0]));
  SearchResponse response;
  response=minMaxQuery("none",0,null);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("2"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  assertThat(response.getHits().hits()[2].id(),equalTo("4"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("none",1,null);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("2"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  assertThat(response.getHits().hits()[2].id(),equalTo("4"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("none",2,null);
  assertThat(response.getHits().totalHits(),equalTo(2l));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("4"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  response=minMaxQuery("none",3,null);
  assertThat(response.getHits().totalHits(),equalTo(1l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  response=minMaxQuery("none",4,null);
  assertThat(response.getHits().totalHits(),equalTo(0l));
  response=minMaxQuery("none",0,4);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("2"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  assertThat(response.getHits().hits()[2].id(),equalTo("4"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("none",0,3);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("2"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  assertThat(response.getHits().hits()[2].id(),equalTo("4"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("none",0,2);
  assertThat(response.getHits().totalHits(),equalTo(2l));
  assertThat(response.getHits().hits()[0].id(),equalTo("2"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  response=minMaxQuery("none",2,2);
  assertThat(response.getHits().totalHits(),equalTo(1l));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1f));
  try {
    response=minMaxQuery("none",3,2);
    fail();
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.toString(),containsString("[has_child] 'max_children' is less than 'min_children'"));
  }
  response=minMaxQuery("total",0,null);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(3f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("total",1,null);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(3f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("total",2,null);
  assertThat(response.getHits().totalHits(),equalTo(2l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(3f));
  response=minMaxQuery("total",3,null);
  assertThat(response.getHits().totalHits(),equalTo(1l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  response=minMaxQuery("total",4,null);
  assertThat(response.getHits().totalHits(),equalTo(0l));
  response=minMaxQuery("total",0,4);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(3f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("total",0,3);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(6f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(3f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("total",0,2);
  assertThat(response.getHits().totalHits(),equalTo(2l));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("2"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  response=minMaxQuery("total",2,2);
  assertThat(response.getHits().totalHits(),equalTo(1l));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  try {
    response=minMaxQuery("total",3,2);
    fail();
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.toString(),containsString("[has_child] 'max_children' is less than 'min_children'"));
  }
  response=minMaxQuery("max",0,null);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(2f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("max",1,null);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(2f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("max",2,null);
  assertThat(response.getHits().totalHits(),equalTo(2l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(2f));
  response=minMaxQuery("max",3,null);
  assertThat(response.getHits().totalHits(),equalTo(1l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  response=minMaxQuery("max",4,null);
  assertThat(response.getHits().totalHits(),equalTo(0l));
  response=minMaxQuery("max",0,4);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(2f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("max",0,3);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(3f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(2f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("max",0,2);
  assertThat(response.getHits().totalHits(),equalTo(2l));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("2"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  response=minMaxQuery("max",2,2);
  assertThat(response.getHits().totalHits(),equalTo(1l));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  try {
    response=minMaxQuery("max",3,2);
    fail();
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.toString(),containsString("[has_child] 'max_children' is less than 'min_children'"));
  }
  response=minMaxQuery("avg",0,null);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1.5f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("avg",1,null);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1.5f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("avg",2,null);
  assertThat(response.getHits().totalHits(),equalTo(2l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1.5f));
  response=minMaxQuery("avg",3,null);
  assertThat(response.getHits().totalHits(),equalTo(1l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  response=minMaxQuery("avg",4,null);
  assertThat(response.getHits().totalHits(),equalTo(0l));
  response=minMaxQuery("avg",0,4);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1.5f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("avg",0,3);
  assertThat(response.getHits().totalHits(),equalTo(3l));
  assertThat(response.getHits().hits()[0].id(),equalTo("4"));
  assertThat(response.getHits().hits()[0].score(),equalTo(2f));
  assertThat(response.getHits().hits()[1].id(),equalTo("3"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1.5f));
  assertThat(response.getHits().hits()[2].id(),equalTo("2"));
  assertThat(response.getHits().hits()[2].score(),equalTo(1f));
  response=minMaxQuery("avg",0,2);
  assertThat(response.getHits().totalHits(),equalTo(2l));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1.5f));
  assertThat(response.getHits().hits()[1].id(),equalTo("2"));
  assertThat(response.getHits().hits()[1].score(),equalTo(1f));
  response=minMaxQuery("avg",2,2);
  assertThat(response.getHits().totalHits(),equalTo(1l));
  assertThat(response.getHits().hits()[0].id(),equalTo("3"));
  assertThat(response.getHits().hits()[0].score(),equalTo(1.5f));
  try {
    response=minMaxQuery("avg",3,2);
    fail();
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.toString(),containsString("[has_child] 'max_children' is less than 'min_children'"));
  }
}
