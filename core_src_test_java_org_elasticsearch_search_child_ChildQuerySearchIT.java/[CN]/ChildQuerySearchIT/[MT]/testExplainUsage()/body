{
  assertAcked(prepareCreate("test").addMapping("parent").addMapping("child","_parent","type=parent"));
  ensureGreen();
  String parentId="p1";
  client().prepareIndex("test","parent",parentId).setSource("p_field","1").get();
  client().prepareIndex("test","child","c1").setSource("c_field","1").setParent(parentId).get();
  refresh();
  SearchResponse searchResponse=client().prepareSearch("test").setExplain(true).setQuery(hasChildQuery("child",termQuery("c_field","1")).scoreMode(ScoreMode.Max)).get();
  assertHitCount(searchResponse,1l);
  assertThat(searchResponse.getHits().getAt(0).explanation().getDescription(),equalTo("Score based on join value p1"));
  searchResponse=client().prepareSearch("test").setExplain(true).setQuery(hasParentQuery("parent",termQuery("p_field","1")).score(true)).get();
  assertHitCount(searchResponse,1l);
  assertThat(searchResponse.getHits().getAt(0).explanation().getDescription(),equalTo("Score based on join value p1"));
  ExplainResponse explainResponse=client().prepareExplain("test","parent",parentId).setQuery(hasChildQuery("child",termQuery("c_field","1")).scoreMode(ScoreMode.Max)).get();
  assertThat(explainResponse.isExists(),equalTo(true));
  assertThat(explainResponse.getExplanation().getDetails()[0].getDescription(),equalTo("Score based on join value p1"));
}
