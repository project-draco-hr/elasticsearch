{
  XContentParser parser=parseContext.parser();
  List<String> ids=new ArrayList<String>();
  String type=null;
  String currentFieldName=null;
  float boost=1.0f;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if ("values".equals(currentFieldName)) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          String value=parser.textOrNull();
          if (value == null) {
            throw new QueryParsingException(index,"No value specified for term filter");
          }
          ids.add(value);
        }
      }
    }
 else     if (token.isValue()) {
      if ("type".equals(currentFieldName) || "_type".equals(currentFieldName)) {
        type=parser.text();
      }
 else       if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
    }
  }
  if (type == null) {
    throw new QueryParsingException(index,"[ids] query, no type provided");
  }
  if (ids.size() == 0) {
    throw new QueryParsingException(index,"[ids] query, no ids values provided");
  }
  UidFilter filter=new UidFilter(type,ids,parseContext.indexCache().bloomCache());
  ConstantScoreQuery query=new ConstantScoreQuery(filter);
  query.setBoost(boost);
  return query;
}
