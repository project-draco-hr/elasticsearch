{
  AllocationService strategy=new AllocationService(settingsBuilder().put("cluster.routing.allocation.concurrent_recoveries",10).build());
  logger.info("Building initial routing table");
  MetaData metaData=newMetaDataBuilder().put(newIndexMetaDataBuilder("test").numberOfShards(1).numberOfReplicas(1)).build();
  RoutingTable routingTable=routingTable().addAsNew(metaData.index("test")).build();
  ClusterState clusterState=newClusterStateBuilder().metaData(metaData).routingTable(routingTable).build();
  logger.info("Adding two nodes and performing rerouting");
  clusterState=newClusterStateBuilder().state(clusterState).nodes(newNodesBuilder().put(newNode("node1")).put(newNode("node2"))).build();
  RoutingTable prevRoutingTable=routingTable;
  routingTable=strategy.reroute(clusterState).routingTable();
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  logger.info("Start the primary shard (on node1)");
  RoutingNodes routingNodes=clusterState.routingNodes();
  prevRoutingTable=routingTable;
  routingTable=strategy.applyStartedShards(clusterState,routingNodes.node("node1").shardsWithState(INITIALIZING)).routingTable();
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  logger.info("Start the backup shard (on node2)");
  routingNodes=clusterState.routingNodes();
  prevRoutingTable=routingTable;
  routingTable=strategy.applyStartedShards(clusterState,routingNodes.node("node2").shardsWithState(INITIALIZING)).routingTable();
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  logger.info("Adding third node and reroute and kill first node");
  clusterState=newClusterStateBuilder().state(clusterState).nodes(newNodesBuilder().putAll(clusterState.nodes()).put(newNode("node3")).remove("node1")).build();
  prevRoutingTable=routingTable;
  routingTable=strategy.reroute(clusterState).routingTable();
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  routingNodes=clusterState.routingNodes();
  assertThat(prevRoutingTable != routingTable,equalTo(true));
  assertThat(routingTable.index("test").shards().size(),equalTo(1));
  assertThat(routingNodes.node("node1"),nullValue());
  assertThat(routingNodes.node("node2").numberOfShardsWithState(STARTED),equalTo(1));
  assertThat(routingNodes.node("node3").numberOfShardsWithState(INITIALIZING),equalTo(1));
  assertThat(routingTable.index("test").shard(0).primaryShard().currentNodeId(),equalTo("node2"));
  assertThat(routingTable.index("test").shard(0).replicaShards().get(0).currentNodeId(),equalTo("node3"));
}
