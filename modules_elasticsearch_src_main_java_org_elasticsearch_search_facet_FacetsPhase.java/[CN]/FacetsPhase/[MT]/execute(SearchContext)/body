{
  if (context.facets() == null) {
    return;
  }
  if (context.queryResult().facets() != null) {
    return;
  }
  if (context.searcher().globalCollectors() != null) {
    Query query=Queries.MATCH_ALL_QUERY;
    if (context.types().length > 0) {
      query=new FilteredQuery(query,context.filterCache().cache(context.mapperService().typesFilter(context.types())));
    }
    context.searcher().useGlobalCollectors(true);
    try {
      context.searcher().search(query,NoopCollector.NOOP_COLLECTOR);
    }
 catch (    IOException e) {
      throw new QueryPhaseExecutionException(context,"Failed to execute global facets",e);
    }
 finally {
      context.searcher().useGlobalCollectors(false);
    }
  }
  SearchContextFacets contextFacets=context.facets();
  List<Facet> facets=Lists.newArrayListWithCapacity(2);
  if (contextFacets.facetCollectors() != null) {
    for (    FacetCollector facetCollector : contextFacets.facetCollectors()) {
      facets.add(facetCollector.facet());
    }
  }
  context.queryResult().facets(new InternalFacets(facets));
}
