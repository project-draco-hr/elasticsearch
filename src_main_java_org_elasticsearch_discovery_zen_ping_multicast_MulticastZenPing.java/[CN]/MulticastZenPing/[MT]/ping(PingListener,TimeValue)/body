{
  if (!pingEnabled) {
    threadPool.generic().execute(new Runnable(){
      @Override public void run(){
        listener.onPing(new PingResponse[0]);
      }
    }
);
    return;
  }
  final int id=pingIdGenerator.incrementAndGet();
  receivedResponses.put(id,new ConcurrentHashMap<DiscoveryNode,PingResponse>());
  sendPingRequest(id);
  threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2),ThreadPool.Names.GENERIC,new Runnable(){
    @Override public void run(){
      try {
        sendPingRequest(id);
      }
 catch (      Exception e) {
        logger.warn("[{}] failed to send second ping request",e,id);
      }
    }
  }
);
  threadPool.schedule(timeout,ThreadPool.Names.GENERIC,new Runnable(){
    @Override public void run(){
      ConcurrentMap<DiscoveryNode,PingResponse> responses=receivedResponses.remove(id);
      listener.onPing(responses.values().toArray(new PingResponse[responses.size()]));
    }
  }
);
}
