{
  Protocol protocol=S3Repository.getValue(singleRepositorySettings,settings,S3Repository.Repository.PROTOCOL_SETTING,S3Repository.Repositories.PROTOCOL_SETTING);
  Integer maxRetries=S3Repository.getValue(singleRepositorySettings,settings,S3Repository.Repository.MAX_RETRIES_SETTING,S3Repository.Repositories.MAX_RETRIES_SETTING);
  Boolean useThrottleRetries=S3Repository.getValue(singleRepositorySettings,settings,S3Repository.Repository.USE_THROTTLE_RETRIES_SETTING,S3Repository.Repositories.USE_THROTTLE_RETRIES_SETTING);
  ClientConfiguration configuration=InternalAwsS3Service.buildConfiguration(logger,settings,protocol,maxRetries,null,useThrottleRetries);
  assertThat(configuration.getResponseMetadataCacheSize(),is(0));
  assertThat(configuration.getProtocol(),is(expectedProtocol));
  assertThat(configuration.getProxyHost(),is(expectedProxyHost));
  assertThat(configuration.getProxyPort(),is(expectedProxyPort));
  assertThat(configuration.getProxyUsername(),is(expectedProxyUsername));
  assertThat(configuration.getProxyPassword(),is(expectedProxyPassword));
  assertThat(configuration.getSignerOverride(),is(expectedSigner));
  assertThat(configuration.getMaxErrorRetry(),is(expectedMaxRetries));
  assertThat(configuration.useThrottledRetries(),is(expectedUseThrottleRetries));
}
