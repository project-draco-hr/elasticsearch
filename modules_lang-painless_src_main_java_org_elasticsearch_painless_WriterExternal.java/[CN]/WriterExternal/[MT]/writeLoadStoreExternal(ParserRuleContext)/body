{
  final ExtNodeMetadata sourceenmd=metadata.getExtNodeMetadata(source);
  final ExternalMetadata parentemd=metadata.getExternalMetadata(sourceenmd.parent);
  if (sourceenmd.target == null) {
    return;
  }
  final boolean length="#length".equals(sourceenmd.target);
  final boolean array="#brace".equals(sourceenmd.target);
  final boolean name=sourceenmd.target instanceof String && !length && !array;
  final boolean variable=sourceenmd.target instanceof Integer;
  final boolean field=sourceenmd.target instanceof Field;
  final boolean shortcut=sourceenmd.target instanceof Object[];
  if (!length && !variable && !field&& !array&& !name&& !shortcut) {
    throw new IllegalStateException(WriterUtility.error(source) + "Target not found for load/store.");
  }
  final boolean maplist=shortcut && (boolean)((Object[])sourceenmd.target)[2];
  final Object constant=shortcut ? ((Object[])sourceenmd.target)[3] : null;
  final boolean x1=field || name || (shortcut && !maplist);
  final boolean x2=array || (shortcut && maplist);
  if (length) {
    execute.arrayLength();
  }
 else   if (sourceenmd.last && parentemd.storeExpr != null) {
    final ExpressionMetadata expremd=metadata.getExpressionMetadata(parentemd.storeExpr);
    final boolean cat=utility.containsStrings(parentemd.storeExpr);
    if (cat) {
      if (maplist && constant != null) {
        utility.writeConstant(source,constant);
      }
      if (field || name || (shortcut && !maplist)) {
        execute.dupX1();
      }
 else       if (array || maplist) {
        execute.dup2X1();
      }
      writeLoadStoreInstruction(source,false,variable,field,name,array,shortcut);
      utility.writeAppendStrings(sourceenmd.type.sort);
      writer.visit(parentemd.storeExpr);
      if (utility.containsStrings(parentemd.storeExpr)) {
        utility.writeAppendStrings(expremd.to.sort);
        utility.removeStrings(parentemd.storeExpr);
      }
      utility.writeToStrings();
      caster.checkWriteCast(source,sourceenmd.castTo);
      if (parentemd.read) {
        utility.writeDup(sourceenmd.type.sort.size,x1,x2);
      }
      writeLoadStoreInstruction(source,true,variable,field,name,array,shortcut);
    }
 else     if (parentemd.token > 0) {
      final int token=parentemd.token;
      if (maplist && constant != null) {
        utility.writeConstant(source,constant);
      }
      if (field || name || (shortcut && !maplist)) {
        execute.dup();
      }
 else       if (array || maplist) {
        execute.dup2();
      }
      writeLoadStoreInstruction(source,false,variable,field,name,array,shortcut);
      if (parentemd.read && parentemd.post) {
        utility.writeDup(sourceenmd.type.sort.size,x1,x2);
      }
      caster.checkWriteCast(source,sourceenmd.castFrom);
      writer.visit(parentemd.storeExpr);
      utility.writeBinaryInstruction(source,sourceenmd.promote,token);
      boolean exact=false;
      if (!settings.getNumericOverflow() && expremd.typesafe && sourceenmd.type.sort != Sort.DEF && (token == MUL || token == DIV || token == REM || token == ADD || token == SUB)) {
        exact=writeExactInstruction(sourceenmd.type.sort,sourceenmd.promote.sort);
      }
      if (!exact) {
        caster.checkWriteCast(source,sourceenmd.castTo);
      }
      if (parentemd.read && !parentemd.post) {
        utility.writeDup(sourceenmd.type.sort.size,x1,x2);
      }
      writeLoadStoreInstruction(source,true,variable,field,name,array,shortcut);
    }
 else {
      if (constant != null) {
        utility.writeConstant(source,constant);
      }
      writer.visit(parentemd.storeExpr);
      if (parentemd.read) {
        utility.writeDup(sourceenmd.type.sort.size,x1,x2);
      }
      writeLoadStoreInstruction(source,true,variable,field,name,array,shortcut);
    }
  }
 else {
    if (constant != null) {
      utility.writeConstant(source,constant);
    }
    writeLoadStoreInstruction(source,false,variable,field,name,array,shortcut);
  }
}
