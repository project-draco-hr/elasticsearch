{
  if (sort == null || sort.getSort() == null || sort.getSort().length == 0) {
    throw new IllegalArgumentException("Sort must contain at least one field.");
  }
  SortField[] sortFields=sort.getSort();
  if (sortFields.length != values.length) {
    throw new IllegalArgumentException(SEARCH_AFTER.getPreferredName() + " has " + values.length+ " value(s) but sort has "+ sort.getSort().length+ ".");
  }
  Object[] fieldValues=new Object[sortFields.length];
  for (int i=0; i < sortFields.length; i++) {
    SortField sortField=sortFields[i];
    if (values[i] != null) {
      fieldValues[i]=convertValueFromSortField(values[i],sortField);
    }
 else {
      fieldValues[i]=null;
    }
  }
  return new FieldDoc(Integer.MAX_VALUE,0,fieldValues);
}
