{
  out.writeVInt(sortValues.length);
  for (  Object fieldValue : sortValues) {
    if (fieldValue == null) {
      out.writeByte((byte)0);
    }
 else {
      Class<?> type=fieldValue.getClass();
      if (type == String.class) {
        out.writeByte((byte)1);
        out.writeString((String)fieldValue);
      }
 else       if (type == Integer.class) {
        out.writeByte((byte)2);
        out.writeInt((Integer)fieldValue);
      }
 else       if (type == Long.class) {
        out.writeByte((byte)3);
        out.writeLong((Long)fieldValue);
      }
 else       if (type == Float.class) {
        out.writeByte((byte)4);
        out.writeFloat((Float)fieldValue);
      }
 else       if (type == Double.class) {
        out.writeByte((byte)5);
        out.writeDouble((Double)fieldValue);
      }
 else       if (type == Byte.class) {
        out.writeByte((byte)6);
        out.writeByte((Byte)fieldValue);
      }
 else       if (type == Short.class) {
        out.writeByte((byte)7);
        out.writeShort((Short)fieldValue);
      }
 else       if (type == Boolean.class) {
        out.writeByte((byte)8);
        out.writeBoolean((Boolean)fieldValue);
      }
 else       if (fieldValue instanceof Text) {
        out.writeByte((byte)9);
        out.writeText((Text)fieldValue);
      }
 else {
        throw new IOException("Can't handle " + SEARCH_AFTER.getPreferredName() + " field value of type ["+ type+ "]");
      }
    }
  }
}
