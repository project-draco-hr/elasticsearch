{
  XContentParser parser=parseContext.parser();
  XContentParser.Token token;
  final HighlightBuilder.Field field=new HighlightBuilder.Field(fieldname);
  String currentFieldName=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if (parseContext.parseFieldMatcher().match(currentFieldName,PRE_TAGS_FIELD)) {
        List<String> preTagsList=new ArrayList<>();
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          preTagsList.add(parser.text());
        }
        field.preTags(preTagsList.toArray(new String[preTagsList.size()]));
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,POST_TAGS_FIELD)) {
        List<String> postTagsList=new ArrayList<>();
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          postTagsList.add(parser.text());
        }
        field.postTags(postTagsList.toArray(new String[postTagsList.size()]));
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,MATCHED_FIELDS_FIELD)) {
        List<String> matchedFields=new ArrayList<>();
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          matchedFields.add(parser.text());
        }
        field.matchedFields(matchedFields.toArray(new String[matchedFields.size()]));
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"cannot parse array with name [{}]",currentFieldName);
      }
    }
 else     if (token.isValue()) {
      if (parseContext.parseFieldMatcher().match(currentFieldName,FRAGMENT_SIZE_FIELD)) {
        field.fragmentSize(parser.intValue());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,NUMBER_OF_FRAGMENTS_FIELD)) {
        field.numOfFragments(parser.intValue());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,FRAGMENT_OFFSET_FIELD)) {
        field.fragmentOffset(parser.intValue());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,HIGHLIGHT_FILTER_FIELD)) {
        field.highlightFilter(parser.booleanValue());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,ORDER_FIELD)) {
        field.order(parser.text());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,REQUIRE_FIELD_MATCH_FIELD)) {
        field.requireFieldMatch(parser.booleanValue());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,BOUNDARY_MAX_SCAN_FIELD)) {
        field.boundaryMaxScan(parser.intValue());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,BOUNDARY_CHARS_FIELD)) {
        field.boundaryChars(parser.text().toCharArray());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,TYPE_FIELD)) {
        field.highlighterType(parser.text());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,FRAGMENTER_FIELD)) {
        field.fragmenter(parser.text());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,NO_MATCH_SIZE_FIELD)) {
        field.noMatchSize(parser.intValue());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,FORCE_SOURCE_FIELD)) {
        field.forceSource(parser.booleanValue());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,PHRASE_LIMIT_FIELD)) {
        field.phraseLimit(parser.intValue());
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"unexpected fieldname [{}]",currentFieldName);
      }
    }
 else     if (token == XContentParser.Token.START_OBJECT && currentFieldName != null) {
      if (parseContext.parseFieldMatcher().match(currentFieldName,HIGHLIGHT_QUERY_FIELD)) {
        field.highlightQuery(parseContext.parseInnerQueryBuilder());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,OPTIONS_FIELD)) {
        field.options(parser.map());
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"cannot parse object with name [{}]",currentFieldName);
      }
    }
 else     if (currentFieldName != null) {
      throw new ParsingException(parser.getTokenLocation(),"unexpected token [{}] after [{}]",token,currentFieldName);
    }
  }
  return field;
}
