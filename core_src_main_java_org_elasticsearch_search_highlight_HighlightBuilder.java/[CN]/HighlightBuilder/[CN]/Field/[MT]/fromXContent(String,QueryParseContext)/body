{
  XContentParser parser=parseContext.parser();
  XContentParser.Token token;
  final HighlightBuilder.Field field=new HighlightBuilder.Field(fieldname);
  String currentFieldName=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if ("pre_tags".equals(currentFieldName) || "preTags".equals(currentFieldName)) {
        List<String> preTagsList=new ArrayList<>();
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          preTagsList.add(parser.text());
        }
        field.preTags(preTagsList.toArray(new String[preTagsList.size()]));
      }
 else       if ("post_tags".equals(currentFieldName) || "postTags".equals(currentFieldName)) {
        List<String> postTagsList=new ArrayList<>();
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          postTagsList.add(parser.text());
        }
        field.postTags(postTagsList.toArray(new String[postTagsList.size()]));
      }
 else       if ("matched_fields".equals(currentFieldName) || "matchedFields".equals(currentFieldName)) {
        List<String> matchedFields=new ArrayList<>();
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          matchedFields.add(parser.text());
        }
        field.matchedFields(matchedFields.toArray(new String[matchedFields.size()]));
      }
    }
 else     if (token.isValue()) {
      if ("fragment_size".equals(currentFieldName) || "fragmentSize".equals(currentFieldName)) {
        field.fragmentSize(parser.intValue());
      }
 else       if ("number_of_fragments".equals(currentFieldName) || "numberOfFragments".equals(currentFieldName)) {
        field.numOfFragments(parser.intValue());
      }
 else       if ("fragment_offset".equals(currentFieldName) || "fragmentOffset".equals(currentFieldName)) {
        field.fragmentOffset(parser.intValue());
      }
 else       if ("highlight_filter".equals(currentFieldName) || "highlightFilter".equals(currentFieldName)) {
        field.highlightFilter(parser.booleanValue());
      }
 else       if ("order".equals(currentFieldName)) {
        field.order(parser.text());
      }
 else       if ("require_field_match".equals(currentFieldName) || "requireFieldMatch".equals(currentFieldName)) {
        field.requireFieldMatch(parser.booleanValue());
      }
 else       if ("boundary_max_scan".equals(currentFieldName) || "boundaryMaxScan".equals(currentFieldName)) {
        field.boundaryMaxScan(parser.intValue());
      }
 else       if ("boundary_chars".equals(currentFieldName) || "boundaryChars".equals(currentFieldName)) {
        field.boundaryChars(parser.text().toCharArray());
      }
 else       if ("type".equals(currentFieldName)) {
        field.highlighterType(parser.text());
      }
 else       if ("fragmenter".equals(currentFieldName)) {
        field.fragmenter(parser.text());
      }
 else       if ("no_match_size".equals(currentFieldName) || "noMatchSize".equals(currentFieldName)) {
        field.noMatchSize(parser.intValue());
      }
 else       if ("force_source".equals(currentFieldName) || "forceSource".equals(currentFieldName)) {
        field.forceSource(parser.booleanValue());
      }
 else       if ("phrase_limit".equals(currentFieldName) || "phraseLimit".equals(currentFieldName)) {
        field.phraseLimit(parser.intValue());
      }
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("highlight_query".equals(currentFieldName) || "highlightQuery".equals(currentFieldName)) {
        field.highlightQuery(parseContext.parseInnerQueryBuilder());
      }
 else       if ("options".equals(currentFieldName)) {
        field.options(parser.map());
      }
    }
  }
  return field;
}
