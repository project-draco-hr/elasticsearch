{
  final SearchContextHighlight.FieldOptions.Builder globalOptionsBuilder=new SearchContextHighlight.FieldOptions.Builder();
  globalOptionsBuilder.encoder(this.encoder);
  transferOptions(this,globalOptionsBuilder,context);
  globalOptionsBuilder.merge(defaultOptions);
  Collection<org.elasticsearch.search.highlight.SearchContextHighlight.Field> fieldOptions=new ArrayList<>();
  for (  Field field : this.fields) {
    final SearchContextHighlight.FieldOptions.Builder fieldOptionsBuilder=new SearchContextHighlight.FieldOptions.Builder();
    fieldOptionsBuilder.fragmentOffset(field.fragmentOffset);
    if (field.matchedFields != null) {
      Set<String> matchedFields=new HashSet<String>(field.matchedFields.length);
      Collections.addAll(matchedFields,field.matchedFields);
      fieldOptionsBuilder.matchedFields(matchedFields);
    }
    transferOptions(field,fieldOptionsBuilder,context);
    fieldOptions.add(new SearchContextHighlight.Field(field.name(),fieldOptionsBuilder.merge(globalOptionsBuilder.build()).build()));
  }
  return new SearchContextHighlight(fieldOptions);
}
