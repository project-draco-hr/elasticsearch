{
  this.versions=new HashSet<>();
  this.fs=new FsInfo.Path();
  this.plugins=new HashSet<>();
  Set<InetAddress> seenAddresses=new HashSet<>(nodeResponses.length);
  List<NodeInfo> nodeInfos=new ArrayList<>();
  List<NodeStats> nodeStats=new ArrayList<>();
  for (  ClusterStatsNodeResponse nodeResponse : nodeResponses) {
    nodeInfos.add(nodeResponse.nodeInfo());
    nodeStats.add(nodeResponse.nodeStats());
    this.versions.add(nodeResponse.nodeInfo().getVersion());
    this.plugins.addAll(nodeResponse.nodeInfo().getPlugins().getPluginInfos());
    TransportAddress publishAddress=nodeResponse.nodeInfo().getTransport().address().publishAddress();
    InetAddress inetAddress=null;
    if (publishAddress.uniqueAddressTypeId() == 1) {
      inetAddress=((InetSocketTransportAddress)publishAddress).address().getAddress();
    }
    if (!seenAddresses.add(inetAddress)) {
      continue;
    }
    if (nodeResponse.nodeStats().getFs() != null) {
      this.fs.add(nodeResponse.nodeStats().getFs().total());
    }
  }
  this.counts=new Counts(nodeInfos);
  this.os=new OsStats(nodeInfos);
  this.process=new ProcessStats(nodeStats);
  this.jvm=new JvmStats(nodeInfos,nodeStats);
}
