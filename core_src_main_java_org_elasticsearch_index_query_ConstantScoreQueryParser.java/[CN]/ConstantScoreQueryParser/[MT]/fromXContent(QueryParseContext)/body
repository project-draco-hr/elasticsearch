{
  XContentParser parser=parseContext.parser();
  QueryBuilder query=null;
  boolean queryFound=false;
  String queryName=null;
  float boost=AbstractQueryBuilder.DEFAULT_BOOST;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (parseContext.isDeprecatedSetting(currentFieldName)) {
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if (parseContext.parseFieldMatcher().match(currentFieldName,INNER_QUERY_FIELD)) {
        query=parseContext.parseInnerFilterToQueryBuilder();
        queryFound=true;
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"[constant_score] query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token.isValue()) {
      if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else       if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"[constant_score] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (!queryFound) {
    throw new ParsingException(parser.getTokenLocation(),"[constant_score] requires a 'filter' element");
  }
  ConstantScoreQueryBuilder constantScoreBuilder=new ConstantScoreQueryBuilder(query);
  constantScoreBuilder.boost(boost);
  constantScoreBuilder.queryName(queryName);
  return constantScoreBuilder;
}
