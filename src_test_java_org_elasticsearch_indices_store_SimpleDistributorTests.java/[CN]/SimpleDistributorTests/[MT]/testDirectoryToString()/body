{
  createIndexWithStoreType("test","niofs","least_used");
  String storeString=getStoreDirectory("test",0).toString();
  logger.info(storeString);
  File[] dataPaths=dataPaths();
  assertThat(storeString.toLowerCase(),startsWith("store(least_used[rate_limited(niofs(" + dataPaths[0].getAbsolutePath().toLowerCase()));
  if (dataPaths.length > 1) {
    assertThat(storeString.toLowerCase(),containsString("), rate_limited(niofs(" + dataPaths[1].getAbsolutePath().toLowerCase()));
  }
  assertThat(storeString,endsWith(", type=MERGE, rate=20.0)])"));
  createIndexWithStoreType("test","niofs","random");
  storeString=getStoreDirectory("test",0).toString();
  logger.info(storeString);
  dataPaths=dataPaths();
  assertThat(storeString.toLowerCase(),startsWith("store(random[rate_limited(niofs(" + dataPaths[0].getAbsolutePath().toLowerCase()));
  if (dataPaths.length > 1) {
    assertThat(storeString.toLowerCase(),containsString("), rate_limited(niofs(" + dataPaths[1].getAbsolutePath().toLowerCase()));
  }
  assertThat(storeString,endsWith(", type=MERGE, rate=20.0)])"));
  createIndexWithStoreType("test","mmapfs","least_used");
  storeString=getStoreDirectory("test",0).toString();
  logger.info(storeString);
  dataPaths=dataPaths();
  assertThat(storeString.toLowerCase(),startsWith("store(least_used[rate_limited(mmapfs(" + dataPaths[0].getAbsolutePath().toLowerCase()));
  if (dataPaths.length > 1) {
    assertThat(storeString.toLowerCase(),containsString("), rate_limited(mmapfs(" + dataPaths[1].getAbsolutePath().toLowerCase()));
  }
  assertThat(storeString,endsWith(", type=MERGE, rate=20.0)])"));
  createIndexWithStoreType("test","simplefs","least_used");
  storeString=getStoreDirectory("test",0).toString();
  logger.info(storeString);
  dataPaths=dataPaths();
  assertThat(storeString.toLowerCase(),startsWith("store(least_used[rate_limited(simplefs(" + dataPaths[0].getAbsolutePath().toLowerCase()));
  if (dataPaths.length > 1) {
    assertThat(storeString.toLowerCase(),containsString("), rate_limited(simplefs(" + dataPaths[1].getAbsolutePath().toLowerCase()));
  }
  assertThat(storeString,endsWith(", type=MERGE, rate=20.0)])"));
  createIndexWithStoreType("test","memory","least_used");
  storeString=getStoreDirectory("test",0).toString();
  logger.info(storeString);
  dataPaths=dataPaths();
  assertThat(storeString,equalTo("store(least_used[byte_buffer])"));
  createIndexWithoutRateLimitingStoreType("test","niofs","least_used");
  storeString=getStoreDirectory("test",0).toString();
  logger.info(storeString);
  dataPaths=dataPaths();
  assertThat(storeString.toLowerCase(),startsWith("store(least_used[niofs(" + dataPaths[0].getAbsolutePath().toLowerCase()));
  if (dataPaths.length > 1) {
    assertThat(storeString.toLowerCase(),containsString("), niofs(" + dataPaths[1].getAbsolutePath().toLowerCase()));
  }
  assertThat(storeString,endsWith(")])"));
}
