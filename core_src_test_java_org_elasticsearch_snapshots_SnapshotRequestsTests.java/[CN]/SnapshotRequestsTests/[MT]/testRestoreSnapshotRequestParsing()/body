{
  RestoreSnapshotRequest request=new RestoreSnapshotRequest("test-repo","test-snap");
  XContentBuilder builder=jsonBuilder().startObject();
  if (randomBoolean()) {
    builder.field("indices","foo,bar,baz");
  }
 else {
    builder.startArray("indices");
    builder.value("foo");
    builder.value("bar");
    builder.value("baz");
    builder.endArray();
  }
  IndicesOptions indicesOptions=IndicesOptions.fromOptions(randomBoolean(),randomBoolean(),randomBoolean(),randomBoolean());
  if (indicesOptions.expandWildcardsClosed()) {
    if (indicesOptions.expandWildcardsOpen()) {
      builder.field("expand_wildcards","all");
    }
 else {
      builder.field("expand_wildcards","closed");
    }
  }
 else {
    if (indicesOptions.expandWildcardsOpen()) {
      builder.field("expand_wildcards","open");
    }
 else {
      builder.field("expand_wildcards","none");
    }
  }
  builder.field("allow_no_indices",indicesOptions.allowNoIndices());
  builder.field("rename_pattern","rename-from");
  builder.field("rename_replacement","rename-to");
  boolean partial=randomBoolean();
  builder.field("partial",partial);
  builder.startObject("settings").field("set1","val1").endObject();
  builder.startObject("index_settings").field("set1","val2").endObject();
  if (randomBoolean()) {
    builder.field("ignore_index_settings","set2,set3");
  }
 else {
    builder.startArray("ignore_index_settings");
    builder.value("set2");
    builder.value("set3");
    builder.endArray();
  }
  byte[] bytes=builder.endObject().bytes().toBytes();
  request.source(bytes);
  assertEquals("test-repo",request.repository());
  assertEquals("test-snap",request.snapshot());
  assertArrayEquals(request.indices(),new String[]{"foo","bar","baz"});
  assertEquals("rename-from",request.renamePattern());
  assertEquals("rename-to",request.renameReplacement());
  assertEquals(partial,request.partial());
  assertEquals("val1",request.settings().get("set1"));
  assertArrayEquals(request.ignoreIndexSettings(),new String[]{"set2","set3"});
}
