{
  XJavascriptParser.conditional_return retval=new XJavascriptParser.conditional_return();
  retval.start=input.LT(1);
  CommonTree root_0=null;
  Token AT_COND_QUE4=null;
  Token AT_COLON6=null;
  ParserRuleReturnScope logical_or3=null;
  ParserRuleReturnScope conditional5=null;
  ParserRuleReturnScope conditional7=null;
  CommonTree AT_COND_QUE4_tree=null;
  CommonTree AT_COLON6_tree=null;
  try {
{
      root_0=(CommonTree)adaptor.nil();
      pushFollow(FOLLOW_logical_or_in_conditional757);
      logical_or3=logical_or();
      state._fsp--;
      adaptor.addChild(root_0,logical_or3.getTree());
      int alt1=2;
      int LA1_0=input.LA(1);
      if ((LA1_0 == AT_COND_QUE)) {
        alt1=1;
      }
switch (alt1) {
case 1:
{
          AT_COND_QUE4=(Token)match(input,AT_COND_QUE,FOLLOW_AT_COND_QUE_in_conditional760);
          AT_COND_QUE4_tree=(CommonTree)adaptor.create(AT_COND_QUE4);
          root_0=(CommonTree)adaptor.becomeRoot(AT_COND_QUE4_tree,root_0);
          pushFollow(FOLLOW_conditional_in_conditional763);
          conditional5=conditional();
          state._fsp--;
          adaptor.addChild(root_0,conditional5.getTree());
          AT_COLON6=(Token)match(input,AT_COLON,FOLLOW_AT_COLON_in_conditional765);
          pushFollow(FOLLOW_conditional_in_conditional768);
          conditional7=conditional();
          state._fsp--;
          adaptor.addChild(root_0,conditional7.getTree());
        }
      break;
  }
}
retval.stop=input.LT(-1);
retval.tree=(CommonTree)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
retval.tree=(CommonTree)adaptor.errorNode(input,retval.start,input.LT(-1),re);
}
 finally {
}
return retval;
}
