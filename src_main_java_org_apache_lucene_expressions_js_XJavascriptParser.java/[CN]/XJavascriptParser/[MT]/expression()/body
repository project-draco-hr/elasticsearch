{
  XJavascriptParser.expression_return retval=new XJavascriptParser.expression_return();
  retval.start=input.LT(1);
  CommonTree root_0=null;
  Token EOF2=null;
  ParserRuleReturnScope conditional1=null;
  CommonTree EOF2_tree=null;
  try {
{
      root_0=(CommonTree)adaptor.nil();
      pushFollow(FOLLOW_conditional_in_expression737);
      conditional1=conditional();
      state._fsp--;
      adaptor.addChild(root_0,conditional1.getTree());
      EOF2=(Token)match(input,EOF,FOLLOW_EOF_in_expression739);
    }
    retval.stop=input.LT(-1);
    retval.tree=(CommonTree)adaptor.rulePostProcessing(root_0);
    adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
    retval.tree=(CommonTree)adaptor.errorNode(input,retval.start,input.LT(-1),re);
  }
 finally {
  }
  return retval;
}
