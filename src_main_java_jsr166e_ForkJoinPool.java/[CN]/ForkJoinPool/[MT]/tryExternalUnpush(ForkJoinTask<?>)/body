{
  WorkQueue joiner;
  ForkJoinTask<?>[] a;
  int m, s;
  Submitter z=submitters.get();
  WorkQueue[] ws=workQueues;
  boolean popped=false;
  if (z != null && ws != null && (m=ws.length - 1) >= 0 && (joiner=ws[z.seed & m & SQMASK]) != null && joiner.base != (s=joiner.top) && (a=joiner.array) != null) {
    long j=(((a.length - 1) & (s - 1)) << ASHIFT) + ABASE;
    if (U.getObject(a,j) == task && U.compareAndSwapInt(joiner,QLOCK,0,1)) {
      if (joiner.top == s && joiner.array == a && U.compareAndSwapObject(a,j,task,null)) {
        joiner.top=s - 1;
        popped=true;
      }
      joiner.qlock=0;
    }
  }
  return popped;
}
