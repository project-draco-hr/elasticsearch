{
  int s=0;
  if (task != null && (s=task.status) >= 0 && joiner != null) {
    ForkJoinTask<?> prevJoin=joiner.currentJoin;
    joiner.currentJoin=task;
    do {
    }
 while (joiner.tryRemoveAndExec(task) && (s=task.status) >= 0);
    if (s >= 0 && (task instanceof CountedCompleter))     s=helpComplete(joiner,(CountedCompleter<?>)task);
    long cc=0;
    while (s >= 0 && (s=task.status) >= 0) {
      if ((s=tryHelpStealer(joiner,task)) == 0 && (s=task.status) >= 0) {
        if (!tryCompensate(cc))         cc=ctl;
 else {
          if (task.trySetSignal() && (s=task.status) >= 0) {
synchronized (task) {
              if (task.status >= 0) {
                try {
                  task.wait();
                }
 catch (                InterruptedException ie) {
                }
              }
 else               task.notifyAll();
            }
          }
          long c;
          do {
          }
 while (!U.compareAndSwapLong(this,CTL,c=ctl,((c & ~AC_MASK) | ((c & AC_MASK) + AC_UNIT))));
        }
      }
    }
    joiner.currentJoin=prevJoin;
  }
  return s;
}
