{
  serviceB.registerHandler("/version",new BaseTransportRequestHandler<Version1Request>(){
    @Override public Version1Request newInstance(){
      return new Version1Request();
    }
    @Override public void messageReceived(    Version1Request request,    TransportChannel channel) throws Exception {
      assertThat(request.value1,equalTo(1));
      assertThat(request.value2,equalTo(2));
      Version1Response response=new Version1Response();
      response.value1=1;
      response.value2=2;
      channel.sendResponse(response);
    }
    @Override public String executor(){
      return ThreadPool.Names.SAME;
    }
  }
);
  Version1Request version1Request=new Version1Request();
  version1Request.value1=1;
  version1Request.value2=2;
  Version1Response version1Response=serviceB.submitRequest(nodeB,"/version",version1Request,new BaseTransportResponseHandler<Version1Response>(){
    @Override public Version1Response newInstance(){
      return new Version1Response();
    }
    @Override public void handleResponse(    Version1Response response){
      assertThat(response.value1,equalTo(1));
      assertThat(response.value2,equalTo(2));
    }
    @Override public void handleException(    TransportException exp){
      exp.printStackTrace();
      fail();
    }
    @Override public String executor(){
      return ThreadPool.Names.SAME;
    }
  }
).txGet();
  assertThat(version1Response.value1,equalTo(1));
  assertThat(version1Response.value2,equalTo(2));
}
