{
  final double lat=randomLat();
  final double lon=randomLon();
  final MultiGeoPointValues values=wrap(new GeoPoint(lat,lon));
  final ScriptDocValues.GeoPoints script=new ScriptDocValues.GeoPoints(values);
  script.setNextDocId(0);
  final ScriptDocValues.GeoPoints emptyScript=new ScriptDocValues.GeoPoints(wrap());
  emptyScript.setNextDocId(0);
  final double otherLat=randomLat();
  final double otherLon=randomLon();
  assertEquals(GeoDistance.ARC.calculate(lat,lon,otherLat,otherLon,DistanceUnit.KILOMETERS),script.arcDistanceInKm(otherLat,otherLon),0.01);
  assertEquals(GeoDistance.ARC.calculate(lat,lon,otherLat,otherLon,DistanceUnit.KILOMETERS),script.arcDistanceInKmWithDefault(otherLat,otherLon,42),0.01);
  assertEquals(42,emptyScript.arcDistanceInKmWithDefault(otherLat,otherLon,42),0);
  assertEquals(GeoDistance.PLANE.calculate(lat,lon,otherLat,otherLon,DistanceUnit.KILOMETERS),script.distanceInKm(otherLat,otherLon),0.01);
  assertEquals(GeoDistance.PLANE.calculate(lat,lon,otherLat,otherLon,DistanceUnit.KILOMETERS),script.distanceInKmWithDefault(otherLat,otherLon,42),0.01);
  assertEquals(42,emptyScript.distanceInKmWithDefault(otherLat,otherLon,42),0);
}
