{
  try {
    postings=getPostings(convertToLuceneFlags(flags),reader);
    if (postings == null) {
      final DocIdSetIterator empty=DocIdSetIterator.empty();
      postings=new PostingsEnum(){
        @Override public int docID(){
          return empty.docID();
        }
        @Override public int nextDoc() throws IOException {
          return empty.nextDoc();
        }
        @Override public int advance(        int target) throws IOException {
          return empty.advance(target);
        }
        @Override public long cost(){
          return empty.cost();
        }
        @Override public int freq() throws IOException {
          return 1;
        }
        @Override public int nextPosition() throws IOException {
          return -1;
        }
        @Override public int startOffset() throws IOException {
          return -1;
        }
        @Override public int endOffset() throws IOException {
          return -1;
        }
        @Override public BytesRef getPayload() throws IOException {
          return null;
        }
      }
;
    }
  }
 catch (  IOException e) {
    throw new ElasticsearchException("Unable to get postings for field " + fieldName + " and term "+ term,e);
  }
}
