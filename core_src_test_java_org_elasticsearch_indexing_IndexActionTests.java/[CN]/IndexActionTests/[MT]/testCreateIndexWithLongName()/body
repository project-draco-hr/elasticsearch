{
  int min=MetaDataCreateIndexService.MAX_INDEX_NAME_BYTES + 1;
  int max=MetaDataCreateIndexService.MAX_INDEX_NAME_BYTES * 2;
  try {
    createIndex(randomAsciiOfLengthBetween(min,max).toLowerCase(Locale.ROOT));
    fail("exception should have been thrown on too-long index name");
  }
 catch (  InvalidIndexNameException e) {
    assertThat("exception contains message about index name too long: " + e.getMessage(),e.getMessage().contains("index name is too long,"),equalTo(true));
  }
  try {
    client().prepareIndex(randomAsciiOfLengthBetween(min,max).toLowerCase(Locale.ROOT),"mytype").setSource("foo","bar").get();
    fail("exception should have been thrown on too-long index name");
  }
 catch (  InvalidIndexNameException e) {
    assertThat("exception contains message about index name too long: " + e.getMessage(),e.getMessage().contains("index name is too long,"),equalTo(true));
  }
  try {
    client().prepareIndex(randomAsciiOfLength(MetaDataCreateIndexService.MAX_INDEX_NAME_BYTES - 1).toLowerCase(Locale.ROOT) + "??".toLowerCase(Locale.ROOT),"mytype").setSource("foo","bar").get();
    fail("exception should have been thrown on too-long index name");
  }
 catch (  InvalidIndexNameException e) {
    assertThat("exception contains message about index name too long: " + e.getMessage(),e.getMessage().contains("index name is too long,"),equalTo(true));
  }
  createIndex(randomAsciiOfLength(MetaDataCreateIndexService.MAX_INDEX_NAME_BYTES).toLowerCase(Locale.ROOT));
}
