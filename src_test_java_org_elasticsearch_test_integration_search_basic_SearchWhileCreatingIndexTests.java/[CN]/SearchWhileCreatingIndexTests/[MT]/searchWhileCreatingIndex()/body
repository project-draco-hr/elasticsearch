{
  Thread backgroundThread;
  final Throwable[] threadException=new Throwable[1];
  backgroundThread=new Thread(new Runnable(){
    @Override public void run(){
      try {
        for (int i=0; i < 20; i++) {
          logger.info("Running iteration {}",i);
          prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards",10));
          client().prepareIndex("test","type1","id:" + i).setSource("field","test").execute().actionGet();
          RefreshResponse refreshResponse=client().admin().indices().prepareRefresh("test").execute().actionGet();
          assertThat(refreshResponse.getSuccessfulShards(),greaterThanOrEqualTo(1));
          SearchResponse searchResponse=client().prepareSearch("test").setQuery(QueryBuilders.termQuery("field","test")).execute().actionGet();
          assertThat("found unexpected number of hits, shard_failures (we expected to potentially non active ones!):" + Arrays.toString(searchResponse.getShardFailures()) + " id: "+ i,searchResponse.getHits().totalHits(),equalTo(1l));
          wipeIndex("test");
        }
      }
 catch (      Throwable t) {
        threadException[0]=t;
      }
    }
  }
);
  backgroundThread.setDaemon(true);
  backgroundThread.start();
  backgroundThread.join(30 * 60 * 1000);
  if (threadException[0] != null) {
    throw threadException[0];
  }
  if (backgroundThread.isAlive()) {
    logger.error("Background thread hanged. Dumping cluster info");
    ClusterStateResponse clusterStateResponse=client().admin().cluster().prepareState().get();
    logger.info("ClusterState: {}",clusterStateResponse.getState());
    PendingClusterTasksResponse pendingTasks=client().admin().cluster().preparePendingClusterTasks().get();
    logger.info("Pending tasks:");
    for (    PendingClusterTask task : pendingTasks) {
      logger.info("Task: priority: {} source: {} Time in queue (ms): {}",task.getPriority(),task.getSource(),task.timeInQueueInMillis());
    }
    fail("Background thread didn't finish within 30 minutes");
  }
  logger.info("done");
}
