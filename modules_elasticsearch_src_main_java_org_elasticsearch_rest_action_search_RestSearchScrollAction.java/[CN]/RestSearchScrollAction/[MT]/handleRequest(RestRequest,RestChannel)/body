{
  SearchScrollRequest searchScrollRequest=new SearchScrollRequest(request.param("scrollId"));
  try {
    String scroll=request.param("scroll");
    if (scroll != null) {
      searchScrollRequest.scroll(new Scroll(parseTimeValue(scroll,null)));
    }
    searchScrollRequest.listenerThreaded(false);
    SearchOperationThreading operationThreading=SearchOperationThreading.fromString(request.param("operationThreading"),SearchOperationThreading.SINGLE_THREAD);
    if (operationThreading == SearchOperationThreading.NO_THREADS) {
      operationThreading=SearchOperationThreading.SINGLE_THREAD;
    }
    searchScrollRequest.operationThreading(operationThreading);
  }
 catch (  Exception e) {
    try {
      JsonBuilder builder=restJsonBuilder(request);
      channel.sendResponse(new JsonRestResponse(request,BAD_REQUEST,builder.startObject().field("error",e.getMessage()).endObject()));
    }
 catch (    IOException e1) {
      logger.error("Failed to send failure response",e1);
    }
    return;
  }
  client.searchScroll(searchScrollRequest,new ActionListener<SearchResponse>(){
    @Override public void onResponse(    SearchResponse response){
      try {
        JsonBuilder builder=restJsonBuilder(request);
        builder.startObject();
        response.toJson(builder,request);
        builder.endObject();
        channel.sendResponse(new JsonRestResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new JsonThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
