{
  Frequencies frequencies=computeNxys(subsetFreq,subsetSize,supersetFreq,supersetSize,"MutualInformation");
  double score=(getMITerm(frequencies.N00,frequencies.N0_,frequencies.N_0,frequencies.N) + getMITerm(frequencies.N01,frequencies.N0_,frequencies.N_1,frequencies.N) + getMITerm(frequencies.N10,frequencies.N1_,frequencies.N_0,frequencies.N)+ getMITerm(frequencies.N11,frequencies.N1_,frequencies.N_1,frequencies.N)) / log2;
  if (Double.isNaN(score)) {
    score=Double.NEGATIVE_INFINITY;
  }
  if (!includeNegatives && frequencies.N11 / frequencies.N_1 < frequencies.N10 / frequencies.N_0) {
    score=Double.NEGATIVE_INFINITY;
  }
  return score;
}
