{
  createIndex();
  logger.info("-> running Cluster Health");
  ClusterHealthResponse clusterHealth=client().admin().cluster().health(clusterHealthRequest().waitForGreenStatus()).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  BulkResponse bulkResponse=client().prepareBulk().add(client().prepareIndex().setIndex("test").setType("type1").setId("1").setSource(source("1","test"))).add(client().prepareIndex().setIndex("test").setType("type1").setId("2").setSource(source("2","test")).setCreate(true)).add(client().prepareIndex().setIndex("test").setType("type1").setSource(source("3","test"))).add(client().prepareDelete().setIndex("test").setType("type1").setId("1")).add(client().prepareIndex().setIndex("test").setType("type1").setSource("{ xxx }")).execute().actionGet();
  assertThat(bulkResponse.hasFailures(),equalTo(true));
  assertThat(bulkResponse.getItems().length,equalTo(5));
  assertThat(bulkResponse.getItems()[0].isFailed(),equalTo(false));
  assertThat(bulkResponse.getItems()[0].getOpType(),equalTo("index"));
  assertThat(bulkResponse.getItems()[0].getIndex(),equalTo(getConcreteIndexName()));
  assertThat(bulkResponse.getItems()[0].getType(),equalTo("type1"));
  assertThat(bulkResponse.getItems()[0].getId(),equalTo("1"));
  assertThat(bulkResponse.getItems()[1].isFailed(),equalTo(false));
  assertThat(bulkResponse.getItems()[1].getOpType(),equalTo("create"));
  assertThat(bulkResponse.getItems()[1].getIndex(),equalTo(getConcreteIndexName()));
  assertThat(bulkResponse.getItems()[1].getType(),equalTo("type1"));
  assertThat(bulkResponse.getItems()[1].getId(),equalTo("2"));
  assertThat(bulkResponse.getItems()[2].isFailed(),equalTo(false));
  assertThat(bulkResponse.getItems()[2].getOpType(),equalTo("create"));
  assertThat(bulkResponse.getItems()[2].getIndex(),equalTo(getConcreteIndexName()));
  assertThat(bulkResponse.getItems()[2].getType(),equalTo("type1"));
  String generatedId3=bulkResponse.getItems()[2].getId();
  assertThat(bulkResponse.getItems()[3].isFailed(),equalTo(false));
  assertThat(bulkResponse.getItems()[3].getOpType(),equalTo("delete"));
  assertThat(bulkResponse.getItems()[3].getIndex(),equalTo(getConcreteIndexName()));
  assertThat(bulkResponse.getItems()[3].getType(),equalTo("type1"));
  assertThat(bulkResponse.getItems()[3].getId(),equalTo("1"));
  assertThat(bulkResponse.getItems()[4].isFailed(),equalTo(true));
  assertThat(bulkResponse.getItems()[4].getOpType(),equalTo("create"));
  assertThat(bulkResponse.getItems()[4].getIndex(),equalTo(getConcreteIndexName()));
  assertThat(bulkResponse.getItems()[4].getType(),equalTo("type1"));
  RefreshResponse refreshResponse=client().admin().indices().prepareRefresh("test").execute().actionGet();
  assertThat(refreshResponse.getSuccessfulShards(),equalTo(10));
  assertThat(refreshResponse.getFailedShards(),equalTo(0));
  for (int i=0; i < 5; i++) {
    GetResponse getResult=client().get(getRequest("test").type("type1").id("1")).actionGet();
    assertThat(getResult.getIndex(),equalTo(getConcreteIndexName()));
    assertThat("cycle #" + i,getResult.isExists(),equalTo(false));
    getResult=client().get(getRequest("test").type("type1").id("2")).actionGet();
    assertThat("cycle #" + i,getResult.getSourceAsString(),equalTo(source("2","test").string()));
    assertThat(getResult.getIndex(),equalTo(getConcreteIndexName()));
    getResult=client().get(getRequest("test").type("type1").id(generatedId3)).actionGet();
    assertThat("cycle #" + i,getResult.getSourceAsString(),equalTo(source("3","test").string()));
    assertThat(getResult.getIndex(),equalTo(getConcreteIndexName()));
  }
}
