{
  if (currentFieldName == null) {
    throw new MapperParsingException("object mapping [" + name + "] trying to serialize an object with no field associated with it, current value ["+ context.parser().textOrNull()+ "]");
  }
  context.path().add(currentFieldName);
  Mapper objectMapper=mappers.get(currentFieldName);
  if (objectMapper != null) {
    objectMapper.parse(context);
  }
 else {
    Dynamic dynamic=this.dynamic;
    if (dynamic == null) {
      dynamic=context.root().dynamic();
    }
    if (dynamic == Dynamic.STRICT) {
      throw new StrictDynamicMappingException(fullPath,currentFieldName);
    }
 else     if (dynamic == Dynamic.TRUE) {
      boolean newMapper=false;
synchronized (mutex) {
        objectMapper=mappers.get(currentFieldName);
        if (objectMapper == null) {
          newMapper=true;
          context.path().remove();
          Mapper.Builder builder=context.root().findTemplateBuilder(context,currentFieldName,"object");
          if (builder == null) {
            builder=MapperBuilders.object(currentFieldName).enabled(true).dynamic(dynamic).pathType(pathType);
          }
          BuilderContext builderContext=new BuilderContext(context.indexSettings(),context.path());
          objectMapper=builder.build(builderContext);
          putMapper(objectMapper);
          context.path().add(currentFieldName);
          context.setMappingsModified();
        }
      }
      if (newMapper) {
        FieldMapperListener.Aggregator fieldMappersAgg=new FieldMapperListener.Aggregator();
        objectMapper.traverse(fieldMappersAgg);
        context.docMapper().addFieldMappers(fieldMappersAgg.fieldMappers);
        ObjectMapperListener.Aggregator objectMappersAgg=new ObjectMapperListener.Aggregator();
        objectMapper.traverse(objectMappersAgg);
        context.docMapper().addObjectMappers(objectMappersAgg.objectMappers);
      }
      objectMapper.parse(context);
    }
 else {
      context.parser().skipChildren();
    }
  }
  context.path().remove();
}
