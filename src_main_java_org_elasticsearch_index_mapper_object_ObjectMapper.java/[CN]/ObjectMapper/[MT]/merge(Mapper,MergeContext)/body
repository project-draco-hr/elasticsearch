{
  if (!(mergeWith instanceof ObjectMapper)) {
    mergeContext.addConflict("Can't merge a non object mapping [" + mergeWith.name() + "] with an object mapping ["+ name()+ "]");
    return;
  }
  ObjectMapper mergeWithObject=(ObjectMapper)mergeWith;
  if (nested().isNested()) {
    if (!mergeWithObject.nested().isNested()) {
      mergeContext.addConflict("object mapping [" + name() + "] can't be changed from nested to non-nested");
      return;
    }
  }
 else {
    if (mergeWithObject.nested().isNested()) {
      mergeContext.addConflict("object mapping [" + name() + "] can't be changed from non-nested to nested");
      return;
    }
  }
  if (!mergeContext.mergeFlags().simulate()) {
    if (mergeWithObject.dynamic != null) {
      this.dynamic=mergeWithObject.dynamic;
    }
  }
  doMerge(mergeWithObject,mergeContext);
  List<Mapper> mappersToPut=new ArrayList<Mapper>();
  FieldMapperListener.Aggregator newFieldMappers=new FieldMapperListener.Aggregator();
  ObjectMapperListener.Aggregator newObjectMappers=new ObjectMapperListener.Aggregator();
synchronized (mutex) {
    for (    Mapper mergeWithMapper : mergeWithObject.mappers.values()) {
      Mapper mergeIntoMapper=mappers.get(mergeWithMapper.name());
      if (mergeIntoMapper == null) {
        if (!mergeContext.mergeFlags().simulate()) {
          mappersToPut.add(mergeWithMapper);
          mergeWithMapper.traverse(newFieldMappers);
          mergeWithMapper.traverse(newObjectMappers);
        }
      }
 else {
        if ((mergeWithMapper instanceof MultiFieldMapper) && !(mergeIntoMapper instanceof MultiFieldMapper)) {
          MultiFieldMapper mergeWithMultiField=(MultiFieldMapper)mergeWithMapper;
          mergeWithMultiField.merge(mergeIntoMapper,mergeContext);
          if (!mergeContext.mergeFlags().simulate()) {
            mappersToPut.add(mergeWithMultiField);
            for (            Mapper mapper : mergeWithMultiField.mappers().values()) {
              mapper.traverse(newFieldMappers);
              mapper.traverse(newObjectMappers);
            }
          }
        }
 else {
          mergeIntoMapper.merge(mergeWithMapper,mergeContext);
        }
      }
    }
    if (!newFieldMappers.mappers.isEmpty()) {
      mergeContext.docMapper().addFieldMappers(newFieldMappers.mappers);
    }
    if (!newObjectMappers.mappers.isEmpty()) {
      mergeContext.docMapper().addObjectMappers(newObjectMappers.mappers);
    }
    for (    Mapper mapper : mappersToPut) {
      putMapper(mapper);
    }
  }
}
