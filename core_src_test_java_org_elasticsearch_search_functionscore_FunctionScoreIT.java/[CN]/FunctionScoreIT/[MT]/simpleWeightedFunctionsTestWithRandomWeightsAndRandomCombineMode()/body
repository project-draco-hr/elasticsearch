{
  assertAcked(prepareCreate(INDEX).addMapping(TYPE,MAPPING_WITH_DOUBLE_AND_GEO_POINT_AND_TEXT_FIELD));
  ensureYellow();
  XContentBuilder doc=SIMPLE_DOC;
  index(INDEX,TYPE,"1",doc);
  refresh();
  ScoreFunctionBuilder[] scoreFunctionBuilders=getScoreFunctionBuilders();
  float[] weights=createRandomWeights(scoreFunctionBuilders.length);
  float[] scores=getScores(scoreFunctionBuilders);
  int weightscounter=0;
  FunctionScoreQueryBuilder.FilterFunctionBuilder[] filterFunctionBuilders=new FunctionScoreQueryBuilder.FilterFunctionBuilder[scoreFunctionBuilders.length];
  for (  ScoreFunctionBuilder builder : scoreFunctionBuilders) {
    filterFunctionBuilders[weightscounter]=new FunctionScoreQueryBuilder.FilterFunctionBuilder(builder.setWeight(weights[weightscounter]));
    weightscounter++;
  }
  FiltersFunctionScoreQuery.ScoreMode scoreMode=randomFrom(FiltersFunctionScoreQuery.ScoreMode.AVG,FiltersFunctionScoreQuery.ScoreMode.SUM,FiltersFunctionScoreQuery.ScoreMode.MIN,FiltersFunctionScoreQuery.ScoreMode.MAX,FiltersFunctionScoreQuery.ScoreMode.MULTIPLY);
  FunctionScoreQueryBuilder withWeights=functionScoreQuery(constantScoreQuery(termQuery(TEXT_FIELD,"value")),filterFunctionBuilders).scoreMode(scoreMode);
  SearchResponse responseWithWeights=client().search(searchRequest().source(searchSource().query(withWeights))).actionGet();
  double expectedScore=computeExpectedScore(weights,scores,scoreMode);
  assertThat((float)expectedScore / responseWithWeights.getHits().getAt(0).getScore(),is(1.0f));
}
