{
  assertAcked(prepareCreate("test").addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("test").field("type","string").endObject().startObject("num").field("type","float").endObject().endObject().endObject().endObject()));
  ensureYellow();
  client().prepareIndex().setType("type1").setId("1").setIndex("test").setSource(jsonBuilder().startObject().field("test","value").field("num",10).endObject()).get();
  refresh();
  SearchResponse response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().explain(true).query(functionScoreQuery(termQuery("test","value")).add(gaussDecayFunction("num",5,5)).add(exponentialDecayFunction("num",5,5)).add(linearDecayFunction("num",5,5))))).get();
  String explanation=response.getHits().getAt(0).explanation().toString();
  checkQueryExplanationAppearsOnlyOnce(explanation);
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().explain(true).query(functionScoreQuery(termQuery("test","value")).add(fieldValueFactorFunction("num"))))).get();
  explanation=response.getHits().getAt(0).explanation().toString();
  checkQueryExplanationAppearsOnlyOnce(explanation);
  response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().explain(true).query(functionScoreQuery(termQuery("test","value")).add(randomFunction(10))))).get();
  explanation=response.getHits().getAt(0).explanation().toString();
  checkQueryExplanationAppearsOnlyOnce(explanation);
}
