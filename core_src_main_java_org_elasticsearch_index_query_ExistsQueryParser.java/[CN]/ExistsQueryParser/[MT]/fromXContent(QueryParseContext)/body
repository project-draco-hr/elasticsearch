{
  XContentParser parser=parseContext.parser();
  String fieldPattern=null;
  String queryName=null;
  float boost=AbstractQueryBuilder.DEFAULT_BOOST;
  XContentParser.Token token;
  String currentFieldName=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token.isValue()) {
      if ("field".equals(currentFieldName)) {
        fieldPattern=parser.text();
      }
 else       if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else       if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"[" + ExistsQueryBuilder.NAME + "] query does not support ["+ currentFieldName+ "]");
      }
    }
 else {
      throw new ParsingException(parser.getTokenLocation(),"[" + ExistsQueryBuilder.NAME + "] unknown token ["+ token+ "] after ["+ currentFieldName+ "]");
    }
  }
  if (fieldPattern == null) {
    throw new ParsingException(parser.getTokenLocation(),"[" + ExistsQueryBuilder.NAME + "] must be provided with a [field]");
  }
  ExistsQueryBuilder builder=new ExistsQueryBuilder(fieldPattern);
  builder.queryName(queryName);
  builder.boost(boost);
  return builder;
}
