{
  String index1="test1";
  String index2="test2";
  internalCluster().ensureAtLeastNumDataNodes(2);
  assertAcked(prepareCreate(index1).setSettings(Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,"2")));
  assertAcked(prepareCreate(index2).setSettings(Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,"2")));
  indexRandomData(index1);
  indexRandomData(index2);
  ensureGreen();
  IndicesShardStoresResponse response=client().admin().indices().shardStores(Requests.indicesShardStoresRequest().shardStatuses("all")).get();
  ImmutableOpenMap<String,ImmutableOpenIntMap<List<IndicesShardStoresResponse.StoreStatus>>> shardStatuses=response.getStoreStatuses();
  assertThat(shardStatuses.containsKey(index1),equalTo(true));
  assertThat(shardStatuses.containsKey(index2),equalTo(true));
  assertThat(shardStatuses.get(index1).size(),equalTo(2));
  assertThat(shardStatuses.get(index2).size(),equalTo(2));
  response=client().admin().indices().shardStores(Requests.indicesShardStoresRequest(index1).shardStatuses("all")).get();
  shardStatuses=response.getStoreStatuses();
  assertThat(shardStatuses.containsKey(index1),equalTo(true));
  assertThat(shardStatuses.containsKey(index2),equalTo(false));
  assertThat(shardStatuses.get(index1).size(),equalTo(2));
}
