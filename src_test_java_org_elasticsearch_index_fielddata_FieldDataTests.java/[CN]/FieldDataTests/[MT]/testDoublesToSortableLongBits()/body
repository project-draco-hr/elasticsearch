{
  final double value=randomDouble();
  final long valueBits=NumericUtils.doubleToSortableLong(value);
  NumericDoubleValues values=new NumericDoubleValues(){
    @Override public double get(    int docID){
      return value;
    }
  }
;
  SortedNumericDocValues asMultiLongs=FieldData.toSortableLongBits(FieldData.singleton(values,null));
  NumericDocValues asLongs=DocValues.unwrapSingleton(asMultiLongs);
  assertNotNull(asLongs);
  assertEquals(valueBits,asLongs.get(0));
  SortedNumericDoubleValues multiValues=new SortedNumericDoubleValues(){
    @Override public double valueAt(    int index){
      return value;
    }
    @Override public void setDocument(    int doc){
    }
    @Override public int count(){
      return 1;
    }
  }
;
  asMultiLongs=FieldData.toSortableLongBits(multiValues);
  assertEquals(valueBits,asMultiLongs.valueAt(0));
  assertSame(multiValues,FieldData.sortableLongBitsToDoubles(asMultiLongs));
}
