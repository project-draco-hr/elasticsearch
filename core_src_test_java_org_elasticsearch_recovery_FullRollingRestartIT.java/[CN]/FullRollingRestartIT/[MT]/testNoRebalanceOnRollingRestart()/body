{
  internalCluster().startMasterOnlyNode(Settings.EMPTY);
  internalCluster().startDataOnlyNodesAsync(3).get();
  prepareCreate("test").setSettings(Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,"6").put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,"0").put(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING.getKey(),TimeValue.timeValueMinutes(1))).get();
  for (int i=0; i < 100; i++) {
    client().prepareIndex("test","type1",Long.toString(i)).setSource(MapBuilder.<String,Object>newMapBuilder().put("test","value" + i).map()).execute().actionGet();
  }
  ensureGreen();
  ClusterState state=client().admin().cluster().prepareState().get().getState();
  RecoveryResponse recoveryResponse=client().admin().indices().prepareRecoveries("test").get();
  for (  RecoveryState recoveryState : recoveryResponse.shardRecoveryStates().get("test")) {
    assertTrue("relocated from: " + recoveryState.getSourceNode() + " to: "+ recoveryState.getTargetNode()+ "\n"+ state.prettyPrint(),recoveryState.getType() != RecoveryState.Type.PRIMARY_RELOCATION);
  }
  internalCluster().restartRandomDataNode();
  ensureGreen();
  ClusterState afterState=client().admin().cluster().prepareState().get().getState();
  recoveryResponse=client().admin().indices().prepareRecoveries("test").get();
  for (  RecoveryState recoveryState : recoveryResponse.shardRecoveryStates().get("test")) {
    assertTrue("relocated from: " + recoveryState.getSourceNode() + " to: "+ recoveryState.getTargetNode()+ "-- \nbefore: \n"+ state.prettyPrint()+ "\nafter: \n"+ afterState.prettyPrint(),recoveryState.getType() != RecoveryState.Type.PRIMARY_RELOCATION);
  }
}
