{
  if (!(mergeWith instanceof ObjectMapper)) {
    mergeContext.addConflict("Can't merge a non object mapping [" + mergeWith.name() + "] with an object mapping ["+ name()+ "]");
    return;
  }
  ObjectMapper mergeWithObject=(ObjectMapper)mergeWith;
  doMerge(mergeWithObject,mergeContext);
synchronized (mutex) {
    for (    XContentMapper mergeWithMapper : mergeWithObject.mappers.values()) {
      XContentMapper mergeIntoMapper=mappers.get(mergeWithMapper.name());
      if (mergeIntoMapper == null) {
        if (!mergeContext.mergeFlags().simulate()) {
          putMapper(mergeWithMapper);
          if (mergeWithMapper instanceof AbstractFieldMapper) {
            mergeContext.docMapper().addFieldMapper((FieldMapper)mergeWithMapper);
          }
        }
      }
 else {
        if ((mergeWithMapper instanceof MultiFieldMapper) && !(mergeIntoMapper instanceof MultiFieldMapper)) {
          MultiFieldMapper mergeWithMultiField=(MultiFieldMapper)mergeWithMapper;
          mergeWithMultiField.merge(mergeIntoMapper,mergeContext);
          if (!mergeContext.mergeFlags().simulate()) {
            putMapper(mergeWithMultiField);
            for (            XContentMapper mapper : mergeWithMultiField.mappers().values()) {
              if (mapper instanceof AbstractFieldMapper) {
                mergeContext.docMapper().addFieldMapper((FieldMapper)mapper);
              }
            }
          }
        }
 else {
          mergeIntoMapper.merge(mergeWithMapper,mergeContext);
        }
      }
    }
  }
}
