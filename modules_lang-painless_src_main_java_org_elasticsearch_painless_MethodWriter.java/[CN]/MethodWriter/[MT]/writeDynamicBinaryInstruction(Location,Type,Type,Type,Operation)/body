{
  org.objectweb.asm.Type descriptor=org.objectweb.asm.Type.getMethodType(returnType.type,lhs.type,rhs.type);
switch (operation) {
case MUL:
    invokeDynamic("mul",descriptor.getDescriptor(),DEF_BOOTSTRAP_HANDLE,DefBootstrap.BINARY_OPERATOR);
  break;
case DIV:
invokeDynamic("div",descriptor.getDescriptor(),DEF_BOOTSTRAP_HANDLE,DefBootstrap.BINARY_OPERATOR);
break;
case REM:
invokeDynamic("rem",descriptor.getDescriptor(),DEF_BOOTSTRAP_HANDLE,DefBootstrap.BINARY_OPERATOR);
break;
case ADD:
invokeDynamic("add",descriptor.getDescriptor(),DEF_BOOTSTRAP_HANDLE,DefBootstrap.BINARY_OPERATOR);
break;
case SUB:
invokeDynamic("sub",descriptor.getDescriptor(),DEF_BOOTSTRAP_HANDLE,DefBootstrap.BINARY_OPERATOR);
break;
case LSH:
invokeDynamic("lsh",descriptor.getDescriptor(),DEF_BOOTSTRAP_HANDLE,DefBootstrap.SHIFT_OPERATOR);
break;
case USH:
invokeDynamic("ush",descriptor.getDescriptor(),DEF_BOOTSTRAP_HANDLE,DefBootstrap.SHIFT_OPERATOR);
break;
case RSH:
invokeDynamic("rsh",descriptor.getDescriptor(),DEF_BOOTSTRAP_HANDLE,DefBootstrap.SHIFT_OPERATOR);
break;
case BWAND:
invokeDynamic("and",descriptor.getDescriptor(),DEF_BOOTSTRAP_HANDLE,DefBootstrap.BINARY_OPERATOR);
break;
case XOR:
invokeDynamic("xor",descriptor.getDescriptor(),DEF_BOOTSTRAP_HANDLE,DefBootstrap.BINARY_OPERATOR);
break;
case BWOR:
invokeDynamic("or",descriptor.getDescriptor(),DEF_BOOTSTRAP_HANDLE,DefBootstrap.BINARY_OPERATOR);
break;
default :
throw location.createError(new IllegalStateException("Illegal tree structure."));
}
}
