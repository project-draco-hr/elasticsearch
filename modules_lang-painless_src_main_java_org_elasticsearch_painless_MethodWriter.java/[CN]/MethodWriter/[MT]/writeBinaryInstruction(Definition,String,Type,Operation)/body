{
  final Sort sort=type.sort;
  if ((sort == Sort.FLOAT || sort == Sort.DOUBLE) && (operation == Operation.LSH || operation == Operation.USH || operation == Operation.RSH || operation == Operation.BWAND || operation == Operation.XOR || operation == Operation.BWOR)) {
    throw new IllegalStateException("Error " + location + ": Illegal tree structure.");
  }
  if (sort == Sort.DEF) {
switch (operation) {
case MUL:
      invokeStatic(definition.getType("Def").type,DEF_MUL_CALL);
    break;
case DIV:
  invokeStatic(definition.getType("Def").type,DEF_DIV_CALL);
break;
case REM:
invokeStatic(definition.getType("Def").type,DEF_REM_CALL);
break;
case ADD:
invokeStatic(definition.getType("Def").type,DEF_ADD_CALL);
break;
case SUB:
invokeStatic(definition.getType("Def").type,DEF_SUB_CALL);
break;
case LSH:
invokeStatic(definition.getType("Def").type,DEF_LSH_CALL);
break;
case USH:
invokeStatic(definition.getType("Def").type,DEF_RSH_CALL);
break;
case RSH:
invokeStatic(definition.getType("Def").type,DEF_USH_CALL);
break;
case BWAND:
invokeStatic(definition.getType("Def").type,DEF_AND_CALL);
break;
case XOR:
invokeStatic(definition.getType("Def").type,DEF_XOR_CALL);
break;
case BWOR:
invokeStatic(definition.getType("Def").type,DEF_OR_CALL);
break;
default :
throw new IllegalStateException("Error " + location + ": Illegal tree structure.");
}
}
 else {
switch (operation) {
case MUL:
math(GeneratorAdapter.MUL,type.type);
break;
case DIV:
math(GeneratorAdapter.DIV,type.type);
break;
case REM:
math(GeneratorAdapter.REM,type.type);
break;
case ADD:
math(GeneratorAdapter.ADD,type.type);
break;
case SUB:
math(GeneratorAdapter.SUB,type.type);
break;
case LSH:
math(GeneratorAdapter.SHL,type.type);
break;
case USH:
math(GeneratorAdapter.USHR,type.type);
break;
case RSH:
math(GeneratorAdapter.SHR,type.type);
break;
case BWAND:
math(GeneratorAdapter.AND,type.type);
break;
case XOR:
math(GeneratorAdapter.XOR,type.type);
break;
case BWOR:
math(GeneratorAdapter.OR,type.type);
break;
default :
throw new IllegalStateException("Error " + location + ": Illegal tree structure.");
}
}
}
