{
  TObjectIntHashMap<String> aggregated=aggregateCache.get().get();
  aggregated.clear();
  for (  Facet facet : facets) {
    if (!facet.name().equals(name)) {
      continue;
    }
    TermsFacet mFacet=(TermsFacet)facet;
    for (    Entry entry : mFacet) {
      aggregated.adjustOrPutValue(entry.term(),entry.count(),entry.count());
    }
  }
  BoundedTreeSet<Entry> ordered=new BoundedTreeSet<Entry>(comparatorType.comparator(),requiredSize);
  for (TObjectIntIterator<String> it=aggregated.iterator(); it.hasNext(); ) {
    it.advance();
    ordered.add(new Entry(it.key(),it.value()));
  }
  return new InternalTermsFacet(name,fieldName,comparatorType,requiredSize,ordered);
}
