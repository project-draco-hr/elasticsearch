{
  int successfulShards=0;
  int failedShards=0;
  boolean exists=false;
  List<ShardOperationFailedException> shardFailures=null;
  for (int i=shardsResponses.length() - 1; i >= 0; i--) {
    Object shardResponse=shardsResponses.get(i);
    if (shardResponse == null) {
    }
 else     if (shardResponse instanceof BroadcastShardOperationFailedException) {
      failedShards++;
      if (shardFailures == null) {
        shardFailures=new ArrayList<>();
      }
      shardFailures.add(new DefaultShardOperationFailedException((BroadcastShardOperationFailedException)shardResponse));
    }
 else {
      successfulShards++;
      if ((exists=((ShardExistsResponse)shardResponse).exists())) {
        successfulShards=shardsResponses.length() - failedShards;
        break;
      }
    }
  }
  return new ExistsResponse(exists,shardsResponses.length(),successfulShards,failedShards,shardFailures);
}
