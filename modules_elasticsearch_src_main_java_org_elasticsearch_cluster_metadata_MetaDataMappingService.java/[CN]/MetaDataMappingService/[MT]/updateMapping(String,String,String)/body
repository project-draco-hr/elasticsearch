{
  clusterService.submitStateUpdateTask("update-mapping [" + index + "]["+ type+ "]",new ClusterStateUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState){
      MapperService mapperService=indicesService.indexServiceSafe(index).mapperService();
      DocumentMapper existingMapper=mapperService.documentMapper(type);
      DocumentMapper updatedMapper=mapperService.parse(type,mappingSource);
      if (existingMapper == null) {
        existingMapper=updatedMapper;
      }
 else {
        existingMapper.merge(updatedMapper,mergeFlags().simulate(false));
      }
      if (logger.isDebugEnabled()) {
        try {
          logger.debug("[{}] update_mapping [{}] (dynamic) with source [{}]",index,type,existingMapper.mappingSource().string());
        }
 catch (        IOException e) {
        }
      }
 else       if (logger.isInfoEnabled()) {
        logger.info("[{}] update_mapping [{}] (dynamic)",index,type);
      }
      MetaData.Builder builder=newMetaDataBuilder().metaData(currentState.metaData());
      IndexMetaData indexMetaData=currentState.metaData().index(index);
      builder.put(newIndexMetaDataBuilder(indexMetaData).putMapping(type,existingMapper.mappingSource()));
      return newClusterStateBuilder().state(currentState).metaData(builder).build();
    }
  }
);
}
