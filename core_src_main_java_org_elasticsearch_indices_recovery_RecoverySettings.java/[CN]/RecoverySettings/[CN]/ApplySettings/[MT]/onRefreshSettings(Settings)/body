{
  ByteSizeValue maxSizePerSec=settings.getAsBytesSize(INDICES_RECOVERY_MAX_BYTES_PER_SEC,RecoverySettings.this.maxBytesPerSec);
  if (!Objects.equals(maxSizePerSec,RecoverySettings.this.maxBytesPerSec)) {
    logger.info("updating [{}] from [{}] to [{}]",INDICES_RECOVERY_MAX_BYTES_PER_SEC,RecoverySettings.this.maxBytesPerSec,maxSizePerSec);
    RecoverySettings.this.maxBytesPerSec=maxSizePerSec;
    if (maxSizePerSec.bytes() <= 0) {
      rateLimiter=null;
    }
 else     if (rateLimiter != null) {
      rateLimiter.setMBPerSec(maxSizePerSec.mbFrac());
    }
 else {
      rateLimiter=new SimpleRateLimiter(maxSizePerSec.mbFrac());
    }
  }
  int concurrentStreams=settings.getAsInt(INDICES_RECOVERY_CONCURRENT_STREAMS,RecoverySettings.this.concurrentStreams);
  if (concurrentStreams != RecoverySettings.this.concurrentStreams) {
    logger.info("updating [indices.recovery.concurrent_streams] from [{}] to [{}]",RecoverySettings.this.concurrentStreams,concurrentStreams);
    RecoverySettings.this.concurrentStreams=concurrentStreams;
    RecoverySettings.this.concurrentStreamPool.setMaximumPoolSize(concurrentStreams);
  }
  int concurrentSmallFileStreams=settings.getAsInt(INDICES_RECOVERY_CONCURRENT_SMALL_FILE_STREAMS,RecoverySettings.this.concurrentSmallFileStreams);
  if (concurrentSmallFileStreams != RecoverySettings.this.concurrentSmallFileStreams) {
    logger.info("updating [indices.recovery.concurrent_small_file_streams] from [{}] to [{}]",RecoverySettings.this.concurrentSmallFileStreams,concurrentSmallFileStreams);
    RecoverySettings.this.concurrentSmallFileStreams=concurrentSmallFileStreams;
    RecoverySettings.this.concurrentSmallFileStreamPool.setMaximumPoolSize(concurrentSmallFileStreams);
  }
  RecoverySettings.this.retryDelayNetwork=maybeUpdate(RecoverySettings.this.retryDelayNetwork,settings,INDICES_RECOVERY_RETRY_DELAY_NETWORK);
  RecoverySettings.this.retryDelayStateSync=maybeUpdate(RecoverySettings.this.retryDelayStateSync,settings,INDICES_RECOVERY_RETRY_DELAY_STATE_SYNC);
  RecoverySettings.this.activityTimeout=maybeUpdate(RecoverySettings.this.activityTimeout,settings,INDICES_RECOVERY_ACTIVITY_TIMEOUT);
  RecoverySettings.this.internalActionTimeout=maybeUpdate(RecoverySettings.this.internalActionTimeout,settings,INDICES_RECOVERY_INTERNAL_ACTION_TIMEOUT);
  RecoverySettings.this.internalActionLongTimeout=maybeUpdate(RecoverySettings.this.internalActionLongTimeout,settings,INDICES_RECOVERY_INTERNAL_LONG_ACTION_TIMEOUT);
}
