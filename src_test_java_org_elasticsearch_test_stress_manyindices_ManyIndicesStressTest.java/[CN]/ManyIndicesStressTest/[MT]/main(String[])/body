{
  System.setProperty("es.logger.prefix","");
  int numberOfIndices=100;
  int numberOfDocs=100;
  Settings settings=ImmutableSettings.settingsBuilder().put("index.shard.check_on_startup",false).put("gateway.type","fs").put("index.number_of_shards",1).build();
  Node node=NodeBuilder.nodeBuilder().settings(settings).node();
  for (int i=0; i < numberOfIndices; i++) {
    logger.info("START index [{}] ...",i);
    node.client().admin().indices().prepareCreate("index_" + i).execute().actionGet();
    for (int j=0; j < numberOfDocs; j++) {
      node.client().prepareIndex("index_" + i,"type").setSource("field1","test","field2",2,"field3",new Date()).execute().actionGet();
    }
    logger.info("DONE  index [{}] ...",i);
  }
  node.client().admin().indices().prepareGatewaySnapshot().execute().actionGet();
  logger.info("closing node...");
  node.close();
  logger.info("node closed");
  logger.info("starting node...");
  node=NodeBuilder.nodeBuilder().settings(settings).node();
  ClusterHealthResponse health=node.client().admin().cluster().prepareHealth().setTimeout("5m").setWaitForYellowStatus().execute().actionGet();
  logger.info("health: " + health.status());
  logger.info("active shards: " + health.activeShards());
  logger.info("active primary shards: " + health.activePrimaryShards());
  if (health.timedOut()) {
    logger.error("Timed out on health...");
  }
  ClusterState clusterState=node.client().admin().cluster().prepareState().execute().actionGet().state();
  for (int i=0; i < numberOfIndices; i++) {
    if (clusterState.blocks().indices().containsKey("index_" + i)) {
      logger.error("index [{}] has blocks: {}",i,clusterState.blocks().indices().get("index_" + i));
    }
  }
  for (int i=0; i < numberOfIndices; i++) {
    long count=node.client().prepareCount("index_" + i).setQuery(matchAllQuery()).execute().actionGet().count();
    if (count == numberOfDocs) {
      logger.info("VERIFIED [{}], count [{}]",i,count);
    }
 else {
      logger.error("FAILED [{}], expected [{}], got [{}]",i,numberOfDocs,count);
    }
  }
  logger.info("closing node...");
  node.close();
  logger.info("node closed");
}
