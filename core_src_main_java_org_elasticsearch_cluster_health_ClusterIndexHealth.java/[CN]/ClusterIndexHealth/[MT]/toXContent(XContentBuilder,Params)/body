{
  builder.field(STATUS,getStatus().name().toLowerCase(Locale.ROOT));
  builder.field(NUMBER_OF_SHARDS,getNumberOfShards());
  builder.field(NUMBER_OF_REPLICAS,getNumberOfReplicas());
  builder.field(ACTIVE_PRIMARY_SHARDS,getActivePrimaryShards());
  builder.field(ACTIVE_SHARDS,getActiveShards());
  builder.field(RELOCATING_SHARDS,getRelocatingShards());
  builder.field(INITIALIZING_SHARDS,getInitializingShards());
  builder.field(UNASSIGNED_SHARDS,getUnassignedShards());
  if ("shards".equals(params.param("level","indices"))) {
    builder.startObject(SHARDS);
    for (    ClusterShardHealth shardHealth : shards.values()) {
      builder.startObject(Integer.toString(shardHealth.getId()));
      builder.field(STATUS,shardHealth.getStatus().name().toLowerCase(Locale.ROOT));
      builder.field(PRIMARY_ACTIVE,shardHealth.isPrimaryActive());
      builder.field(ACTIVE_SHARDS,shardHealth.getActiveShards());
      builder.field(RELOCATING_SHARDS,shardHealth.getRelocatingShards());
      builder.field(INITIALIZING_SHARDS,shardHealth.getInitializingShards());
      builder.field(UNASSIGNED_SHARDS,shardHealth.getUnassignedShards());
      builder.endObject();
    }
    builder.endObject();
  }
  return builder;
}
