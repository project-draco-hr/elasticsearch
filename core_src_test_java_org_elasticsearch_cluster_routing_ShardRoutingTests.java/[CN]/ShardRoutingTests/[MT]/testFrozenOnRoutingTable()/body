{
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(1)).build();
  RoutingTable routingTable=RoutingTable.builder().addAsNew(metaData.index("test")).build();
  ClusterState clusterState=ClusterState.builder(org.elasticsearch.cluster.ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).build();
  for (  ShardRouting routing : clusterState.routingTable().allShards()) {
    assertTrue(routing.isFrozen());
    try {
      routing.moveToPrimary();
      fail("must be frozen");
    }
 catch (    IllegalStateException ex) {
    }
    try {
      routing.moveToStarted();
      fail("must be frozen");
    }
 catch (    IllegalStateException ex) {
    }
    try {
      routing.moveFromPrimary();
      fail("must be frozen");
    }
 catch (    IllegalStateException ex) {
    }
    try {
      routing.initialize("boom",null,-1);
      fail("must be frozen");
    }
 catch (    IllegalStateException ex) {
    }
    try {
      routing.cancelRelocation();
      fail("must be frozen");
    }
 catch (    IllegalStateException ex) {
    }
    try {
      routing.moveToUnassigned(new UnassignedInfo(UnassignedInfo.Reason.REPLICA_ADDED,"foobar"));
      fail("must be frozen");
    }
 catch (    IllegalStateException ex) {
    }
    try {
      routing.relocate("foobar",-1);
      fail("must be frozen");
    }
 catch (    IllegalStateException ex) {
    }
    try {
      routing.reinitializeShard();
      fail("must be frozen");
    }
 catch (    IllegalStateException ex) {
    }
  }
}
