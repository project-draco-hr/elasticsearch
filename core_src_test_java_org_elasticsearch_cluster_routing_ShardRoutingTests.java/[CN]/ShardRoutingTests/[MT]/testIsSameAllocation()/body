{
  ShardRouting unassignedShard0=TestShardRouting.newShardRouting("test",0,null,false,ShardRoutingState.UNASSIGNED,1);
  ShardRouting unassignedShard1=TestShardRouting.newShardRouting("test",1,null,false,ShardRoutingState.UNASSIGNED,1);
  ShardRouting initializingShard0=TestShardRouting.newShardRouting("test",0,"1",randomBoolean(),ShardRoutingState.INITIALIZING,1);
  ShardRouting initializingShard1=TestShardRouting.newShardRouting("test",1,"1",randomBoolean(),ShardRoutingState.INITIALIZING,1);
  ShardRouting startedShard0=new ShardRouting(initializingShard0);
  startedShard0.moveToStarted();
  ShardRouting startedShard1=new ShardRouting(initializingShard1);
  startedShard1.moveToStarted();
  assertTrue(initializingShard0.isSameAllocation(initializingShard0));
  assertTrue(initializingShard0.isSameAllocation(startedShard0));
  assertFalse(unassignedShard0.isSameAllocation(unassignedShard0));
  assertFalse(unassignedShard0.isSameAllocation(unassignedShard1));
  assertFalse(unassignedShard0.isSameAllocation(initializingShard0));
  assertFalse(unassignedShard0.isSameAllocation(initializingShard1));
  assertFalse(unassignedShard0.isSameAllocation(startedShard1));
}
