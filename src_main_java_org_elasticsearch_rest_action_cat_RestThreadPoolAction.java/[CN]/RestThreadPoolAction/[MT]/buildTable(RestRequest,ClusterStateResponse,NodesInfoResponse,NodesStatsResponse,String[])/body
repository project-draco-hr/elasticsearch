{
  boolean fullId=req.paramAsBoolean("full_id",false);
  DiscoveryNodes nodes=state.getState().nodes();
  Table table=getTableWithHeader(req);
  for (  DiscoveryNode node : nodes) {
    NodeInfo info=nodesInfo.getNodesMap().get(node.id());
    NodeStats stats=nodesStats.getNodesMap().get(node.id());
    table.startRow();
    table.addCell(fullId ? node.id() : Strings.substring(node.getId(),0,4));
    table.addCell(info == null ? null : info.getProcess().id());
    table.addCell(node.getHostName());
    table.addCell(node.getHostAddress());
    if (node.address() instanceof InetSocketTransportAddress) {
      table.addCell(((InetSocketTransportAddress)node.address()).address().getPort());
    }
 else {
      table.addCell("-");
    }
    final Map<String,ThreadPoolStats.Stats> poolThreadStats;
    if (stats == null) {
      poolThreadStats=Collections.emptyMap();
    }
 else {
      poolThreadStats=new HashMap<String,ThreadPoolStats.Stats>(14);
      ThreadPoolStats threadPoolStats=stats.getThreadPool();
      for (      ThreadPoolStats.Stats threadPoolStat : threadPoolStats) {
        poolThreadStats.put(threadPoolStat.getName(),threadPoolStat);
      }
    }
    for (    String pool : SUPPORTED_NAMES) {
      ThreadPoolStats.Stats poolStats=poolThreadStats.get(pool);
      table.addCell(poolStats == null ? null : poolStats.getActive());
      table.addCell(poolStats == null ? null : poolStats.getThreads());
      table.addCell(poolStats == null ? null : poolStats.getQueue());
      table.addCell(poolStats == null ? null : poolStats.getRejected());
      table.addCell(poolStats == null ? null : poolStats.getLargest());
      table.addCell(poolStats == null ? null : poolStats.getCompleted());
    }
    table.endRow();
  }
  return table;
}
