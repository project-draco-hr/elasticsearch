{
  createIndex(ScriptService.SCRIPT_INDEX);
  ensureGreen(ScriptService.SCRIPT_INDEX);
  PutIndexedScriptResponse scriptResponse=client().preparePutIndexedScript(MustacheScriptEngineService.NAME,"testTemplate","{" + "\"template\":{" + "                \"query\":{"+ "                   \"match\":{"+ "                    \"theField\" : \"{{fieldParam}}\"}"+ "       }"+ "}"+ "}").get();
  assertTrue(scriptResponse.isCreated());
  scriptResponse=client().preparePutIndexedScript(MustacheScriptEngineService.NAME,"testTemplate","{" + "\"template\":{" + "                \"query\":{"+ "                   \"match\":{"+ "                    \"theField\" : \"{{fieldParam}}\"}"+ "       }"+ "}"+ "}").get();
  assertEquals(scriptResponse.getVersion(),2);
  GetIndexedScriptResponse getResponse=client().prepareGetIndexedScript(MustacheScriptEngineService.NAME,"testTemplate").get();
  assertTrue(getResponse.isExists());
  List<IndexRequestBuilder> builders=new ArrayList<>();
  builders.add(client().prepareIndex("test","type","1").setSource("{\"theField\":\"foo\"}"));
  builders.add(client().prepareIndex("test","type","2").setSource("{\"theField\":\"foo 2\"}"));
  builders.add(client().prepareIndex("test","type","3").setSource("{\"theField\":\"foo 3\"}"));
  builders.add(client().prepareIndex("test","type","4").setSource("{\"theField\":\"foo 4\"}"));
  builders.add(client().prepareIndex("test","type","5").setSource("{\"theField\":\"bar\"}"));
  indexRandom(true,builders);
  Map<String,Object> templateParams=Maps.newHashMap();
  templateParams.put("fieldParam","foo");
  SearchResponse searchResponse=client().prepareSearch("test").setTypes("type").setTemplate(new Template("testTemplate",ScriptType.INDEXED,MustacheScriptEngineService.NAME,null,templateParams)).get();
  assertHitCount(searchResponse,4);
  DeleteIndexedScriptResponse deleteResponse=client().prepareDeleteIndexedScript(MustacheScriptEngineService.NAME,"testTemplate").get();
  assertTrue(deleteResponse.isFound());
  getResponse=client().prepareGetIndexedScript(MustacheScriptEngineService.NAME,"testTemplate").get();
  assertFalse(getResponse.isExists());
  client().prepareSearch("test").setTypes("type").setTemplate(new Template("/template_index/mustache/1000",ScriptType.INDEXED,MustacheScriptEngineService.NAME,null,templateParams)).get();
}
