{
  prepareCreate("test").setSettings(randomSettingsBuilder().put("index.number_of_shards",1).put("index.number_of_replicas",0)).addMapping("type1",XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("string_values").field("type","string").field("index","not_analyzed").endObject().endObject().endObject().endObject()).execute().actionGet();
  ensureGreen();
  client().prepareIndex("test","type1",Integer.toString(1)).setSource(jsonBuilder().startObject().array("string_values","01","05","10","08").endObject()).execute().actionGet();
  refresh();
  SearchResponse searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setSize(3).addSort("string_values",SortOrder.DESC).execute().actionGet();
  assertThat(searchResponse.getHits().hits().length,equalTo(1));
  assertThat(searchResponse.getHits().getAt(0).id(),equalTo(Integer.toString(1)));
  assertThat(((Text)searchResponse.getHits().getAt(0).sortValues()[0]).string(),equalTo("10"));
  client().prepareIndex("test","type1",Integer.toString(2)).setSource(jsonBuilder().startObject().array("string_values","11","15","20","07").endObject()).execute().actionGet();
  for (int i=0; i < 15; i++) {
    client().prepareIndex("test","type1",Integer.toString(300 + i)).setSource(jsonBuilder().startObject().array("some_other_field","foobar").endObject()).execute().actionGet();
  }
  refresh();
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setSize(2).addSort("string_values",SortOrder.DESC).execute().actionGet();
  assertThat(searchResponse.getHits().hits().length,equalTo(2));
  assertThat(searchResponse.getHits().getAt(0).id(),equalTo(Integer.toString(2)));
  assertThat(((Text)searchResponse.getHits().getAt(0).sortValues()[0]).string(),equalTo("20"));
  assertThat(searchResponse.getHits().getAt(1).id(),equalTo(Integer.toString(1)));
  assertThat(((Text)searchResponse.getHits().getAt(1).sortValues()[0]).string(),equalTo("10"));
  client().prepareIndex("test","type1",Integer.toString(3)).setSource(jsonBuilder().startObject().array("string_values","02","01","03","!4").endObject()).execute().actionGet();
  for (int i=0; i < 15; i++) {
    client().prepareIndex("test","type1",Integer.toString(300 + i)).setSource(jsonBuilder().startObject().array("some_other_field","foobar").endObject()).execute().actionGet();
  }
  refresh();
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setSize(3).addSort("string_values",SortOrder.DESC).execute().actionGet();
  assertThat(searchResponse.getHits().hits().length,equalTo(3));
  assertThat(searchResponse.getHits().getAt(0).id(),equalTo(Integer.toString(2)));
  assertThat(((Text)searchResponse.getHits().getAt(0).sortValues()[0]).string(),equalTo("20"));
  assertThat(searchResponse.getHits().getAt(1).id(),equalTo(Integer.toString(1)));
  assertThat(((Text)searchResponse.getHits().getAt(1).sortValues()[0]).string(),equalTo("10"));
  assertThat(searchResponse.getHits().getAt(2).id(),equalTo(Integer.toString(3)));
  assertThat(((Text)searchResponse.getHits().getAt(2).sortValues()[0]).string(),equalTo("03"));
  for (int i=0; i < 15; i++) {
    client().prepareIndex("test","type1",Integer.toString(300 + i)).setSource(jsonBuilder().startObject().array("some_other_field","foobar").endObject()).execute().actionGet();
    refresh();
  }
  searchResponse=client().prepareSearch().setQuery(matchAllQuery()).setSize(3).addSort("string_values",SortOrder.DESC).execute().actionGet();
  assertThat(searchResponse.getHits().hits().length,equalTo(3));
  assertThat(searchResponse.getHits().getAt(0).id(),equalTo(Integer.toString(2)));
  assertThat(((Text)searchResponse.getHits().getAt(0).sortValues()[0]).string(),equalTo("20"));
  assertThat(searchResponse.getHits().getAt(1).id(),equalTo(Integer.toString(1)));
  assertThat(((Text)searchResponse.getHits().getAt(1).sortValues()[0]).string(),equalTo("10"));
  assertThat(searchResponse.getHits().getAt(2).id(),equalTo(Integer.toString(3)));
  assertThat(((Text)searchResponse.getHits().getAt(2).sortValues()[0]).string(),equalTo("03"));
}
