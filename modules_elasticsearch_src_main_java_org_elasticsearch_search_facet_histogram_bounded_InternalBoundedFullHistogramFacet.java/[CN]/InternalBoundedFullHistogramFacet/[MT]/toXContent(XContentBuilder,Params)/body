{
  builder.startObject(name);
  builder.field(Fields._TYPE,HistogramFacet.TYPE);
  builder.startArray(Fields.ENTRIES);
  for (int i=0; i < size; i++) {
    FullEntry entry=(FullEntry)entries[i];
    builder.startObject();
    if (normalized) {
      builder.field(Fields.KEY,entry.key());
    }
 else {
      builder.field(Fields.KEY,(i * interval) + offset);
    }
    if (entry == null) {
      builder.field(Fields.COUNT,0);
      builder.field(Fields.TOTAL,0);
      builder.field(Fields.TOTAL_COUNT,0);
    }
 else {
      builder.field(Fields.COUNT,entry.count());
      builder.field(Fields.MIN,entry.min());
      builder.field(Fields.MAX,entry.max());
      builder.field(Fields.TOTAL,entry.total());
      builder.field(Fields.TOTAL_COUNT,entry.totalCount());
      builder.field(Fields.MEAN,entry.mean());
    }
    builder.endObject();
  }
  builder.endArray();
  builder.endObject();
  releaseCache();
  return builder;
}
