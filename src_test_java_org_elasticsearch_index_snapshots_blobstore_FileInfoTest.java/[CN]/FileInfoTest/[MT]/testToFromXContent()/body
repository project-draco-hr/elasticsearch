{
  final int iters=scaledRandomIntBetween(1,10);
  for (int iter=0; iter < iters; iter++) {
    final BytesRef hash=new BytesRef(scaledRandomIntBetween(0,1024 * 1024));
    hash.length=hash.bytes.length;
    for (int i=0; i < hash.length; i++) {
      hash.bytes[i]=randomByte();
    }
    StoreFileMetaData meta=new StoreFileMetaData("foobar",randomInt(),randomAsciiOfLengthBetween(1,10),TEST_VERSION_CURRENT,hash);
    ByteSizeValue size=new ByteSizeValue(Math.max(0,Math.abs(randomLong())));
    BlobStoreIndexShardSnapshot.FileInfo info=new BlobStoreIndexShardSnapshot.FileInfo("_foobar",meta,size);
    XContentBuilder builder=XContentFactory.contentBuilder(XContentType.JSON).prettyPrint();
    BlobStoreIndexShardSnapshot.FileInfo.toXContent(info,builder,ToXContent.EMPTY_PARAMS);
    byte[] xcontent=builder.bytes().toBytes();
    final BlobStoreIndexShardSnapshot.FileInfo parsedInfo;
    try (XContentParser parser=XContentFactory.xContent(XContentType.JSON).createParser(xcontent)){
      parser.nextToken();
      parsedInfo=BlobStoreIndexShardSnapshot.FileInfo.fromXContent(parser);
    }
     assertThat(info.name(),equalTo(parsedInfo.name()));
    assertThat(info.physicalName(),equalTo(parsedInfo.physicalName()));
    assertThat(info.length(),equalTo(parsedInfo.length()));
    assertThat(info.checksum(),equalTo(parsedInfo.checksum()));
    assertThat(info.partBytes(),equalTo(parsedInfo.partBytes()));
    assertThat(parsedInfo.metadata().hash().length,equalTo(hash.length));
    assertThat(parsedInfo.metadata().hash(),equalTo(hash));
    assertThat(parsedInfo.metadata().writtenBy(),equalTo(TEST_VERSION_CURRENT));
    assertThat(parsedInfo.isSame(info.metadata()),is(true));
  }
}
