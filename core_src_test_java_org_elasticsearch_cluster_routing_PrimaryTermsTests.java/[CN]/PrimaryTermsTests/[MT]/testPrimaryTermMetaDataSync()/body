{
  assertAllPrimaryTerm();
  initPrimaries();
  assertAllPrimaryTerm();
  startInitializingShards(TEST_INDEX_1);
  assertAllPrimaryTerm();
  startInitializingShards(TEST_INDEX_2);
  assertAllPrimaryTerm();
  startInitializingShards(TEST_INDEX_1);
  startInitializingShards(TEST_INDEX_2);
  assertAllPrimaryTerm();
  addNodes();
  assertAllPrimaryTerm();
  boolean changed=true;
  while (changed) {
    changed=startInitializingShards(TEST_INDEX_1);
    assertAllPrimaryTerm();
    changed|=startInitializingShards(TEST_INDEX_2);
    assertAllPrimaryTerm();
  }
  failSomePrimaries(TEST_INDEX_1);
  assertAllPrimaryTerm();
  changed=true;
  while (changed) {
    changed=startInitializingShards(TEST_INDEX_1);
    assertAllPrimaryTerm();
    changed|=startInitializingShards(TEST_INDEX_2);
    assertAllPrimaryTerm();
  }
}
