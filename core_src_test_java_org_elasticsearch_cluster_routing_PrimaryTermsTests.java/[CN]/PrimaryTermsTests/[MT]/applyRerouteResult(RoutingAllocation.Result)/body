{
  ClusterState previousClusterState=this.clusterState;
  ClusterState newClusterState=ClusterState.builder(previousClusterState).routingResult(rerouteResult).build();
  ClusterState.Builder builder=ClusterState.builder(newClusterState).incrementVersion();
  if (previousClusterState.routingTable() != newClusterState.routingTable()) {
    builder.routingTable(RoutingTable.builder(newClusterState.routingTable()).version(newClusterState.routingTable().version() + 1).build());
  }
  if (previousClusterState.metaData() != newClusterState.metaData()) {
    builder.metaData(MetaData.builder(newClusterState.metaData()).version(newClusterState.metaData().version() + 1));
  }
  this.clusterState=builder.build();
  this.testRoutingTable=rerouteResult.routingTable();
  final ClusterStateHealth clusterHealth=new ClusterStateHealth(clusterState);
  logger.info("applied reroute. active shards: p [{}], t [{}], init shards: [{}], relocating: [{}]",clusterHealth.getActivePrimaryShards(),clusterHealth.getActiveShards(),clusterHealth.getInitializingShards(),clusterHealth.getRelocatingShards());
}
