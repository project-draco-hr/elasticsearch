{
  super.setUp();
  this.allocationService=createAllocationService(Settings.builder().put("cluster.routing.allocation.node_concurrent_recoveries",Integer.MAX_VALUE).put("cluster.routing.allocation.node_initial_primaries_recoveries",Integer.MAX_VALUE).build());
  this.numberOfShards=randomIntBetween(1,5);
  this.numberOfReplicas=randomIntBetween(1,5);
  logger.info("Setup test with {} shards and {} replicas.",this.numberOfShards,this.numberOfReplicas);
  this.primaryTermsPerIndex.clear();
  MetaData metaData=MetaData.builder().put(createIndexMetaData(TEST_INDEX_1)).put(createIndexMetaData(TEST_INDEX_2)).build();
  RoutingTable routingTable=new RoutingTable.Builder().add(new IndexRoutingTable.Builder(metaData.index(TEST_INDEX_1).getIndex()).initializeAsNew(metaData.index(TEST_INDEX_1)).build()).add(new IndexRoutingTable.Builder(metaData.index(TEST_INDEX_2).getIndex()).initializeAsNew(metaData.index(TEST_INDEX_2)).build()).build();
  this.clusterState=ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(routingTable).build();
}
