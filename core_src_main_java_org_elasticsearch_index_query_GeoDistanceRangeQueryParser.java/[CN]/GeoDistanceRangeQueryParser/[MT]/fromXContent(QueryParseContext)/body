{
  XContentParser parser=parseContext.parser();
  XContentParser.Token token;
  Float boost=null;
  String queryName=null;
  String currentFieldName=null;
  GeoPoint point=null;
  String geohash=null;
  String fieldName=null;
  Object vFrom=null;
  Object vTo=null;
  Boolean includeLower=null;
  Boolean includeUpper=null;
  DistanceUnit unit=null;
  GeoDistance geoDistance=null;
  String optimizeBbox=null;
  Boolean coerce=null;
  Boolean ignoreMalformed=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (parseContext.isDeprecatedSetting(currentFieldName)) {
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if (point == null) {
        point=new GeoPoint();
      }
      GeoUtils.parseGeoPoint(parser,point);
      fieldName=currentFieldName;
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      fieldName=currentFieldName;
      if (point == null) {
        point=new GeoPoint();
      }
      GeoUtils.parseGeoPoint(parser,point);
    }
 else     if (token.isValue()) {
      if (parseContext.parseFieldMatcher().match(currentFieldName,FROM_FIELD)) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vFrom=parser.text();
        }
 else {
          vFrom=parser.numberValue();
        }
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,TO_FIELD)) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vTo=parser.text();
        }
 else {
          vTo=parser.numberValue();
        }
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,INCLUDE_LOWER_FIELD)) {
        includeLower=parser.booleanValue();
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,INCLUDE_UPPER_FIELD)) {
        includeUpper=parser.booleanValue();
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,GT_FIELD)) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vFrom=parser.text();
        }
 else {
          vFrom=parser.numberValue();
        }
        includeLower=false;
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,GTE_FIELD)) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vFrom=parser.text();
        }
 else {
          vFrom=parser.numberValue();
        }
        includeLower=true;
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,LT_FIELD)) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vTo=parser.text();
        }
 else {
          vTo=parser.numberValue();
        }
        includeUpper=false;
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,LTE_FIELD)) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vTo=parser.text();
        }
 else {
          vTo=parser.numberValue();
        }
        includeUpper=true;
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,UNIT_FIELD)) {
        unit=DistanceUnit.fromString(parser.text());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,DISTANCE_TYPE_FIELD)) {
        geoDistance=GeoDistance.fromString(parser.text());
      }
 else       if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LAT_SUFFIX)) {
        if (point == null) {
          point=new GeoPoint();
        }
        point.resetLat(parser.doubleValue());
        fieldName=currentFieldName.substring(0,currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length());
      }
 else       if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LON_SUFFIX)) {
        if (point == null) {
          point=new GeoPoint();
        }
        point.resetLon(parser.doubleValue());
        fieldName=currentFieldName.substring(0,currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length());
      }
 else       if (currentFieldName.endsWith(GeoPointFieldMapper.Names.GEOHASH_SUFFIX)) {
        geohash=parser.text();
        fieldName=currentFieldName.substring(0,currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length());
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,NAME_FIELD)) {
        queryName=parser.text();
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,BOOST_FIELD)) {
        boost=parser.floatValue();
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,OPTIMIZE_BBOX_FIELD)) {
        optimizeBbox=parser.textOrNull();
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,COERCE_FIELD)) {
        coerce=parser.booleanValue();
      }
 else       if (parseContext.parseFieldMatcher().match(currentFieldName,IGNORE_MALFORMED_FIELD)) {
        ignoreMalformed=parser.booleanValue();
      }
 else {
        if (point == null) {
          point=new GeoPoint();
        }
        point.resetFromString(parser.text());
        fieldName=currentFieldName;
      }
    }
  }
  GeoDistanceRangeQueryBuilder queryBuilder=new GeoDistanceRangeQueryBuilder(fieldName);
  if (boost != null) {
    queryBuilder.boost(boost);
  }
  if (queryName != null) {
    queryBuilder.queryName(queryName);
  }
  if (point != null) {
    queryBuilder.point(point.lat(),point.lon());
  }
  if (geohash != null) {
    queryBuilder.geohash(geohash);
  }
  if (vFrom != null) {
    queryBuilder.from(vFrom);
  }
  if (vTo != null) {
    queryBuilder.to(vTo);
  }
  if (includeUpper != null) {
    queryBuilder.includeUpper(includeUpper);
  }
  if (includeLower != null) {
    queryBuilder.includeLower(includeLower);
  }
  if (unit != null) {
    queryBuilder.unit(unit);
  }
  if (geoDistance != null) {
    queryBuilder.geoDistance(geoDistance);
  }
  if (optimizeBbox != null) {
    queryBuilder.optimizeBbox(optimizeBbox);
  }
  if (coerce != null) {
    queryBuilder.coerce(coerce);
  }
  if (ignoreMalformed != null) {
    queryBuilder.ignoreMalformed(ignoreMalformed);
  }
  return queryBuilder;
}
