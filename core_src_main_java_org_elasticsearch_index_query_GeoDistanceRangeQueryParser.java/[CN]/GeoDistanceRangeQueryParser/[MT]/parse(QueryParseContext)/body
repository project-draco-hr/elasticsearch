{
  XContentParser parser=parseContext.parser();
  XContentParser.Token token;
  String queryName=null;
  String currentFieldName=null;
  GeoPoint point=new GeoPoint();
  String fieldName=null;
  Object vFrom=null;
  Object vTo=null;
  boolean includeLower=true;
  boolean includeUpper=true;
  DistanceUnit unit=DistanceUnit.DEFAULT;
  GeoDistance geoDistance=GeoDistance.DEFAULT;
  String optimizeBbox="memory";
  final boolean indexCreatedBeforeV2_0=parseContext.indexVersionCreated().before(Version.V_2_0_0);
  boolean coerce=false;
  boolean ignoreMalformed=false;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (parseContext.isDeprecatedSetting(currentFieldName)) {
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      GeoUtils.parseGeoPoint(parser,point);
      fieldName=currentFieldName;
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      fieldName=currentFieldName;
      GeoUtils.parseGeoPoint(parser,point);
    }
 else     if (token.isValue()) {
      if (currentFieldName.equals("from")) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vFrom=parser.text();
        }
 else {
          vFrom=parser.numberValue();
        }
      }
 else       if (currentFieldName.equals("to")) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vTo=parser.text();
        }
 else {
          vTo=parser.numberValue();
        }
      }
 else       if ("include_lower".equals(currentFieldName) || "includeLower".equals(currentFieldName)) {
        includeLower=parser.booleanValue();
      }
 else       if ("include_upper".equals(currentFieldName) || "includeUpper".equals(currentFieldName)) {
        includeUpper=parser.booleanValue();
      }
 else       if ("gt".equals(currentFieldName)) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vFrom=parser.text();
        }
 else {
          vFrom=parser.numberValue();
        }
        includeLower=false;
      }
 else       if ("gte".equals(currentFieldName) || "ge".equals(currentFieldName)) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vFrom=parser.text();
        }
 else {
          vFrom=parser.numberValue();
        }
        includeLower=true;
      }
 else       if ("lt".equals(currentFieldName)) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vTo=parser.text();
        }
 else {
          vTo=parser.numberValue();
        }
        includeUpper=false;
      }
 else       if ("lte".equals(currentFieldName) || "le".equals(currentFieldName)) {
        if (token == XContentParser.Token.VALUE_NULL) {
        }
 else         if (token == XContentParser.Token.VALUE_STRING) {
          vTo=parser.text();
        }
 else {
          vTo=parser.numberValue();
        }
        includeUpper=true;
      }
 else       if (currentFieldName.equals("unit")) {
        unit=DistanceUnit.fromString(parser.text());
      }
 else       if (currentFieldName.equals("distance_type") || currentFieldName.equals("distanceType")) {
        geoDistance=GeoDistance.fromString(parser.text());
      }
 else       if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LAT_SUFFIX)) {
        point.resetLat(parser.doubleValue());
        fieldName=currentFieldName.substring(0,currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length());
      }
 else       if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LON_SUFFIX)) {
        point.resetLon(parser.doubleValue());
        fieldName=currentFieldName.substring(0,currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length());
      }
 else       if (currentFieldName.endsWith(GeoPointFieldMapper.Names.GEOHASH_SUFFIX)) {
        GeoHashUtils.decode(parser.text(),point);
        fieldName=currentFieldName.substring(0,currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length());
      }
 else       if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else       if ("optimize_bbox".equals(currentFieldName) || "optimizeBbox".equals(currentFieldName)) {
        optimizeBbox=parser.textOrNull();
      }
 else       if ("coerce".equals(currentFieldName) || (indexCreatedBeforeV2_0 && "normalize".equals(currentFieldName))) {
        coerce=parser.booleanValue();
        if (coerce == true) {
          ignoreMalformed=true;
        }
      }
 else       if ("ignore_malformed".equals(currentFieldName) && coerce == false) {
        ignoreMalformed=parser.booleanValue();
      }
 else {
        point.resetFromString(parser.text());
        fieldName=currentFieldName;
      }
    }
  }
  if (!indexCreatedBeforeV2_0 && !ignoreMalformed) {
    if (point.lat() > 90.0 || point.lat() < -90.0) {
      throw new QueryParsingException(parseContext,"illegal latitude value [{}] for [{}]",point.lat(),NAME);
    }
    if (point.lon() > 180.0 || point.lon() < -180) {
      throw new QueryParsingException(parseContext,"illegal longitude value [{}] for [{}]",point.lon(),NAME);
    }
  }
  if (coerce) {
    GeoUtils.normalizePoint(point,coerce,coerce);
  }
  Double from=null;
  Double to=null;
  if (vFrom != null) {
    if (vFrom instanceof Number) {
      from=unit.toMeters(((Number)vFrom).doubleValue());
    }
 else {
      from=DistanceUnit.parse((String)vFrom,unit,DistanceUnit.DEFAULT);
    }
    from=geoDistance.normalize(from,DistanceUnit.DEFAULT);
  }
  if (vTo != null) {
    if (vTo instanceof Number) {
      to=unit.toMeters(((Number)vTo).doubleValue());
    }
 else {
      to=DistanceUnit.parse((String)vTo,unit,DistanceUnit.DEFAULT);
    }
    to=geoDistance.normalize(to,DistanceUnit.DEFAULT);
  }
  MappedFieldType fieldType=parseContext.fieldMapper(fieldName);
  if (fieldType == null) {
    throw new QueryParsingException(parseContext,"failed to find geo_point field [" + fieldName + "]");
  }
  if (!(fieldType instanceof GeoPointFieldMapper.GeoPointFieldType)) {
    throw new QueryParsingException(parseContext,"field [" + fieldName + "] is not a geo_point field");
  }
  GeoPointFieldMapper.GeoPointFieldType geoFieldType=((GeoPointFieldMapper.GeoPointFieldType)fieldType);
  IndexGeoPointFieldData indexFieldData=parseContext.getForField(fieldType);
  Query query=new GeoDistanceRangeQuery(point,from,to,includeLower,includeUpper,geoDistance,geoFieldType,indexFieldData,optimizeBbox);
  if (queryName != null) {
    parseContext.addNamedQuery(queryName,query);
  }
  return query;
}
