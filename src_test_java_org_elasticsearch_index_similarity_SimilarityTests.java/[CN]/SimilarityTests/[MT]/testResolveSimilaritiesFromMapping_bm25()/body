{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field1").field("type","string").field("similarity","my_similarity").endObject().endObject().endObject().endObject().string();
  Settings indexSettings=ImmutableSettings.settingsBuilder().put("index.similarity.my_similarity.type","BM25").put("index.similarity.my_similarity.k1",2.0f).put("index.similarity.my_similarity.b",1.5f).put("index.similarity.my_similarity.discount_overlaps",false).build();
  SimilarityService similarityService=similarityService(indexSettings);
  DocumentMapper documentMapper=similarityService.mapperService().documentMapperParser().parse(mapping);
  assertThat(documentMapper.mappers().name("field1").mapper().similarity(),instanceOf(BM25SimilarityProvider.class));
  BM25Similarity similarity=(BM25Similarity)documentMapper.mappers().name("field1").mapper().similarity().get();
  assertThat(similarity.getK1(),equalTo(2.0f));
  assertThat(similarity.getB(),equalTo(1.5f));
  assertThat(similarity.getDiscountOverlaps(),equalTo(false));
}
