{
  return new FilterDirectory(store.directory()){
    @Override public String[] listAll() throws IOException {
      Collection<String> fileNames=indexCommit.getFileNames();
      final String[] fileNameArray=fileNames.toArray(new String[fileNames.size()]);
      return fileNameArray;
    }
    @Override public void deleteFile(    String name) throws IOException {
      throw new UnsupportedOperationException("this directory is read-only");
    }
    @Override public void sync(    Collection<String> names) throws IOException {
      throw new UnsupportedOperationException("this directory is read-only");
    }
    @Override public void renameFile(    String source,    String dest) throws IOException {
      throw new UnsupportedOperationException("this directory is read-only");
    }
    @Override public IndexOutput createOutput(    String name,    IOContext context) throws IOException {
      throw new UnsupportedOperationException("this directory is read-only");
    }
    @Override public IndexOutput createTempOutput(    String prefix,    String suffix,    IOContext context) throws IOException {
      throw new UnsupportedOperationException("this directory is read-only");
    }
    @Override public Lock obtainLock(    String name) throws IOException {
      return NoLockFactory.INSTANCE.obtainLock(in,name);
    }
    @Override public void close() throws IOException {
      throw new UnsupportedOperationException("nobody should close this directory wrapper");
    }
  }
;
}
