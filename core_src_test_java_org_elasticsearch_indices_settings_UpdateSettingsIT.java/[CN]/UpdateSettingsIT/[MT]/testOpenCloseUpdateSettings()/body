{
  createIndex("test");
  try {
    client().admin().indices().prepareUpdateSettings("test").setSettings(Settings.builder().put("index.refresh_interval",-1).put("index.fielddata.cache","none")).execute().actionGet();
    fail();
  }
 catch (  IllegalArgumentException e) {
  }
  IndexMetaData indexMetaData=client().admin().cluster().prepareState().execute().actionGet().getState().metaData().index("test");
  assertThat(indexMetaData.getSettings().get("index.refresh_interval"),nullValue());
  assertThat(indexMetaData.getSettings().get("index.fielddata.cache"),nullValue());
  GetSettingsResponse getSettingsResponse=client().admin().indices().prepareGetSettings("test").get();
  assertThat(getSettingsResponse.getSetting("test","index.refresh_interval"),nullValue());
  assertThat(getSettingsResponse.getSetting("test","index.fielddata.cache"),nullValue());
  client().admin().indices().prepareUpdateSettings("test").setSettings(Settings.builder().put("index.refresh_interval",-1)).execute().actionGet();
  indexMetaData=client().admin().cluster().prepareState().execute().actionGet().getState().metaData().index("test");
  assertThat(indexMetaData.getSettings().get("index.refresh_interval"),equalTo("-1"));
  getSettingsResponse=client().admin().indices().prepareGetSettings("test").get();
  assertThat(getSettingsResponse.getSetting("test","index.refresh_interval"),equalTo("-1"));
  ClusterHealthResponse health=client().admin().cluster().prepareHealth().setTimeout("30s").setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  client().admin().indices().prepareClose("test").execute().actionGet();
  try {
    client().admin().indices().prepareUpdateSettings("test").setSettings(Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,1)).execute().actionGet();
    fail("can't change number of replicas on a closed index");
  }
 catch (  IllegalArgumentException ex) {
    assertTrue(ex.getMessage(),ex.getMessage().startsWith("Can't update [index.number_of_replicas] on closed indices [[test/"));
    assertTrue(ex.getMessage(),ex.getMessage().endsWith("]] - can leave index in an unopenable state"));
  }
  client().admin().indices().prepareUpdateSettings("test").setSettings(Settings.builder().put("index.refresh_interval","1s").put("index.fielddata.cache","none")).execute().actionGet();
  indexMetaData=client().admin().cluster().prepareState().execute().actionGet().getState().metaData().index("test");
  assertThat(indexMetaData.getSettings().get("index.refresh_interval"),equalTo("1s"));
  assertThat(indexMetaData.getSettings().get("index.fielddata.cache"),equalTo("none"));
  getSettingsResponse=client().admin().indices().prepareGetSettings("test").get();
  assertThat(getSettingsResponse.getSetting("test","index.refresh_interval"),equalTo("1s"));
  assertThat(getSettingsResponse.getSetting("test","index.fielddata.cache"),equalTo("none"));
}
