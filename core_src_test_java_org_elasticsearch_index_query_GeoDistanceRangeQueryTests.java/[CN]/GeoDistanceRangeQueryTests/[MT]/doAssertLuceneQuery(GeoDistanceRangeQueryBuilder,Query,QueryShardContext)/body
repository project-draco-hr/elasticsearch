{
  assertThat(query,instanceOf(GeoDistanceRangeQuery.class));
  GeoDistanceRangeQuery geoQuery=(GeoDistanceRangeQuery)query;
  assertThat(geoQuery.fieldName(),equalTo(queryBuilder.fieldName()));
  if (queryBuilder.point() != null) {
    GeoPoint expectedPoint=new GeoPoint(queryBuilder.point());
    if (GeoValidationMethod.isCoerce(queryBuilder.getValidationMethod())) {
      GeoUtils.normalizePoint(expectedPoint,true,true);
    }
    assertThat(geoQuery.lat(),equalTo(expectedPoint.lat()));
    assertThat(geoQuery.lon(),equalTo(expectedPoint.lon()));
  }
  assertThat(geoQuery.geoDistance(),equalTo(queryBuilder.geoDistance()));
  if (queryBuilder.from() != null && queryBuilder.from() instanceof Number) {
    double fromValue=((Number)queryBuilder.from()).doubleValue();
    if (queryBuilder.unit() != null) {
      fromValue=queryBuilder.unit().toMeters(fromValue);
    }
    if (queryBuilder.geoDistance() != null) {
      fromValue=queryBuilder.geoDistance().normalize(fromValue,DistanceUnit.DEFAULT);
    }
    assertThat(geoQuery.minInclusiveDistance(),closeTo(fromValue,Math.abs(fromValue) / 1000));
  }
  if (queryBuilder.to() != null && queryBuilder.to() instanceof Number) {
    double toValue=((Number)queryBuilder.to()).doubleValue();
    if (queryBuilder.unit() != null) {
      toValue=queryBuilder.unit().toMeters(toValue);
    }
    if (queryBuilder.geoDistance() != null) {
      toValue=queryBuilder.geoDistance().normalize(toValue,DistanceUnit.DEFAULT);
    }
    assertThat(geoQuery.maxInclusiveDistance(),closeTo(toValue,Math.abs(toValue) / 1000));
  }
}
