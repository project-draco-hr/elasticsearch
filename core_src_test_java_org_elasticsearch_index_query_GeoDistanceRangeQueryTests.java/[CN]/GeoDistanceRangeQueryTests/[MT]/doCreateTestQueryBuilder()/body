{
  GeoDistanceRangeQueryBuilder builder=new GeoDistanceRangeQueryBuilder(GEO_FIELD_NAME);
  if (randomBoolean()) {
    builder.geohash(randomGeohash(1,12));
  }
 else {
    double lat=randomDouble() * 180 - 90;
    double lon=randomDouble() * 360 - 180;
    if (randomBoolean()) {
      builder.point(lat,lon);
    }
 else {
      builder.point(new GeoPoint(lat,lon));
    }
  }
  int fromValue=randomInt(1000000);
  int toValue=randomIntBetween(fromValue,1000000);
  String fromToUnits=randomFrom(DistanceUnit.values()).toString();
  if (randomBoolean()) {
    int branch=randomInt(2);
switch (branch) {
case 0:
      builder.from(fromValue);
    break;
case 1:
  builder.to(toValue);
break;
case 2:
builder.from(fromValue);
builder.to(toValue);
break;
}
}
 else {
int branch=randomInt(2);
switch (branch) {
case 0:
builder.from(fromValue + fromToUnits);
break;
case 1:
builder.to(toValue + fromToUnits);
break;
case 2:
builder.from(fromValue + fromToUnits);
builder.to(toValue + fromToUnits);
break;
}
}
if (randomBoolean()) {
builder.includeLower(randomBoolean());
}
if (randomBoolean()) {
builder.includeUpper(randomBoolean());
}
if (randomBoolean()) {
builder.geoDistance(randomFrom(GeoDistance.values()));
}
if (randomBoolean()) {
builder.unit(randomFrom(DistanceUnit.values()));
}
if (randomBoolean()) {
builder.optimizeBbox(randomFrom("none","memory","indexed"));
}
if (randomBoolean()) {
builder.coerce(randomBoolean());
}
if (randomBoolean()) {
builder.ignoreMalformed(randomBoolean());
}
return builder;
}
