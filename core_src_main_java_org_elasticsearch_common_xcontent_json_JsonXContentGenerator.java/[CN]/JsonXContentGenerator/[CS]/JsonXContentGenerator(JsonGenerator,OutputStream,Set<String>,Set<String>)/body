{
  Objects.requireNonNull(includes,"Including filters must not be null");
  Objects.requireNonNull(excludes,"Excluding filters must not be null");
  this.os=os;
  if (jsonGenerator instanceof GeneratorBase) {
    this.base=(GeneratorBase)jsonGenerator;
  }
 else {
    this.base=null;
  }
  JsonGenerator generator=jsonGenerator;
  boolean hasExcludes=excludes.isEmpty() == false;
  if (hasExcludes) {
    generator=new FilteringGeneratorDelegate(generator,new FilterPathBasedFilter(excludes,false),true,true);
  }
  boolean hasIncludes=includes.isEmpty() == false;
  if (hasIncludes) {
    generator=new FilteringGeneratorDelegate(generator,new FilterPathBasedFilter(includes,true),true,true);
  }
  if (hasExcludes || hasIncludes) {
    this.filter=(FilteringGeneratorDelegate)generator;
  }
 else {
    this.filter=null;
  }
  this.generator=generator;
}
