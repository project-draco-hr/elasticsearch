{
  super(index,indexSettings);
  this.blobStoreContext=blobStoreService.context();
  this.gateway=gateway;
  String location=componentSettings.get("location");
  String container=componentSettings.get("container");
  SizeValue chunkSize=componentSettings.getAsSize("chunk_size",null);
  if (gateway instanceof CloudGateway) {
    CloudGateway cloudGateway=(CloudGateway)gateway;
    if (container == null) {
      container=cloudGateway.container() + JCloudsUtils.BLOB_CONTAINER_SEP + index.name();
    }
    if (chunkSize == null) {
      chunkSize=cloudGateway.chunkSize();
    }
  }
  if (chunkSize == null) {
    chunkSize=new SizeValue(4,SizeUnit.GB);
  }
  if (location == null) {
    if (gateway instanceof CloudGateway) {
      CloudGateway cloudGateway=(CloudGateway)gateway;
      this.location=cloudGateway.location();
    }
 else {
      this.location=null;
    }
  }
 else {
    this.location=blobStoreContext.getBlobStore().getAssignableLocations().get(location);
    if (this.location == null) {
      throw new ElasticSearchIllegalArgumentException("Not a valid location [" + location + "], available locations "+ blobStoreContext.getBlobStore().getAssignableLocations().keySet());
    }
  }
  this.indexContainer=container;
  this.chunkSize=chunkSize;
  logger.debug("Using location [{}], container [{}], chunk_size [{}]",this.location,this.indexContainer,this.chunkSize);
}
