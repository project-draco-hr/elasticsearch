{
  String objectMapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("obj").field("type","object").endObject().endObject().endObject().endObject().string();
  DocumentMapper objectMapper=MapperTests.newParser().parse(objectMapping);
  String nestedMapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("obj").field("type","nested").endObject().endObject().endObject().endObject().string();
  DocumentMapper nestedMapper=MapperTests.newParser().parse(nestedMapping);
  DocumentMapper.MergeResult mergeResult=objectMapper.merge(nestedMapper,mergeFlags().simulate(true));
  assertThat(mergeResult.hasConflicts(),equalTo(true));
  assertThat(mergeResult.conflicts().length,equalTo(1));
  assertThat(mergeResult.conflicts()[0],equalTo("object mapping [obj] can't be changed from non-nested to nested"));
  mergeResult=nestedMapper.merge(objectMapper,mergeFlags().simulate(true));
  assertThat(mergeResult.conflicts().length,equalTo(1));
  assertThat(mergeResult.conflicts()[0],equalTo("object mapping [obj] can't be changed from nested to non-nested"));
}
