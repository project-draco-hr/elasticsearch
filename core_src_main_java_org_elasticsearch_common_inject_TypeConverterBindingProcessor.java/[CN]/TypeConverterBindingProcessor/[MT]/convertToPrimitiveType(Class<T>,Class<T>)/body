{
  try {
    final Method parser=wrapperType.getMethod("parse" + Strings.capitalize(primitiveType.getName()),String.class);
    TypeConverter typeConverter=new TypeConverter(){
      @Override @SuppressWarnings("unchecked") public Object convert(      String value,      TypeLiteral<?> toType){
        try {
          return parser.invoke(null,value);
        }
 catch (        IllegalAccessException e) {
          throw new AssertionError(e);
        }
catch (        InvocationTargetException e) {
          throw new RuntimeException(e.getTargetException());
        }
      }
      @Override public String toString(){
        return "TypeConverter<" + wrapperType.getSimpleName() + ">";
      }
    }
;
    convertToClass(wrapperType,typeConverter);
  }
 catch (  NoSuchMethodException e) {
    throw new AssertionError(e);
  }
}
