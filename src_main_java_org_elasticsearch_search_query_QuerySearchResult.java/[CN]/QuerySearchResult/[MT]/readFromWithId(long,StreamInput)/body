{
  this.id=id;
  from=in.readVInt();
  size=in.readVInt();
  topDocs=readTopDocs(in);
  if (in.readBoolean()) {
    aggregations=InternalAggregations.readAggregations(in);
  }
  if (in.readBoolean()) {
    int size=in.readVInt();
    List<SiblingReducer> reducers=new ArrayList<>(size);
    for (int i=0; i < size; i++) {
      BytesReference type=in.readBytesReference();
      Reducer reducer=ReducerStreams.stream(type).readResult(in);
      reducers.add((SiblingReducer)reducer);
    }
    this.reducers=reducers;
  }
  if (in.readBoolean()) {
    suggest=Suggest.readSuggest(Suggest.Fields.SUGGEST,in);
  }
  searchTimedOut=in.readBoolean();
  terminatedEarly=in.readOptionalBoolean();
}
