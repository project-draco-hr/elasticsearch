{
  final Random r=getRandom();
  int threadCount=TestUtil.nextInt(r,2,10);
  Thread[] threads=new Thread[threadCount];
  final CountDownLatch startingGun=new CountDownLatch(1);
  for (int tid=0; tid < threadCount; tid++) {
    final long seed=r.nextLong();
    threads[tid]=new Thread(){
      @Override public void run(){
        try {
          Random r=new Random(seed);
          startingGun.await();
          for (int i=0; i < 10; i++) {
            byte bytes[]=new byte[TestUtil.nextInt(r,1,100000)];
            r.nextBytes(bytes);
            doTest(bytes);
          }
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
    }
;
    threads[tid].start();
  }
  startingGun.countDown();
  for (  Thread t : threads) {
    t.join();
  }
}
