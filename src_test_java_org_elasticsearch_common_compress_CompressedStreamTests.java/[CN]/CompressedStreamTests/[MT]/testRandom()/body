{
  String compressor="lzf";
  CompressorFactory.configure(ImmutableSettings.settingsBuilder().put("compress.default.type",compressor).build());
  Random r=getRandom();
  for (int i=0; i < 2000; i++) {
    byte bytes[]=new byte[TestUtil.nextInt(r,1,10000)];
    r.nextBytes(bytes);
    ByteBuffer bb=ByteBuffer.wrap(bytes);
    StreamInput rawIn=new ByteBufferStreamInput(bb);
    Compressor c=CompressorFactory.defaultCompressor();
    ByteArrayOutputStream bos=new ByteArrayOutputStream();
    OutputStreamStreamOutput rawOs=new OutputStreamStreamOutput(bos);
    StreamOutput os=c.streamOutput(rawOs);
    byte buffer[]=new byte[1024];
    int len;
    while ((len=rawIn.read(buffer)) != -1) {
      os.write(buffer,0,len);
    }
    os.close();
    byte compressed[]=bos.toByteArray();
    ByteBuffer bb2=ByteBuffer.wrap(compressed);
    StreamInput compressedIn=new ByteBufferStreamInput(bb2);
    StreamInput in=c.streamInput(compressedIn);
    ByteArrayOutputStream uncompressedOut=new ByteArrayOutputStream();
    while ((len=in.read(buffer)) != -1) {
      uncompressedOut.write(buffer,0,len);
    }
    uncompressedOut.close();
    assertArrayEquals(bytes,uncompressedOut.toByteArray());
  }
}
