{
switch (randomIntBetween(0,3)) {
case 0:
    FilterFunctionBuilder[] functions=new FilterFunctionBuilder[randomIntBetween(0,3)];
  for (int i=0; i < functions.length; i++) {
    functions[i]=new FilterFunctionBuilder(RandomQueryBuilder.createQuery(random()),randomScoreFunction());
  }
if (randomBoolean()) {
  return new FunctionScoreQueryBuilder(RandomQueryBuilder.createQuery(random()),functions);
}
return new FunctionScoreQueryBuilder(functions);
case 1:
return new FunctionScoreQueryBuilder(randomScoreFunction());
case 2:
return new FunctionScoreQueryBuilder(RandomQueryBuilder.createQuery(random()),randomScoreFunction());
case 3:
return new FunctionScoreQueryBuilder(RandomQueryBuilder.createQuery(random()));
default :
throw new UnsupportedOperationException();
}
}
