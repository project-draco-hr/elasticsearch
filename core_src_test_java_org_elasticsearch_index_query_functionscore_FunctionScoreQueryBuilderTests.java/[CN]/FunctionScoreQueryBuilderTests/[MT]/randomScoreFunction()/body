{
  if (randomBoolean()) {
    return new WeightBuilder().setWeight(randomFloat());
  }
  ScoreFunctionBuilder functionBuilder;
switch (randomIntBetween(0,2)) {
case 0:
    DecayFunctionBuilder decayFunctionBuilder;
  Float offset=randomBoolean() ? null : randomFloat();
double decay=randomDouble();
switch (randomIntBetween(0,2)) {
case 0:
decayFunctionBuilder=new GaussDecayFunctionBuilder(INT_FIELD_NAME,randomFloat(),randomFloat(),offset,decay);
break;
case 1:
decayFunctionBuilder=new ExponentialDecayFunctionBuilder(INT_FIELD_NAME,randomFloat(),randomFloat(),offset,decay);
break;
case 2:
decayFunctionBuilder=new LinearDecayFunctionBuilder(INT_FIELD_NAME,randomFloat(),randomFloat(),offset,decay);
break;
default :
throw new UnsupportedOperationException();
}
if (randomBoolean()) {
decayFunctionBuilder.setMultiValueMode(randomFrom(MultiValueMode.values()));
}
functionBuilder=decayFunctionBuilder;
break;
case 1:
FieldValueFactorFunctionBuilder fieldValueFactorFunctionBuilder=new FieldValueFactorFunctionBuilder(INT_FIELD_NAME);
if (randomBoolean()) {
fieldValueFactorFunctionBuilder.factor(randomFloat());
}
if (randomBoolean()) {
fieldValueFactorFunctionBuilder.missing(randomDouble());
}
if (randomBoolean()) {
fieldValueFactorFunctionBuilder.modifier(randomFrom(FieldValueFactorFunction.Modifier.values()));
}
functionBuilder=fieldValueFactorFunctionBuilder;
break;
case 2:
String script;
Map<String,Object> params=null;
if (randomBoolean()) {
script="5 * 2 > param";
params=new HashMap<>();
params.put("param",1);
}
 else {
script="5 * 2 > 2";
}
functionBuilder=new ScriptScoreFunctionBuilder(new Script(script,ScriptService.ScriptType.INLINE,ExpressionScriptEngineService.NAME,params));
break;
case 3:
RandomScoreFunctionBuilder randomScoreFunctionBuilder=new RandomScoreFunctionBuilder();
if (randomBoolean()) {
randomScoreFunctionBuilder.seed(randomLong());
}
 else if (randomBoolean()) {
randomScoreFunctionBuilder.seed(randomInt());
}
 else {
randomScoreFunctionBuilder.seed(randomAsciiOfLengthBetween(1,10));
}
functionBuilder=randomScoreFunctionBuilder;
break;
default :
throw new UnsupportedOperationException();
}
if (randomBoolean()) {
functionBuilder.setWeight(randomFloat());
}
return functionBuilder;
}
