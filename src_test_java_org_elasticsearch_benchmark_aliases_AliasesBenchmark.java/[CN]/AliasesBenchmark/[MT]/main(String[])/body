{
  int NUM_ADDITIONAL_NODES=0;
  int BASE_ALIAS_COUNT=100000;
  int NUM_ADD_ALIAS_REQUEST=1000;
  Settings settings=ImmutableSettings.settingsBuilder().put("gateway.type","local").put("node.master",false).build();
  Node node1=NodeBuilder.nodeBuilder().settings(ImmutableSettings.settingsBuilder().put(settings).put("node.master",true)).node();
  Node[] otherNodes=new Node[NUM_ADDITIONAL_NODES];
  for (int i=0; i < otherNodes.length; i++) {
    otherNodes[i]=NodeBuilder.nodeBuilder().settings(settings).node();
  }
  Client client=node1.client();
  try {
    client.admin().indices().prepareCreate(INDEX_NAME).execute().actionGet();
  }
 catch (  IndexAlreadyExistsException e) {
  }
  client.admin().cluster().prepareHealth().setWaitForYellowStatus().execute().actionGet();
  int numberOfAliases=countAliases(client);
  System.out.println("Number of aliases: " + numberOfAliases);
  if (numberOfAliases < BASE_ALIAS_COUNT) {
    int diff=BASE_ALIAS_COUNT - numberOfAliases;
    System.out.println("Adding " + diff + " more aliases to get to the start amount of "+ BASE_ALIAS_COUNT+ " aliases");
    IndicesAliasesRequestBuilder builder=client.admin().indices().prepareAliases();
    for (int i=1; i <= diff; i++) {
      builder.addAlias(INDEX_NAME,Strings.randomBase64UUID());
      if (i % 1000 == 0) {
        builder.execute().actionGet();
        builder=client.admin().indices().prepareAliases();
      }
    }
    if (!builder.request().getAliasActions().isEmpty()) {
      builder.execute().actionGet();
    }
  }
 else   if (numberOfAliases > BASE_ALIAS_COUNT) {
    IndicesAliasesRequestBuilder builder=client.admin().indices().prepareAliases();
    int diff=numberOfAliases - BASE_ALIAS_COUNT;
    System.out.println("Removing " + diff + " aliases to get to the start amount of "+ BASE_ALIAS_COUNT+ " aliases");
    List<AliasMetaData> aliases=client.admin().indices().prepareGetAliases("*").addIndices(INDEX_NAME).execute().actionGet().getAliases().get(INDEX_NAME);
    for (int i=0; i <= diff; i++) {
      builder.removeAlias(INDEX_NAME,aliases.get(i).alias());
      if (i % 1000 == 0) {
        builder.execute().actionGet();
        builder=client.admin().indices().prepareAliases();
      }
    }
    if (!builder.request().getAliasActions().isEmpty()) {
      builder.execute().actionGet();
    }
  }
  numberOfAliases=countAliases(client);
  System.out.println("Number of aliases: " + numberOfAliases);
  long totalTime=0;
  int max=numberOfAliases + NUM_ADD_ALIAS_REQUEST;
  for (int i=numberOfAliases; i <= max; i++) {
    if (i != numberOfAliases && i % 100 == 0) {
      long avgTime=totalTime / 100;
      System.out.println("Added [" + (i - numberOfAliases) + "] aliases. Avg create time: "+ avgTime+ " ms");
      totalTime=0;
    }
    long time=System.currentTimeMillis();
    client.admin().indices().prepareAliases().addAlias(INDEX_NAME,Strings.randomBase64UUID()).execute().actionGet();
    totalTime+=System.currentTimeMillis() - time;
  }
  System.out.println("Number of aliases: " + countAliases(client));
  client.close();
  node1.close();
  for (  Node otherNode : otherNodes) {
    otherNode.close();
  }
}
