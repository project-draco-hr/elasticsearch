{
  Version version=VersionUtils.randomVersionBetween(random(),Version.V_2_0_0,Version.CURRENT);
  Settings settings=Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,version).build();
  XContentBuilder xContentBuilder=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("location").field("type","geo_point");
  if (version.before(Version.V_2_2_0)) {
    xContentBuilder.field("lat_lon",true);
  }
  xContentBuilder.endObject().endObject().endObject().endObject();
  assertAcked(prepareCreate("test").setSettings(settings).addMapping("type1",xContentBuilder));
  ensureGreen();
  client().prepareIndex("test","type1","1").setSource(jsonBuilder().startObject().field("userid",880).field("title","Place in Stockholm").startObject("location").field("lat",59.328355000000002).field("lon",18.036842).endObject().endObject()).setRefreshPolicy(IMMEDIATE).get();
  client().prepareIndex("test","type1","2").setSource(jsonBuilder().startObject().field("userid",534).field("title","Place in Montreal").startObject("location").field("lat",45.509526999999999).field("lon",-73.570986000000005).endObject().endObject()).setRefreshPolicy(IMMEDIATE).get();
  SearchResponse searchResponse=client().prepareSearch().setQuery(geoBoundingBoxQuery("location").setValidationMethod(GeoValidationMethod.COERCE).setCorners(50,-180,-50,180)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(geoBoundingBoxQuery("location").setValidationMethod(GeoValidationMethod.COERCE).setCorners(50,-180,-50,180).type("indexed")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(geoBoundingBoxQuery("location").setValidationMethod(GeoValidationMethod.COERCE).setCorners(90,-180,-90,180)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(2L));
  searchResponse=client().prepareSearch().setQuery(geoBoundingBoxQuery("location").setValidationMethod(GeoValidationMethod.COERCE).setCorners(90,-180,-90,180).type("indexed")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(2L));
  searchResponse=client().prepareSearch().setQuery(geoBoundingBoxQuery("location").setValidationMethod(GeoValidationMethod.COERCE).setCorners(50,0,-50,360)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(geoBoundingBoxQuery("location").setValidationMethod(GeoValidationMethod.COERCE).setCorners(50,0,-50,360).type("indexed")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch().setQuery(geoBoundingBoxQuery("location").setValidationMethod(GeoValidationMethod.COERCE).setCorners(90,0,-90,360)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(2L));
  searchResponse=client().prepareSearch().setQuery(geoBoundingBoxQuery("location").setValidationMethod(GeoValidationMethod.COERCE).setCorners(90,0,-90,360).type("indexed")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(2L));
}
