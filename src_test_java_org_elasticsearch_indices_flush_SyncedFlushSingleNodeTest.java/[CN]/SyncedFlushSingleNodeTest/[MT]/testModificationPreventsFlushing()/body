{
  createIndex("test");
  client().prepareIndex("test","test","1").setSource("{}").get();
  IndexService test=getInstanceFromNode(IndicesService.class).indexService("test");
  IndexShard shard=test.shard(0);
  SyncedFlushService flushService=getInstanceFromNode(SyncedFlushService.class);
  final ShardId shardId=shard.shardId();
  final ClusterState state=getInstanceFromNode(ClusterService.class).state();
  final IndexShardRoutingTable shardRoutingTable=flushService.getShardRoutingTable(shardId,state);
  final List<ShardRouting> activeShards=shardRoutingTable.activeShards();
  assertEquals("exactly one active shard",1,activeShards.size());
  Map<String,Engine.CommitId> commitIds=SyncedFlushUtil.sendPreSyncRequests(flushService,activeShards,state,shardId);
  assertEquals("exactly one commit id",1,commitIds.size());
  client().prepareIndex("test","test","2").setSource("{}").get();
  String syncId=Strings.base64UUID();
  SyncedFlushUtil.LatchedListener<ShardsSyncedFlushResult> listener=new SyncedFlushUtil.LatchedListener<>();
  flushService.sendSyncRequests(syncId,activeShards,state,commitIds,shardId,shardRoutingTable.size(),listener);
  listener.latch.await();
  assertNull(listener.error);
  ShardsSyncedFlushResult syncedFlushResult=listener.result;
  assertNotNull(syncedFlushResult);
  assertEquals(0,syncedFlushResult.successfulShards());
  assertEquals(1,syncedFlushResult.totalShards());
  assertEquals(syncId,syncedFlushResult.syncId());
  assertNotNull(syncedFlushResult.shardResponses().get(activeShards.get(0)));
  assertFalse(syncedFlushResult.shardResponses().get(activeShards.get(0)).success());
  assertEquals("pending operations",syncedFlushResult.shardResponses().get(activeShards.get(0)).failureReason());
  SyncedFlushUtil.sendPreSyncRequests(flushService,activeShards,state,shardId);
  listener=new SyncedFlushUtil.LatchedListener();
  flushService.sendSyncRequests(syncId,activeShards,state,commitIds,shardId,shardRoutingTable.size(),listener);
  listener.latch.await();
  assertNull(listener.error);
  syncedFlushResult=listener.result;
  assertNotNull(syncedFlushResult);
  assertEquals(0,syncedFlushResult.successfulShards());
  assertEquals(1,syncedFlushResult.totalShards());
  assertEquals(syncId,syncedFlushResult.syncId());
  assertNotNull(syncedFlushResult.shardResponses().get(activeShards.get(0)));
  assertFalse(syncedFlushResult.shardResponses().get(activeShards.get(0)).success());
  assertEquals("commit has changed",syncedFlushResult.shardResponses().get(activeShards.get(0)).failureReason());
}
