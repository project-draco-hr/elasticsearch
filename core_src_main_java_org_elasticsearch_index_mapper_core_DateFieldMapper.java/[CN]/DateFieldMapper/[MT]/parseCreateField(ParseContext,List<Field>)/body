{
  String dateAsString;
  if (context.externalValueSet()) {
    Object dateAsObject=context.externalValue();
    if (dateAsObject == null) {
      dateAsString=null;
    }
 else {
      dateAsString=dateAsObject.toString();
    }
  }
 else {
    dateAsString=context.parser().text();
  }
  if (dateAsString == null) {
    dateAsString=fieldType().nullValueAsString();
  }
  if (dateAsString == null) {
    return;
  }
  long timestamp;
  try {
    timestamp=fieldType().parse(dateAsString);
  }
 catch (  IllegalArgumentException e) {
    if (ignoreMalformed.value()) {
      return;
    }
 else {
      throw e;
    }
  }
  if (context.includeInAll(includeInAll,this)) {
    context.allEntries().addText(fieldType().name(),dateAsString,fieldType().boost());
  }
  if (fieldType().indexOptions() != IndexOptions.NONE) {
    fields.add(new LongPoint(fieldType().name(),timestamp));
  }
  if (fieldType().hasDocValues()) {
    fields.add(new SortedNumericDocValuesField(fieldType().name(),timestamp));
  }
  if (fieldType().stored()) {
    fields.add(new StoredField(fieldType().name(),timestamp));
  }
}
