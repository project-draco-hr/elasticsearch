{
  builder.startObject("nodes");
  for (  NodeInfo nodeInfo : getNodes()) {
    builder.startObject(nodeInfo.getNode().getId());
    builder.field("name",nodeInfo.getNode().getName());
    builder.field("transport_address",nodeInfo.getNode().getAddress().toString());
    builder.field("host",nodeInfo.getNode().getHostName());
    builder.field("ip",nodeInfo.getNode().getHostAddress());
    builder.field("version",nodeInfo.getVersion());
    builder.field("build_hash",nodeInfo.getBuild().shortHash());
    if (nodeInfo.getTotalIndexingBuffer() != null) {
      builder.byteSizeField("total_indexing_buffer","total_indexing_buffer_in_bytes",nodeInfo.getTotalIndexingBuffer());
    }
    if (nodeInfo.getServiceAttributes() != null) {
      for (      Map.Entry<String,String> nodeAttribute : nodeInfo.getServiceAttributes().entrySet()) {
        builder.field(nodeAttribute.getKey(),nodeAttribute.getValue());
      }
    }
    builder.startArray("roles");
    for (    DiscoveryNode.Role role : nodeInfo.getNode().getRoles()) {
      builder.value(role.getRoleName());
    }
    builder.endArray();
    if (!nodeInfo.getNode().getAttributes().isEmpty()) {
      builder.startObject("attributes");
      for (      Map.Entry<String,String> entry : nodeInfo.getNode().getAttributes().entrySet()) {
        builder.field(entry.getKey(),entry.getValue());
      }
      builder.endObject();
    }
    if (nodeInfo.getSettings() != null) {
      builder.startObject("settings");
      Settings settings=nodeInfo.getSettings();
      settings.toXContent(builder,params);
      builder.endObject();
    }
    if (nodeInfo.getOs() != null) {
      nodeInfo.getOs().toXContent(builder,params);
    }
    if (nodeInfo.getProcess() != null) {
      nodeInfo.getProcess().toXContent(builder,params);
    }
    if (nodeInfo.getJvm() != null) {
      nodeInfo.getJvm().toXContent(builder,params);
    }
    if (nodeInfo.getThreadPool() != null) {
      nodeInfo.getThreadPool().toXContent(builder,params);
    }
    if (nodeInfo.getTransport() != null) {
      nodeInfo.getTransport().toXContent(builder,params);
    }
    if (nodeInfo.getHttp() != null) {
      nodeInfo.getHttp().toXContent(builder,params);
    }
    if (nodeInfo.getPlugins() != null) {
      nodeInfo.getPlugins().toXContent(builder,params);
    }
    if (nodeInfo.getIngest() != null) {
      nodeInfo.getIngest().toXContent(builder,params);
    }
    builder.endObject();
  }
  builder.endObject();
  return builder;
}
