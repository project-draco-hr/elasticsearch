{
  block.lastSource=lastSource;
  block.inLoop=inLoop;
  block.lastLoop=lastLoop;
  variables.incrementScope();
  block.analyze(variables);
  variables.decrementScope();
  methodEscape=block.methodEscape;
  loopEscape=block.loopEscape;
  allEscape=block.allEscape;
  anyContinue=block.anyContinue;
  anyBreak=block.anyBreak;
  int statementCount=0;
  for (  final STrap trap : traps) {
    trap.lastSource=lastSource;
    trap.inLoop=inLoop;
    trap.lastLoop=lastLoop;
    variables.incrementScope();
    trap.analyze(variables);
    variables.decrementScope();
    methodEscape&=trap.methodEscape;
    loopEscape&=trap.loopEscape;
    allEscape&=trap.allEscape;
    anyContinue|=trap.anyContinue;
    anyBreak|=trap.anyBreak;
    statementCount=Math.max(statementCount,trap.statementCount);
  }
  this.statementCount=block.statementCount + statementCount;
}
