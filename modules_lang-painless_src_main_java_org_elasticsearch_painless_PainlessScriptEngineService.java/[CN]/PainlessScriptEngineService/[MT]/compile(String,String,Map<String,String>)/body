{
  final CompilerSettings compilerSettings;
  if (params.isEmpty()) {
    compilerSettings=DEFAULT_COMPILER_SETTINGS;
  }
 else {
    compilerSettings=new CompilerSettings();
    Map<String,String> copy=new HashMap<>(params);
    String value=copy.remove(CompilerSettings.MAX_LOOP_COUNTER);
    if (value != null) {
      compilerSettings.setMaxLoopCounter(Integer.parseInt(value));
    }
    value=copy.remove(CompilerSettings.PICKY);
    if (value != null) {
      compilerSettings.setPicky(Boolean.parseBoolean(value));
    }
    value=copy.remove(CompilerSettings.INITIAL_CALL_SITE_DEPTH);
    if (value != null) {
      compilerSettings.setInitialCallSiteDepth(Integer.parseInt(value));
    }
    if (!copy.isEmpty()) {
      throw new IllegalArgumentException("Unrecognized compile-time parameter(s): " + copy);
    }
  }
  final SecurityManager sm=System.getSecurityManager();
  if (sm != null) {
    sm.checkPermission(new SpecialPermission());
  }
  final Loader loader=AccessController.doPrivileged(new PrivilegedAction<Loader>(){
    @Override public Loader run(){
      return new Loader(getClass().getClassLoader());
    }
  }
);
  try {
    return AccessController.doPrivileged(new PrivilegedAction<Executable>(){
      @Override public Executable run(){
        return Compiler.compile(loader,scriptName == null ? INLINE_NAME : scriptName,scriptSource,compilerSettings);
      }
    }
,COMPILATION_CONTEXT);
  }
 catch (  OutOfMemoryError|StackOverflowError|Exception e) {
    throw convertToScriptException(scriptName == null ? scriptSource : scriptName,scriptSource,e);
  }
}
