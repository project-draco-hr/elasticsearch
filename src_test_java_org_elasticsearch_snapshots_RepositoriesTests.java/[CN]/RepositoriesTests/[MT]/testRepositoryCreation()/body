{
  Client client=client();
  logger.info("-->  creating repository");
  PutRepositoryResponse putRepositoryResponse=run(client.admin().cluster().preparePutRepository("test-repo-1").setType("fs").setSettings(ImmutableSettings.settingsBuilder().put("location",newTempDir(LifecycleScope.SUITE))));
  assertThat(putRepositoryResponse.isAcknowledged(),equalTo(true));
  logger.info("--> check that repository is really there");
  ClusterStateResponse clusterStateResponse=run(client.admin().cluster().prepareState().setFilterAll().setFilterMetaData(false));
  MetaData metaData=clusterStateResponse.getState().getMetaData();
  RepositoriesMetaData repositoriesMetaData=metaData.custom(RepositoriesMetaData.TYPE);
  assertThat(repositoriesMetaData,notNullValue());
  assertThat(repositoriesMetaData.repository("test-repo-1"),notNullValue());
  assertThat(repositoriesMetaData.repository("test-repo-1").type(),equalTo("fs"));
  logger.info("-->  creating anoter repository");
  putRepositoryResponse=run(client.admin().cluster().preparePutRepository("test-repo-2").setType("fs").setSettings(ImmutableSettings.settingsBuilder().put("location",newTempDir(LifecycleScope.SUITE))));
  assertThat(putRepositoryResponse.isAcknowledged(),equalTo(true));
  logger.info("--> check that both repositories are in cluster state");
  clusterStateResponse=run(client.admin().cluster().prepareState().setFilterAll().setFilterMetaData(false));
  metaData=clusterStateResponse.getState().getMetaData();
  repositoriesMetaData=metaData.custom(RepositoriesMetaData.TYPE);
  assertThat(repositoriesMetaData,notNullValue());
  assertThat(repositoriesMetaData.repositories().size(),equalTo(2));
  assertThat(repositoriesMetaData.repository("test-repo-1"),notNullValue());
  assertThat(repositoriesMetaData.repository("test-repo-1").type(),equalTo("fs"));
  assertThat(repositoriesMetaData.repository("test-repo-2"),notNullValue());
  assertThat(repositoriesMetaData.repository("test-repo-2").type(),equalTo("fs"));
  logger.info("--> check that both repositories can be retrieved by getRepositories query");
  GetRepositoriesResponse repositoriesResponse=run(client.admin().cluster().prepareGetRepositories());
  assertThat(repositoriesResponse.repositories().size(),equalTo(2));
  assertThat(findRepository(repositoriesResponse.repositories(),"test-repo-1"),notNullValue());
  assertThat(findRepository(repositoriesResponse.repositories(),"test-repo-2"),notNullValue());
  logger.info("--> delete repository test-repo-1");
  run(client.admin().cluster().prepareDeleteRepository("test-repo-1"));
  repositoriesResponse=run(client.admin().cluster().prepareGetRepositories());
  assertThat(repositoriesResponse.repositories().size(),equalTo(1));
  assertThat(findRepository(repositoriesResponse.repositories(),"test-repo-2"),notNullValue());
  logger.info("--> delete repository test-repo-2");
  run(client.admin().cluster().prepareDeleteRepository("test-repo-2"));
  repositoriesResponse=run(client.admin().cluster().prepareGetRepositories());
  assertThat(repositoriesResponse.repositories().size(),equalTo(0));
}
