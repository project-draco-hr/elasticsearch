{
  logger.info("-->  creating repository test-repo-1 with 0s timeout - shouldn't ack");
  PutRepositoryResponse putRepositoryResponse=client().admin().cluster().preparePutRepository("test-repo-1").setType("fs").setSettings(Settings.settingsBuilder().put("location",randomRepoPath()).put("compress",randomBoolean()).put("chunk_size",randomIntBetween(5,100),ByteSizeUnit.BYTES)).setTimeout("0s").get();
  assertThat(putRepositoryResponse.isAcknowledged(),equalTo(false));
  logger.info("-->  creating repository test-repo-2 with standard timeout - should ack");
  putRepositoryResponse=client().admin().cluster().preparePutRepository("test-repo-2").setType("fs").setSettings(Settings.settingsBuilder().put("location",randomRepoPath()).put("compress",randomBoolean()).put("chunk_size",randomIntBetween(5,100),ByteSizeUnit.BYTES)).get();
  assertThat(putRepositoryResponse.isAcknowledged(),equalTo(true));
  logger.info("-->  deleting repository test-repo-2 with 0s timeout - shouldn't ack");
  DeleteRepositoryResponse deleteRepositoryResponse=client().admin().cluster().prepareDeleteRepository("test-repo-2").setTimeout("0s").get();
  assertThat(deleteRepositoryResponse.isAcknowledged(),equalTo(false));
  logger.info("-->  deleting repository test-repo-1 with standard timeout - should ack");
  deleteRepositoryResponse=client().admin().cluster().prepareDeleteRepository("test-repo-1").get();
  assertThat(deleteRepositoryResponse.isAcknowledged(),equalTo(true));
}
