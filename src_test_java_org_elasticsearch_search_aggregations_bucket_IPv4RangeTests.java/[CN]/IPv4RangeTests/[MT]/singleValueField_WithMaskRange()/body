{
  SearchResponse response=client().prepareSearch("idx").addAggregation(ipRange("range").field("ip").addMaskRange("10.0.0.0/25").addMaskRange("10.0.0.128/25")).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  IPv4Range range=response.getAggregations().get("range");
  assertThat(range,notNullValue());
  assertThat(range.getName(),equalTo("range"));
  assertThat(range.buckets().size(),equalTo(2));
  IPv4Range.Bucket bucket=range.getByKey("10.0.0.0/25");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("10.0.0.0/25"));
  assertThat(bucket.getFrom(),equalTo((double)IpFieldMapper.ipToLong("10.0.0.0")));
  assertThat(bucket.getFromAsString(),equalTo("10.0.0.0"));
  assertThat(bucket.getTo(),equalTo((double)IpFieldMapper.ipToLong("10.0.0.128")));
  assertThat(bucket.getToAsString(),equalTo("10.0.0.128"));
  assertThat(bucket.getDocCount(),equalTo(128l));
  bucket=range.getByKey("10.0.0.128/25");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("10.0.0.128/25"));
  assertThat((long)bucket.getFrom(),equalTo(IpFieldMapper.ipToLong("10.0.0.128")));
  assertThat(bucket.getFromAsString(),equalTo("10.0.0.128"));
  assertThat((long)bucket.getTo(),equalTo(IpFieldMapper.ipToLong("10.0.1.0")));
  assertThat(bucket.getToAsString(),equalTo("10.0.1.0"));
  assertThat(bucket.getDocCount(),equalTo(127l));
}
