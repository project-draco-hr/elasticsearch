{
  if (this.connections.isEmpty()) {
    throw new IllegalStateException("no connections available");
  }
  List<Connection> rotatedConnections=new ArrayList<>(connections);
  Collections.rotate(rotatedConnections,rotatedConnections.size() - lastConnectionIndex.getAndIncrement());
  Iterator<Connection> connectionIterator=rotatedConnections.iterator();
  while (connectionIterator.hasNext()) {
    Connection connection=connectionIterator.next();
    if (connection.isBlacklisted()) {
      connectionIterator.remove();
    }
  }
  if (rotatedConnections.isEmpty()) {
    List<Connection> sortedConnections=new ArrayList<>(connections);
    Collections.sort(sortedConnections,new Comparator<Connection>(){
      @Override public int compare(      Connection o1,      Connection o2){
        return Long.compare(o1.getDeadUntil(),o2.getDeadUntil());
      }
    }
);
    Connection connection=sortedConnections.get(0);
    logger.trace("trying to resurrect connection for " + connection.getHost());
    return Collections.singleton(connection).iterator();
  }
  return rotatedConnections.iterator();
}
