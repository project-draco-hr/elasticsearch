{
  final RestClientFactory restClientFactory=new RestClientFactory(null);
  int iterations=randomIntBetween(1,5);
  Set<String> headers=new HashSet<>();
  ExecutorService executorService=Executors.newFixedThreadPool(iterations);
  for (int i=0; i < iterations; i++) {
    int headersCount=randomInt(10);
    final Set<String> newHeaders=new HashSet<>();
    for (int j=0; j < headersCount; j++) {
      String usefulHeader=randomRealisticUnicodeOfLengthBetween(1,30);
      newHeaders.add(usefulHeader);
    }
    headers.addAll(newHeaders);
    executorService.submit(new Runnable(){
      @Override public void run(){
        restClientFactory.addRelevantHeaders(newHeaders.toArray(new String[newHeaders.size()]));
      }
    }
);
  }
  executorService.shutdown();
  assertThat(executorService.awaitTermination(1,TimeUnit.SECONDS),equalTo(true));
  String[] relevantHeaders=restClientFactory.relevantHeaders().toArray(new String[restClientFactory.relevantHeaders().size()]);
  assertThat(relevantHeaders.length,equalTo(headers.size()));
  Arrays.sort(relevantHeaders);
  String[] headersArray=new String[headers.size()];
  headersArray=headers.toArray(headersArray);
  Arrays.sort(headersArray);
  assertThat(relevantHeaders,equalTo(headersArray));
}
