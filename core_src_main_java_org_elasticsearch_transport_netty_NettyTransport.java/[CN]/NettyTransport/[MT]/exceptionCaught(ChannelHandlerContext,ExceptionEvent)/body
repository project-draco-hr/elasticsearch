{
  if (!lifecycle.started()) {
    return;
  }
  if (isCloseConnectionException(e.getCause())) {
    logger.trace("close connection exception caught on transport layer [{}], disconnecting from relevant node",e.getCause(),ctx.getChannel());
    ctx.getChannel().close();
    disconnectFromNodeChannel(ctx.getChannel(),e.getCause());
  }
 else   if (isConnectException(e.getCause())) {
    logger.trace("connect exception caught on transport layer [{}]",e.getCause(),ctx.getChannel());
    ctx.getChannel().close();
    disconnectFromNodeChannel(ctx.getChannel(),e.getCause());
  }
 else   if (e.getCause() instanceof CancelledKeyException) {
    logger.trace("cancelled key exception caught on transport layer [{}], disconnecting from relevant node",e.getCause(),ctx.getChannel());
    ctx.getChannel().close();
    disconnectFromNodeChannel(ctx.getChannel(),e.getCause());
  }
 else   if (e.getCause() instanceof SizeHeaderFrameDecoder.HttpOnTransportException) {
    if (ctx.getChannel().isOpen()) {
      ChannelBuffer buffer=ChannelBuffers.wrappedBuffer(e.getCause().getMessage().getBytes(StandardCharsets.UTF_8));
      ChannelFuture channelFuture=ctx.getChannel().write(buffer);
      channelFuture.addListener(new ChannelFutureListener(){
        @Override public void operationComplete(        ChannelFuture future) throws Exception {
          future.getChannel().close();
        }
      }
);
    }
  }
 else {
    logger.warn("exception caught on transport layer [{}], closing connection",e.getCause(),ctx.getChannel());
    ctx.getChannel().close();
    disconnectFromNodeChannel(ctx.getChannel(),e.getCause());
  }
}
