{
  Settings.Builder fallbackSettingsBuilder=settingsBuilder();
  String fallbackBindHost=settings.get("transport.netty.bind_host",settings.get("transport.bind_host",settings.get("transport.host")));
  if (fallbackBindHost != null) {
    fallbackSettingsBuilder.put("bind_host",fallbackBindHost);
  }
  String fallbackPublishHost=settings.get("transport.netty.publish_host",settings.get("transport.publish_host",settings.get("transport.host")));
  if (fallbackPublishHost != null) {
    fallbackSettingsBuilder.put("publish_host",fallbackPublishHost);
  }
  boolean fallbackTcpNoDelay=settings.getAsBoolean("transport.netty.tcp_no_delay",TCP_NO_DELAY.get(settings));
  fallbackSettingsBuilder.put("tcp_no_delay",fallbackTcpNoDelay);
  boolean fallbackTcpKeepAlive=settings.getAsBoolean("transport.netty.tcp_keep_alive",TCP_KEEP_ALIVE.get(settings));
  fallbackSettingsBuilder.put("tcp_keep_alive",fallbackTcpKeepAlive);
  boolean fallbackReuseAddress=settings.getAsBoolean("transport.netty.reuse_address",TCP_REUSE_ADDRESS.get(settings));
  fallbackSettingsBuilder.put("reuse_address",fallbackReuseAddress);
  ByteSizeValue fallbackTcpSendBufferSize=settings.getAsBytesSize("transport.netty.tcp_send_buffer_size",TCP_SEND_BUFFER_SIZE.get(settings));
  if (fallbackTcpSendBufferSize.bytes() >= 0) {
    fallbackSettingsBuilder.put("tcp_send_buffer_size",fallbackTcpSendBufferSize);
  }
  ByteSizeValue fallbackTcpBufferSize=settings.getAsBytesSize("transport.netty.tcp_receive_buffer_size",TCP_RECEIVE_BUFFER_SIZE.get(settings));
  if (fallbackTcpBufferSize.bytes() >= 0) {
    fallbackSettingsBuilder.put("tcp_receive_buffer_size",fallbackTcpBufferSize);
  }
  return fallbackSettingsBuilder.build();
}
