{
  super.writeTo(out);
  out.writeString(index);
  out.writeString(type);
  out.writeString(id);
  if (fields == null) {
    out.writeVInt(0);
  }
 else {
    out.writeVInt(fields.length);
    for (    String field : fields) {
      out.writeString(field);
    }
  }
  out.writeFloat(percentTermsToMatch);
  out.writeVInt(minTermFreq);
  out.writeVInt(maxQueryTerms);
  if (stopWords == null) {
    out.writeVInt(0);
  }
 else {
    out.writeVInt(stopWords.length);
    for (    String stopWord : stopWords) {
      out.writeString(stopWord);
    }
  }
  out.writeVInt(minDocFreq);
  out.writeVInt(maxDocFreq);
  out.writeVInt(minWordLen);
  out.writeVInt(maxWordLen);
  out.writeFloat(boostTerms);
  out.writeByte(searchType.id());
  if (searchQueryHint == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    out.writeString(searchQueryHint);
  }
  if (searchIndices == null) {
    out.writeVInt(0);
  }
 else {
    out.writeVInt(searchIndices.length + 1);
    for (    String index : searchIndices) {
      out.writeString(index);
    }
  }
  if (searchTypes == null) {
    out.writeVInt(0);
  }
 else {
    out.writeVInt(searchTypes.length + 1);
    for (    String type : searchTypes) {
      out.writeString(type);
    }
  }
  if (searchScroll == null) {
    out.writeBoolean(false);
  }
 else {
    out.writeBoolean(true);
    searchScroll.writeTo(out);
  }
  out.writeBytesReference(searchSource);
  out.writeVInt(searchSize);
  out.writeVInt(searchFrom);
}
