{
  assertFalse(VersionType.INTERNAL.isVersionConflictForWrites(10,Versions.MATCH_ANY,randomBoolean()));
  assertFalse(VersionType.INTERNAL.isVersionConflictForReads(10,Versions.MATCH_ANY));
  assertTrue(VersionType.INTERNAL.isVersionConflictForWrites(Versions.NOT_FOUND,10,randomBoolean()));
  assertTrue(VersionType.INTERNAL.isVersionConflictForReads(Versions.NOT_FOUND,10));
  assertFalse(VersionType.INTERNAL.isVersionConflictForWrites(Versions.NOT_FOUND,Versions.MATCH_ANY,randomBoolean()));
  assertFalse(VersionType.INTERNAL.isVersionConflictForReads(Versions.NOT_FOUND,Versions.MATCH_ANY));
  assertFalse(VersionType.INTERNAL.isVersionConflictForWrites(Versions.NOT_FOUND,Versions.MATCH_DELETED,true));
  assertFalse(VersionType.INTERNAL.isVersionConflictForWrites(10,Versions.MATCH_DELETED,true));
  assertFalse(VersionType.INTERNAL.isVersionConflictForWrites(10,10,randomBoolean()));
  assertFalse(VersionType.INTERNAL.isVersionConflictForReads(10,10));
  assertTrue(VersionType.INTERNAL.isVersionConflictForWrites(9,10,randomBoolean()));
  assertTrue(VersionType.INTERNAL.isVersionConflictForReads(9,10));
  assertTrue(VersionType.INTERNAL.isVersionConflictForWrites(10,9,randomBoolean()));
  assertTrue(VersionType.INTERNAL.isVersionConflictForReads(10,9));
}
