{
  assertFalse(VersionType.EXTERNAL_GTE.isVersionConflictForWrites(Versions.NOT_FOUND,10,randomBoolean()));
  assertFalse(VersionType.EXTERNAL_GTE.isVersionConflictForWrites(Versions.NOT_SET,10,randomBoolean()));
  assertTrue(VersionType.EXTERNAL_GTE.isVersionConflictForWrites(10,Versions.MATCH_ANY,randomBoolean()));
  assertFalse(VersionType.EXTERNAL_GTE.isVersionConflictForWrites(Versions.NOT_FOUND,Versions.NOT_FOUND,randomBoolean()));
  assertFalse(VersionType.EXTERNAL_GTE.isVersionConflictForWrites(Versions.NOT_FOUND,10,randomBoolean()));
  assertTrue(VersionType.EXTERNAL_GTE.isVersionConflictForReads(Versions.NOT_FOUND,Versions.NOT_FOUND));
  assertTrue(VersionType.EXTERNAL_GTE.isVersionConflictForReads(Versions.NOT_FOUND,10));
  assertFalse(VersionType.EXTERNAL_GTE.isVersionConflictForReads(Versions.NOT_FOUND,Versions.MATCH_ANY));
  assertFalse(VersionType.EXTERNAL_GTE.isVersionConflictForWrites(10,10,randomBoolean()));
  assertFalse(VersionType.EXTERNAL_GTE.isVersionConflictForWrites(9,10,randomBoolean()));
  assertTrue(VersionType.EXTERNAL_GTE.isVersionConflictForWrites(10,9,randomBoolean()));
  assertFalse(VersionType.EXTERNAL_GTE.isVersionConflictForReads(10,10));
  assertTrue(VersionType.EXTERNAL_GTE.isVersionConflictForReads(9,10));
  assertTrue(VersionType.EXTERNAL_GTE.isVersionConflictForReads(10,9));
  assertFalse(VersionType.EXTERNAL_GTE.isVersionConflictForReads(10,Versions.MATCH_ANY));
}
