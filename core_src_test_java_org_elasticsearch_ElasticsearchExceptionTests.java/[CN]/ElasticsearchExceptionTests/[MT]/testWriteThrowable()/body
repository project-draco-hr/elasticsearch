{
  Throwable[] causes=new Throwable[]{new IllegalStateException("foobar"),new IllegalArgumentException("alalaal"),new NullPointerException("boom"),new EOFException("dadada"),new SecurityException("nono!"),new NumberFormatException("not a number"),new CorruptIndexException("baaaam","this is my resource"),new IndexFormatTooNewException("tooo new",1,1,1),new IndexFormatTooOldException("tooo new",1,1,1),new ArrayIndexOutOfBoundsException("booom"),new StringIndexOutOfBoundsException("booom"),new FileNotFoundException("booom"),new NoSuchFileException("booom"),new AssertionError("booom",new NullPointerException()),new OutOfMemoryError("no memory left"),new AlreadyClosedException("closed!!",new NullPointerException()),new LockObtainFailedException("can't lock directory",new NullPointerException()),new Throwable("this exception is unknown",new QueryParsingException(new Index("foo"),1,2,"foobar",null))};
  for (  Throwable t : causes) {
    BytesStreamOutput out=new BytesStreamOutput();
    ElasticsearchException ex=new ElasticsearchException("topLevel",t);
    out.writeThrowable(ex);
    StreamInput in=StreamInput.wrap(out.bytes());
    ElasticsearchException e=in.readThrowable();
    assertEquals(e.getMessage(),ex.getMessage());
    if (t instanceof IndexFormatTooNewException || t instanceof IndexFormatTooOldException) {
      assertNotEquals(e.getCause().getMessage(),ex.getCause().getMessage());
    }
 else {
      assertEquals(ex.getCause().getClass().getName(),e.getCause().getMessage(),ex.getCause().getMessage());
    }
    assertEquals(e.getCause().getClass(),e.getCause().getClass());
    assertArrayEquals(e.getStackTrace(),ex.getStackTrace());
    assertTrue(e.getStackTrace().length > 1);
  }
}
