{
  JsonParser jp=parseContext.jp();
  float boost=1.0f;
  SpanQuery match=null;
  int end=-1;
  String currentFieldName=null;
  JsonToken token;
  while ((token=jp.nextToken()) != JsonToken.END_OBJECT) {
    if (token == JsonToken.FIELD_NAME) {
      currentFieldName=jp.getCurrentName();
    }
 else     if (token == JsonToken.START_OBJECT) {
      if ("match".equals(currentFieldName)) {
        Query query=parseContext.parseInnerQuery();
        if (!(query instanceof SpanQuery)) {
          throw new QueryParsingException(index,"spanFirst [match] must be of type span query");
        }
        match=(SpanQuery)query;
      }
    }
 else {
      if ("boost".equals(currentFieldName)) {
        if (token == JsonToken.VALUE_STRING) {
          boost=Float.parseFloat(jp.getText());
        }
 else {
          boost=jp.getFloatValue();
        }
      }
 else       if ("end".equals(currentFieldName)) {
        if (token == JsonToken.VALUE_STRING) {
          end=Integer.parseInt(jp.getText());
        }
 else {
          end=jp.getIntValue();
        }
      }
    }
  }
  if (match == null) {
    throw new QueryParsingException(index,"spanFirst must have [match] span query clause");
  }
  if (end == -1) {
    throw new QueryParsingException(index,"spanFirst must have [end] set for it");
  }
  SpanFirstQuery query=new SpanFirstQuery(match,end);
  query.setBoost(boost);
  return query;
}
