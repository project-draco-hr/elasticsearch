{
  if ((outputIndex + 32) > out.length) {
    System.arraycopy(in,inputIndex,out,outputIndex,lengthMinusOne + 1);
    return;
  }
  long inPtr=BYTE_ARRAY_OFFSET + inputIndex;
  long outPtr=BYTE_ARRAY_OFFSET + outputIndex;
switch (lengthMinusOne >>> 3) {
case 3:
{
      long value=unsafe.getLong(in,inPtr);
      unsafe.putLong(out,outPtr,value);
      inPtr+=8;
      outPtr+=8;
      value=unsafe.getLong(in,inPtr);
      unsafe.putLong(out,outPtr,value);
      inPtr+=8;
      outPtr+=8;
      value=unsafe.getLong(in,inPtr);
      unsafe.putLong(out,outPtr,value);
      inPtr+=8;
      outPtr+=8;
      value=unsafe.getLong(in,inPtr);
      unsafe.putLong(out,outPtr,value);
    }
  break;
case 2:
{
  long value=unsafe.getLong(in,inPtr);
  unsafe.putLong(out,outPtr,value);
  inPtr+=8;
  outPtr+=8;
  value=unsafe.getLong(in,inPtr);
  unsafe.putLong(out,outPtr,value);
  inPtr+=8;
  outPtr+=8;
  value=unsafe.getLong(in,inPtr);
  unsafe.putLong(out,outPtr,value);
}
break;
case 1:
{
long value=unsafe.getLong(in,inPtr);
unsafe.putLong(out,outPtr,value);
inPtr+=8;
outPtr+=8;
value=unsafe.getLong(in,inPtr);
unsafe.putLong(out,outPtr,value);
}
break;
case 0:
{
long value=unsafe.getLong(in,inPtr);
unsafe.putLong(out,outPtr,value);
}
}
}
