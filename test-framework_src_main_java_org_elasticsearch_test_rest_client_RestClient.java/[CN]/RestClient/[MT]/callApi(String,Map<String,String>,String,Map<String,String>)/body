{
  List<Integer> ignores=new ArrayList<>();
  Map<String,String> requestParams=null;
  if (params != null) {
    requestParams=new HashMap<>(params);
    String ignoreString=requestParams.remove("ignore");
    if (Strings.hasLength(ignoreString)) {
      try {
        ignores.add(Integer.valueOf(ignoreString));
      }
 catch (      NumberFormatException e) {
        throw new IllegalArgumentException("ignore value should be a number, found [" + ignoreString + "] instead");
      }
    }
  }
  HttpRequestBuilder httpRequestBuilder=callApiBuilder(apiName,requestParams,body);
  for (  Map.Entry<String,String> header : headers.entrySet()) {
    httpRequestBuilder.addHeader(header.getKey(),header.getValue());
  }
  logger.debug("calling api [{}]",apiName);
  HttpResponse httpResponse=httpRequestBuilder.execute();
  if (!httpResponse.supportsBody()) {
    ignores.add(404);
  }
  RestResponse restResponse=new RestResponse(httpResponse);
  checkStatusCode(restResponse,ignores);
  return restResponse;
}
