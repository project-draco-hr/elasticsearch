{
  boolean indexCreateApi="create".equals(apiName);
  String api=indexCreateApi ? "index" : apiName;
  RestApi restApi=restApi(api);
  HttpRequestBuilder httpRequestBuilder=httpRequestBuilder();
  Map<String,String> pathParts=new HashMap<>();
  if (params != null) {
    for (    Map.Entry<String,String> entry : params.entrySet()) {
      if (restApi.getPathParts().contains(entry.getKey())) {
        pathParts.put(entry.getKey(),entry.getValue());
      }
 else {
        if (restApi.getParams().contains(entry.getKey()) || ALWAYS_ACCEPTED_QUERY_STRING_PARAMS.contains(entry.getKey())) {
          httpRequestBuilder.addParam(entry.getKey(),entry.getValue());
        }
 else {
          throw new IllegalArgumentException("param [" + entry.getKey() + "] not supported in ["+ restApi.getName()+ "] api");
        }
      }
    }
  }
  if (indexCreateApi) {
    httpRequestBuilder.addParam("op_type","create");
  }
  List<String> supportedMethods=restApi.getSupportedMethods(pathParts.keySet());
  if (Strings.hasLength(body)) {
    if (!restApi.isBodySupported()) {
      throw new IllegalArgumentException("body is not supported by [" + restApi.getName() + "] api");
    }
    if (supportedMethods.contains("GET") && RandomizedTest.rarely()) {
      logger.debug("sending the request body as source param with GET method");
      httpRequestBuilder.addParam("source",body).method("GET");
    }
 else {
      httpRequestBuilder.body(body).method(RandomizedTest.randomFrom(supportedMethods));
    }
  }
 else {
    if (restApi.isBodyRequired()) {
      throw new IllegalArgumentException("body is required by [" + restApi.getName() + "] api");
    }
    httpRequestBuilder.method(RandomizedTest.randomFrom(supportedMethods));
  }
  RestPath restPath=RandomizedTest.randomFrom(restApi.getFinalPaths(pathParts));
  return httpRequestBuilder.pathParts(restPath.getPathParts());
}
