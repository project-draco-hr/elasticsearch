{
  List<BucketCollector> collectors=new ArrayList<>();
  List<BucketCollector> deferredCollectors=new ArrayList<>();
  for (int i=0; i < subAggregators.length; ++i) {
    if (shouldDefer(subAggregators[i])) {
      if (recordingWrapper == null) {
        recordingWrapper=getDeferringCollector();
      }
      deferredCollectors.add(subAggregators[i]);
      subAggregators[i]=recordingWrapper.wrap(subAggregators[i]);
    }
 else {
      collectors.add(subAggregators[i]);
    }
  }
  if (recordingWrapper != null) {
    recordingWrapper.setDeferredCollector(deferredCollectors);
    collectors.add(recordingWrapper);
  }
  collectableSubAggregators=BucketCollector.wrap(collectors);
  doPreCollection();
  collectableSubAggregators.preCollection();
}
