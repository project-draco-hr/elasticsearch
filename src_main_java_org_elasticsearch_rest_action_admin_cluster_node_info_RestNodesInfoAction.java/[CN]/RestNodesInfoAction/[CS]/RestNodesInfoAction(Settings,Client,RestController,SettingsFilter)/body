{
  super(settings,client);
  controller.registerHandler(RestRequest.Method.GET,"/_cluster/nodes",this);
  controller.registerHandler(RestRequest.Method.GET,"/_cluster/nodes/{nodeId}",this);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes",this);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}",this);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/settings",new RestSettingsHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/settings",new RestSettingsHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/os",new RestOsHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/os",new RestOsHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/process",new RestProcessHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/process",new RestProcessHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/jvm",new RestJvmHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/jvm",new RestJvmHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/thread_pool",new RestThreadPoolHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/thread_pool",new RestThreadPoolHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/network",new RestNetworkHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/network",new RestNetworkHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/transport",new RestTransportHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/transport",new RestTransportHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/http",new RestHttpHandler());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/http",new RestHttpHandler());
  this.settingsFilter=settingsFilter;
}
