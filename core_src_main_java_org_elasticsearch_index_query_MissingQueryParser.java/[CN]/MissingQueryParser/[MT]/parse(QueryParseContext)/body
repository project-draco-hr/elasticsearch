{
  XContentParser parser=parseContext.parser();
  String fieldPattern=null;
  String queryName=null;
  boolean nullValue=DEFAULT_NULL_VALUE;
  boolean existence=DEFAULT_EXISTENCE_VALUE;
  XContentParser.Token token;
  String currentFieldName=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token.isValue()) {
      if ("field".equals(currentFieldName)) {
        fieldPattern=parser.text();
      }
 else       if ("null_value".equals(currentFieldName)) {
        nullValue=parser.booleanValue();
      }
 else       if ("existence".equals(currentFieldName)) {
        existence=parser.booleanValue();
      }
 else       if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else {
        throw new QueryParsingException(parseContext,"[missing] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (fieldPattern == null) {
    throw new QueryParsingException(parseContext,"missing must be provided with a [field]");
  }
  return newFilter(parseContext,fieldPattern,existence,nullValue,queryName);
}
