{
  assertAcked(prepareCreate(INDEX_NAME).addMapping("type1","field1","type=text").addMapping(TYPE_NAME,"query","type=percolator"));
  ensureGreen();
  logger.info("--> register a query 1");
  client().prepareIndex(INDEX_NAME,TYPE_NAME,"kuku").setSource(jsonBuilder().startObject().field("color","blue").field("query",termQuery("field1","value1")).endObject()).setRefresh(true).execute().actionGet();
  PercolateResponse percolate=preparePercolate(client()).setIndices(INDEX_NAME).setDocumentType("type1").setSource(jsonBuilder().startObject().startObject("doc").field("field1","value1").endObject().endObject()).execute().actionGet();
  assertMatchCount(percolate,1L);
  assertThat(percolate.getMatches(),arrayWithSize(1));
  assertThat(convertFromTextArray(percolate.getMatches(),INDEX_NAME),arrayContaining("kuku"));
  logger.info("--> register a query 2");
  client().prepareIndex(INDEX_NAME,TYPE_NAME,"bubu").setSource(jsonBuilder().startObject().field("color","green").field("query",termQuery("field1","value2")).endObject()).setRefresh(true).execute().actionGet();
  percolate=preparePercolate(client()).setIndices(INDEX_NAME).setDocumentType("type1").setSource(jsonBuilder().startObject().startObject("doc").field("field1","value2").endObject().endObject()).execute().actionGet();
  assertMatchCount(percolate,1L);
  assertThat(percolate.getMatches(),arrayWithSize(1));
  assertThat(convertFromTextArray(percolate.getMatches(),INDEX_NAME),arrayContaining("bubu"));
  logger.info("--> register a query 3");
  client().prepareIndex(INDEX_NAME,TYPE_NAME,"susu").setSource(jsonBuilder().startObject().field("color","red").field("query",termQuery("field1","value2")).endObject()).setRefresh(true).execute().actionGet();
  PercolateSourceBuilder sourceBuilder=new PercolateSourceBuilder().setDoc(docBuilder().setDoc(jsonBuilder().startObject().field("field1","value2").endObject())).setQueryBuilder(termQuery("color","red"));
  percolate=preparePercolate(client()).setIndices(INDEX_NAME).setDocumentType("type1").setSource(sourceBuilder).execute().actionGet();
  assertMatchCount(percolate,1L);
  assertThat(percolate.getMatches(),arrayWithSize(1));
  assertThat(convertFromTextArray(percolate.getMatches(),INDEX_NAME),arrayContaining("susu"));
  logger.info("--> deleting query 1");
  client().prepareDelete(INDEX_NAME,TYPE_NAME,"kuku").setRefresh(true).execute().actionGet();
  percolate=preparePercolate(client()).setIndices(INDEX_NAME).setDocumentType("type1").setSource(jsonBuilder().startObject().startObject("doc").startObject("type1").field("field1","value1").endObject().endObject().endObject()).execute().actionGet();
  assertMatchCount(percolate,0L);
  assertThat(percolate.getMatches(),emptyArray());
}
