{
  assertAcked(prepareCreate(INDEX_NAME).addMapping(TYPE_NAME,"query","type=percolator").addMapping("my-type","a","type=keyword").addAlias(new Alias("a").filter(QueryBuilders.termQuery("a","a"))).addAlias(new Alias("b").filter(QueryBuilders.termQuery("a","b"))).addAlias(new Alias("c").filter(QueryBuilders.termQuery("a","c"))));
  client().prepareIndex(INDEX_NAME,TYPE_NAME,"1").setSource(jsonBuilder().startObject().field("query",matchAllQuery()).field("a","a").endObject()).get();
  client().prepareIndex(INDEX_NAME,TYPE_NAME,"2").setSource(jsonBuilder().startObject().field("query",matchAllQuery()).field("a","b").endObject()).get();
  refresh();
  PercolateResponse response=preparePercolate(client()).setIndices("a").setDocumentType("my-type").setPercolateDoc(new PercolateSourceBuilder.DocBuilder().setDoc("{}")).get();
  assertNoFailures(response);
  assertThat(response.getCount(),equalTo(1L));
  assertThat(response.getMatches()[0].getId().string(),equalTo("1"));
  response=preparePercolate(client()).setIndices("b").setDocumentType("my-type").setPercolateDoc(new PercolateSourceBuilder.DocBuilder().setDoc("{}")).get();
  assertNoFailures(response);
  assertThat(response.getCount(),equalTo(1L));
  assertThat(response.getMatches()[0].getId().string(),equalTo("2"));
  response=preparePercolate(client()).setIndices("c").setDocumentType("my-type").setPercolateDoc(new PercolateSourceBuilder.DocBuilder().setDoc("{}")).get();
  assertNoFailures(response);
  assertThat(response.getCount(),equalTo(0L));
  response=preparePercolate(client()).setIndices("a").setDocumentType("my-type").setPercolateDoc(new PercolateSourceBuilder.DocBuilder().setDoc("{}")).setPercolateQuery(QueryBuilders.matchAllQuery()).get();
  assertNoFailures(response);
  assertThat(response.getCount(),equalTo(1L));
  assertThat(response.getMatches()[0].getId().string(),equalTo("1"));
  response=preparePercolate(client()).setIndices("b").setDocumentType("my-type").setPercolateDoc(new PercolateSourceBuilder.DocBuilder().setDoc("{}")).setPercolateQuery(QueryBuilders.matchAllQuery()).get();
  assertNoFailures(response);
  assertThat(response.getCount(),equalTo(1L));
  assertThat(response.getMatches()[0].getId().string(),equalTo("2"));
  response=preparePercolate(client()).setIndices("c").setDocumentType("my-type").setPercolateDoc(new PercolateSourceBuilder.DocBuilder().setDoc("{}")).setPercolateQuery(QueryBuilders.matchAllQuery()).get();
  assertNoFailures(response);
  assertThat(response.getCount(),equalTo(0L));
}
