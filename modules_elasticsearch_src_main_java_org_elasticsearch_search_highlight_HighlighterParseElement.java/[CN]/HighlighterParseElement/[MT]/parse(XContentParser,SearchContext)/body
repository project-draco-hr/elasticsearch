{
  XContentParser.Token token;
  String topLevelFieldName=null;
  List<SearchContextHighlight.ParsedHighlightField> fields=newArrayList();
  String[] globalPreTags=DEFAULT_PRE_TAGS;
  String[] globalPostTags=DEFAULT_POST_TAGS;
  boolean globalScoreOrdered=false;
  boolean globalHighlightFilter=true;
  int globalFragmentSize=100;
  int globalNumOfFragments=5;
  boolean globalFragmentsAllowed=true;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      topLevelFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if ("pre_tags".equals(topLevelFieldName) || "preTags".equals(topLevelFieldName)) {
        List<String> preTagsList=Lists.newArrayList();
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          preTagsList.add(parser.text());
        }
        globalPreTags=preTagsList.toArray(new String[preTagsList.size()]);
      }
 else       if ("post_tags".equals(topLevelFieldName) || "postTags".equals(topLevelFieldName)) {
        List<String> postTagsList=Lists.newArrayList();
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          postTagsList.add(parser.text());
        }
        globalPostTags=postTagsList.toArray(new String[postTagsList.size()]);
      }
    }
 else     if (token.isValue()) {
      if ("order".equals(topLevelFieldName)) {
        globalScoreOrdered="score".equals(parser.text());
      }
 else       if ("tags_schema".equals(topLevelFieldName) || "tagsSchema".equals(topLevelFieldName)) {
        String schema=parser.text();
        if ("styled".equals(schema)) {
          globalPreTags=STYLED_PRE_TAG;
          globalPostTags=STYLED_POST_TAGS;
        }
      }
 else       if ("highlight_filter".equals(topLevelFieldName) || "highlightFilter".equals(topLevelFieldName)) {
        globalHighlightFilter=parser.booleanValue();
      }
 else       if ("fragment_size".equals(topLevelFieldName) || "fragmentSize".equals(topLevelFieldName)) {
        globalFragmentSize=parser.intValue();
      }
 else       if ("number_of_fragments".equals(topLevelFieldName) || "numberOfFragments".equals(topLevelFieldName)) {
        globalNumOfFragments=parser.intValue();
      }
 else       if ("fragment_type".equals(topLevelFieldName) || "fragmentType".equals(topLevelFieldName)) {
        globalFragmentsAllowed=!("content".equals(parser.text()));
      }
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("fields".equals(topLevelFieldName)) {
        String highlightFieldName=null;
        while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
          if (token == XContentParser.Token.FIELD_NAME) {
            highlightFieldName=parser.currentName();
          }
 else           if (token == XContentParser.Token.START_OBJECT) {
            String fieldName=null;
            int fragmentSize=globalFragmentSize;
            int numOfFragments=globalNumOfFragments;
            boolean highlightFilter=globalHighlightFilter;
            boolean scoreOrdered=globalScoreOrdered;
            boolean fragmentsAllowed=globalFragmentsAllowed;
            String[] preTags=globalPreTags;
            String[] postTags=globalPostTags;
            while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
              if (token == XContentParser.Token.FIELD_NAME) {
                fieldName=parser.currentName();
              }
 else               if (token == XContentParser.Token.START_ARRAY) {
                if ("pre_tags".equals(fieldName) || "preTags".equals(fieldName)) {
                  List<String> preTagsList=Lists.newArrayList();
                  while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
                    preTagsList.add(parser.text());
                  }
                  preTags=preTagsList.toArray(new String[preTagsList.size()]);
                }
 else                 if ("post_tags".equals(fieldName) || "postTags".equals(fieldName)) {
                  List<String> postTagsList=Lists.newArrayList();
                  while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
                    postTagsList.add(parser.text());
                  }
                  postTags=postTagsList.toArray(new String[postTagsList.size()]);
                }
              }
 else               if (token.isValue()) {
                if ("fragment_size".equals(fieldName) || "fragmentSize".equals(fieldName)) {
                  fragmentSize=parser.intValue();
                }
 else                 if ("number_of_fragments".equals(fieldName) || "numberOfFragments".equals(fieldName)) {
                  numOfFragments=parser.intValue();
                }
 else                 if ("highlight_filter".equals(fieldName) || "highlightFilter".equals(fieldName)) {
                  highlightFilter=parser.booleanValue();
                }
 else                 if ("score".equals(fieldName)) {
                  scoreOrdered="score".equals(parser.text());
                  ;
                }
 else                 if ("fragment_type".equals(fieldName) || "fragmentType".equals(fieldName)) {
                  fragmentsAllowed=!("content".equals(parser.text()));
                }
              }
            }
            fields.add(new SearchContextHighlight.ParsedHighlightField(highlightFieldName,new SearchContextHighlight.ParsedHighlightSettings(fragmentSize,numOfFragments,preTags,postTags,scoreOrdered,highlightFilter,fragmentsAllowed)));
          }
        }
      }
    }
  }
  if (globalPreTags != null && globalPostTags == null) {
    throw new SearchParseException(context,"Highlighter global preTags are set, but global postTags are not set");
  }
  context.highlight(new SearchContextHighlight(fields,new SearchContextHighlight.ParsedHighlightSettings(globalFragmentSize,globalNumOfFragments,globalPreTags,globalPostTags,globalScoreOrdered,globalHighlightFilter,globalFragmentsAllowed)));
}
