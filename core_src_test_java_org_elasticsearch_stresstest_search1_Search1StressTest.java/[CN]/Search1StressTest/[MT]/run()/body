{
  Node[] nodes=new Node[numberOfNodes];
  for (int i=0; i < nodes.length; i++) {
    nodes[i]=NodeBuilder.nodeBuilder().settings(settings).node();
  }
  client=NodeBuilder.nodeBuilder().settings(settings).client(true).node();
  for (int i=0; i < numberOfIndices; i++) {
    client.client().admin().indices().prepareCreate("test" + i).execute().actionGet();
  }
  logger.info("Pre indexing docs [{}]...",preIndexDocs);
  for (long i=0; i < preIndexDocs.singles(); i++) {
    indexDoc();
  }
  logger.info("Done pre indexing docs [{}]",preIndexDocs);
  Indexer[] indexerThreads=new Indexer[indexers];
  for (int i=0; i < indexerThreads.length; i++) {
    indexerThreads[i]=new Indexer();
  }
  for (  Indexer indexerThread : indexerThreads) {
    indexerThread.start();
  }
  Thread.sleep(10000);
  Searcher[] searcherThreads=new Searcher[searchers];
  for (int i=0; i < searcherThreads.length; i++) {
    searcherThreads[i]=new Searcher();
  }
  for (  Searcher searcherThread : searcherThreads) {
    searcherThread.start();
  }
  Flusher flusher=null;
  if (flusherThrottle.millis() > 0) {
    flusher=new Flusher();
    flusher.start();
  }
  long testStart=System.currentTimeMillis();
  while (true) {
    Thread.sleep(5000);
    if ((System.currentTimeMillis() - testStart) > period.millis()) {
      break;
    }
  }
  System.out.println("DONE, closing .....");
  if (flusher != null) {
    flusher.close=true;
  }
  for (  Searcher searcherThread : searcherThreads) {
    searcherThread.close=true;
  }
  for (  Indexer indexerThread : indexerThreads) {
    indexerThread.close=true;
  }
  Thread.sleep(indexerThrottle.millis() + 10000);
  if (flusher != null && !flusher.closed) {
    logger.warn("flusher not closed!");
  }
  for (  Searcher searcherThread : searcherThreads) {
    if (!searcherThread.closed) {
      logger.warn("search thread not closed!");
    }
  }
  for (  Indexer indexerThread : indexerThreads) {
    if (!indexerThread.closed) {
      logger.warn("index thread not closed!");
    }
  }
  client.close();
  for (  Node node : nodes) {
    node.close();
  }
  System.out.println("********** DONE, indexed [" + indexCounter.get() + "], searched ["+ searchCounter.get()+ "]");
}
