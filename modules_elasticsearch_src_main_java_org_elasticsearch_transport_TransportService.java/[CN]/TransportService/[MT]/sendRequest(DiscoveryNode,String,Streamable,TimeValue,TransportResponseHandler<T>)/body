{
  final long requestId=newRequestId();
  Timeout timeoutX=null;
  try {
    if (timeout != null) {
      timeoutX=timerService.newTimeout(new TimeoutTimerTask(requestId),timeout,TimerService.ExecutionType.THREADED);
    }
    clientHandlers.put(requestId,new RequestHolder<T>(handler,node,action,timeoutX));
    transport.sendRequest(node,requestId,action,message);
  }
 catch (  final Exception e) {
    clientHandlers.remove(requestId);
    if (timeoutX != null) {
      timeoutX.cancel();
    }
    if (throwConnectException) {
      if (e instanceof ConnectTransportException) {
        throw (ConnectTransportException)e;
      }
    }
    threadPool.execute(new Runnable(){
      @Override public void run(){
        handler.handleException(new SendRequestTransportException(node,action,e));
      }
    }
);
  }
}
