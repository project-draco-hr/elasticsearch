{
  transport.transportServiceAdapter(new TransportServiceAdapter(){
    @Override public TransportRequestHandler handler(    String action){
      return serverHandlers.get(action);
    }
    @Override public TransportResponseHandler remove(    long requestId){
      return clientHandlers.remove(requestId);
    }
    @Override public void raiseNodeConnected(    DiscoveryNode node){
      for (      TransportConnectionListener connectionListener : connectionListeners) {
        connectionListener.onNodeConnected(node);
      }
    }
    @Override public void raiseNodeDisconnected(    DiscoveryNode node){
      for (      TransportConnectionListener connectionListener : connectionListeners) {
        connectionListener.onNodeDisconnected(node);
      }
    }
  }
);
  transport.start();
  if (transport.boundAddress() != null && logger.isInfoEnabled()) {
    logger.info("{}",transport.boundAddress());
  }
}
