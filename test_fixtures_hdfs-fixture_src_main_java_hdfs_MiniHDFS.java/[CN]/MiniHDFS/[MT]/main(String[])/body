{
  if (args.length != 1) {
    throw new IllegalArgumentException("MiniHDFS <baseDirectory>");
  }
  Path baseDir=Paths.get(args[0]);
  Path hadoopHome=baseDir.resolve("hadoop-home");
  Files.createDirectories(hadoopHome);
  System.setProperty("hadoop.home.dir",hadoopHome.toAbsolutePath().toString());
  Path hdfsHome=baseDir.resolve("hdfs-data");
  Configuration cfg=new Configuration();
  cfg.set(MiniDFSCluster.HDFS_MINIDFS_BASEDIR,hdfsHome.toAbsolutePath().toString());
  cfg.set(DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,"766");
  MiniDFSCluster dfs=new MiniDFSCluster.Builder(cfg).nameNodePort(9999).build();
  Path tmp=Files.createTempFile(baseDir,null,null);
  String pid=ManagementFactory.getRuntimeMXBean().getName().split("@")[0];
  Files.write(tmp,pid.getBytes(StandardCharsets.UTF_8));
  Files.move(tmp,baseDir.resolve(PID_FILE_NAME),StandardCopyOption.ATOMIC_MOVE);
  tmp=Files.createTempFile(baseDir,null,null);
  Files.write(tmp,Integer.toString(dfs.getNameNodePort()).getBytes(StandardCharsets.UTF_8));
  Files.move(tmp,baseDir.resolve(PORT_FILE_NAME),StandardCopyOption.ATOMIC_MOVE);
}
