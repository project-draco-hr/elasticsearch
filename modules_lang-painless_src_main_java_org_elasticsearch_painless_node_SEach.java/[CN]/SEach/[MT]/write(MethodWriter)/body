{
  expression.write(writer);
  if (java.lang.reflect.Modifier.isInterface(method.owner.clazz.getModifiers())) {
    writer.invokeInterface(method.owner.type,method.method);
  }
 else {
    writer.invokeVirtual(method.owner.type,method.method);
  }
  writer.visitVarInsn(iterator.type.type.getOpcode(Opcodes.ISTORE),iterator.slot);
  Label end=new Label();
  writer.visitVarInsn(iterator.type.type.getOpcode(Opcodes.ILOAD),iterator.slot);
  writer.invokeInterface(hasNext.owner.type,hasNext.method);
  writer.ifZCmp(MethodWriter.EQ,end);
  writer.visitVarInsn(iterator.type.type.getOpcode(Opcodes.ILOAD),iterator.slot);
  writer.invokeInterface(next.owner.type,next.method);
  writer.writeCast(cast);
  writer.visitVarInsn(variable.type.type.getOpcode(Opcodes.ISTORE),variable.slot);
  block.write(writer);
  writer.mark(end);
}
