{
  ThreadPool threadPool=new ThreadPool("test");
  final ScheduledThreadPoolExecutor timer=(ScheduledThreadPoolExecutor)threadPool.scheduler();
  final AtomicBoolean timeoutCalled=new AtomicBoolean();
  PrioritizedEsThreadPoolExecutor executor=EsExecutors.newSinglePrioritizing(getTestName(),EsExecutors.daemonThreadFactory(getTestName()));
  final CountDownLatch invoked=new CountDownLatch(1);
  executor.execute(new Runnable(){
    @Override public void run(){
      invoked.countDown();
    }
  }
,timer,TimeValue.timeValueHours(1),new Runnable(){
    @Override public void run(){
      timeoutCalled.set(true);
    }
  }
);
  invoked.await();
  assertBusy(new Runnable(){
    @Override public void run(){
      assertThat(timer.getQueue().size(),equalTo(0));
    }
  }
,5,TimeUnit.SECONDS);
  assertThat(timeoutCalled.get(),equalTo(false));
  assertTrue(terminate(executor));
  assertTrue(terminate(threadPool));
}
