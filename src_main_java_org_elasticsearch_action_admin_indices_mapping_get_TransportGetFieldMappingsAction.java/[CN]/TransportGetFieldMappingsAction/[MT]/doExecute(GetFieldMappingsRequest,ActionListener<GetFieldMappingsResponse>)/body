{
  ClusterState clusterState=clusterService.state();
  String[] concreteIndices=clusterState.metaData().concreteIndices(request.indices(),request.indicesOptions());
  final AtomicInteger indexCounter=new AtomicInteger();
  final AtomicInteger completionCounter=new AtomicInteger(concreteIndices.length);
  final AtomicReferenceArray<Object> indexResponses=new AtomicReferenceArray<>(concreteIndices.length);
  if (concreteIndices == null || concreteIndices.length == 0) {
    listener.onResponse(new GetFieldMappingsResponse());
  }
 else {
    boolean probablySingleFieldRequest=concreteIndices.length == 1 && request.types().length == 1 && request.fields().length == 1;
    for (    final String index : concreteIndices) {
      GetFieldMappingsIndexRequest shardRequest=new GetFieldMappingsIndexRequest(request,index,probablySingleFieldRequest);
      shardRequest.listenerThreaded(false);
      shardAction.execute(shardRequest,new ActionListener<GetFieldMappingsResponse>(){
        @Override public void onResponse(        GetFieldMappingsResponse result){
          indexResponses.set(indexCounter.getAndIncrement(),result);
          if (completionCounter.decrementAndGet() == 0) {
            listener.onResponse(merge(indexResponses));
          }
        }
        @Override public void onFailure(        Throwable e){
          int index=indexCounter.getAndIncrement();
          indexResponses.set(index,e);
          if (completionCounter.decrementAndGet() == 0) {
            listener.onResponse(merge(indexResponses));
          }
        }
      }
);
    }
  }
}
