{
  if (aggregator.entries.isEmpty()) {
    return new InternalTermsStatsStringFacet(facetName,comparatorType,size,ImmutableList.<InternalTermsStatsStringFacet.StringEntry>of(),aggregator.missing);
  }
  if (size == 0) {
    return new InternalTermsStatsStringFacet(facetName,comparatorType,0,aggregator.entries.values(),aggregator.missing);
  }
  Object[] values=aggregator.entries.internalValues();
  Arrays.sort(values,(Comparator)comparatorType.comparator());
  List<InternalTermsStatsStringFacet.StringEntry> ordered=Lists.newArrayList();
  int limit=size;
  for (int i=0; i < limit; i++) {
    InternalTermsStatsStringFacet.StringEntry value=(InternalTermsStatsStringFacet.StringEntry)values[i];
    if (value == null) {
      break;
    }
    ordered.add(value);
  }
  CacheRecycler.pushHashMap(aggregator.entries);
  return new InternalTermsStatsStringFacet(facetName,comparatorType,size,ordered,aggregator.missing);
}
