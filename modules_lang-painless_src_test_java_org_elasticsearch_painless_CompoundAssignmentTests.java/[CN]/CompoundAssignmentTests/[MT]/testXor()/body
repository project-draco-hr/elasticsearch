{
  assertEquals(false,exec("boolean x = true; x ^= true; return x;"));
  assertEquals(true,exec("boolean x = true; x ^= false; return x;"));
  assertEquals(true,exec("boolean x = false; x ^= true; return x;"));
  assertEquals(false,exec("boolean x = false; x ^= false; return x;"));
  assertEquals(false,exec("def x = true; x ^= true; return x;"));
  assertEquals(true,exec("def x = true; x ^= false; return x;"));
  assertEquals(true,exec("def x = false; x ^= true; return x;"));
  assertEquals(false,exec("def x = false; x ^= false; return x;"));
  assertEquals(false,exec("boolean[] x = new boolean[1]; x[0] = true; x[0] ^= true; return x[0];"));
  assertEquals(true,exec("boolean[] x = new boolean[1]; x[0] = true; x[0] ^= false; return x[0];"));
  assertEquals(true,exec("boolean[] x = new boolean[1]; x[0] = false; x[0] ^= true; return x[0];"));
  assertEquals(false,exec("boolean[] x = new boolean[1]; x[0] = false; x[0] ^= false; return x[0];"));
  assertEquals(false,exec("def[] x = new def[1]; x[0] = true; x[0] ^= true; return x[0];"));
  assertEquals(true,exec("def[] x = new def[1]; x[0] = true; x[0] ^= false; return x[0];"));
  assertEquals(true,exec("def[] x = new def[1]; x[0] = false; x[0] ^= true; return x[0];"));
  assertEquals(false,exec("def[] x = new def[1]; x[0] = false; x[0] ^= false; return x[0];"));
  assertEquals((byte)(13 ^ 14),exec("byte x = 13; x ^= 14; return x;"));
  assertEquals((short)(13 ^ 14),exec("short x = 13; x ^= 14; return x;"));
  assertEquals((char)(13 ^ 14),exec("char x = 13; x ^= 14; return x;"));
  assertEquals(13 ^ 14,exec("int x = 13; x ^= 14; return x;"));
  assertEquals((long)(13 ^ 14),exec("long x = 13L; x ^= 14; return x;"));
}
