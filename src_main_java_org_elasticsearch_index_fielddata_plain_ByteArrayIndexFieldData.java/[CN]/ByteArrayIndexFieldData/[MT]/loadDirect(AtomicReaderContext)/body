{
  AtomicReader reader=context.reader();
  Terms terms=reader.terms(getFieldNames().indexName());
  if (terms == null) {
    return ByteArrayAtomicFieldData.EMPTY;
  }
  final TByteArrayList values=new TByteArrayList();
  values.add((byte)0);
  OrdinalsBuilder builder=new OrdinalsBuilder(terms,reader.maxDoc());
  BytesRefIterator iter=builder.buildFromTerms(builder.wrapNumeric32Bit(terms.iterator(null)),reader.getLiveDocs());
  BytesRef term;
  while ((term=iter.next()) != null) {
    values.add((byte)NumericUtils.prefixCodedToInt(term));
  }
  try {
    Ordinals build=builder.build(fieldDataType.getSettings());
    if (!build.isMultiValued()) {
      Docs ordinals=build.ordinals();
      byte[] sValues=new byte[reader.maxDoc()];
      int maxDoc=reader.maxDoc();
      for (int i=0; i < maxDoc; i++) {
        sValues[i]=values.get(ordinals.getOrd(i));
      }
      final FixedBitSet set=builder.buildDocsWithValuesSet();
      if (set == null) {
        return new ByteArrayAtomicFieldData.Single(sValues,reader.maxDoc());
      }
 else {
        return new ByteArrayAtomicFieldData.SingleFixedSet(sValues,reader.maxDoc(),set);
      }
    }
 else {
      return new ByteArrayAtomicFieldData.WithOrdinals(values.toArray(new byte[values.size()]),reader.maxDoc(),build);
    }
  }
  finally {
    builder.close();
  }
}
