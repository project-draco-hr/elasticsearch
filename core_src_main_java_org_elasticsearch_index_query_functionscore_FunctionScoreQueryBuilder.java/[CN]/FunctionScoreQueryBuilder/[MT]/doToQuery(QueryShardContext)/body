{
  FiltersFunctionScoreQuery.FilterFunction[] filterFunctions=new FiltersFunctionScoreQuery.FilterFunction[filterFunctionBuilders.length];
  int i=0;
  for (  FilterFunctionBuilder filterFunctionBuilder : filterFunctionBuilders) {
    Query filter=filterFunctionBuilder.getFilter().toQuery(context);
    ScoreFunction scoreFunction=filterFunctionBuilder.getScoreFunction().toFunction(context);
    filterFunctions[i++]=new FiltersFunctionScoreQuery.FilterFunction(filter,scoreFunction);
  }
  Query query=this.query.toQuery(context);
  if (query == null) {
    query=new MatchAllDocsQuery();
  }
  if (filterFunctions.length == 0 || filterFunctions.length == 1 && (this.filterFunctionBuilders[0].getFilter().getName().equals(MatchAllQueryBuilder.NAME))) {
    ScoreFunction function=filterFunctions.length == 0 ? null : filterFunctions[0].function;
    CombineFunction combineFunction=this.boostMode;
    if (combineFunction == null) {
      if (function != null) {
        combineFunction=function.getDefaultScoreCombiner();
      }
 else {
        combineFunction=DEFAULT_BOOST_MODE;
      }
    }
    query=new FunctionScoreQuery(query,function,combineFunction,maxBoost);
  }
 else {
    query=new FiltersFunctionScoreQuery(query,scoreMode,filterFunctions,maxBoost,boostMode == null ? DEFAULT_BOOST_MODE : boostMode);
  }
  if (minScore != null) {
    query=new MinScoreQuery(query,minScore);
  }
  return query;
}
