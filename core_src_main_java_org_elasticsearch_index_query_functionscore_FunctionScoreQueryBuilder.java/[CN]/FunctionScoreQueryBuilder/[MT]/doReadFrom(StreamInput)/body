{
  QueryBuilder<?> query=in.readQuery();
  int size=in.readVInt();
  FilterFunctionBuilder[] filterFunctionBuilders=new FilterFunctionBuilder[size];
  for (int i=0; i < size; i++) {
    filterFunctionBuilders[i]=FilterFunctionBuilder.PROTOTYPE.readFrom(in);
  }
  FunctionScoreQueryBuilder functionScoreQueryBuilder=new FunctionScoreQueryBuilder(query,filterFunctionBuilders);
  functionScoreQueryBuilder.maxBoost(in.readFloat());
  if (in.readBoolean()) {
    functionScoreQueryBuilder.setMinScore(in.readFloat());
  }
  if (in.readBoolean()) {
    functionScoreQueryBuilder.boostMode(CombineFunction.readCombineFunctionFrom(in));
  }
  functionScoreQueryBuilder.scoreMode(FiltersFunctionScoreQuery.ScoreMode.readScoreModeFrom(in));
  return functionScoreQueryBuilder;
}
