{
  client.admin().indices().prepareDelete().execute().actionGet();
  client.admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.refresh_interval",-1)).addMapping("type1",jsonBuilder().startObject().startObject("type").startObject("_source").field("enabled",true).endObject().endObject().endObject()).addMapping("type2",jsonBuilder().startObject().startObject("type").startObject("_source").field("enabled",false).endObject().startObject("properties").startObject("str").field("type","string").field("store","yes").endObject().startObject("int").field("type","integer").field("store","yes").endObject().startObject("date").field("type","date").field("store","yes").endObject().startObject("binary").field("type","binary").field("store","yes").endObject().endObject().endObject().endObject()).execute().actionGet();
  ClusterHealthResponse clusterHealth=client.admin().cluster().health(clusterHealthRequest().setWaitForGreenStatus()).actionGet();
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  client.prepareIndex("test","type1","1").setSource("str","test","int",42,"date","2012-11-13T15:26:14.000Z","binary",Base64.encodeBytes(new byte[]{1,2,3})).execute().actionGet();
  client.prepareIndex("test","type2","1").setSource("str","test","int",42,"date","2012-11-13T15:26:14.000Z","binary",Base64.encodeBytes(new byte[]{1,2,3})).execute().actionGet();
  logger.info("--> realtime get (from source)");
  GetResponse getResponse=client.prepareGet("test","type1","1").setFields("str","int","date","binary").execute().actionGet();
  assertThat(getResponse.isExists(),equalTo(true));
  assertThat((String)getResponse.getField("str").getValue(),equalTo("test"));
  assertThat((Long)getResponse.getField("int").getValue(),equalTo(42l));
  assertThat((String)getResponse.getField("date").getValue(),equalTo("2012-11-13T15:26:14.000Z"));
  assertThat(getResponse.getField("binary").getValue(),instanceOf(String.class));
  logger.info("--> realtime get (from stored fields)");
  getResponse=client.prepareGet("test","type2","1").setFields("str","int","date","binary").execute().actionGet();
  assertThat(getResponse.isExists(),equalTo(true));
  assertThat((String)getResponse.getField("str").getValue(),equalTo("test"));
  assertThat((Integer)getResponse.getField("int").getValue(),equalTo(42));
  assertThat((String)getResponse.getField("date").getValue(),equalTo("2012-11-13T15:26:14.000Z"));
  assertThat((BytesReference)getResponse.getField("binary").getValue(),equalTo((BytesReference)new BytesArray(new byte[]{1,2,3})));
  logger.info("--> flush the index, so we load it from it");
  client.admin().indices().prepareFlush().execute().actionGet();
  logger.info("--> non realtime get (from source)");
  getResponse=client.prepareGet("test","type1","1").setFields("str","int","date","binary").execute().actionGet();
  assertThat(getResponse.isExists(),equalTo(true));
  assertThat((String)getResponse.getField("str").getValue(),equalTo("test"));
  assertThat((Long)getResponse.getField("int").getValue(),equalTo(42l));
  assertThat((String)getResponse.getField("date").getValue(),equalTo("2012-11-13T15:26:14.000Z"));
  assertThat(getResponse.getField("binary").getValue(),instanceOf(String.class));
  logger.info("--> non realtime get (from stored fields)");
  getResponse=client.prepareGet("test","type2","1").setFields("str","int","date","binary").execute().actionGet();
  assertThat(getResponse.isExists(),equalTo(true));
  assertThat((String)getResponse.getField("str").getValue(),equalTo("test"));
  assertThat((Integer)getResponse.getField("int").getValue(),equalTo(42));
  assertThat((String)getResponse.getField("date").getValue(),equalTo("2012-11-13T15:26:14.000Z"));
  assertThat((BytesReference)getResponse.getField("binary").getValue(),equalTo((BytesReference)new BytesArray(new byte[]{1,2,3})));
}
