{
  int docId=Lucene.NO_DOC;
  TermPositions uid=null;
  try {
    uid=reader.termPositions(term);
    if (!uid.next()) {
      return null;
    }
    docId=uid.doc();
    uid.nextPosition();
    if (!uid.isPayloadAvailable()) {
      return new DocIdAndVersion(docId,-2,reader);
    }
    if (uid.getPayloadLength() < 8) {
      return new DocIdAndVersion(docId,-2,reader);
    }
    byte[] payload=uid.getPayload(new byte[8],0);
    return new DocIdAndVersion(docId,Numbers.bytesToLong(payload),reader);
  }
 catch (  Exception e) {
    return new DocIdAndVersion(docId,-2,reader);
  }
 finally {
    if (uid != null) {
      try {
        uid.close();
      }
 catch (      IOException e) {
      }
    }
  }
}
