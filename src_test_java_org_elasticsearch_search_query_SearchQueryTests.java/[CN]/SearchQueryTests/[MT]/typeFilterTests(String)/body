{
  Settings indexSettings=ImmutableSettings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.V_1_4_2.id).build();
  assertAcked(prepareCreate("test").setSettings(indexSettings).addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("_type").field("index",index).endObject().endObject().endObject()).addMapping("type2",jsonBuilder().startObject().startObject("type2").startObject("_type").field("index",index).endObject().endObject().endObject()));
  indexRandom(true,client().prepareIndex("test","type1","1").setSource("field1","value1"),client().prepareIndex("test","type2","1").setSource("field1","value1"),client().prepareIndex("test","type1","2").setSource("field1","value1"),client().prepareIndex("test","type2","2").setSource("field1","value1"),client().prepareIndex("test","type2","3").setSource("field1","value1"));
  assertHitCount(client().prepareSearch().setQuery(filteredQuery(matchAllQuery(),typeQuery("type1"))).get(),2l);
  assertHitCount(client().prepareSearch().setQuery(filteredQuery(matchAllQuery(),typeQuery("type2"))).get(),3l);
  assertHitCount(client().prepareSearch().setTypes("type1").setQuery(matchAllQuery()).get(),2l);
  assertHitCount(client().prepareSearch().setTypes("type2").setQuery(matchAllQuery()).get(),3l);
  assertHitCount(client().prepareSearch().setTypes("type1","type2").setQuery(matchAllQuery()).get(),5l);
}
