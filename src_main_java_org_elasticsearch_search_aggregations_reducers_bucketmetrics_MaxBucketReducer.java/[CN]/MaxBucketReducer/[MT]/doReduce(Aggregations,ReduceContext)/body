{
  List<String> maxBucketKeys=new ArrayList<>();
  double maxValue=Double.NEGATIVE_INFINITY;
  List<String> bucketsPath=AggregationPath.parse(bucketsPaths()[0]).getPathElementsAsStringList();
  for (  Aggregation aggregation : aggregations) {
    if (aggregation.getName().equals(bucketsPath.get(0))) {
      bucketsPath=bucketsPath.subList(1,bucketsPath.size());
      InternalMultiBucketAggregation multiBucketsAgg=(InternalMultiBucketAggregation)aggregation;
      List<? extends Bucket> buckets=multiBucketsAgg.getBuckets();
      for (int i=0; i < buckets.size(); i++) {
        Bucket bucket=buckets.get(i);
        Double bucketValue=BucketHelpers.resolveBucketValue(multiBucketsAgg,bucket,bucketsPath,GapPolicy.IGNORE);
        if (bucketValue != null) {
          if (bucketValue > maxValue) {
            maxBucketKeys.clear();
            maxBucketKeys.add(bucket.getKeyAsString());
            maxValue=bucketValue;
          }
 else           if (bucketValue.equals(maxValue)) {
            maxBucketKeys.add(bucket.getKeyAsString());
          }
        }
      }
    }
  }
  String[] keys=maxBucketKeys.toArray(new String[maxBucketKeys.size()]);
  return new InternalBucketMetricValue(name(),keys,maxValue,formatter,Collections.EMPTY_LIST,metaData());
}
