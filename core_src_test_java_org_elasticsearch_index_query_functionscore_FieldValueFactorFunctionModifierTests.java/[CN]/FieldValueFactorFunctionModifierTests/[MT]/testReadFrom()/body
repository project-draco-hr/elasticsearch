{
  try (BytesStreamOutput out=new BytesStreamOutput()){
    out.writeVInt(0);
    try (StreamInput in=StreamInput.wrap(out.bytes())){
      assertThat(FieldValueFactorFunction.Modifier.readModifierFrom(in),equalTo(FieldValueFactorFunction.Modifier.NONE));
    }
   }
   try (BytesStreamOutput out=new BytesStreamOutput()){
    out.writeVInt(1);
    try (StreamInput in=StreamInput.wrap(out.bytes())){
      assertThat(FieldValueFactorFunction.Modifier.readModifierFrom(in),equalTo(FieldValueFactorFunction.Modifier.LOG));
    }
   }
   try (BytesStreamOutput out=new BytesStreamOutput()){
    out.writeVInt(2);
    try (StreamInput in=StreamInput.wrap(out.bytes())){
      assertThat(FieldValueFactorFunction.Modifier.readModifierFrom(in),equalTo(FieldValueFactorFunction.Modifier.LOG1P));
    }
   }
   try (BytesStreamOutput out=new BytesStreamOutput()){
    out.writeVInt(3);
    try (StreamInput in=StreamInput.wrap(out.bytes())){
      assertThat(FieldValueFactorFunction.Modifier.readModifierFrom(in),equalTo(FieldValueFactorFunction.Modifier.LOG2P));
    }
   }
   try (BytesStreamOutput out=new BytesStreamOutput()){
    out.writeVInt(4);
    try (StreamInput in=StreamInput.wrap(out.bytes())){
      assertThat(FieldValueFactorFunction.Modifier.readModifierFrom(in),equalTo(FieldValueFactorFunction.Modifier.LN));
    }
   }
   try (BytesStreamOutput out=new BytesStreamOutput()){
    out.writeVInt(5);
    try (StreamInput in=StreamInput.wrap(out.bytes())){
      assertThat(FieldValueFactorFunction.Modifier.readModifierFrom(in),equalTo(FieldValueFactorFunction.Modifier.LN1P));
    }
   }
   try (BytesStreamOutput out=new BytesStreamOutput()){
    out.writeVInt(6);
    try (StreamInput in=StreamInput.wrap(out.bytes())){
      assertThat(FieldValueFactorFunction.Modifier.readModifierFrom(in),equalTo(FieldValueFactorFunction.Modifier.LN2P));
    }
   }
   try (BytesStreamOutput out=new BytesStreamOutput()){
    out.writeVInt(7);
    try (StreamInput in=StreamInput.wrap(out.bytes())){
      assertThat(FieldValueFactorFunction.Modifier.readModifierFrom(in),equalTo(FieldValueFactorFunction.Modifier.SQUARE));
    }
   }
   try (BytesStreamOutput out=new BytesStreamOutput()){
    out.writeVInt(8);
    try (StreamInput in=StreamInput.wrap(out.bytes())){
      assertThat(FieldValueFactorFunction.Modifier.readModifierFrom(in),equalTo(FieldValueFactorFunction.Modifier.SQRT));
    }
   }
   try (BytesStreamOutput out=new BytesStreamOutput()){
    out.writeVInt(9);
    try (StreamInput in=StreamInput.wrap(out.bytes())){
      assertThat(FieldValueFactorFunction.Modifier.readModifierFrom(in),equalTo(FieldValueFactorFunction.Modifier.RECIPROCAL));
    }
   }
 }
