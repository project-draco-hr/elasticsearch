{
  QueryShardContext context=createShardContext();
  Version version=context.indexVersionCreated();
  Query parsedQuery=parseQuery(query).toQuery(context);
  if (version.before(Version.V_2_2_0)) {
    GeoPolygonQuery filter=(GeoPolygonQuery)parsedQuery;
    assertThat(filter.fieldName(),equalTo(GEO_POINT_FIELD_NAME));
    assertThat(filter.points().length,equalTo(4));
    assertThat(filter.points()[0].lat(),closeTo(40,0.00001));
    assertThat(filter.points()[0].lon(),closeTo(-70,0.00001));
    assertThat(filter.points()[1].lat(),closeTo(30,0.00001));
    assertThat(filter.points()[1].lon(),closeTo(-80,0.00001));
    assertThat(filter.points()[2].lat(),closeTo(20,0.00001));
    assertThat(filter.points()[2].lon(),closeTo(-90,0.00001));
  }
 else   if (version.before(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {
    GeoPointInPolygonQuery q=(GeoPointInPolygonQuery)parsedQuery;
    assertThat(q.getField(),equalTo(GEO_POINT_FIELD_NAME));
    assertEquals(1,q.getPolygons().length);
    final double[] lats=q.getPolygons()[0].getPolyLats();
    final double[] lons=q.getPolygons()[0].getPolyLons();
    assertThat(lats.length,equalTo(4));
    assertThat(lons.length,equalTo(4));
    assertThat(lats[0],closeTo(40,1E-5));
    assertThat(lons[0],closeTo(-70,1E-5));
    assertThat(lats[1],closeTo(30,1E-5));
    assertThat(lons[1],closeTo(-80,1E-5));
    assertThat(lats[2],closeTo(20,1E-5));
    assertThat(lons[2],closeTo(-90,1E-5));
    assertThat(lats[3],equalTo(lats[0]));
    assertThat(lons[3],equalTo(lons[0]));
  }
 else {
  }
}
