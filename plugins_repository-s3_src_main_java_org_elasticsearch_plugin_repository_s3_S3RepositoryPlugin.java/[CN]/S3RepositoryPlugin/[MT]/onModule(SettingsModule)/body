{
  registerSettingIfMissing(settingsModule,AwsS3Service.KEY_SETTING);
  registerSettingIfMissing(settingsModule,AwsS3Service.SECRET_SETTING);
  registerSettingIfMissing(settingsModule,AwsS3Service.PROTOCOL_SETTING);
  registerSettingIfMissing(settingsModule,AwsS3Service.PROXY_HOST_SETTING);
  registerSettingIfMissing(settingsModule,AwsS3Service.PROXY_PORT_SETTING);
  registerSettingIfMissing(settingsModule,AwsS3Service.PROXY_USERNAME_SETTING);
  registerSettingIfMissing(settingsModule,AwsS3Service.PROXY_PASSWORD_SETTING);
  registerSettingIfMissing(settingsModule,AwsS3Service.SIGNER_SETTING);
  registerSettingIfMissing(settingsModule,AwsS3Service.REGION_SETTING);
  settingsModule.registerSetting(AwsS3Service.CLOUD_S3.KEY_SETTING);
  settingsModule.registerSetting(AwsS3Service.CLOUD_S3.SECRET_SETTING);
  settingsModule.registerSetting(AwsS3Service.CLOUD_S3.PROTOCOL_SETTING);
  settingsModule.registerSetting(AwsS3Service.CLOUD_S3.PROXY_HOST_SETTING);
  settingsModule.registerSetting(AwsS3Service.CLOUD_S3.PROXY_PORT_SETTING);
  settingsModule.registerSetting(AwsS3Service.CLOUD_S3.PROXY_USERNAME_SETTING);
  settingsModule.registerSetting(AwsS3Service.CLOUD_S3.PROXY_PASSWORD_SETTING);
  settingsModule.registerSetting(AwsS3Service.CLOUD_S3.SIGNER_SETTING);
  settingsModule.registerSetting(AwsS3Service.CLOUD_S3.REGION_SETTING);
  settingsModule.registerSetting(AwsS3Service.CLOUD_S3.ENDPOINT_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.KEY_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.SECRET_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.BUCKET_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.REGION_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.ENDPOINT_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.PROTOCOL_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.SERVER_SIDE_ENCRYPTION_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.BUFFER_SIZE_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.MAX_RETRIES_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.CHUNK_SIZE_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.COMPRESS_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.STORAGE_CLASS_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.CANNED_ACL_SETTING);
  settingsModule.registerSetting(S3Repository.Repositories.BASE_PATH_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.KEY_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.SECRET_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.BUCKET_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.ENDPOINT_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.PROTOCOL_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.REGION_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.SERVER_SIDE_ENCRYPTION_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.BUFFER_SIZE_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.MAX_RETRIES_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.CHUNK_SIZE_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.COMPRESS_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.STORAGE_CLASS_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.CANNED_ACL_SETTING);
  settingsModule.registerSetting(S3Repository.Repository.BASE_PATH_SETTING);
  settingsModule.registerSettingsFilterIfMissing(AwsS3Service.KEY_SETTING.getKey());
  settingsModule.registerSettingsFilterIfMissing(AwsS3Service.SECRET_SETTING.getKey());
  settingsModule.registerSettingsFilterIfMissing(AwsS3Service.PROXY_PASSWORD_SETTING.getKey());
  settingsModule.registerSettingsFilterIfMissing(AwsS3Service.CLOUD_S3.KEY_SETTING.getKey());
  settingsModule.registerSettingsFilterIfMissing(AwsS3Service.CLOUD_S3.SECRET_SETTING.getKey());
  settingsModule.registerSettingsFilterIfMissing(AwsS3Service.CLOUD_S3.PROXY_PASSWORD_SETTING.getKey());
  settingsModule.registerSettingsFilter(S3Repository.Repository.KEY_SETTING.getKey());
  settingsModule.registerSettingsFilter(S3Repository.Repository.SECRET_SETTING.getKey());
}
