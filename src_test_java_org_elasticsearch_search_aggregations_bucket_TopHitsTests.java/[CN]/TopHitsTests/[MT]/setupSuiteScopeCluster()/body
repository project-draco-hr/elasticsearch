{
  createIndex("idx");
  createIndex("empty");
  List<IndexRequestBuilder> builders=new ArrayList<>();
  for (int i=0; i < 50; i++) {
    builders.add(client().prepareIndex("idx","type",Integer.toString(i)).setSource(jsonBuilder().startObject().field(TERMS_AGGS_FIELD,"val" + (i / 10)).field(SORT_FIELD,i + 1).field("text","some text to entertain").field("field1",5).endObject()));
  }
  builders.add(client().prepareIndex("idx","field-collapsing","1").setSource(jsonBuilder().startObject().field("group","a").field("text","term x y z b").endObject()));
  builders.add(client().prepareIndex("idx","field-collapsing","2").setSource(jsonBuilder().startObject().field("group","a").field("text","term x y z n rare").endObject()));
  builders.add(client().prepareIndex("idx","field-collapsing","3").setSource(jsonBuilder().startObject().field("group","b").field("text","x y z term").endObject()));
  builders.add(client().prepareIndex("idx","field-collapsing","4").setSource(jsonBuilder().startObject().field("group","b").field("text","x y term").endObject()));
  builders.add(client().prepareIndex("idx","field-collapsing","5").setSource(jsonBuilder().startObject().field("group","b").field("text","x term").endObject()));
  builders.add(client().prepareIndex("idx","field-collapsing","6").setSource(jsonBuilder().startObject().field("group","b").field("text","term rare").endObject()));
  builders.add(client().prepareIndex("idx","field-collapsing","7").setSource(jsonBuilder().startObject().field("group","c").field("text","x y z term").endObject()));
  builders.add(client().prepareIndex("idx","field-collapsing","8").setSource(jsonBuilder().startObject().field("group","c").field("text","x y term b").endObject()));
  builders.add(client().prepareIndex("idx","field-collapsing","9").setSource(jsonBuilder().startObject().field("group","c").field("text","rare x term").endObject()));
  indexRandom(true,builders);
  ensureSearchable();
}
