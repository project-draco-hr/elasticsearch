{
  SearchResponse searchResponse=client().prepareSearch("articles").addAggregation(histogram("dates").field("date").interval(5).order(Histogram.Order.aggregation("to-comments",true)).subAggregation(nested("to-comments").path("comments").subAggregation(topHits("comments").addHighlightedField(new HighlightBuilder.Field("message").highlightQuery(matchQuery("comments.message","text"))).addSort("comments.id",SortOrder.ASC)))).get();
  Histogram histogram=searchResponse.getAggregations().get("dates");
  for (int i=0; i < numArticles; i+=5) {
    Histogram.Bucket bucket=histogram.getBuckets().get(i / 5);
    assertThat(bucket.getDocCount(),equalTo(5l));
    long numNestedDocs=10 + (5 * i);
    Nested nested=bucket.getAggregations().get("to-comments");
    assertThat(nested.getDocCount(),equalTo(numNestedDocs));
    TopHits hits=nested.getAggregations().get("comments");
    SearchHits searchHits=hits.getHits();
    assertThat(searchHits.totalHits(),equalTo(numNestedDocs));
    for (int j=0; j < 3; j++) {
      assertThat(searchHits.getAt(j).getNestedIdentity().getField().string(),equalTo("comments"));
      assertThat(searchHits.getAt(j).getNestedIdentity().getOffset(),equalTo(0));
      assertThat((Integer)searchHits.getAt(j).sourceAsMap().get("id"),equalTo(0));
      HighlightField highlightField=searchHits.getAt(j).getHighlightFields().get("message");
      assertThat(highlightField.getFragments().length,equalTo(1));
      assertThat(highlightField.getFragments()[0].string(),equalTo("some <em>text</em>"));
    }
  }
}
