{
  SearchResponse response=client().prepareSearch("idx").setTypes("type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(TERMS_AGGS_FIELD).order(Terms.Order.aggregation("max_sort",false)).subAggregation(topHits("hits").addSort(SortBuilders.fieldSort(SORT_FIELD).order(SortOrder.DESC)).setTrackScores(true)).subAggregation(max("max_sort").field(SORT_FIELD))).get();
  assertSearchResponse(response);
  Terms terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(5));
  long higestSortValue=50;
  int currentBucket=4;
  for (  Terms.Bucket bucket : terms.getBuckets()) {
    assertThat(key(bucket),equalTo("val" + currentBucket--));
    assertThat(bucket.getDocCount(),equalTo(10l));
    TopHits topHits=bucket.getAggregations().get("hits");
    SearchHits hits=topHits.getHits();
    assertThat(hits.totalHits(),equalTo(10l));
    assertThat(hits.getHits().length,equalTo(3));
    assertThat((Long)hits.getAt(0).sortValues()[0],equalTo(higestSortValue));
    assertThat((Long)hits.getAt(1).sortValues()[0],equalTo(higestSortValue - 1));
    assertThat((Long)hits.getAt(2).sortValues()[0],equalTo(higestSortValue - 2));
    Max max=bucket.getAggregations().get("max_sort");
    assertThat(max.getValue(),equalTo(((Long)higestSortValue).doubleValue()));
    higestSortValue-=10;
  }
}
