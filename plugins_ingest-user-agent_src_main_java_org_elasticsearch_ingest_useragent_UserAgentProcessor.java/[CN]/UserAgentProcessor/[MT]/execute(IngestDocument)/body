{
  String userAgent=ingestDocument.getFieldValue(field,String.class);
  Details uaClient=parser.parse(userAgent);
  Map<String,Object> uaDetails=new HashMap<>();
  for (  Property property : this.properties) {
switch (property) {
case NAME:
      if (uaClient.userAgent != null && uaClient.userAgent.name != null) {
        uaDetails.put("name",uaClient.userAgent.name);
      }
 else {
        uaDetails.put("name","Other");
      }
    break;
case MAJOR:
  if (uaClient.userAgent != null && uaClient.userAgent.major != null) {
    uaDetails.put("major",uaClient.userAgent.major);
  }
break;
case MINOR:
if (uaClient.userAgent != null && uaClient.userAgent.minor != null) {
uaDetails.put("minor",uaClient.userAgent.minor);
}
break;
case PATCH:
if (uaClient.userAgent != null && uaClient.userAgent.patch != null) {
uaDetails.put("patch",uaClient.userAgent.patch);
}
break;
case BUILD:
if (uaClient.userAgent != null && uaClient.userAgent.build != null) {
uaDetails.put("build",uaClient.userAgent.build);
}
break;
case OS:
if (uaClient.operatingSystem != null) {
uaDetails.put("os",buildFullOSName(uaClient.operatingSystem));
}
 else {
uaDetails.put("os","Other");
}
break;
case OS_NAME:
if (uaClient.operatingSystem != null && uaClient.operatingSystem.name != null) {
uaDetails.put("os_name",uaClient.operatingSystem.name);
}
 else {
uaDetails.put("os_name","Other");
}
break;
case OS_MAJOR:
if (uaClient.operatingSystem != null && uaClient.operatingSystem.major != null) {
uaDetails.put("os_major",uaClient.operatingSystem.major);
}
break;
case OS_MINOR:
if (uaClient.operatingSystem != null && uaClient.operatingSystem.minor != null) {
uaDetails.put("os_minor",uaClient.operatingSystem.minor);
}
break;
case DEVICE:
if (uaClient.device != null && uaClient.device.name != null) {
uaDetails.put("device",uaClient.device.name);
}
 else {
uaDetails.put("device","Other");
}
break;
}
}
ingestDocument.setFieldValue(targetField,uaDetails);
}
