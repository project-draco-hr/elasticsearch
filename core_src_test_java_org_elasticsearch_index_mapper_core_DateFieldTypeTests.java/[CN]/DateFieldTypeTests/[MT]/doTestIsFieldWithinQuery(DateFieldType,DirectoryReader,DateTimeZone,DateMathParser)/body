{
  assertEquals(Relation.INTERSECTS,ft.isFieldWithinQuery(reader,"2015-10-09","2016-01-02",randomBoolean(),randomBoolean(),null,null));
  assertEquals(Relation.INTERSECTS,ft.isFieldWithinQuery(reader,"2016-01-02","2016-06-20",randomBoolean(),randomBoolean(),null,null));
  assertEquals(Relation.INTERSECTS,ft.isFieldWithinQuery(reader,"2016-01-02","2016-02-12",randomBoolean(),randomBoolean(),null,null));
  assertEquals(Relation.DISJOINT,ft.isFieldWithinQuery(reader,"2014-01-02","2015-02-12",randomBoolean(),randomBoolean(),null,null));
  assertEquals(Relation.DISJOINT,ft.isFieldWithinQuery(reader,"2016-05-11","2016-08-30",randomBoolean(),randomBoolean(),null,null));
  assertEquals(Relation.WITHIN,ft.isFieldWithinQuery(reader,"2015-09-25","2016-05-29",randomBoolean(),randomBoolean(),null,null));
  assertEquals(Relation.WITHIN,ft.isFieldWithinQuery(reader,"2015-10-12","2016-04-03",true,true,null,null));
  assertEquals(Relation.INTERSECTS,ft.isFieldWithinQuery(reader,"2015-10-12","2016-04-03",false,false,null,null));
  assertEquals(Relation.INTERSECTS,ft.isFieldWithinQuery(reader,"2015-10-12","2016-04-03",false,true,null,null));
  assertEquals(Relation.INTERSECTS,ft.isFieldWithinQuery(reader,"2015-10-12","2016-04-03",true,false,null,null));
}
