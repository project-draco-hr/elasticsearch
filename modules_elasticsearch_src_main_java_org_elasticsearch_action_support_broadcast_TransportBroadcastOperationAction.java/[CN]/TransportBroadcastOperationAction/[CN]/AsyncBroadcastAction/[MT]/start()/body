{
  if (shardsIts.size() == 0) {
    listener.onResponse(newResponse(request,new AtomicReferenceArray(0),clusterState));
  }
  int localOperations=0;
  for (  final ShardIterator shardIt : shardsIts) {
    final ShardRouting shard=nextShardOrNull(shardIt);
    if (shard != null) {
      if (shard.currentNodeId().equals(nodes.localNodeId())) {
        localOperations++;
      }
 else {
        performOperation(shardIt.reset(),true);
      }
    }
 else {
      onOperation(null,shardIt,null,false);
    }
  }
  if (localOperations > 0) {
    if (request.operationThreading() == BroadcastOperationThreading.SINGLE_THREAD) {
      request.beforeLocalFork();
      threadPool.execute(new Runnable(){
        @Override public void run(){
          for (          final ShardIterator shardIt : shardsIts) {
            final ShardRouting shard=nextShardOrNull(shardIt.reset());
            if (shard != null) {
              if (shard.currentNodeId().equals(nodes.localNodeId())) {
                performOperation(shardIt.reset(),false);
              }
            }
          }
        }
      }
);
    }
 else {
      boolean localAsync=request.operationThreading() == BroadcastOperationThreading.THREAD_PER_SHARD;
      if (localAsync) {
        request.beforeLocalFork();
      }
      for (      final ShardIterator shardIt : shardsIts) {
        final ShardRouting shard=nextShardOrNull(shardIt.reset());
        if (shard != null) {
          if (shard.currentNodeId().equals(nodes.localNodeId())) {
            performOperation(shardIt.reset(),localAsync);
          }
        }
      }
    }
  }
}
