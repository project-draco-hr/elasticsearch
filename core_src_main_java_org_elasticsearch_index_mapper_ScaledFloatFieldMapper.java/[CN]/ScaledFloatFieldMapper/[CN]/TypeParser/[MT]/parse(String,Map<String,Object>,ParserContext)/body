{
  Builder builder=new Builder(name);
  TypeParsers.parseField(builder,name,node,parserContext);
  for (Iterator<Map.Entry<String,Object>> iterator=node.entrySet().iterator(); iterator.hasNext(); ) {
    Map.Entry<String,Object> entry=iterator.next();
    String propName=entry.getKey();
    Object propNode=entry.getValue();
    if (propName.equals("null_value")) {
      if (propNode == null) {
        throw new MapperParsingException("Property [null_value] cannot be null.");
      }
      builder.nullValue(NumberFieldMapper.NumberType.DOUBLE.parse(propNode));
      iterator.remove();
    }
 else     if (propName.equals("ignore_malformed")) {
      builder.ignoreMalformed(TypeParsers.nodeBooleanValue("ignore_malformed",propNode,parserContext));
      iterator.remove();
    }
 else     if (propName.equals("coerce")) {
      builder.coerce(TypeParsers.nodeBooleanValue("coerce",propNode,parserContext));
      iterator.remove();
    }
 else     if (propName.equals("scaling_factor")) {
      builder.scalingFactor(NumberFieldMapper.NumberType.DOUBLE.parse(propNode).doubleValue());
      iterator.remove();
    }
  }
  return builder;
}
