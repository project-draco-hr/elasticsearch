{
  int bytesInOutput;
  int headerLength=is.read(inputBuffer,0,HEADER_BYTES);
  if (headerLength != HEADER_BYTES) {
    return -1;
  }
  int inPtr=0;
  if (inputBuffer[inPtr] != LZFChunk.BYTE_Z || inputBuffer[inPtr + 1] != LZFChunk.BYTE_V) {
    throw new IOException("Corrupt input data, block did not start with 'ZV' signature bytes");
  }
  inPtr+=2;
  int type=inputBuffer[inPtr++];
  int len=uint16(inputBuffer,inPtr);
  inPtr+=2;
  if (type == LZFChunk.BLOCK_TYPE_NON_COMPRESSED) {
    is.read(outputBuffer,0,len);
    bytesInOutput=len;
  }
 else {
    is.read(inputBuffer,inPtr,2);
    int uncompLen=uint16(inputBuffer,inPtr);
    is.read(inputBuffer,0,len);
    decompressChunk(inputBuffer,0,outputBuffer,0,uncompLen);
    bytesInOutput=uncompLen;
  }
  return bytesInOutput;
}
