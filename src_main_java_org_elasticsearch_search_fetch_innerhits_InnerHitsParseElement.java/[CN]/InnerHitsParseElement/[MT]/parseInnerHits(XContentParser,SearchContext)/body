{
  XContentParser.Token token;
  Map<String,InnerHitsContext.BaseInnerHits> innerHitsMap=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token != XContentParser.Token.FIELD_NAME) {
      throw new ElasticsearchIllegalArgumentException("Unexpected token " + token + " in [inner_hits]: inner_hit definitions must start with the name of the inner_hit.");
    }
    final String innerHitName=parser.currentName();
    token=parser.nextToken();
    if (token != XContentParser.Token.START_OBJECT) {
      throw new ElasticsearchIllegalArgumentException("Inner hit definition for [" + innerHitName + " starts with a ["+ token+ "], expected a ["+ XContentParser.Token.START_OBJECT+ "].");
    }
    InnerHitsContext.BaseInnerHits innerHits=parseInnerHit(parser,context,innerHitName);
    if (innerHitsMap == null) {
      innerHitsMap=new HashMap<>();
    }
    innerHitsMap.put(innerHitName,innerHits);
  }
  return innerHitsMap;
}
