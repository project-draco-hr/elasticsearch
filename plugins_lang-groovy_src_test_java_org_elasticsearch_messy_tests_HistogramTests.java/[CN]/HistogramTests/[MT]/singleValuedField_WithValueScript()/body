{
  SearchResponse response=client().prepareSearch("idx").addAggregation(histogram("histo").field(SINGLE_VALUED_FIELD_NAME).script(new Script("_value + 1")).interval(interval)).execute().actionGet();
  assertSearchResponse(response);
  final int numBuckets=(numDocs + 1) / interval - 2 / interval + 1;
  final long[] counts=new long[(numDocs + 1) / interval + 1];
  for (int i=0; i < numDocs; ++i) {
    ++counts[(i + 2) / interval];
  }
  Histogram histo=response.getAggregations().get("histo");
  assertThat(histo,notNullValue());
  assertThat(histo.getName(),equalTo("histo"));
  List<? extends Bucket> buckets=histo.getBuckets();
  assertThat(buckets.size(),equalTo(numBuckets));
  for (int i=0; i < numBuckets; i++) {
    Histogram.Bucket bucket=buckets.get(i);
    assertThat(bucket,notNullValue());
    int key=((2 / interval) + i) * interval;
    assertThat(((Number)bucket.getKey()).longValue(),equalTo((long)key));
    assertThat(bucket.getDocCount(),equalTo(counts[key / interval]));
  }
}
