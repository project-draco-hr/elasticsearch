{
  double sigma=randomDouble() * randomIntBetween(1,10);
  SearchResponse searchResponse=client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(extendedStats("stats").field("values").script("_value - dec").param("dec",1).sigma(sigma)).execute().actionGet();
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(10l));
  ExtendedStats stats=searchResponse.getAggregations().get("stats");
  assertThat(stats,notNullValue());
  assertThat(stats.getName(),equalTo("stats"));
  assertThat(stats.getAvg(),equalTo((double)(1 + 2 + 3+ 4+ 5+ 6+ 7+ 8+ 9+ 10+ 2+ 3+ 4+ 5+ 6+ 7+ 8+ 9+ 10+ 11) / 20));
  assertThat(stats.getMin(),equalTo(1.0));
  assertThat(stats.getMax(),equalTo(11.0));
  assertThat(stats.getSum(),equalTo((double)1 + 2 + 3+ 4+ 5+ 6+ 7+ 8+ 9+ 10+ 2+ 3+ 4+ 5+ 6+ 7+ 8+ 9+ 10+ 11));
  assertThat(stats.getCount(),equalTo(20l));
  assertThat(stats.getSumOfSquares(),equalTo((double)1 + 4 + 9+ 16+ 25+ 36+ 49+ 64+ 81+ 100+ 4+ 9+ 16+ 25+ 36+ 49+ 64+ 81+ 100+ 121));
  assertThat(stats.getVariance(),equalTo(variance(1,2,3,4,5,6,7,8,9,10,2,3,4,5,6,7,8,9,10,11)));
  assertThat(stats.getStdDeviation(),equalTo(stdDev(1,2,3,4,5,6,7,8,9,10,2,3,4,5,6,7,8,9,10,11)));
  checkUpperLowerBounds(stats,sigma);
}
