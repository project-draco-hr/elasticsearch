{
  if (isAllIndices(aliasesOrIndices)) {
    return allOnlyOpen ? concreteAllOpenIndices() : concreteAllIndices();
  }
  aliasesOrIndices=convertFromWildcards(aliasesOrIndices,allOnlyOpen,ignoreIndices);
  if (aliasesOrIndices.length == 1) {
    String aliasOrIndex=aliasesOrIndices[0];
    if (this.indices.containsKey(aliasOrIndex)) {
      return aliasesOrIndices;
    }
    String[] actualLst=aliasAndIndexToIndexMap.get(aliasOrIndex);
    if (actualLst == null) {
      if (ignoreIndices == IgnoreIndices.MISSING) {
        return Strings.EMPTY_ARRAY;
      }
      throw new IndexMissingException(new Index(aliasOrIndex));
    }
 else {
      return actualLst;
    }
  }
  boolean possiblyAliased=false;
  for (  String index : aliasesOrIndices) {
    if (!this.indices.containsKey(index)) {
      possiblyAliased=true;
      break;
    }
  }
  if (!possiblyAliased) {
    return aliasesOrIndices;
  }
  Set<String> actualIndices=new THashSet<String>();
  for (  String index : aliasesOrIndices) {
    String[] actualLst=aliasAndIndexToIndexMap.get(index);
    if (actualLst == null) {
      if (ignoreIndices != IgnoreIndices.MISSING) {
        throw new IndexMissingException(new Index(index));
      }
    }
 else {
      for (      String x : actualLst) {
        actualIndices.add(x);
      }
    }
  }
  return actualIndices.toArray(new String[actualIndices.size()]);
}
