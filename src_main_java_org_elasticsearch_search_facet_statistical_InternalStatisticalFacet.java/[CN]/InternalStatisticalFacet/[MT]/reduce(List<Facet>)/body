{
  if (facets.size() == 1) {
    return facets.get(0);
  }
  double min=Double.NaN;
  double max=Double.NaN;
  double total=0;
  double sumOfSquares=0;
  long count=0;
  for (  Facet facet : facets) {
    InternalStatisticalFacet statsFacet=(InternalStatisticalFacet)facet;
    if (statsFacet.getMin() < min || Double.isNaN(min)) {
      min=statsFacet.getMin();
    }
    if (statsFacet.getMax() > max || Double.isNaN(max)) {
      max=statsFacet.getMax();
    }
    total+=statsFacet.getTotal();
    sumOfSquares+=statsFacet.getSumOfSquares();
    count+=statsFacet.getCount();
  }
  return new InternalStatisticalFacet(getName(),min,max,total,sumOfSquares,count);
}
