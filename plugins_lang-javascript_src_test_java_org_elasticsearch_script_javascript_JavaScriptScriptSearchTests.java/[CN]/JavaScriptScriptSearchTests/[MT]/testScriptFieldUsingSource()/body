{
  createIndex("test");
  index("test","type1","1",jsonBuilder().startObject().startObject("obj1").field("test","something").endObject().startObject("obj2").startArray("arr2").value("arr_value1").value("arr_value2").endArray().endObject().endObject());
  refresh();
  SearchResponse response=client().prepareSearch().setQuery(matchAllQuery()).addScriptField("s_obj1",new Script("_source.obj1",ScriptService.ScriptType.INLINE,"js",null)).addScriptField("s_obj1_test",new Script("_source.obj1.test",ScriptService.ScriptType.INLINE,"js",null)).addScriptField("s_obj2",new Script("_source.obj2",ScriptService.ScriptType.INLINE,"js",null)).addScriptField("s_obj2_arr2",new Script("_source.obj2.arr2",ScriptService.ScriptType.INLINE,"js",null)).execute().actionGet();
  Map<String,Object> sObj1=(Map<String,Object>)response.getHits().getAt(0).field("s_obj1").value();
  assertThat(sObj1.get("test").toString(),equalTo("something"));
  assertThat(response.getHits().getAt(0).field("s_obj1_test").value().toString(),equalTo("something"));
  Map<String,Object> sObj2=(Map<String,Object>)response.getHits().getAt(0).field("s_obj2").value();
  List sObj2Arr2=(List)sObj2.get("arr2");
  assertThat(sObj2Arr2.size(),equalTo(2));
  assertThat(sObj2Arr2.get(0).toString(),equalTo("arr_value1"));
  assertThat(sObj2Arr2.get(1).toString(),equalTo("arr_value2"));
  sObj2Arr2=(List)response.getHits().getAt(0).field("s_obj2_arr2").values();
  assertThat(sObj2Arr2.size(),equalTo(2));
  assertThat(sObj2Arr2.get(0).toString(),equalTo("arr_value1"));
  assertThat(sObj2Arr2.get(1).toString(),equalTo("arr_value2"));
}
