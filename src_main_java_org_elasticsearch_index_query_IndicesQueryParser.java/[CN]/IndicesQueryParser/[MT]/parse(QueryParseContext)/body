{
  XContentParser parser=parseContext.parser();
  Query query=null;
  Query noMatchQuery=Queries.newMatchAllQuery();
  boolean queryFound=false;
  boolean indicesFound=false;
  boolean currentIndexMatchesIndices=false;
  String queryName=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("query".equals(currentFieldName)) {
        queryFound=true;
        if (indicesFound && !currentIndexMatchesIndices) {
          parseContext.parser().skipChildren();
        }
 else {
          query=parseContext.parseInnerQuery();
        }
      }
 else       if ("no_match_query".equals(currentFieldName)) {
        if (indicesFound && currentIndexMatchesIndices) {
          parseContext.parser().skipChildren();
        }
 else {
          noMatchQuery=parseContext.parseInnerQuery();
        }
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[indices] query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if ("indices".equals(currentFieldName)) {
        if (indicesFound) {
          throw new QueryParsingException(parseContext.index(),"[indices] indices or index already specified");
        }
        indicesFound=true;
        Collection<String> indices=new ArrayList<>();
        while (parser.nextToken() != XContentParser.Token.END_ARRAY) {
          String value=parser.textOrNull();
          if (value == null) {
            throw new QueryParsingException(parseContext.index(),"[indices] no value specified for 'indices' entry");
          }
          indices.add(value);
        }
        currentIndexMatchesIndices=matchesIndices(parseContext.index().name(),indices.toArray(new String[indices.size()]));
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[indices] query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token.isValue()) {
      if ("index".equals(currentFieldName)) {
        if (indicesFound) {
          throw new QueryParsingException(parseContext.index(),"[indices] indices or index already specified");
        }
        indicesFound=true;
        currentIndexMatchesIndices=matchesIndices(parseContext.index().name(),parser.text());
      }
 else       if ("no_match_query".equals(currentFieldName)) {
        String type=parser.text();
        if ("all".equals(type)) {
          noMatchQuery=Queries.newMatchAllQuery();
        }
 else         if ("none".equals(type)) {
          noMatchQuery=Queries.newMatchNoDocsQuery();
        }
      }
 else       if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[indices] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (!queryFound) {
    throw new QueryParsingException(parseContext.index(),"[indices] requires 'query' element");
  }
  if (!indicesFound) {
    throw new QueryParsingException(parseContext.index(),"[indices] requires 'indices' or 'index' element");
  }
  Query chosenQuery;
  if (currentIndexMatchesIndices) {
    chosenQuery=query;
  }
 else {
    chosenQuery=noMatchQuery;
  }
  if (queryName != null) {
    parseContext.addNamedQuery(queryName,chosenQuery);
  }
  return chosenQuery;
}
