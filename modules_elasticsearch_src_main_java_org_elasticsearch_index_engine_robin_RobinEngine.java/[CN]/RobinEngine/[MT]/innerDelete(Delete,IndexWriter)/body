{
synchronized (dirtyLock(delete.uid())) {
    if (delete.origin() == Operation.Origin.RECOVERY) {
      writer.deleteDocuments(delete.uid());
      Translog.Location translogLocation=translog.add(new Translog.Delete(delete));
      if (delete.version() != 0) {
        versionMap.put(delete.uid().text(),new VersionValue(delete.version(),true,threadPool.estimatedTimeInMillis(),translogLocation));
      }
    }
 else {
      long currentVersion;
      VersionValue versionValue=versionMap.get(delete.uid().text());
      if (versionValue == null) {
        currentVersion=loadCurrentVersionFromIndex(delete.uid());
      }
 else {
        if (versionValue.delete() && (threadPool.estimatedTimeInMillis() - versionValue.time()) > gcDeletesInMillis) {
          currentVersion=-1;
        }
 else {
          currentVersion=versionValue.version();
        }
      }
      long updatedVersion;
      if (delete.origin() == Operation.Origin.PRIMARY) {
        if (delete.versionType() == VersionType.INTERNAL) {
          if (delete.version() != 0 && currentVersion != -2) {
            if (currentVersion == -1) {
              throw new VersionConflictEngineException(shardId,delete.type(),delete.id(),-1,delete.version());
            }
 else             if (delete.version() != currentVersion) {
              throw new VersionConflictEngineException(shardId,delete.type(),delete.id(),currentVersion,delete.version());
            }
          }
          updatedVersion=currentVersion < 0 ? 1 : currentVersion + 1;
        }
 else {
          if (currentVersion == -1) {
            throw new VersionConflictEngineException(shardId,delete.type(),delete.id(),-1,delete.version());
          }
 else           if (currentVersion >= delete.version()) {
            throw new VersionConflictEngineException(shardId,delete.type(),delete.id(),currentVersion,delete.version());
          }
          updatedVersion=delete.version();
        }
      }
 else {
        if (currentVersion != -2) {
          if (currentVersion != -1) {
            if (delete.version() <= currentVersion) {
              throw new VersionConflictEngineException(shardId,delete.type(),delete.id(),currentVersion - 1,delete.version());
            }
          }
        }
        updatedVersion=delete.version();
      }
      if (currentVersion == -1) {
        delete.version(0).notFound(true);
      }
 else       if (versionValue != null && versionValue.delete()) {
        delete.version(versionValue.version()).notFound(true);
      }
 else {
        delete.version(updatedVersion);
        writer.deleteDocuments(delete.uid());
        Translog.Location translogLocation=translog.add(new Translog.Delete(delete));
        versionMap.put(delete.uid().text(),new VersionValue(updatedVersion,true,threadPool.estimatedTimeInMillis(),translogLocation));
      }
    }
  }
}
