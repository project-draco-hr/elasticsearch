{
  if (indexWriter == null) {
    throw new EngineClosedException(shardId);
  }
  if (disableFlushCounter > 0) {
    throw new FlushNotAllowedEngineException(shardId,"Recovery is in progress, flush is not allowed");
  }
  if (!flushing.compareAndSet(false,true)) {
    throw new FlushNotAllowedEngineException(shardId,"Already flushing...");
  }
  try {
    if (indexWriter.getMergePolicy() instanceof EnableMergePolicy) {
      ((EnableMergePolicy)indexWriter.getMergePolicy()).enableMerge();
    }
    indexWriter.maybeMerge();
  }
 catch (  Exception e) {
    flushing.set(false);
    throw new FlushFailedEngineException(shardId,e);
  }
 finally {
    if (indexWriter.getMergePolicy() instanceof EnableMergePolicy) {
      ((EnableMergePolicy)indexWriter.getMergePolicy()).disableMerge();
    }
  }
  rwl.writeLock().lock();
  try {
    if (indexWriter == null) {
      throw new EngineClosedException(shardId);
    }
    if (disableFlushCounter > 0) {
      throw new FlushNotAllowedEngineException(shardId,"Recovery is in progress, flush is not allowed");
    }
    if (flush.full()) {
      dirty=false;
      try {
        indexWriter.close();
        indexWriter=createWriter();
        AcquirableResource<ReaderSearcherHolder> current=nrtResource;
        nrtResource=buildNrtResource(indexWriter);
        current.markForClose();
        translog.newTranslog(newTransactionLogId());
      }
 catch (      IOException e) {
        throw new FlushFailedEngineException(shardId,e);
      }
    }
 else {
      try {
        indexWriter.commit();
        translog.newTranslog(newTransactionLogId());
      }
 catch (      IOException e) {
        throw new FlushFailedEngineException(shardId,e);
      }
    }
    versionMap.clear();
    dirty=true;
    refresh(new Refresh(true));
    if (postFlushSearcher != null) {
      postFlushSearcher.release();
    }
    postFlushSearcher=searcher();
  }
  finally {
    rwl.writeLock().unlock();
    flushing.set(false);
  }
}
