{
  boolean breakLines=(options & DO_BREAK_LINES) != 0;
  int encLen=(len / 3) * 4 + (len % 3 > 0 ? 4 : 0);
  if (breakLines) {
    encLen+=encLen / MAX_LINE_LENGTH;
  }
  byte[] outBuff=new byte[encLen];
  int d=0;
  int e=0;
  int len2=len - 2;
  int lineLength=0;
  for (; d < len2; d+=3, e+=4) {
    encode3to4(source,d + off,3,outBuff,e,options);
    lineLength+=4;
    if (breakLines && lineLength >= MAX_LINE_LENGTH) {
      outBuff[e + 4]=NEW_LINE;
      e++;
      lineLength=0;
    }
  }
  if (d < len) {
    encode3to4(source,d + off,len - d,outBuff,e,options);
    e+=4;
  }
  if (e <= outBuff.length - 1) {
    byte[] finalOut=new byte[e];
    System.arraycopy(outBuff,0,finalOut,0,e);
    return finalOut;
  }
 else {
    return outBuff;
  }
}
