{
  int outBuffPosn=0;
  byte[] b4=new byte[4];
  int b4Posn=0;
  for (int i=off; i < off + len; i++) {
    byte sbiDecode=DECODABET[source[i] & 0xFF];
    if (sbiDecode >= WHITE_SPACE_ENC) {
      if (sbiDecode >= EQUALS_SIGN_ENC) {
        b4[b4Posn++]=source[i];
        if (b4Posn > 3) {
          outBuffPosn+=decode4to3(b4,0,outBuff,outBuffPosn,options);
          b4Posn=0;
          if (source[i] == EQUALS_SIGN) {
            if (i + 1 < len + off) {
              throw new IOException(String.format(Locale.ROOT,"Found equals sign at position %d of the base64 string, not at the end",i));
            }
            break;
          }
        }
 else {
          if (source[i] == EQUALS_SIGN && len + off > i && source[i + 1] != EQUALS_SIGN) {
            throw new IOException(String.format(Locale.ROOT,"Found equals sign at position %d of the base64 string, not at the end",i));
          }
        }
      }
    }
 else {
      throw new IOException(String.format(Locale.ROOT,"Bad Base64 input character decimal %d in array position %d",((int)source[i]) & 0xFF,i));
    }
  }
  return outBuffPosn;
}
