{
  final DiscoveryNode node1=new DiscoveryNode("node1",DummyTransportAddress.INSTANCE,emptyMap(),emptySet(),Version.CURRENT);
  final DiscoveryNode node2=new DiscoveryNode("node2",DummyTransportAddress.INSTANCE,emptyMap(),emptySet(),Version.CURRENT);
  final DiscoveryNodes nodes=DiscoveryNodes.builder().put(node1).put(node2).build();
  ClusterState noMaster1=ClusterState.builder(ClusterName.DEFAULT).version(randomInt(5)).nodes(nodes).build();
  ClusterState noMaster2=ClusterState.builder(ClusterName.DEFAULT).version(randomInt(5)).nodes(nodes).build();
  ClusterState withMaster1a=ClusterState.builder(ClusterName.DEFAULT).version(randomInt(5)).nodes(DiscoveryNodes.builder(nodes).masterNodeId(node1.getId())).build();
  ClusterState withMaster1b=ClusterState.builder(ClusterName.DEFAULT).version(randomInt(5)).nodes(DiscoveryNodes.builder(nodes).masterNodeId(node1.getId())).build();
  ClusterState withMaster2=ClusterState.builder(ClusterName.DEFAULT).version(randomInt(5)).nodes(DiscoveryNodes.builder(nodes).masterNodeId(node2.getId())).build();
  assertFalse(noMaster1.supersedes(noMaster2));
  assertFalse(noMaster1.supersedes(withMaster1a));
  assertFalse(withMaster1a.supersedes(withMaster2));
  assertFalse(withMaster1a.supersedes(noMaster1));
  assertThat(withMaster1a.supersedes(withMaster1b),equalTo(withMaster1a.version() > withMaster1b.version()));
}
