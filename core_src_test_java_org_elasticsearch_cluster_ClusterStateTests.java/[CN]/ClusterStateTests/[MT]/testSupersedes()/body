{
  final Version version=Version.CURRENT;
  final DiscoveryNode node1=new DiscoveryNode("node1",LocalTransportAddress.buildUnique(),emptyMap(),emptySet(),version);
  final DiscoveryNode node2=new DiscoveryNode("node2",LocalTransportAddress.buildUnique(),emptyMap(),emptySet(),version);
  final DiscoveryNodes nodes=DiscoveryNodes.builder().add(node1).add(node2).build();
  ClusterName name=ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY);
  ClusterState noMaster1=ClusterState.builder(name).version(randomInt(5)).nodes(nodes).build();
  ClusterState noMaster2=ClusterState.builder(name).version(randomInt(5)).nodes(nodes).build();
  ClusterState withMaster1a=ClusterState.builder(name).version(randomInt(5)).nodes(DiscoveryNodes.builder(nodes).masterNodeId(node1.getId())).build();
  ClusterState withMaster1b=ClusterState.builder(name).version(randomInt(5)).nodes(DiscoveryNodes.builder(nodes).masterNodeId(node1.getId())).build();
  ClusterState withMaster2=ClusterState.builder(name).version(randomInt(5)).nodes(DiscoveryNodes.builder(nodes).masterNodeId(node2.getId())).build();
  assertFalse(noMaster1.supersedes(noMaster2));
  assertFalse(noMaster1.supersedes(withMaster1a));
  assertFalse(withMaster1a.supersedes(withMaster2));
  assertFalse(withMaster1a.supersedes(noMaster1));
  assertThat(withMaster1a.supersedes(withMaster1b),equalTo(withMaster1a.version() > withMaster1b.version()));
}
