{
  int value;
  if (context.externalValueSet()) {
    Object externalValue=context.externalValue();
    if (externalValue == null) {
      if (nullValue == null) {
        return null;
      }
      value=nullValue;
    }
 else {
      value=((Number)externalValue).intValue();
    }
    if (includeInAll == null || includeInAll) {
      context.allEntries().addText(names.fullName(),Integer.toString(value),boost);
    }
  }
 else {
    if (context.parser().currentToken() == XContentParser.Token.VALUE_NULL) {
      if (nullValue == null) {
        return null;
      }
      value=nullValue;
      if (nullValueAsString != null && (includeInAll == null || includeInAll)) {
        context.allEntries().addText(names.fullName(),nullValueAsString,boost);
      }
    }
 else {
      value=context.parser().intValue();
      if (includeInAll == null || includeInAll) {
        context.allEntries().addText(names.fullName(),context.parser().text(),boost);
      }
    }
  }
  final int fValue=value;
  return new CustomNumericField(names.indexName(),indexed(),stored() ? Numbers.intToBytes(fValue) : null){
    @Override public TokenStream tokenStreamValue(){
      if (indexed()) {
        return popCachedStream(precisionStep).setIntValue(fValue);
      }
 else {
        return null;
      }
    }
  }
;
}
