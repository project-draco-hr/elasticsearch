{
  SearchResponse response=client().prepareSearch("idx").addAggregation(histogram("histo").field(FIELD_1_NAME).interval(interval).subAggregation(sum("field2Sum").field(FIELD_2_NAME)).subAggregation(bucketScript("seriesArithmetic",new Script("_value0",ScriptType.INLINE,null,null),"field2Sum"))).execute().actionGet();
  assertSearchResponse(response);
  InternalHistogram<Bucket> histo=response.getAggregations().get("histo");
  assertThat(histo,notNullValue());
  assertThat(histo.getName(),equalTo("histo"));
  List<? extends Bucket> buckets=histo.getBuckets();
  for (int i=0; i < buckets.size(); ++i) {
    Histogram.Bucket bucket=buckets.get(i);
    if (bucket.getDocCount() == 0) {
      SimpleValue seriesArithmetic=bucket.getAggregations().get("seriesArithmetic");
      assertThat(seriesArithmetic,nullValue());
    }
 else {
      Sum field2Sum=bucket.getAggregations().get("field2Sum");
      assertThat(field2Sum,notNullValue());
      double field2SumValue=field2Sum.getValue();
      SimpleValue seriesArithmetic=bucket.getAggregations().get("seriesArithmetic");
      assertThat(seriesArithmetic,notNullValue());
      double seriesArithmeticValue=seriesArithmetic.value();
      assertThat(seriesArithmeticValue,equalTo(field2SumValue));
    }
  }
}
