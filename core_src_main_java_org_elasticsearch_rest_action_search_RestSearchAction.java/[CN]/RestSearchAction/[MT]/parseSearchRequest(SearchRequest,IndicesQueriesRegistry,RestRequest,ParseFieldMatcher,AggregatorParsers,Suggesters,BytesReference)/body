{
  if (searchRequest.source() == null) {
    searchRequest.source(new SearchSourceBuilder());
  }
  searchRequest.indices(Strings.splitStringByCommaToArray(request.param("index")));
  boolean isTemplateRequest=request.path().endsWith("/template");
  if (restContent == null) {
    if (RestActions.hasBodyContent(request)) {
      restContent=RestActions.getRestContent(request);
    }
  }
  if (restContent != null) {
    QueryParseContext context=new QueryParseContext(indicesQueriesRegistry);
    try (XContentParser parser=XContentFactory.xContent(restContent).createParser(restContent)){
      context.reset(parser);
      context.parseFieldMatcher(parseFieldMatcher);
      if (isTemplateRequest) {
        Template template=TemplateQueryParser.parse(parser,context.parseFieldMatcher(),"params","template");
        searchRequest.template(template);
      }
 else {
        searchRequest.source().parseXContent(parser,context,aggParsers,suggesters);
      }
    }
   }
  String searchType=request.param("search_type");
  if (SearchType.fromString(searchType,parseFieldMatcher).equals(SearchType.QUERY_AND_FETCH) || SearchType.fromString(searchType,parseFieldMatcher).equals(SearchType.DFS_QUERY_AND_FETCH)) {
    throw new IllegalArgumentException("Unsupported search type [" + searchType + "]");
  }
 else {
    searchRequest.searchType(searchType);
  }
  parseSearchSource(searchRequest.source(),request);
  searchRequest.requestCache(request.paramAsBoolean("request_cache",null));
  String scroll=request.param("scroll");
  if (scroll != null) {
    searchRequest.scroll(new Scroll(parseTimeValue(scroll,null,"scroll")));
  }
  searchRequest.types(Strings.splitStringByCommaToArray(request.param("type")));
  searchRequest.routing(request.param("routing"));
  searchRequest.preference(request.param("preference"));
  searchRequest.indicesOptions(IndicesOptions.fromRequest(request,searchRequest.indicesOptions()));
}
