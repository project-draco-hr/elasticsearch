{
  String[] indices=Strings.splitStringByCommaToArray(request.param("index"));
  SearchRequest searchRequest=new SearchRequest(indices);
  boolean isTemplateRequest=request.path().endsWith("/template");
  final SearchSourceBuilder builder;
  if (RestActions.hasBodyContent(request)) {
    BytesReference restContent=RestActions.getRestContent(request);
    QueryParseContext context=new QueryParseContext(indicesQueriesRegistry);
    System.out.println(restContent.toUtf8());
    if (isTemplateRequest) {
      try (XContentParser parser=XContentFactory.xContent(restContent).createParser(restContent)){
        context.reset(parser);
        Template template=TemplateQueryParser.parse(parser,context.parseFieldMatcher(),"params","template");
        searchRequest.template(template);
      }
       builder=null;
    }
 else {
      try (XContentParser requestParser=XContentFactory.xContent(restContent).createParser(restContent)){
        context.reset(requestParser);
        builder=SearchSourceBuilder.PROTOTYPE.fromXContent(requestParser,context);
      }
     }
  }
 else {
    builder=null;
  }
  String searchType=request.param("search_type");
  if (SearchType.fromString(searchType,parseFieldMatcher).equals(SearchType.QUERY_AND_FETCH) || SearchType.fromString(searchType,parseFieldMatcher).equals(SearchType.DFS_QUERY_AND_FETCH)) {
    throw new IllegalArgumentException("Unsupported search type [" + searchType + "]");
  }
 else {
    searchRequest.searchType(searchType);
  }
  if (builder == null) {
    SearchSourceBuilder extraBuilder=new SearchSourceBuilder();
    if (parseSearchSource(extraBuilder,request)) {
      searchRequest.source(extraBuilder);
    }
  }
 else {
    parseSearchSource(builder,request);
    searchRequest.source(builder);
  }
  searchRequest.requestCache(request.paramAsBoolean("request_cache",null));
  String scroll=request.param("scroll");
  if (scroll != null) {
    searchRequest.scroll(new Scroll(parseTimeValue(scroll,null,"scroll")));
  }
  searchRequest.types(Strings.splitStringByCommaToArray(request.param("type")));
  searchRequest.routing(request.param("routing"));
  searchRequest.preference(request.param("preference"));
  searchRequest.indicesOptions(IndicesOptions.fromRequest(request,searchRequest.indicesOptions()));
  return searchRequest;
}
