{
  builder.startObject(Fields.PROCESS);
  builder.field(Fields.TIMESTAMP,timestamp);
  builder.field(Fields.OPEN_FILE_DESCRIPTORS,openFileDescriptors);
  if (cpu != null) {
    builder.startObject(Fields.CPU);
    builder.field(Fields.PERCENT,cpu.percent());
    builder.timeValueField(Fields.SYS_IN_MILLIS,Fields.SYS,cpu.sys);
    builder.timeValueField(Fields.USER_IN_MILLIS,Fields.USER,cpu.user);
    builder.timeValueField(Fields.TOTAL_IN_MILLIS,Fields.TOTAL,cpu.total);
    builder.endObject();
  }
  if (mem != null) {
    builder.startObject(Fields.MEM);
    builder.byteSizeField(Fields.RESIDENT_IN_BYTES,Fields.RESIDENT,mem.resident);
    builder.byteSizeField(Fields.SHARE_IN_BYTES,Fields.SHARE,mem.share);
    builder.byteSizeField(Fields.TOTAL_VIRTUAL_IN_BYTES,Fields.TOTAL_VIRTUAL,mem.totalVirtual);
    builder.endObject();
  }
  builder.endObject();
  return builder;
}
