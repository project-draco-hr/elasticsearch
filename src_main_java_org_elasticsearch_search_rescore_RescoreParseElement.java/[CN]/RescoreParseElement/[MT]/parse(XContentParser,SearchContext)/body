{
  String fieldName=null;
  RescoreSearchContext rescoreContext=null;
  Integer windowSize=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      fieldName=parser.currentName();
      if (QueryRescorer.NAME.equals(fieldName)) {
        Rescorer rescorer=QueryRescorer.INSTANCE;
        token=parser.nextToken();
        if (token != XContentParser.Token.START_OBJECT) {
          throw new ElasticsearchParseException("rescore type malformed, must start with start_object");
        }
        rescoreContext=rescorer.parse(parser,context);
      }
    }
 else     if (token.isValue()) {
      if ("window_size".equals(fieldName)) {
        windowSize=parser.intValue();
      }
 else {
        throw new ElasticsearchIllegalArgumentException("rescore doesn't support [" + fieldName + "]");
      }
    }
  }
  if (rescoreContext == null) {
    throw new ElasticsearchIllegalArgumentException("missing rescore type");
  }
  if (windowSize != null) {
    rescoreContext.setWindowSize(windowSize.intValue());
  }
  context.rescore(rescoreContext);
}
