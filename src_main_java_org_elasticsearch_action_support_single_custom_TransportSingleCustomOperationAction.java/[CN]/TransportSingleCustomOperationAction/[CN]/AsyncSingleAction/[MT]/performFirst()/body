{
  if (shardsIt == null) {
    if (request.operationThreaded()) {
      request.beforeLocalFork();
      threadPool.executor(executor()).execute(new Runnable(){
        @Override public void run(){
          try {
            Response response=shardOperation(request,-1);
            listener.onResponse(response);
          }
 catch (          Throwable e) {
            onFailure(null,e);
          }
        }
      }
);
      return;
    }
 else {
      try {
        final Response response=shardOperation(request,-1);
        listener.onResponse(response);
        return;
      }
 catch (      Throwable e) {
        onFailure(null,e);
      }
    }
    return;
  }
  if (request.preferLocalShard()) {
    boolean foundLocal=false;
    ShardRouting shardX;
    while ((shardX=shardsIt.nextOrNull()) != null) {
      final ShardRouting shard=shardX;
      if (shard.currentNodeId().equals(nodes.localNodeId())) {
        foundLocal=true;
        if (request.operationThreaded()) {
          request.beforeLocalFork();
          threadPool.executor(executor()).execute(new Runnable(){
            @Override public void run(){
              try {
                Response response=shardOperation(request,shard.id());
                listener.onResponse(response);
              }
 catch (              Throwable e) {
                shardsIt.reset();
                onFailure(shard,e);
              }
            }
          }
);
          return;
        }
 else {
          try {
            final Response response=shardOperation(request,shard.id());
            listener.onResponse(response);
            return;
          }
 catch (          Throwable e) {
            shardsIt.reset();
            onFailure(shard,e);
          }
        }
      }
    }
    if (!foundLocal) {
      shardsIt.reset();
      perform(null);
    }
  }
 else {
    perform(null);
  }
}
