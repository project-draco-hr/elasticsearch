{
  int iterations=randomIntBetween(5,20);
  for (int i=0; i < iterations; i++) {
    boolean ignoreUnavailable=randomBoolean();
    boolean allowNoIndices=randomBoolean();
    boolean expandToOpenIndices=randomBoolean();
    boolean expandToClosedIndices=randomBoolean();
    boolean allowAliasesToMultipleIndices=randomBoolean();
    boolean forbidClosedIndices=randomBoolean();
    IndicesOptions indicesOptions=IndicesOptions.fromOptions(ignoreUnavailable,allowNoIndices,expandToOpenIndices,expandToClosedIndices,allowAliasesToMultipleIndices,forbidClosedIndices);
    assertThat(indicesOptions.ignoreUnavailable(),equalTo(ignoreUnavailable));
    assertThat(indicesOptions.allowNoIndices(),equalTo(allowNoIndices));
    assertThat(indicesOptions.expandWildcardsOpen(),equalTo(expandToOpenIndices));
    assertThat(indicesOptions.expandWildcardsClosed(),equalTo(expandToClosedIndices));
    assertThat(indicesOptions.allowAliasesToMultipleIndices(),equalTo(allowAliasesToMultipleIndices));
    assertThat(indicesOptions.allowAliasesToMultipleIndices(),equalTo(allowAliasesToMultipleIndices));
    assertThat(indicesOptions.forbidClosedIndices(),equalTo(forbidClosedIndices));
  }
}
