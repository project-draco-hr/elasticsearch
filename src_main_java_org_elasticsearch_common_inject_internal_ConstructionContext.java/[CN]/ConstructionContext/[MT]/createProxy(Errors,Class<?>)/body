{
  if (!expectedType.isInterface()) {
    throw errors.cannotSatisfyCircularDependency(expectedType).toException();
  }
  if (invocationHandlers == null) {
    invocationHandlers=new ArrayList<>();
  }
  DelegatingInvocationHandler<T> invocationHandler=new DelegatingInvocationHandler<>();
  invocationHandlers.add(invocationHandler);
  ClassLoader classLoader=expectedType.getClassLoader() == null ? ClassLoader.getSystemClassLoader() : expectedType.getClassLoader();
  return expectedType.cast(Proxy.newProxyInstance(classLoader,new Class[]{expectedType},invocationHandler));
}
