{
  if (!expectedType.isInterface()) {
    throw errors.cannotSatisfyCircularDependency(expectedType).toException();
  }
  if (invocationHandlers == null) {
    invocationHandlers=new ArrayList<DelegatingInvocationHandler<T>>();
  }
  DelegatingInvocationHandler<T> invocationHandler=new DelegatingInvocationHandler<T>();
  invocationHandlers.add(invocationHandler);
  ClassLoader classLoader=BytecodeGen.getClassLoader(expectedType);
  return expectedType.cast(Proxy.newProxyInstance(classLoader,new Class[]{expectedType},invocationHandler));
}
