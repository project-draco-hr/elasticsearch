{
synchronized (clusterGroups) {
    ClusterGroup clusterGroup=clusterGroups.get(clusterName);
    if (clusterGroup == null) {
      clusterGroup=new ClusterGroup();
      clusterGroups.put(clusterName,clusterGroup);
    }
    logger.debug("Connected to cluster [{}]",clusterName);
    clusterGroup.members().add(this);
    LocalDiscovery firstMaster=null;
    for (    LocalDiscovery localDiscovery : clusterGroup.members()) {
      if (localDiscovery.localNode().isMasterNode()) {
        firstMaster=localDiscovery;
        break;
      }
    }
    if (firstMaster != null && firstMaster.equals(this)) {
      master=true;
      final LocalDiscovery master=firstMaster;
      clusterService.submitStateUpdateTask("local-disco-initial_connect(master)",new ClusterStateUpdateTask(){
        @Override public boolean runOnlyOnMaster(){
          return false;
        }
        @Override public ClusterState execute(        ClusterState currentState){
          DiscoveryNodes.Builder nodesBuilder=DiscoveryNodes.builder();
          for (          LocalDiscovery discovery : clusterGroups.get(clusterName).members()) {
            nodesBuilder.put(discovery.localNode());
          }
          nodesBuilder.localNodeId(master.localNode().getId()).masterNodeId(master.localNode().getId());
          ClusterBlocks.Builder blocks=ClusterBlocks.builder().blocks(currentState.blocks()).removeGlobalBlock(discoverySettings.getNoMasterBlock());
          return ClusterState.builder(currentState).nodes(nodesBuilder).blocks(blocks).build();
        }
        @Override public void onFailure(        String source,        Exception e){
          logger.error("unexpected failure during [{}]",e,source);
        }
      }
);
    }
 else     if (firstMaster != null) {
      final LocalDiscovery master=firstMaster;
      firstMaster.clusterService.submitStateUpdateTask("local-disco-receive(from node[" + localNode() + "])",new ClusterStateUpdateTask(){
        @Override public boolean runOnlyOnMaster(){
          return false;
        }
        @Override public ClusterState execute(        ClusterState currentState){
          DiscoveryNodes.Builder nodesBuilder=DiscoveryNodes.builder();
          for (          LocalDiscovery discovery : clusterGroups.get(clusterName).members()) {
            nodesBuilder.put(discovery.localNode());
          }
          nodesBuilder.localNodeId(master.localNode().getId()).masterNodeId(master.localNode().getId());
          currentState=ClusterState.builder(currentState).nodes(nodesBuilder).build();
          RoutingAllocation.Result result=master.allocationService.reroute(currentState,"node_add");
          if (result.changed()) {
            currentState=ClusterState.builder(currentState).routingResult(result).build();
          }
          return currentState;
        }
        @Override public void onFailure(        String source,        Exception e){
          logger.error("unexpected failure during [{}]",e,source);
        }
      }
);
    }
  }
}
