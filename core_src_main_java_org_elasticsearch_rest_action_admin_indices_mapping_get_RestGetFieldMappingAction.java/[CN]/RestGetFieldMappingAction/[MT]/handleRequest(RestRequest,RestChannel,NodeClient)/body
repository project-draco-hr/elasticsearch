{
  final String[] indices=Strings.splitStringByCommaToArray(request.param("index"));
  final String[] types=request.paramAsStringArrayOrEmptyIfAll("type");
  final String[] fields=Strings.splitStringByCommaToArray(request.param("fields"));
  GetFieldMappingsRequest getMappingsRequest=new GetFieldMappingsRequest();
  getMappingsRequest.indices(indices).types(types).fields(fields).includeDefaults(request.paramAsBoolean("include_defaults",false));
  getMappingsRequest.indicesOptions(IndicesOptions.fromRequest(request,getMappingsRequest.indicesOptions()));
  getMappingsRequest.local(request.paramAsBoolean("local",getMappingsRequest.local()));
  client.admin().indices().getFieldMappings(getMappingsRequest,new RestBuilderListener<GetFieldMappingsResponse>(channel){
    @Override public RestResponse buildResponse(    GetFieldMappingsResponse response,    XContentBuilder builder) throws Exception {
      Map<String,Map<String,Map<String,FieldMappingMetaData>>> mappingsByIndex=response.mappings();
      boolean isPossibleSingleFieldRequest=indices.length == 1 && types.length == 1 && fields.length == 1;
      if (isPossibleSingleFieldRequest && isFieldMappingMissingField(mappingsByIndex)) {
        return new BytesRestResponse(OK,builder.startObject().endObject());
      }
      RestStatus status=OK;
      if (mappingsByIndex.isEmpty() && fields.length > 0) {
        status=NOT_FOUND;
      }
      builder.startObject();
      response.toXContent(builder,request);
      builder.endObject();
      return new BytesRestResponse(status,builder);
    }
  }
);
}
