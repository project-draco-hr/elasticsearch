{
  XContentBuilder mapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("float_payload_field").field("type","text").field("index_options","offsets").field("term_vector","no").field("analyzer","payload_float").endObject().startObject("string_payload_field").field("type","text").field("index_options","offsets").field("term_vector","no").field("analyzer","payload_string").endObject().startObject("int_payload_field").field("type","text").field("index_options","offsets").field("analyzer","payload_int").endObject().endObject().endObject().endObject();
  assertAcked(prepareCreate("test").addMapping("type1",mapping).setSettings(Settings.builder().put(indexSettings()).put("index.analysis.analyzer.payload_float.tokenizer","whitespace").putArray("index.analysis.analyzer.payload_float.filter","delimited_float").put("index.analysis.filter.delimited_float.delimiter","|").put("index.analysis.filter.delimited_float.encoding","float").put("index.analysis.filter.delimited_float.type","delimited_payload_filter").put("index.analysis.analyzer.payload_string.tokenizer","whitespace").putArray("index.analysis.analyzer.payload_string.filter","delimited_string").put("index.analysis.filter.delimited_string.delimiter","|").put("index.analysis.filter.delimited_string.encoding","identity").put("index.analysis.filter.delimited_string.type","delimited_payload_filter").put("index.analysis.analyzer.payload_int.tokenizer","whitespace").putArray("index.analysis.analyzer.payload_int.filter","delimited_int").put("index.analysis.filter.delimited_int.delimiter","|").put("index.analysis.filter.delimited_int.encoding","int").put("index.analysis.filter.delimited_int.type","delimited_payload_filter").put("index.number_of_shards",1)));
  indexRandom(true,client().prepareIndex("test","type1","1").setSource("float_payload_field","a|1 b|2 a|3 b "),client().prepareIndex("test","type1","2").setSource("string_payload_field","a|a b|b a|a b "),client().prepareIndex("test","type1","3").setSource("float_payload_field","a|4 b|5 a|6 b "),client().prepareIndex("test","type1","4").setSource("string_payload_field","a|b b|a a|b b "),client().prepareIndex("test","type1","5").setSource("float_payload_field","c "),client().prepareIndex("test","type1","6").setSource("int_payload_field","c|1"));
  Script script=createScript("_index.numDocs()");
  checkValueInEachDoc(6,script,6);
  script=createScript("_index['float_payload_field'].docCount()");
  checkValueInEachDoc(3,script,6);
  script=createScript("_index['non_existent_field'].docCount()");
  checkValueInEachDoc(0,script,6);
  script=createScript("_index['float_payload_field'].sumttf()");
  checkValueInEachDoc(9,script,6);
  script=createScript("_index['non_existent_field'].sumttf()");
  checkValueInEachDoc(0,script,6);
  script=createScript("_index['float_payload_field'].sumdf()");
  checkValueInEachDoc(5,script,6);
  script=createScript("_index['non_existent_field'].sumdf()");
  checkValueInEachDoc(0,script,6);
  script=createScript("term = _index['float_payload_field']['a']; if (term != null) {term.tf()}");
  Map<String,Object> expectedResults=new HashMap<>();
  expectedResults.put("1",2);
  expectedResults.put("2",0);
  expectedResults.put("3",2);
  expectedResults.put("4",0);
  expectedResults.put("5",0);
  expectedResults.put("6",0);
  checkValueInEachDoc(script,expectedResults,6);
  expectedResults.clear();
  script=createScript("term = _index['float_payload_field']['c']; if (term != null) {term.df()}");
  expectedResults.put("1",1L);
  expectedResults.put("2",1L);
  expectedResults.put("3",1L);
  expectedResults.put("4",1L);
  expectedResults.put("5",1L);
  expectedResults.put("6",1L);
  checkValueInEachDoc(script,expectedResults,6);
  expectedResults.clear();
  script=createScript("term = _index['float_payload_field']['non_existent_term']; if (term != null) {term.df()}");
  expectedResults.put("1",0L);
  expectedResults.put("2",0L);
  expectedResults.put("3",0L);
  expectedResults.put("4",0L);
  expectedResults.put("5",0L);
  expectedResults.put("6",0L);
  checkValueInEachDoc(script,expectedResults,6);
  expectedResults.clear();
  script=createScript("term = _index['non_existent_field']['non_existent_term']; if (term != null) {term.tf()}");
  expectedResults.put("1",0);
  expectedResults.put("2",0);
  expectedResults.put("3",0);
  expectedResults.put("4",0);
  expectedResults.put("5",0);
  expectedResults.put("6",0);
  checkValueInEachDoc(script,expectedResults,6);
  expectedResults.clear();
  script=createScript("term = _index['float_payload_field']['a']; if (term != null) {term.ttf()}");
  expectedResults.put("1",4L);
  expectedResults.put("2",4L);
  expectedResults.put("3",4L);
  expectedResults.put("4",4L);
  expectedResults.put("5",4L);
  expectedResults.put("6",4L);
  checkValueInEachDoc(script,expectedResults,6);
  expectedResults.clear();
  HashMap<String,List<Object>> expectedPayloadsArray=new HashMap<>();
  script=createPositionsArrayScript("float_payload_field","b",INCLUDE_ALL,"payloadAsFloat(-1)");
  float missingValue=-1;
  List<Object> payloadsFor1=new ArrayList<>();
  payloadsFor1.add(2f);
  payloadsFor1.add(missingValue);
  expectedPayloadsArray.put("1",payloadsFor1);
  List<Object> payloadsFor2=new ArrayList<>();
  payloadsFor2.add(5f);
  payloadsFor2.add(missingValue);
  expectedPayloadsArray.put("3",payloadsFor2);
  expectedPayloadsArray.put("6",new ArrayList<>());
  expectedPayloadsArray.put("5",new ArrayList<>());
  expectedPayloadsArray.put("4",new ArrayList<>());
  expectedPayloadsArray.put("2",new ArrayList<>());
  checkArrayValsInEachDoc(script,expectedPayloadsArray,6);
  expectedPayloadsArray.clear();
  payloadsFor1.clear();
  payloadsFor2.clear();
  script=createPositionsArrayScript("string_payload_field","b",INCLUDE_ALL,"payloadAsString()");
  payloadsFor1.add("b");
  payloadsFor1.add(null);
  expectedPayloadsArray.put("2",payloadsFor1);
  payloadsFor2.add("a");
  payloadsFor2.add(null);
  expectedPayloadsArray.put("4",payloadsFor2);
  expectedPayloadsArray.put("6",new ArrayList<>());
  expectedPayloadsArray.put("5",new ArrayList<>());
  expectedPayloadsArray.put("3",new ArrayList<>());
  expectedPayloadsArray.put("1",new ArrayList<>());
  checkArrayValsInEachDoc(script,expectedPayloadsArray,6);
  expectedPayloadsArray.clear();
  payloadsFor1.clear();
  payloadsFor2.clear();
  script=createPositionsArrayScript("int_payload_field","c",INCLUDE_ALL,"payloadAsInt(-1)");
  payloadsFor1=new ArrayList<>();
  payloadsFor1.add(1);
  expectedPayloadsArray.put("6",payloadsFor1);
  expectedPayloadsArray.put("5",new ArrayList<>());
  expectedPayloadsArray.put("4",new ArrayList<>());
  expectedPayloadsArray.put("3",new ArrayList<>());
  expectedPayloadsArray.put("2",new ArrayList<>());
  expectedPayloadsArray.put("1",new ArrayList<>());
  checkArrayValsInEachDoc(script,expectedPayloadsArray,6);
}
