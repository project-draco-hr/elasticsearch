{
  if (numMultiValuedDocs == 0) {
    return new SinglePackedOrdinals(svOrds.getMutable(),getNumOrds());
  }
  final String multiOrdinals=settings.get("multi_ordinals","sparse");
  if ("flat".equals(multiOrdinals)) {
    final ArrayList<int[]> ordinalBuffer=new ArrayList<int[]>();
    for (int i=0; i < mvOrds.length; i++) {
      final IntsRef docOrds=docOrds(i);
      while (ordinalBuffer.size() < docOrds.length) {
        ordinalBuffer.add(new int[mvOrds.length]);
      }
      for (int j=docOrds.offset; j < docOrds.offset + docOrds.length; j++) {
        ordinalBuffer.get(j)[i]=docOrds.ints[j];
      }
    }
    int[][] nativeOrdinals=new int[ordinalBuffer.size()][];
    for (int i=0; i < nativeOrdinals.length; i++) {
      nativeOrdinals[i]=ordinalBuffer.get(i);
    }
    return new MultiFlatArrayOrdinals(nativeOrdinals,getNumOrds());
  }
 else   if ("sparse".equals(multiOrdinals)) {
    int multiOrdinalsMaxDocs=settings.getAsInt("multi_ordinals_max_docs",16777216);
    return new SparseMultiArrayOrdinals(this,multiOrdinalsMaxDocs);
  }
 else {
    throw new ElasticSearchIllegalArgumentException("no applicable fielddata multi_ordinals value, got [" + multiOrdinals + "]");
  }
}
