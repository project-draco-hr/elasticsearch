{
  XContentParser parser=parseContext.parser();
  XContentParser.Token token=parser.nextToken();
  if (token != XContentParser.Token.FIELD_NAME) {
    throw new ParsingException(parser.getTokenLocation(),"[" + NAME + "] query malformed, no field");
  }
  String fieldName=parser.currentName();
  Object value=null;
  float boost=AbstractQueryBuilder.DEFAULT_BOOST;
  String analyzer=null;
  int slop=MatchQuery.DEFAULT_PHRASE_SLOP;
  int maxExpansion=FuzzyQuery.defaultMaxExpansions;
  String queryName=null;
  token=parser.nextToken();
  if (token == XContentParser.Token.START_OBJECT) {
    String currentFieldName=null;
    while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
      if (token == XContentParser.Token.FIELD_NAME) {
        currentFieldName=parser.currentName();
      }
 else       if (token.isValue()) {
        if (parseContext.parseFieldMatcher().match(currentFieldName,MatchQueryBuilder.QUERY_FIELD)) {
          value=parser.objectText();
        }
 else         if (parseContext.parseFieldMatcher().match(currentFieldName,MatchQueryBuilder.ANALYZER_FIELD)) {
          analyzer=parser.text();
        }
 else         if (parseContext.parseFieldMatcher().match(currentFieldName,AbstractQueryBuilder.BOOST_FIELD)) {
          boost=parser.floatValue();
        }
 else         if (parseContext.parseFieldMatcher().match(currentFieldName,MatchPhraseQueryBuilder.SLOP_FIELD)) {
          slop=parser.intValue();
        }
 else         if (parseContext.parseFieldMatcher().match(currentFieldName,MAX_EXPANSIONS_FIELD)) {
          maxExpansion=parser.intValue();
        }
 else         if (parseContext.parseFieldMatcher().match(currentFieldName,AbstractQueryBuilder.NAME_FIELD)) {
          queryName=parser.text();
        }
 else {
          throw new ParsingException(parser.getTokenLocation(),"[" + NAME + "] query does not support ["+ currentFieldName+ "]");
        }
      }
 else {
        throw new ParsingException(parser.getTokenLocation(),"[" + NAME + "] unknown token ["+ token+ "] after ["+ currentFieldName+ "]");
      }
    }
    parser.nextToken();
  }
 else {
    value=parser.objectText();
    token=parser.nextToken();
    if (token != XContentParser.Token.END_OBJECT) {
      throw new ParsingException(parser.getTokenLocation(),"[" + NAME + "] query parsed in simplified form, with direct field name, "+ "but included more options than just the field name, possibly use its 'options' form, with 'query' element?");
    }
  }
  if (value == null) {
    throw new ParsingException(parser.getTokenLocation(),"No text specified for text query");
  }
  MatchPhrasePrefixQueryBuilder matchQuery=new MatchPhrasePrefixQueryBuilder(fieldName,value);
  matchQuery.analyzer(analyzer);
  matchQuery.slop(slop);
  matchQuery.maxExpansions(maxExpansion);
  matchQuery.queryName(queryName);
  matchQuery.boost(boost);
  return matchQuery;
}
