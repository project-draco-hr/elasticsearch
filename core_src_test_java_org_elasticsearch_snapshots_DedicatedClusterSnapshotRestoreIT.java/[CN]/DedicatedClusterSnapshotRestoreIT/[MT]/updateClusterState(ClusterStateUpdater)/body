{
  final CountDownLatch countDownLatch=new CountDownLatch(1);
  final ClusterService clusterService=internalCluster().getInstance(ClusterService.class);
  clusterService.submitStateUpdateTask("test",new ProcessedClusterStateUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState) throws Exception {
      return updater.execute(currentState);
    }
    @Override public void onFailure(    String source,    @Nullable Throwable t){
      countDownLatch.countDown();
    }
    @Override public void clusterStateProcessed(    String source,    ClusterState oldState,    ClusterState newState){
      countDownLatch.countDown();
    }
  }
);
  countDownLatch.await();
}
