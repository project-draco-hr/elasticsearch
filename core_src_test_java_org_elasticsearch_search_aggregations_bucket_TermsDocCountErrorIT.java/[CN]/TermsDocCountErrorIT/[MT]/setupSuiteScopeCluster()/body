{
  assertAcked(client().admin().indices().prepareCreate("idx").addMapping("type",STRING_FIELD_NAME,"type=keyword").get());
  List<IndexRequestBuilder> builders=new ArrayList<>();
  int numDocs=between(10,200);
  int numUniqueTerms=between(2,numDocs / 2);
  for (int i=0; i < numDocs; i++) {
    builders.add(client().prepareIndex("idx","type","" + i).setSource(jsonBuilder().startObject().field(STRING_FIELD_NAME,"val" + randomInt(numUniqueTerms)).field(LONG_FIELD_NAME,randomInt(numUniqueTerms)).field(DOUBLE_FIELD_NAME,1.0 * randomInt(numUniqueTerms)).endObject()));
  }
  assertAcked(prepareCreate("idx_single_shard").addMapping("type",STRING_FIELD_NAME,"type=keyword").setSettings(Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1)));
  for (int i=0; i < numDocs; i++) {
    builders.add(client().prepareIndex("idx_single_shard","type","" + i).setSource(jsonBuilder().startObject().field(STRING_FIELD_NAME,"val" + randomInt(numUniqueTerms)).field(LONG_FIELD_NAME,randomInt(numUniqueTerms)).field(DOUBLE_FIELD_NAME,1.0 * randomInt(numUniqueTerms)).endObject()));
  }
  numRoutingValues=between(1,40);
  assertAcked(prepareCreate("idx_with_routing").addMapping("type","{ \"type\" : { \"_routing\" : { \"required\" : true } } }"));
  for (int i=0; i < numDocs; i++) {
    builders.add(client().prepareIndex("idx_single_shard","type","" + i).setRouting(String.valueOf(randomInt(numRoutingValues))).setSource(jsonBuilder().startObject().field(STRING_FIELD_NAME,"val" + randomInt(numUniqueTerms)).field(LONG_FIELD_NAME,randomInt(numUniqueTerms)).field(DOUBLE_FIELD_NAME,1.0 * randomInt(numUniqueTerms)).endObject()));
  }
  indexRandom(true,builders);
  ensureSearchable();
}
