{
  if (occurrences == 0) {
    return count(element);
  }
  checkArgument(occurrences > 0,"occurrences cannot be negative: %s",occurrences);
  AtomicInteger frequency=backingMap.get(element);
  int oldCount;
  if (frequency == null) {
    oldCount=0;
    backingMap.put(element,new AtomicInteger(occurrences));
  }
 else {
    oldCount=frequency.get();
    long newCount=(long)oldCount + (long)occurrences;
    checkArgument(newCount <= Integer.MAX_VALUE,"too many occurrences: %s",newCount);
    frequency.getAndAdd(occurrences);
  }
  size+=occurrences;
  return oldCount;
}
