{
  final Type type;
  try {
    type=Definition.getType(this.type);
  }
 catch (  IllegalArgumentException exception) {
    throw new IllegalArgumentException(error("Not a type [" + this.type + "]."));
  }
  if (!Exception.class.isAssignableFrom(type.clazz)) {
    throw new ClassCastException(error("Not an exception type [" + this.type + "]."));
  }
  variable=variables.addVariable(location,type,name,true,false);
  if (block != null) {
    block.lastSource=lastSource;
    block.inLoop=inLoop;
    block.lastLoop=lastLoop;
    block=block.analyze(variables);
    methodEscape=block.methodEscape;
    loopEscape=block.loopEscape;
    allEscape=block.allEscape;
    anyContinue=block.anyContinue;
    anyBreak=block.anyBreak;
    statementCount=block.statementCount;
  }
  return this;
}
