{
  String threadPoolName=randomThreadPoolName();
  ThreadPool.ThreadPoolType invalidThreadPoolType=randomIncorrectThreadPoolType(threadPoolName);
  ThreadPool.ThreadPoolType validThreadPoolType=ThreadPool.THREAD_POOL_TYPES.get(threadPoolName);
  ThreadPool threadPool=null;
  try {
    threadPool=new ThreadPool(settingsBuilder().put("name","testUpdateSettingsCanNotChangeThreadPoolType").build());
    ClusterSettings clusterSettings=new ClusterSettings(Settings.EMPTY,ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);
    threadPool.setNodeSettingsService(clusterSettings);
    clusterSettings.applySettings(settingsBuilder().put("threadpool." + threadPoolName + ".type",invalidThreadPoolType.getType()).build());
    fail("expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
    assertThat(e.getMessage(),is("setting threadpool." + threadPoolName + ".type to "+ invalidThreadPoolType.getType()+ " is not permitted; must be "+ validThreadPoolType.getType()));
  }
 finally {
    terminateThreadPoolIfNeeded(threadPool);
  }
}
