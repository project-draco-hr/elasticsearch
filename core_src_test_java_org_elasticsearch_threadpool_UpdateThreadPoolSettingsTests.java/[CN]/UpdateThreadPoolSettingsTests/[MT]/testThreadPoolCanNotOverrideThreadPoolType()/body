{
  String threadPoolName=randomThreadPoolName();
  ThreadPool.ThreadPoolType incorrectThreadPoolType=randomIncorrectThreadPoolType(threadPoolName);
  ThreadPool.ThreadPoolType correctThreadPoolType=ThreadPool.THREAD_POOL_TYPES.get(threadPoolName);
  ThreadPool threadPool=null;
  try {
    threadPool=new ThreadPool(settingsBuilder().put("name","testThreadPoolCanNotOverrideThreadPoolType").put("threadpool." + threadPoolName + ".type",incorrectThreadPoolType.getType()).build());
    terminate(threadPool);
    fail("expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
    assertThat(e.getMessage(),is("setting threadpool." + threadPoolName + ".type to "+ incorrectThreadPoolType.getType()+ " is not permitted; must be "+ correctThreadPoolType.getType()));
  }
 finally {
    terminateThreadPoolIfNeeded(threadPool);
  }
}
