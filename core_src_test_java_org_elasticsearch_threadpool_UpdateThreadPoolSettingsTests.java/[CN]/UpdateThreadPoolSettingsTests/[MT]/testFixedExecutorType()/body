{
  String threadPoolName=randomThreadPool(ThreadPool.ThreadPoolType.FIXED);
  ThreadPool threadPool=null;
  try {
    Settings nodeSettings=Settings.settingsBuilder().put("name","testFixedExecutorType").build();
    threadPool=new ThreadPool(nodeSettings);
    ClusterSettings clusterSettings=new ClusterSettings(nodeSettings,ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);
    threadPool.setClusterSettings(clusterSettings);
    assertThat(threadPool.executor(threadPoolName),instanceOf(EsThreadPoolExecutor.class));
    Settings settings=clusterSettings.applySettings(settingsBuilder().put("threadpool." + threadPoolName + ".size","15").build());
    int expectedSize=getExpectedThreadPoolSize(nodeSettings,threadPoolName,15);
    assertEquals(info(threadPool,threadPoolName).getThreadPoolType(),ThreadPool.ThreadPoolType.FIXED);
    assertThat(threadPool.executor(threadPoolName),instanceOf(EsThreadPoolExecutor.class));
    assertThat(((EsThreadPoolExecutor)threadPool.executor(threadPoolName)).getCorePoolSize(),equalTo(expectedSize));
    assertThat(((EsThreadPoolExecutor)threadPool.executor(threadPoolName)).getMaximumPoolSize(),equalTo(expectedSize));
    assertThat(info(threadPool,threadPoolName).getMin(),equalTo(expectedSize));
    assertThat(info(threadPool,threadPoolName).getMax(),equalTo(expectedSize));
    assertThat(((EsThreadPoolExecutor)threadPool.executor(threadPoolName)).getKeepAliveTime(TimeUnit.MINUTES),equalTo(0L));
    settings=clusterSettings.applySettings(Settings.EMPTY);
    assertEquals(info(threadPool,threadPoolName).getThreadPoolType(),ThreadPool.ThreadPoolType.FIXED);
    assertThat(info(threadPool,threadPoolName).getKeepAlive(),nullValue());
    assertThat(info(threadPool,threadPoolName).getMin(),equalTo(expectedSize));
    assertThat(info(threadPool,threadPoolName).getMax(),equalTo(expectedSize));
    assertThat(threadPool.executor(threadPoolName),instanceOf(EsThreadPoolExecutor.class));
    assertThat(((EsThreadPoolExecutor)threadPool.executor(threadPoolName)).getCorePoolSize(),equalTo(expectedSize));
    assertThat(((EsThreadPoolExecutor)threadPool.executor(threadPoolName)).getMaximumPoolSize(),equalTo(expectedSize));
    Executor oldExecutor=threadPool.executor(threadPoolName);
    settings=clusterSettings.applySettings(settingsBuilder().put(settings).put("threadpool." + threadPoolName + ".size","10").build());
    expectedSize=getExpectedThreadPoolSize(nodeSettings,threadPoolName,10);
    assertThat(info(threadPool,threadPoolName).getMax(),equalTo(expectedSize));
    assertThat(info(threadPool,threadPoolName).getMin(),equalTo(expectedSize));
    assertThat(((EsThreadPoolExecutor)threadPool.executor(threadPoolName)).getMaximumPoolSize(),equalTo(expectedSize));
    assertThat(((EsThreadPoolExecutor)threadPool.executor(threadPoolName)).getCorePoolSize(),equalTo(expectedSize));
    assertEquals(info(threadPool,threadPoolName).getThreadPoolType(),ThreadPool.ThreadPoolType.FIXED);
    assertThat(threadPool.executor(threadPoolName),sameInstance(oldExecutor));
    settings=clusterSettings.applySettings(settingsBuilder().put(settings).put("threadpool." + threadPoolName + ".queue","500").build());
  }
  finally {
    terminateThreadPoolIfNeeded(threadPool);
  }
}
