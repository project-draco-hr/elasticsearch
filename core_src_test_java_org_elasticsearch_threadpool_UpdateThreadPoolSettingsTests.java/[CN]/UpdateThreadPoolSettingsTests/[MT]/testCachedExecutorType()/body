{
  String threadPoolName=randomThreadPool(ThreadPool.ThreadPoolType.CACHED);
  ThreadPool threadPool=null;
  try {
    threadPool=new ThreadPool(Settings.settingsBuilder().put("name","testCachedExecutorType").build());
    assertEquals(info(threadPool,threadPoolName).getThreadPoolType(),ThreadPool.ThreadPoolType.CACHED);
    assertThat(threadPool.executor(threadPoolName),instanceOf(EsThreadPoolExecutor.class));
    threadPool.updateSettings(settingsBuilder().put("threadpool." + threadPoolName + ".keep_alive","10m").build());
    assertEquals(info(threadPool,threadPoolName).getThreadPoolType(),ThreadPool.ThreadPoolType.CACHED);
    assertThat(threadPool.executor(threadPoolName),instanceOf(EsThreadPoolExecutor.class));
    assertThat(((EsThreadPoolExecutor)threadPool.executor(threadPoolName)).getCorePoolSize(),equalTo(0));
    assertThat(info(threadPool,threadPoolName).getKeepAlive().minutes(),equalTo(10L));
    assertThat(((EsThreadPoolExecutor)threadPool.executor(threadPoolName)).getKeepAliveTime(TimeUnit.MINUTES),equalTo(10L));
    assertThat(info(threadPool,threadPoolName).getKeepAlive().minutes(),equalTo(10L));
    assertThat(threadPool.executor(threadPoolName),instanceOf(EsThreadPoolExecutor.class));
    Executor oldExecutor=threadPool.executor(threadPoolName);
    threadPool.updateSettings(settingsBuilder().put("threadpool." + threadPoolName + ".keep_alive","1m").build());
    assertThat(info(threadPool,threadPoolName).getKeepAlive().minutes(),equalTo(1L));
    assertThat(((EsThreadPoolExecutor)threadPool.executor(threadPoolName)).getKeepAliveTime(TimeUnit.MINUTES),equalTo(1L));
    assertEquals(info(threadPool,threadPoolName).getThreadPoolType(),ThreadPool.ThreadPoolType.CACHED);
    assertThat(threadPool.executor(threadPoolName),sameInstance(oldExecutor));
    threadPool.updateSettings(settingsBuilder().put("threadpool." + threadPoolName + ".keep_alive","1m").build());
    assertThat(info(threadPool,threadPoolName).getKeepAlive().minutes(),equalTo(1L));
    assertThat(((EsThreadPoolExecutor)threadPool.executor(threadPoolName)).getKeepAliveTime(TimeUnit.MINUTES),equalTo(1L));
    assertEquals(info(threadPool,threadPoolName).getThreadPoolType(),ThreadPool.ThreadPoolType.CACHED);
    assertThat(threadPool.executor(threadPoolName),sameInstance(oldExecutor));
  }
  finally {
    terminateThreadPoolIfNeeded(threadPool);
  }
}
