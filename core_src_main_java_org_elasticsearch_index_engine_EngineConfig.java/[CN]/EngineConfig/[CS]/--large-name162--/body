{
  this.shardId=shardId;
  this.indexSettings=indexSettings;
  this.threadPool=threadPool;
  this.indexingService=indexingService;
  this.warmer=warmer;
  this.store=store;
  this.deletionPolicy=deletionPolicy;
  this.mergePolicy=mergePolicy;
  this.mergeSchedulerConfig=mergeSchedulerConfig;
  this.analyzer=analyzer;
  this.similarity=similarity;
  this.codecService=codecService;
  this.failedEngineListener=failedEngineListener;
  this.optimizeAutoGenerateId=indexSettings.getAsBoolean(EngineConfig.INDEX_OPTIMIZE_AUTOGENERATED_ID_SETTING,false);
  this.compoundOnFlush=indexSettings.getAsBoolean(EngineConfig.INDEX_COMPOUND_ON_FLUSH,compoundOnFlush);
  this.indexConcurrency=indexSettings.getAsInt(EngineConfig.INDEX_CONCURRENCY_SETTING,Math.max(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES,(int)(EsExecutors.boundedNumberOfProcessors(indexSettings) * 0.65)));
  codecName=indexSettings.get(EngineConfig.INDEX_CODEC_SETTING,EngineConfig.DEFAULT_CODEC_NAME);
  indexingBufferSize=indexSettings.getAsBytesSize(INDEX_BUFFER_SIZE_SETTING,DEFAULT_INDEX_BUFFER_SIZE);
  gcDeletesInMillis=indexSettings.getAsTime(INDEX_GC_DELETES_SETTING,EngineConfig.DEFAULT_GC_DELETES).millis();
  versionMapSizeSetting=indexSettings.get(INDEX_VERSION_MAP_SIZE,DEFAULT_VERSION_MAP_SIZE);
  updateVersionMapSize();
  this.translogRecoveryPerformer=translogRecoveryPerformer;
  this.forceNewTranslog=indexSettings.getAsBoolean(INDEX_FORCE_NEW_TRANSLOG,false);
  this.queryCache=queryCache;
  this.queryCachingPolicy=queryCachingPolicy;
  this.translogConfig=translogConfig;
}
