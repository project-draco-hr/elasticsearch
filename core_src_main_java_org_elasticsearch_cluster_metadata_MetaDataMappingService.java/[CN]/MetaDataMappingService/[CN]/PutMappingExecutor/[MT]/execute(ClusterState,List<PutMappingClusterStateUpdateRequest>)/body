{
  Set<Index> indicesToClose=new HashSet<>();
  BatchResult.Builder<PutMappingClusterStateUpdateRequest> builder=BatchResult.builder();
  try {
    for (    PutMappingClusterStateUpdateRequest request : tasks) {
      final List<Index> indices=new ArrayList<>(request.indices().length);
      try {
        for (        String index : request.indices()) {
          final IndexMetaData indexMetaData=currentState.metaData().index(index);
          if (indexMetaData != null) {
            if (indicesService.hasIndex(indexMetaData.getIndex()) == false) {
              indicesToClose.add(indexMetaData.getIndex());
              IndexService indexService=indicesService.createIndex(nodeServicesProvider,indexMetaData,Collections.emptyList());
              for (              ObjectCursor<MappingMetaData> mapping : indexMetaData.getMappings().values()) {
                indexService.mapperService().merge(mapping.value.type(),mapping.value.source(),MapperService.MergeReason.MAPPING_RECOVERY,request.updateAllTypes());
              }
            }
            indices.add(indexMetaData.getIndex());
          }
 else {
            throw new IndexNotFoundException(index);
          }
        }
        currentState=applyRequest(currentState,request,indices);
        builder.success(request);
      }
 catch (      Throwable t) {
        builder.failure(request,t);
      }
    }
    return builder.build(currentState);
  }
  finally {
    for (    Index index : indicesToClose) {
      indicesService.removeIndex(index,"created for mapping processing");
    }
  }
}
