{
  Set<Index> indicesToClose=new HashSet<>();
  BatchResult.Builder<PutMappingClusterStateUpdateRequest> builder=BatchResult.builder();
  try {
    for (    PutMappingClusterStateUpdateRequest request : tasks) {
      try {
        for (        Index index : request.indices()) {
          final IndexMetaData indexMetaData=currentState.metaData().getIndexSafe(index);
          if (indicesService.hasIndex(indexMetaData.getIndex()) == false) {
            indicesToClose.add(indexMetaData.getIndex());
            IndexService indexService=indicesService.createIndex(nodeServicesProvider,indexMetaData,Collections.emptyList());
            for (            ObjectCursor<MappingMetaData> mapping : indexMetaData.getMappings().values()) {
              indexService.mapperService().merge(mapping.value.type(),mapping.value.source(),MapperService.MergeReason.MAPPING_RECOVERY,request.updateAllTypes());
            }
          }
        }
        currentState=applyRequest(currentState,request);
        builder.success(request);
      }
 catch (      Throwable t) {
        builder.failure(request,t);
      }
    }
    return builder.build(currentState);
  }
  finally {
    for (    Index index : indicesToClose) {
      indicesService.removeIndex(index,"created for mapping processing");
    }
  }
}
