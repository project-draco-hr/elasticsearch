{
  ImmutableList.Builder<Tuple<PluginInfo,Plugin>> sitePlugins=ImmutableList.builder();
  List<String> loadedJvmPlugins=new ArrayList<>();
  for (  Tuple<PluginInfo,Plugin> tuple : plugins) {
    if (tuple.v1().isSite()) {
      loadedJvmPlugins.add(tuple.v1().getName());
    }
  }
  Path pluginsFile=environment.pluginsFile();
  if (!Files.exists(pluginsFile) || !Files.isDirectory(pluginsFile)) {
    return sitePlugins.build();
  }
  try (DirectoryStream<Path> stream=Files.newDirectoryStream(pluginsFile)){
    for (    Path pluginFile : stream) {
      if (!loadedJvmPlugins.contains(pluginFile.getFileName().toString())) {
        Path sitePluginDir=pluginFile.resolve("_site");
        if (isAccessibleDirectory(sitePluginDir,logger)) {
          String name=pluginFile.getFileName().toString();
          String version=PluginInfo.VERSION_NOT_AVAILABLE;
          String description=PluginInfo.DESCRIPTION_NOT_AVAILABLE;
          final Path pluginPropFile=sitePluginDir.resolve(esPluginPropertiesFile);
          if (Files.exists(pluginPropFile)) {
            final Properties pluginProps=new Properties();
            try (final BufferedReader reader=Files.newBufferedReader(pluginPropFile,Charsets.UTF_8)){
              pluginProps.load(reader);
              description=pluginProps.getProperty("description",PluginInfo.DESCRIPTION_NOT_AVAILABLE);
              version=pluginProps.getProperty("version",PluginInfo.VERSION_NOT_AVAILABLE);
            }
 catch (            Exception e) {
              logger.debug("can not load {} file.",e,esPluginPropertiesFile);
            }
          }
          if (logger.isTraceEnabled()) {
            logger.trace("found a site plugin name [{}], version [{}], description [{}]",name,version,description);
          }
          sitePlugins.add(new Tuple<PluginInfo,Plugin>(new PluginInfo(name,description,true,false,version),null));
        }
      }
    }
  }
   return sitePlugins.build();
}
