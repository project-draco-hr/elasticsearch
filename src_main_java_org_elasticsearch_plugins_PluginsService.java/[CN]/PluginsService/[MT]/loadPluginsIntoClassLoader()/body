{
  File pluginsFile=environment.pluginsFile();
  if (!pluginsFile.exists()) {
    return;
  }
  if (!pluginsFile.isDirectory()) {
    return;
  }
  ClassLoader classLoader=settings.getClassLoader();
  Class classLoaderClass=classLoader.getClass();
  Method addURL=null;
  while (!classLoaderClass.equals(Object.class)) {
    try {
      addURL=classLoaderClass.getDeclaredMethod("addURL",URL.class);
      addURL.setAccessible(true);
      break;
    }
 catch (    NoSuchMethodException e) {
      classLoaderClass=classLoaderClass.getSuperclass();
    }
  }
  if (addURL == null) {
    logger.debug("failed to find addURL method on classLoader [" + classLoader + "] to add methods");
    return;
  }
  File[] pluginsFiles=pluginsFile.listFiles();
  for (  File pluginFile : pluginsFiles) {
    if (pluginFile.isDirectory()) {
      logger.trace("--- adding plugin [" + pluginFile.getAbsolutePath() + "]");
      try {
        addURL.invoke(classLoader,pluginFile.toURI().toURL());
        List<File> libFiles=Lists.newArrayList();
        libFiles.addAll(Arrays.asList(pluginsFile.listFiles()));
        File libLocation=new File(pluginFile,"lib");
        if (libLocation.exists() && libLocation.isDirectory()) {
          libFiles.addAll(Arrays.asList(libLocation.listFiles()));
        }
        for (        File jarToAdd : libFiles) {
          if (!(jarToAdd.getName().endsWith(".jar") || jarToAdd.getName().endsWith(".zip"))) {
            continue;
          }
          addURL.invoke(classLoader,jarToAdd.toURI().toURL());
        }
      }
 catch (      Exception e) {
        logger.warn("failed to add plugin [" + pluginFile + "]",e);
      }
    }
  }
}
