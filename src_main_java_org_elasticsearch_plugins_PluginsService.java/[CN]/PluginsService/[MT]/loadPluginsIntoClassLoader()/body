{
  File pluginsFile=environment.pluginsFile();
  if (!pluginsFile.exists()) {
    return;
  }
  if (!pluginsFile.isDirectory()) {
    return;
  }
  ClassLoader classLoader=settings.getClassLoader();
  Class classLoaderClass=classLoader.getClass();
  Method addURL=null;
  while (!classLoaderClass.equals(Object.class)) {
    try {
      addURL=classLoaderClass.getDeclaredMethod("addURL",URL.class);
      addURL.setAccessible(true);
      break;
    }
 catch (    NoSuchMethodException e) {
      classLoaderClass=classLoaderClass.getSuperclass();
    }
  }
  if (addURL == null) {
    logger.debug("failed to find addURL method on classLoader [" + classLoader + "] to add methods");
    return;
  }
  File[] pluginsFiles=pluginsFile.listFiles();
  if (pluginsFile != null) {
    for (    File pluginFile : pluginsFiles) {
      if (pluginFile.isDirectory()) {
        if (logger.isTraceEnabled()) {
          logger.trace("--- adding plugin [" + pluginFile.getAbsolutePath() + "]");
        }
        try {
          addURL.invoke(classLoader,pluginFile.toURI().toURL());
          List<File> libFiles=Lists.newArrayList();
          if (pluginFile.listFiles() != null) {
            libFiles.addAll(Arrays.asList(pluginFile.listFiles()));
          }
          File libLocation=new File(pluginFile,"lib");
          if (libLocation.exists() && libLocation.isDirectory() && libLocation.listFiles() != null) {
            libFiles.addAll(Arrays.asList(libLocation.listFiles()));
          }
          for (          File libFile : libFiles) {
            if (!(libFile.getName().endsWith(".jar") || libFile.getName().endsWith(".zip"))) {
              continue;
            }
            addURL.invoke(classLoader,libFile.toURI().toURL());
          }
        }
 catch (        Throwable e) {
          logger.warn("failed to add plugin [" + pluginFile + "]",e);
        }
      }
    }
  }
 else {
    logger.debug("failed to list plugins from {}. Check your right access.",pluginsFile.getAbsolutePath());
  }
}
