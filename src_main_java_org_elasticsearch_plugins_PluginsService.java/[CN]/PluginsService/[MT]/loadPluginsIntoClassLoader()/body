{
  File pluginsDirectory=environment.pluginsFile();
  if (!isAccessibleDirectory(pluginsDirectory,logger)) {
    return;
  }
  ClassLoader classLoader=settings.getClassLoader();
  Class classLoaderClass=classLoader.getClass();
  Method addURL=null;
  while (!classLoaderClass.equals(Object.class)) {
    try {
      addURL=classLoaderClass.getDeclaredMethod("addURL",URL.class);
      addURL.setAccessible(true);
      break;
    }
 catch (    NoSuchMethodException e) {
      classLoaderClass=classLoaderClass.getSuperclass();
    }
  }
  if (addURL == null) {
    logger.debug("failed to find addURL method on classLoader [" + classLoader + "] to add methods");
    return;
  }
  for (  File plugin : pluginsDirectory.listFiles()) {
    if (!isAccessibleDirectory(plugin,logger)) {
      continue;
    }
    logger.trace("--- adding plugin [{}]",plugin.getAbsolutePath());
    try {
      addURL.invoke(classLoader,plugin.toURI().toURL());
      List<File> libFiles=Lists.newArrayList();
      if (plugin.listFiles() != null) {
        libFiles.addAll(Arrays.asList(plugin.listFiles()));
      }
      File libLocation=new File(plugin,"lib");
      if (libLocation.exists() && libLocation.isDirectory() && libLocation.listFiles() != null) {
        libFiles.addAll(Arrays.asList(libLocation.listFiles()));
      }
      for (      File libFile : libFiles) {
        if (!(libFile.getName().endsWith(".jar") || libFile.getName().endsWith(".zip"))) {
          continue;
        }
        addURL.invoke(classLoader,libFile.toURI().toURL());
      }
    }
 catch (    Throwable e) {
      logger.warn("failed to add plugin [" + plugin + "]",e);
    }
  }
}
