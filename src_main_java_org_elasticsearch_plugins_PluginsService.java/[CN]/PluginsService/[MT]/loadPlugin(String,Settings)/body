{
  try {
    Class<? extends Plugin> pluginClass=(Class<? extends Plugin>)settings.getClassLoader().loadClass(className);
    Plugin plugin;
    if (!checkLucene || checkLuceneCompatibility(pluginClass,settings,logger,esPluginPropertiesFile)) {
      try {
        plugin=pluginClass.getConstructor(Settings.class).newInstance(settings);
      }
 catch (      NoSuchMethodException e) {
        try {
          plugin=pluginClass.getConstructor().newInstance();
        }
 catch (        NoSuchMethodException e1) {
          throw new ElasticsearchException("No constructor for [" + pluginClass + "]. A plugin class must "+ "have either an empty default constructor or a single argument constructor accepting a "+ "Settings instance");
        }
      }
    }
 else {
      throw new ElasticsearchException("Plugin is incompatible with the current node");
    }
    return plugin;
  }
 catch (  Throwable e) {
    throw new ElasticsearchException("Failed to load plugin class [" + className + "]",e);
  }
}
