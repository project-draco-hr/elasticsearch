{
  if (facets.isEmpty()) {
    TermsStringFacetCollector.pushFacets(facets);
    return new InternalStringTermsFacet(facetName,sScript,comparatorType,size,ImmutableList.<InternalStringTermsFacet.StringEntry>of());
  }
 else {
    BoundedTreeSet<InternalStringTermsFacet.StringEntry> ordered=new BoundedTreeSet<InternalStringTermsFacet.StringEntry>(InternalStringTermsFacet.ComparatorType.COUNT.comparator(),size * numberOfShards);
    for (TObjectIntIterator<String> it=facets.iterator(); it.hasNext(); ) {
      it.advance();
      ordered.add(new InternalStringTermsFacet.StringEntry(it.key(),it.value()));
    }
    TermsStringFacetCollector.pushFacets(facets);
    return new InternalStringTermsFacet(facetName,sScript,comparatorType,size,ordered);
  }
}
