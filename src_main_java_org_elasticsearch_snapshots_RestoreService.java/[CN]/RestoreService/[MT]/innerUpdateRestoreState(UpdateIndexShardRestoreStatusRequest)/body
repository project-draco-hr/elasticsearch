{
  clusterService.submitStateUpdateTask("update snapshot state",new ProcessedClusterStateUpdateTask(){
    private RestoreInfo restoreInfo=null;
    @Override public ClusterState execute(    ClusterState currentState){
      MetaData metaData=currentState.metaData();
      MetaData.Builder mdBuilder=MetaData.builder(currentState.metaData());
      RestoreMetaData restore=metaData.custom(RestoreMetaData.TYPE);
      if (restore != null) {
        boolean changed=false;
        ArrayList<RestoreMetaData.Entry> entries=newArrayList();
        for (        RestoreMetaData.Entry entry : restore.entries()) {
          if (entry.snapshotId().equals(request.snapshotId())) {
            HashMap<ShardId,ShardRestoreStatus> shards=newHashMap(entry.shards());
            logger.trace("[{}] Updating shard [{}] with status [{}]",request.snapshotId(),request.shardId(),request.status().state());
            shards.put(request.shardId(),request.status());
            if (!completed(shards)) {
              entries.add(new RestoreMetaData.Entry(entry.snapshotId(),RestoreMetaData.State.STARTED,entry.indices(),ImmutableMap.copyOf(shards)));
            }
 else {
              logger.info("restore [{}] is done",request.snapshotId());
              restoreInfo=new RestoreInfo(entry.snapshotId().getSnapshot(),entry.indices(),shards.size(),shards.size() - failedShards(shards));
            }
            changed=true;
          }
 else {
            entries.add(entry);
          }
        }
        if (changed) {
          restore=new RestoreMetaData(entries.toArray(new RestoreMetaData.Entry[entries.size()]));
          mdBuilder.putCustom(RestoreMetaData.TYPE,restore);
          return ClusterState.builder(currentState).metaData(mdBuilder).build();
        }
      }
      return currentState;
    }
    @Override public void onFailure(    String source,    Throwable t){
      logger.warn("[{}][{}] failed to update snapshot status to [{}]",t,request.snapshotId(),request.shardId(),request.status());
    }
    @Override public void clusterStateProcessed(    String source,    ClusterState oldState,    ClusterState newState){
      if (restoreInfo != null) {
        for (        RestoreCompletionListener listener : listeners) {
          try {
            listener.onRestoreCompletion(request.snapshotId,restoreInfo);
          }
 catch (          Throwable e) {
            logger.warn("failed to update snapshot status for [{}]",e,listener);
          }
        }
      }
    }
  }
);
}
