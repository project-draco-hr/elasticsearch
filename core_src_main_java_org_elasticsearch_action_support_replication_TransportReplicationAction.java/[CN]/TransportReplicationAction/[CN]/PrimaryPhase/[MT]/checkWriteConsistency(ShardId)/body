{
  if (checkWriteConsistency == false) {
    return null;
  }
  final WriteConsistencyLevel consistencyLevel;
  if (request.consistencyLevel() != WriteConsistencyLevel.DEFAULT) {
    consistencyLevel=request.consistencyLevel();
  }
 else {
    consistencyLevel=defaultWriteConsistencyLevel;
  }
  final int sizeActive;
  final int requiredNumber;
  IndexRoutingTable indexRoutingTable=state.getRoutingTable().index(shardId.getIndex());
  if (indexRoutingTable != null) {
    IndexShardRoutingTable shardRoutingTable=indexRoutingTable.shard(shardId.getId());
    if (shardRoutingTable != null) {
      sizeActive=shardRoutingTable.activeShards().size();
      if (consistencyLevel == WriteConsistencyLevel.QUORUM && shardRoutingTable.getSize() > 2) {
        requiredNumber=(shardRoutingTable.getSize() / 2) + 1;
      }
 else       if (consistencyLevel == WriteConsistencyLevel.ALL) {
        requiredNumber=shardRoutingTable.getSize();
      }
 else {
        requiredNumber=1;
      }
    }
 else {
      sizeActive=0;
      requiredNumber=1;
    }
  }
 else {
    sizeActive=0;
    requiredNumber=1;
  }
  if (sizeActive < requiredNumber) {
    logger.trace("not enough active copies of shard [{}] to meet write consistency of [{}] (have {}, needed {}), scheduling a retry. action [{}], request [{}]",shardId,consistencyLevel,sizeActive,requiredNumber,transportPrimaryAction,request);
    return "Not enough active copies to meet write consistency of [" + consistencyLevel + "] (have "+ sizeActive+ ", needed "+ requiredNumber+ ").";
  }
 else {
    return null;
  }
}
