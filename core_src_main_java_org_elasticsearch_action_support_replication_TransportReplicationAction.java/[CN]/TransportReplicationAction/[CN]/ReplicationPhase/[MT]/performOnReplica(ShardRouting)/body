{
  String nodeId=shard.currentNodeId();
  if (!nodes.nodeExists(nodeId)) {
    logger.trace("failed to send action [{}] on replica [{}] for request [{}] due to unknown node [{}]",transportReplicaAction,shard.shardId(),replicaRequest,nodeId);
    onReplicaFailure(nodeId,null);
    return;
  }
  if (logger.isTraceEnabled()) {
    logger.trace("send action [{}] on replica [{}] for request [{}] to [{}]",transportReplicaAction,shard.shardId(),replicaRequest,nodeId);
  }
  final DiscoveryNode node=nodes.get(nodeId);
  transportService.sendRequest(node,transportReplicaAction,replicaRequest,transportOptions,new EmptyTransportResponseHandler(ThreadPool.Names.SAME){
    @Override public void handleResponse(    TransportResponse.Empty vResponse){
      onReplicaSuccess();
    }
    @Override public void handleException(    TransportException exp){
      logger.trace("[{}] transport failure during replica request [{}], action [{}]",exp,node,replicaRequest,transportReplicaAction);
      if (ignoreReplicaException(exp)) {
        onReplicaFailure(nodeId,exp);
      }
 else {
        logger.warn("{} failed to perform {} on node {}",exp,shardId,transportReplicaAction,node);
        shardStateAction.shardFailed(clusterService.state(),shard,indexUUID,"failed to perform " + transportReplicaAction + " on replica on node "+ node,exp,shardFailedTimeout,new ReplicationFailedShardStateListener(nodeId,exp));
      }
    }
  }
);
}
