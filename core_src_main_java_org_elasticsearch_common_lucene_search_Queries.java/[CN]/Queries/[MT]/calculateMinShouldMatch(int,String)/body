{
  int result=optionalClauseCount;
  spec=spec.trim();
  if (-1 < spec.indexOf("<")) {
    spec=spaceAroundLessThanPattern.matcher(spec).replaceAll("<");
    for (    String s : spacePattern.split(spec)) {
      String[] parts=lessThanPattern.split(s,0);
      int upperBound=Integer.parseInt(parts[0]);
      if (optionalClauseCount <= upperBound) {
        return result;
      }
 else {
        result=calculateMinShouldMatch(optionalClauseCount,parts[1]);
      }
    }
    return result;
  }
  if (-1 < spec.indexOf('%')) {
    spec=spec.substring(0,spec.length() - 1);
    int percent=Integer.parseInt(spec);
    float calc=(result * percent) * (1 / 100f);
    result=calc < 0 ? result + (int)calc : (int)calc;
  }
 else {
    int calc=Integer.parseInt(spec);
    result=calc < 0 ? result + calc : calc;
  }
  return (optionalClauseCount < result ? optionalClauseCount : (result < 0 ? 0 : result));
}
