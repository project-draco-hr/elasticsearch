{
  final NumericFieldData latFieldData=(NumericFieldData)fieldDataCache.cache(fieldDataType,reader,latFieldName);
  final NumericFieldData lonFieldData=(NumericFieldData)fieldDataCache.cache(fieldDataType,reader,lonFieldName);
  if (topLeft.lon > bottomRight.lon) {
    return new GetDocSet(reader.maxDoc()){
      @Override public boolean get(      int doc) throws IOException {
        if (!latFieldData.hasValue(doc) || !lonFieldData.hasValue(doc)) {
          return false;
        }
        if (latFieldData.multiValued()) {
          double[] lats=latFieldData.doubleValues(doc);
          double[] lons=latFieldData.doubleValues(doc);
          for (int i=0; i < lats.length; i++) {
            double lat=lats[i];
            double lon=lons[i];
            if (lon < 0) {
              if (-180.0 <= lon && bottomRight.lon >= lon && topLeft.lat >= lat && bottomRight.lat <= lat) {
                return true;
              }
            }
 else {
              if (topLeft.lon <= lon && 180 >= lon && topLeft.lat >= lat && bottomRight.lat <= lat) {
                return true;
              }
            }
          }
        }
 else {
          double lat=latFieldData.doubleValue(doc);
          double lon=lonFieldData.doubleValue(doc);
          if (lon < 0) {
            if (-180.0 <= lon && bottomRight.lon >= lon && topLeft.lat >= lat && bottomRight.lat <= lat) {
              return true;
            }
          }
 else {
            if (topLeft.lon <= lon && 180 >= lon && topLeft.lat >= lat && bottomRight.lat <= lat) {
              return true;
            }
          }
        }
        return false;
      }
    }
;
  }
 else {
    return new GetDocSet(reader.maxDoc()){
      @Override public boolean get(      int doc) throws IOException {
        if (!latFieldData.hasValue(doc) || !lonFieldData.hasValue(doc)) {
          return false;
        }
        if (latFieldData.multiValued()) {
          double[] lats=latFieldData.doubleValues(doc);
          double[] lons=latFieldData.doubleValues(doc);
          for (int i=0; i < lats.length; i++) {
            if (topLeft.lon <= lons[i] && bottomRight.lon >= lons[i] && topLeft.lat >= lats[i] && bottomRight.lat <= lats[i]) {
              return true;
            }
          }
        }
 else {
          double lat=latFieldData.doubleValue(doc);
          double lon=lonFieldData.doubleValue(doc);
          if (topLeft.lon <= lon && bottomRight.lon >= lon && topLeft.lat >= lat && bottomRight.lat <= lat) {
            return true;
          }
        }
        return false;
      }
    }
;
  }
}
