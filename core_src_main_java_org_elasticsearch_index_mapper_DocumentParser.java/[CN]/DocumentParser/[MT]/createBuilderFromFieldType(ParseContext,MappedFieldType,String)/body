{
  Mapper.Builder builder=null;
  if (fieldType instanceof StringFieldType) {
    builder=context.root().findTemplateBuilder(context,currentFieldName,"string","string");
  }
 else   if (fieldType instanceof TextFieldType) {
    builder=context.root().findTemplateBuilder(context,currentFieldName,"text","string");
    if (builder == null) {
      builder=new TextFieldMapper.Builder(currentFieldName).addMultiField(new KeywordFieldMapper.Builder("keyword").ignoreAbove(256));
    }
  }
 else   if (fieldType instanceof KeywordFieldType) {
    builder=context.root().findTemplateBuilder(context,currentFieldName,"keyword","string");
  }
 else {
switch (fieldType.typeName()) {
case DateFieldMapper.CONTENT_TYPE:
      builder=context.root().findTemplateBuilder(context,currentFieldName,"date");
    break;
case "long":
  builder=context.root().findTemplateBuilder(context,currentFieldName,"long");
break;
case "double":
builder=context.root().findTemplateBuilder(context,currentFieldName,"double");
break;
case "integer":
builder=context.root().findTemplateBuilder(context,currentFieldName,"integer");
break;
case "float":
builder=context.root().findTemplateBuilder(context,currentFieldName,"float");
break;
case BooleanFieldMapper.CONTENT_TYPE:
builder=context.root().findTemplateBuilder(context,currentFieldName,"boolean");
break;
default :
break;
}
}
if (builder == null) {
Mapper.TypeParser.ParserContext parserContext=context.docMapperParser().parserContext(currentFieldName);
Mapper.TypeParser typeParser=parserContext.typeParser(fieldType.typeName());
if (typeParser == null) {
throw new MapperParsingException("Cannot generate dynamic mappings of type [" + fieldType.typeName() + "] for ["+ currentFieldName+ "]");
}
builder=typeParser.parse(currentFieldName,new HashMap<>(),parserContext);
}
return builder;
}
