{
  ObjectMapper mapper=currentParent == null ? context.root() : currentParent;
  int pathsAdded=0;
  ObjectMapper parent=mapper;
  for (int i=0; i < paths.length - 1; i++) {
    mapper=context.docMapper().objectMappers().get(context.path().pathAsText(paths[i]));
    if (mapper == null) {
      ObjectMapper.Dynamic dynamic=dynamicOrDefault(parent,context);
switch (dynamic) {
case STRICT:
        throw new StrictDynamicMappingException(parent.fullPath(),paths[i]);
case TRUE:
      Mapper.Builder builder=context.root().findTemplateBuilder(context,paths[i],"object");
    if (builder == null) {
      builder=new ObjectMapper.Builder(paths[i]).enabled(true);
    }
  Mapper.BuilderContext builderContext=new Mapper.BuilderContext(context.indexSettings(),context.path());
mapper=(ObjectMapper)builder.build(builderContext);
if (mapper.nested() != ObjectMapper.Nested.NO) {
throw new MapperParsingException("It is forbidden to create dynamic nested objects ([" + context.path().pathAsText(paths[i]) + "]) through `copy_to`");
}
context.addDynamicMapper(mapper);
break;
case FALSE:
return new Tuple<Integer,ObjectMapper>(pathsAdded,parent);
}
}
context.path().add(paths[i]);
pathsAdded++;
parent=mapper;
}
return new Tuple<Integer,ObjectMapper>(pathsAdded,mapper);
}
