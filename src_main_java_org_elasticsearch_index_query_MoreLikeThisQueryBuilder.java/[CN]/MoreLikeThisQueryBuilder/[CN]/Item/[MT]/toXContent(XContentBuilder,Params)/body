{
  if (this.likeText != null) {
    return builder.value(this.likeText);
  }
  builder.startObject();
  if (this.index() != null) {
    builder.field("_index",this.index());
  }
  if (this.type() != null) {
    builder.field("_type",this.type());
  }
  if (this.id() != null) {
    builder.field("_id",this.id());
  }
  if (this.doc() != null) {
    XContentType contentType=XContentFactory.xContentType(doc);
    if (contentType == builder.contentType()) {
      builder.rawField("doc",doc);
    }
 else {
      XContentParser parser=XContentFactory.xContent(contentType).createParser(doc);
      parser.nextToken();
      builder.field("doc");
      builder.copyCurrentStructure(parser);
    }
  }
  if (this.fields() != null) {
    builder.array("fields",this.fields());
  }
  if (this.routing() != null) {
    builder.field("_routing",this.routing());
  }
  if (this.fetchSourceContext() != null) {
    FetchSourceContext source=this.fetchSourceContext();
    String[] includes=source.includes();
    String[] excludes=source.excludes();
    if (includes.length == 0 && excludes.length == 0) {
      builder.field("_source",source.fetchSource());
    }
 else     if (includes.length > 0 && excludes.length == 0) {
      builder.array("_source",source.includes());
    }
 else     if (excludes.length > 0) {
      builder.startObject("_source");
      if (includes.length > 0) {
        builder.array("includes",source.includes());
      }
      builder.array("excludes",source.excludes());
      builder.endObject();
    }
  }
  if (this.version() != Versions.MATCH_ANY) {
    builder.field("_version",this.version());
  }
  if (this.versionType() != VersionType.INTERNAL) {
    builder.field("_version_type",this.versionType().toString().toLowerCase(Locale.ROOT));
  }
  return builder.endObject();
}
