{
  assertAcked(prepareCreate("articles").setSettings(IndexMetaData.SETTING_VERSION_CREATED,Version.V_1_4_2.id).addMapping("article",jsonBuilder().startObject().startObject("_source").field("enabled",false).endObject().startObject("properties").startObject("comments").field("type","nested").startObject("properties").startObject("message").field("type","string").field("store","yes").endObject().endObject().endObject().endObject().endObject()));
  List<IndexRequestBuilder> requests=new ArrayList<>();
  requests.add(client().prepareIndex("articles","article","1").setSource(jsonBuilder().startObject().field("title","quick brown fox").startObject("comments").field("message","fox eat quick").endObject().endObject()));
  indexRandom(true,requests);
  InnerHitsBuilder.InnerHit builder=new InnerHitsBuilder.InnerHit();
  builder.highlighter(new HighlightBuilder().field("comments.message"));
  SearchResponse response=client().prepareSearch("articles").setQuery(nestedQuery("comments",matchQuery("comments.message","fox")).innerHit(new QueryInnerHits(null,builder))).get();
  assertNoFailures(response);
  assertHitCount(response,1);
  assertThat(response.getHits().getAt(0).id(),equalTo("1"));
  assertThat(response.getHits().getAt(0).getInnerHits().get("comments").getTotalHits(),equalTo(1l));
  assertThat(response.getHits().getAt(0).getInnerHits().get("comments").getAt(0).id(),equalTo("1"));
  assertThat(response.getHits().getAt(0).getInnerHits().get("comments").getAt(0).getNestedIdentity().getField().string(),equalTo("comments"));
  assertThat(response.getHits().getAt(0).getInnerHits().get("comments").getAt(0).getNestedIdentity().getOffset(),equalTo(0));
  assertThat(response.getHits().getAt(0).getInnerHits().get("comments").getAt(0).getNestedIdentity().getChild(),nullValue());
  assertThat(String.valueOf(response.getHits().getAt(0).getInnerHits().get("comments").getAt(0).highlightFields().get("comments.message").getFragments()[0]),equalTo("<em>fox</em> eat quick"));
}
