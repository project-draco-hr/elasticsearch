{
  ensureNotDeleteByQuery(NAME,parseContext);
  XContentParser parser=parseContext.parser();
  boolean queryFound=false;
  boolean filterFound=false;
  String parentType=null;
  Tuple<String,SubSearchContext> innerHits=null;
  String filterName=null;
  String currentFieldName=null;
  XContentParser.Token token;
  XContentStructure.InnerQuery iq=null;
  XContentStructure.InnerFilter innerFilter=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("query".equals(currentFieldName)) {
        iq=new XContentStructure.InnerQuery(parseContext,parentType == null ? null : new String[]{parentType});
        queryFound=true;
      }
 else       if ("filter".equals(currentFieldName)) {
        innerFilter=new XContentStructure.InnerFilter(parseContext,parentType == null ? null : new String[]{parentType});
        filterFound=true;
      }
 else       if ("inner_hits".equals(currentFieldName)) {
        innerHits=innerHitsQueryParserHelper.parse(parseContext);
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[has_parent] filter does not support [" + currentFieldName + "]");
      }
    }
 else     if (token.isValue()) {
      if ("type".equals(currentFieldName) || "parent_type".equals(currentFieldName) || "parentType".equals(currentFieldName)) {
        parentType=parser.text();
      }
 else       if ("_name".equals(currentFieldName)) {
        filterName=parser.text();
      }
 else       if ("_cache".equals(currentFieldName)) {
      }
 else       if ("_cache_key".equals(currentFieldName) || "_cacheKey".equals(currentFieldName)) {
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[has_parent] filter does not support [" + currentFieldName + "]");
      }
    }
  }
  if (!queryFound && !filterFound) {
    throw new QueryParsingException(parseContext.index(),"[has_parent] filter requires 'query' or 'filter' field");
  }
  if (parentType == null) {
    throw new QueryParsingException(parseContext.index(),"[has_parent] filter requires 'parent_type' field");
  }
  Query innerQuery;
  if (queryFound) {
    innerQuery=iq.asQuery(parentType);
  }
 else {
    innerQuery=innerFilter.asFilter(parentType);
  }
  if (innerQuery == null) {
    return null;
  }
  Query parentQuery=createParentQuery(innerQuery,parentType,false,parseContext,innerHits);
  if (parentQuery == null) {
    return null;
  }
  if (filterName != null) {
    parseContext.addNamedFilter(filterName,new CustomQueryWrappingFilter(parentQuery));
  }
  return new CustomQueryWrappingFilter(parentQuery);
}
