{
  String[] elements=Strings.tokenizeToStringArray(path,AGG_DELIM);
  Token[] tokens=new Token[elements.length];
  String[] tuple=new String[2];
  for (int i=0; i < elements.length; i++) {
    String element=elements[i];
    int index=element.lastIndexOf('.');
    if (index >= 0) {
      if (index == 0 || index > element.length() - 2) {
        throw new AggregationExecutionException("Invalid path element [" + element + "] in path ["+ path+ "]");
      }
      tuple=split(element,index,tuple);
      tokens[i]=new Token(element,tuple[0],tuple[1]);
      continue;
    }
    index=element.lastIndexOf('[');
    if (index < 0) {
      tokens[i]=new Token(element,element,null);
      continue;
    }
    if (index == 0 || index > element.length() - 3) {
      throw new AggregationExecutionException("Invalid path element [" + element + "] in path ["+ path+ "]");
    }
    if (element.charAt(element.length() - 1) != ']') {
      throw new AggregationExecutionException("Invalid path element [" + element + "] in path ["+ path+ "]");
    }
    tokens[i]=new Token(element,element.substring(0,index),element.substring(index + 1,element.length() - 1));
  }
  return new OrderPath(tokens);
}
