{
  assertAcked(prepareCreate("test").addMapping("type1","tags","type=string"));
  ensureGreen();
  client().prepareIndex("test","type1","1").setSource(jsonBuilder().startObject().field("tags","this is a really long tag i would like to highlight","here is another one that is very long tag and has the tag token near the end").endObject()).get();
  refresh();
  SearchResponse response=client().prepareSearch("test").setQuery(QueryBuilders.matchQuery("tags","long tag").type(MatchQueryBuilder.Type.PHRASE)).addHighlightedField(new HighlightBuilder.Field("tags").fragmentSize(-1).numOfFragments(2).fragmenter("simple")).get();
  assertHighlight(response,0,"tags",0,equalTo("this is a really <em>long</em> <em>tag</em> i would like to highlight"));
  assertHighlight(response,0,"tags",1,2,equalTo("here is another one that is very <em>long</em> <em>tag</em> and has the tag token near the end"));
  response=client().prepareSearch("test").setQuery(QueryBuilders.matchQuery("tags","long tag").type(MatchQueryBuilder.Type.PHRASE)).addHighlightedField(new HighlightBuilder.Field("tags").fragmentSize(-1).numOfFragments(2).fragmenter("span")).get();
  assertHighlight(response,0,"tags",0,equalTo("this is a really <em>long</em> <em>tag</em> i would like to highlight"));
  assertHighlight(response,0,"tags",1,2,equalTo("here is another one that is very <em>long</em> <em>tag</em> and has the tag token near the end"));
  assertFailures(client().prepareSearch("test").setQuery(QueryBuilders.matchQuery("tags","long tag").type(MatchQueryBuilder.Type.PHRASE)).addHighlightedField(new HighlightBuilder.Field("tags").fragmentSize(-1).numOfFragments(2).fragmenter("invalid")),RestStatus.BAD_REQUEST,containsString("unknown fragmenter option [invalid] for the field [tags]"));
}
