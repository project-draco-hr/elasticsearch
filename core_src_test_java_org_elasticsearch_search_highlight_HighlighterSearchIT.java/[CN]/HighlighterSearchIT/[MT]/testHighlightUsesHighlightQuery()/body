{
  assertAcked(prepareCreate("test").addMapping("type1","text","type=string," + randomStoreField() + "term_vector=with_positions_offsets,index_options=offsets"));
  ensureGreen();
  index("test","type1","1","text","Testing the highlight query feature");
  refresh();
  HighlightBuilder.Field field=new HighlightBuilder.Field("text");
  HighlightBuilder highlightBuilder=new HighlightBuilder().field(field);
  SearchRequestBuilder search=client().prepareSearch("test").setQuery(QueryBuilders.matchQuery("text","testing")).highlighter(highlightBuilder);
  Matcher<String> searchQueryMatcher=equalTo("<em>Testing</em> the highlight query feature");
  field.highlighterType("plain");
  SearchResponse response=search.get();
  assertHighlight(response,0,"text",0,searchQueryMatcher);
  field.highlighterType("fvh");
  response=search.get();
  assertHighlight(response,0,"text",0,searchQueryMatcher);
  field.highlighterType("postings");
  response=search.get();
  assertHighlight(response,0,"text",0,searchQueryMatcher);
  Matcher<String> hlQueryMatcher=equalTo("Testing the highlight <em>query</em> feature");
  field.highlightQuery(matchQuery("text","query"));
  field.highlighterType("fvh");
  response=search.get();
  assertHighlight(response,0,"text",0,hlQueryMatcher);
  field.highlighterType("plain");
  response=search.get();
  assertHighlight(response,0,"text",0,hlQueryMatcher);
  field.highlighterType("postings");
  response=search.get();
  assertHighlight(response,0,"text",0,hlQueryMatcher);
  highlightBuilder.highlightQuery(matchQuery("text","query"));
  field.highlighterType("fvh").highlightQuery(null);
  response=search.get();
  assertHighlight(response,0,"text",0,hlQueryMatcher);
  field.highlighterType("plain");
  response=search.get();
  assertHighlight(response,0,"text",0,hlQueryMatcher);
  field.highlighterType("postings");
  response=search.get();
  assertHighlight(response,0,"text",0,hlQueryMatcher);
}
