{
  assertAcked(prepareCreate("test").addMapping("type1",type1TermVectorMapping()));
  ensureGreen();
  indexRandom(true,client().prepareIndex("test","type1").setSource("field1","this is a test","field2","The quick brown fox jumps over the lazy dog"));
  logger.info("--> highlighting and searching on field1");
  SearchSourceBuilder source=searchSource().query(termQuery("field1","test")).highlighter(highlight().field("field1",100,0).order("score").preTags("<xxx>").postTags("</xxx>"));
  SearchResponse searchResponse=client().prepareSearch("test").setSource(source).get();
  assertHighlight(searchResponse,0,"field1",0,1,equalTo("this is a <xxx>test</xxx>"));
  logger.info("--> searching on _all, highlighting on field1");
  source=searchSource().query(termQuery("_all","test")).highlighter(highlight().field("field1",100,0).order("score").preTags("<xxx>").postTags("</xxx>").requireFieldMatch(false));
  searchResponse=client().prepareSearch("test").setSource(source).get();
  assertHighlight(searchResponse,0,"field1",0,1,equalTo("this is a <xxx>test</xxx>"));
  logger.info("--> searching on _all, highlighting on field2");
  source=searchSource().query(termQuery("_all","quick")).highlighter(highlight().field("field2",100,0).order("score").preTags("<xxx>").postTags("</xxx>").requireFieldMatch(false));
  searchResponse=client().prepareSearch("test").setSource(source).get();
  assertHighlight(searchResponse,0,"field2",0,1,equalTo("The <xxx>quick</xxx> brown fox jumps over the lazy dog"));
  logger.info("--> searching on _all, highlighting on field2");
  source=searchSource().query(prefixQuery("_all","qui")).highlighter(highlight().field("field2",100,0).order("score").preTags("<xxx>").postTags("</xxx>").requireFieldMatch(false));
  searchResponse=client().prepareSearch("test").setSource(source).get();
  assertHighlight(searchResponse,0,"field2",0,1,equalTo("The <xxx>quick</xxx> brown fox jumps over the lazy dog"));
  logger.info("--> searching with boundary characters");
  source=searchSource().query(matchQuery("field2","quick")).highlighter(highlight().field("field2",30,1).boundaryChars(new char[]{' '}));
  searchResponse=client().prepareSearch("test").setSource(source).get();
  assertHighlight(searchResponse,0,"field2",0,1,equalTo("The <em>quick</em> brown fox jumps over"));
}
