{
  assertAcked(prepareCreate("test").addMapping("test",jsonBuilder().startObject().startObject("test").startObject("properties").startObject("name").startObject("fields").startObject("autocomplete").field("type","string").field("analyzer","autocomplete").field("search_analyzer","search_autocomplete").field("term_vector","with_positions_offsets").endObject().startObject("name").field("type","string").endObject().endObject().field("type","multi_field").endObject().endObject().endObject()).setSettings(settingsBuilder().put(indexSettings()).put("analysis.tokenizer.autocomplete.max_gram",20).put("analysis.tokenizer.autocomplete.min_gram",1).put("analysis.tokenizer.autocomplete.token_chars","letter,digit").put("analysis.tokenizer.autocomplete.type","nGram").put("analysis.filter.wordDelimiter.type","word_delimiter").putArray("analysis.filter.wordDelimiter.type_table","& => ALPHANUM","| => ALPHANUM","! => ALPHANUM","? => ALPHANUM",". => ALPHANUM","- => ALPHANUM","# => ALPHANUM","% => ALPHANUM","+ => ALPHANUM",", => ALPHANUM","~ => ALPHANUM",": => ALPHANUM","/ => ALPHANUM","^ => ALPHANUM","$ => ALPHANUM","@ => ALPHANUM",") => ALPHANUM","( => ALPHANUM","] => ALPHANUM","[ => ALPHANUM","} => ALPHANUM","{ => ALPHANUM").put("analysis.filter.wordDelimiter.type.split_on_numerics",false).put("analysis.filter.wordDelimiter.generate_word_parts",true).put("analysis.filter.wordDelimiter.generate_number_parts",false).put("analysis.filter.wordDelimiter.catenate_words",true).put("analysis.filter.wordDelimiter.catenate_numbers",true).put("analysis.filter.wordDelimiter.catenate_all",false).put("analysis.analyzer.autocomplete.tokenizer","autocomplete").putArray("analysis.analyzer.autocomplete.filter","lowercase","wordDelimiter").put("analysis.analyzer.search_autocomplete.tokenizer","whitespace").putArray("analysis.analyzer.search_autocomplete.filter","lowercase","wordDelimiter")));
  ensureYellow();
  client().prepareIndex("test","test","1").setSource("name","ARCOTEL Hotels Deutschland").get();
  refresh();
  SearchResponse search=client().prepareSearch("test").setTypes("test").setQuery(matchQuery("name.autocomplete","deut tel").operator(Operator.OR)).highlighter(new HighlightBuilder().field("name.autocomplete")).execute().actionGet();
  assertHighlight(search,0,"name.autocomplete",0,equalTo("ARCO<em>TEL</em> Ho<em>tel</em>s <em>Deut</em>schland"));
}
