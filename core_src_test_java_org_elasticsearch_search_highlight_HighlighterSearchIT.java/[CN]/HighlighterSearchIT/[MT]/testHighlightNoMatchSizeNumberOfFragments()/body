{
  assertAcked(prepareCreate("test").addMapping("type1","text","type=string," + randomStoreField() + "term_vector=with_positions_offsets,index_options=offsets"));
  ensureGreen();
  String text1="This is the first sentence. This is the second sentence." + HighlightUtils.PARAGRAPH_SEPARATOR;
  String text2="This is the third sentence. This is the fourth sentence.";
  String text3="This is the fifth sentence";
  index("test","type1","1","text",new String[]{text1,text2,text3});
  refresh();
  HighlightBuilder.Field field=new HighlightBuilder.Field("text").fragmentSize(1).numOfFragments(0).highlighterType("plain").noMatchSize(20);
  SearchResponse response=client().prepareSearch("test").highlighter(new HighlightBuilder().field(field)).get();
  assertHighlight(response,0,"text",0,1,equalTo("This is the first"));
  field.highlighterType("fvh");
  response=client().prepareSearch("test").highlighter(new HighlightBuilder().field(field)).get();
  assertHighlight(response,0,"text",0,1,equalTo("This is the first sentence"));
  field.highlighterType("postings");
  response=client().prepareSearch("test").highlighter(new HighlightBuilder().field(field)).get();
  assertHighlight(response,0,"text",0,1,equalTo("This is the first sentence."));
  MatchQueryBuilder queryBuilder=QueryBuilders.matchQuery("text","third fifth");
  field.highlighterType("plain");
  response=client().prepareSearch("test").setQuery(queryBuilder).highlighter(new HighlightBuilder().field(field)).get();
  assertHighlight(response,0,"text",0,2,equalTo("This is the <em>third</em> sentence. This is the fourth sentence."));
  assertHighlight(response,0,"text",1,2,equalTo("This is the <em>fifth</em> sentence"));
  field.highlighterType("fvh");
  response=client().prepareSearch("test").setQuery(queryBuilder).highlighter(new HighlightBuilder().field(field)).get();
  assertHighlight(response,0,"text",0,2,equalTo("This is the <em>third</em> sentence. This is the fourth sentence."));
  assertHighlight(response,0,"text",1,2,equalTo("This is the <em>fifth</em> sentence"));
  field.highlighterType("postings");
  response=client().prepareSearch("test").setQuery(queryBuilder).highlighter(new HighlightBuilder().field(field)).get();
  assertHighlight(response,0,"text",0,2,equalTo("This is the <em>third</em> sentence. This is the fourth sentence."));
  assertHighlight(response,0,"text",1,2,equalTo("This is the <em>fifth</em> sentence"));
}
