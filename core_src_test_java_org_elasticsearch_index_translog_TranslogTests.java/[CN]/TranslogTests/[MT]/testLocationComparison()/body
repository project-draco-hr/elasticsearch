{
  List<Translog.Location> locations=new ArrayList<>();
  int translogOperations=randomIntBetween(10,100);
  int count=0;
  for (int op=0; op < translogOperations; op++) {
    locations.add(translog.add(new Translog.Index("test","" + op,Integer.toString(++count).getBytes(Charset.forName("UTF-8")))));
    if (rarely() && translogOperations > op + 1) {
      translog.commit();
    }
  }
  Collections.shuffle(locations,random());
  Translog.Location max=locations.get(0);
  for (  Translog.Location location : locations) {
    max=max(max,location);
  }
  assertEquals(max.generation,translog.currentFileGeneration());
  final Translog.Operation read=translog.read(max);
  assertEquals(read.getSource().source.toUtf8(),Integer.toString(count));
}
