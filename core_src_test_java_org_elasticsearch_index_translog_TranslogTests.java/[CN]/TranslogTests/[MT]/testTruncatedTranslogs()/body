{
  List<Translog.Location> locations=newArrayList();
  int translogOperations=randomIntBetween(10,100);
  for (int op=0; op < translogOperations; op++) {
    String ascii=randomAsciiOfLengthBetween(1,50);
    locations.add(translog.add(new Translog.Create("test","" + op,ascii.getBytes("UTF-8"))));
  }
  translog.sync();
  truncateTranslogs(translogDir);
  AtomicInteger truncations=new AtomicInteger(0);
  for (  Translog.Location location : locations) {
    try {
      translog.read(location);
    }
 catch (    ElasticsearchException e) {
      if (e.getCause() instanceof EOFException) {
        truncations.incrementAndGet();
      }
 else {
        throw e;
      }
    }
  }
  assertThat("at least one truncation was caused and caught",truncations.get(),greaterThanOrEqualTo(1));
}
