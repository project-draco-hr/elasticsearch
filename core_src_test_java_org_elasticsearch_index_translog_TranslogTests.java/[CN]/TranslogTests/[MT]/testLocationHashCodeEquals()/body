{
  List<Translog.Location> locations=new ArrayList<>();
  List<Translog.Location> locations2=new ArrayList<>();
  int translogOperations=randomIntBetween(10,100);
  try (Translog translog2=create(createTempDir())){
    for (int op=0; op < translogOperations; op++) {
      locations.add(translog.add(new Translog.Index("test","" + op,Integer.toString(op).getBytes(Charset.forName("UTF-8")))));
      locations2.add(translog2.add(new Translog.Index("test","" + op,Integer.toString(op).getBytes(Charset.forName("UTF-8")))));
    }
    int iters=randomIntBetween(10,100);
    for (int i=0; i < iters; i++) {
      Translog.Location location=RandomPicks.randomFrom(random(),locations);
      for (      Translog.Location loc : locations) {
        if (loc == location) {
          assertTrue(loc.equals(location));
          assertEquals(loc.hashCode(),location.hashCode());
        }
 else {
          assertFalse(loc.equals(location));
        }
      }
      for (int j=0; j < translogOperations; j++) {
        assertTrue(locations.get(j).equals(locations2.get(j)));
        assertEquals(locations.get(j).hashCode(),locations2.get(j).hashCode());
      }
    }
  }
 }
