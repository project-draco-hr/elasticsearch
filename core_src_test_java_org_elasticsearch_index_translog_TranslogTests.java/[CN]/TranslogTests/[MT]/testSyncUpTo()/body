{
  int translogOperations=randomIntBetween(10,100);
  int count=0;
  for (int op=0; op < translogOperations; op++) {
    final Translog.Location location=translog.add(new Translog.Index("test","" + op,Integer.toString(++count).getBytes(Charset.forName("UTF-8"))));
    if (randomBoolean()) {
      assertTrue("at least one operation pending",translog.syncNeeded());
      assertTrue("this operation has not been synced",translog.ensureSynced(location));
      assertFalse("the last call to ensureSycned synced all previous ops",translog.syncNeeded());
      translog.add(new Translog.Index("test","" + op,Integer.toString(++count).getBytes(Charset.forName("UTF-8"))));
      assertTrue("one pending operation",translog.syncNeeded());
      assertFalse("this op has been synced before",translog.ensureSynced(location));
      assertTrue("we only synced a previous operation yet",translog.syncNeeded());
    }
    if (rarely()) {
      translog.commit();
      assertFalse("location is from a previous translog - already synced",translog.ensureSynced(location));
      assertFalse("no sync needed since no operations in current translog",translog.syncNeeded());
    }
    if (randomBoolean()) {
      translog.sync();
      assertFalse("translog has been synced already",translog.ensureSynced(location));
    }
  }
}
