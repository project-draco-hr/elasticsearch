{
  long id=randomIntBetween(0,Integer.MAX_VALUE);
  Path file=translogDir.resolve(Translog.TRANSLOG_FILE_PREFIX + id + ".tlog");
  assertThat(Translog.parseIdFromFileName(file),equalTo(id));
  id=randomIntBetween(0,Integer.MAX_VALUE);
  file=translogDir.resolve(Translog.TRANSLOG_FILE_PREFIX + id);
  try {
    Translog.parseIdFromFileName(file);
    fail("invalid pattern");
  }
 catch (  IllegalArgumentException ex) {
  }
  file=translogDir.resolve(Translog.TRANSLOG_FILE_PREFIX + id + ".recovering");
  try {
    Translog.parseIdFromFileName(file);
    fail("invalid pattern");
  }
 catch (  IllegalArgumentException ex) {
  }
  file=translogDir.resolve(Translog.TRANSLOG_FILE_PREFIX + randomNonTranslogPatternString(1,10) + id);
  try {
    Translog.parseIdFromFileName(file);
    fail("invalid pattern");
  }
 catch (  IllegalArgumentException ex) {
  }
  file=translogDir.resolve(randomNonTranslogPatternString(1,Translog.TRANSLOG_FILE_PREFIX.length() - 1));
  try {
    Translog.parseIdFromFileName(file);
    fail("invalid pattern");
  }
 catch (  IllegalArgumentException ex) {
  }
}
