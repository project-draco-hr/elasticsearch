{
  IndicesService indicesService=getIndicesService();
  IndexService test=createIndex("test");
  assertTrue(test.hasShard(0));
  ShardPath path=test.getShardOrNull(0).shardPath();
  assertTrue(test.getShardOrNull(0).routingEntry().started());
  ShardPath shardPath=ShardPath.loadShardPath(logger,getNodeEnvironment(),new ShardId(test.index(),0),test.getIndexSettings());
  assertEquals(shardPath,path);
  try {
    indicesService.processPendingDeletes(test.index(),test.getIndexSettings().getSettings(),new TimeValue(0,TimeUnit.MILLISECONDS));
    fail("can't get lock");
  }
 catch (  LockObtainFailedException ex) {
  }
  assertTrue(path.exists());
  int numPending=1;
  if (randomBoolean()) {
    indicesService.addPendingDelete(new ShardId(test.index(),0),test.getIndexSettings().getSettings());
  }
 else {
    if (randomBoolean()) {
      numPending++;
      indicesService.addPendingDelete(new ShardId(test.index(),0),test.getIndexSettings().getSettings());
    }
    indicesService.addPendingDelete(test.index(),test.getIndexSettings().getSettings());
  }
  assertAcked(client().admin().indices().prepareClose("test"));
  assertTrue(path.exists());
  assertEquals(indicesService.numPendingDeletes(test.index()),numPending);
  indicesService.processPendingDeletes(test.index(),test.getIndexSettings().getSettings(),new TimeValue(0,TimeUnit.MILLISECONDS));
  assertEquals(indicesService.numPendingDeletes(test.index()),0);
  assertFalse(path.exists());
  if (randomBoolean()) {
    indicesService.addPendingDelete(new ShardId(test.index(),0),test.getIndexSettings().getSettings());
    indicesService.addPendingDelete(new ShardId(test.index(),1),test.getIndexSettings().getSettings());
    indicesService.addPendingDelete(new ShardId("bogus",1),test.getIndexSettings().getSettings());
    assertEquals(indicesService.numPendingDeletes(test.index()),2);
    indicesService.processPendingDeletes(test.index(),test.getIndexSettings().getSettings(),new TimeValue(0,TimeUnit.MILLISECONDS));
    assertEquals(indicesService.numPendingDeletes(test.index()),0);
  }
  assertAcked(client().admin().indices().prepareOpen("test"));
}
