{
  boolean includeDefaults=params.paramAsBoolean("include_defaults",false);
  boolean indexed=fieldType().indexOptions() != IndexOptions.NONE;
  boolean indexedDefault=Defaults.FIELD_TYPE.indexOptions() != IndexOptions.NONE;
  boolean hasCustomFieldDataSettings=customFieldDataSettings != null && customFieldDataSettings.equals(Settings.EMPTY) == false;
  if (!includeDefaults && indexed == indexedDefault && hasCustomFieldDataSettings == false && fieldType().stored() == Defaults.FIELD_TYPE.stored() && enabledState == Defaults.ENABLED && path == Defaults.PATH && fieldType().dateTimeFormatter().format().equals(Defaults.DATE_TIME_FORMATTER.format()) && Defaults.DEFAULT_TIMESTAMP.equals(defaultTimestamp) && defaultDocValues() == fieldType().hasDocValues()) {
    return builder;
  }
  builder.startObject(CONTENT_TYPE);
  if (includeDefaults || enabledState != Defaults.ENABLED) {
    builder.field("enabled",enabledState.enabled);
  }
  if (indexCreatedBefore2x && (includeDefaults || (indexed != indexedDefault) || (fieldType().tokenized() != Defaults.FIELD_TYPE.tokenized()))) {
    builder.field("index",indexTokenizeOptionToString(indexed,fieldType().tokenized()));
  }
  if (indexCreatedBefore2x && (includeDefaults || fieldType().stored() != Defaults.PRE_20_FIELD_TYPE.stored())) {
    builder.field("store",fieldType().stored());
  }
  if (indexCreatedBefore2x) {
    doXContentDocValues(builder,includeDefaults);
  }
  if (indexCreatedBefore2x && (includeDefaults || path != Defaults.PATH)) {
    builder.field("path",path);
  }
  if (includeDefaults || !fieldType().dateTimeFormatter().format().equals(Defaults.DATE_TIME_FORMATTER.format())) {
    builder.field("format",fieldType().dateTimeFormatter().format());
  }
  if (includeDefaults || !Defaults.DEFAULT_TIMESTAMP.equals(defaultTimestamp)) {
    builder.field("default",defaultTimestamp);
  }
  if (includeDefaults || ignoreMissing != null) {
    builder.field("ignore_missing",ignoreMissing);
  }
  if (indexCreatedBefore2x) {
    if (hasCustomFieldDataSettings) {
      builder.field("fielddata",(Map)customFieldDataSettings.getAsMap());
    }
 else     if (includeDefaults) {
      builder.field("fielddata",(Map)fieldType().fieldDataType().getSettings().getAsMap());
    }
  }
  builder.endObject();
  return builder;
}
