{
  Settings settings=Settings.builder().put(Environment.PATH_HOME_SETTING.getKey(),createTempDir().toString()).build();
  Settings indexSettings=settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.CURRENT).put("index.analysis.filter.wordDelimiter.type","word_delimiter").put("index.analysis.filter.wordDelimiter.split_on_numerics",false).put("index.analysis.analyzer.custom_analyzer.tokenizer","whitespace").putArray("index.analysis.analyzer.custom_analyzer.filter","lowercase","wordDelimiter").put("index.analysis.analyzer.custom_analyzer_1.tokenizer","whitespace").putArray("index.analysis.analyzer.custom_analyzer_1.filter","lowercase","word_delimiter").build();
  IndexSettings idxSettings=IndexSettingsModule.newIndexSettings(new Index("index"),indexSettings);
  AnalysisService analysisService=new AnalysisRegistry(null,new Environment(settings)).build(idxSettings);
  try (NamedAnalyzer custom_analyser=analysisService.analyzer("custom_analyzer")){
    assertNotNull(custom_analyser);
    TokenStream tokenStream=custom_analyser.tokenStream("foo","J2SE j2ee");
    tokenStream.reset();
    CharTermAttribute charTermAttribute=tokenStream.addAttribute(CharTermAttribute.class);
    List<String> token=new ArrayList<>();
    while (tokenStream.incrementToken()) {
      token.add(charTermAttribute.toString());
    }
    assertEquals(token.toString(),2,token.size());
    assertEquals("j2se",token.get(0));
    assertEquals("j2ee",token.get(1));
  }
   try (NamedAnalyzer custom_analyser=analysisService.analyzer("custom_analyzer_1")){
    assertNotNull(custom_analyser);
    TokenStream tokenStream=custom_analyser.tokenStream("foo","J2SE j2ee");
    tokenStream.reset();
    CharTermAttribute charTermAttribute=tokenStream.addAttribute(CharTermAttribute.class);
    List<String> token=new ArrayList<>();
    while (tokenStream.incrementToken()) {
      token.add(charTermAttribute.toString());
    }
    assertEquals(token.toString(),6,token.size());
    assertEquals("j",token.get(0));
    assertEquals("2",token.get(1));
    assertEquals("se",token.get(2));
    assertEquals("j",token.get(3));
    assertEquals("2",token.get(4));
    assertEquals("ee",token.get(5));
  }
 }
