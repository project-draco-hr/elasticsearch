{
  this.indexFieldData=indexFieldData;
  this.size=size;
  this.shardSize=shardSize;
  this.comparatorType=comparatorType;
  this.script=script;
  this.excluded=excluded;
  this.facets=cacheRecycler.longIntMap(-1);
  if (allTerms) {
    for (    AtomicReaderContext readerContext : context.searcher().getTopReaderContext().leaves()) {
      int maxDoc=readerContext.reader().maxDoc();
      SortedNumericDocValues values=indexFieldData.load(readerContext).getLongValues();
      for (int docId=0; docId < maxDoc; docId++) {
        values.setDocument(docId);
        final int numValues=values.count();
        final LongIntOpenHashMap v=facets.v();
        for (int i=0; i < numValues; i++) {
          v.putIfAbsent(values.valueAt(i),0);
        }
      }
    }
  }
}
