{
  this.indexFieldData=indexFieldData;
  this.size=size;
  this.shardSize=shardSize;
  this.comparatorType=comparatorType;
  this.script=script;
  this.excluded=excluded;
  this.facets=cacheRecycler.longIntMap(-1);
  if (allTerms) {
    for (    AtomicReaderContext readerContext : context.searcher().getTopReaderContext().leaves()) {
      int maxDoc=readerContext.reader().maxDoc();
      LongValues values=indexFieldData.load(readerContext).getLongValues();
      if (values instanceof LongValues.WithOrdinals) {
        LongValues.WithOrdinals valuesWithOrds=(LongValues.WithOrdinals)values;
        Ordinals.Docs ordinals=valuesWithOrds.ordinals();
        for (long ord=Ordinals.MIN_ORDINAL; ord < ordinals.getMaxOrd(); ord++) {
          facets.v().putIfAbsent(valuesWithOrds.getValueByOrd(ord),0);
        }
      }
 else {
        for (int docId=0; docId < maxDoc; docId++) {
          final int numValues=values.setDocument(docId);
          final LongIntOpenHashMap v=facets.v();
          for (int i=0; i < numValues; i++) {
            v.putIfAbsent(values.nextValue(),0);
          }
        }
      }
    }
  }
}
