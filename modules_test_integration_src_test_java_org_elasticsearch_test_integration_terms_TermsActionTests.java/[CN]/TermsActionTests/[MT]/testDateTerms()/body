{
  IndexStatus indexStatus=client.admin().indices().status(indicesStatus("test")).actionGet().index("test");
  logger.info("Index ...");
  client.index(indexRequest("test").type("type1").source(newMapBuilder().put("date","2003-01-01").map())).actionGet();
  client.index(indexRequest("test").type("type1").source(newMapBuilder().put("date","2003-01-01").map())).actionGet();
  client.index(indexRequest("test").type("type1").source(newMapBuilder().put("date","2003-01-02").map())).actionGet();
  client.index(indexRequest("test").type("type1").source(newMapBuilder().put("date","2003-01-03").map())).actionGet();
  client.index(indexRequest("test").type("type1").source(newMapBuilder().put("date","2003-01-03").map())).actionGet();
  client.index(indexRequest("test").type("type1").source(newMapBuilder().put("date","2003-01-03").map())).actionGet();
  logger.info("Refresh");
  client.admin().indices().refresh(refreshRequest()).actionGet();
  logger.info("Verify int with sort on term");
  TermsResponse termsResponse=client.terms(termsRequest("test").fields("date").sortType(TermsRequest.SortType.TERM)).actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.numDocs(),equalTo(6l));
  assertThat(termsResponse.maxDoc(),equalTo(6l));
  assertThat(termsResponse.deletedDocs(),equalTo(0l));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("date").docFreq("2003-01-01T00:00:00.000Z"),equalTo(2));
  assertThat(termsResponse.field("date").docFreq("2003-01-02T00:00:00.000Z"),equalTo(1));
  assertThat(termsResponse.field("date").docFreq("2003-01-03T00:00:00.000Z"),equalTo(3));
  assertThat(termsResponse.field("date").termsFreqs().length,equalTo(3));
  assertThat(termsResponse.field("date").termsFreqs()[0].termAsString(),equalTo("2003-01-01T00:00:00.000Z"));
  assertThat(termsResponse.field("date").termsFreqs()[0].docFreq(),equalTo(2));
  assertThat(termsResponse.field("date").termsFreqs()[1].termAsString(),equalTo("2003-01-02T00:00:00.000Z"));
  assertThat(termsResponse.field("date").termsFreqs()[1].docFreq(),equalTo(1));
  assertThat(termsResponse.field("date").termsFreqs()[2].termAsString(),equalTo("2003-01-03T00:00:00.000Z"));
  assertThat(termsResponse.field("date").termsFreqs()[2].docFreq(),equalTo(3));
  logger.info("Verify int with sort on freq");
  termsResponse=client.terms(termsRequest("test").fields("date").sortType(TermsRequest.SortType.FREQ)).actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.numDocs(),equalTo(6l));
  assertThat(termsResponse.maxDoc(),equalTo(6l));
  assertThat(termsResponse.deletedDocs(),equalTo(0l));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("date").docFreq("2003-01-01T00:00:00.000Z"),equalTo(2));
  assertThat(termsResponse.field("date").docFreq("2003-01-02T00:00:00.000Z"),equalTo(1));
  assertThat(termsResponse.field("date").docFreq("2003-01-03T00:00:00.000Z"),equalTo(3));
  assertThat(termsResponse.field("date").termsFreqs().length,equalTo(3));
  assertThat(termsResponse.field("date").termsFreqs()[0].termAsString(),equalTo("2003-01-03T00:00:00.000Z"));
  assertThat(termsResponse.field("date").termsFreqs()[0].docFreq(),equalTo(3));
  assertThat(termsResponse.field("date").termsFreqs()[1].termAsString(),equalTo("2003-01-01T00:00:00.000Z"));
  assertThat(termsResponse.field("date").termsFreqs()[1].docFreq(),equalTo(2));
  assertThat(termsResponse.field("date").termsFreqs()[2].termAsString(),equalTo("2003-01-02T00:00:00.000Z"));
  assertThat(termsResponse.field("date").termsFreqs()[2].docFreq(),equalTo(1));
}
