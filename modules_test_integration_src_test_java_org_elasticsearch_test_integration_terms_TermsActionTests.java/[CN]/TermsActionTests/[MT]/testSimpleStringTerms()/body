{
  IndexStatus indexStatus=client.admin().indices().prepareStatus("test").execute().actionGet().index("test");
  logger.info("Verify no freqs");
  TermsResponse termsResponse=client.prepareTerms("test").setFields("value").execute().actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat("no term freqs for the 'value' since nothing is indexed",termsResponse.field("value").iterator().hasNext(),equalTo(false));
  logger.info("Index [1]");
  client.index(indexRequest("test").type("type1").id("1").source(jsonBuilder().startObject().field("value","aaa").endObject())).actionGet();
  logger.info("Refresh");
  client.admin().indices().refresh(refreshRequest()).actionGet();
  logger.info("Verify freqs");
  termsResponse=client.terms(termsRequest("test").fields("value")).actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.numDocs(),equalTo(1l));
  assertThat(termsResponse.maxDoc(),equalTo(1l));
  assertThat(termsResponse.deletedDocs(),equalTo(0l));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("value").docFreq("aaa"),equalTo(1));
  assertThat(termsResponse.field("value").docFreq("bbb"),equalTo(-1));
  logger.info("Index [2]");
  client.index(indexRequest("test").type("type1").id("2").source(jsonBuilder().startObject().field("value","bbb bbb").endObject())).actionGet();
  logger.info("Refresh");
  client.admin().indices().refresh(refreshRequest()).actionGet();
  logger.info("Verify freqs");
  termsResponse=client.terms(termsRequest("test").fields("value")).actionGet();
  assertThat(termsResponse.numDocs(),equalTo(2l));
  assertThat(termsResponse.maxDoc(),equalTo(2l));
  assertThat(termsResponse.deletedDocs(),equalTo(0l));
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("value").docFreq("aaa"),equalTo(1));
  assertThat(termsResponse.field("value").docFreq("bbb"),equalTo(1));
  logger.info("Verify freqs (no fields, on _all)");
  termsResponse=client.terms(termsRequest("test")).actionGet();
  assertThat(termsResponse.numDocs(),equalTo(2l));
  assertThat(termsResponse.maxDoc(),equalTo(2l));
  assertThat(termsResponse.deletedDocs(),equalTo(0l));
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("_all").docFreq("aaa"),equalTo(1));
  assertThat(termsResponse.field("_all").docFreq("bbb"),equalTo(1));
  logger.info("Delete 3");
  client.index(indexRequest("test").type("type1").id("3").source(jsonBuilder().startObject().field("value","bbb").endObject())).actionGet();
  logger.info("Refresh");
  client.admin().indices().refresh(refreshRequest()).actionGet();
  logger.info("Verify freqs");
  termsResponse=client.terms(termsRequest("test").fields("value")).actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.numDocs(),equalTo(3l));
  assertThat(termsResponse.maxDoc(),equalTo(3l));
  assertThat(termsResponse.deletedDocs(),equalTo(0l));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("value").docFreq("aaa"),equalTo(1));
  assertThat(termsResponse.field("value").docFreq("bbb"),equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs().length,equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs()[0].termAsString(),equalTo("aaa"));
  assertThat(termsResponse.field("value").termsFreqs()[0].docFreq(),equalTo(1));
  assertThat(termsResponse.field("value").termsFreqs()[1].termAsString(),equalTo("bbb"));
  assertThat(termsResponse.field("value").termsFreqs()[1].docFreq(),equalTo(2));
  logger.info("Verify freqs (sort gy freq)");
  termsResponse=client.terms(termsRequest("test").fields("value").sortType(FREQ)).actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("value").docFreq("aaa"),equalTo(1));
  assertThat(termsResponse.field("value").docFreq("bbb"),equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs().length,equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs()[0].termAsString(),equalTo("bbb"));
  assertThat(termsResponse.field("value").termsFreqs()[0].docFreq(),equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs()[1].termAsString(),equalTo("aaa"));
  assertThat(termsResponse.field("value").termsFreqs()[1].docFreq(),equalTo(1));
  logger.info("Verify freq (size and sort by freq)");
  termsResponse=client.terms(termsRequest("test").fields("value").sortType(FREQ).size(1)).actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("value").docFreq("aaa"),equalTo(-1));
  assertThat(termsResponse.field("value").docFreq("bbb"),equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs().length,equalTo(1));
  assertThat(termsResponse.field("value").termsFreqs()[0].termAsString(),equalTo("bbb"));
  assertThat(termsResponse.field("value").termsFreqs()[0].docFreq(),equalTo(2));
  logger.info("Verify freq (minFreq with sort by freq)");
  termsResponse=client.terms(termsRequest("test").fields("value").sortType(FREQ).minFreq(2)).actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("value").docFreq("aaa"),equalTo(-1));
  assertThat(termsResponse.field("value").docFreq("bbb"),equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs().length,equalTo(1));
  assertThat(termsResponse.field("value").termsFreqs()[0].termAsString(),equalTo("bbb"));
  assertThat(termsResponse.field("value").termsFreqs()[0].docFreq(),equalTo(2));
  logger.info("Verify freq (prefix with sort by freq)");
  termsResponse=client.terms(termsRequest("test").fields("value").sortType(FREQ).prefix("bb")).actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("value").docFreq("aaa"),equalTo(-1));
  assertThat(termsResponse.field("value").docFreq("bbb"),equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs().length,equalTo(1));
  assertThat(termsResponse.field("value").termsFreqs()[0].termAsString(),equalTo("bbb"));
  assertThat(termsResponse.field("value").termsFreqs()[0].docFreq(),equalTo(2));
  logger.info("Delete [3]");
  client.delete(deleteRequest("test").type("type1").id("3")).actionGet();
  logger.info("Refresh");
  client.admin().indices().refresh(refreshRequest()).actionGet();
  logger.info("Verify freq (even after refresh, won't see the delete)");
  termsResponse=client.terms(termsRequest("test").fields("value")).actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.numDocs(),equalTo(2l));
  assertThat(termsResponse.maxDoc(),equalTo(3l));
  assertThat(termsResponse.deletedDocs(),equalTo(1l));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("value").docFreq("aaa"),equalTo(1));
  assertThat(termsResponse.field("value").docFreq("bbb"),equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs().length,equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs()[0].termAsString(),equalTo("aaa"));
  assertThat(termsResponse.field("value").termsFreqs()[0].docFreq(),equalTo(1));
  assertThat(termsResponse.field("value").termsFreqs()[1].termAsString(),equalTo("bbb"));
  assertThat(termsResponse.field("value").termsFreqs()[1].docFreq(),equalTo(2));
  logger.info("Verify freq (with exact, should see the delete)");
  termsResponse=client.terms(termsRequest("test").fields("value").exact(true)).actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("value").docFreq("aaa"),equalTo(1));
  assertThat(termsResponse.field("value").docFreq("bbb"),equalTo(1));
  assertThat(termsResponse.field("value").termsFreqs().length,equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs()[0].termAsString(),equalTo("aaa"));
  assertThat(termsResponse.field("value").termsFreqs()[0].docFreq(),equalTo(1));
  assertThat(termsResponse.field("value").termsFreqs()[1].termAsString(),equalTo("bbb"));
  assertThat(termsResponse.field("value").termsFreqs()[1].docFreq(),equalTo(1));
  logger.info("Optimize (onlyExpungeDeletes with refresh)");
  OptimizeResponse optimizeResponse=client.admin().indices().optimize(optimizeRequest("test").onlyExpungeDeletes(true).refresh(true)).actionGet();
  logger.info("Verify freq (we will see the delete now, without exact)");
  termsResponse=client.terms(termsRequest("test").fields("value").exact(false)).actionGet();
  assertThat(termsResponse.successfulShards(),equalTo(indexStatus.shards().size()));
  assertThat(termsResponse.failedShards(),equalTo(0));
  assertThat(termsResponse.numDocs(),equalTo(2l));
  assertThat(termsResponse.maxDoc(),equalTo(2l));
  assertThat(termsResponse.deletedDocs(),equalTo(0l));
  assertThat(termsResponse.fieldsAsMap().isEmpty(),equalTo(false));
  assertThat(termsResponse.field("value").docFreq("aaa"),equalTo(1));
  assertThat(termsResponse.field("value").docFreq("bbb"),equalTo(1));
  assertThat(termsResponse.field("value").termsFreqs().length,equalTo(2));
  assertThat(termsResponse.field("value").termsFreqs()[0].termAsString(),equalTo("aaa"));
  assertThat(termsResponse.field("value").termsFreqs()[0].docFreq(),equalTo(1));
  assertThat(termsResponse.field("value").termsFreqs()[1].termAsString(),equalTo("bbb"));
  assertThat(termsResponse.field("value").termsFreqs()[1].docFreq(),equalTo(1));
}
