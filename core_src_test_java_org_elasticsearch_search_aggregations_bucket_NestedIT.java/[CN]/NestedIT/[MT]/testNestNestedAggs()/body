{
  SearchResponse response=client().prepareSearch("idx_nested_nested_aggs").addAggregation(nested("level1","nested1").subAggregation(terms("a").field("nested1.a.keyword").collectMode(aggCollectionMode).subAggregation(nested("level2","nested1.nested2").subAggregation(sum("sum").field("nested1.nested2.b"))))).get();
  assertSearchResponse(response);
  Nested level1=response.getAggregations().get("level1");
  assertThat(level1,notNullValue());
  assertThat(level1.getName(),equalTo("level1"));
  assertThat(level1.getDocCount(),equalTo(2L));
  StringTerms a=level1.getAggregations().get("a");
  Terms.Bucket bBucket=a.getBucketByKey("a");
  assertThat(bBucket.getDocCount(),equalTo(1L));
  Nested level2=bBucket.getAggregations().get("level2");
  assertThat(level2.getDocCount(),equalTo(1L));
  Sum sum=level2.getAggregations().get("sum");
  assertThat(sum.getValue(),equalTo(2d));
  a=level1.getAggregations().get("a");
  bBucket=a.getBucketByKey("b");
  assertThat(bBucket.getDocCount(),equalTo(1L));
  level2=bBucket.getAggregations().get("level2");
  assertThat(level2.getDocCount(),equalTo(1L));
  sum=level2.getAggregations().get("sum");
  assertThat(sum.getValue(),equalTo(2d));
}
