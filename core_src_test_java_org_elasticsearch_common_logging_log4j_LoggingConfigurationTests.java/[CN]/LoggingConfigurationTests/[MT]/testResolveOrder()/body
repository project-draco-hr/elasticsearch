{
  Path tmpDir=createTempDir();
  Path loggingConf=tmpDir.resolve(loggingConfiguration("yaml"));
  Files.write(loggingConf,"logger.test_resolve_order: INFO, file\n".getBytes(StandardCharsets.UTF_8));
  Files.write(loggingConf,"appender.file.type: file\n".getBytes(StandardCharsets.UTF_8),StandardOpenOption.APPEND);
  Environment environment=InternalSettingsPreparer.prepareEnvironment(Settings.builder().put(Environment.PATH_CONF_SETTING.getKey(),tmpDir.toAbsolutePath()).put(Environment.PATH_HOME_SETTING.getKey(),createTempDir().toString()).put("logger.test_resolve_order","TRACE, console").put("appender.console.type","console").put("appender.console.layout.type","consolePattern").put("appender.console.layout.conversionPattern","[%d{ISO8601}][%-5p][%-25c] %m%n").build(),new CliToolTestCase.MockTerminal());
  LogConfigurator.configure(environment.settings(),true);
  ESLogger esLogger=Log4jESLoggerFactory.getLogger("test_resolve_order");
  Logger logger=((Log4jESLogger)esLogger).logger();
  Appender appender=logger.getAppender("console");
  assertThat(appender,notNullValue());
  assertTrue(logger.isTraceEnabled());
  appender=logger.getAppender("file");
  assertThat(appender,nullValue());
}
