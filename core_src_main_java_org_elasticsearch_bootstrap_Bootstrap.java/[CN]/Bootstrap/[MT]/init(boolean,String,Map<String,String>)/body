{
  initLoggerPrefix();
  BootstrapInfo.init();
  INSTANCE=new Bootstrap();
  Environment environment=initialSettings(foreground,pidFile,esSettings);
  Settings settings=environment.settings();
  LogConfigurator.configure(settings,true);
  checkForCustomConfFile();
  if (environment.pidFile() != null) {
    PidFile.create(environment.pidFile(),true);
  }
  try {
    if (!foreground) {
      Loggers.disableConsoleLogging();
      closeSystOut();
    }
    JVMCheck.check();
    checkLucene();
    INSTANCE.setup(true,settings,environment);
    INSTANCE.start();
    if (!foreground) {
      closeSysError();
    }
  }
 catch (  Exception e) {
    if (foreground) {
      Loggers.disableConsoleLogging();
    }
    ESLogger logger=Loggers.getLogger(Bootstrap.class);
    if (INSTANCE.node != null) {
      logger=Loggers.getLogger(Bootstrap.class,INSTANCE.node.settings().get("node.name"));
    }
    if (e instanceof CreationException) {
      ByteArrayOutputStream os=new ByteArrayOutputStream();
      PrintStream ps=new PrintStream(os,false,"UTF-8");
      new StartupError(e).printStackTrace(ps);
      ps.flush();
      logger.error("Guice Exception: {}",os.toString("UTF-8"));
    }
 else {
      logger.error("Exception",e);
    }
    if (foreground) {
      Loggers.enableConsoleLogging();
    }
    throw e;
  }
}
