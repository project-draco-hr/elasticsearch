{
  final ESLogger logger=Loggers.getLogger(Bootstrap.class);
  if (Natives.definitelyRunningAsRoot()) {
    if (Boolean.parseBoolean(System.getProperty("es.insecure.allow.root"))) {
      logger.warn("running as ROOT user. this is a bad idea!");
    }
 else {
      throw new RuntimeException("don't run elasticsearch as root.");
    }
  }
  if (seccomp) {
    Natives.trySeccomp(tmpFile);
  }
  if (mlockAll) {
    if (Constants.WINDOWS) {
      Natives.tryVirtualLock();
    }
 else {
      Natives.tryMlockall();
    }
  }
  if (ctrlHandler) {
    Natives.addConsoleCtrlHandler(new ConsoleCtrlHandler(){
      @Override public boolean handle(      int code){
        if (CTRL_CLOSE_EVENT == code) {
          logger.info("running graceful exit on windows");
          try {
            Bootstrap.stop();
          }
 catch (          IOException e) {
            throw new ElasticsearchException("failed to stop node",e);
          }
          return true;
        }
        return false;
      }
    }
);
  }
  try {
    JNAKernel32Library.getInstance();
  }
 catch (  Throwable ignored) {
  }
  JNANatives.trySetMaxNumberOfThreads();
  JNANatives.trySetMaxSizeVirtualMemory();
  StringHelper.randomId();
}
