{
  super.writeTo(out);
  Lucene.writeScoreDoc(out,doc);
  if (hit != null) {
    out.writeBoolean(true);
    hit.writeTo(out,InternalSearchHits.streamContext().streamShardTarget(ShardTargetType.STREAM));
  }
 else {
    out.writeBoolean(false);
  }
  out.writeInt(payload.size());
  for (  Map.Entry<String,List<Object>> entry : payload.entrySet()) {
    out.writeString(entry.getKey());
    List<Object> values=entry.getValue();
    out.writeVInt(values.size());
    for (    Object value : values) {
      out.writeGenericValue(value);
    }
  }
  out.writeInt(contexts.size());
  for (  Map.Entry<String,Set<CharSequence>> entry : contexts.entrySet()) {
    out.writeString(entry.getKey());
    out.writeVInt(entry.getValue().size());
    for (    CharSequence ctx : entry.getValue()) {
      out.writeString(ctx.toString());
    }
  }
}
