{
  if (keyFieldData.multiValued()) {
    if (valueFieldData.multiValued()) {
      double[] keys=keyFieldData.doubleValues(doc);
      double[] values=valueFieldData.doubleValues(doc);
      int size=Math.min(keys.length,values.length);
      for (int i=0; i < size; i++) {
        long bucket=CountAndTotalHistogramFacetCollector.bucket(keys[i],interval);
        counts.adjustOrPutValue(bucket,1,1);
        totals.adjustOrPutValue(bucket,values[i],values[i]);
      }
    }
 else {
      double value=valueFieldData.doubleValue(doc);
      for (      double key : keyFieldData.doubleValues(doc)) {
        long bucket=CountAndTotalHistogramFacetCollector.bucket(key,interval);
        counts.adjustOrPutValue(bucket,1,1);
        totals.adjustOrPutValue(bucket,value,value);
      }
    }
  }
 else {
    long bucket=CountAndTotalHistogramFacetCollector.bucket(keyFieldData.doubleValue(doc),interval);
    if (valueFieldData.multiValued()) {
      for (      double value : valueFieldData.doubleValues(doc)) {
        counts.adjustOrPutValue(bucket,1,1);
        totals.adjustOrPutValue(bucket,value,value);
      }
    }
 else {
      double value=valueFieldData.doubleValue(doc);
      counts.adjustOrPutValue(bucket,1,1);
      totals.adjustOrPutValue(bucket,value,value);
    }
  }
}
