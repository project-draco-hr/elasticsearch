{
  final String syncId=randomUnicodeOfCodepointLengthBetween(10,20);
  ParsedDocument doc=testParsedDocument("1","1","test",null,-1,-1,testDocumentWithTextField(),B_1,null);
  engine.index(new Engine.Index(newUid("1"),doc));
  final Engine.CommitId commitID=engine.flush();
  assertEquals("should succeed to flush commit with right id and no pending doc",engine.syncFlush(syncId,commitID),Engine.SyncedFlushResult.SUCCESS);
  assertEquals(store.readLastCommittedSegmentsInfo().getUserData().get(Engine.SYNC_COMMIT_ID),syncId);
  assertEquals(engine.getLastCommittedSegmentInfos().getUserData().get(Engine.SYNC_COMMIT_ID),syncId);
  doc=testParsedDocument("2","2","test",null,-1,-1,testDocumentWithTextField(),new BytesArray("{}"),null);
  engine.index(new Engine.Index(newUid("2"),doc));
  EngineConfig config=engine.config();
  engine.close();
  engine=new InternalEngine(copy(config,EngineConfig.OpenMode.OPEN_INDEX_AND_TRANSLOG));
  engine.recoverFromTranslog();
  assertNull("Sync ID must be gone since we have a document to replay",engine.getLastCommittedSegmentInfos().getUserData().get(Engine.SYNC_COMMIT_ID));
}
