{
  ParsedDocument doc=testParsedDocument("1","1","test",null,-1,-1,testDocument(),B_1,null);
  Engine.Index index=new Engine.Index(newUid("1"),doc);
  engine.index(index);
  assertThat(index.version(),equalTo(1L));
  index=new Engine.Index(newUid("1"),doc,1L,VersionType.INTERNAL.versionTypeForReplicationAndRecovery(),REPLICA,0);
  replicaEngine.index(index);
  assertThat(index.version(),equalTo(1L));
  index=new Engine.Index(newUid("1"),doc);
  engine.index(index);
  assertThat(index.version(),equalTo(2L));
  Engine.Delete delete=new Engine.Delete("test","1",newUid("1"));
  engine.delete(delete);
  assertThat(delete.version(),equalTo(3L));
  delete=new Engine.Delete("test","1",newUid("1"),3L,VersionType.INTERNAL.versionTypeForReplicationAndRecovery(),REPLICA,0,false);
  replicaEngine.delete(delete);
  assertThat(delete.version(),equalTo(3L));
  try {
    delete=new Engine.Delete("test","1",newUid("1"),3L,VersionType.INTERNAL.versionTypeForReplicationAndRecovery(),REPLICA,0,false);
    replicaEngine.delete(delete);
    fail("excepted VersionConflictEngineException to be thrown");
  }
 catch (  VersionConflictEngineException e) {
  }
  try {
    index=new Engine.Index(newUid("1"),doc,2L,VersionType.INTERNAL.versionTypeForReplicationAndRecovery(),REPLICA,0);
    replicaEngine.index(index);
    fail("excepted VersionConflictEngineException to be thrown");
  }
 catch (  VersionConflictEngineException e) {
  }
}
