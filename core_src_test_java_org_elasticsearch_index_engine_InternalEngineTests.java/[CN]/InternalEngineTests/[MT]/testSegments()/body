{
  try (Store store=createStore();Engine engine=createEngine(defaultSettings,store,createTempDir(),NoMergePolicy.INSTANCE)){
    List<Segment> segments=engine.segments(false);
    assertThat(segments.isEmpty(),equalTo(true));
    assertThat(engine.segmentsStats().getCount(),equalTo(0L));
    assertThat(engine.segmentsStats().getMemoryInBytes(),equalTo(0L));
    ParsedDocument doc=testParsedDocument("1","1","test",null,-1,-1,testDocumentWithTextField(),B_1,null);
    engine.index(new Engine.Index(newUid("1"),doc));
    ParsedDocument doc2=testParsedDocument("2","2","test",null,-1,-1,testDocumentWithTextField(),B_2,null);
    engine.index(new Engine.Index(newUid("2"),doc2));
    engine.refresh("test");
    segments=engine.segments(false);
    assertThat(segments.size(),equalTo(1));
    SegmentsStats stats=engine.segmentsStats();
    assertThat(stats.getCount(),equalTo(1L));
    assertThat(stats.getTermsMemoryInBytes(),greaterThan(0L));
    assertThat(stats.getStoredFieldsMemoryInBytes(),greaterThan(0L));
    assertThat(stats.getTermVectorsMemoryInBytes(),equalTo(0L));
    assertThat(stats.getNormsMemoryInBytes(),greaterThan(0L));
    assertThat(stats.getDocValuesMemoryInBytes(),greaterThan(0L));
    assertThat(segments.get(0).isCommitted(),equalTo(false));
    assertThat(segments.get(0).isSearch(),equalTo(true));
    assertThat(segments.get(0).getNumDocs(),equalTo(2));
    assertThat(segments.get(0).getDeletedDocs(),equalTo(0));
    assertThat(segments.get(0).isCompound(),equalTo(true));
    assertThat(segments.get(0).ramTree,nullValue());
    engine.flush();
    segments=engine.segments(false);
    assertThat(segments.size(),equalTo(1));
    assertThat(engine.segmentsStats().getCount(),equalTo(1L));
    assertThat(segments.get(0).isCommitted(),equalTo(true));
    assertThat(segments.get(0).isSearch(),equalTo(true));
    assertThat(segments.get(0).getNumDocs(),equalTo(2));
    assertThat(segments.get(0).getDeletedDocs(),equalTo(0));
    assertThat(segments.get(0).isCompound(),equalTo(true));
    ParsedDocument doc3=testParsedDocument("3","3","test",null,-1,-1,testDocumentWithTextField(),B_3,null);
    engine.index(new Engine.Index(newUid("3"),doc3));
    engine.refresh("test");
    segments=engine.segments(false);
    assertThat(segments.size(),equalTo(2));
    assertThat(engine.segmentsStats().getCount(),equalTo(2L));
    assertThat(engine.segmentsStats().getTermsMemoryInBytes(),greaterThan(stats.getTermsMemoryInBytes()));
    assertThat(engine.segmentsStats().getStoredFieldsMemoryInBytes(),greaterThan(stats.getStoredFieldsMemoryInBytes()));
    assertThat(engine.segmentsStats().getTermVectorsMemoryInBytes(),equalTo(0L));
    assertThat(engine.segmentsStats().getNormsMemoryInBytes(),greaterThan(stats.getNormsMemoryInBytes()));
    assertThat(engine.segmentsStats().getDocValuesMemoryInBytes(),greaterThan(stats.getDocValuesMemoryInBytes()));
    assertThat(segments.get(0).getGeneration() < segments.get(1).getGeneration(),equalTo(true));
    assertThat(segments.get(0).isCommitted(),equalTo(true));
    assertThat(segments.get(0).isSearch(),equalTo(true));
    assertThat(segments.get(0).getNumDocs(),equalTo(2));
    assertThat(segments.get(0).getDeletedDocs(),equalTo(0));
    assertThat(segments.get(0).isCompound(),equalTo(true));
    assertThat(segments.get(1).isCommitted(),equalTo(false));
    assertThat(segments.get(1).isSearch(),equalTo(true));
    assertThat(segments.get(1).getNumDocs(),equalTo(1));
    assertThat(segments.get(1).getDeletedDocs(),equalTo(0));
    assertThat(segments.get(1).isCompound(),equalTo(true));
    engine.delete(new Engine.Delete("test","1",newUid("1")));
    engine.refresh("test");
    segments=engine.segments(false);
    assertThat(segments.size(),equalTo(2));
    assertThat(engine.segmentsStats().getCount(),equalTo(2L));
    assertThat(segments.get(0).getGeneration() < segments.get(1).getGeneration(),equalTo(true));
    assertThat(segments.get(0).isCommitted(),equalTo(true));
    assertThat(segments.get(0).isSearch(),equalTo(true));
    assertThat(segments.get(0).getNumDocs(),equalTo(1));
    assertThat(segments.get(0).getDeletedDocs(),equalTo(1));
    assertThat(segments.get(0).isCompound(),equalTo(true));
    assertThat(segments.get(1).isCommitted(),equalTo(false));
    assertThat(segments.get(1).isSearch(),equalTo(true));
    assertThat(segments.get(1).getNumDocs(),equalTo(1));
    assertThat(segments.get(1).getDeletedDocs(),equalTo(0));
    assertThat(segments.get(1).isCompound(),equalTo(true));
    engine.onSettingsChanged();
    ParsedDocument doc4=testParsedDocument("4","4","test",null,-1,-1,testDocumentWithTextField(),B_3,null);
    engine.index(new Engine.Index(newUid("4"),doc4));
    engine.refresh("test");
    segments=engine.segments(false);
    assertThat(segments.size(),equalTo(3));
    assertThat(engine.segmentsStats().getCount(),equalTo(3L));
    assertThat(segments.get(0).getGeneration() < segments.get(1).getGeneration(),equalTo(true));
    assertThat(segments.get(0).isCommitted(),equalTo(true));
    assertThat(segments.get(0).isSearch(),equalTo(true));
    assertThat(segments.get(0).getNumDocs(),equalTo(1));
    assertThat(segments.get(0).getDeletedDocs(),equalTo(1));
    assertThat(segments.get(0).isCompound(),equalTo(true));
    assertThat(segments.get(1).isCommitted(),equalTo(false));
    assertThat(segments.get(1).isSearch(),equalTo(true));
    assertThat(segments.get(1).getNumDocs(),equalTo(1));
    assertThat(segments.get(1).getDeletedDocs(),equalTo(0));
    assertThat(segments.get(1).isCompound(),equalTo(true));
    assertThat(segments.get(2).isCommitted(),equalTo(false));
    assertThat(segments.get(2).isSearch(),equalTo(true));
    assertThat(segments.get(2).getNumDocs(),equalTo(1));
    assertThat(segments.get(2).getDeletedDocs(),equalTo(0));
    assertThat(segments.get(2).isCompound(),equalTo(true));
  }
 }
