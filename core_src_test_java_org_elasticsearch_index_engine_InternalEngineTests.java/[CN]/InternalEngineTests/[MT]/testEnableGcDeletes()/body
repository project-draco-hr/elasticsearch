{
  try (Store store=createStore();Engine engine=new InternalEngine(config(defaultSettings,store,createTempDir(),new MergeSchedulerConfig(defaultSettings),newMergePolicy()),false)){
    engine.config().setEnableGcDeletes(false);
    Document document=testDocument();
    document.add(new TextField("value","test1",Field.Store.YES));
    ParsedDocument doc=testParsedDocument("1","1","test",null,-1,-1,document,B_2,null);
    engine.index(new Engine.Index(newUid("1"),doc,1,VersionType.EXTERNAL,Engine.Operation.Origin.PRIMARY,System.nanoTime()));
    engine.delete(new Engine.Delete("test","1",newUid("1"),10,VersionType.EXTERNAL,Engine.Operation.Origin.PRIMARY,System.nanoTime(),false));
    Engine.GetResult getResult=engine.get(new Engine.Get(true,newUid("1")));
    assertThat(getResult.exists(),equalTo(false));
    Thread.sleep(1000);
    if (randomBoolean()) {
      engine.refresh("test");
    }
    engine.delete(new Engine.Delete("test","2",newUid("2"),10,VersionType.EXTERNAL,Engine.Operation.Origin.PRIMARY,System.nanoTime(),false));
    getResult=engine.get(new Engine.Get(true,newUid("2")));
    assertThat(getResult.exists(),equalTo(false));
    try {
      engine.index(new Engine.Index(newUid("1"),doc,2,VersionType.EXTERNAL,Engine.Operation.Origin.PRIMARY,System.nanoTime()));
      fail("did not hit expected exception");
    }
 catch (    VersionConflictEngineException vcee) {
    }
    getResult=engine.get(new Engine.Get(true,newUid("1")));
    assertThat(getResult.exists(),equalTo(false));
    try {
      engine.index(new Engine.Index(newUid("2"),doc,2,VersionType.EXTERNAL,Engine.Operation.Origin.PRIMARY,System.nanoTime()));
      fail("did not hit expected exception");
    }
 catch (    VersionConflictEngineException vcee) {
    }
    getResult=engine.get(new Engine.Get(true,newUid("2")));
    assertThat(getResult.exists(),equalTo(false));
  }
 }
