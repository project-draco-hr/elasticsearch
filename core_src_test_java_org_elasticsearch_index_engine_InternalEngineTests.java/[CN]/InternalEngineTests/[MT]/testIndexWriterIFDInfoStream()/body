{
  assumeFalse("who tests the tester?",VERBOSE);
  MockAppender mockAppender=new MockAppender("testIndexWriterIFDInfoStream");
  final Logger iwIFDLogger;
  if (LogManager.getContext(false).hasLogger("org.elasticsearch.index.engine.lucene.iw.ifd",new PrefixMessageFactory())) {
    iwIFDLogger=LogManager.getLogger("org.elasticsearch.index.engine.lucene.iw.ifd");
    assertNotNull(iwIFDLogger);
  }
 else {
    assertTrue(LogManager.getContext(false).hasLogger("index.engine.lucene.iw.ifd",new PrefixMessageFactory()));
    iwIFDLogger=LogManager.getLogger("index.engine.lucene.iw.ifd");
  }
  Loggers.addAppender(iwIFDLogger,mockAppender);
  Loggers.setLevel(iwIFDLogger,Level.DEBUG);
  try {
    ParsedDocument doc=testParsedDocument("1","1","test",null,-1,-1,testDocumentWithTextField(),B_1,null);
    engine.index(new Engine.Index(newUid("1"),doc));
    engine.flush();
    assertFalse(mockAppender.sawIndexWriterMessage);
    assertFalse(mockAppender.sawIndexWriterIFDMessage);
    Loggers.setLevel(iwIFDLogger,Level.TRACE);
    engine.index(new Engine.Index(newUid("2"),doc));
    engine.flush();
    assertFalse(mockAppender.sawIndexWriterMessage);
    assertTrue(mockAppender.sawIndexWriterIFDMessage);
  }
  finally {
    Loggers.removeAppender(iwIFDLogger,mockAppender);
    Loggers.setLevel(iwIFDLogger,(Level)null);
  }
}
