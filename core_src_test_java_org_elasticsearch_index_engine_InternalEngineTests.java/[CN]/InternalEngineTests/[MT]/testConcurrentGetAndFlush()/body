{
  ParsedDocument doc=testParsedDocument("1","1","test",null,-1,-1,testDocumentWithTextField(),B_1,null);
  engine.create(new Engine.Create(newUid("1"),doc));
  final AtomicReference<Engine.GetResult> latestGetResult=new AtomicReference<>();
  latestGetResult.set(engine.get(new Engine.Get(true,newUid("1"))));
  final AtomicBoolean flushFinished=new AtomicBoolean(false);
  final CyclicBarrier barrier=new CyclicBarrier(2);
  Thread getThread=new Thread(){
    @Override public void run(){
      try {
        barrier.await();
      }
 catch (      InterruptedException|BrokenBarrierException e) {
        throw new RuntimeException(e);
      }
      while (flushFinished.get() == false) {
        Engine.GetResult previousGetResult=latestGetResult.get();
        if (previousGetResult != null) {
          previousGetResult.release();
        }
        latestGetResult.set(engine.get(new Engine.Get(true,newUid("1"))));
        if (latestGetResult.get().exists() == false) {
          break;
        }
      }
    }
  }
;
  getThread.start();
  barrier.await();
  engine.flush();
  flushFinished.set(true);
  getThread.join();
  assertTrue(latestGetResult.get().exists());
  latestGetResult.get().release();
}
