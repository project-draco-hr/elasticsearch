{
  assertNoFailures(suggestResponse);
  assertThat(suggestResponse.getSuggest().getSuggestion(name),is(notNullValue()));
  Suggest.Suggestion<Suggest.Suggestion.Entry<Suggest.Suggestion.Entry.Option>> suggestion=suggestResponse.getSuggest().getSuggestion(name);
  List<String> suggestionList=getNames(suggestion.getEntries().get(0));
  List<Suggest.Suggestion.Entry.Option> options=suggestion.getEntries().get(0).getOptions();
  String assertMsg=String.format(Locale.ROOT,"Expected options %s length to be %s, but was %s",suggestionList,suggestions.length,options.size());
  assertThat(assertMsg,options.size(),is(suggestions.length));
  if (suggestionOrderStrict) {
    for (int i=0; i < suggestions.length; i++) {
      String errMsg=String.format(Locale.ROOT,"Expected elem %s in list %s to be [%s] score: %s",i,suggestionList,suggestions[i],options.get(i).getScore());
      assertThat(errMsg,options.get(i).getText().toString(),is(suggestions[i]));
    }
  }
 else {
    for (    String expectedSuggestion : suggestions) {
      String errMsg=String.format(Locale.ROOT,"Expected elem %s to be in list %s",expectedSuggestion,suggestionList);
      assertThat(errMsg,suggestionList,hasItem(expectedSuggestion));
    }
  }
}
