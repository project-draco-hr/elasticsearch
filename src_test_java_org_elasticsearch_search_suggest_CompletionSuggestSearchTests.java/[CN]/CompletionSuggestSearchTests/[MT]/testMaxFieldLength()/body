{
  client().admin().indices().prepareCreate(INDEX).get();
  int iters=scaledRandomIntBetween(10,20);
  for (int i=0; i < iters; i++) {
    int maxInputLen=between(3,50);
    String str=replaceReservedChars(randomRealisticUnicodeOfCodepointLengthBetween(maxInputLen + 1,maxInputLen + scaledRandomIntBetween(2,50)),(char)0x01);
    ElasticsearchAssertions.assertAcked(client().admin().indices().preparePutMapping(INDEX).setType(TYPE).setSource(jsonBuilder().startObject().startObject(TYPE).startObject("properties").startObject(FIELD).field("type","completion").field("max_input_length",maxInputLen).field("analyzer","keyword").endObject().endObject().endObject().endObject()));
    ensureYellow();
    client().prepareIndex(INDEX,TYPE,"1").setSource(jsonBuilder().startObject().startObject(FIELD).startArray("input").value(str).endArray().field("output","foobar").endObject().endObject()).setRefresh(true).get();
    flushAndRefresh();
    int prefixLen=CompletionFieldMapper.correctSubStringLen(str,between(1,maxInputLen - 1));
    assertSuggestions(str.substring(0,prefixLen),"foobar");
    if (maxInputLen + 1 < str.length()) {
      int offset=Character.isHighSurrogate(str.charAt(maxInputLen - 1)) ? 2 : 1;
      int correctSubStringLen=CompletionFieldMapper.correctSubStringLen(str,maxInputLen + offset);
      String shortenedSuggestion=str.substring(0,correctSubStringLen);
      assertSuggestions(shortenedSuggestion);
    }
  }
}
