{
  builder.startObject();
  if (from != -1) {
    builder.field("from",from);
  }
  if (size != -1) {
    builder.field("size",size);
  }
  if (timeoutInMillis != -1) {
    builder.field("timeout",timeoutInMillis);
  }
  if (terminateAfter != SearchContext.DEFAULT_TERMINATE_AFTER) {
    builder.field("terminate_after",terminateAfter);
  }
  if (queryBuilder != null) {
    builder.field("query");
    queryBuilder.toXContent(builder,params);
  }
  if (queryBinary != null) {
    if (XContentFactory.xContentType(queryBinary) == builder.contentType()) {
      builder.rawField("query",queryBinary);
    }
 else {
      builder.field("query_binary",queryBinary);
    }
  }
  if (postFilterBuilder != null) {
    builder.field("post_filter");
    postFilterBuilder.toXContent(builder,params);
  }
  if (filterBinary != null) {
    if (XContentFactory.xContentType(filterBinary) == builder.contentType()) {
      builder.rawField("filter",filterBinary);
    }
 else {
      builder.field("filter_binary",filterBinary);
    }
  }
  if (minScore != null) {
    builder.field("min_score",minScore);
  }
  if (version != null) {
    builder.field("version",version);
  }
  if (explain != null) {
    builder.field("explain",explain);
  }
  if (fetchSourceContext != null) {
    if (!fetchSourceContext.fetchSource()) {
      builder.field("_source",false);
    }
 else {
      builder.startObject("_source");
      builder.array("includes",fetchSourceContext.includes());
      builder.array("excludes",fetchSourceContext.excludes());
      builder.endObject();
    }
  }
  if (fieldNames != null) {
    if (fieldNames.size() == 1) {
      builder.field("fields",fieldNames.get(0));
    }
 else {
      builder.startArray("fields");
      for (      String fieldName : fieldNames) {
        builder.value(fieldName);
      }
      builder.endArray();
    }
  }
  if (fieldDataFields != null) {
    builder.startArray("fielddata_fields");
    for (    String fieldName : fieldDataFields) {
      builder.value(fieldName);
    }
    builder.endArray();
  }
  if (scriptFields != null) {
    builder.startObject("script_fields");
    for (    ScriptField scriptField : scriptFields) {
      builder.startObject(scriptField.fieldName());
      builder.field("script",scriptField.script());
      if (scriptField.lang() != null) {
        builder.field("lang",scriptField.lang());
      }
      if (scriptField.params() != null) {
        builder.field("params");
        builder.map(scriptField.params());
      }
      builder.endObject();
    }
    builder.endObject();
  }
  if (sorts != null) {
    builder.startArray("sort");
    for (    SortBuilder sort : sorts) {
      builder.startObject();
      sort.toXContent(builder,params);
      builder.endObject();
    }
    builder.endArray();
  }
  if (trackScores) {
    builder.field("track_scores",trackScores);
  }
  if (indexBoost != null) {
    builder.startObject("indices_boost");
    final boolean[] states=indexBoost.allocated;
    final Object[] keys=indexBoost.keys;
    final float[] values=indexBoost.values;
    for (int i=0; i < states.length; i++) {
      if (states[i]) {
        builder.field((String)keys[i],values[i]);
      }
    }
    builder.endObject();
  }
  if (aggregations != null) {
    builder.field("aggregations");
    builder.startObject();
    for (    AbstractAggregationBuilder aggregation : aggregations) {
      aggregation.toXContent(builder,params);
    }
    builder.endObject();
  }
  if (aggregationsBinary != null) {
    if (XContentFactory.xContentType(aggregationsBinary) == builder.contentType()) {
      builder.rawField("aggregations",aggregationsBinary);
    }
 else {
      builder.field("aggregations_binary",aggregationsBinary);
    }
  }
  if (highlightBuilder != null) {
    highlightBuilder.toXContent(builder,params);
  }
  if (suggestBuilder != null) {
    suggestBuilder.toXContent(builder,params);
  }
  if (rescoreBuilders != null) {
    Iterator<RescoreBuilder> itr=rescoreBuilders.iterator();
    while (itr.hasNext()) {
      if (itr.next().isEmpty()) {
        itr.remove();
      }
    }
    if (rescoreBuilders.size() == 1) {
      builder.startObject("rescore");
      rescoreBuilders.get(0).toXContent(builder,params);
      if (rescoreBuilders.get(0).windowSize() == null && defaultRescoreWindowSize != null) {
        builder.field("window_size",defaultRescoreWindowSize);
      }
      builder.endObject();
    }
 else     if (!rescoreBuilders.isEmpty()) {
      builder.startArray("rescore");
      for (      RescoreBuilder rescoreBuilder : rescoreBuilders) {
        builder.startObject();
        rescoreBuilder.toXContent(builder,params);
        if (rescoreBuilder.windowSize() == null && defaultRescoreWindowSize != null) {
          builder.field("window_size",defaultRescoreWindowSize);
        }
        builder.endObject();
      }
      builder.endArray();
    }
  }
  if (stats != null) {
    builder.startArray("stats");
    for (    String stat : stats) {
      builder.value(stat);
    }
    builder.endArray();
  }
  builder.endObject();
  return builder;
}
