{
  assertThat(this.emptyRoutingTable.activePrimaryShardsGrouped(new String[0],true).size(),is(0));
  assertThat(this.emptyRoutingTable.activePrimaryShardsGrouped(new String[0],false).size(),is(0));
  assertThat(clusterState.routingTable().activePrimaryShardsGrouped(new String[]{TEST_INDEX_1},false).size(),is(0));
  assertThat(clusterState.routingTable().activePrimaryShardsGrouped(new String[]{TEST_INDEX_1},true).size(),is(this.numberOfShards));
  initPrimaries();
  assertThat(clusterState.routingTable().activePrimaryShardsGrouped(new String[]{TEST_INDEX_1},false).size(),is(0));
  assertThat(clusterState.routingTable().activePrimaryShardsGrouped(new String[]{TEST_INDEX_1},true).size(),is(this.numberOfShards));
  startInitializingShards(TEST_INDEX_1);
  assertThat(clusterState.routingTable().activePrimaryShardsGrouped(new String[]{TEST_INDEX_1},false).size(),is(this.numberOfShards));
  assertThat(clusterState.routingTable().activePrimaryShardsGrouped(new String[]{TEST_INDEX_1,TEST_INDEX_2},false).size(),is(this.numberOfShards));
  assertThat(clusterState.routingTable().activePrimaryShardsGrouped(new String[]{TEST_INDEX_1},true).size(),is(this.numberOfShards));
  startInitializingShards(TEST_INDEX_2);
  assertThat(clusterState.routingTable().activePrimaryShardsGrouped(new String[]{TEST_INDEX_2},false).size(),is(this.numberOfShards));
  assertThat(clusterState.routingTable().activePrimaryShardsGrouped(new String[]{TEST_INDEX_1,TEST_INDEX_2},false).size(),is(2 * this.numberOfShards));
  assertThat(clusterState.routingTable().activePrimaryShardsGrouped(new String[]{TEST_INDEX_1,TEST_INDEX_2},true).size(),is(2 * this.numberOfShards));
  try {
    clusterState.routingTable().activePrimaryShardsGrouped(new String[]{TEST_INDEX_1,"not_exists"},true);
    fail("Calling with non-existing index name should raise IndexMissingException");
  }
 catch (  IndexNotFoundException e) {
  }
}
