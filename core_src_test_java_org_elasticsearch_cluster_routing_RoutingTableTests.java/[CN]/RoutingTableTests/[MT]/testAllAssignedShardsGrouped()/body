{
  assertThat(clusterState.routingTable().allAssignedShardsGrouped(new String[]{TEST_INDEX_1},false).size(),is(0));
  assertThat(clusterState.routingTable().allAssignedShardsGrouped(new String[]{TEST_INDEX_1},true).size(),is(this.shardsPerIndex));
  initPrimaries();
  assertThat(clusterState.routingTable().allAssignedShardsGrouped(new String[]{TEST_INDEX_1},false).size(),is(this.numberOfShards));
  assertThat(clusterState.routingTable().allAssignedShardsGrouped(new String[]{TEST_INDEX_1},true).size(),is(this.shardsPerIndex));
  assertThat(clusterState.routingTable().allAssignedShardsGrouped(new String[]{TEST_INDEX_1,TEST_INDEX_2},false).size(),is(2 * this.numberOfShards));
  assertThat(clusterState.routingTable().allAssignedShardsGrouped(new String[]{TEST_INDEX_1,TEST_INDEX_2},true).size(),is(this.totalNumberOfShards));
  try {
    clusterState.routingTable().allAssignedShardsGrouped(new String[]{TEST_INDEX_1,"not_exists"},false);
  }
 catch (  IndexNotFoundException e) {
    fail("Calling with non-existing index should be ignored at the moment");
  }
}
