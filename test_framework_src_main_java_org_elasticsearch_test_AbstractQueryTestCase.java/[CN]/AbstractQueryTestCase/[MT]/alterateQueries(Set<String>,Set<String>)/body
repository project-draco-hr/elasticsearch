{
  List<Tuple<String,Boolean>> results=new ArrayList<>();
  boolean hasArbitraryContent=(arbitraryMarkers != null && arbitraryMarkers.isEmpty() == false);
  for (  String query : queries) {
    int mutation=0;
    while (true) {
      boolean expectedException=true;
      BytesStreamOutput out=new BytesStreamOutput();
      try (XContentGenerator generator=XContentType.JSON.xContent().createGenerator(out);XContentParser parser=XContentHelper.createParser(new BytesArray(query))){
        int objectIndex=-1;
        XContentParser.Token token;
        while ((token=parser.nextToken()) != null) {
          if (token == XContentParser.Token.START_OBJECT) {
            objectIndex++;
            if (hasArbitraryContent) {
              expectedException=arbitraryMarkers.contains(parser.currentName()) == false;
            }
            if (objectIndex == mutation) {
              generator.writeStartObject();
              generator.writeFieldName("newField");
              XContentHelper.copyCurrentStructure(generator,parser);
              generator.writeEndObject();
              continue;
            }
          }
          XContentHelper.copyCurrentEvent(generator,parser);
        }
        assertThat(token,nullValue());
        if (objectIndex == mutation) {
          mutation++;
        }
 else {
          break;
        }
      }
       results.add(new Tuple<>(out.bytes().utf8ToString(),expectedException));
    }
  }
  return results;
}
