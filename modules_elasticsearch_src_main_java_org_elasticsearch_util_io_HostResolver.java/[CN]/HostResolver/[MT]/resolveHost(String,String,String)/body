{
  if (host == null) {
    host=defaultValue1;
  }
  if (host == null) {
    host=defaultValue2;
  }
  if (host == null) {
    return null;
  }
  if (host.startsWith("#") && host.endsWith("#")) {
    host=host.substring(1,host.length() - 1);
    if (host.equals("local:ip")) {
      return InetAddress.getLocalHost().getHostAddress();
    }
 else     if (host.equalsIgnoreCase("local:host")) {
      return InetAddress.getLocalHost().getHostName();
    }
 else     if (host.equalsIgnoreCase("local:canonicalhost")) {
      return InetAddress.getLocalHost().getCanonicalHostName();
    }
 else {
      String name=host.substring(0,host.indexOf(':'));
      String type=host.substring(host.indexOf(':') + 1);
      Enumeration<NetworkInterface> niEnum;
      try {
        niEnum=NetworkInterface.getNetworkInterfaces();
      }
 catch (      SocketException e) {
        throw new IOException("Failed to get network interfaces",e);
      }
      while (niEnum.hasMoreElements()) {
        NetworkInterface ni=niEnum.nextElement();
        if (name.equals(ni.getName()) || name.equals(ni.getDisplayName())) {
          Enumeration<InetAddress> inetEnum=ni.getInetAddresses();
          while (inetEnum.hasMoreElements()) {
            InetAddress addr=inetEnum.nextElement();
            if (addr.getHostAddress().equals("127.0.0.1")) {
              continue;
            }
            if (addr.getHostAddress().indexOf(".") == -1) {
              continue;
            }
            if ("host".equalsIgnoreCase(type)) {
              return addr.getHostName();
            }
 else             if ("canonicalhost".equalsIgnoreCase(type)) {
              return addr.getCanonicalHostName();
            }
 else {
              return addr.getHostAddress();
            }
          }
        }
      }
    }
    throw new IOException("Failed to find network interface for [" + host + "]");
  }
  InetAddress inetAddress=java.net.InetAddress.getByName(host);
  String hostAddress=inetAddress.getHostAddress();
  String hostName=inetAddress.getHostName();
  String canonicalHostName=inetAddress.getCanonicalHostName();
  if (host.equalsIgnoreCase(hostAddress)) {
    return hostAddress;
  }
 else   if (host.equalsIgnoreCase(canonicalHostName)) {
    return canonicalHostName;
  }
 else {
    return hostName;
  }
}
