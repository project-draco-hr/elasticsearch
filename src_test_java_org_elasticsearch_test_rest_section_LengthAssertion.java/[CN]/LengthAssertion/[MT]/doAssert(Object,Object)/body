{
  logger.trace("assert that [{}] has length [{}] (field: [{}])",actualValue,expectedValue,getField());
  assertThat("expected value of [" + getField() + "] is not numeric (got ["+ expectedValue.getClass()+ "]",expectedValue,instanceOf(Number.class));
  int length=((Number)expectedValue).intValue();
  if (actualValue instanceof String) {
    assertThat(errorMessage(),((String)actualValue).length(),equalTo(length));
  }
 else   if (actualValue instanceof List) {
    assertThat(errorMessage(),((List)actualValue).size(),equalTo(length));
  }
 else   if (actualValue instanceof Map) {
    assertThat(errorMessage(),((Map)actualValue).keySet().size(),equalTo(length));
  }
 else {
    throw new UnsupportedOperationException("value is of unsupported type [" + actualValue.getClass().getSimpleName() + "]");
  }
}
