{
  double alpha=randomDouble();
  double beta=randomDouble();
  MovAvgModel model=new HoltLinearModel(alpha,beta);
  int numValues=randomIntBetween(1,100);
  int windowSize=randomIntBetween(1,50);
  EvictingQueue<Double> window=EvictingQueue.create(windowSize);
  for (int i=0; i < numValues; i++) {
    double randValue=randomDouble();
    if (i == 0) {
      window.offer(randValue);
      continue;
    }
    double s=0;
    double last_s=0;
    double b=0;
    double last_b=0;
    int counter=0;
    double last;
    for (    double value : window) {
      last=value;
      if (counter == 1) {
        s=value;
        b=value - last;
      }
 else {
        s=alpha * value + (1.0d - alpha) * (last_s + last_b);
        b=beta * (s - last_s) + (1 - beta) * last_b;
      }
      counter+=1;
      last_s=s;
      last_b=b;
    }
    double expected=s + (0 * b);
    double actual=model.next(window);
    assertThat(Double.compare(expected,actual),equalTo(0));
    window.offer(randValue);
  }
}
