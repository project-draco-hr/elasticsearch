{
  int shardsCount=countShards();
  if (shardsCount == 0) {
    return;
  }
  ByteSizeValue shardIndexingBufferSize=new ByteSizeValue(indexingBuffer.bytes() / shardsCount);
  if (shardIndexingBufferSize.bytes() < minShardIndexBufferSize.bytes()) {
    shardIndexingBufferSize=minShardIndexBufferSize;
  }
  if (shardIndexingBufferSize.bytes() > maxShardIndexBufferSize.bytes()) {
    shardIndexingBufferSize=maxShardIndexBufferSize;
  }
  ByteSizeValue shardTranslogBufferSize=new ByteSizeValue(translogBuffer.bytes() / shardsCount);
  if (shardTranslogBufferSize.bytes() < minShardTranslogBufferSize.bytes()) {
    shardTranslogBufferSize=minShardTranslogBufferSize;
  }
  if (shardTranslogBufferSize.bytes() > maxShardTranslogBufferSize.bytes()) {
    shardTranslogBufferSize=maxShardTranslogBufferSize;
  }
  logger.debug("recalculating shard indexing buffer (reason={}), total is [{}] with [{}] active shards, each shard set to indexing=[{}], translog=[{}]",reason,indexingBuffer,shardsCount,shardIndexingBufferSize,shardTranslogBufferSize);
  for (  IndexService indexService : indicesService) {
    for (    IndexShard indexShard : indexService) {
      ShardIndexingStatus status=shardsIndicesStatus.get(indexShard.shardId());
      if (status == null || !status.inactiveIndexing) {
        try {
          ((InternalIndexShard)indexShard).engine().updateIndexingBufferSize(shardIndexingBufferSize);
          ((InternalIndexShard)indexShard).translog().updateBuffer(shardTranslogBufferSize);
        }
 catch (        EngineClosedException e) {
          continue;
        }
catch (        FlushNotAllowedEngineException e) {
          continue;
        }
catch (        Exception e) {
          logger.warn("failed to set shard [{}][{}] index buffer to [{}]",indexShard.shardId().index().name(),indexShard.shardId().id(),shardIndexingBufferSize);
        }
      }
    }
  }
}
