{
  writer.writeStatementOffset(location);
  expression.write(writer,globals);
  if (method == null) {
    Type itr=Definition.getType("Iterator");
    org.objectweb.asm.Type methodType=org.objectweb.asm.Type.getMethodType(itr.type,Definition.DEF_TYPE.type);
    writer.invokeDefCall("iterator",methodType,DefBootstrap.ITERATOR);
  }
 else {
    method.write(writer);
  }
  writer.visitVarInsn(iterator.type.type.getOpcode(Opcodes.ISTORE),iterator.getSlot());
  Label begin=new Label();
  Label end=new Label();
  writer.mark(begin);
  writer.visitVarInsn(iterator.type.type.getOpcode(Opcodes.ILOAD),iterator.getSlot());
  writer.invokeInterface(ITERATOR_TYPE,ITERATOR_HASNEXT);
  writer.ifZCmp(MethodWriter.EQ,end);
  writer.visitVarInsn(iterator.type.type.getOpcode(Opcodes.ILOAD),iterator.getSlot());
  writer.invokeInterface(ITERATOR_TYPE,ITERATOR_NEXT);
  writer.writeCast(cast);
  writer.visitVarInsn(variable.type.type.getOpcode(Opcodes.ISTORE),variable.getSlot());
  if (loopCounter != null) {
    writer.writeLoopCounter(loopCounter.getSlot(),statementCount,location);
  }
  block.write(writer,globals);
  writer.goTo(begin);
  writer.mark(end);
}
