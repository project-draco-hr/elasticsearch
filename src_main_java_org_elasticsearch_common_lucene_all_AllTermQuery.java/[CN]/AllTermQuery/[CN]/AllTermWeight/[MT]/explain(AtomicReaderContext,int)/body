{
  AllTermSpanScorer scorer=scorer(context,true,false,context.reader().getLiveDocs());
  if (scorer != null) {
    int newDoc=scorer.advance(doc);
    if (newDoc == doc) {
      float freq=scorer.sloppyFreq();
      SimScorer docScorer=similarity.simScorer(stats,context);
      ComplexExplanation inner=new ComplexExplanation();
      inner.setDescription("weight(" + getQuery() + " in "+ doc+ ") ["+ similarity.getClass().getSimpleName()+ "], result of:");
      Explanation scoreExplanation=docScorer.explain(doc,new Explanation(freq,"phraseFreq=" + freq));
      inner.addDetail(scoreExplanation);
      inner.setValue(scoreExplanation.getValue());
      inner.setMatch(true);
      ComplexExplanation result=new ComplexExplanation();
      result.addDetail(inner);
      Explanation payloadBoost=new Explanation();
      result.addDetail(payloadBoost);
      final float payloadScore=scorer.getPayloadScore();
      payloadBoost.setValue(payloadScore);
      payloadBoost.setDescription("allPayload(...)");
      result.setValue(inner.getValue() * payloadScore);
      result.setDescription("btq, product of:");
      return result;
    }
  }
  return new ComplexExplanation(false,0.0f,"no matching term");
}
