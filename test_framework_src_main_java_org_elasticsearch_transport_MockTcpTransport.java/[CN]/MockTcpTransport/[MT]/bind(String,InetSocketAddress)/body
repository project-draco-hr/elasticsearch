{
  ServerSocket socket=new ServerSocket();
  socket.bind(address);
  socket.setReuseAddress(TCP_REUSE_ADDRESS.get(settings()));
  ByteSizeValue tcpReceiveBufferSize=TCP_RECEIVE_BUFFER_SIZE.get(settings);
  if (tcpReceiveBufferSize.bytes() > 0) {
    socket.setReceiveBufferSize(tcpReceiveBufferSize.bytesAsInt());
  }
  MockChannel serverMockChannel=new MockChannel(socket,name);
  CountDownLatch started=new CountDownLatch(1);
  executor.execute(new AbstractRunnable(){
    @Override public void onFailure(    Exception e){
      try {
        onException(serverMockChannel,e);
      }
 catch (      IOException ex) {
        logger.warn("failed on handling exception",ex);
      }
    }
    @Override protected void doRun() throws Exception {
      started.countDown();
      serverMockChannel.accept(executor);
    }
  }
);
  try {
    started.await();
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
  }
  return serverMockChannel;
}
