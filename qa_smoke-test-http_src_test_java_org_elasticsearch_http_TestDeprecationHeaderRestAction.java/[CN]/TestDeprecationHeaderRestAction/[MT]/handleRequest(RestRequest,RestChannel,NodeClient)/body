{
  final List<String> settings;
  try (XContentParser parser=XContentFactory.xContent(request.content()).createParser(request.content())){
    final Map<String,Object> source=parser.map();
    if (source.containsKey("deprecated_settings")) {
      deprecationLogger.deprecated(DEPRECATED_USAGE);
      settings=(List<String>)source.get("deprecated_settings");
    }
 else {
      settings=(List<String>)source.get("settings");
    }
  }
   final XContentBuilder builder=channel.newBuilder();
  builder.startObject().startArray("settings");
  for (  String setting : settings) {
    builder.startObject().field(setting,SETTINGS.get(setting).getRaw(this.settings)).endObject();
  }
  builder.endArray().endObject();
  channel.sendResponse(new BytesRestResponse(RestStatus.OK,builder));
}
