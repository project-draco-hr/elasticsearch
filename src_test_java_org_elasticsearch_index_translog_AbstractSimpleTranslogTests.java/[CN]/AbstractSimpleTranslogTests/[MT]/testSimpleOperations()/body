{
  Translog.Snapshot snapshot=translog.snapshot();
  MatcherAssert.assertThat(snapshot,TranslogSizeMatcher.translogSize(0));
  snapshot.close();
  translog.add(new Translog.Create("test","1",new byte[]{1}));
  snapshot=translog.snapshot();
  MatcherAssert.assertThat(snapshot,TranslogSizeMatcher.translogSize(1));
  assertThat(snapshot.estimatedTotalOperations(),equalTo(1));
  snapshot.close();
  translog.add(new Translog.Index("test","2",new byte[]{2}));
  snapshot=translog.snapshot();
  MatcherAssert.assertThat(snapshot,TranslogSizeMatcher.translogSize(2));
  assertThat(snapshot.estimatedTotalOperations(),equalTo(2));
  snapshot.close();
  translog.add(new Translog.Delete(newUid("3")));
  snapshot=translog.snapshot();
  MatcherAssert.assertThat(snapshot,TranslogSizeMatcher.translogSize(3));
  assertThat(snapshot.estimatedTotalOperations(),equalTo(3));
  snapshot.close();
  translog.add(new Translog.DeleteByQuery(new BytesArray(new byte[]{4}),null));
  snapshot=translog.snapshot();
  MatcherAssert.assertThat(snapshot,TranslogSizeMatcher.translogSize(4));
  assertThat(snapshot.estimatedTotalOperations(),equalTo(4));
  snapshot.close();
  snapshot=translog.snapshot();
  Translog.Create create=(Translog.Create)snapshot.next();
  assertThat(create != null,equalTo(true));
  assertThat(create.source().toBytes(),equalTo(new byte[]{1}));
  Translog.Index index=(Translog.Index)snapshot.next();
  assertThat(index != null,equalTo(true));
  assertThat(index.source().toBytes(),equalTo(new byte[]{2}));
  Translog.Delete delete=(Translog.Delete)snapshot.next();
  assertThat(delete != null,equalTo(true));
  assertThat(delete.uid(),equalTo(newUid("3")));
  Translog.DeleteByQuery deleteByQuery=(Translog.DeleteByQuery)snapshot.next();
  assertThat(deleteByQuery != null,equalTo(true));
  assertThat(deleteByQuery.source().toBytes(),equalTo(new byte[]{4}));
  assertThat(snapshot.next(),equalTo(null));
  snapshot.close();
  long firstId=translog.currentId();
  translog.newTranslog(2);
  assertThat(translog.currentId(),Matchers.not(equalTo(firstId)));
  snapshot=translog.snapshot();
  MatcherAssert.assertThat(snapshot,TranslogSizeMatcher.translogSize(0));
  assertThat(snapshot.estimatedTotalOperations(),equalTo(0));
  snapshot.close();
}
