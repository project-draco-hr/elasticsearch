{
  final String[] indices=splitIndices(request.param("index"));
  ClusterStateRequest clusterStateRequest=Requests.clusterStateRequest().setFilterRoutingTable(true).setFilterNodes(true).setFilteredIndices(indices);
  clusterStateRequest.setListenerThreaded(false);
  client.admin().cluster().state(clusterStateRequest,new ActionListener<ClusterStateResponse>(){
    @Override public void onResponse(    ClusterStateResponse response){
      try {
        MetaData metaData=response.getState().metaData();
        if (metaData.indices().isEmpty()) {
          channel.sendResponse(new XContentThrowableRestResponse(request,new IndexMissingException(new Index(indices[0]))));
          return;
        }
        boolean foundAny=false;
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        for (        IndexMetaData indexMetaData : metaData) {
          builder.startObject(indexMetaData.index(),XContentBuilder.FieldCaseConversion.NONE);
          foundAny=true;
          builder.startObject("settings");
          Settings settings=settingsFilter.filterSettings(indexMetaData.settings());
          for (          Map.Entry<String,String> entry : settings.getAsMap().entrySet()) {
            builder.field(entry.getKey(),entry.getValue());
          }
          builder.endObject();
          builder.endObject();
        }
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,foundAny ? OK : NOT_FOUND,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
