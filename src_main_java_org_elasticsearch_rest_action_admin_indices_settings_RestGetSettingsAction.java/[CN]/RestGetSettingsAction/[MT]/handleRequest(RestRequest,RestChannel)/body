{
  final String[] names=request.paramAsStringArrayOrEmptyIfAll("name");
  GetSettingsRequest getSettingsRequest=new GetSettingsRequest().indices(Strings.splitStringByCommaToArray(request.param("index"))).indicesOptions(IndicesOptions.fromRequest(request,IndicesOptions.strict())).names(names);
  getSettingsRequest.local(request.paramAsBoolean("local",getSettingsRequest.local()));
  client.admin().indices().getSettings(getSettingsRequest,new ActionListener<GetSettingsResponse>(){
    @Override public void onResponse(    GetSettingsResponse getSettingsResponse){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        for (        ObjectObjectCursor<String,Settings> cursor : getSettingsResponse.getIndexToSettings()) {
          if (cursor.value.getAsMap().isEmpty()) {
            continue;
          }
          builder.startObject(cursor.key,XContentBuilder.FieldCaseConversion.NONE);
          builder.startObject(Fields.SETTINGS);
          cursor.value.toXContent(builder,request);
          builder.endObject();
          builder.endObject();
        }
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      IOException e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
