{
  TermsParametersParser aggParser=new TermsParametersParser();
  ValuesSourceParser vsParser=ValuesSourceParser.any(aggregationName,StringTerms.TYPE,context).scriptable(true).formattable(true).requiresSortedValues(true).requiresUniqueValues(true).build();
  IncludeExclude.Parser incExcParser=new IncludeExclude.Parser(aggregationName,StringTerms.TYPE,context);
  aggParser.parse(aggregationName,parser,context,vsParser,incExcParser);
  int shardSize=aggParser.getShardSize();
  if (shardSize == 0) {
    shardSize=Integer.MAX_VALUE;
  }
  int requiredSize=aggParser.getRequiredSize();
  if (requiredSize == 0) {
    requiredSize=Integer.MAX_VALUE;
  }
  if (shardSize < requiredSize) {
    shardSize=requiredSize;
  }
  InternalOrder order=resolveOrder(aggParser.getOrderKey(),aggParser.isOrderAsc());
  return new TermsAggregatorFactory(aggregationName,vsParser.config(),order,requiredSize,shardSize,aggParser.getMinDocCount(),aggParser.getIncludeExclude(),aggParser.getExecutionHint());
}
