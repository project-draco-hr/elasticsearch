{
  TermsParametersParser aggParser=new TermsParametersParser();
  ValuesSourceParser vsParser=ValuesSourceParser.any(aggregationName,StringTerms.TYPE,context).scriptable(true).formattable(true).requiresSortedValues(true).requiresUniqueValues(true).build();
  IncludeExclude.Parser incExcParser=new IncludeExclude.Parser(aggregationName,StringTerms.TYPE,context);
  aggParser.parse(aggregationName,parser,context,vsParser,incExcParser);
  InternalOrder order=resolveOrder(aggParser.getOrderKey(),aggParser.isOrderAsc());
  TermsAggregator.BucketCountThresholds bucketCountThresholds=aggParser.getBucketCountThresholds();
  if (!(order == InternalOrder.TERM_ASC || order == InternalOrder.TERM_DESC) && bucketCountThresholds.getShardSize() == aggParser.getDefaultBucketCountThresholds().getShardSize()) {
    bucketCountThresholds.setShardSize(BucketUtils.suggestShardSideQueueSize(bucketCountThresholds.getRequiredSize(),context.numberOfShards()));
  }
  bucketCountThresholds.ensureValidity();
  return new TermsAggregatorFactory(aggregationName,vsParser.config(),order,bucketCountThresholds,aggParser.getIncludeExclude(),aggParser.getExecutionHint(),aggParser.getCollectionMode(),aggParser.showTermDocCountError());
}
