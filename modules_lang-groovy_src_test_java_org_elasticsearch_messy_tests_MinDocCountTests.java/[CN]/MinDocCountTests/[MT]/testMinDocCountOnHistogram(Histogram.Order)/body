{
  final int interval=randomIntBetween(1,3);
  final SearchResponse allResponse=client().prepareSearch("idx").setTypes("type").setSize(0).setQuery(QUERY).addAggregation(histogram("histo").field("d").interval(interval).order(order).minDocCount(0)).execute().actionGet();
  final Histogram allHisto=allResponse.getAggregations().get("histo");
  for (long minDocCount=0; minDocCount < 50; ++minDocCount) {
    final SearchResponse response=client().prepareSearch("idx").setTypes("type").setSize(0).setQuery(QUERY).addAggregation(histogram("histo").field("d").interval(interval).order(order).minDocCount(minDocCount)).execute().actionGet();
    assertSubset(allHisto,(Histogram)response.getAggregations().get("histo"),minDocCount);
  }
}
