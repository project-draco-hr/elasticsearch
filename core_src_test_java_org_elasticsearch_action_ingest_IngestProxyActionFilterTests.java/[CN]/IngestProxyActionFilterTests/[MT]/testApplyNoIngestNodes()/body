{
  Task task=mock(Task.class);
  ActionListener actionListener=mock(ActionListener.class);
  ActionFilterChain actionFilterChain=mock(ActionFilterChain.class);
  int totalNodes=randomIntBetween(1,5);
  IngestProxyActionFilter filter=buildFilter(0,totalNodes);
  String action;
  ActionRequest request;
  if (randomBoolean()) {
    action=IndexAction.NAME;
    request=new IndexRequest().pipeline("_id");
  }
 else {
    action=BulkAction.NAME;
    request=new BulkRequest().add(new IndexRequest().pipeline("_id"));
  }
  try {
    filter.apply(task,action,request,actionListener,actionFilterChain);
    fail("should have failed because there are no ingest nodes");
  }
 catch (  IllegalStateException e) {
    assertThat(e.getMessage(),equalTo("There are no ingest nodes in this cluster, unable to forward request to an ingest node."));
  }
  verifyZeroInteractions(transportService);
  verifyZeroInteractions(actionFilterChain);
  verifyZeroInteractions(actionListener);
}
