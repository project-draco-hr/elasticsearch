{
  try {
    exec("boolean x = true; while (x) {}");
    fail("should have hit PainlessError");
  }
 catch (  PainlessError expected) {
    assertTrue(expected.getMessage().contains("The maximum number of statements that can be executed in a loop has been reached."));
  }
  try {
    exec("while (true) {int y = 5}");
    fail("should have hit PainlessError");
  }
 catch (  PainlessError expected) {
    assertTrue(expected.getMessage().contains("The maximum number of statements that can be executed in a loop has been reached."));
  }
  try {
    exec("while (true) { boolean x = true; while (x) {} }");
    fail("should have hit PainlessError");
  }
 catch (  PainlessError expected) {
    assertTrue(expected.getMessage().contains("The maximum number of statements that can be executed in a loop has been reached."));
  }
  try {
    exec("while (true) { boolean x = false; while (x) {} }");
    fail("should have hit PainlessError");
  }
 catch (  PainlessError expected) {
    assertTrue(expected.getMessage().contains("The maximum number of statements that can be executed in a loop has been reached."));
  }
  try {
    exec("boolean x = true; for (;x;) {}");
    fail("should have hit PainlessError");
  }
 catch (  PainlessError expected) {
    assertTrue(expected.getMessage().contains("The maximum number of statements that can be executed in a loop has been reached."));
  }
  try {
    exec("for (;;) {int x = 5}");
    fail("should have hit PainlessError");
  }
 catch (  PainlessError expected) {
    assertTrue(expected.getMessage().contains("The maximum number of statements that can be executed in a loop has been reached."));
  }
  try {
    exec("def x = true; do {int y = 5;} while (x)");
    fail("should have hit PainlessError");
  }
 catch (  PainlessError expected) {
    assertTrue(expected.getMessage().contains("The maximum number of statements that can be executed in a loop has been reached."));
  }
  try {
    exec("try { int x } catch (PainlessError error) {}");
    fail("should have hit ParseException");
  }
 catch (  RuntimeException expected) {
    assertTrue(expected.getMessage().contains("Invalid type [PainlessError]."));
  }
}
