{
  MappedFieldType fieldType=context.fieldMapper(fieldName);
  if (fieldType == null) {
    throw new QueryShardException(context,"failed to find geo_point field [" + fieldName + "]");
  }
  if (!(fieldType instanceof BaseGeoPointFieldMapper.GeoPointFieldType)) {
    throw new QueryShardException(context,"field [" + fieldName + "] is not a geo_point field");
  }
  List<GeoPoint> shell=new ArrayList<GeoPoint>();
  for (  GeoPoint geoPoint : this.shell) {
    shell.add(new GeoPoint(geoPoint));
  }
  final int shellSize=shell.size();
  final boolean indexCreatedBeforeV2_0=context.indexVersionCreated().before(Version.V_2_0_0);
  if (!indexCreatedBeforeV2_0 && !GeoValidationMethod.isIgnoreMalformed(validationMethod)) {
    for (    GeoPoint point : shell) {
      if (!GeoUtils.isValidLatitude(point.lat())) {
        throw new QueryShardException(context,"illegal latitude value [{}] for [{}]",point.lat(),GeoPolygonQueryBuilder.NAME);
      }
      if (!GeoUtils.isValidLongitude(point.lat())) {
        throw new QueryShardException(context,"illegal longitude value [{}] for [{}]",point.lon(),GeoPolygonQueryBuilder.NAME);
      }
    }
  }
  final Version indexVersionCreated=context.indexVersionCreated();
  if (indexVersionCreated.onOrAfter(Version.V_2_2_0) || GeoValidationMethod.isCoerce(validationMethod)) {
    for (    GeoPoint point : shell) {
      GeoUtils.normalizePoint(point,true,true);
    }
  }
  if (indexVersionCreated.before(Version.V_2_2_0)) {
    IndexGeoPointFieldData indexFieldData=context.getForField(fieldType);
    return new GeoPolygonQuery(indexFieldData,shell.toArray(new GeoPoint[shellSize]));
  }
  double[] lats=new double[shellSize];
  double[] lons=new double[shellSize];
  GeoPoint p;
  for (int i=0; i < shellSize; ++i) {
    p=new GeoPoint(shell.get(i));
    lats[i]=p.lat();
    lons[i]=p.lon();
  }
  final GeoPointField.TermEncoding encoding=(indexVersionCreated.before(Version.V_2_3_0)) ? GeoPointField.TermEncoding.NUMERIC : GeoPointField.TermEncoding.PREFIX;
  return new GeoPointInPolygonQuery(fieldType.name(),encoding,lats,lons);
}
