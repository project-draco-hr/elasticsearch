{
  try {
    final long lengthToCompare=Math.min(a.length(),b.length());
    final BytesRefIterator aIter=a.iterator();
    final BytesRefIterator bIter=b.iterator();
    BytesRef aRef=aIter.next();
    BytesRef bRef=bIter.next();
    if (aRef != null && bRef != null) {
      aRef=aRef.clone();
      bRef=bRef.clone();
      if (aRef.length == a.length() && bRef.length == b.length()) {
        return f.applyAsInt(aRef,bRef);
      }
 else {
        for (int i=0; i < lengthToCompare; ) {
          if (aRef.length == 0) {
            aRef=aIter.next().clone();
          }
          if (bRef.length == 0) {
            bRef=bIter.next().clone();
          }
          final int aLength=aRef.length;
          final int bLength=bRef.length;
          final int length=Math.min(aLength,bLength);
          aRef.length=bRef.length=length;
          int diff=f.applyAsInt(aRef,bRef);
          aRef.length=aLength;
          bRef.length=bLength;
          if (diff != 0) {
            return diff;
          }
          advance(aRef,length);
          advance(bRef,length);
          i+=length;
        }
      }
    }
    return a.length() - b.length();
  }
 catch (  IOException ex) {
    throw new AssertionError("can not happen",ex);
  }
}
