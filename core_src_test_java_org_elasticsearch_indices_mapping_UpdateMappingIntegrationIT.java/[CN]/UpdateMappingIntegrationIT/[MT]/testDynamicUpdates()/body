{
  client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards",1).put("index.number_of_replicas",0).put(MapperService.INDEX_MAPPING_TOTAL_FIELDS_LIMIT_SETTING.getKey(),Long.MAX_VALUE)).execute().actionGet();
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();
  int recCount=randomIntBetween(200,600);
  int numberOfTypes=randomIntBetween(1,5);
  List<IndexRequestBuilder> indexRequests=new ArrayList<>();
  for (int rec=0; rec < recCount; rec++) {
    String type="type" + (rec % numberOfTypes);
    String fieldName="field_" + type + "_"+ rec;
    indexRequests.add(client().prepareIndex("test",type,Integer.toString(rec)).setSource(fieldName,"some_value"));
  }
  indexRandom(true,indexRequests);
  logger.info("checking all the documents are there");
  RefreshResponse refreshResponse=client().admin().indices().prepareRefresh().execute().actionGet();
  assertThat(refreshResponse.getFailedShards(),equalTo(0));
  SearchResponse response=client().prepareSearch("test").setSize(0).execute().actionGet();
  assertThat(response.getHits().totalHits(),equalTo((long)recCount));
  logger.info("checking all the fields are in the mappings");
  for (int rec=0; rec < recCount; rec++) {
    String type="type" + (rec % numberOfTypes);
    String fieldName="field_" + type + "_"+ rec;
    assertConcreteMappingsOnAll("test",type,fieldName);
  }
}
