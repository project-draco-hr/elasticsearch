{
  final ClusterState state=event.state();
  if (state.blocks().disableStatePersistence() == false && state.nodes().localNode().dataNode() && event.routingTableChanged()) {
    RoutingNode routingNode=state.readOnlyRoutingNodes().node(state.nodes().localNodeId());
    final Map<ShardId,ShardStateInfo> newState;
    if (routingNode != null) {
      newState=persistRoutingNodeState(routingNode,event.state());
    }
 else {
      newState=Maps.newHashMap();
    }
    final RoutingTable indexRoutingTables=state.routingTable();
    for (    Map.Entry<ShardId,ShardStateInfo> entry : this.currentState.entrySet()) {
      ShardId shardId=entry.getKey();
      if (newState.containsKey(shardId) == false) {
        String indexName=shardId.index().getName();
        if (state.metaData().hasIndex(indexName)) {
          IndexRoutingTable index=indexRoutingTables.index(indexName);
          if (index != null && index.shard(shardId.id()).allShardsStarted() == false) {
            newState.put(shardId,entry.getValue());
          }
        }
      }
    }
    this.currentState=newState;
  }
}
