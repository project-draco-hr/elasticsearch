{
  String[] splits=mask.split("/");
  if (splits.length != 2) {
    throw new IllegalArgumentException("Expected [ip/prefix_length] but got [" + mask + "], which contains zero or more than one [/]");
  }
  InetAddress value=InetAddresses.forString(splits[0]);
  int prefixLength=Integer.parseInt(splits[1]);
  if (prefixLength < 0 || prefixLength > 8 * value.getAddress().length) {
    throw new IllegalArgumentException("illegal prefixLength [" + prefixLength + "] in ["+ mask+ "]. Must be 0-32 for IPv4 ranges, 0-128 for IPv6 ranges");
  }
  byte lower[]=value.getAddress();
  byte upper[]=value.getAddress();
  for (int i=prefixLength; i < 8 * lower.length; i++) {
    int m=1 << (7 - (i & 7));
    lower[i >> 3]&=~m;
    upper[i >> 3]|=m;
  }
  this.key=key;
  try {
    this.from=InetAddresses.toAddrString(InetAddress.getByAddress(lower));
    this.to=InetAddresses.toAddrString(InetAddress.getByAddress(upper));
  }
 catch (  UnknownHostException bogus) {
    throw new AssertionError(bogus);
  }
}
