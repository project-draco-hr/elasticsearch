{
  final Set<InetAddress> retval=new TreeSet<>(new Comparator<InetAddress>(){
    BytesRef left=new BytesRef();
    BytesRef right=new BytesRef();
    @Override public int compare(    InetAddress o1,    InetAddress o2){
      return set(left,o1).compareTo(set(right,o1));
    }
    private BytesRef set(    BytesRef ref,    InetAddress addr){
      ref.bytes=addr.getAddress();
      ref.offset=0;
      ref.length=ref.bytes.length;
      return ref;
    }
  }
);
  try {
    for (    NetworkInterface intf : getInterfaces()) {
      Enumeration<InetAddress> addrs=intf.getInetAddresses();
      while (addrs.hasMoreElements())       retval.add(addrs.nextElement());
    }
  }
 catch (  SocketException e) {
    logger.warn("Failed to derive all available interfaces",e);
  }
  return retval;
}
