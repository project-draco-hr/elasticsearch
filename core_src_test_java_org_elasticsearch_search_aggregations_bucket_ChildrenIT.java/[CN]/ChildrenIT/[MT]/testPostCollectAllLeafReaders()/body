{
  assertAcked(prepareCreate("index").addMapping("parentType","name","type=string,index=not_analyzed","town","type=string,index=not_analyzed").addMapping("childType","_parent","type=parentType","name","type=string,index=not_analyzed","age","type=integer"));
  List<IndexRequestBuilder> requests=new ArrayList<>();
  requests.add(client().prepareIndex("index","parentType","1").setSource("name","Bob","town","Memphis"));
  requests.add(client().prepareIndex("index","parentType","2").setSource("name","Alice","town","Chicago"));
  requests.add(client().prepareIndex("index","parentType","3").setSource("name","Bill","town","Chicago"));
  requests.add(client().prepareIndex("index","childType","1").setSource("name","Jill","age",5).setParent("1"));
  requests.add(client().prepareIndex("index","childType","2").setSource("name","Joey","age",3).setParent("1"));
  requests.add(client().prepareIndex("index","childType","3").setSource("name","John","age",2).setParent("2"));
  requests.add(client().prepareIndex("index","childType","4").setSource("name","Betty","age",6).setParent("3"));
  requests.add(client().prepareIndex("index","childType","5").setSource("name","Dan","age",1).setParent("3"));
  indexRandom(true,requests);
  SearchResponse response=client().prepareSearch("index").setSize(0).addAggregation(AggregationBuilders.terms("towns").field("town").subAggregation(AggregationBuilders.terms("parent_names").field("name").subAggregation(AggregationBuilders.children("child_docs","childType")))).get();
  Terms towns=response.getAggregations().get("towns");
  assertThat(towns.getBuckets().size(),equalTo(2));
  assertThat(towns.getBuckets().get(0).getKeyAsString(),equalTo("Chicago"));
  assertThat(towns.getBuckets().get(0).getDocCount(),equalTo(2L));
  Terms parents=towns.getBuckets().get(0).getAggregations().get("parent_names");
  assertThat(parents.getBuckets().size(),equalTo(2));
  assertThat(parents.getBuckets().get(0).getKeyAsString(),equalTo("Alice"));
  assertThat(parents.getBuckets().get(0).getDocCount(),equalTo(1L));
  Children children=parents.getBuckets().get(0).getAggregations().get("child_docs");
  assertThat(children.getDocCount(),equalTo(1L));
  assertThat(parents.getBuckets().get(1).getKeyAsString(),equalTo("Bill"));
  assertThat(parents.getBuckets().get(1).getDocCount(),equalTo(1L));
  children=parents.getBuckets().get(1).getAggregations().get("child_docs");
  assertThat(children.getDocCount(),equalTo(2L));
  assertThat(towns.getBuckets().get(1).getKeyAsString(),equalTo("Memphis"));
  assertThat(towns.getBuckets().get(1).getDocCount(),equalTo(1L));
  parents=towns.getBuckets().get(1).getAggregations().get("parent_names");
  assertThat(parents.getBuckets().size(),equalTo(1));
  assertThat(parents.getBuckets().get(0).getKeyAsString(),equalTo("Bob"));
  assertThat(parents.getBuckets().get(0).getDocCount(),equalTo(1L));
  children=parents.getBuckets().get(0).getAggregations().get("child_docs");
  assertThat(children.getDocCount(),equalTo(2L));
}
