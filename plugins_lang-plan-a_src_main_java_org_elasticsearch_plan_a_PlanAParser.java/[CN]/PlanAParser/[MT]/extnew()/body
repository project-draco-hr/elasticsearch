{
  ExtnewContext _localctx=new ExtnewContext(_ctx,getState());
  enterRule(_localctx,42,RULE_extnew);
  try {
    int _alt;
    enterOuterAlt(_localctx,1);
{
      setState(327);
      match(NEW);
      setState(328);
      match(TYPE);
      setState(345);
switch (_input.LA(1)) {
case LP:
{
{
            setState(329);
            arguments();
            setState(332);
switch (getInterpreter().adaptivePredict(_input,36,_ctx)) {
case 1:
{
                setState(330);
                extdot();
              }
            break;
case 2:
{
            setState(331);
            extbrace();
          }
        break;
    }
  }
}
break;
case LBRACE:
{
{
setState(338);
_errHandler.sync(this);
_alt=1;
do {
switch (_alt) {
case 1:
{
{
        setState(334);
        match(LBRACE);
        setState(335);
        expression(0);
        setState(336);
        match(RBRACE);
      }
    }
  break;
default :
throw new NoViableAltException(this);
}
setState(340);
_errHandler.sync(this);
_alt=getInterpreter().adaptivePredict(_input,37,_ctx);
}
 while (_alt != 2 && _alt != org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER);
setState(343);
switch (getInterpreter().adaptivePredict(_input,38,_ctx)) {
case 1:
{
setState(342);
extdot();
}
break;
}
}
}
break;
default :
throw new NoViableAltException(this);
}
}
}
 catch (RecognitionException re) {
_localctx.exception=re;
_errHandler.reportError(this,re);
_errHandler.recover(this,re);
}
 finally {
exitRule();
}
return _localctx;
}
