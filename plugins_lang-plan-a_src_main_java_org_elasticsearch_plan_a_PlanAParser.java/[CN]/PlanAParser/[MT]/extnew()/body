{
  ExtnewContext _localctx=new ExtnewContext(_ctx,getState());
  enterRule(_localctx,38,RULE_extnew);
  try {
    int _alt;
    enterOuterAlt(_localctx,1);
{
      setState(314);
      match(NEW);
      setState(315);
      match(TYPE);
      setState(332);
switch (_input.LA(1)) {
case LP:
{
{
            setState(316);
            arguments();
            setState(319);
switch (getInterpreter().adaptivePredict(_input,34,_ctx)) {
case 1:
{
                setState(317);
                extdot();
              }
            break;
case 2:
{
            setState(318);
            extbrace();
          }
        break;
    }
  }
}
break;
case LBRACE:
{
{
setState(325);
_errHandler.sync(this);
_alt=1;
do {
switch (_alt) {
case 1:
{
{
        setState(321);
        match(LBRACE);
        setState(322);
        expression(0);
        setState(323);
        match(RBRACE);
      }
    }
  break;
default :
throw new NoViableAltException(this);
}
setState(327);
_errHandler.sync(this);
_alt=getInterpreter().adaptivePredict(_input,35,_ctx);
}
 while (_alt != 2 && _alt != org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER);
setState(330);
switch (getInterpreter().adaptivePredict(_input,36,_ctx)) {
case 1:
{
setState(329);
extdot();
}
break;
}
}
}
break;
default :
throw new NoViableAltException(this);
}
}
}
 catch (RecognitionException re) {
_localctx.exception=re;
_errHandler.reportError(this,re);
_errHandler.recover(this,re);
}
 finally {
exitRule();
}
return _localctx;
}
