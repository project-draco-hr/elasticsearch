{
  createIndexAndSettings();
  createMapping(TYPE,ContextBuilder.location("st").precision("5km").neighbors(true));
  XContentBuilder source1=jsonBuilder().startObject().startObject(FIELD).array("input","Hotel Amsterdam","Amsterdam").field("output","Hotel Amsterdam in Berlin").startObject("context").latlon("st",52.529172,13.407333).endObject().endObject().endObject();
  client().prepareIndex(INDEX,TYPE,"1").setSource(source1).execute().actionGet();
  XContentBuilder source2=jsonBuilder().startObject().startObject(FIELD).array("input","Hotel Berlin","Berlin").field("output","Hotel Berlin in Amsterdam").startObject("context").latlon("st",52.363389,4.888695).endObject().endObject().endObject();
  client().prepareIndex(INDEX,TYPE,"2").setSource(source2).execute().actionGet();
  client().admin().indices().prepareRefresh(INDEX).get();
  String suggestionName=RandomStrings.randomAsciiOfLength(new Random(),10);
  CompletionSuggestionBuilder context=new CompletionSuggestionBuilder(suggestionName).field(FIELD).text("h").size(10).addGeoLocation("st",52.52,13.4);
  SuggestRequestBuilder suggestionRequest=client().prepareSuggest(INDEX).addSuggestion(context);
  SuggestResponse suggestResponse=suggestionRequest.execute().actionGet();
  assertEquals(suggestResponse.getSuggest().size(),1);
  assertEquals("Hotel Amsterdam in Berlin",suggestResponse.getSuggest().getSuggestion(suggestionName).iterator().next().getOptions().iterator().next().getText().string());
}
