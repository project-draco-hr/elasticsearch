{
  String[] types={TYPE + "A",TYPE + "B",TYPE + "C"};
  CreateIndexRequestBuilder createIndexRequestBuilder=prepareCreate(INDEX);
  for (  String type : types) {
    createIndexRequestBuilder.addMapping(type,createMapping(type,ContextBuilder.reference("st","_type")));
  }
  assertAcked(createIndexRequestBuilder);
  ensureYellow();
  for (int i=0; i < HEROS.length; i++) {
    String type=types[i % types.length];
    client().prepareIndex(INDEX,type,"" + i).setSource(jsonBuilder().startObject().startObject(FIELD).startArray("input").value(HEROS[i]).endArray().startObject("context").endObject().field("payload",type).endObject().endObject()).execute().actionGet();
  }
  refresh();
  assertFieldSuggestions(types[0],"a","Afari, Jamal","Adrian Corbo","Adrian");
  assertFieldSuggestions(types[0],"b","Beaubier, Jeanne-Marie");
  assertFieldSuggestions(types[0],"c","Corbo, Adrian","Crichton, Lady Jacqueline Falsworth");
  assertFieldSuggestions(types[0],"mary","Mary MacPherran \"Skeeter\"","Mary MacPherran");
  assertFieldSuggestions(types[0],"s","Skeeter","Smythe, Spencer","Spencer Smythe","Spencer");
  assertFieldSuggestions(types[1],"s","St. John","St. John Allerdyce");
  assertFieldSuggestions(types[2],"s","Smythe, Alistair");
  assertFieldSuggestions(types[1],"w","Whitemane, Aelfyre");
  assertFieldSuggestions(types[2],"w","Whitemane, Kofi");
}
