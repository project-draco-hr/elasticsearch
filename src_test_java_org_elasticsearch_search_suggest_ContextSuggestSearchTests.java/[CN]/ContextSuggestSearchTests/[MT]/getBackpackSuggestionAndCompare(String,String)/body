{
  Set<String> expected=Sets.newHashSet(expectedText);
  CompletionSuggestionBuilder context=SuggestBuilders.completionSuggestion("suggestion").field("suggest_field").text("back").size(10).addContextField("color",contextValue);
  SuggestRequestBuilder suggestionRequest=client().prepareSuggest(INDEX).addSuggestion(context);
  SuggestResponse suggestResponse=suggestionRequest.execute().actionGet();
  Suggest suggest=suggestResponse.getSuggest();
  assertEquals(suggest.size(),1);
  for (  Suggestion<? extends Entry<? extends Option>> s : suggest) {
    CompletionSuggestion suggestion=(CompletionSuggestion)s;
    for (    CompletionSuggestion.Entry entry : suggestion) {
      List<CompletionSuggestion.Entry.Option> options=entry.getOptions();
      assertEquals(options.size(),expectedText.length);
      for (      CompletionSuggestion.Entry.Option option : options) {
        assertTrue(expected.contains(option.getText().string()));
        expected.remove(option.getText().string());
      }
    }
  }
}
