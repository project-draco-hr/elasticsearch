{
  try {
    HostsSniffer.builder(null);
    fail("should have failed");
  }
 catch (  NullPointerException e) {
    assertEquals(e.getMessage(),"restClient cannot be null");
  }
  int numNodes=RandomInts.randomIntBetween(getRandom(),1,5);
  HttpHost[] hosts=new HttpHost[numNodes];
  for (int i=0; i < numNodes; i++) {
    hosts[i]=new HttpHost("localhost",9200 + i);
  }
  try (RestClient client=RestClient.builder(hosts).build()){
    try {
      HostsSniffer.builder(client).setScheme(null);
      fail("should have failed");
    }
 catch (    NullPointerException e) {
      assertEquals(e.getMessage(),"scheme cannot be null");
    }
    try {
      HostsSniffer.builder(client).setSniffRequestTimeoutMillis(RandomInts.randomIntBetween(getRandom(),Integer.MIN_VALUE,0));
      fail("should have failed");
    }
 catch (    IllegalArgumentException e) {
      assertEquals(e.getMessage(),"sniffRequestTimeoutMillis must be greater than 0");
    }
    HostsSniffer.Builder builder=HostsSniffer.builder(client);
    if (getRandom().nextBoolean()) {
      builder.setScheme(RandomPicks.randomFrom(getRandom(),HostsSniffer.Scheme.values()));
    }
    if (getRandom().nextBoolean()) {
      builder.setSniffRequestTimeoutMillis(RandomInts.randomIntBetween(getRandom(),1,Integer.MAX_VALUE));
    }
    assertNotNull(builder.build());
  }
 }
