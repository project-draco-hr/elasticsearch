{
  super(settings);
  this.clusterName=clusterName;
  this.clusterService=clusterService;
  this.threadPool=threadPool;
  String config=componentSettings.get("config","udp");
  String actualConfig=config;
  if (!config.endsWith(".xml")) {
    actualConfig="jgroups/" + config + ".xml";
  }
  URL configUrl=environment.resolveConfig(actualConfig);
  logger.debug("Using configuration [{}]",configUrl);
  Map<String,String> sysPropsSet=newHashMap();
  try {
    for (    Map.Entry<String,String> entry : settings.getAsMap().entrySet()) {
      if (entry.getKey().startsWith("discovery.jgroups")) {
        String jgroupsKey=entry.getKey().substring("discovery.".length());
        if (System.getProperty(jgroupsKey) == null) {
          sysPropsSet.put(jgroupsKey,entry.getValue());
          System.setProperty(jgroupsKey,entry.getValue());
        }
      }
    }
    if (System.getProperty("jgroups.bind_addr") == null) {
      try {
        InetAddress bindAddress=HostResolver.resultBindHostAddress(null,settings,HostResolver.LOCAL_IP);
        if ((bindAddress instanceof Inet4Address && HostResolver.isIPv4()) || (bindAddress instanceof Inet6Address && !HostResolver.isIPv4())) {
          sysPropsSet.put("jgroups.bind_addr",bindAddress.getHostAddress());
          System.setProperty("jgroups.bind_addr",bindAddress.getHostAddress());
        }
      }
 catch (      IOException e) {
      }
    }
    channel=new JChannel(configUrl);
  }
 catch (  ChannelException e) {
    throw new DiscoveryException("Failed to create jgroups channel with config [" + configUrl + "]",e);
  }
 finally {
    for (    String keyToRemove : sysPropsSet.keySet()) {
      System.getProperties().remove(keyToRemove);
    }
  }
}
