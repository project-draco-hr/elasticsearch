{
  Settings clusterSettings=ImmutableSettings.builder().put(DestructiveOperations.REQUIRES_NAME,true).build();
  assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(clusterSettings));
  createIndex("test1","test2","test3");
  ClusterHealthResponse healthResponse=client().admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  assertThat(healthResponse.isTimedOut(),equalTo(false));
  try {
    client().admin().indices().prepareClose("_all").execute().actionGet();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  try {
    client().admin().indices().prepareClose("*").execute().actionGet();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  try {
    client().admin().indices().prepareClose("test*").execute().actionGet();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  try {
    client().admin().indices().prepareClose("*","-test1").execute().actionGet();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  try {
    client().admin().indices().prepareClose("*","-test1","+test1").execute().actionGet();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException e) {
  }
  CloseIndexResponse closeIndexResponse=client().admin().indices().prepareClose("test3","test2").execute().actionGet();
  assertThat(closeIndexResponse.isAcknowledged(),equalTo(true));
  assertIndexIsClosed("test2","test3");
}
