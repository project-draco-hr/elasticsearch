{
  try {
    prepareCreate("test").setSettings(ImmutableSettings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS.substring(IndexMetaData.INDEX_SETTING_PREFIX.length()),randomIntBetween(-10,0)).build()).get();
    fail("should have thrown an exception about the shard count");
  }
 catch (  ElasticsearchIllegalArgumentException e) {
    assertThat("message contains error about shard count: " + e.getMessage(),e.getMessage().contains("index must have 1 or more primary shards"),equalTo(true));
  }
  try {
    prepareCreate("test").setSettings(ImmutableSettings.builder().put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS.substring(IndexMetaData.INDEX_SETTING_PREFIX.length()),randomIntBetween(-10,-1)).build()).get();
    fail("should have thrown an exception about the shard count");
  }
 catch (  ElasticsearchIllegalArgumentException e) {
    assertThat("message contains error about shard count: " + e.getMessage(),e.getMessage().contains("index must have 0 or more replica shards"),equalTo(true));
  }
  try {
    prepareCreate("test").setSettings(ImmutableSettings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS.substring(IndexMetaData.INDEX_SETTING_PREFIX.length()),randomIntBetween(-10,0)).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS.substring(IndexMetaData.INDEX_SETTING_PREFIX.length()),randomIntBetween(-10,-1)).build()).get();
    fail("should have thrown an exception about the shard count");
  }
 catch (  ElasticsearchIllegalArgumentException e) {
    assertThat("message contains error about shard count: " + e.getMessage(),e.getMessage().contains("index must have 1 or more primary shards"),equalTo(true));
    assertThat("message contains error about shard count: " + e.getMessage(),e.getMessage().contains("index must have 0 or more replica shards"),equalTo(true));
  }
}
