{
  if (!config.valid()) {
    throw new IllegalStateException("value source config is invalid; must have either a field context or a script or marked as unwrapped");
  }
  final VS vs;
  if (config.unmapped()) {
    if (config.missing() == null) {
      vs=null;
    }
 else     if (config.valueSourceType() == ValuesSourceType.NUMERIC) {
      vs=(VS)ValuesSource.Numeric.EMPTY;
    }
 else     if (config.valueSourceType() == ValuesSourceType.GEOPOINT) {
      vs=(VS)ValuesSource.GeoPoint.EMPTY;
    }
 else     if (config.valueSourceType() == ValuesSourceType.ANY || config.valueSourceType() == ValuesSourceType.BYTES) {
      vs=(VS)ValuesSource.Bytes.EMPTY;
    }
 else {
      throw new SearchParseException(searchContext,"Can't deal with unmapped ValuesSource type " + config.valueSourceType(),null);
    }
  }
 else {
    vs=originalValuesSource(config);
  }
  if (config.missing() == null) {
    return vs;
  }
  if (vs instanceof ValuesSource.Bytes) {
    final BytesRef missing=new BytesRef(config.missing().toString());
    if (vs instanceof ValuesSource.Bytes.WithOrdinals) {
      return (VS)MissingValues.replaceMissing((ValuesSource.Bytes.WithOrdinals)vs,missing);
    }
 else {
      return (VS)MissingValues.replaceMissing((ValuesSource.Bytes)vs,missing);
    }
  }
 else   if (vs instanceof ValuesSource.Numeric) {
    Number missing=null;
    if (config.missing() instanceof Number) {
      missing=(Number)config.missing();
    }
 else {
      if (config.fieldContext() != null && config.fieldContext().fieldType() != null) {
        missing=config.fieldContext().fieldType().docValueFormat(null,DateTimeZone.UTC).parseDouble(config.missing().toString(),false,context.nowCallable());
      }
 else {
        missing=Double.parseDouble(config.missing().toString());
      }
    }
    return (VS)MissingValues.replaceMissing((ValuesSource.Numeric)vs,missing);
  }
 else   if (vs instanceof ValuesSource.GeoPoint) {
    final GeoPoint missing=GeoUtils.parseGeoPoint(config.missing().toString(),new GeoPoint());
    return (VS)MissingValues.replaceMissing((ValuesSource.GeoPoint)vs,missing);
  }
 else {
    throw new SearchParseException(searchContext,"Can't apply missing values on a " + vs.getClass(),null);
  }
}
