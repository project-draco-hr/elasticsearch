{
  String mappingWithoutTtl=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").field("field").startObject().field("type","string").endObject().endObject().endObject().endObject().string();
  String mappingWithTtl=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_ttl").field("enabled","yes").field("store","no").field("index","no").endObject().startObject("properties").field("field").startObject().field("type","string").endObject().endObject().endObject().endObject().string();
  DocumentMapper mapperWithoutTtl=MapperTests.newParser().parse(mappingWithoutTtl);
  DocumentMapper mapperWithTtl=MapperTests.newParser().parse(mappingWithTtl);
  DocumentMapper.MergeFlags mergeFlags=DocumentMapper.MergeFlags.mergeFlags().simulate(false);
  DocumentMapper.MergeResult mergeResult=mapperWithoutTtl.merge(mapperWithTtl,mergeFlags);
  assertThat(mergeResult.hasConflicts(),equalTo(false));
  assertThat(mapperWithoutTtl.TTLFieldMapper().enabled(),equalTo(true));
}
