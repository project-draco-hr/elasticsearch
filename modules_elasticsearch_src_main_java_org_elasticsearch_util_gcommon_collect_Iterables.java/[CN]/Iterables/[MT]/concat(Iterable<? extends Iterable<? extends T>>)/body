{
  Function<Iterable<? extends T>,Iterator<? extends T>> function=new Function<Iterable<? extends T>,Iterator<? extends T>>(){
    public Iterator<? extends T> apply(    Iterable<? extends T> from){
      return from.iterator();
    }
  }
;
  final Iterable<Iterator<? extends T>> iterators=transform(inputs,function);
  return new IterableWithToString<T>(){
    public Iterator<T> iterator(){
      return Iterators.concat(iterators.iterator());
    }
  }
;
}
