{
synchronized (dirtyLock(create.uid())) {
    UidField uidField=create.uidField();
    if (create.origin() == Operation.Origin.RECOVERY) {
      uidField.version(create.version());
      if (create.docs().size() > 1) {
        writer.updateDocuments(create.uid(),create.docs(),create.analyzer());
      }
 else {
        writer.updateDocument(create.uid(),create.docs().get(0),create.analyzer());
      }
      Translog.Location translogLocation=translog.add(new Translog.Create(create));
      if (create.version() != 0) {
        versionMap.put(create.uid().text(),new VersionValue(create.version(),false,threadPool.estimatedTimeInMillis(),translogLocation));
      }
    }
 else {
      long currentVersion;
      VersionValue versionValue=versionMap.get(create.uid().text());
      if (versionValue == null) {
        currentVersion=loadCurrentVersionFromIndex(create.uid());
      }
 else {
        if (enableGcDeletes && versionValue.delete() && (threadPool.estimatedTimeInMillis() - versionValue.time()) > gcDeletesInMillis) {
          currentVersion=-1;
        }
 else {
          currentVersion=versionValue.version();
        }
      }
      long updatedVersion;
      if (create.origin() == Operation.Origin.PRIMARY) {
        if (create.versionType() == VersionType.INTERNAL) {
          long expectedVersion=create.version();
          if (expectedVersion != 0 && currentVersion != -2) {
            if (currentVersion == -1) {
              throw new VersionConflictEngineException(shardId,create.type(),create.id(),-1,expectedVersion);
            }
 else             if (expectedVersion != currentVersion) {
              throw new VersionConflictEngineException(shardId,create.type(),create.id(),currentVersion,expectedVersion);
            }
          }
          updatedVersion=currentVersion < 0 ? 1 : currentVersion + 1;
        }
 else {
          if (currentVersion >= 0) {
            if (currentVersion >= create.version()) {
              throw new VersionConflictEngineException(shardId,create.type(),create.id(),currentVersion,create.version());
            }
          }
          updatedVersion=create.version();
        }
      }
 else {
        long expectedVersion=create.version();
        if (currentVersion != -2) {
          if (!(currentVersion == -1 && create.version() == 1)) {
            if (expectedVersion <= currentVersion) {
              throw new VersionConflictEngineException(shardId,create.type(),create.id(),currentVersion,expectedVersion);
            }
          }
        }
        updatedVersion=create.version();
      }
      if (versionValue != null) {
        if (!versionValue.delete()) {
          throw new DocumentAlreadyExistsEngineException(shardId,create.type(),create.id());
        }
      }
 else       if (currentVersion != -1) {
        throw new DocumentAlreadyExistsEngineException(shardId,create.type(),create.id());
      }
      uidField.version(updatedVersion);
      create.version(updatedVersion);
      if (create.docs().size() > 1) {
        writer.addDocuments(create.docs(),create.analyzer());
      }
 else {
        writer.addDocument(create.docs().get(0),create.analyzer());
      }
      Translog.Location translogLocation=translog.add(new Translog.Create(create));
      versionMap.put(create.uid().text(),new VersionValue(updatedVersion,false,threadPool.estimatedTimeInMillis(),translogLocation));
    }
  }
}
