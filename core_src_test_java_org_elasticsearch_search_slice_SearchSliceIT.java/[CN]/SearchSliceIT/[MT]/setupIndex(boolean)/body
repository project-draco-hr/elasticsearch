{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("invalid_random_kw").field("type","keyword").field("doc_values","false").endObject().startObject("random_int").field("type","integer").field("doc_values","true").endObject().startObject("invalid_random_int").field("type","integer").field("doc_values","false").endObject().endObject().endObject().endObject().string();
  int numberOfShards=randomIntBetween(1,7);
  assertAcked(client().admin().indices().prepareCreate("test").setSettings("number_of_shards",numberOfShards).addMapping("type",mapping));
  ensureGreen();
  if (withDocs == false) {
    return numberOfShards;
  }
  List<IndexRequestBuilder> requests=new ArrayList<>();
  for (int i=0; i < NUM_DOCS; i++) {
    XContentBuilder builder=jsonBuilder();
    builder.startObject();
    builder.field("invalid_random_kw",randomAsciiOfLengthBetween(5,20));
    builder.field("random_int",randomInt());
    builder.field("static_int",0);
    builder.field("invalid_random_int",randomInt());
    builder.endObject();
    requests.add(client().prepareIndex("test","test").setSource(builder));
  }
  indexRandom(true,requests);
  return numberOfShards;
}
