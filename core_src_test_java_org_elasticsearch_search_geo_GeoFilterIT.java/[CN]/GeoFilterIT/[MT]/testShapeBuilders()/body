{
  try {
    ShapeBuilders.newPolygon(new CoordinatesBuilder().coordinate(-10,-10).coordinate(10,10).coordinate(-10,10).coordinate(10,-10).close()).build();
    fail("Self intersection not detected");
  }
 catch (  InvalidShapeException e) {
  }
  ShapeBuilders.newPolygon(new CoordinatesBuilder().coordinate(-10,-10).coordinate(-10,10).coordinate(10,10).coordinate(10,-10).close()).hole(new LineStringBuilder(new CoordinatesBuilder().coordinate(-5,-5).coordinate(-5,5).coordinate(5,5).coordinate(5,-5).close())).build();
  try {
    ShapeBuilders.newPolygon(new CoordinatesBuilder().coordinate(-10,-10).coordinate(-10,10).coordinate(10,10).coordinate(10,-10).close()).hole(new LineStringBuilder(new CoordinatesBuilder().coordinate(-5,-5).coordinate(-5,11).coordinate(5,11).coordinate(5,-5).close())).build();
    fail("Self intersection not detected");
  }
 catch (  InvalidShapeException e) {
  }
  try {
    ShapeBuilders.newPolygon(new CoordinatesBuilder().coordinate(-10,-10).coordinate(-10,10).coordinate(10,10).coordinate(10,-10).close()).hole(new LineStringBuilder(new CoordinatesBuilder().coordinate(-5,-5).coordinate(-5,5).coordinate(5,5).coordinate(5,-5).close())).hole(new LineStringBuilder(new CoordinatesBuilder().coordinate(-5,-6).coordinate(5,-6).coordinate(5,-4).coordinate(-5,-4).close())).build();
    fail("Intersection of holes not detected");
  }
 catch (  InvalidShapeException e) {
  }
  try {
    ShapeBuilders.newPolygon(new CoordinatesBuilder().coordinate(-10,-10).coordinate(-10,10).coordinate(-5,10).coordinate(-5,-5).coordinate(-5,20).coordinate(10,20).coordinate(10,-10).close()).build();
    fail("Self intersection not detected");
  }
 catch (  InvalidShapeException e) {
  }
  ShapeBuilders.newMultiPolygon().polygon(new PolygonBuilder(new CoordinatesBuilder().coordinate(-10,-10).coordinate(-10,10).coordinate(10,10).coordinate(10,-10).close()).hole(new LineStringBuilder(new CoordinatesBuilder().coordinate(-5,-5).coordinate(-5,5).coordinate(5,5).coordinate(5,-5).close()))).polygon(new PolygonBuilder(new CoordinatesBuilder().coordinate(-4,-4).coordinate(-4,4).coordinate(4,4).coordinate(4,-4).close())).build();
}
