{
  assertThat(XGeoHashUtils.addNeighbors("7",new ArrayList<String>()),containsInAnyOrder("4","5","6","d","e","h","k","s"));
  assertThat(XGeoHashUtils.addNeighbors("0",new ArrayList<String>()),containsInAnyOrder("1","2","3","p","r"));
  assertThat(XGeoHashUtils.addNeighbors("b",new ArrayList<String>()),containsInAnyOrder("8","9","c","x","z"));
  assertThat(XGeoHashUtils.addNeighbors("p",new ArrayList<String>()),containsInAnyOrder("n","q","r","0","2"));
  assertThat(XGeoHashUtils.addNeighbors("z",new ArrayList<String>()),containsInAnyOrder("8","b","w","x","y"));
  assertThat(XGeoHashUtils.addNeighbors("2",new ArrayList<String>()),containsInAnyOrder("0","1","3","8","9","p","r","x"));
  assertThat(XGeoHashUtils.addNeighbors("r",new ArrayList<String>()),containsInAnyOrder("0","2","8","n","p","q","w","x"));
  assertThat(XGeoHashUtils.addNeighbors("dk",new ArrayList<String>()),containsInAnyOrder("d5","d7","de","dh","dj","dm","ds","dt"));
  assertThat(XGeoHashUtils.addNeighbors("d5",new ArrayList<String>()),containsInAnyOrder("d4","d6","d7","dh","dk","9f","9g","9u"));
  assertThat(XGeoHashUtils.addNeighbors("d0",new ArrayList<String>()),containsInAnyOrder("d1","d2","d3","9b","9c","6p","6r","3z"));
}
