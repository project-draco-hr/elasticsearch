{
  StopWatch stopWatch=new StopWatch().start();
  System.out.println("Running " + NUMBER_OF_ITERATIONS);
  for (long i=0; i < NUMBER_OF_ITERATIONS; i++) {
    System.currentTimeMillis();
  }
  System.out.println("Took " + stopWatch.stop().totalTime() + " TP Millis "+ (stopWatch.totalTime().millisFrac() / NUMBER_OF_ITERATIONS));
  System.out.println("Running using " + NUMBER_OF_THREADS + " threads with "+ NUMBER_OF_ITERATIONS+ " iterations");
  final CountDownLatch latch=new CountDownLatch(NUMBER_OF_THREADS);
  Thread[] threads=new Thread[NUMBER_OF_THREADS];
  for (int i=0; i < threads.length; i++) {
    threads[i]=new Thread(new Runnable(){
      @Override public void run(){
        for (long i=0; i < NUMBER_OF_ITERATIONS; i++) {
          System.currentTimeMillis();
        }
        latch.countDown();
      }
    }
);
  }
  stopWatch=new StopWatch().start();
  for (  Thread thread : threads) {
    thread.start();
  }
  latch.await();
  stopWatch.stop();
  System.out.println("Took " + stopWatch.totalTime() + " TP Millis "+ (stopWatch.totalTime().millisFrac() / (NUMBER_OF_ITERATIONS * NUMBER_OF_THREADS)));
}
