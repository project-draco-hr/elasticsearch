{
  List<String> nodesIds=internalCluster().startNodesAsync(Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(),3).build(),Settings.builder().put(EsExecutors.PROCESSORS_SETTING.getKey(),6).build()).get();
  final String node_1=nodesIds.get(0);
  final String node_2=nodesIds.get(1);
  ClusterHealthResponse clusterHealth=client().admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForNodes("2").get();
  logger.info("--> done cluster_health, status {}",clusterHealth.getStatus());
  String server1NodeId=internalCluster().getInstance(ClusterService.class,node_1).state().nodes().getLocalNodeId();
  String server2NodeId=internalCluster().getInstance(ClusterService.class,node_2).state().nodes().getLocalNodeId();
  logger.info("--> started nodes: {} and {}",server1NodeId,server2NodeId);
  NodesInfoResponse response=client().admin().cluster().prepareNodesInfo().execute().actionGet();
  assertThat(response.getNodes().length,is(2));
  assertThat(response.getNodesMap().get(server1NodeId),notNullValue());
  assertThat(response.getNodesMap().get(server2NodeId),notNullValue());
  assertThat(response.getNodesMap().get(server1NodeId).getOs().getAvailableProcessors(),equalTo(Runtime.getRuntime().availableProcessors()));
  assertThat(response.getNodesMap().get(server2NodeId).getOs().getAvailableProcessors(),equalTo(Runtime.getRuntime().availableProcessors()));
  assertThat(response.getNodesMap().get(server1NodeId).getOs().getAllocatedProcessors(),equalTo(3));
  assertThat(response.getNodesMap().get(server2NodeId).getOs().getAllocatedProcessors(),equalTo(6));
}
