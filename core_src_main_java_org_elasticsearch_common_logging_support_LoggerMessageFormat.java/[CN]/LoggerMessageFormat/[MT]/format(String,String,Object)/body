{
  if (messagePattern == null) {
    return null;
  }
  if (argArray == null) {
    if (prefix == null) {
      return messagePattern;
    }
 else {
      return prefix + messagePattern;
    }
  }
  int i=0;
  int j;
  final StringBuilder sbuf=new StringBuilder(messagePattern.length() + 50);
  if (prefix != null) {
    sbuf.append(prefix);
  }
  for (int L=0; L < argArray.length; L++) {
    j=messagePattern.indexOf(DELIM_STR,i);
    if (j == -1) {
      if (i == 0) {
        return messagePattern;
      }
 else {
        sbuf.append(messagePattern.substring(i,messagePattern.length()));
        return sbuf.toString();
      }
    }
 else {
      if (isEscapedDelimiter(messagePattern,j)) {
        if (!isDoubleEscaped(messagePattern,j)) {
          L--;
          sbuf.append(messagePattern.substring(i,j - 1));
          sbuf.append(DELIM_START);
          i=j + 1;
        }
 else {
          sbuf.append(messagePattern.substring(i,j - 1));
          deeplyAppendParameter(sbuf,argArray[L],new HashMap());
          i=j + 2;
        }
      }
 else {
        sbuf.append(messagePattern.substring(i,j));
        deeplyAppendParameter(sbuf,argArray[L],new HashMap());
        i=j + 2;
      }
    }
  }
  sbuf.append(messagePattern.substring(i,messagePattern.length()));
  return sbuf.toString();
}
