{
  settingName=Objects.requireNonNull(settingName);
  if (sValue == null) {
    return defaultValue;
  }
  try {
    long millis;
    if (sValue.endsWith("S")) {
      millis=Long.parseLong(sValue.substring(0,sValue.length() - 1));
    }
 else     if (sValue.endsWith("ms")) {
      millis=(long)(Double.parseDouble(sValue.substring(0,sValue.length() - 2)));
    }
 else     if (sValue.endsWith("s")) {
      millis=(long)(Double.parseDouble(sValue.substring(0,sValue.length() - 1)) * 1000);
    }
 else     if (sValue.endsWith("m")) {
      millis=(long)(Double.parseDouble(sValue.substring(0,sValue.length() - 1)) * 60 * 1000);
    }
 else     if (sValue.endsWith("H") || sValue.endsWith("h")) {
      millis=(long)(Double.parseDouble(sValue.substring(0,sValue.length() - 1)) * 60 * 60* 1000);
    }
 else     if (sValue.endsWith("d")) {
      millis=(long)(Double.parseDouble(sValue.substring(0,sValue.length() - 1)) * 24 * 60* 60* 1000);
    }
 else     if (sValue.endsWith("w")) {
      millis=(long)(Double.parseDouble(sValue.substring(0,sValue.length() - 1)) * 7 * 24* 60* 60* 1000);
    }
 else     if (sValue.equals("-1")) {
      millis=-1;
    }
 else     if (sValue.equals("0")) {
      millis=0;
    }
 else {
      System.out.println("MKM: Failed to parse setting [" + settingName + "] with value ["+ sValue+ "] as a time value: unit is missing or unrecognized");
      throw new ElasticsearchParseException("Failed to parse setting [" + settingName + "] with value ["+ sValue+ "] as a time value: unit is missing or unrecognized");
    }
    return new TimeValue(millis,TimeUnit.MILLISECONDS);
  }
 catch (  NumberFormatException e) {
    throw new ElasticsearchParseException("Failed to parse [" + sValue + "]",e);
  }
}
