{
  int filesRecovered=recoveredFileCount.get();
  long bytesRecovered=recoveredByteCount.get();
  builder.startObject(Fields.FILES);
  builder.field(Fields.TOTAL,totalFileCount);
  builder.field(Fields.REUSED,reusedFileCount);
  builder.field(Fields.RECOVERED,filesRecovered);
  builder.field(Fields.PERCENT,String.format(Locale.ROOT,"%1.1f%%",percentFilesRecovered()));
  if (detailed) {
    builder.startArray(Fields.DETAILS);
    for (    File file : fileDetails) {
      file.toXContent(builder,params);
    }
    for (    File file : reusedFileDetails) {
      file.toXContent(builder,params);
    }
    builder.endArray();
  }
  builder.endObject();
  builder.startObject(Fields.BYTES);
  builder.field(Fields.TOTAL,totalByteCount);
  builder.field(Fields.REUSED,reusedByteCount);
  builder.field(Fields.RECOVERED,bytesRecovered);
  builder.field(Fields.PERCENT,String.format(Locale.ROOT,"%1.1f%%",percentBytesRecovered()));
  builder.endObject();
  builder.timeValueField(Fields.TOTAL_TIME_IN_MILLIS,Fields.TOTAL_TIME,time);
  return builder;
}
