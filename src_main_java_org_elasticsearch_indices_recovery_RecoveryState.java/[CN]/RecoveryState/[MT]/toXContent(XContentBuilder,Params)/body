{
  builder.field(Fields.ID,shardId.id());
  builder.field(Fields.TYPE,type.toString());
  builder.field(Fields.STAGE,stage.toString());
  builder.field(Fields.PRIMARY,primary);
  builder.dateValueField(Fields.START_TIME_IN_MILLIS,Fields.START_TIME,timer.startTime);
  if (timer.stopTime > 0) {
    builder.dateValueField(Fields.STOP_TIME_IN_MILLIS,Fields.STOP_TIME,timer.stopTime);
  }
  builder.timeValueField(Fields.TOTAL_TIME_IN_MILLIS,Fields.TOTAL_TIME,timer.time());
  if (restoreSource != null) {
    builder.field(Fields.SOURCE);
    restoreSource.toXContent(builder,params);
  }
 else {
    builder.startObject(Fields.SOURCE);
    builder.field(Fields.ID,sourceNode.id());
    builder.field(Fields.HOST,sourceNode.getHostName());
    builder.field(Fields.TRANSPORT_ADDRESS,sourceNode.address().toString());
    builder.field(Fields.IP,sourceNode.getHostAddress());
    builder.field(Fields.NAME,sourceNode.name());
    builder.endObject();
  }
  builder.startObject(Fields.TARGET);
  builder.field(Fields.ID,targetNode.id());
  builder.field(Fields.HOST,targetNode.getHostName());
  builder.field(Fields.TRANSPORT_ADDRESS,targetNode.address().toString());
  builder.field(Fields.IP,targetNode.getHostAddress());
  builder.field(Fields.NAME,targetNode.name());
  builder.endObject();
  builder.startObject(Fields.INDEX);
  index.toXContent(builder,params);
  builder.endObject();
  builder.startObject(Fields.TRANSLOG);
  translog.toXContent(builder,params);
  builder.endObject();
  builder.startObject(Fields.VERIFY_INDEX);
  verifyIndex.toXContent(builder,params);
  builder.endObject();
  return builder;
}
