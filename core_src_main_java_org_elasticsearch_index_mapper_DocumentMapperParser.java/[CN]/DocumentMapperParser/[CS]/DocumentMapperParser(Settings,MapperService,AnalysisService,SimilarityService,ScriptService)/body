{
  this.indexSettings=indexSettings;
  this.parseFieldMatcher=new ParseFieldMatcher(indexSettings);
  this.mapperService=mapperService;
  this.analysisService=analysisService;
  this.similarityService=similarityService;
  this.scriptService=scriptService;
  Map<String,Mapper.TypeParser> typeParsers=new HashMap<>();
  typeParsers.put(ByteFieldMapper.CONTENT_TYPE,new ByteFieldMapper.TypeParser());
  typeParsers.put(ShortFieldMapper.CONTENT_TYPE,new ShortFieldMapper.TypeParser());
  typeParsers.put(IntegerFieldMapper.CONTENT_TYPE,new IntegerFieldMapper.TypeParser());
  typeParsers.put(LongFieldMapper.CONTENT_TYPE,new LongFieldMapper.TypeParser());
  typeParsers.put(FloatFieldMapper.CONTENT_TYPE,new FloatFieldMapper.TypeParser());
  typeParsers.put(DoubleFieldMapper.CONTENT_TYPE,new DoubleFieldMapper.TypeParser());
  typeParsers.put(BooleanFieldMapper.CONTENT_TYPE,new BooleanFieldMapper.TypeParser());
  typeParsers.put(BinaryFieldMapper.CONTENT_TYPE,new BinaryFieldMapper.TypeParser());
  typeParsers.put(DateFieldMapper.CONTENT_TYPE,new DateFieldMapper.TypeParser());
  typeParsers.put(IpFieldMapper.CONTENT_TYPE,new IpFieldMapper.TypeParser());
  typeParsers.put(StringFieldMapper.CONTENT_TYPE,new StringFieldMapper.TypeParser());
  typeParsers.put(TokenCountFieldMapper.CONTENT_TYPE,new TokenCountFieldMapper.TypeParser());
  typeParsers.put(ObjectMapper.CONTENT_TYPE,new ObjectMapper.TypeParser());
  typeParsers.put(ObjectMapper.NESTED_CONTENT_TYPE,new ObjectMapper.TypeParser());
  typeParsers.put(TypeParsers.MULTI_FIELD_CONTENT_TYPE,TypeParsers.multiFieldConverterTypeParser);
  typeParsers.put(CompletionFieldMapper.CONTENT_TYPE,new CompletionFieldMapper.TypeParser());
  typeParsers.put(GeoPointFieldMapper.CONTENT_TYPE,new GeoPointFieldMapper.TypeParser());
  if (ShapesAvailability.JTS_AVAILABLE) {
    typeParsers.put(GeoShapeFieldMapper.CONTENT_TYPE,new GeoShapeFieldMapper.TypeParser());
  }
  this.typeParsers=unmodifiableMap(typeParsers);
  Map<String,Mapper.TypeParser> rootTypeParsers=new HashMap<>();
  rootTypeParsers.put(IndexFieldMapper.NAME,new IndexFieldMapper.TypeParser());
  rootTypeParsers.put(SourceFieldMapper.NAME,new SourceFieldMapper.TypeParser());
  rootTypeParsers.put(TypeFieldMapper.NAME,new TypeFieldMapper.TypeParser());
  rootTypeParsers.put(AllFieldMapper.NAME,new AllFieldMapper.TypeParser());
  rootTypeParsers.put(ParentFieldMapper.NAME,new ParentFieldMapper.TypeParser());
  rootTypeParsers.put(RoutingFieldMapper.NAME,new RoutingFieldMapper.TypeParser());
  rootTypeParsers.put(TimestampFieldMapper.NAME,new TimestampFieldMapper.TypeParser());
  rootTypeParsers.put(TTLFieldMapper.NAME,new TTLFieldMapper.TypeParser());
  rootTypeParsers.put(UidFieldMapper.NAME,new UidFieldMapper.TypeParser());
  rootTypeParsers.put(VersionFieldMapper.NAME,new VersionFieldMapper.TypeParser());
  rootTypeParsers.put(IdFieldMapper.NAME,new IdFieldMapper.TypeParser());
  rootTypeParsers.put(FieldNamesFieldMapper.NAME,new FieldNamesFieldMapper.TypeParser());
  this.rootTypeParsers=unmodifiableMap(rootTypeParsers);
  additionalRootMappers=Collections.emptySortedMap();
  indexVersionCreated=Version.indexCreated(indexSettings);
}
