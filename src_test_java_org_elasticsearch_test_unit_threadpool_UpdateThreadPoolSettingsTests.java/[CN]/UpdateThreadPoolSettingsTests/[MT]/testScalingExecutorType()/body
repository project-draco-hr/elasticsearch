{
  ThreadPool threadPool=new ThreadPool(settingsBuilder().put("threadpool.search.type","scaling").put("threadpool.search.size",10).build(),null);
  assertThat(info(threadPool,Names.SEARCH).min(),equalTo(1));
  assertThat(info(threadPool,Names.SEARCH).max(),equalTo(10));
  assertThat(info(threadPool,Names.SEARCH).keepAlive().minutes(),equalTo(5L));
  assertThat(info(threadPool,Names.SEARCH).type(),equalTo("scaling"));
  assertThat(threadPool.executor(Names.SEARCH),instanceOf(EsThreadPoolExecutor.class));
  Executor oldExecutor=threadPool.executor(Names.SEARCH);
  threadPool.updateSettings(settingsBuilder().put("threadpool.search.type","scaling").put("threadpool.search.keep_alive","10m").put("threadpool.search.min","2").put("threadpool.search.size","15").build());
  assertThat(info(threadPool,Names.SEARCH).type(),equalTo("scaling"));
  assertThat(threadPool.executor(Names.SEARCH),instanceOf(EsThreadPoolExecutor.class));
  assertThat(((EsThreadPoolExecutor)threadPool.executor(Names.SEARCH)).getCorePoolSize(),equalTo(2));
  assertThat(((EsThreadPoolExecutor)threadPool.executor(Names.SEARCH)).getMaximumPoolSize(),equalTo(15));
  assertThat(info(threadPool,Names.SEARCH).min(),equalTo(2));
  assertThat(info(threadPool,Names.SEARCH).max(),equalTo(15));
  assertThat(info(threadPool,Names.SEARCH).keepAlive().minutes(),equalTo(10L));
  assertThat(((EsThreadPoolExecutor)threadPool.executor(Names.SEARCH)).getKeepAliveTime(TimeUnit.MINUTES),equalTo(10L));
  assertThat(threadPool.executor(Names.SEARCH),sameInstance(oldExecutor));
  threadPool.shutdown();
}
