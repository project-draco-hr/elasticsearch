{
  ThreadPool threadPool=new ThreadPool(settingsBuilder().put("threadpool.search.type","blocking").put("threadpool.search.size","10").build(),null);
  assertThat(info(threadPool,Names.SEARCH).min(),equalTo(1));
  assertThat(info(threadPool,Names.SEARCH).max(),equalTo(10));
  assertThat(info(threadPool,Names.SEARCH).capacity().singles(),equalTo(1000L));
  assertThat(info(threadPool,Names.SEARCH).waitTime().minutes(),equalTo(1L));
  assertThat(threadPool.executor(Names.SEARCH),instanceOf(EsThreadPoolExecutor.class));
  threadPool.updateSettings(settingsBuilder().put("threadpool.search.type","scaling").put("threadpool.search.keep_alive","10m").put("threadpool.search.min","2").put("threadpool.search.size","15").build());
  assertThat(info(threadPool,Names.SEARCH).type(),equalTo("scaling"));
  assertThat(threadPool.executor(Names.SEARCH),instanceOf(EsThreadPoolExecutor.class));
  assertThat(((EsThreadPoolExecutor)threadPool.executor(Names.SEARCH)).getCorePoolSize(),equalTo(2));
  assertThat(((EsThreadPoolExecutor)threadPool.executor(Names.SEARCH)).getMaximumPoolSize(),equalTo(15));
  assertThat(info(threadPool,Names.SEARCH).min(),equalTo(2));
  assertThat(info(threadPool,Names.SEARCH).max(),equalTo(15));
  assertThat(info(threadPool,Names.SEARCH).keepAlive().minutes(),equalTo(10L));
  assertThat(((EsThreadPoolExecutor)threadPool.executor(Names.SEARCH)).getKeepAliveTime(TimeUnit.MINUTES),equalTo(10L));
  threadPool.updateSettings(settingsBuilder().put("threadpool.search.type","blocking").build());
  assertThat(info(threadPool,Names.SEARCH).type(),equalTo("blocking"));
  assertThat(info(threadPool,Names.SEARCH).keepAlive().minutes(),equalTo(10L));
  assertThat(info(threadPool,Names.SEARCH).min(),equalTo(2));
  assertThat(info(threadPool,Names.SEARCH).max(),equalTo(15));
  assertThat(threadPool.executor(Names.SEARCH),instanceOf(EsThreadPoolExecutor.class));
  assertThat(((EsThreadPoolExecutor)threadPool.executor(Names.SEARCH)).getCorePoolSize(),equalTo(2));
  assertThat(((EsThreadPoolExecutor)threadPool.executor(Names.SEARCH)).getMaximumPoolSize(),equalTo(15));
  Executor oldExecutor=threadPool.executor(Names.SEARCH);
  threadPool.updateSettings(settingsBuilder().put("threadpool.search.size","10").put("threadpool.search.min","5").build());
  assertThat(info(threadPool,Names.SEARCH).min(),equalTo(5));
  assertThat(info(threadPool,Names.SEARCH).max(),equalTo(10));
  assertThat(((EsThreadPoolExecutor)threadPool.executor(Names.SEARCH)).getCorePoolSize(),equalTo(5));
  assertThat(((EsThreadPoolExecutor)threadPool.executor(Names.SEARCH)).getMaximumPoolSize(),equalTo(10));
  assertThat(info(threadPool,Names.SEARCH).type(),equalTo("blocking"));
  assertThat(threadPool.executor(Names.SEARCH),sameInstance(oldExecutor));
  threadPool.updateSettings(settingsBuilder().put("threadpool.search.queue_size","500").build());
  assertThat(info(threadPool,Names.SEARCH).capacity().singles(),equalTo(500L));
  threadPool.updateSettings(settingsBuilder().put("threadpool.search.wait_time","2m").build());
  assertThat(info(threadPool,Names.SEARCH).waitTime().minutes(),equalTo(2L));
  threadPool.shutdown();
}
