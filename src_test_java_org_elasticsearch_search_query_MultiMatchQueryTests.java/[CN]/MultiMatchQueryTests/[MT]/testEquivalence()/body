{
  final int numDocs=(int)client().prepareCount("test").setQuery(matchAllQuery()).get().getCount();
  int numIters=scaledRandomIntBetween(5,10);
  for (int i=0; i < numIters; i++) {
{
      MatchQueryBuilder.Type type=randomBoolean() ? null : MatchQueryBuilder.Type.BOOLEAN;
      MultiMatchQueryBuilder multiMatchQueryBuilder=randomBoolean() ? multiMatchQuery("marvel hero captain america","full_name","first_name","last_name","category") : multiMatchQuery("marvel hero captain america","*_name",randomBoolean() ? "category" : "categ*");
      SearchResponse left=client().prepareSearch("test").setSize(numDocs).addSort(SortBuilders.scoreSort()).addSort(SortBuilders.fieldSort("_id")).setQuery(randomizeType(multiMatchQueryBuilder.operator(MatchQueryBuilder.Operator.OR).type(type))).get();
      SearchResponse right=client().prepareSearch("test").setSize(numDocs).addSort(SortBuilders.scoreSort()).addSort(SortBuilders.fieldSort("_id")).setQuery(disMaxQuery().add(matchQuery("full_name","marvel hero captain america")).add(matchQuery("first_name","marvel hero captain america")).add(matchQuery("last_name","marvel hero captain america")).add(matchQuery("category","marvel hero captain america"))).get();
      assertEquivalent("marvel hero captain america",left,right);
    }
{
      MatchQueryBuilder.Type type=randomBoolean() ? null : MatchQueryBuilder.Type.BOOLEAN;
      String minShouldMatch=randomBoolean() ? null : "" + between(0,1);
      MatchQueryBuilder.Operator op=randomBoolean() ? MatchQueryBuilder.Operator.AND : MatchQueryBuilder.Operator.OR;
      MultiMatchQueryBuilder multiMatchQueryBuilder=randomBoolean() ? multiMatchQuery("captain america","full_name","first_name","last_name","category") : multiMatchQuery("captain america","*_name",randomBoolean() ? "category" : "categ*");
      SearchResponse left=client().prepareSearch("test").setSize(numDocs).addSort(SortBuilders.scoreSort()).addSort(SortBuilders.fieldSort("_id")).setQuery(randomizeType(multiMatchQueryBuilder.operator(op).useDisMax(false).minimumShouldMatch(minShouldMatch).type(type))).get();
      SearchResponse right=client().prepareSearch("test").setSize(numDocs).addSort(SortBuilders.scoreSort()).addSort(SortBuilders.fieldSort("_id")).setQuery(boolQuery().minimumShouldMatch(minShouldMatch).should(randomBoolean() ? termQuery("full_name","captain america") : matchQuery("full_name","captain america").operator(op)).should(matchQuery("first_name","captain america").operator(op)).should(matchQuery("last_name","captain america").operator(op)).should(matchQuery("category","captain america").operator(op))).get();
      assertEquivalent("captain america",left,right);
    }
{
      String minShouldMatch=randomBoolean() ? null : "" + between(0,1);
      MatchQueryBuilder.Operator op=randomBoolean() ? MatchQueryBuilder.Operator.AND : MatchQueryBuilder.Operator.OR;
      SearchResponse left=client().prepareSearch("test").setSize(numDocs).addSort(SortBuilders.scoreSort()).addSort(SortBuilders.fieldSort("_id")).setQuery(randomizeType(multiMatchQuery("capta","full_name","first_name","last_name","category").type(MatchQueryBuilder.Type.PHRASE_PREFIX).useDisMax(false).minimumShouldMatch(minShouldMatch))).get();
      SearchResponse right=client().prepareSearch("test").setSize(numDocs).addSort(SortBuilders.scoreSort()).addSort(SortBuilders.fieldSort("_id")).setQuery(boolQuery().minimumShouldMatch(minShouldMatch).should(matchPhrasePrefixQuery("full_name","capta")).should(matchPhrasePrefixQuery("first_name","capta").operator(op)).should(matchPhrasePrefixQuery("last_name","capta").operator(op)).should(matchPhrasePrefixQuery("category","capta").operator(op))).get();
      assertEquivalent("capta",left,right);
    }
{
      String minShouldMatch=randomBoolean() ? null : "" + between(0,1);
      MatchQueryBuilder.Operator op=randomBoolean() ? MatchQueryBuilder.Operator.AND : MatchQueryBuilder.Operator.OR;
      SearchResponse left;
      if (randomBoolean()) {
        left=client().prepareSearch("test").setSize(numDocs).addSort(SortBuilders.scoreSort()).addSort(SortBuilders.fieldSort("_id")).setQuery(randomizeType(multiMatchQuery("captain america","full_name","first_name","last_name","category").type(MatchQueryBuilder.Type.PHRASE).useDisMax(false).minimumShouldMatch(minShouldMatch))).get();
      }
 else {
        left=client().prepareSearch("test").setSize(numDocs).addSort(SortBuilders.scoreSort()).addSort(SortBuilders.fieldSort("_id")).setQuery(randomizeType(multiMatchQuery("captain america","full_name","first_name","last_name","category").type(MatchQueryBuilder.Type.PHRASE).tieBreaker(1.0f).minimumShouldMatch(minShouldMatch))).get();
      }
      SearchResponse right=client().prepareSearch("test").setSize(numDocs).addSort(SortBuilders.scoreSort()).addSort(SortBuilders.fieldSort("_id")).setQuery(boolQuery().minimumShouldMatch(minShouldMatch).should(matchPhraseQuery("full_name","captain america")).should(matchPhraseQuery("first_name","captain america").operator(op)).should(matchPhraseQuery("last_name","captain america").operator(op)).should(matchPhraseQuery("category","captain america").operator(op))).get();
      assertEquivalent("captain america",left,right);
    }
  }
}
