{
  createIndex("test");
  ensureGreen();
  NodesInfoResponse nodesInfo=client().admin().cluster().prepareNodesInfo().get();
  String excludedNodeId=null;
  for (  NodeInfo nodeInfo : nodesInfo) {
    if (nodeInfo.getNode().isDataNode()) {
      excludedNodeId=nodeInfo.getNode().id();
      break;
    }
  }
  assertNotNull(excludedNodeId);
  ClusterUpdateSettingsResponse clusterUpdateSettingsResponse=client().admin().cluster().prepareUpdateSettings().setTransientSettings(settingsBuilder().put("cluster.routing.allocation.exclude._id",excludedNodeId)).get();
  assertAcked(clusterUpdateSettingsResponse);
  assertThat(clusterUpdateSettingsResponse.getTransientSettings().get("cluster.routing.allocation.exclude._id"),equalTo(excludedNodeId));
  for (  Client client : clients()) {
    ClusterState clusterState=getLocalClusterState(client);
    assertThat(clusterState.routingNodes().metaData().transientSettings().get("cluster.routing.allocation.exclude._id"),equalTo(excludedNodeId));
    for (    IndexRoutingTable indexRoutingTable : clusterState.routingTable()) {
      for (      IndexShardRoutingTable indexShardRoutingTable : indexRoutingTable) {
        for (        ShardRouting shardRouting : indexShardRoutingTable) {
          if (clusterState.nodes().get(shardRouting.currentNodeId()).id().equals(excludedNodeId)) {
            assertThat(shardRouting.relocating(),equalTo(true));
          }
        }
      }
    }
  }
}
