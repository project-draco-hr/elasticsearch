{
  SignificantTermsParametersParser aggParser=new SignificantTermsParametersParser(significanceHeuristicParserMapper);
  ValuesSourceParser<ValuesSource> vsParser=ValuesSourceParser.any(aggregationName,SignificantStringTerms.TYPE,context).scriptable(false).formattable(true).build();
  IncludeExclude.Parser incExcParser=new IncludeExclude.Parser();
  aggParser.parse(aggregationName,parser,context,vsParser,incExcParser);
  TermsAggregator.BucketCountThresholds bucketCountThresholds=aggParser.getBucketCountThresholds();
  if (bucketCountThresholds.getShardSize() == aggParser.getDefaultBucketCountThresholds().getShardSize()) {
    bucketCountThresholds.setShardSize(2 * BucketUtils.suggestShardSideQueueSize(bucketCountThresholds.getRequiredSize(),context.numberOfShards()));
  }
  bucketCountThresholds.ensureValidity();
  SignificanceHeuristic significanceHeuristic=aggParser.getSignificanceHeuristic();
  if (significanceHeuristic == null) {
    significanceHeuristic=JLHScore.INSTANCE;
  }
  return new SignificantTermsAggregatorFactory(aggregationName,vsParser.config(),bucketCountThresholds,aggParser.getIncludeExclude(),aggParser.getExecutionHint(),aggParser.getFilter(),significanceHeuristic);
}
