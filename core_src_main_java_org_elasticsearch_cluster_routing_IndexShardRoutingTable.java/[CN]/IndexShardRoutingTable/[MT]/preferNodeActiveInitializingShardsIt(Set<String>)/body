{
  ArrayList<ShardRouting> preferred=new ArrayList<>(activeShards.size() + allInitializingShards.size());
  ArrayList<ShardRouting> notPreferred=new ArrayList<>(activeShards.size() + allInitializingShards.size());
  for (  ShardRouting shardRouting : shuffler.shuffle(activeShards)) {
    if (nodeIds.contains(shardRouting.currentNodeId())) {
      preferred.add(shardRouting);
    }
 else {
      notPreferred.add(shardRouting);
    }
  }
  preferred.addAll(notPreferred);
  if (!allInitializingShards.isEmpty()) {
    preferred.addAll(allInitializingShards);
  }
  return new PlainShardIterator(shardId,preferred);
}
