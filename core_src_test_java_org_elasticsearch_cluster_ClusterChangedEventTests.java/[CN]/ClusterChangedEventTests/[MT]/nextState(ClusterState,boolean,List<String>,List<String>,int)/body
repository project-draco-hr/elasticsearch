{
  final ClusterState.Builder builder=ClusterState.builder(previousState);
  builder.stateUUID(UUIDs.randomBase64UUID());
  final MetaData.Builder metaBuilder=MetaData.builder(previousState.metaData());
  if (changeClusterUUID || addedIndices.size() > 0 || deletedIndices.size() > 0) {
    if (changeClusterUUID) {
      metaBuilder.clusterUUID(UUIDs.randomBase64UUID());
    }
    for (    String index : addedIndices) {
      metaBuilder.put(createIndexMetadata(index),true);
    }
    for (    String index : deletedIndices) {
      metaBuilder.remove(index);
    }
    builder.metaData(metaBuilder);
  }
  if (numNodesToRemove > 0) {
    final int discoveryNodesSize=previousState.getNodes().getSize();
    final DiscoveryNodes.Builder nodesBuilder=DiscoveryNodes.builder(previousState.getNodes());
    for (int i=0; i < numNodesToRemove && i < discoveryNodesSize; i++) {
      nodesBuilder.remove(NODE_ID_PREFIX + i);
    }
    builder.nodes(nodesBuilder);
  }
  return builder.build();
}
