{
  final IndexFieldData<?> in=super.getForField(fieldName);
  return new IndexFieldData<AtomicFieldData<ScriptDocValues>>(){
    @Override public Index index(){
      return in.index();
    }
    @Override public Names getFieldNames(){
      return in.getFieldNames();
    }
    @Override public boolean valuesOrdered(){
      return in.valuesOrdered();
    }
    @Override public AtomicFieldData<ScriptDocValues> load(    AtomicReaderContext context){
      return in.load(context);
    }
    @Override public AtomicFieldData<ScriptDocValues> loadDirect(    AtomicReaderContext context) throws Exception {
      return in.loadDirect(context);
    }
    @Override public XFieldComparatorSource comparatorSource(    Object missingValue,    SortMode sortMode){
      return new BytesRefFieldComparatorSource(this,missingValue,sortMode);
    }
    @Override public void clear(){
      in.clear();
    }
    @Override public void clear(    IndexReader reader){
      in.clear(reader);
    }
  }
;
}
