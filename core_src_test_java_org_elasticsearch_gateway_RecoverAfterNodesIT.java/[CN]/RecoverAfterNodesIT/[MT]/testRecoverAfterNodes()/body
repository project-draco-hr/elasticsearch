{
  logger.info("--> start node (1)");
  Client clientNode1=startNode(Settings.builder().put("gateway.recover_after_nodes",3));
  assertThat(clientNode1.admin().cluster().prepareState().setLocal(true).execute().actionGet().getState().blocks().global(ClusterBlockLevel.METADATA_WRITE),hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));
  logger.info("--> start node (2)");
  Client clientNode2=startNode(Settings.builder().put("gateway.recover_after_nodes",3));
  Thread.sleep(BLOCK_WAIT_TIMEOUT.millis());
  assertThat(clientNode1.admin().cluster().prepareState().setLocal(true).execute().actionGet().getState().blocks().global(ClusterBlockLevel.METADATA_WRITE),hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));
  assertThat(clientNode2.admin().cluster().prepareState().setLocal(true).execute().actionGet().getState().blocks().global(ClusterBlockLevel.METADATA_WRITE),hasItem(GatewayService.STATE_NOT_RECOVERED_BLOCK));
  logger.info("--> start node (3)");
  Client clientNode3=startNode(Settings.builder().put("gateway.recover_after_nodes",3));
  assertThat(waitForNoBlocksOnNode(BLOCK_WAIT_TIMEOUT,clientNode1).isEmpty(),equalTo(true));
  assertThat(waitForNoBlocksOnNode(BLOCK_WAIT_TIMEOUT,clientNode2).isEmpty(),equalTo(true));
  assertThat(waitForNoBlocksOnNode(BLOCK_WAIT_TIMEOUT,clientNode3).isEmpty(),equalTo(true));
}
