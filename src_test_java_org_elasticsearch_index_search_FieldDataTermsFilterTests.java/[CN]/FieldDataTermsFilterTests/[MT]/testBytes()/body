{
  List<Integer> docs=Arrays.asList(1,5,7);
  ObjectOpenHashSet<BytesRef> hTerms=new ObjectOpenHashSet<>();
  List<BytesRef> cTerms=new ArrayList<>(docs.size());
  for (int i=0; i < docs.size(); i++) {
    BytesRef term=new BytesRef("str" + docs.get(i));
    hTerms.add(term);
    cTerms.add(term);
  }
  FieldDataTermsFilter hFilter=FieldDataTermsFilter.newBytes(getFieldData(strMapper),hTerms);
  int size=reader.maxDoc();
  FixedBitSet result=new FixedBitSet(size);
  result.clear(0,size);
  assertThat(result.cardinality(),equalTo(0));
  result.or(hFilter.getDocIdSet(reader.getContext(),reader.getLiveDocs()).iterator());
  assertThat(result.cardinality(),equalTo(docs.size()));
  for (int i=0; i < reader.maxDoc(); i++) {
    assertThat(result.get(i),equalTo(docs.contains(i)));
  }
  result.clear(0,size);
  assertThat(result.cardinality(),equalTo(0));
  result.or(strMapper.fieldDataTermsFilter(cTerms,parseContext).getDocIdSet(reader.getContext(),reader.getLiveDocs()).iterator());
  assertThat(result.cardinality(),equalTo(docs.size()));
  for (int i=0; i < reader.maxDoc(); i++) {
    assertThat(result.get(i),equalTo(docs.contains(i)));
  }
  result.clear(0,size);
  assertThat(result.cardinality(),equalTo(0));
  hFilter=FieldDataTermsFilter.newBytes(getFieldData(lngMapper),hTerms);
  result.or(hFilter.getDocIdSet(reader.getContext(),reader.getLiveDocs()).iterator());
  assertThat(result.cardinality(),equalTo(0));
  hFilter=FieldDataTermsFilter.newBytes(getFieldData(dblMapper),hTerms);
  result.or(hFilter.getDocIdSet(reader.getContext(),reader.getLiveDocs()).iterator());
  assertThat(result.cardinality(),equalTo(0));
}
