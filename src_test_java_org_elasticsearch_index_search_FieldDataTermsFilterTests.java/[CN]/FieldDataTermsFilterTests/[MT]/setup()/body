{
  super.setUp();
  IndexService indexService=createIndex("test",ImmutableSettings.builder().put("index.fielddata.cache","none").build());
  Settings settings=indexService.settingsService().getSettings();
  ifdService=indexService.injector().getInstance(IndexFieldDataService.class);
  IndexQueryParserService parserService=indexService.queryParserService();
  parseContext=new QueryParseContext(indexService.index(),parserService);
  writer=new IndexWriter(new RAMDirectory(),new IndexWriterConfig(new StandardAnalyzer()));
  strMapper=new StringFieldMapper.Builder("str_value").build(new Mapper.BuilderContext(settings,new ContentPath(1)));
  lngMapper=new LongFieldMapper.Builder("lng_value").build(new Mapper.BuilderContext(settings,new ContentPath(1)));
  dblMapper=new DoubleFieldMapper.Builder("dbl_value").build(new Mapper.BuilderContext(settings,new ContentPath(1)));
  int numDocs=10;
  for (int i=0; i < numDocs; i++) {
    Document d=new Document();
    d.add(new StringField(strMapper.names().indexName(),"str" + i,Field.Store.NO));
    d.add(new LongField(lngMapper.names().indexName(),i,Field.Store.NO));
    d.add(new DoubleField(dblMapper.names().indexName(),Double.valueOf(i),Field.Store.NO));
    writer.addDocument(d);
  }
  reader=SlowCompositeReaderWrapper.wrap(DirectoryReader.open(writer,true));
}
