{
  MockDirectoryWrapper dir=newMockDirectory();
  dir.setEnableVirusScanner(false);
  IndexWriterConfig iwc=newIndexWriterConfig();
  iwc.setIndexDeletionPolicy(NoDeletionPolicy.INSTANCE);
  iwc.setMergePolicy(NoMergePolicy.INSTANCE);
  iwc.setMaxBufferedDocs(2);
  IndexWriter writer=new IndexWriter(dir,iwc);
  Document doc=new Document();
  doc.add(new TextField("id","1",random().nextBoolean() ? Field.Store.YES : Field.Store.NO));
  writer.addDocument(doc);
  writer.commit();
  doc=new Document();
  doc.add(new TextField("id","2",random().nextBoolean() ? Field.Store.YES : Field.Store.NO));
  writer.addDocument(doc);
  doc=new Document();
  doc.add(new TextField("id","3",random().nextBoolean() ? Field.Store.YES : Field.Store.NO));
  writer.addDocument(doc);
  writer.commit();
  SegmentInfos segmentCommitInfos=Lucene.readSegmentInfos(dir);
  doc=new Document();
  doc.add(new TextField("id","4",random().nextBoolean() ? Field.Store.YES : Field.Store.NO));
  writer.addDocument(doc);
  writer.deleteDocuments(new Term("id","2"));
  writer.commit();
  DirectoryReader open=DirectoryReader.open(writer,true);
  assertEquals(3,open.numDocs());
  assertEquals(1,open.numDeletedDocs());
  assertEquals(4,open.maxDoc());
  open.close();
  writer.close();
  SegmentInfos si=Lucene.pruneUnreferencedFiles(segmentCommitInfos.getSegmentsFileName(),dir);
  assertEquals(si.getSegmentsFileName(),segmentCommitInfos.getSegmentsFileName());
  open=DirectoryReader.open(dir);
  assertEquals(3,open.numDocs());
  assertEquals(0,open.numDeletedDocs());
  assertEquals(3,open.maxDoc());
  IndexSearcher s=new IndexSearcher(open);
  assertEquals(s.search(new TermQuery(new Term("id","1")),1).totalHits,1);
  assertEquals(s.search(new TermQuery(new Term("id","2")),1).totalHits,1);
  assertEquals(s.search(new TermQuery(new Term("id","3")),1).totalHits,1);
  assertEquals(s.search(new TermQuery(new Term("id","4")),1).totalHits,0);
  for (  String file : dir.listAll()) {
    assertFalse("unexpected file: " + file,file.equals("segments_3") || file.startsWith("_2") || file.startsWith("extra"));
  }
  open.close();
  dir.close();
}
