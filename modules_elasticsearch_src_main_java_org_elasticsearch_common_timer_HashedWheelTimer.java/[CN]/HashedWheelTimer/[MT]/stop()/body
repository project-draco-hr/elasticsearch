{
  if (!shutdown.compareAndSet(false,true)) {
    return Collections.emptySet();
  }
  boolean interrupted=false;
  while (workerThread.isAlive()) {
    workerThread.interrupt();
    try {
      workerThread.join(100);
    }
 catch (    InterruptedException e) {
      interrupted=true;
    }
  }
  if (interrupted) {
    Thread.currentThread().interrupt();
  }
  Set<Timeout> unprocessedTimeouts=new HashSet<Timeout>();
  for (  Set<HashedWheelTimeout> bucket : wheel) {
    unprocessedTimeouts.addAll(bucket);
    bucket.clear();
  }
  return Collections.unmodifiableSet(unprocessedTimeouts);
}
