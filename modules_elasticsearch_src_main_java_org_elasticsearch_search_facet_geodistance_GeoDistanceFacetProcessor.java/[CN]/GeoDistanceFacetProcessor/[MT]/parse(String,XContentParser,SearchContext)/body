{
  String fieldName=null;
  String valueFieldName=null;
  String valueScript=null;
  String scriptLang=null;
  Map<String,Object> params=null;
  double lat=Double.NaN;
  double lon=Double.NaN;
  DistanceUnit unit=DistanceUnit.KILOMETERS;
  GeoDistance geoDistance=GeoDistance.ARC;
  List<GeoDistanceFacet.Entry> entries=Lists.newArrayList();
  XContentParser.Token token;
  String currentName=parser.currentName();
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if ("ranges".equals(currentName) || "entries".equals(currentName)) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          double from=Double.NEGATIVE_INFINITY;
          double to=Double.POSITIVE_INFINITY;
          while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
            if (token == XContentParser.Token.FIELD_NAME) {
              currentName=parser.currentName();
            }
 else             if (token.isValue()) {
              if ("from".equals(currentName)) {
                from=parser.doubleValue();
              }
 else               if ("to".equals(currentName)) {
                to=parser.doubleValue();
              }
            }
          }
          entries.add(new GeoDistanceFacet.Entry(from,to,0,0,0,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY));
        }
      }
 else {
        token=parser.nextToken();
        lon=parser.doubleValue();
        token=parser.nextToken();
        lat=parser.doubleValue();
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
        }
        fieldName=currentName;
      }
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("params".equals(currentName)) {
        params=parser.map();
      }
 else {
        fieldName=currentName;
        while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
          if (token == XContentParser.Token.FIELD_NAME) {
            currentName=parser.currentName();
          }
 else           if (token.isValue()) {
            if (currentName.equals(GeoPointFieldMapper.Names.LAT)) {
              lat=parser.doubleValue();
            }
 else             if (currentName.equals(GeoPointFieldMapper.Names.LON)) {
              lon=parser.doubleValue();
            }
 else             if (currentName.equals(GeoPointFieldMapper.Names.GEOHASH)) {
              double[] values=GeoHashUtils.decode(parser.text());
              lat=values[0];
              lon=values[1];
            }
          }
        }
      }
    }
 else     if (token.isValue()) {
      if (currentName.equals("unit")) {
        unit=DistanceUnit.fromString(parser.text());
      }
 else       if (currentName.equals("distance_type") || currentName.equals("distanceType")) {
        geoDistance=GeoDistance.fromString(parser.text());
      }
 else       if ("value_field".equals(currentName) || "valueField".equals(currentName)) {
        valueFieldName=parser.text();
      }
 else       if ("value_script".equals(currentName) || "valueScript".equals(currentName)) {
        valueScript=parser.text();
      }
 else       if ("lang".equals(currentName)) {
        scriptLang=parser.text();
      }
 else {
        String value=parser.text();
        int comma=value.indexOf(',');
        if (comma != -1) {
          lat=Double.parseDouble(value.substring(0,comma).trim());
          lon=Double.parseDouble(value.substring(comma + 1).trim());
        }
 else {
          double[] values=GeoHashUtils.decode(value);
          lat=values[0];
          lon=values[1];
        }
        fieldName=currentName;
      }
    }
  }
  if (Double.isNaN(lat) || Double.isNaN(lon)) {
    throw new FacetPhaseExecutionException(facetName,"lat/lon not set for geo_distance facet");
  }
  if (entries.isEmpty()) {
    throw new FacetPhaseExecutionException(facetName,"no ranges defined for geo_distance facet");
  }
  if (valueFieldName != null) {
    return new ValueGeoDistanceFacetCollector(facetName,fieldName,lat,lon,unit,geoDistance,entries.toArray(new GeoDistanceFacet.Entry[entries.size()]),context,valueFieldName);
  }
  if (valueScript != null) {
    return new ScriptGeoDistanceFacetCollector(facetName,fieldName,lat,lon,unit,geoDistance,entries.toArray(new GeoDistanceFacet.Entry[entries.size()]),context,scriptLang,valueScript,params);
  }
  return new GeoDistanceFacetCollector(facetName,fieldName,lat,lon,unit,geoDistance,entries.toArray(new GeoDistanceFacet.Entry[entries.size()]),context);
}
