{
  final String[] indices=Strings.splitStringByCommaToArray(request.param("index"));
  final String[] types=request.paramAsStringArrayOrEmptyIfAll("type");
  final String[] fields=Strings.splitStringByCommaToArray(request.param("fields"));
  GetFieldMappingsRequest getMappingsRequest=new GetFieldMappingsRequest();
  getMappingsRequest.indices(indices).types(types).fields(fields).includeDefaults(request.paramAsBoolean("include_defaults",false));
  getMappingsRequest.indicesOptions(IndicesOptions.fromRequest(request,getMappingsRequest.indicesOptions()));
  getMappingsRequest.local(request.paramAsBoolean("local",getMappingsRequest.local()));
  client.admin().indices().getFieldMappings(getMappingsRequest,new ActionListener<GetFieldMappingsResponse>(){
    @SuppressWarnings("unchecked") @Override public void onResponse(    GetFieldMappingsResponse response){
      try {
        ImmutableMap<String,ImmutableMap<String,ImmutableMap<String,FieldMappingMetaData>>> mappingsByIndex=response.mappings();
        boolean isPossibleSingleFieldRequest=indices.length == 1 && types.length == 1 && fields.length == 1;
        if (isPossibleSingleFieldRequest && isFieldMappingMissingField(mappingsByIndex)) {
          channel.sendResponse(new BytesRestResponse(OK,emptyBuilder(request)));
          return;
        }
        RestStatus status=OK;
        if (mappingsByIndex.isEmpty() && fields.length > 0) {
          status=NOT_FOUND;
        }
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        response.toXContent(builder,ToXContent.EMPTY_PARAMS);
        builder.endObject();
        channel.sendResponse(new BytesRestResponse(status,builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new BytesRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
