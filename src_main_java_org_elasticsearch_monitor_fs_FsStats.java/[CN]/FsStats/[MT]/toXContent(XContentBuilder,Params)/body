{
  builder.startObject("fs");
  builder.field("timestamp",timestamp);
  builder.startArray("data");
  for (  Info info : infos) {
    builder.startObject();
    builder.field("path",info.path);
    if (info.mount != null) {
      builder.field("mount",info.mount);
    }
    if (info.dev != null) {
      builder.field("dev",info.dev);
    }
    if (info.total != -1) {
      builder.field("total",info.total().toString());
      builder.field("total_in_bytes",info.total);
    }
    if (info.free != -1) {
      builder.field("free",info.free().toString());
      builder.field("free_in_bytes",info.free);
    }
    if (info.available != -1) {
      builder.field("available",info.available().toString());
      builder.field("available_in_bytes",info.available);
    }
    if (info.diskReads != -1) {
      builder.field("disk_reads",info.diskReads);
    }
    if (info.diskWrites != -1) {
      builder.field("disk_writes",info.diskWrites);
    }
    if (info.diskReadBytes != -1) {
      builder.field("disk_read_size",info.diskReadSizeSize().toString());
      builder.field("disk_read_size_bytes",info.diskReadSizeInBytes());
    }
    if (info.diskWriteBytes != -1) {
      builder.field("disk_write_size",info.diskWriteSizeSize().toString());
      builder.field("disk_write_size_bytes",info.diskWriteSizeInBytes());
    }
    if (info.diskQueue != -1) {
      builder.field("disk_queue",Strings.format1Decimals(info.diskQueue,""));
    }
    if (info.diskServiceTime != -1) {
      builder.field("disk_service_time",Strings.format1Decimals(info.diskServiceTime,""));
    }
    builder.endObject();
  }
  builder.endArray();
  builder.endObject();
  return builder;
}
