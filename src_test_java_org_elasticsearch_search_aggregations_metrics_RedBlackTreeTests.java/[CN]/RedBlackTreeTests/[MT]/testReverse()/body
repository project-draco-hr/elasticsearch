{
  IntRedBlackTree tree=new IntRedBlackTree();
  final int iters=scaledRandomIntBetween(1000,10000);
  for (int i=0; i < iters; ++i) {
    final int value=randomInt(2000);
    tree.add(value);
  }
  List<Integer> sortedNodes=Lists.newArrayList();
  for (  IntCursor cursor : tree) {
    sortedNodes.add(cursor.value);
  }
  List<Integer> reverseNodes=Lists.newArrayList();
  for (  IntCursor cursor : tree.reverseSet()) {
    reverseNodes.add(cursor.value);
  }
  Collections.reverse(sortedNodes);
  assertEquals(sortedNodes,reverseNodes);
}
