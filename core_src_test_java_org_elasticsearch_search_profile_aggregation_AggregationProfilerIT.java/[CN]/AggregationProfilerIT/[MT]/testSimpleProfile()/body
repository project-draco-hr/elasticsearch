{
  SearchResponse response=client().prepareSearch("idx").setProfile(true).addAggregation(histogram("histo").field(NUMBER_FIELD).interval(1L)).get();
  assertSearchResponse(response);
  Map<String,ProfileShardResult> profileResults=response.getProfileResults();
  assertThat(profileResults,notNullValue());
  assertThat(profileResults.size(),equalTo(getNumShards("idx").numPrimaries));
  for (  ProfileShardResult profileShardResult : profileResults.values()) {
    assertThat(profileShardResult,notNullValue());
    AggregationProfileShardResult aggProfileResults=profileShardResult.getAggregationProfileResults();
    assertThat(aggProfileResults,notNullValue());
    List<ProfileResult> aggProfileResultsList=aggProfileResults.getProfileResults();
    assertThat(aggProfileResultsList,notNullValue());
    assertThat(aggProfileResultsList.size(),equalTo(1));
    ProfileResult histoAggResult=aggProfileResultsList.get(0);
    assertThat(histoAggResult,notNullValue());
    assertThat(histoAggResult.getQueryName(),equalTo("org.elasticsearch.search.aggregations.bucket.histogram.HistogramAggregator"));
    assertThat(histoAggResult.getLuceneDescription(),equalTo("histo"));
    assertThat(histoAggResult.getProfiledChildren().size(),equalTo(0));
    assertThat(histoAggResult.getTime(),greaterThan(0L));
    Map<String,Long> breakdown=histoAggResult.getTimeBreakdown();
    assertThat(breakdown,notNullValue());
    assertThat(breakdown.get(AggregationTimingType.INITIALIZE.toString()),notNullValue());
    assertThat(breakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L));
    assertThat(breakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue());
    assertThat(breakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L));
    assertThat(breakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue());
    assertThat(breakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L));
    assertThat(breakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue());
    assertThat(breakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L));
  }
}
