{
  this.lat=lat;
  this.lon=lon;
  this.distance=distance;
  this.geoDistance=geoDistance;
  this.indexFieldData=indexFieldData;
  this.fixedSourceDistance=geoDistance.fixedSourceDistance(lat,lon,DistanceUnit.MILES);
  if (optimizeBbox != null && !"none".equals(optimizeBbox)) {
    distanceBoundingCheck=GeoDistance.distanceBoundingCheck(lat,lon,distance,DistanceUnit.MILES);
    if ("memory".equals(optimizeBbox)) {
      boundingBoxFilter=null;
    }
 else     if ("indexed".equals(optimizeBbox)) {
      boundingBoxFilter=IndexedGeoBoundingBoxFilter.create(distanceBoundingCheck.topLeft(),distanceBoundingCheck.bottomRight(),mapper);
      distanceBoundingCheck=GeoDistance.ALWAYS_INSTANCE;
    }
 else {
      throw new ElasticSearchIllegalArgumentException("type [" + optimizeBbox + "] for bounding box optimization not supported");
    }
  }
 else {
    distanceBoundingCheck=GeoDistance.ALWAYS_INSTANCE;
    boundingBoxFilter=null;
  }
}
