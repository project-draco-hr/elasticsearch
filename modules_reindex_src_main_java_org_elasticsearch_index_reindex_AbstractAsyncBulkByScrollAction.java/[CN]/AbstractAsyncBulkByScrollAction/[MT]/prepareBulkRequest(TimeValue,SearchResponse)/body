{
  if (task.isCancelled()) {
    finishHim(null);
    return;
  }
  SearchHit[] docs=searchResponse.getHits().getHits();
  logger.debug("scroll returned [{}] documents with a scroll id of [{}]",docs.length,searchResponse.getScrollId());
  if (docs.length == 0) {
    startNormalTermination(emptyList(),emptyList(),false);
    return;
  }
  task.countBatch();
  List<SearchHit> docsIterable=Arrays.asList(docs);
  if (mainRequest.getSize() != SIZE_ALL_MATCHES) {
    long remaining=max(0,mainRequest.getSize() - task.getSuccessfullyProcessed());
    if (remaining < docs.length) {
      docsIterable=docsIterable.subList(0,(int)remaining);
    }
  }
  BulkRequest request=buildBulk(docsIterable);
  if (request.requests().isEmpty()) {
    startNextScroll(thisBatchStartTime,0);
    return;
  }
  request.timeout(mainRequest.getTimeout());
  request.consistencyLevel(mainRequest.getConsistency());
  if (logger.isDebugEnabled()) {
    logger.debug("sending [{}] entry, [{}] bulk request",request.requests().size(),new ByteSizeValue(request.estimatedSizeInBytes()));
  }
  sendBulkRequest(thisBatchStartTime,request);
}
