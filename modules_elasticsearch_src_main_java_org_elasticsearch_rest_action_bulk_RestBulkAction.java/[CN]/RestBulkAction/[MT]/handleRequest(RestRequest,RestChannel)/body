{
  BulkRequest bulkRequest=Requests.bulkRequest();
  String replicationType=request.param("replication");
  if (replicationType != null) {
    bulkRequest.replicationType(ReplicationType.fromString(replicationType));
  }
  String consistencyLevel=request.param("consistency");
  if (consistencyLevel != null) {
    bulkRequest.consistencyLevel(WriteConsistencyLevel.fromString(consistencyLevel));
  }
  bulkRequest.refresh(request.paramAsBoolean("refresh",bulkRequest.refresh()));
  try {
    bulkRequest.add(request.contentByteArray(),request.contentByteArrayOffset(),request.contentLength(),request.contentUnsafe());
  }
 catch (  Exception e) {
    try {
      XContentBuilder builder=restContentBuilder(request);
      channel.sendResponse(new XContentRestResponse(request,BAD_REQUEST,builder.startObject().field("error",e.getMessage()).endObject()));
    }
 catch (    IOException e1) {
      logger.error("Failed to send failure response",e1);
    }
    return;
  }
  client.bulk(bulkRequest,new ActionListener<BulkResponse>(){
    @Override public void onResponse(    BulkResponse response){
      try {
        XContentBuilder builder=restContentBuilder(request);
        builder.startObject();
        builder.field(Fields.TOOK,response.tookInMillis());
        builder.startArray(Fields.ITEMS);
        for (        BulkItemResponse itemResponse : response) {
          builder.startObject();
          builder.startObject(itemResponse.opType());
          builder.field(Fields._INDEX,itemResponse.index());
          builder.field(Fields._TYPE,itemResponse.type());
          builder.field(Fields._ID,itemResponse.id());
          long version=itemResponse.version();
          if (version != -1) {
            builder.field(Fields._VERSION,itemResponse.version());
          }
          if (itemResponse.failed()) {
            builder.field(Fields.ERROR,itemResponse.failure().message());
          }
 else {
            builder.field(Fields.OK,true);
          }
          builder.endObject();
          builder.endObject();
        }
        builder.endArray();
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
