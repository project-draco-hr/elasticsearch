{
  assertAcked(prepareCreate("index").addMapping("type",getMappingForType("type")));
  Map<String,String> params=Maps.newHashMap();
  params.put("pretty","true");
  ensureYellow();
  GetFieldMappingsResponse response=client().admin().indices().prepareGetFieldMappings("index").setTypes("type").setFields("field1","obj.subfield").get();
  XContentBuilder responseBuilder=XContentFactory.jsonBuilder().prettyPrint();
  responseBuilder.startObject();
  response.toXContent(responseBuilder,new ToXContent.MapParams(params));
  responseBuilder.endObject();
  String responseStrings=responseBuilder.string();
  XContentBuilder prettyJsonBuilder=XContentFactory.jsonBuilder().prettyPrint();
  prettyJsonBuilder.copyCurrentStructure(XContentFactory.xContent(responseStrings).createParser(responseStrings));
  assertThat(responseStrings,equalTo(prettyJsonBuilder.string()));
  params.put("pretty","false");
  response=client().admin().indices().prepareGetFieldMappings("index").setTypes("type").setFields("field1","obj.subfield").get();
  responseBuilder=XContentFactory.jsonBuilder().prettyPrint().lfAtEnd();
  responseBuilder.startObject();
  response.toXContent(responseBuilder,new ToXContent.MapParams(params));
  responseBuilder.endObject();
  responseStrings=responseBuilder.string();
  prettyJsonBuilder=XContentFactory.jsonBuilder().prettyPrint();
  prettyJsonBuilder.copyCurrentStructure(XContentFactory.xContent(responseStrings).createParser(responseStrings));
  assertThat(responseStrings,not(equalTo(prettyJsonBuilder.string())));
}
