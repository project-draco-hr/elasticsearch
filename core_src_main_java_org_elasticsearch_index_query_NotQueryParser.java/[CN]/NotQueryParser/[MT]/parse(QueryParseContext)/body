{
  XContentParser parser=parseContext.parser();
  Query query=null;
  boolean queryFound=false;
  String queryName=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (parseContext.isDeprecatedSetting(currentFieldName)) {
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if (parseContext.parseFieldMatcher().match(currentFieldName,QUERY_FIELD)) {
        query=parseContext.parseInnerFilter();
        queryFound=true;
      }
 else {
        queryFound=true;
        query=parseContext.parseInnerFilter(currentFieldName);
      }
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      queryFound=true;
      query=parseContext.parseInnerFilter(currentFieldName);
    }
 else     if (token.isValue()) {
      if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else {
        throw new QueryParsingException(parseContext,"[not] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (!queryFound) {
    throw new QueryParsingException(parseContext,"filter is required when using `not` query");
  }
  if (query == null) {
    return null;
  }
  Query notQuery=Queries.not(query);
  if (queryName != null) {
    parseContext.addNamedQuery(queryName,notQuery);
  }
  return notQuery;
}
