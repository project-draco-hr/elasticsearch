{
  Map<String,Settings> groupSettings=settings.getAsGroups();
  if (groupSettings.isEmpty()) {
    return;
  }
  for (  Map.Entry<String,Settings> executor : defaultExecutorTypeSettings.entrySet()) {
    Settings updatedSettings=groupSettings.get(executor.getKey());
    if (updatedSettings == null) {
      continue;
    }
    ExecutorHolder oldExecutorHolder=executors.get(executor.getKey());
    ExecutorHolder newExecutorHolder=rebuild(executor.getKey(),oldExecutorHolder,updatedSettings,executor.getValue());
    if (!oldExecutorHolder.equals(newExecutorHolder)) {
      Map<String,ExecutorHolder> newExecutors=new HashMap<>(executors);
      newExecutors.put(executor.getKey(),newExecutorHolder);
      executors=unmodifiableMap(newExecutors);
      if (!oldExecutorHolder.executor().equals(newExecutorHolder.executor()) && oldExecutorHolder.executor() instanceof EsThreadPoolExecutor) {
        retiredExecutors.add(oldExecutorHolder);
        ((EsThreadPoolExecutor)oldExecutorHolder.executor()).shutdown(new ExecutorShutdownListener(oldExecutorHolder));
      }
    }
  }
  for (  Map.Entry<String,Settings> entry : groupSettings.entrySet()) {
    if (defaultExecutorTypeSettings.containsKey(entry.getKey())) {
      continue;
    }
    ExecutorHolder oldExecutorHolder=executors.get(entry.getKey());
    ExecutorHolder newExecutorHolder=rebuild(entry.getKey(),oldExecutorHolder,entry.getValue(),Settings.EMPTY);
    if (!newExecutorHolder.equals(oldExecutorHolder)) {
      Map<String,ExecutorHolder> newExecutors=new HashMap<>(executors);
      newExecutors.put(entry.getKey(),newExecutorHolder);
      executors=unmodifiableMap(newExecutors);
      if (!oldExecutorHolder.executor().equals(newExecutorHolder.executor()) && oldExecutorHolder.executor() instanceof EsThreadPoolExecutor) {
        retiredExecutors.add(oldExecutorHolder);
        ((EsThreadPoolExecutor)oldExecutorHolder.executor()).shutdown(new ExecutorShutdownListener(oldExecutorHolder));
      }
    }
  }
}
