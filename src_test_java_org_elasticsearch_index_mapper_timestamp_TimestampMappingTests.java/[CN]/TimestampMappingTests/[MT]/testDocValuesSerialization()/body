{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_timestamp").endObject().endObject().endObject().string();
  assertDocValuesSerialization(mapping);
  mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_timestamp").startObject("fielddata").field("format","doc_values").endObject().endObject().endObject().endObject().string();
  assertDocValuesSerialization(mapping);
  mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_timestamp").field("doc_values",true).endObject().endObject().endObject().string();
  assertDocValuesSerialization(mapping);
  mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_timestamp").field("doc_values",false).endObject().endObject().endObject().string();
  assertDocValuesSerialization(mapping);
  mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_timestamp").field("doc_values",true).startObject("fielddata").field("format","doc_values").endObject().endObject().endObject().endObject().string();
  assertDocValuesSerialization(mapping);
  mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_timestamp").field("doc_values",false).startObject("fielddata").field("format","doc_values").endObject().endObject().endObject().endObject().string();
  assertDocValuesSerialization(mapping);
}
