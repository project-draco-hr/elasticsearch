{
  return new RandomAccessWeight(this){
    @Override protected Bits getMatchingDocs(    final LeafReaderContext context) throws IOException {
      final LeafSearchScript leafScript=searchScript.getLeafSearchScript(context);
      return new Bits(){
        @Override public boolean get(        int doc){
          leafScript.setDocument(doc);
          Object val=leafScript.run();
          if (val == null) {
            return false;
          }
          if (val instanceof Boolean) {
            return (Boolean)val;
          }
          if (val instanceof Number) {
            return ((Number)val).longValue() != 0;
          }
          throw new IllegalArgumentException("Can't handle type [" + val + "] in script filter");
        }
        @Override public int length(){
          return context.reader().maxDoc();
        }
      }
;
    }
  }
;
}
