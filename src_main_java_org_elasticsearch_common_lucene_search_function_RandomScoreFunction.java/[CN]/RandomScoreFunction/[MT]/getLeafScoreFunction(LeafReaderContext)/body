{
  AtomicFieldData leafData=uidFieldData.load(ctx);
  final SortedBinaryDocValues uidByteData=leafData.getBytesValues();
  if (uidByteData == null)   throw new NullPointerException("failed to get uid byte data");
  return new LeafScoreFunction(){
    @Override public double score(    int docId,    float subQueryScore){
      uidByteData.setDocument(docId);
      int hash=StringHelper.murmurhash3_x86_32(uidByteData.valueAt(0),saltedSeed);
      return (hash & 0x00FFFFFF) / (float)(1 << 24);
    }
    @Override public Explanation explainScore(    int docId,    Explanation subQueryScore){
      return Explanation.match(CombineFunction.toFloat(score(docId,subQueryScore.getValue())),"random score function (seed: " + originalSeed + ")");
    }
  }
;
}
