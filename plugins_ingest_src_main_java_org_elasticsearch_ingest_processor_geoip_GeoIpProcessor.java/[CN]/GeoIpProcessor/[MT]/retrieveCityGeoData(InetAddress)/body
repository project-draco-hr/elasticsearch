{
  SecurityManager sm=System.getSecurityManager();
  if (sm != null) {
    sm.checkPermission(new SpecialPermission());
  }
  CityResponse response=AccessController.doPrivileged(new PrivilegedAction<CityResponse>(){
    @Override public CityResponse run(){
      try {
        return dbReader.city(ipAddress);
      }
 catch (      IOException|GeoIp2Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
);
  Country country=response.getCountry();
  City city=response.getCity();
  Location location=response.getLocation();
  Continent continent=response.getContinent();
  Subdivision subdivision=response.getMostSpecificSubdivision();
  Map<String,Object> geoData=new HashMap<String,Object>();
  geoData.put("ip",NetworkAddress.formatAddress(ipAddress));
  geoData.put("country_iso_code",country.getIsoCode());
  geoData.put("country_name",country.getName());
  geoData.put("continent_name",continent.getName());
  geoData.put("region_name",subdivision.getName());
  geoData.put("city_name",city.getName());
  geoData.put("timezone",location.getTimeZone());
  geoData.put("latitude",location.getLatitude());
  geoData.put("longitude",location.getLongitude());
  if (location.getLatitude() != null && location.getLongitude() != null) {
    geoData.put("location",new double[]{location.getLongitude(),location.getLatitude()});
  }
  return geoData;
}
