{
  if (allocation.ignoreDisable()) {
    return allocation.decision(Decision.YES,NAME,"allocation disabling is ignored");
  }
  Settings indexSettings=allocation.routingNodes().metaData().index(shardRouting.index()).settings();
  String enableIndexValue=indexSettings.get(INDEX_ROUTING_ALLOCATION_ENABLE);
  final Allocation enable;
  if (enableIndexValue != null) {
    enable=Allocation.parse(enableIndexValue);
  }
 else {
    enable=this.enable;
  }
switch (enable) {
case ALL:
    return allocation.decision(Decision.YES,NAME,"all allocations are allowed");
case NONE:
  return allocation.decision(Decision.NO,NAME,"no allocations are allowed");
case NEW_PRIMARIES:
if (shardRouting.primary() && !allocation.routingNodes().routingTable().index(shardRouting.index()).shard(shardRouting.id()).primaryAllocatedPostApi()) {
  return allocation.decision(Decision.YES,NAME,"new primary allocations are allowed");
}
 else {
  return allocation.decision(Decision.NO,NAME,"non-new primary allocations are disallowed");
}
case PRIMARIES:
if (shardRouting.primary()) {
return allocation.decision(Decision.YES,NAME,"primary allocations are allowed");
}
 else {
return allocation.decision(Decision.NO,NAME,"replica allocations are disallowed");
}
default :
throw new ElasticsearchIllegalStateException("Unknown allocation option");
}
}
