{
  EvictingQueue<Double> window=EvictingQueue.create(windowSize);
  linearDocCounts=new Double[numValueBuckets];
  window.clear();
  for (int i=0; i < numValueBuckets; i++) {
    if (docCounts[i] == 0 && gapPolicy.equals(BucketHelpers.GapPolicy.IGNORE)) {
      continue;
    }
    window.offer((double)docCounts[i]);
    double avg=0;
    long totalWeight=1;
    long current=1;
    for (    double value : window) {
      avg+=value * current;
      totalWeight+=current;
      current+=1;
    }
    linearDocCounts[i]=avg / totalWeight;
  }
  window.clear();
  linearDocValues=new Double[numValueBuckets];
  for (int i=0; i < numValueBuckets; i++) {
    if (docCounts[i] == 0) {
      if (gapPolicy.equals(BucketHelpers.GapPolicy.IGNORE)) {
        continue;
      }
 else       if (gapPolicy.equals(BucketHelpers.GapPolicy.INSERT_ZEROS)) {
        window.offer(0.0);
      }
 else {
        window.offer((double)docValues[i]);
      }
    }
 else {
      window.offer((double)docValues[i]);
    }
    double avg=0;
    long totalWeight=1;
    long current=1;
    for (    double value : window) {
      avg+=value * current;
      totalWeight+=current;
      current+=1;
    }
    linearDocValues[i]=avg / totalWeight;
  }
}
