{
  EvictingQueue<Double> window=EvictingQueue.create(windowSize);
  doubleExpMovAvgCounts=new Double[numValueBuckets];
  for (int i=0; i < numValueBuckets; i++) {
    double thisValue=docCounts[i];
    if (thisValue == -1) {
      thisValue=0;
    }
    window.offer(thisValue);
    double s=0;
    double last_s=0;
    double b=0;
    double last_b=0;
    double alpha=0.5;
    double beta=0.5;
    int counter=0;
    double last;
    for (    double value : window) {
      last=value;
      if (counter == 1) {
        s=value;
        b=value - last;
      }
 else {
        s=alpha * value + (1.0d - alpha) * (last_s + last_b);
        b=beta * (s - last_s) + (1 - beta) * last_b;
      }
      counter+=1;
      last_s=s;
      last_b=b;
    }
    doubleExpMovAvgCounts[i]=s + (0 * b);
  }
  doubleExpMovAvgValueCounts=new Double[numValueBuckets];
  window.clear();
  for (int i=0; i < numValueBuckets; i++) {
    window.offer((double)docCounts[i]);
    double s=0;
    double last_s=0;
    double b=0;
    double last_b=0;
    double alpha=0.5;
    double beta=0.5;
    int counter=0;
    double last;
    for (    double value : window) {
      last=value;
      if (counter == 1) {
        s=value;
        b=value - last;
      }
 else {
        s=alpha * value + (1.0d - alpha) * (last_s + last_b);
        b=beta * (s - last_s) + (1 - beta) * last_b;
      }
      counter+=1;
      last_s=s;
      last_b=b;
    }
    doubleExpMovAvgValueCounts[i]=s + (0 * b);
  }
}
