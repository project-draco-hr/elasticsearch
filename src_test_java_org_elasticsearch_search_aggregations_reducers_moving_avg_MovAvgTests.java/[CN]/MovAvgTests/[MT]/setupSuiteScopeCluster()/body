{
  createIndex("idx");
  createIndex("idx_unmapped");
  List<IndexRequestBuilder> builders=new ArrayList<>();
  interval=5;
  numValueBuckets=randomIntBetween(6,80);
  numFilledValueBuckets=numValueBuckets;
  windowSize=randomIntBetween(3,10);
  gapPolicy=BucketHelpers.GapPolicy.INSERT_ZEROS;
  docCounts=new long[numValueBuckets];
  valueCounts=new long[numValueBuckets];
  for (int i=0; i < numValueBuckets; i++) {
    docCounts[i]=randomIntBetween(0,20);
    valueCounts[i]=randomIntBetween(1,20);
  }
  builders.add(client().prepareIndex("idx","type").setSource(jsonBuilder().startObject().field("gap_test",0).field(GAP_FIELD,1).endObject()));
  builders.add(client().prepareIndex("idx","type").setSource(jsonBuilder().startObject().field("gap_test",(numValueBuckets - 1) * interval).field(GAP_FIELD,1).endObject()));
  this.setupSimple();
  this.setupLinear();
  this.setupSingle();
  this.setupDouble();
  for (int i=0; i < numValueBuckets; i++) {
    for (int docs=0; docs < docCounts[i]; docs++) {
      builders.add(client().prepareIndex("idx","type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,i * interval).field(SINGLE_VALUED_VALUE_FIELD_NAME,1).endObject()));
    }
  }
  indexRandom(true,builders);
  ensureSearchable();
}
