{
  Directory dir=newDirectory();
  IndexWriter writer=new IndexWriter(dir,new IndexWriterConfig(Lucene.VERSION,Lucene.STANDARD_ANALYZER));
  DirectoryReader directoryReader=DirectoryReader.open(writer,true);
  MatcherAssert.assertThat(Versions.loadVersion(directoryReader,new Term(UidFieldMapper.NAME,"1")),equalTo(Versions.NOT_FOUND));
  Document doc=new Document();
  doc.add(new Field(UidFieldMapper.NAME,"1",UidFieldMapper.Defaults.FIELD_TYPE));
  writer.addDocument(doc);
  directoryReader=reopen(directoryReader);
  assertThat(Versions.loadVersion(directoryReader,new Term(UidFieldMapper.NAME,"1")),equalTo(Versions.NOT_SET));
  assertThat(Versions.loadDocIdAndVersion(directoryReader,new Term(UidFieldMapper.NAME,"1")).version,equalTo(Versions.NOT_SET));
  doc=new Document();
  doc.add(new Field(UidFieldMapper.NAME,"1",UidFieldMapper.Defaults.FIELD_TYPE));
  doc.add(new NumericDocValuesField(UidFieldMapper.VERSION,1));
  writer.updateDocument(new Term(UidFieldMapper.NAME,"1"),doc);
  directoryReader=reopen(directoryReader);
  assertThat(Versions.loadVersion(directoryReader,new Term(UidFieldMapper.NAME,"1")),equalTo(1l));
  assertThat(Versions.loadDocIdAndVersion(directoryReader,new Term(UidFieldMapper.NAME,"1")).version,equalTo(1l));
  doc=new Document();
  Field uid=new Field(UidFieldMapper.NAME,"1",UidFieldMapper.Defaults.FIELD_TYPE);
  Field version=new NumericDocValuesField(UidFieldMapper.VERSION,2);
  doc.add(uid);
  doc.add(version);
  writer.updateDocument(new Term(UidFieldMapper.NAME,"1"),doc);
  directoryReader=reopen(directoryReader);
  assertThat(Versions.loadVersion(directoryReader,new Term(UidFieldMapper.NAME,"1")),equalTo(2l));
  assertThat(Versions.loadDocIdAndVersion(directoryReader,new Term(UidFieldMapper.NAME,"1")).version,equalTo(2l));
  doc=new Document();
  version.setLongValue(3);
  doc.add(uid);
  doc.add(version);
  writer.updateDocument(new Term(UidFieldMapper.NAME,"1"),doc);
  directoryReader=reopen(directoryReader);
  assertThat(Versions.loadVersion(directoryReader,new Term(UidFieldMapper.NAME,"1")),equalTo(3l));
  assertThat(Versions.loadDocIdAndVersion(directoryReader,new Term(UidFieldMapper.NAME,"1")).version,equalTo(3l));
  writer.deleteDocuments(new Term(UidFieldMapper.NAME,"1"));
  directoryReader=reopen(directoryReader);
  assertThat(Versions.loadVersion(directoryReader,new Term(UidFieldMapper.NAME,"1")),equalTo(Versions.NOT_FOUND));
  assertThat(Versions.loadDocIdAndVersion(directoryReader,new Term(UidFieldMapper.NAME,"1")),nullValue());
  directoryReader.close();
  writer.close();
  dir.close();
}
