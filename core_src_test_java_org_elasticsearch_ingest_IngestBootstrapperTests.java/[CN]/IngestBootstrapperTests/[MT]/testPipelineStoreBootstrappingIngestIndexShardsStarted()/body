{
  ClusterState.Builder csBuilder=new ClusterState.Builder(new ClusterName("_name"));
  MetaData.Builder metaDateBuilder=MetaData.builder();
  metaDateBuilder.put(IndexTemplateMetaData.builder(IngestBootstrapper.INGEST_INDEX_TEMPLATE_NAME));
  RoutingTable.Builder routingTableBuilder=RoutingTable.builder();
  Settings settings=settings(Version.CURRENT).put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,1).build();
  metaDateBuilder.put(IndexMetaData.builder(PipelineStore.INDEX).settings(settings).numberOfShards(1).numberOfReplicas(1));
  IndexRoutingTable.Builder indexRoutingTableBuilder=IndexRoutingTable.builder(PipelineStore.INDEX);
  indexRoutingTableBuilder.addIndexShard(new IndexShardRoutingTable.Builder(new ShardId(PipelineStore.INDEX,0)).addShard(TestShardRouting.newShardRouting(PipelineStore.INDEX,0,"_node_id",null,null,true,ShardRoutingState.STARTED,1,new UnassignedInfo(UnassignedInfo.Reason.INDEX_CREATED,""))).build());
  indexRoutingTableBuilder.addReplica();
  routingTableBuilder.add(indexRoutingTableBuilder.build());
  csBuilder.metaData(metaDateBuilder);
  csBuilder.routingTable(routingTableBuilder.build());
  ClusterState cs=csBuilder.build();
  bootstrapper.clusterChanged(new ClusterChangedEvent("test",cs,cs));
  verify(store,times(1)).start();
  verify(store,never()).stop(Matchers.anyString());
  when(store.isStarted()).thenReturn(true);
  bootstrapper.clusterChanged(new ClusterChangedEvent("test",cs,cs));
  verify(store,times(1)).start();
  verify(store,never()).stop(Matchers.anyString());
}
