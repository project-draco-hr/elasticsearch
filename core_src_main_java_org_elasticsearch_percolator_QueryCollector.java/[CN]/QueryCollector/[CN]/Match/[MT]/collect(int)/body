{
  final Query query=getQuery(doc);
  if (query == null) {
    return;
  }
  Query existsQuery=query;
  if (isNestedDoc) {
    existsQuery=new BooleanQuery.Builder().add(existsQuery,Occur.MUST).add(Queries.newNonNestedFilter(),Occur.FILTER).build();
  }
  try {
    if (context.highlight() != null) {
      context.parsedQuery(new ParsedQuery(query));
      context.hitContext().cache().clear();
    }
    if (Lucene.exists(searcher,existsQuery)) {
      if (!limit || counter < size) {
        matches.add(BytesRef.deepCopyOf(current));
        if (context.highlight() != null) {
          highlightPhase.hitExecute(context,context.hitContext());
          hls.add(context.hitContext().hit().getHighlightFields());
        }
      }
      counter++;
      postMatch(doc);
    }
  }
 catch (  IOException e) {
    logger.warn("[" + current.utf8ToString() + "] failed to execute query",e);
  }
}
