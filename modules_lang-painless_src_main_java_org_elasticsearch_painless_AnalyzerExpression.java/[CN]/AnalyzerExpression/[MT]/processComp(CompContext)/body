{
  final ExpressionMetadata compemd=metadata.getExpressionMetadata(ctx);
  final boolean equality=ctx.EQ() != null || ctx.NE() != null;
  final boolean reference=ctx.EQR() != null || ctx.NER() != null;
  final ExpressionContext exprctx0=AnalyzerUtility.updateExpressionTree(ctx.expression(0));
  final ExpressionMetadata expremd0=metadata.createExpressionMetadata(exprctx0);
  analyzer.visit(exprctx0);
  final ExpressionContext exprctx1=AnalyzerUtility.updateExpressionTree(ctx.expression(1));
  final ExpressionMetadata expremd1=metadata.createExpressionMetadata(exprctx1);
  analyzer.visit(exprctx1);
  if (expremd0.isNull && expremd1.isNull) {
    throw new IllegalArgumentException(AnalyzerUtility.error(ctx) + "Unnecessary comparison of null constants.");
  }
  final Type promote=equality ? promoter.promoteEquality(expremd0.from,expremd1.from) : reference ? promoter.promoteReference(expremd0.from,expremd1.from) : promoter.promoteNumeric(expremd0.from,expremd1.from,true,true);
  if (promote == null) {
    throw new ClassCastException(AnalyzerUtility.error(ctx) + "Cannot apply [" + ctx.getChild(1).getText()+ "] "+ "operation to types ["+ expremd0.from.name+ "] and ["+ expremd1.from.name+ "].");
  }
  expremd0.to=promote;
  expremd1.to=promote;
  caster.markCast(expremd0);
  caster.markCast(expremd1);
  if (expremd0.postConst != null && expremd1.postConst != null) {
    final Sort sort=promote.sort;
    if (ctx.EQ() != null || ctx.EQR() != null) {
      if (sort == Sort.BOOL) {
        compemd.preConst=(boolean)expremd0.postConst == (boolean)expremd1.postConst;
      }
 else       if (sort == Sort.INT) {
        compemd.preConst=(int)expremd0.postConst == (int)expremd1.postConst;
      }
 else       if (sort == Sort.LONG) {
        compemd.preConst=(long)expremd0.postConst == (long)expremd1.postConst;
      }
 else       if (sort == Sort.FLOAT) {
        compemd.preConst=(float)expremd0.postConst == (float)expremd1.postConst;
      }
 else       if (sort == Sort.DOUBLE) {
        compemd.preConst=(double)expremd0.postConst == (double)expremd1.postConst;
      }
 else {
        if (ctx.EQ() != null && !expremd0.isNull && !expremd1.isNull) {
          compemd.preConst=expremd0.postConst.equals(expremd1.postConst);
        }
 else         if (ctx.EQR() != null) {
          compemd.preConst=expremd0.postConst == expremd1.postConst;
        }
 else {
          throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
        }
      }
    }
 else     if (ctx.NE() != null || ctx.NER() != null) {
      if (sort == Sort.BOOL) {
        compemd.preConst=(boolean)expremd0.postConst != (boolean)expremd1.postConst;
      }
 else       if (sort == Sort.INT) {
        compemd.preConst=(int)expremd0.postConst != (int)expremd1.postConst;
      }
 else       if (sort == Sort.LONG) {
        compemd.preConst=(long)expremd0.postConst != (long)expremd1.postConst;
      }
 else       if (sort == Sort.FLOAT) {
        compemd.preConst=(float)expremd0.postConst != (float)expremd1.postConst;
      }
 else       if (sort == Sort.DOUBLE) {
        compemd.preConst=(double)expremd0.postConst != (double)expremd1.postConst;
      }
 else {
        if (ctx.NE() != null && !expremd0.isNull && !expremd1.isNull) {
          compemd.preConst=expremd0.postConst.equals(expremd1.postConst);
        }
 else         if (ctx.NER() != null) {
          compemd.preConst=expremd0.postConst == expremd1.postConst;
        }
 else {
          throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
        }
      }
    }
 else     if (ctx.GTE() != null) {
      if (sort == Sort.INT) {
        compemd.preConst=(int)expremd0.postConst >= (int)expremd1.postConst;
      }
 else       if (sort == Sort.LONG) {
        compemd.preConst=(long)expremd0.postConst >= (long)expremd1.postConst;
      }
 else       if (sort == Sort.FLOAT) {
        compemd.preConst=(float)expremd0.postConst >= (float)expremd1.postConst;
      }
 else       if (sort == Sort.DOUBLE) {
        compemd.preConst=(double)expremd0.postConst >= (double)expremd1.postConst;
      }
 else {
        throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
      }
    }
 else     if (ctx.GT() != null) {
      if (sort == Sort.INT) {
        compemd.preConst=(int)expremd0.postConst > (int)expremd1.postConst;
      }
 else       if (sort == Sort.LONG) {
        compemd.preConst=(long)expremd0.postConst > (long)expremd1.postConst;
      }
 else       if (sort == Sort.FLOAT) {
        compemd.preConst=(float)expremd0.postConst > (float)expremd1.postConst;
      }
 else       if (sort == Sort.DOUBLE) {
        compemd.preConst=(double)expremd0.postConst > (double)expremd1.postConst;
      }
 else {
        throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
      }
    }
 else     if (ctx.LTE() != null) {
      if (sort == Sort.INT) {
        compemd.preConst=(int)expremd0.postConst <= (int)expremd1.postConst;
      }
 else       if (sort == Sort.LONG) {
        compemd.preConst=(long)expremd0.postConst <= (long)expremd1.postConst;
      }
 else       if (sort == Sort.FLOAT) {
        compemd.preConst=(float)expremd0.postConst <= (float)expremd1.postConst;
      }
 else       if (sort == Sort.DOUBLE) {
        compemd.preConst=(double)expremd0.postConst <= (double)expremd1.postConst;
      }
 else {
        throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
      }
    }
 else     if (ctx.LT() != null) {
      if (sort == Sort.INT) {
        compemd.preConst=(int)expremd0.postConst < (int)expremd1.postConst;
      }
 else       if (sort == Sort.LONG) {
        compemd.preConst=(long)expremd0.postConst < (long)expremd1.postConst;
      }
 else       if (sort == Sort.FLOAT) {
        compemd.preConst=(float)expremd0.postConst < (float)expremd1.postConst;
      }
 else       if (sort == Sort.DOUBLE) {
        compemd.preConst=(double)expremd0.postConst < (double)expremd1.postConst;
      }
 else {
        throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
      }
    }
 else {
      throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
    }
  }
  compemd.from=definition.booleanType;
  compemd.typesafe=expremd0.typesafe && expremd1.typesafe;
}
