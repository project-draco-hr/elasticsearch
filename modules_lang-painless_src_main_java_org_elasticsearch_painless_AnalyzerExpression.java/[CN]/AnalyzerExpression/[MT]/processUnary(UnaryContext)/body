{
  final ExpressionMetadata unaryemd=metadata.getExpressionMetadata(ctx);
  final ExpressionContext exprctx=AnalyzerUtility.updateExpressionTree(ctx.expression());
  final ExpressionMetadata expremd=metadata.createExpressionMetadata(exprctx);
  if (ctx.BOOLNOT() != null) {
    expremd.to=definition.booleanType;
    analyzer.visit(exprctx);
    caster.markCast(expremd);
    if (expremd.postConst != null) {
      unaryemd.preConst=!(boolean)expremd.postConst;
    }
    unaryemd.from=definition.booleanType;
  }
 else   if (ctx.BWNOT() != null || ctx.ADD() != null || ctx.SUB() != null) {
    analyzer.visit(exprctx);
    final Type promote=promoter.promoteNumeric(expremd.from,ctx.BWNOT() == null,true);
    if (promote == null) {
      throw new ClassCastException(AnalyzerUtility.error(ctx) + "Cannot apply [" + ctx.getChild(0).getText()+ "] "+ "operation to type ["+ expremd.from.name+ "].");
    }
    expremd.to=promote;
    caster.markCast(expremd);
    if (expremd.postConst != null) {
      final Sort sort=promote.sort;
      if (ctx.BWNOT() != null) {
        if (sort == Sort.INT) {
          unaryemd.preConst=~(int)expremd.postConst;
        }
 else         if (sort == Sort.LONG) {
          unaryemd.preConst=~(long)expremd.postConst;
        }
 else {
          throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
        }
      }
 else       if (ctx.SUB() != null) {
        if (exprctx instanceof NumericContext) {
          unaryemd.preConst=expremd.postConst;
        }
 else {
          if (sort == Sort.INT) {
            if (settings.getNumericOverflow()) {
              unaryemd.preConst=-(int)expremd.postConst;
            }
 else {
              unaryemd.preConst=Math.negateExact((int)expremd.postConst);
            }
          }
 else           if (sort == Sort.LONG) {
            if (settings.getNumericOverflow()) {
              unaryemd.preConst=-(long)expremd.postConst;
            }
 else {
              unaryemd.preConst=Math.negateExact((long)expremd.postConst);
            }
          }
 else           if (sort == Sort.FLOAT) {
            unaryemd.preConst=-(float)expremd.postConst;
          }
 else           if (sort == Sort.DOUBLE) {
            unaryemd.preConst=-(double)expremd.postConst;
          }
 else {
            throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
          }
        }
      }
 else       if (ctx.ADD() != null) {
        if (sort == Sort.INT) {
          unaryemd.preConst=+(int)expremd.postConst;
        }
 else         if (sort == Sort.LONG) {
          unaryemd.preConst=+(long)expremd.postConst;
        }
 else         if (sort == Sort.FLOAT) {
          unaryemd.preConst=+(float)expremd.postConst;
        }
 else         if (sort == Sort.DOUBLE) {
          unaryemd.preConst=+(double)expremd.postConst;
        }
 else {
          throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
        }
      }
 else {
        throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
      }
    }
    unaryemd.from=promote;
    unaryemd.typesafe=expremd.typesafe;
  }
 else {
    throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected state.");
  }
}
