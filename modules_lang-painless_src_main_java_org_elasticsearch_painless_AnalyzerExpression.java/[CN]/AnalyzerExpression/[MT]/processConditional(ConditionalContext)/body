{
  final ExpressionMetadata condemd=metadata.getExpressionMetadata(ctx);
  final ExpressionContext exprctx0=AnalyzerUtility.updateExpressionTree(ctx.expression(0));
  final ExpressionMetadata expremd0=metadata.createExpressionMetadata(exprctx0);
  expremd0.to=definition.booleanType;
  analyzer.visit(exprctx0);
  caster.markCast(expremd0);
  if (expremd0.postConst != null) {
    throw new IllegalArgumentException(AnalyzerUtility.error(ctx) + "Unnecessary conditional statement.");
  }
  final ExpressionContext exprctx1=AnalyzerUtility.updateExpressionTree(ctx.expression(1));
  final ExpressionMetadata expremd1=metadata.createExpressionMetadata(exprctx1);
  expremd1.to=condemd.to;
  expremd1.explicit=condemd.explicit;
  analyzer.visit(exprctx1);
  final ExpressionContext exprctx2=AnalyzerUtility.updateExpressionTree(ctx.expression(2));
  final ExpressionMetadata expremd2=metadata.createExpressionMetadata(exprctx2);
  expremd2.to=condemd.to;
  expremd2.explicit=condemd.explicit;
  analyzer.visit(exprctx2);
  if (condemd.to == null) {
    final Type promote=promoter.promoteConditional(expremd1.from,expremd2.from,expremd1.preConst,expremd2.preConst);
    expremd1.to=promote;
    expremd2.to=promote;
    condemd.from=promote;
  }
 else {
    condemd.from=condemd.to;
  }
  caster.markCast(expremd1);
  caster.markCast(expremd2);
  condemd.typesafe=expremd0.typesafe && expremd1.typesafe;
}
