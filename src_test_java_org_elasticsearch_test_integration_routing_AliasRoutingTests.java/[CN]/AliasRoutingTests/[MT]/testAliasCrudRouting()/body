{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  client.admin().indices().prepareCreate("test").execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  client.admin().indices().prepareAliases().addAliasAction(newAddAliasAction("test","alias0").routing("0")).execute().actionGet();
  logger.info("--> indexing with id [1], and routing [0] using alias");
  client.prepareIndex("alias0","type1","1").setSource("field","value1").setRefresh(true).execute().actionGet();
  logger.info("--> verifying get with no routing, should not find anything");
  for (int i=0; i < 5; i++) {
    assertThat(client.prepareGet("test","type1","1").execute().actionGet().exists(),equalTo(false));
  }
  logger.info("--> verifying get with routing, should find");
  for (int i=0; i < 5; i++) {
    assertThat(client.prepareGet("test","type1","1").setRouting("0").execute().actionGet().exists(),equalTo(true));
  }
  logger.info("--> verifying get with routing alias, should find");
  for (int i=0; i < 5; i++) {
    assertThat(client.prepareGet("alias0","type1","1").execute().actionGet().exists(),equalTo(true));
  }
  logger.info("--> deleting with no routing, should not delete anything");
  client.prepareDelete("test","type1","1").setRefresh(true).execute().actionGet();
  for (int i=0; i < 5; i++) {
    assertThat(client.prepareGet("test","type1","1").execute().actionGet().exists(),equalTo(false));
    assertThat(client.prepareGet("test","type1","1").setRouting("0").execute().actionGet().exists(),equalTo(true));
    assertThat(client.prepareGet("alias0","type1","1").execute().actionGet().exists(),equalTo(true));
  }
  logger.info("--> deleting with routing alias, should delete");
  client.prepareDelete("alias0","type1","1").setRefresh(true).execute().actionGet();
  for (int i=0; i < 5; i++) {
    assertThat(client.prepareGet("test","type1","1").execute().actionGet().exists(),equalTo(false));
    assertThat(client.prepareGet("test","type1","1").setRouting("0").execute().actionGet().exists(),equalTo(false));
    assertThat(client.prepareGet("alias0","type1","1").execute().actionGet().exists(),equalTo(false));
  }
  logger.info("--> indexing with id [1], and routing [0] using alias");
  client.prepareIndex("alias0","type1","1").setSource("field","value1").setRefresh(true).execute().actionGet();
  logger.info("--> verifying get with no routing, should not find anything");
  for (int i=0; i < 5; i++) {
    assertThat(client.prepareGet("test","type1","1").execute().actionGet().exists(),equalTo(false));
  }
  logger.info("--> verifying get with routing, should find");
  for (int i=0; i < 5; i++) {
    assertThat(client.prepareGet("test","type1","1").setRouting("0").execute().actionGet().exists(),equalTo(true));
    assertThat(client.prepareGet("alias0","type1","1").execute().actionGet().exists(),equalTo(true));
  }
  logger.info("--> deleting_by_query with 1 as routing, should not delete anything");
  client.prepareDeleteByQuery().setQuery(matchAllQuery()).setRouting("1").execute().actionGet();
  client.admin().indices().prepareRefresh().execute().actionGet();
  for (int i=0; i < 5; i++) {
    assertThat(client.prepareGet("test","type1","1").execute().actionGet().exists(),equalTo(false));
    assertThat(client.prepareGet("test","type1","1").setRouting("0").execute().actionGet().exists(),equalTo(true));
    assertThat(client.prepareGet("alias0","type1","1").execute().actionGet().exists(),equalTo(true));
  }
  logger.info("--> deleting_by_query with alias0, should delete");
  client.prepareDeleteByQuery("alias0").setQuery(matchAllQuery()).execute().actionGet();
  client.admin().indices().prepareRefresh().execute().actionGet();
  for (int i=0; i < 5; i++) {
    assertThat(client.prepareGet("test","type1","1").execute().actionGet().exists(),equalTo(false));
    assertThat(client.prepareGet("test","type1","1").setRouting("0").execute().actionGet().exists(),equalTo(false));
    assertThat(client.prepareGet("alias0","type1","1").execute().actionGet().exists(),equalTo(false));
  }
}
