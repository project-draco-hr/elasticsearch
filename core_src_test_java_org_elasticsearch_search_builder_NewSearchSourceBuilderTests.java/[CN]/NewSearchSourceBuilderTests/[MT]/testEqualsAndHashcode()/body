{
  SearchSourceBuilder firstBuilder=createSearchSourceBuilder();
  assertFalse("query is equal to null",firstBuilder.equals(null));
  assertFalse("query is equal to incompatible type",firstBuilder.equals(""));
  assertTrue("query is not equal to self",firstBuilder.equals(firstBuilder));
  assertThat("same query's hashcode returns different values if called multiple times",firstBuilder.hashCode(),equalTo(firstBuilder.hashCode()));
  SearchSourceBuilder secondBuilder=copyBuilder(firstBuilder);
  assertTrue("query is not equal to self",secondBuilder.equals(secondBuilder));
  assertTrue("query is not equal to its copy",firstBuilder.equals(secondBuilder));
  assertTrue("equals is not symmetric",secondBuilder.equals(firstBuilder));
  assertThat("query copy's hashcode is different from original hashcode",secondBuilder.hashCode(),equalTo(firstBuilder.hashCode()));
  SearchSourceBuilder thirdBuilder=copyBuilder(secondBuilder);
  assertTrue("query is not equal to self",thirdBuilder.equals(thirdBuilder));
  assertTrue("query is not equal to its copy",secondBuilder.equals(thirdBuilder));
  assertThat("query copy's hashcode is different from original hashcode",secondBuilder.hashCode(),equalTo(thirdBuilder.hashCode()));
  assertTrue("equals is not transitive",firstBuilder.equals(thirdBuilder));
  assertThat("query copy's hashcode is different from original hashcode",firstBuilder.hashCode(),equalTo(thirdBuilder.hashCode()));
  assertTrue("equals is not symmetric",thirdBuilder.equals(secondBuilder));
  assertTrue("equals is not symmetric",thirdBuilder.equals(firstBuilder));
}
