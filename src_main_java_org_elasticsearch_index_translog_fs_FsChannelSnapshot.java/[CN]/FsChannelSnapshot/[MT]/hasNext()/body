{
  try {
    if (position > length) {
      return false;
    }
    if (cacheBuffer == null) {
      cacheBuffer=ByteBuffer.allocate(1024);
    }
    cacheBuffer.limit(4);
    int bytesRead=channel.read(cacheBuffer,position);
    if (bytesRead < 4) {
      return false;
    }
    cacheBuffer.flip();
    int opSize=cacheBuffer.getInt();
    position+=4;
    if ((position + opSize) > length) {
      position-=4;
      return false;
    }
    if (cacheBuffer.capacity() < opSize) {
      cacheBuffer=ByteBuffer.allocate(opSize);
    }
    cacheBuffer.clear();
    cacheBuffer.limit(opSize);
    channel.read(cacheBuffer,position);
    cacheBuffer.flip();
    position+=opSize;
    lastOperationRead=TranslogStreams.readTranslogOperation(new BytesStreamInput(cacheBuffer.array(),0,opSize,true));
    return true;
  }
 catch (  Exception e) {
    return false;
  }
}
