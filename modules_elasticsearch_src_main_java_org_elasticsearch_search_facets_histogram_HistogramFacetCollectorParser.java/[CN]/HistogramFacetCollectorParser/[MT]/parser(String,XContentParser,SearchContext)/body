{
  String field=null;
  String fieldName=null;
  long interval=-1;
  HistogramFacet.ComparatorType comparatorType=HistogramFacet.ComparatorType.VALUE;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      fieldName=parser.currentName();
    }
 else     if (token.isValue()) {
      if ("field".equals(fieldName)) {
        field=parser.text();
      }
 else       if ("interval".equals(fieldName)) {
        interval=parser.longValue();
      }
 else       if ("comparator".equals(fieldName)) {
        comparatorType=HistogramFacet.ComparatorType.fromString(parser.text());
      }
    }
  }
  if (interval == -1) {
    throw new FacetPhaseExecutionException(facetName,"[interval] is required to be set for histogram facet");
  }
  if (interval < 0) {
    throw new FacetPhaseExecutionException(facetName,"[interval] is required to be positive for histogram facet");
  }
  return new HistogramFacetCollector(facetName,field,interval,comparatorType,context.fieldDataCache(),context.mapperService());
}
