{
  createIndex("test");
  final boolean routing=randomBoolean();
  long version=compatibilityVersion().onOrAfter(Version.V_1_2_0) ? Versions.MATCH_ANY_PRE_1_2_0 : Versions.MATCH_ANY;
  int numDocs=randomIntBetween(10,20);
  for (int i=0; i < numDocs; i++) {
    String id=Integer.toString(i);
    String routingKey=routing ? randomRealisticUnicodeOfLength(10) : null;
    client().prepareIndex("test","type1",id).setRouting(routingKey).setVersion(1).setVersionType(VersionType.EXTERNAL).setSource("field1",English.intToEnglish(i)).get();
    GetResponse get=client().prepareGet("test","type1",id).setRouting(routingKey).setVersion(version).get();
    assertThat("Document with ID " + id + " should exist but doesn't",get.isExists(),is(true));
    assertThat(get.getVersion(),equalTo(1l));
    client().prepareIndex("test","type1",id).setRouting(routingKey).setVersion(2).setVersionType(VersionType.EXTERNAL).setSource("field1",English.intToEnglish(i)).get();
    get=client().prepareGet("test","type1",id).setRouting(routingKey).setVersion(version).get();
    assertThat("Document with ID " + id + " should exist but doesn't",get.isExists(),is(true));
    assertThat(get.getVersion(),equalTo(2l));
  }
}
