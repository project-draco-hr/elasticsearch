{
  assertAcked(prepareCreate("test").addMapping("test",XContentFactory.jsonBuilder().startObject().startObject("test").startObject("_routing").field("required",true).endObject().endObject().endObject()));
  ensureYellow("test");
  int numDocs=iterations(10,50);
  IndexRequestBuilder[] indexRequestBuilders=new IndexRequestBuilder[numDocs];
  for (int i=0; i < numDocs - 2; i++) {
    indexRequestBuilders[i]=client().prepareIndex("test","test",Integer.toString(i)).setRouting(randomAsciiOfLength(randomIntBetween(1,10))).setSource("field","value");
  }
  String firstDocId=Integer.toString(numDocs - 2);
  indexRequestBuilders[numDocs - 2]=client().prepareIndex("test","test",firstDocId).setRouting("routing").setSource("field","value");
  String secondDocId=Integer.toString(numDocs - 1);
  String secondRouting=randomAsciiOfLength(randomIntBetween(1,10));
  indexRequestBuilders[numDocs - 1]=client().prepareIndex("test","test",secondDocId).setRouting(secondRouting).setSource("field","value");
  indexRandom(true,indexRequestBuilders);
  SearchResponse searchResponse=client().prepareSearch("test").get();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo((long)numDocs));
  DeleteResponse deleteResponse=client().prepareDelete("test","test",firstDocId).setRouting("routing").get();
  assertThat(deleteResponse.isFound(),equalTo(true));
  GetResponse getResponse=client().prepareGet("test","test",firstDocId).setRouting("routing").get();
  assertThat(getResponse.isExists(),equalTo(false));
  refresh();
  searchResponse=client().prepareSearch("test").get();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo((long)numDocs - 1));
  deleteResponse=client().prepareDelete("test","test",secondDocId).get();
  assertThat(deleteResponse.isFound(),equalTo(true));
  getResponse=client().prepareGet("test","test",secondDocId).setRouting(secondRouting).get();
  assertThat(getResponse.isExists(),equalTo(false));
  refresh();
  searchResponse=client().prepareSearch("test").setSize(numDocs).get();
  assertNoFailures(searchResponse);
  for (  SearchHit searchHit : searchResponse.getHits()) {
    logger.debug("searchHit {}/{}/{}",searchHit.getIndex(),searchHit.getType(),searchHit.getId());
  }
  assertThat(searchResponse.getHits().totalHits(),equalTo((long)numDocs - 2));
}
