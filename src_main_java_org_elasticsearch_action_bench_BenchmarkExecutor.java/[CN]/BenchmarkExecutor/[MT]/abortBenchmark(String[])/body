{
synchronized (activeStateLock) {
    for (    String name : names) {
      try {
        final BenchmarkState state=activeBenchmarks.get(name);
        if (state == null) {
          continue;
        }
        state.semaphore.stop();
        activeBenchmarks=ImmutableOpenMap.builder(activeBenchmarks).fRemove(name).build();
        logger.debug("Aborted benchmark [{}] on [{}]",name,nodeName());
      }
 catch (      Throwable e) {
        logger.warn("Error while aborting [{}]",name,e);
      }
    }
  }
  return new AbortBenchmarkResponse(true);
}
