{
  XContentParser.Token token;
  String parameterName=null;
  double scale=0;
  double reference=0;
  double scaleWeight=0.5;
  boolean scaleFound=false;
  boolean refFound=false;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      parameterName=parser.currentName();
    }
 else     if (parameterName.equals(DecayFunctionBuilder.SCALE)) {
      scale=parser.doubleValue();
      scaleFound=true;
    }
 else     if (parameterName.equals(DecayFunctionBuilder.SCALE_WEIGHT)) {
      scaleWeight=parser.doubleValue();
    }
 else     if (parameterName.equals(DecayFunctionBuilder.REFERNECE)) {
      reference=parser.doubleValue();
      refFound=true;
    }
 else {
      throw new ElasticSearchParseException("Parameter " + parameterName + " not supported!");
    }
  }
  if (!scaleFound || !refFound) {
    throw new ElasticSearchParseException("Both " + DecayFunctionBuilder.SCALE + "and "+ DecayFunctionBuilder.REFERNECE+ " must be set for numeric fields.");
  }
  IndexNumericFieldData<?> numericFieldData=parseContext.fieldData().getForField(mapper);
  return new NumericFieldDataScoreFunction(reference,scale,scaleWeight,getDecayFunction(),numericFieldData);
}
