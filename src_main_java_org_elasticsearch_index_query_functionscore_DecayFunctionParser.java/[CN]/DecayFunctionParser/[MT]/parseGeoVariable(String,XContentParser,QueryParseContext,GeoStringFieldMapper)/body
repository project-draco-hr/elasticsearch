{
  XContentParser.Token token;
  String parameterName=null;
  GeoPoint reference=new GeoPoint();
  String scaleString="1km";
  double scaleWeight=0.5;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      parameterName=parser.currentName();
    }
 else     if (parameterName.equals(DecayFunctionBuilder.SCALE)) {
      scaleString=parser.text();
    }
 else     if (parameterName.equals(DecayFunctionBuilder.REFERNECE)) {
      reference=GeoPoint.parse(parser);
    }
 else     if (parameterName.equals(DecayFunctionBuilder.SCALE_WEIGHT)) {
      scaleWeight=parser.doubleValue();
    }
 else {
      throw new ElasticSearchParseException("Parameter " + parameterName + " not supported!");
    }
  }
  if (reference == null) {
    throw new ElasticSearchParseException(DecayFunctionBuilder.REFERNECE + "must be set for geo fields.");
  }
  double scale=DistanceUnit.parse(scaleString,DistanceUnit.METERS,DistanceUnit.METERS);
  IndexGeoPointFieldData<?> indexFieldData=parseContext.fieldData().getForField(mapper);
  return new GeoFieldDataScoreFunction(reference,scale,scaleWeight,getDecayFunction(),indexFieldData);
}
