{
  final int numberOfRuns=10;
  final int numIndices=5 * 365;
  final int numShards=6;
  final int numReplicas=2;
  final int numberOfNodes=30;
  final int numberOfTags=2;
  AllocationService strategy=new AllocationService(settingsBuilder().build());
  MetaData.Builder mb=MetaData.builder();
  for (int i=1; i <= numIndices; i++) {
    mb.put(IndexMetaData.builder("test_" + i).numberOfShards(numShards).numberOfReplicas(numReplicas));
  }
  MetaData metaData=mb.build();
  RoutingTable.Builder rb=RoutingTable.builder();
  for (int i=1; i <= numIndices; i++) {
    rb.addAsNew(metaData.index("test_" + i));
  }
  RoutingTable routingTable=rb.build();
  DiscoveryNodes.Builder nb=DiscoveryNodes.builder();
  for (int i=1; i <= numberOfNodes; i++) {
    nb.put(newNode("node" + i,ImmutableMap.of("tag","tag_" + (i % numberOfTags))));
  }
  ClusterState initialClusterState=ClusterState.builder().metaData(metaData).routingTable(routingTable).nodes(nb).build();
  long start=System.currentTimeMillis();
  for (int i=0; i < numberOfRuns; i++) {
    logger.info("[{}] starting... ",i);
    long runStart=System.currentTimeMillis();
    ClusterState clusterState=initialClusterState;
    while (clusterState.readOnlyRoutingNodes().hasUnassignedShards()) {
      logger.info("[{}] remaining unassigned {}",i,clusterState.readOnlyRoutingNodes().unassigned().size());
      RoutingAllocation.Result result=strategy.applyStartedShards(clusterState,clusterState.readOnlyRoutingNodes().shardsWithState(INITIALIZING));
      clusterState=ClusterState.builder(clusterState).routingResult(result).build();
      result=strategy.reroute(clusterState);
      clusterState=ClusterState.builder(clusterState).routingResult(result).build();
    }
    logger.info("[{}] took {}",i,TimeValue.timeValueMillis(System.currentTimeMillis() - runStart));
  }
  long took=System.currentTimeMillis() - start;
  logger.info("total took {}, AVG {}",TimeValue.timeValueMillis(took),TimeValue.timeValueMillis(took / numberOfRuns));
}
