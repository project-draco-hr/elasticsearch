{
  builder.startObject(Fields.OS);
  builder.field(Fields.REFRESH_INTERVAL,refreshInterval);
  builder.field(Fields.AVAILABLE_PROCESSORS,availableProcessors);
  if (cpu != null) {
    builder.startObject(Fields.CPU);
    builder.field(Fields.VENDOR,cpu.vendor());
    builder.field(Fields.MODEL,cpu.model());
    builder.field(Fields.MHZ,cpu.mhz());
    builder.field(Fields.TOTAL_CORES,cpu.totalCores());
    builder.field(Fields.TOTAL_SOCKETS,cpu.totalSockets());
    builder.field(Fields.CORES_PER_SOCKET,cpu.coresPerSocket());
    builder.byteSizeField(Fields.CACHE_SIZE_IN_BYTES,Fields.CACHE_SIZE,cpu.cacheSize);
    builder.endObject();
  }
  if (mem != null) {
    builder.startObject(Fields.MEM);
    builder.byteSizeField(Fields.TOTAL_IN_BYTES,Fields.TOTAL,mem.total);
    builder.endObject();
  }
  if (swap != null) {
    builder.startObject(Fields.SWAP);
    builder.byteSizeField(Fields.TOTAL_IN_BYTES,Fields.TOTAL,swap.total);
    builder.endObject();
  }
  builder.endObject();
  return builder;
}
