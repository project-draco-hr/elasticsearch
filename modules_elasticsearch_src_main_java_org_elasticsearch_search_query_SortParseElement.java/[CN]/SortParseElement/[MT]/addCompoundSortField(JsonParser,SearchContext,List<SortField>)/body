{
  JsonToken token;
  while ((token=jp.nextToken()) != JsonToken.END_OBJECT) {
    if (token == JsonToken.FIELD_NAME) {
      String fieldName=jp.getCurrentName();
      boolean reverse=false;
      String innerJsonName=null;
      int type=-1;
      while ((token=jp.nextToken()) != JsonToken.END_OBJECT) {
        if (token == JsonToken.FIELD_NAME) {
          innerJsonName=jp.getCurrentName();
        }
 else         if (token == JsonToken.VALUE_STRING) {
          if ("type".equals(innerJsonName)) {
            type=sortFieldTypesMapper.get(jp.getText());
            if (type == -1) {
              throw new SearchParseException(context,"No sort type for [" + jp.getText() + "] with field ["+ fieldName+ "]");
            }
          }
 else           if ("reverse".equals(innerJsonName)) {
            reverse=Booleans.parseBoolean(jp.getText(),reverse);
          }
        }
 else         if (token == JsonToken.VALUE_NUMBER_INT) {
          if ("reverse".equals(innerJsonName)) {
            reverse=jp.getIntValue() != 0;
          }
        }
 else         if (token == JsonToken.VALUE_TRUE) {
          if ("reverse".equals(innerJsonName)) {
            reverse=true;
          }
        }
      }
      addSortField(context,sortFields,fieldName,reverse,type);
    }
  }
}
