{
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      String fieldName=parser.currentName();
      boolean reverse=false;
      String innerJsonName=null;
      int type=-1;
      token=parser.nextToken();
      if (token == XContentParser.Token.VALUE_STRING) {
        String direction=parser.text();
        if (direction.equals("asc")) {
          if ("score".equals(fieldName)) {
            reverse=true;
          }
 else {
            reverse=false;
          }
        }
 else         if (direction.equals("desc")) {
          if ("score".equals(fieldName)) {
            reverse=false;
          }
 else {
            reverse=true;
          }
        }
      }
 else {
        while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
          if (token == XContentParser.Token.FIELD_NAME) {
            innerJsonName=parser.currentName();
          }
 else           if (token == XContentParser.Token.VALUE_STRING) {
            if ("type".equals(innerJsonName)) {
              type=sortFieldTypesMapper.get(parser.text());
              if (type == -1) {
                throw new SearchParseException(context,"No sort type for [" + parser.text() + "] with field ["+ fieldName+ "]");
              }
            }
 else             if ("reverse".equals(innerJsonName)) {
              reverse=Booleans.parseBoolean(parser.text(),reverse);
            }
          }
 else           if (token.isValue()) {
            if ("reverse".equals(innerJsonName)) {
              reverse=parser.booleanValue();
            }
          }
        }
      }
      addSortField(context,sortFields,fieldName,reverse,type);
    }
  }
}
