{
  if (client != null) {
    return client;
  }
  ClientConfiguration clientConfiguration=new ClientConfiguration();
  String protocol=componentSettings.get("protocol","http").toLowerCase();
  if ("http".equals(protocol)) {
    clientConfiguration.setProtocol(Protocol.HTTP);
  }
 else   if ("https".equals(protocol)) {
    clientConfiguration.setProtocol(Protocol.HTTPS);
  }
 else {
    throw new ElasticSearchIllegalArgumentException("No protocol supported [" + protocol + "], can either be [http] or [https]");
  }
  String account=componentSettings.get("access_key",settings.get("cloud.account"));
  String key=componentSettings.get("secret_key",settings.get("cloud.key"));
  if (account == null) {
    throw new ElasticSearchIllegalArgumentException("No s3 access_key defined for s3 gateway");
  }
  if (key == null) {
    throw new ElasticSearchIllegalArgumentException("No s3 secret_key defined for s3 gateway");
  }
  this.client=new AmazonS3Client(new BasicAWSCredentials(account,key),clientConfiguration);
  if (componentSettings.get("s3.endpoint") != null) {
    client.setEndpoint(componentSettings.get("s3.endpoint"));
  }
 else   if (componentSettings.get("region") != null) {
    String endpoint;
    String region=componentSettings.get("region");
    if ("us-east".equals(region.toLowerCase())) {
      endpoint="s3.amazonaws.com";
    }
 else     if ("us-east-1".equals(region.toLowerCase())) {
      endpoint="s3.amazonaws.com";
    }
 else     if ("us-west".equals(region.toLowerCase())) {
      endpoint="s3-us-west-1.amazonaws.com";
    }
 else     if ("us-west-1".equals(region.toLowerCase())) {
      endpoint="s3-us-west-1.amazonaws.com";
    }
 else     if ("ap-southeast".equals(region.toLowerCase())) {
      endpoint="s3-ap-southeast-1.amazonaws.com";
    }
 else     if ("ap-southeast-1".equals(region.toLowerCase())) {
      endpoint="s3-ap-southeast-1.amazonaws.com";
    }
 else     if ("eu-west".equals(region.toLowerCase())) {
      endpoint=null;
    }
 else     if ("eu-west-1".equals(region.toLowerCase())) {
      endpoint=null;
    }
 else {
      throw new ElasticSearchIllegalArgumentException("No automatic endpoint could be derived from region [" + region + "]");
    }
    client.setEndpoint(endpoint);
  }
  return this.client;
}
