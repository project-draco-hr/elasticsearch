{
  String[] randomArrayValues=generateRandomStringArray(10,20,false);
  List<String> randomList=Arrays.asList(generateRandomStringArray(10,20,false));
  String template="{{data.array.size}} {{data.list.size}}";
  CompiledScript mustache=new CompiledScript(ScriptService.ScriptType.INLINE,"inline","mustache",engine.compile(template,Collections.emptyMap()));
  Map<String,Object> data=new HashMap<>();
  data.put("array",randomArrayValues);
  data.put("list",randomList);
  Map<String,Object> vars=new HashMap<>();
  vars.put("data",data);
  Object output=engine.executable(mustache,vars).run();
  assertThat(output,notNullValue());
  assertThat(output,instanceOf(BytesReference.class));
  BytesReference bytes=(BytesReference)output;
  String expectedString=String.format(Locale.ROOT,"%s %s",randomArrayValues.length,randomList.size());
  assertThat(bytes.toUtf8(),equalTo(expectedString));
}
