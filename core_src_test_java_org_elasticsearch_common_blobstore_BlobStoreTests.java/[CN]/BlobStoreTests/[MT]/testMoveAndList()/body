{
  final BlobStore store=newBlobStore();
  final BlobContainer container=store.blobContainer(new BlobPath());
  assertThat(container.listBlobs().size(),equalTo(0));
  int numberOfFooBlobs=randomIntBetween(0,10);
  int numberOfBarBlobs=randomIntBetween(3,20);
  Map<String,Long> generatedBlobs=new HashMap<>();
  for (int i=0; i < numberOfFooBlobs; i++) {
    int length=randomIntBetween(10,100);
    String name="foo-" + i + "-";
    generatedBlobs.put(name,(long)length);
    createRandomBlob(container,name,length);
  }
  for (int i=1; i < numberOfBarBlobs; i++) {
    int length=randomIntBetween(10,100);
    String name="bar-" + i + "-";
    generatedBlobs.put(name,(long)length);
    createRandomBlob(container,name,length);
  }
  int length=randomIntBetween(10,100);
  String name="bar-0-";
  generatedBlobs.put(name,(long)length);
  byte[] data=createRandomBlob(container,name,length);
  Map<String,BlobMetaData> blobs=container.listBlobs();
  assertThat(blobs.size(),equalTo(numberOfFooBlobs + numberOfBarBlobs));
  for (  Map.Entry<String,Long> generated : generatedBlobs.entrySet()) {
    BlobMetaData blobMetaData=blobs.get(generated.getKey());
    assertThat(generated.getKey(),blobMetaData,notNullValue());
    assertThat(blobMetaData.name(),equalTo(generated.getKey()));
    assertThat(blobMetaData.length(),equalTo(generated.getValue()));
  }
  assertThat(container.listBlobsByPrefix("foo-").size(),equalTo(numberOfFooBlobs));
  assertThat(container.listBlobsByPrefix("bar-").size(),equalTo(numberOfBarBlobs));
  assertThat(container.listBlobsByPrefix("baz-").size(),equalTo(0));
  String newName="bar-new";
  container.move(name,newName);
  assertThat(container.listBlobsByPrefix(name).size(),equalTo(0));
  blobs=container.listBlobsByPrefix(newName);
  assertThat(blobs.size(),equalTo(1));
  assertThat(blobs.get(newName).length(),equalTo(generatedBlobs.get(name)));
  assertThat(data,equalTo(readBlobFully(container,newName,length)));
  store.close();
}
