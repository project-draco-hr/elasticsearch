{
  ContextAndHeaderHolder contextAndHeaders=new ContextAndHeaderHolder();
  Settings settings=Settings.builder().put("script.engine." + MockScriptEngine.NAME + ".file.aggs",false).put("script.engine." + MockScriptEngine.NAME + ".file.search",false).put("script.engine." + MockScriptEngine.NAME + ".file.mapping",false).put("script.engine." + MockScriptEngine.NAME + ".file.update",false).build();
  ScriptService scriptService=makeScriptService(settings);
  Script script=new Script("script1",ScriptService.ScriptType.FILE,MockScriptEngine.NAME,null);
  for (  ScriptContext context : ScriptContext.Standard.values()) {
    try {
      scriptService.compile(script,context,contextAndHeaders);
      fail(context.getKey() + " script should have been rejected");
    }
 catch (    Exception e) {
      assertTrue(e.getMessage(),e.getMessage().contains("scripts of type [file], operation [" + context.getKey() + "] and lang ["+ MockScriptEngine.NAME+ "] are disabled"));
    }
  }
}
