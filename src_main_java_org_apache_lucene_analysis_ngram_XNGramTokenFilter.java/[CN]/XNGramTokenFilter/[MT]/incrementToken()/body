{
  while (true) {
    if (curTermBuffer == null) {
      if (!input.incrementToken()) {
        return false;
      }
 else {
        curTermBuffer=termAtt.buffer().clone();
        curTermLength=termAtt.length();
        curGramSize=minGram;
        curPos=0;
        curPosInc=posIncAtt.getPositionIncrement();
        curPosLen=posLenAtt.getPositionLength();
        tokStart=offsetAtt.startOffset();
        tokEnd=offsetAtt.endOffset();
        hasIllegalOffsets=(tokStart + curTermLength) != tokEnd;
      }
    }
    if (version.onOrAfter(Version.LUCENE_42)) {
      if (curGramSize > maxGram || curPos + curGramSize > curTermLength) {
        ++curPos;
        curGramSize=minGram;
      }
      if (curPos + curGramSize <= curTermLength) {
        clearAttributes();
        termAtt.copyBuffer(curTermBuffer,curPos,curGramSize);
        posIncAtt.setPositionIncrement(curPosInc);
        curPosInc=0;
        posLenAtt.setPositionLength(curPosLen);
        offsetAtt.setOffset(tokStart,tokEnd);
        curGramSize++;
        return true;
      }
    }
 else {
      while (curGramSize <= maxGram) {
        while (curPos + curGramSize <= curTermLength) {
          clearAttributes();
          termAtt.copyBuffer(curTermBuffer,curPos,curGramSize);
          if (hasIllegalOffsets) {
            offsetAtt.setOffset(tokStart,tokEnd);
          }
 else {
            offsetAtt.setOffset(tokStart + curPos,tokStart + curPos + curGramSize);
          }
          curPos++;
          return true;
        }
        curGramSize++;
        curPos=0;
      }
    }
    curTermBuffer=null;
  }
}
