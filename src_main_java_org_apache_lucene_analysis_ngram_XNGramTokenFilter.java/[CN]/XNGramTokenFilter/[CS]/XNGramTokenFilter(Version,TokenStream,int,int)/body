{
  super(new LengthFilter(true,input,minGram,Integer.MAX_VALUE));
  this.version=version;
  if (minGram < 1) {
    throw new IllegalArgumentException("minGram must be greater than zero");
  }
  if (minGram > maxGram) {
    throw new IllegalArgumentException("minGram must not be greater than maxGram");
  }
  this.minGram=minGram;
  this.maxGram=maxGram;
  if (version.onOrAfter(Version.LUCENE_42)) {
    posIncAtt=addAttribute(PositionIncrementAttribute.class);
    posLenAtt=addAttribute(PositionLengthAttribute.class);
  }
 else {
    posIncAtt=new PositionIncrementAttribute(){
      @Override public void setPositionIncrement(      int positionIncrement){
      }
      @Override public int getPositionIncrement(){
        return 0;
      }
    }
;
    posLenAtt=new PositionLengthAttribute(){
      @Override public void setPositionLength(      int positionLength){
      }
      @Override public int getPositionLength(){
        return 0;
      }
    }
;
  }
}
