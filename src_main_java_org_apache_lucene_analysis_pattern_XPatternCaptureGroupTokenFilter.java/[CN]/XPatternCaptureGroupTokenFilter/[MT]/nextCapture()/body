{
  int min_offset=Integer.MAX_VALUE;
  currentMatcher=-1;
  Matcher matcher;
  for (int i=0; i < matchers.length; i++) {
    matcher=matchers[i];
    if (currentGroup[i] == -1) {
      currentGroup[i]=matcher.find() ? 1 : 0;
    }
    if (currentGroup[i] != 0) {
      while (currentGroup[i] < groupCounts[i] + 1) {
        final int start=matcher.start(currentGroup[i]);
        final int end=matcher.end(currentGroup[i]);
        if (start == end || preserveOriginal && start == 0 && spare.length == end) {
          currentGroup[i]++;
          continue;
        }
        if (start < min_offset) {
          min_offset=start;
          currentMatcher=i;
        }
        break;
      }
      if (currentGroup[i] == groupCounts[i] + 1) {
        currentGroup[i]=-1;
        i--;
      }
    }
  }
  return currentMatcher != -1;
}
