{
  Directory dir=newDirectory();
  IndexWriterConfig iwc=newIndexWriterConfig(new MockAnalyzer(random()));
  iwc.setMergePolicy(newLogMergePolicy());
  RandomIndexWriter iw=new RandomIndexWriter(random(),dir,iwc);
  FieldType offsetsType=new FieldType(TextField.TYPE_STORED);
  offsetsType.setIndexOptions(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);
  Field body=new Field("body","",offsetsType);
  final String firstValue="This is a test. Just a test highlighting from postings highlighter.";
  Document doc=new Document();
  doc.add(body);
  body.setStringValue(firstValue);
  final String secondValue="This is the second value to perform highlighting on.";
  Field body2=new Field("body","",offsetsType);
  doc.add(body2);
  body2.setStringValue(secondValue);
  final String thirdValue="This is the third value to test highlighting with postings.";
  Field body3=new Field("body","",offsetsType);
  doc.add(body3);
  body3.setStringValue(thirdValue);
  iw.addDocument(doc);
  IndexReader ir=iw.getReader();
  iw.close();
  List<Object> fieldValues=new ArrayList<>();
  fieldValues.add(firstValue);
  fieldValues.add(secondValue);
  fieldValues.add(thirdValue);
  IndexSearcher searcher=newSearcher(ir);
  Query query=new TermQuery(new Term("body","highlighting"));
  BytesRef[] queryTerms=filterTerms(extractTerms(searcher,query),"body",true);
  TopDocs topDocs=searcher.search(query,10,Sort.INDEXORDER);
  assertThat(topDocs.totalHits,equalTo(1));
  int docId=topDocs.scoreDocs[0].doc;
  CustomPostingsHighlighter highlighter=new CustomPostingsHighlighter(new CustomPassageFormatter("<b>","</b>",new DefaultEncoder()),fieldValues,false,Integer.MAX_VALUE - 1,0);
  highlighter.setBreakIterator(new WholeBreakIterator());
  Snippet[] snippets=highlighter.highlightDoc("body",queryTerms,ir,docId,5);
  assertThat(snippets.length,equalTo(1));
  assertThat(snippets[0].getText(),equalTo("This is a test. Just a test <b>highlighting</b> from postings highlighter."));
  snippets=highlighter.highlightDoc("body",queryTerms,ir,docId,5);
  assertThat(snippets.length,equalTo(1));
  assertThat(snippets[0].getText(),equalTo("This is the second value to perform <b>highlighting</b> on."));
  snippets=highlighter.highlightDoc("body",queryTerms,ir,docId,5);
  assertThat(snippets.length,equalTo(1));
  assertThat(snippets[0].getText(),equalTo("This is the third value to test <b>highlighting</b> with postings."));
  highlighter=new CustomPostingsHighlighter(new CustomPassageFormatter("<b>","</b>",new DefaultEncoder()),fieldValues,false,Integer.MAX_VALUE - 1,0);
  snippets=highlighter.highlightDoc("body",queryTerms,ir,docId,5);
  assertThat(snippets.length,equalTo(1));
  assertThat(snippets[0].getText(),equalTo("Just a test <b>highlighting</b> from postings highlighter."));
  snippets=highlighter.highlightDoc("body",queryTerms,ir,docId,5);
  assertThat(snippets.length,equalTo(1));
  assertThat(snippets[0].getText(),equalTo("This is the second value to perform <b>highlighting</b> on."));
  snippets=highlighter.highlightDoc("body",queryTerms,ir,docId,5);
  assertThat(snippets.length,equalTo(1));
  assertThat(snippets[0].getText(),equalTo("This is the third value to test <b>highlighting</b> with postings."));
  ir.close();
  dir.close();
}
