{
  String globalIndex=indices != null && indices.length > 0 ? indices[0] : null;
  Map<String,Object> header=parser.map();
  if (header.containsKey("id")) {
    GetRequest getRequest=new GetRequest(globalIndex);
    percolateRequest.getRequest(getRequest);
    for (    Map.Entry<String,Object> entry : header.entrySet()) {
      Object value=entry.getValue();
      if ("id".equals(entry.getKey())) {
        getRequest.id(nodeStringValue(value,null));
        header.put("id",entry.getValue());
      }
 else       if ("index".equals(entry.getKey()) || "indices".equals(entry.getKey())) {
        if (!allowExplicitIndex) {
          throw new IllegalArgumentException("explicit index in multi percolate is not allowed");
        }
        getRequest.index(nodeStringValue(value,null));
      }
 else       if ("type".equals(entry.getKey())) {
        getRequest.type(nodeStringValue(value,null));
      }
 else       if ("preference".equals(entry.getKey())) {
        getRequest.preference(nodeStringValue(value,null));
      }
 else       if ("routing".equals(entry.getKey())) {
        getRequest.routing(nodeStringValue(value,null));
      }
 else       if ("percolate_index".equals(entry.getKey()) || "percolate_indices".equals(entry.getKey()) || "percolateIndex".equals(entry.getKey())|| "percolateIndices".equals(entry.getKey())) {
        percolateRequest.indices(nodeStringArrayValue(value));
      }
 else       if ("percolate_type".equals(entry.getKey()) || "percolateType".equals(entry.getKey())) {
        percolateRequest.documentType(nodeStringValue(value,null));
      }
 else       if ("percolate_preference".equals(entry.getKey()) || "percolatePreference".equals(entry.getKey())) {
        percolateRequest.preference(nodeStringValue(value,null));
      }
 else       if ("percolate_routing".equals(entry.getKey()) || "percolateRouting".equals(entry.getKey())) {
        percolateRequest.routing(nodeStringValue(value,null));
      }
    }
    if ((percolateRequest.indices() == null || percolateRequest.indices().length == 0) && getRequest.index() != null) {
      percolateRequest.indices(getRequest.index());
    }
    if (percolateRequest.documentType() == null && getRequest.type() != null) {
      percolateRequest.documentType(getRequest.type());
    }
    if (percolateRequest.routing() == null && getRequest.routing() != null) {
      percolateRequest.routing(getRequest.routing());
    }
    if (percolateRequest.preference() == null && getRequest.preference() != null) {
      percolateRequest.preference(getRequest.preference());
    }
  }
 else {
    for (    Map.Entry<String,Object> entry : header.entrySet()) {
      Object value=entry.getValue();
      if ("index".equals(entry.getKey()) || "indices".equals(entry.getKey())) {
        if (!allowExplicitIndex) {
          throw new IllegalArgumentException("explicit index in multi percolate is not allowed");
        }
        percolateRequest.indices(nodeStringArrayValue(value));
      }
 else       if ("type".equals(entry.getKey())) {
        percolateRequest.documentType(nodeStringValue(value,null));
      }
 else       if ("preference".equals(entry.getKey())) {
        percolateRequest.preference(nodeStringValue(value,null));
      }
 else       if ("routing".equals(entry.getKey())) {
        percolateRequest.routing(nodeStringValue(value,null));
      }
    }
  }
  percolateRequest.indicesOptions(IndicesOptions.fromMap(header,indicesOptions));
}
