{
  if (OFFICIAL_PLUGINS.contains(pluginId)) {
    final String version=Version.CURRENT.toString();
    final String url;
    if (System.getProperty(PROPERTY_SUPPORT_STAGING_URLS,"false").equals("true")) {
      url=String.format(Locale.ROOT,"https://download.elastic.co/elasticsearch/staging/%1$s-%2$s/org/elasticsearch/plugin/%3$s/%1$s/%3$s-%1$s.zip",version,Build.CURRENT.shortHash(),pluginId);
    }
 else {
      url=String.format(Locale.ROOT,"https://download.elastic.co/elasticsearch/release/org/elasticsearch/plugin/%1$s/%2$s/%1$s-%2$s.zip",pluginId,version);
    }
    terminal.println("-> Downloading " + pluginId + " from elastic");
    return downloadZipAndChecksum(url,tmpDir);
  }
  String[] coordinates=pluginId.split(":");
  if (coordinates.length == 3) {
    String mavenUrl=String.format(Locale.ROOT,"https://repo1.maven.org/maven2/%1$s/%2$s/%3$s/%2$s-%3$s.zip",coordinates[0].replace(".","/"),coordinates[1],coordinates[2]);
    terminal.println("-> Downloading " + pluginId + " from maven central");
    return downloadZipAndChecksum(mavenUrl,tmpDir);
  }
  terminal.println("-> Downloading " + URLDecoder.decode(pluginId,"UTF-8"));
  return downloadZip(pluginId,tmpDir);
}
