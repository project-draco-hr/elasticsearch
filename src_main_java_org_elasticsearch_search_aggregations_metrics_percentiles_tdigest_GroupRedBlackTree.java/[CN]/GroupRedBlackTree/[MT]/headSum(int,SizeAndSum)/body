{
  if (node == NIL) {
    sizeAndSum.size=0;
    sizeAndSum.sum=0;
    return;
  }
  final int left=left(node);
  sizeAndSum.size=aggregatedSizes[left];
  sizeAndSum.sum=aggregatedCounts[left];
  for (int n=node, p=parent(node); p != NIL; n=p, p=parent(n)) {
    if (n == right(p)) {
      final int leftP=left(p);
      sizeAndSum.size+=1 + aggregatedSizes[leftP];
      sizeAndSum.sum+=counts[p] + aggregatedCounts[leftP];
    }
  }
}
