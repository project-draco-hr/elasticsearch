{
  IndexService indexService=indicesService.indexServiceSafe(request.index());
  IndexShard indexShard=indexService.shardSafe(shardId);
  if (request.refresh() && !request.realtime()) {
    indexShard.refresh(new Engine.Refresh("refresh_flag_mget").force(TransportGetAction.REFRESH_FORCE));
  }
  MultiGetShardResponse response=new MultiGetShardResponse();
  for (int i=0; i < request.locations.size(); i++) {
    String type=request.types.get(i);
    String id=request.ids.get(i);
    String[] fields=request.fields.get(i);
    long version=request.versions.get(i);
    VersionType versionType=request.versionTypes.get(i);
    if (versionType == null) {
      versionType=VersionType.INTERNAL;
    }
    FetchSourceContext fetchSourceContext=request.fetchSourceContexts.get(i);
    try {
      GetResult getResult=indexShard.getService().get(type,id,fields,request.realtime(),version,versionType,fetchSourceContext,request.ignoreErrorsOnGeneratedFields());
      response.add(request.locations.get(i),new GetResponse(getResult));
    }
 catch (    Throwable t) {
      if (TransportActions.isShardNotAvailableException(t)) {
        throw (ElasticsearchException)t;
      }
 else {
        logger.debug("[{}][{}] failed to execute multi_get for [{}]/[{}]",t,request.index(),shardId,type,id);
        response.add(request.locations.get(i),new MultiGetResponse.Failure(request.index(),type,id,ExceptionsHelper.detailedMessage(t)));
      }
    }
  }
  return response;
}
