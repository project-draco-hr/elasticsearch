{
  if (!(mergeWith instanceof MultiFieldMapper) && !(mergeWith instanceof AbstractFieldMapper)) {
    mergeContext.addConflict("Can't merge a non multi_field / non simple mapping [" + mergeWith.name() + "] with a multi_field mapping ["+ name()+ "]");
    return;
  }
  List<FieldMapper> mappersToAddToDocMapper=new ArrayList<FieldMapper>();
synchronized (mutex) {
    if (mergeWith instanceof AbstractFieldMapper) {
      if (defaultMapper == null) {
        if (!mergeContext.mergeFlags().simulate()) {
          defaultMapper=mergeWith;
          mappersToAddToDocMapper.add((FieldMapper)defaultMapper);
        }
      }
    }
 else {
      MultiFieldMapper mergeWithMultiField=(MultiFieldMapper)mergeWith;
      if (defaultMapper == null) {
        if (mergeWithMultiField.defaultMapper != null) {
          if (!mergeContext.mergeFlags().simulate()) {
            defaultMapper=mergeWithMultiField.defaultMapper;
            mappersToAddToDocMapper.add((FieldMapper)defaultMapper);
          }
        }
      }
 else {
        if (mergeWithMultiField.defaultMapper != null) {
          defaultMapper.merge(mergeWithMultiField.defaultMapper,mergeContext);
        }
      }
      for (      Mapper mergeWithMapper : mergeWithMultiField.mappers.values()) {
        Mapper mergeIntoMapper=mappers.get(mergeWithMapper.name());
        if (mergeIntoMapper == null) {
          if (!mergeContext.mergeFlags().simulate()) {
            if (mergeWithMapper instanceof AllFieldMapper.IncludeInAll) {
              ((AllFieldMapper.IncludeInAll)mergeWithMapper).includeInAll(false);
            }
            mappers=newMapBuilder(mappers).put(mergeWithMapper.name(),mergeWithMapper).immutableMap();
            if (mergeWithMapper instanceof AbstractFieldMapper) {
              mappersToAddToDocMapper.add((FieldMapper)mergeWithMapper);
            }
          }
        }
 else {
          mergeIntoMapper.merge(mergeWithMapper,mergeContext);
        }
      }
    }
  }
  for (  FieldMapper fieldMapper : mappersToAddToDocMapper) {
    mergeContext.docMapper().addFieldMapper(fieldMapper);
  }
}
