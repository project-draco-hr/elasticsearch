{
  BoolQueryBuilder booleanQuery=new BoolQueryBuilder();
  int iters=randomIntBetween(0,3);
  int totalExpectedErrors=0;
  for (int i=0; i < iters; i++) {
    if (randomBoolean()) {
      booleanQuery.must(RandomQueryBuilder.createInvalidQuery(random()));
      totalExpectedErrors++;
    }
 else {
      booleanQuery.must(RandomQueryBuilder.createQuery(random()));
    }
  }
  iters=randomIntBetween(0,3);
  for (int i=0; i < iters; i++) {
    if (randomBoolean()) {
      booleanQuery.should(RandomQueryBuilder.createInvalidQuery(random()));
      totalExpectedErrors++;
    }
 else {
      booleanQuery.should(RandomQueryBuilder.createQuery(random()));
    }
  }
  for (int i=0; i < iters; i++) {
    if (randomBoolean()) {
      booleanQuery.mustNot(RandomQueryBuilder.createInvalidQuery(random()));
      totalExpectedErrors++;
    }
 else {
      booleanQuery.mustNot(RandomQueryBuilder.createQuery(random()));
    }
  }
  for (int i=0; i < iters; i++) {
    if (randomBoolean()) {
      booleanQuery.filter(RandomQueryBuilder.createInvalidQuery(random()));
      totalExpectedErrors++;
    }
 else {
      booleanQuery.filter(RandomQueryBuilder.createQuery(random()));
    }
  }
  assertValidate(booleanQuery,totalExpectedErrors);
}
