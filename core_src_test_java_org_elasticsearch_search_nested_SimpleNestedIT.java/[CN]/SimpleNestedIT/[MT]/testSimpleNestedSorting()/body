{
  assertAcked(prepareCreate("test").setSettings(settingsBuilder().put(indexSettings()).put("index.refresh_interval",-1)).addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("nested1").field("type","nested").startObject("properties").startObject("field1").field("type","long").field("store",true).endObject().endObject().endObject().endObject().endObject().endObject()));
  ensureGreen();
  client().prepareIndex("test","type1","1").setSource(jsonBuilder().startObject().field("field1",1).startArray("nested1").startObject().field("field1",5).endObject().startObject().field("field1",4).endObject().endArray().endObject()).execute().actionGet();
  client().prepareIndex("test","type1","2").setSource(jsonBuilder().startObject().field("field1",2).startArray("nested1").startObject().field("field1",1).endObject().startObject().field("field1",2).endObject().endArray().endObject()).execute().actionGet();
  client().prepareIndex("test","type1","3").setSource(jsonBuilder().startObject().field("field1",3).startArray("nested1").startObject().field("field1",3).endObject().startObject().field("field1",4).endObject().endArray().endObject()).execute().actionGet();
  refresh();
  SearchResponse searchResponse=client().prepareSearch("test").setTypes("type1").setQuery(QueryBuilders.matchAllQuery()).addSort(SortBuilders.fieldSort("nested1.field1").order(SortOrder.ASC).setNestedPath("nested1")).execute().actionGet();
  assertHitCount(searchResponse,3);
  assertThat(searchResponse.getHits().hits()[0].id(),equalTo("2"));
  assertThat(searchResponse.getHits().hits()[0].sortValues()[0].toString(),equalTo("1"));
  assertThat(searchResponse.getHits().hits()[1].id(),equalTo("3"));
  assertThat(searchResponse.getHits().hits()[1].sortValues()[0].toString(),equalTo("3"));
  assertThat(searchResponse.getHits().hits()[2].id(),equalTo("1"));
  assertThat(searchResponse.getHits().hits()[2].sortValues()[0].toString(),equalTo("4"));
  searchResponse=client().prepareSearch("test").setTypes("type1").setQuery(QueryBuilders.matchAllQuery()).addSort(SortBuilders.fieldSort("nested1.field1").order(SortOrder.DESC).setNestedPath("nested1")).execute().actionGet();
  assertHitCount(searchResponse,3);
  assertThat(searchResponse.getHits().hits()[0].id(),equalTo("1"));
  assertThat(searchResponse.getHits().hits()[0].sortValues()[0].toString(),equalTo("5"));
  assertThat(searchResponse.getHits().hits()[1].id(),equalTo("3"));
  assertThat(searchResponse.getHits().hits()[1].sortValues()[0].toString(),equalTo("4"));
  assertThat(searchResponse.getHits().hits()[2].id(),equalTo("2"));
  assertThat(searchResponse.getHits().hits()[2].sortValues()[0].toString(),equalTo("2"));
}
