{
  assertAcked(prepareCreate("test").addMapping("type1","nested1","type=nested").addMapping("type2","nested1","type=nested"));
  ensureGreen();
  SearchResponse searchResponse=client().prepareSearch("test").setQuery(termQuery("_all","n_value1_1")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(0L));
  searchResponse=client().prepareSearch("test").setQuery(termQuery("n_field1","n_value1_1")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(0L));
  client().prepareIndex("test","type1","1").setSource(jsonBuilder().startObject().field("field1","value1").startArray("nested1").startObject().field("n_field1","n_value1_1").field("n_field2","n_value2_1").endObject().startObject().field("n_field1","n_value1_2").field("n_field2","n_value2_2").endObject().endArray().endObject()).execute().actionGet();
  waitForRelocation(ClusterHealthStatus.GREEN);
  flush();
  GetResponse getResponse=client().prepareGet("test","type1","1").get();
  assertThat(getResponse.isExists(),equalTo(true));
  assertThat(getResponse.getSourceAsBytes(),notNullValue());
  assertDocumentCount("test",3);
  searchResponse=client().prepareSearch("test").setQuery(termQuery("_all","n_value1_1")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch("test").setQuery(termQuery("n_field1","n_value1_1")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(0L));
  searchResponse=client().prepareSearch("test").setQuery(matchAllQuery()).get();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch("test").setQuery(termQuery("n_field1","n_value1_1")).get();
  assertThat(searchResponse.getHits().totalHits(),equalTo(0L));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",termQuery("nested1.n_field1","n_value1_1"),ScoreMode.Avg)).get();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",termQuery("nested1.n_field1","n_value1_1"),ScoreMode.Avg)).setSearchType(SearchType.DFS_QUERY_THEN_FETCH).get();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  client().prepareIndex("test","type1","2").setSource(jsonBuilder().startObject().field("field1","value1").startArray("nested1").startObject().field("n_field1","n_value1_1").field("n_field2","n_value2_2").endObject().startObject().field("n_field1","n_value1_2").field("n_field2","n_value2_1").endObject().endArray().endObject()).execute().actionGet();
  waitForRelocation(ClusterHealthStatus.GREEN);
  flush();
  assertDocumentCount("test",6);
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",boolQuery().must(termQuery("nested1.n_field1","n_value1_1")).must(termQuery("nested1.n_field2","n_value2_1")),ScoreMode.Avg)).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch("test").setQuery(boolQuery().must(matchAllQuery()).mustNot(nestedQuery("nested1",boolQuery().must(termQuery("nested1.n_field1","n_value1_1")).must(termQuery("nested1.n_field2","n_value2_1")),ScoreMode.Avg))).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",boolQuery().must(termQuery("nested1.n_field1","n_value1_1")).must(termQuery("nested1.n_field2","n_value2_1")),ScoreMode.Avg)).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  DeleteResponse deleteResponse=client().prepareDelete("test","type1","2").execute().actionGet();
  assertEquals(DocWriteResponse.Result.DELETED,deleteResponse.getResult());
  flush();
  assertDocumentCount("test",3);
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",termQuery("nested1.n_field1","n_value1_1"),ScoreMode.Avg)).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
  searchResponse=client().prepareSearch("test").setTypes("type1","type2").setQuery(nestedQuery("nested1",termQuery("nested1.n_field1","n_value1_1"),ScoreMode.Avg)).execute().actionGet();
  assertNoFailures(searchResponse);
  assertThat(searchResponse.getHits().totalHits(),equalTo(1L));
}
