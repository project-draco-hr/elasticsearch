{
  if (!this.getClass().equals(mergeWith.getClass())) {
    mergeContext.addConflict("mapper [" + names.fullName() + "] of different type");
  }
  XContentFieldMapper fieldMergeWith=(XContentFieldMapper)mergeWith;
  if (!this.index.equals(fieldMergeWith.index)) {
    mergeContext.addConflict("mapper [" + names.fullName() + "] has different index values");
  }
  if (!this.store.equals(fieldMergeWith.store)) {
    mergeContext.addConflict("mapper [" + names.fullName() + "] has different store values");
  }
  if (!this.termVector.equals(fieldMergeWith.termVector)) {
    mergeContext.addConflict("mapper [" + names.fullName() + "] has different term_vector values");
  }
  if (this.indexAnalyzer == null) {
    if (fieldMergeWith.indexAnalyzer != null) {
      mergeContext.addConflict("mapper [" + names.fullName() + "] has different index_analyzer");
    }
  }
 else   if (!this.indexAnalyzer.name().equals(fieldMergeWith.indexAnalyzer.name())) {
    mergeContext.addConflict("mapper [" + names.fullName() + "] has different index_analyzer");
  }
  if (this.searchAnalyzer == null) {
    if (fieldMergeWith.searchAnalyzer != null) {
      mergeContext.addConflict("mapper [" + names.fullName() + "] has different search_analyzer");
    }
  }
 else   if (!this.searchAnalyzer.name().equals(fieldMergeWith.searchAnalyzer.name())) {
    mergeContext.addConflict("mapper [" + names.fullName() + "] has different search_analyzer");
  }
  if (!mergeContext.mergeFlags().simulate()) {
    this.boost=fieldMergeWith.boost;
    this.omitNorms=fieldMergeWith.omitNorms;
    this.omitTermFreqAndPositions=fieldMergeWith.omitTermFreqAndPositions;
  }
}
