{
  ScaledFloatFieldMapper.ScaledFloatFieldType ft=new ScaledFloatFieldMapper.ScaledFloatFieldType();
  ft.setScalingFactor(0.1 + randomDouble() * 100);
  Directory dir=newDirectory();
  IndexWriter w=new IndexWriter(dir,new IndexWriterConfig(null));
  Document doc=new Document();
  doc.add(new SortedNumericDocValuesField("scaled_float1",10));
  doc.add(new SortedNumericDocValuesField("scaled_float2",5));
  doc.add(new SortedNumericDocValuesField("scaled_float2",12));
  w.addDocument(doc);
  try (DirectoryReader reader=DirectoryReader.open(w)){
    IndexMetaData indexMetadata=new IndexMetaData.Builder("index").settings(Settings.builder().put("index.version.created",Version.CURRENT).put("index.number_of_shards",1).put("index.number_of_replicas",0).build()).build();
    IndexSettings indexSettings=new IndexSettings(indexMetadata,Settings.EMPTY);
    ft.setName("scaled_float1");
    IndexNumericFieldData fielddata=(IndexNumericFieldData)ft.fielddataBuilder().build(indexSettings,ft,null,null,null);
    AtomicNumericFieldData leafFieldData=fielddata.load(reader.leaves().get(0));
    SortedNumericDoubleValues values=leafFieldData.getDoubleValues();
    values.setDocument(0);
    assertEquals(1,values.count());
    assertEquals(10 / ft.getScalingFactor(),values.valueAt(0),10e-5);
    ft.setName("scaled_float2");
    fielddata=(IndexNumericFieldData)ft.fielddataBuilder().build(indexSettings,ft,null,null,null);
    leafFieldData=fielddata.load(reader.leaves().get(0));
    values=leafFieldData.getDoubleValues();
    values.setDocument(0);
    assertEquals(2,values.count());
    assertEquals(5 / ft.getScalingFactor(),values.valueAt(0),10e-5);
    assertEquals(12 / ft.getScalingFactor(),values.valueAt(1),10e-5);
  }
   IOUtils.close(w,dir);
}
