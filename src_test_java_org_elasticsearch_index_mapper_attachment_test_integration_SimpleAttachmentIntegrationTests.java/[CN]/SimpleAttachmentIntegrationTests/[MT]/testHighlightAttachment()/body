{
  String mapping=copyToStringFromClasspath("/org/elasticsearch/index/mapper/attachment/test/integration/simple/test-highlight-mapping.json");
  byte[] html=copyToBytesFromClasspath("/org/elasticsearch/index/mapper/attachment/test/sample-files/testXHTML.html");
  client().admin().indices().putMapping(putMappingRequest("test").type("person").source(mapping)).actionGet();
  index("test","person",jsonBuilder().startObject().field("file",html).endObject());
  refresh();
  SearchResponse searchResponse=client().prepareSearch("test").setQuery(matchQuery("file.content","apache tika")).addHighlightedField("file.content").setNoFields().get();
  logger.info("{}",searchResponse);
  if (assertThatWithError(searchResponse.getHits().getTotalHits(),equalTo(1l))) {
    assertThat(searchResponse.getHits().getAt(0).getHighlightFields(),notNullValue());
    assertThat(searchResponse.getHits().getAt(0).getHighlightFields().keySet(),contains("file.content"));
    searchResponse.getHits().getAt(0).getHighlightFields();
    for (    HighlightField highlightField : searchResponse.getHits().getAt(0).getHighlightFields().values()) {
      for (      Text fragment : highlightField.getFragments()) {
        assertThat(fragment.string(),containsString("<em>Apache</em>"));
        assertThat(fragment.string(),containsString("<em>Tika</em>"));
      }
    }
  }
}
