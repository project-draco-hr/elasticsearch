{
  Directory directory=newDirectory();
  IndexWriter indexWriter=new IndexWriter(directory,newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(NoMergePolicy.INSTANCE));
  storeQuery("0",indexWriter,termQuery("a","0"),true,false);
  indexWriter.flush();
  storeQuery("1",indexWriter,termQuery("a","1"),true,false);
  indexWriter.flush();
  storeQuery("2",indexWriter,termQuery("a","2"),true,false);
  indexWriter.flush();
  ShardId shardId=new ShardId("_index",ClusterState.UNKNOWN_UUID,0);
  IndexReader indexReader=ElasticsearchDirectoryReader.wrap(DirectoryReader.open(indexWriter),shardId);
  assertThat(indexReader.leaves().size(),equalTo(3));
  assertThat(indexReader.maxDoc(),equalTo(3));
  initialize("a","type=keyword");
  IndexShard indexShard=mockIndexShard(Version.CURRENT,false);
  ThreadPool threadPool=mockThreadPool();
  IndexWarmer.Listener listener=cache.createListener(threadPool);
  listener.warmReader(indexShard,new Engine.Searcher("test",new IndexSearcher(indexReader)));
  assertThat(cache.getStats(shardId).getNumQueries(),equalTo(3L));
  PercolatorQuery.QueryRegistry.Leaf leaf=cache.getQueries(indexReader.leaves().get(0));
  assertThat(leaf.getQuery(0),equalTo(new TermQuery(new Term("a","0"))));
  leaf=cache.getQueries(indexReader.leaves().get(1));
  assertThat(leaf.getQuery(0),equalTo(new TermQuery(new Term("a","1"))));
  leaf=cache.getQueries(indexReader.leaves().get(2));
  assertThat(leaf.getQuery(0),equalTo(new TermQuery(new Term("a","2"))));
  indexWriter.getConfig().setMergePolicy(new TieredMergePolicy());
  indexWriter.deleteDocuments(new Term("id","1"));
  indexWriter.forceMergeDeletes();
  indexReader.close();
  indexReader=ElasticsearchDirectoryReader.wrap(DirectoryReader.open(indexWriter),shardId);
  assertThat(indexReader.leaves().size(),equalTo(2));
  assertThat(indexReader.maxDoc(),equalTo(2));
  listener.warmReader(indexShard,new Engine.Searcher("test",new IndexSearcher(indexReader)));
  assertThat(cache.getStats(shardId).getNumQueries(),equalTo(2L));
  leaf=cache.getQueries(indexReader.leaves().get(0));
  assertThat(leaf.getQuery(0),equalTo(new TermQuery(new Term("a","0"))));
  leaf=cache.getQueries(indexReader.leaves().get(1));
  assertThat(leaf.getQuery(0),equalTo(new TermQuery(new Term("a","2"))));
  indexWriter.forceMerge(1);
  indexReader.close();
  indexReader=ElasticsearchDirectoryReader.wrap(DirectoryReader.open(indexWriter),shardId);
  assertThat(indexReader.leaves().size(),equalTo(1));
  assertThat(indexReader.maxDoc(),equalTo(2));
  listener.warmReader(indexShard,new Engine.Searcher("test",new IndexSearcher(indexReader)));
  assertThat(cache.getStats(shardId).getNumQueries(),equalTo(2L));
  leaf=cache.getQueries(indexReader.leaves().get(0));
  assertThat(leaf.getQuery(0),equalTo(new TermQuery(new Term("a","0"))));
  assertThat(leaf.getQuery(1),equalTo(new TermQuery(new Term("a","2"))));
  indexWriter.close();
  indexReader.close();
  directory.close();
}
