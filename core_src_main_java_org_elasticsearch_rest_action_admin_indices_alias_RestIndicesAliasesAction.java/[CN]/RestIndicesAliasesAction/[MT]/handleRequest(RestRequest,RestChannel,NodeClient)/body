{
  IndicesAliasesRequest indicesAliasesRequest=new IndicesAliasesRequest();
  indicesAliasesRequest.masterNodeTimeout(request.paramAsTime("master_timeout",indicesAliasesRequest.masterNodeTimeout()));
  try (XContentParser parser=XContentFactory.xContent(request.content()).createParser(request.content())){
    indicesAliasesRequest.timeout(request.paramAsTime("timeout",indicesAliasesRequest.timeout()));
    XContentParser.Token token=parser.nextToken();
    if (token == null) {
      throw new IllegalArgumentException("No action is specified");
    }
    while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
      if (token == XContentParser.Token.START_ARRAY) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          if (token == XContentParser.Token.FIELD_NAME) {
            String action=parser.currentName();
            AliasAction.Type type;
            if ("add".equals(action)) {
              type=AliasAction.Type.ADD;
            }
 else             if ("remove".equals(action)) {
              type=AliasAction.Type.REMOVE;
            }
 else {
              throw new IllegalArgumentException("Alias action [" + action + "] not supported");
            }
            String[] indices=null;
            String[] aliases=null;
            Map<String,Object> filter=null;
            String routing=null;
            boolean routingSet=false;
            String indexRouting=null;
            boolean indexRoutingSet=false;
            String searchRouting=null;
            boolean searchRoutingSet=false;
            String currentFieldName=null;
            while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
              if (token == XContentParser.Token.FIELD_NAME) {
                currentFieldName=parser.currentName();
              }
 else               if (token.isValue()) {
                if ("index".equals(currentFieldName)) {
                  indices=new String[]{parser.text()};
                }
 else                 if ("alias".equals(currentFieldName)) {
                  aliases=new String[]{parser.text()};
                }
 else                 if ("routing".equals(currentFieldName)) {
                  routing=parser.textOrNull();
                  routingSet=true;
                }
 else                 if ("indexRouting".equals(currentFieldName) || "index-routing".equals(currentFieldName) || "index_routing".equals(currentFieldName)) {
                  indexRouting=parser.textOrNull();
                  indexRoutingSet=true;
                }
 else                 if ("searchRouting".equals(currentFieldName) || "search-routing".equals(currentFieldName) || "search_routing".equals(currentFieldName)) {
                  searchRouting=parser.textOrNull();
                  searchRoutingSet=true;
                }
              }
 else               if (token == XContentParser.Token.START_ARRAY) {
                if ("indices".equals(currentFieldName)) {
                  List<String> indexNames=new ArrayList<>();
                  while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
                    String index=parser.text();
                    indexNames.add(index);
                  }
                  indices=indexNames.toArray(new String[indexNames.size()]);
                }
                if ("aliases".equals(currentFieldName)) {
                  List<String> aliasNames=new ArrayList<>();
                  while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
                    String alias=parser.text();
                    aliasNames.add(alias);
                  }
                  aliases=aliasNames.toArray(new String[aliasNames.size()]);
                }
              }
 else               if (token == XContentParser.Token.START_OBJECT) {
                if ("filter".equals(currentFieldName)) {
                  filter=parser.mapOrdered();
                }
              }
            }
            if (type == AliasAction.Type.ADD) {
              AliasActions aliasActions=new AliasActions(type,indices,aliases).filter(filter);
              if (routingSet) {
                aliasActions.routing(routing);
              }
              if (indexRoutingSet) {
                aliasActions.indexRouting(indexRouting);
              }
              if (searchRoutingSet) {
                aliasActions.searchRouting(searchRouting);
              }
              indicesAliasesRequest.addAliasAction(aliasActions);
            }
 else             if (type == AliasAction.Type.REMOVE) {
              indicesAliasesRequest.removeAlias(indices,aliases);
            }
          }
        }
      }
    }
  }
   client.admin().indices().aliases(indicesAliasesRequest,new AcknowledgedRestListener<IndicesAliasesResponse>(channel));
}
