{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","keyword").endObject().endObject().endObject().endObject().string();
  DocumentMapper mapper=parser.parse("type",new CompressedXContent(mapping));
  assertEquals(mapping,mapper.mappingSource().toString());
  ParsedDocument doc=mapper.parse("test","type","1",XContentFactory.jsonBuilder().startObject().field("field","1234").endObject().bytes());
  IndexableField[] fields=doc.rootDoc().getFields("field");
  assertEquals(2,fields.length);
  assertEquals("1234",fields[0].stringValue());
  IndexableFieldType fieldType=fields[0].fieldType();
  assertThat(fieldType.omitNorms(),equalTo(true));
  assertFalse(fieldType.tokenized());
  assertFalse(fieldType.stored());
  assertThat(fieldType.indexOptions(),equalTo(IndexOptions.DOCS));
  assertThat(fieldType.storeTermVectors(),equalTo(false));
  assertThat(fieldType.storeTermVectorOffsets(),equalTo(false));
  assertThat(fieldType.storeTermVectorPositions(),equalTo(false));
  assertThat(fieldType.storeTermVectorPayloads(),equalTo(false));
  assertEquals(DocValuesType.NONE,fieldType.docValuesType());
  assertEquals(new BytesRef("1234"),fields[1].binaryValue());
  fieldType=fields[1].fieldType();
  assertThat(fieldType.indexOptions(),equalTo(IndexOptions.NONE));
  assertEquals(DocValuesType.SORTED_SET,fieldType.docValuesType());
}
