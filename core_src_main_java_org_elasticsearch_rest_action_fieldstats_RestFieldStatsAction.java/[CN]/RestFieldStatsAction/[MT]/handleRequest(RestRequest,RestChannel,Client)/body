{
  if (RestActions.hasBodyContent(request) && request.hasParam("fields")) {
    throw new IllegalArgumentException("can't specify a request body and [fields] request parameter, " + "either specify a request body or the [fields] request parameter");
  }
  final FieldStatsRequest fieldStatsRequest=new FieldStatsRequest();
  fieldStatsRequest.indices(Strings.splitStringByCommaToArray(request.param("index")));
  fieldStatsRequest.indicesOptions(IndicesOptions.fromRequest(request,fieldStatsRequest.indicesOptions()));
  fieldStatsRequest.level(request.param("level",FieldStatsRequest.DEFAULT_LEVEL));
  if (RestActions.hasBodyContent(request)) {
    fieldStatsRequest.source(RestActions.getRestContent(request));
  }
 else {
    fieldStatsRequest.setFields(Strings.splitStringByCommaToArray(request.param("fields")));
  }
  client.fieldStats(fieldStatsRequest,new RestBuilderListener<FieldStatsResponse>(channel){
    @Override public RestResponse buildResponse(    FieldStatsResponse response,    XContentBuilder builder) throws Exception {
      builder.startObject();
      buildBroadcastShardsHeader(builder,request,response);
      builder.startObject("indices");
      for (      Map.Entry<String,Map<String,FieldStats>> entry1 : response.getIndicesMergedFieldStats().entrySet()) {
        builder.startObject(entry1.getKey());
        builder.startObject("fields");
        for (        Map.Entry<String,FieldStats> entry2 : entry1.getValue().entrySet()) {
          builder.field(entry2.getKey());
          entry2.getValue().toXContent(builder,request);
        }
        builder.endObject();
        builder.endObject();
      }
      builder.endObject();
      if (response.getConflicts().size() > 0) {
        builder.startObject("conflicts");
        for (        Map.Entry<String,String> entry : response.getConflicts().entrySet()) {
          builder.field(entry.getKey(),entry.getValue());
        }
      }
      return new BytesRestResponse(RestStatus.OK,builder);
    }
  }
);
}
