{
  XContentParser parser=parseContext.parser();
  ParseFieldMatcher parseFieldMatcher=parseContext.parseFieldMatcher();
  XContentParser.Token token;
  String fieldName=null;
  SmoothingModel model=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      fieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if (parseFieldMatcher.match(fieldName,LinearInterpolation.PARSE_FIELD)) {
        model=LinearInterpolation.PROTOTYPE.innerFromXContent(parseContext);
      }
 else       if (parseFieldMatcher.match(fieldName,Laplace.PARSE_FIELD)) {
        model=Laplace.PROTOTYPE.innerFromXContent(parseContext);
      }
 else       if (parseFieldMatcher.match(fieldName,StupidBackoff.PARSE_FIELD)) {
        model=StupidBackoff.PROTOTYPE.innerFromXContent(parseContext);
      }
 else {
        throw new IllegalArgumentException("suggester[phrase] doesn't support object field [" + fieldName + "]");
      }
    }
 else {
      throw new ParsingException(parser.getTokenLocation(),"[smoothing] unknown token [" + token + "] after ["+ fieldName+ "]");
    }
  }
  return model;
}
