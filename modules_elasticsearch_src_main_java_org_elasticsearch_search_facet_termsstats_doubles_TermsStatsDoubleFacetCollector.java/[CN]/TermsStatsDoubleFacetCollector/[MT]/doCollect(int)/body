{
  if (!keyFieldData.hasValue(doc)) {
    missing++;
    return;
  }
  double key=keyFieldData.doubleValue(doc);
  InternalTermsStatsDoubleFacet.DoubleEntry doubleEntry=entries.get(key);
  if (doubleEntry == null) {
    doubleEntry=new InternalTermsStatsDoubleFacet.DoubleEntry(key,1,0,Double.NaN,Double.NaN);
    entries.put(key,doubleEntry);
  }
 else {
    doubleEntry.count++;
  }
  if (script == null) {
    if (valueFieldData.multiValued()) {
      for (      double value : valueFieldData.doubleValues(doc)) {
        if (value < doubleEntry.min || Double.isNaN(doubleEntry.min)) {
          doubleEntry.min=value;
        }
        if (value > doubleEntry.max || Double.isNaN(doubleEntry.max)) {
          doubleEntry.max=value;
        }
        doubleEntry.total+=value;
      }
    }
 else {
      double value=valueFieldData.doubleValue(doc);
      if (value < doubleEntry.min || Double.isNaN(doubleEntry.min)) {
        doubleEntry.min=value;
      }
      if (value > doubleEntry.max || Double.isNaN(doubleEntry.max)) {
        doubleEntry.max=value;
      }
      doubleEntry.total+=value;
    }
  }
 else {
    script.setNextDocId(doc);
    double value=script.runAsDouble();
    if (value < doubleEntry.min || Double.isNaN(doubleEntry.min)) {
      doubleEntry.min=value;
    }
    if (value > doubleEntry.max || Double.isNaN(doubleEntry.max)) {
      doubleEntry.max=value;
    }
    doubleEntry.total+=value;
  }
}
