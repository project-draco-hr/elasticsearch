{
  Directory dir=new RAMDirectory();
  IndexWriter indexWriter=new IndexWriter(dir,new IndexWriterConfig(Lucene.VERSION,Lucene.STANDARD_ANALYZER));
  Document doc=new Document();
  FieldType type=IntField.TYPE_NOT_STORED;
  IntField field=new IntField("int1",1,type);
  doc.add(field);
  type=new FieldType(IntField.TYPE_NOT_STORED);
  type.setIndexOptions(FieldInfo.IndexOptions.DOCS_AND_FREQS);
  type.freeze();
  field=new IntField("int1",1,type);
  doc.add(field);
  field=new IntField("int2",1,type);
  doc.add(field);
  field=new IntField("int2",1,type);
  doc.add(field);
  indexWriter.addDocument(doc);
  IndexReader reader=DirectoryReader.open(indexWriter,true);
  AtomicReader atomicReader=SlowCompositeReaderWrapper.wrap(reader);
  Terms terms=atomicReader.terms("int1");
  TermsEnum termsEnum=terms.iterator(null);
  termsEnum.next();
  DocsEnum termDocs=termsEnum.docs(atomicReader.getLiveDocs(),null);
  assertThat(termDocs.nextDoc(),equalTo(0));
  assertThat(termDocs.docID(),equalTo(0));
  assertThat(termDocs.freq(),equalTo(1));
  terms=atomicReader.terms("int2");
  termsEnum=terms.iterator(termsEnum);
  termsEnum.next();
  termDocs=termsEnum.docs(atomicReader.getLiveDocs(),termDocs);
  assertThat(termDocs.nextDoc(),equalTo(0));
  assertThat(termDocs.docID(),equalTo(0));
  assertThat(termDocs.freq(),equalTo(2));
  reader.close();
  indexWriter.close();
}
