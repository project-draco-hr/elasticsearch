{
  String repo="test_repo";
  String snapshot="test_1";
  List<String> repoVersions=repoVersions();
  assertThat(repoVersions.size(),greaterThan(0));
  for (  String version : repoVersions) {
    createRepo(version,repo);
    testOldSnapshot(version,repo,snapshot);
  }
  SortedSet<String> expectedVersions=new TreeSet<>();
  for (  java.lang.reflect.Field field : Version.class.getDeclaredFields()) {
    if (Modifier.isStatic(field.getModifiers()) && field.getType() == Version.class) {
      Version v=(Version)field.get(Version.class);
      if (v.snapshot())       continue;
      if (v.onOrBefore(Version.V_1_0_0_Beta1))       continue;
      expectedVersions.add(v.toString());
    }
  }
  for (  String repoVersion : repoVersions) {
    if (expectedVersions.remove(repoVersion) == false) {
      logger.warn("Old repositories tests contain extra repo: " + repoVersion);
    }
  }
  if (expectedVersions.isEmpty() == false) {
    StringBuilder msg=new StringBuilder("Old repositories tests are missing versions:");
    for (    String expected : expectedVersions) {
      msg.append("\n" + expected);
    }
    fail(msg.toString());
  }
}
