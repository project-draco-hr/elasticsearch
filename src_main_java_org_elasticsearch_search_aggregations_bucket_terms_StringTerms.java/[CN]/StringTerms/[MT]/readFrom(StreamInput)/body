{
  this.name=in.readString();
  if (in.getVersion().onOrAfter(Version.V_1_4_0_Beta1)) {
    this.docCountError=in.readLong();
  }
 else {
    this.docCountError=-1;
  }
  this.order=InternalOrder.Streams.readOrder(in);
  this.requiredSize=readSize(in);
  if (in.getVersion().onOrAfter(Version.V_1_4_0_Beta1)) {
    this.shardSize=readSize(in);
    this.showTermDocCountError=in.readBoolean();
  }
 else {
    this.shardSize=requiredSize;
    this.showTermDocCountError=false;
  }
  this.minDocCount=in.readVLong();
  if (in.getVersion().onOrAfter(Version.V_1_4_0)) {
    this.otherDocCount=in.readVLong();
  }
  int size=in.readVInt();
  List<InternalTerms.Bucket> buckets=new ArrayList<>(size);
  for (int i=0; i < size; i++) {
    Bucket bucket=new Bucket(showTermDocCountError);
    bucket.readFrom(in);
    buckets.add(bucket);
  }
  this.buckets=buckets;
  this.bucketMap=null;
}
