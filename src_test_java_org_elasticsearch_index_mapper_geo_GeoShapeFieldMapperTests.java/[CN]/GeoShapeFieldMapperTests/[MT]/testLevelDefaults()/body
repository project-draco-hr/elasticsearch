{
  DocumentMapperParser parser=createIndex("test").mapperService().documentMapperParser();
{
    String mapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("location").field("type","geo_shape").field("tree","quadtree").field("distance_error_pct","0.5").endObject().endObject().endObject().endObject().string();
    DocumentMapper defaultMapper=parser.parse(mapping);
    FieldMapper fieldMapper=defaultMapper.mappers().name("location").mapper();
    assertThat(fieldMapper,instanceOf(GeoShapeFieldMapper.class));
    GeoShapeFieldMapper geoShapeFieldMapper=(GeoShapeFieldMapper)fieldMapper;
    PrefixTreeStrategy strategy=geoShapeFieldMapper.defaultStrategy();
    assertThat(strategy.getDistErrPct(),equalTo(0.5));
    assertThat(strategy.getGrid(),instanceOf(QuadPrefixTree.class));
    assertThat(strategy.getGrid().getMaxLevels(),equalTo(GeoUtils.quadTreeLevelsForPrecision(50d)));
  }
{
    String mapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("location").field("type","geo_shape").field("tree","geohash").field("distance_error_pct","0.5").endObject().endObject().endObject().endObject().string();
    DocumentMapper defaultMapper=parser.parse(mapping);
    FieldMapper fieldMapper=defaultMapper.mappers().name("location").mapper();
    assertThat(fieldMapper,instanceOf(GeoShapeFieldMapper.class));
    GeoShapeFieldMapper geoShapeFieldMapper=(GeoShapeFieldMapper)fieldMapper;
    PrefixTreeStrategy strategy=geoShapeFieldMapper.defaultStrategy();
    assertThat(strategy.getDistErrPct(),equalTo(0.5));
    assertThat(strategy.getGrid(),instanceOf(GeohashPrefixTree.class));
    assertThat(strategy.getGrid().getMaxLevels(),equalTo(GeoUtils.geoHashLevelsForPrecision(50d)));
  }
}
