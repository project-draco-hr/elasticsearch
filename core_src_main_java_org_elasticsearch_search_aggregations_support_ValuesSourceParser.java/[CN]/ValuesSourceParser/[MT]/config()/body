{
  if (input.script == null) {
    ScriptParameterValue scriptValue=scriptParameterParser.getDefaultScriptParameterValue();
    if (scriptValue != null) {
      if (input.params == null) {
        input.params=newHashMap();
      }
      input.script=new Script(scriptValue.script(),scriptValue.scriptType(),scriptParameterParser.lang(),input.params);
    }
  }
  ValueType valueType=input.valueType != null ? input.valueType : targetValueType;
  if (input.field == null) {
    if (input.script == null) {
      ValuesSourceConfig<VS> config=new ValuesSourceConfig(ValuesSource.class);
      config.format=resolveFormat(null,valueType);
      return config;
    }
    Class valuesSourceType=valueType != null ? (Class<VS>)valueType.getValuesSourceType() : this.valuesSourceType;
    if (valuesSourceType == null || valuesSourceType == ValuesSource.class) {
      valuesSourceType=ValuesSource.Bytes.class;
    }
    ValuesSourceConfig<VS> config=new ValuesSourceConfig<VS>(valuesSourceType);
    config.missing=input.missing;
    config.format=resolveFormat(input.format,valueType);
    config.script=createScript();
    config.scriptValueType=valueType;
    return config;
  }
  MappedFieldType fieldType=context.smartNameFieldTypeFromAnyType(input.field);
  if (fieldType == null) {
    Class<VS> valuesSourceType=valueType != null ? (Class<VS>)valueType.getValuesSourceType() : this.valuesSourceType;
    ValuesSourceConfig<VS> config=new ValuesSourceConfig<>(valuesSourceType);
    config.missing=input.missing;
    config.format=resolveFormat(input.format,valueType);
    config.unmapped=true;
    if (valueType != null) {
      config.scriptValueType=valueType;
    }
    return config;
  }
  IndexFieldData<?> indexFieldData=context.fieldData().getForField(fieldType);
  ValuesSourceConfig config;
  if (valuesSourceType == ValuesSource.class) {
    if (indexFieldData instanceof IndexNumericFieldData) {
      config=new ValuesSourceConfig<>(ValuesSource.Numeric.class);
    }
 else     if (indexFieldData instanceof IndexGeoPointFieldData) {
      config=new ValuesSourceConfig<>(ValuesSource.GeoPoint.class);
    }
 else {
      config=new ValuesSourceConfig<>(ValuesSource.Bytes.class);
    }
  }
 else {
    config=new ValuesSourceConfig(valuesSourceType);
  }
  config.fieldContext=new FieldContext(input.field,indexFieldData,fieldType);
  config.missing=input.missing;
  config.script=createScript();
  config.format=resolveFormat(input.format,input.timezone,fieldType);
  return config;
}
