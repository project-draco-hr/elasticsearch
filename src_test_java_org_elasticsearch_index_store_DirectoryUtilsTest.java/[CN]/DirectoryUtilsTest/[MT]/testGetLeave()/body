{
  Path file=ElasticsearchTestCase.newTempDirPath(LifecycleScope.TEST);
  final int iters=scaledRandomIntBetween(10,100);
  for (int i=0; i < iters; i++) {
{
      BaseDirectoryWrapper dir=newFSDirectory(file);
      FSDirectory directory=DirectoryUtils.getLeaf(new FilterDirectory(dir){
      }
,FSDirectory.class,null);
      assertThat(directory,notNullValue());
      assertThat(directory,sameInstance(DirectoryUtils.getLeafDirectory(dir,null)));
      dir.close();
    }
{
      BaseDirectoryWrapper dir=newFSDirectory(file);
      FSDirectory directory=DirectoryUtils.getLeaf(dir,FSDirectory.class,null);
      assertThat(directory,notNullValue());
      assertThat(directory,sameInstance(DirectoryUtils.getLeafDirectory(dir,null)));
      dir.close();
    }
{
      Set<String> stringSet=Collections.emptySet();
      BaseDirectoryWrapper dir=newFSDirectory(file);
      FSDirectory directory=DirectoryUtils.getLeaf(new FileSwitchDirectory(stringSet,dir,dir,random().nextBoolean()),FSDirectory.class,null);
      assertThat(directory,notNullValue());
      assertThat(directory,sameInstance(DirectoryUtils.getLeafDirectory(dir,null)));
      dir.close();
    }
{
      Set<String> stringSet=Collections.emptySet();
      BaseDirectoryWrapper dir=newFSDirectory(file);
      FSDirectory directory=DirectoryUtils.getLeaf(new FilterDirectory(new FileSwitchDirectory(stringSet,dir,dir,random().nextBoolean())){
      }
,FSDirectory.class,null);
      assertThat(directory,notNullValue());
      assertThat(directory,sameInstance(DirectoryUtils.getLeafDirectory(dir,null)));
      dir.close();
    }
{
      Set<String> stringSet=Collections.emptySet();
      BaseDirectoryWrapper dir=newFSDirectory(file);
      RAMDirectory directory=DirectoryUtils.getLeaf(new FilterDirectory(new FileSwitchDirectory(stringSet,dir,dir,random().nextBoolean())){
      }
,RAMDirectory.class,null);
      assertThat(directory,nullValue());
      dir.close();
    }
  }
}
