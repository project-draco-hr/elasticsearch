{
  Preconditions.checkPositionIndex(start,size);
  return new ListIterator<E>(){
    int index=start;
    public boolean hasNext(){
      return index < size;
    }
    public boolean hasPrevious(){
      return index > 0;
    }
    public int nextIndex(){
      return index;
    }
    public int previousIndex(){
      return index - 1;
    }
    public E next(){
      E result;
      try {
        result=get(index);
      }
 catch (      IndexOutOfBoundsException rethrown) {
        throw new NoSuchElementException();
      }
      index++;
      return result;
    }
    public E previous(){
      E result;
      try {
        result=get(index - 1);
      }
 catch (      IndexOutOfBoundsException rethrown) {
        throw new NoSuchElementException();
      }
      index--;
      return result;
    }
    public void set(    E o){
      throw new UnsupportedOperationException();
    }
    public void add(    E o){
      throw new UnsupportedOperationException();
    }
    public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
