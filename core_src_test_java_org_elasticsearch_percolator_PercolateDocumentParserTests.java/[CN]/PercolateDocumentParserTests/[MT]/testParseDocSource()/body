{
  XContentBuilder source=jsonBuilder().startObject().startObject("query").startObject("term").field("field1","value1").endObject().endObject().field("track_scores",true).field("size",123).startObject("sort").startObject("_score").endObject().endObject().endObject();
  XContentBuilder docSource=jsonBuilder().startObject().field("field1","value1").endObject();
  PercolateShardRequest request=new PercolateShardRequest(new ShardId(index,0),null);
  request.documentType("type");
  request.source(source.bytes());
  request.docSource(docSource.bytes());
  PercolateContext context=new PercolateContext(request,new SearchShardTarget("_node","_index",0),mapperService);
  ParsedDocument parsedDocument=parser.parse(request,context,mapperService,queryShardContext);
  assertThat(parsedDocument.rootDoc().get("field1"),equalTo("value1"));
  assertThat(context.percolateQuery(),equalTo(new TermQuery(new Term("field1","value1"))));
  assertThat(context.trackScores(),is(true));
  assertThat(context.size(),is(123));
  assertThat(context.sort(),nullValue());
}
