{
  createIndex("test");
  final boolean routing=randomBoolean();
  int numDocs=randomIntBetween(10,20);
  for (int i=0; i < numDocs; i++) {
    String id=Integer.toString(i);
    String routingKey=routing ? randomRealisticUnicodeOfLength(10) : null;
    final long version=randomIntBetween(0,Integer.MAX_VALUE);
    client().prepareIndex("test","type1",id).setRouting(routingKey).setVersion(version).setVersionType(VersionType.EXTERNAL).setSource("field1",English.intToEnglish(i)).get();
    GetResponse get=client().prepareGet("test","type1",id).setRouting(routingKey).setVersion(version).get();
    assertThat("Document with ID " + id + " should exist but doesn't",get.isExists(),is(true));
    assertThat(get.getVersion(),equalTo(version));
    final long nextVersion=version + randomIntBetween(0,Integer.MAX_VALUE);
    client().prepareIndex("test","type1",id).setRouting(routingKey).setVersion(nextVersion).setVersionType(VersionType.EXTERNAL).setSource("field1",English.intToEnglish(i)).get();
    get=client().prepareGet("test","type1",id).setRouting(routingKey).setVersion(nextVersion).get();
    assertThat("Document with ID " + id + " should exist but doesn't",get.isExists(),is(true));
    assertThat(get.getVersion(),equalTo(nextVersion));
  }
}
