{
  IndexQueryParserService queryParser=queryParser();
  QueryStringQueryBuilder builder=queryStringQuery("field:boosted^2");
  Query expected=new BoostQuery(new TermQuery(new Term("field","boosted")),2);
  Query parsedQuery=queryParser.parse(builder).query();
  assertEquals(expected,parsedQuery);
  builder.boost(2.0f);
  expected=new BoostQuery(new TermQuery(new Term("field","boosted")),4);
  parsedQuery=queryParser.parse(builder).query();
  assertEquals(expected,parsedQuery);
  builder=queryStringQuery("((field:boosted^2) AND (field:foo^1.5))^3");
  expected=new BoostQuery(new BooleanQuery.Builder().add(new BoostQuery(new TermQuery(new Term("field","boosted")),2),Occur.MUST).add(new BoostQuery(new TermQuery(new Term("field","foo")),1.5f),Occur.MUST).build(),3);
  parsedQuery=queryParser.parse(builder).query();
  assertEquals(expected,parsedQuery);
  builder.boost(2.0f);
  expected=new BoostQuery(new BooleanQuery.Builder().add(new BoostQuery(new TermQuery(new Term("field","boosted")),2),Occur.MUST).add(new BoostQuery(new TermQuery(new Term("field","foo")),1.5f),Occur.MUST).build(),6);
  parsedQuery=queryParser.parse(builder).query();
  assertEquals(expected,parsedQuery);
}
