{
  final T copy=newUnfilledCopy(newSize);
  final int numCommonPages=Math.min(copy.subMutables.length,subMutables.length);
  final long[] copyBuffer=new long[1024];
  for (int i=0; i < copy.subMutables.length; ++i) {
    final int valueCount=i == copy.subMutables.length - 1 ? lastPageSize(newSize) : pageSize();
    final int bpv=i < numCommonPages ? subMutables[i].getBitsPerValue() : this.bitsPerValue;
    copy.subMutables[i]=newMutable(valueCount,bpv);
    if (i < numCommonPages) {
      final int copyLength=Math.min(valueCount,subMutables[i].size());
      XPackedInts.copy(subMutables[i],0,copy.subMutables[i],0,copyLength,copyBuffer);
    }
  }
  return copy;
}
