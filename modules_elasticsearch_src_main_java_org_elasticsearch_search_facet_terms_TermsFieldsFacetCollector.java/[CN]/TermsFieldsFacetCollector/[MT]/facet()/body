{
  TObjectIntHashMap<String> facets=aggregator.facets();
  if (facets.isEmpty()) {
    TermsFacetCollector.pushFacets(facets);
    return new InternalTermsFacet(facetName,arrayToCommaDelimitedString(fieldsNames),comparatorType,size,ImmutableList.<InternalTermsFacet.Entry>of());
  }
 else {
    BoundedTreeSet<InternalTermsFacet.Entry> ordered=new BoundedTreeSet<InternalTermsFacet.Entry>(InternalTermsFacet.ComparatorType.COUNT.comparator(),size * numberOfShards);
    for (TObjectIntIterator<String> it=facets.iterator(); it.hasNext(); ) {
      it.advance();
      ordered.add(new InternalTermsFacet.Entry(it.key(),it.value()));
    }
    TermsFacetCollector.pushFacets(facets);
    return new InternalTermsFacet(facetName,arrayToCommaDelimitedString(fieldsNames),comparatorType,size,ordered);
  }
}
