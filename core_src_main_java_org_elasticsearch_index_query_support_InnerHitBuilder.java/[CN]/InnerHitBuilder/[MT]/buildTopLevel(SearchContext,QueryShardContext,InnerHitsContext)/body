{
  if (nestedPath != null) {
    ObjectMapper nestedObjectMapper=context.getObjectMapper(nestedPath);
    ObjectMapper parentObjectMapper=context.nestedScope().nextLevel(nestedObjectMapper);
    InnerHitsContext.NestedInnerHits nestedInnerHits=new InnerHitsContext.NestedInnerHits(name,parentSearchContext,parentObjectMapper,nestedObjectMapper);
    setupInnerHitsContext(context,nestedInnerHits);
    if (innerHitsBuilder != null) {
      buildChildInnerHits(parentSearchContext,context,nestedInnerHits);
    }
    context.nestedScope().previousLevel();
    innerHitsContext.addInnerHitDefinition(nestedInnerHits);
    return nestedInnerHits;
  }
 else   if (parentChildType != null) {
    DocumentMapper documentMapper=context.getMapperService().documentMapper(parentChildType);
    InnerHitsContext.ParentChildInnerHits parentChildInnerHits=new InnerHitsContext.ParentChildInnerHits(name,parentSearchContext,context.getMapperService(),documentMapper);
    setupInnerHitsContext(context,parentChildInnerHits);
    if (innerHitsBuilder != null) {
      buildChildInnerHits(parentSearchContext,context,parentChildInnerHits);
    }
    innerHitsContext.addInnerHitDefinition(parentChildInnerHits);
    return parentChildInnerHits;
  }
 else {
    throw new IllegalStateException("Neither a nested or parent/child inner hit");
  }
}
