{
  SearchResponse response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").field(SINGLE_VALUED_FIELD_NAME).include("VAL00.+",Pattern.CASE_INSENSITIVE)).execute().actionGet();
  assertSearchResponse(response);
  Terms terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(10));
  for (int i=0; i < 10; i++) {
    Terms.Bucket bucket=terms.getBucketByKey("val00" + i);
    assertThat(bucket,notNullValue());
    assertThat(key(bucket),equalTo("val00" + i));
    assertThat(bucket.getDocCount(),equalTo(1l));
  }
  response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").field(SINGLE_VALUED_FIELD_NAME).include("val00.+").exclude("( val000 | VAL001 )#this is a comment",Pattern.CASE_INSENSITIVE | Pattern.COMMENTS)).execute().actionGet();
  assertSearchResponse(response);
  terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(8));
  for (int i=2; i < 10; i++) {
    Terms.Bucket bucket=terms.getBucketByKey("val00" + i);
    assertThat(bucket,notNullValue());
    assertThat(key(bucket),equalTo("val00" + i));
    assertThat(bucket.getDocCount(),equalTo(1l));
  }
  response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").field(SINGLE_VALUED_FIELD_NAME).exclude("val0[1-9]+.+",0)).execute().actionGet();
  assertSearchResponse(response);
  terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(10));
  for (int i=0; i < 10; i++) {
    Terms.Bucket bucket=terms.getBucketByKey("val00" + i);
    assertThat(bucket,notNullValue());
    assertThat(key(bucket),equalTo("val00" + i));
    assertThat(bucket.getDocCount(),equalTo(1l));
  }
}
