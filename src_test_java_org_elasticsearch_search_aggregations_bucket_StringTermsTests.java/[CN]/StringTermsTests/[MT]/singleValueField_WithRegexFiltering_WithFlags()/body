{
  SearchResponse response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").field("value").include("VAL00.+",Pattern.CASE_INSENSITIVE)).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  Terms terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.buckets().size(),equalTo(10));
  for (int i=0; i < 10; i++) {
    Terms.Bucket bucket=terms.getByTerm("val00" + i);
    assertThat(bucket,notNullValue());
    assertThat(bucket.getKey().string(),equalTo("val00" + i));
    assertThat(bucket.getDocCount(),equalTo(1l));
  }
  response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").field("value").include("val00.+").exclude("( val000 | VAL001 )#this is a comment",Pattern.CASE_INSENSITIVE | Pattern.COMMENTS)).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.buckets().size(),equalTo(8));
  for (int i=2; i < 10; i++) {
    Terms.Bucket bucket=terms.getByTerm("val00" + i);
    assertThat(bucket,notNullValue());
    assertThat(bucket.getKey().string(),equalTo("val00" + i));
    assertThat(bucket.getDocCount(),equalTo(1l));
  }
  response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").field("value").exclude("val0[1-9]+.+",0)).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.buckets().size(),equalTo(10));
  for (int i=0; i < 10; i++) {
    Terms.Bucket bucket=terms.getByTerm("val00" + i);
    assertThat(bucket,notNullValue());
    assertThat(bucket.getKey().string(),equalTo("val00" + i));
    assertThat(bucket.getDocCount(),equalTo(1l));
  }
}
