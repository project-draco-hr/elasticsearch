{
  String incVals[]={"val000","val001","val002","val003","val004","val005","val006","val007","val008","val009"};
  SearchResponse response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals)).execute().actionGet();
  assertSearchResponse(response);
  Terms terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(incVals.length));
  for (  String incVal : incVals) {
    Terms.Bucket bucket=terms.getBucketByKey(incVal);
    assertThat(bucket,notNullValue());
    assertThat(key(bucket),equalTo(incVal));
    assertThat(bucket.getDocCount(),equalTo(1l));
  }
  String excVals[]={"val000","val001"};
  response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals).exclude(excVals)).execute().actionGet();
  assertSearchResponse(response);
  terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(8));
  for (int i=2; i < 10; i++) {
    Terms.Bucket bucket=terms.getBucketByKey("val00" + i);
    assertThat(bucket,notNullValue());
    assertThat(key(bucket),equalTo("val00" + i));
    assertThat(bucket.getDocCount(),equalTo(1l));
  }
  response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).exclude(excVals)).execute().actionGet();
  assertSearchResponse(response);
  terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(10));
  for (  String key : excVals) {
    Terms.Bucket bucket=terms.getBucketByKey(key);
    assertThat(bucket,nullValue());
  }
  NumberFormat nf=NumberFormat.getIntegerInstance(Locale.ENGLISH);
  nf.setMinimumIntegerDigits(3);
  for (int i=2; i < 12; i++) {
    Terms.Bucket bucket=terms.getBucketByKey("val" + nf.format(i));
    assertThat(bucket,notNullValue());
    assertThat(key(bucket),equalTo("val" + nf.format(i)));
    assertThat(bucket.getDocCount(),equalTo(1l));
  }
}
