{
  ensureWriteAllowed(delete);
  active.set(true);
  delete=indexingOperationListeners.preDelete(delete);
  try {
    if (logger.isTraceEnabled()) {
      logger.trace("delete [{}]",delete.uid().text());
    }
    final boolean isPercolatorQuery=percolatorQueriesRegistry.isPercolatorQuery(delete);
    Engine engine=getEngine();
    engine.delete(delete);
    if (isPercolatorQuery) {
      percolatorQueriesRegistry.updatePercolateQuery(engine,delete.id());
    }
    delete.endTime(System.nanoTime());
  }
 catch (  Throwable ex) {
    indexingOperationListeners.postDelete(delete,ex);
    throw ex;
  }
  indexingOperationListeners.postDelete(delete);
}
