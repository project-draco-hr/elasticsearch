{
  ScriptService scriptService=internalCluster().getInstance(ScriptService.class);
  for (  String lang : LANG_SET) {
    for (    ScriptService.ScriptType scriptType : ScriptService.ScriptType.values()) {
      try {
        scriptService.compile(new Script(lang,"test",scriptType,null),new ScriptContext.Plugin(PLUGIN_NAME,"custom_globally_disabled_op"));
        fail("script compilation should have been rejected");
      }
 catch (      ScriptException e) {
        assertThat(e.getMessage(),containsString("scripts of type [" + scriptType + "], operation ["+ PLUGIN_NAME+ "_custom_globally_disabled_op] and lang ["+ lang+ "] are disabled"));
      }
    }
  }
  try {
    scriptService.compile(new Script("expression","1",ScriptService.ScriptType.INLINE,null),new ScriptContext.Plugin(PLUGIN_NAME,"custom_exp_disabled_op"));
    fail("script compilation should have been rejected");
  }
 catch (  ScriptException e) {
    assertThat(e.getMessage(),containsString("scripts of type [inline], operation [" + PLUGIN_NAME + "_custom_exp_disabled_op] and lang [expression] are disabled"));
  }
  CompiledScript compiledScript=scriptService.compile(new Script("expression","1",ScriptService.ScriptType.INLINE,null),randomFrom(ScriptContext.Standard.values()));
  assertThat(compiledScript,notNullValue());
  compiledScript=scriptService.compile(new Script("mustache","1",ScriptService.ScriptType.INLINE,null),new ScriptContext.Plugin(PLUGIN_NAME,"custom_exp_disabled_op"));
  assertThat(compiledScript,notNullValue());
  for (  String lang : LANG_SET) {
    compiledScript=scriptService.compile(new Script(lang,"1",ScriptService.ScriptType.INLINE,null),new ScriptContext.Plugin(PLUGIN_NAME,"custom_op"));
    assertThat(compiledScript,notNullValue());
  }
}
