{
  createIndex("simple");
  assertAcked(prepareCreate("related").addMapping("child",jsonBuilder().startObject().startObject("child").startObject("_parent").field("type","parent").endObject().endObject().endObject()));
  indexRandom(true,client().prepareIndex("simple","lone").setId("1").setSource("text","value1"),client().prepareIndex("related","parent").setId("2").setSource("text","parent"),client().prepareIndex("related","child").setId("3").setParent("2").setSource("text","value2"));
  try {
    client().prepareSearch("simple").setPostFilter(hasChildQuery("child",termQuery("text","value1"))).get();
    fail("Should have failed as has_child query can only be executed against parent-child types");
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.shardFailures().length,greaterThan(0));
    for (    ShardSearchFailure shardSearchFailure : e.shardFailures()) {
      assertThat(shardSearchFailure.reason(),containsString("No mapping for for type [child]"));
    }
  }
  SearchResponse searchResponse=client().prepareSearch("related","simple").setPostFilter(indicesQuery(hasChildQuery("child",termQuery("text","value2")),"related").noMatchQuery(termQuery("text","value1"))).get();
  assertHitCount(searchResponse,2l);
  assertSearchHits(searchResponse,"1","2");
}
