{
  createIndex("simple");
  assertAcked(prepareCreate("related").addMapping("child",jsonBuilder().startObject().startObject("child").startObject("_parent").field("type","parent").endObject().endObject().endObject()));
  client().prepareIndex("simple","lone").setId("1").setSource("text","value1").get();
  client().prepareIndex("related","parent").setId("2").setSource("text","parent").get();
  client().prepareIndex("related","child").setId("3").setParent("2").setSource("text","value2").get();
  refresh();
  try {
    client().prepareSearch("simple").setQuery(hasChildQuery("child",matchQuery("text","value"),ScoreMode.None)).get();
    fail("Should have failed as has_child query can only be executed against parent-child types");
  }
 catch (  SearchPhaseExecutionException e) {
    assertThat(e.shardFailures().length,greaterThan(0));
    for (    ShardSearchFailure shardSearchFailure : e.shardFailures()) {
      assertThat(shardSearchFailure.reason(),containsString("no mapping found for type [child]"));
    }
  }
  SearchResponse searchResponse=client().prepareSearch("related","simple").setQuery(indicesQuery(hasChildQuery("child",matchQuery("text","value2"),ScoreMode.None),"related").noMatchQuery(matchQuery("text","value1"))).get();
  assertHitCount(searchResponse,2L);
  assertSearchHits(searchResponse,"1","2");
}
