{
  Settings.Builder builder=Settings.settingsBuilder().put(indexSettings());
  createIndex("test");
  int numDocs=randomIntBetween(100,150);
  IndexRequestBuilder[] docs=new IndexRequestBuilder[numDocs];
  for (int i=0; i < numDocs; i++) {
    docs[i]=client().prepareIndex("test","type1",String.valueOf(i)).setSource("field1",English.intToEnglish(i));
  }
  indexRandom(true,docs);
  int iters=between(1,100);
  for (int i=0; i < iters; i++) {
    String intToEnglish=English.intToEnglish(between(0,numDocs - 1));
    String query=intToEnglish.split(" ")[0];
    String filter=intToEnglish.split(" ")[0];
    SearchResponse one=client().prepareSearch().setQuery(QueryBuilders.constantScoreQuery(QueryBuilders.filteredQuery(QueryBuilders.termQuery("field1",query),QueryBuilders.termQuery("field1",filter)))).setSize(numDocs).execute().actionGet();
    SearchResponse other=client().prepareSearch().setQuery(QueryBuilders.constantScoreQuery(QueryBuilders.filteredQuery(QueryBuilders.termQuery("field1",filter),QueryBuilders.termQuery("field1",query)))).setSize(numDocs).execute().actionGet();
    Set<String> oneIds=new HashSet<>();
    for (    SearchHit hit : one.getHits().hits()) {
      oneIds.add(hit.id());
    }
    Set<String> otherIds=new HashSet<>();
    for (    SearchHit hit : other.getHits().hits()) {
      otherIds.add(hit.id());
    }
    assertThat(oneIds.size(),equalTo(otherIds.size()));
    for (    String id : oneIds) {
      assertThat(otherIds.contains(id),is(true));
    }
  }
}
