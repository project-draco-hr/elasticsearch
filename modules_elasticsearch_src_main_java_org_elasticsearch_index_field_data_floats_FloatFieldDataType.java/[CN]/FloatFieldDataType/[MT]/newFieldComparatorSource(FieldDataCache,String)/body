{
  if (missing == null) {
    return new FieldComparatorSource(){
      @Override public FieldComparator newComparator(      String fieldname,      int numHits,      int sortPos,      boolean reversed) throws IOException {
        return new FloatFieldDataComparator(numHits,fieldname,cache);
      }
    }
;
  }
  if (missing.equals("_last")) {
    return new FieldComparatorSource(){
      @Override public FieldComparator newComparator(      String fieldname,      int numHits,      int sortPos,      boolean reversed) throws IOException {
        return new FloatFieldDataMissingComparator(numHits,fieldname,cache,reversed ? Float.NEGATIVE_INFINITY : Float.POSITIVE_INFINITY);
      }
    }
;
  }
  if (missing.equals("_first")) {
    return new FieldComparatorSource(){
      @Override public FieldComparator newComparator(      String fieldname,      int numHits,      int sortPos,      boolean reversed) throws IOException {
        return new FloatFieldDataMissingComparator(numHits,fieldname,cache,reversed ? Float.POSITIVE_INFINITY : Float.NEGATIVE_INFINITY);
      }
    }
;
  }
  return new FieldComparatorSource(){
    @Override public FieldComparator newComparator(    String fieldname,    int numHits,    int sortPos,    boolean reversed) throws IOException {
      return new FloatFieldDataMissingComparator(numHits,fieldname,cache,Float.parseFloat(missing));
    }
  }
;
}
