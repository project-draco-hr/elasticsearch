{
  assertAcked(prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards",immutableCluster().numDataNodes() + 2).put("index.number_of_replicas",0)));
  ensureGreen();
  for (int i=0; i < 10; i++) {
    client().prepareIndex("test","type1","" + i).setSource("field1","value1").execute().actionGet();
  }
  refresh();
  cluster().stopRandomDataNode();
  client().admin().cluster().prepareHealth().setWaitForStatus(ClusterHealthStatus.RED).execute().actionGet();
  String[] preferences=new String[]{"_primary","_local","_primary_first","_prefer_node:somenode","_prefer_node:server2"};
  for (  String pref : preferences) {
    SearchResponse searchResponse=client().prepareSearch().setSearchType(SearchType.COUNT).setPreference(pref).execute().actionGet();
    assertThat(RestStatus.OK,equalTo(searchResponse.status()));
    assertThat(pref,searchResponse.getFailedShards(),greaterThanOrEqualTo(0));
    searchResponse=client().prepareSearch().setPreference(pref).execute().actionGet();
    assertThat(RestStatus.OK,equalTo(searchResponse.status()));
    assertThat(pref,searchResponse.getFailedShards(),greaterThanOrEqualTo(0));
  }
  SearchResponse searchResponse=dataNodeClient().prepareSearch().setSearchType(SearchType.COUNT).setPreference("_only_local").execute().actionGet();
  assertThat(RestStatus.OK,equalTo(searchResponse.status()));
  assertThat("_only_local",searchResponse.getFailedShards(),greaterThanOrEqualTo(0));
  searchResponse=dataNodeClient().prepareSearch().setPreference("_only_local").execute().actionGet();
  assertThat(RestStatus.OK,equalTo(searchResponse.status()));
  assertThat("_only_local",searchResponse.getFailedShards(),greaterThanOrEqualTo(0));
}
