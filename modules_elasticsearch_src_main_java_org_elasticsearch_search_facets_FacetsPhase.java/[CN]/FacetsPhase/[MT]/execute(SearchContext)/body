{
  if (context.facets() == null) {
    return;
  }
  if (context.queryResult().facets() != null) {
    return;
  }
  if (context.searcher().globalCollectors() != null) {
    Query query=new DeletionAwareConstantScoreQuery(Queries.MATCH_ALL_FILTER,true);
    if (context.types().length > 0) {
      if (context.types().length == 1) {
        String type=context.types()[0];
        DocumentMapper docMapper=context.mapperService().documentMapper(type);
        query=new FilteredQuery(query,context.filterCache().cache(docMapper.typeFilter()));
      }
 else {
        BooleanFilter booleanFilter=new BooleanFilter();
        for (        String type : context.types()) {
          DocumentMapper docMapper=context.mapperService().documentMapper(type);
          booleanFilter.add(new FilterClause(context.filterCache().cache(docMapper.typeFilter()),BooleanClause.Occur.SHOULD));
        }
        query=new FilteredQuery(query,booleanFilter);
      }
    }
    context.searcher().useGlobalCollectors(true);
    try {
      context.searcher().search(query,NoopCollector.NOOP_COLLECTOR);
    }
 catch (    IOException e) {
      throw new QueryPhaseExecutionException(context,"Failed to execute global facets",e);
    }
 finally {
      context.searcher().useGlobalCollectors(false);
    }
  }
  SearchContextFacets contextFacets=context.facets();
  List<Facet> facets=Lists.newArrayListWithCapacity(2);
  if (contextFacets.facetCollectors() != null) {
    for (    FacetCollector facetCollector : contextFacets.facetCollectors()) {
      facets.add(facetCollector.facet());
    }
  }
  context.queryResult().facets(new InternalFacets(facets));
}
