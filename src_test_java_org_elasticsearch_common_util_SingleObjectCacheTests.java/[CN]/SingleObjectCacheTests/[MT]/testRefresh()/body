{
  final AtomicInteger count=new AtomicInteger(0);
  final AtomicBoolean needsRefresh=new AtomicBoolean(true);
  SingleObjectCache<Integer> cache=new SingleObjectCache<Integer>(TimeValue.timeValueMillis(100000),0){
    @Override protected Integer refresh(){
      return count.incrementAndGet();
    }
    @Override protected boolean needsRefresh(){
      return needsRefresh.get();
    }
  }
;
  assertEquals(1,cache.getOrRefresh().intValue());
  assertEquals(2,cache.getOrRefresh().intValue());
  needsRefresh.set(false);
  assertEquals(2,cache.getOrRefresh().intValue());
  needsRefresh.set(true);
  assertEquals(3,cache.getOrRefresh().intValue());
}
