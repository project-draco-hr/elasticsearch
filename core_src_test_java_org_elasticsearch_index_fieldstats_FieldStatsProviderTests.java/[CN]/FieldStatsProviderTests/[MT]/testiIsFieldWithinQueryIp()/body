{
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.10.0.1","10.20.0.1",true,true,DateTimeZone.UTC,null),equalTo(Relation.WITHIN));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.10.0.1",null,true,true,DateTimeZone.UTC,null),equalTo(Relation.WITHIN));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field",null,"10.20.0.1",true,true,DateTimeZone.UTC,null),equalTo(Relation.WITHIN));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field",null,null,true,true,DateTimeZone.UTC,null),equalTo(Relation.WITHIN));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.10.0.1","10.10.0.60",true,true,DateTimeZone.UTC,null),equalTo(Relation.WITHIN));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.10.0.10","10.20.0.1",true,true,DateTimeZone.UTC,null),equalTo(Relation.WITHIN));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.10.0.1","10.10.0.40",true,true,DateTimeZone.UTC,null),equalTo(Relation.INTERSECTS));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.10.0.40","10.20.0.1",true,true,DateTimeZone.UTC,null),equalTo(Relation.INTERSECTS));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.10.0.30","10.10.0.40",true,true,DateTimeZone.UTC,null),equalTo(Relation.INTERSECTS));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.10.0.1","10.10.0.60",true,false,DateTimeZone.UTC,null),equalTo(Relation.INTERSECTS));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.10.0.10","10.20.0.1",false,true,DateTimeZone.UTC,null),equalTo(Relation.INTERSECTS));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.10.0.60","10.20.0.1",true,true,DateTimeZone.UTC,null),equalTo(Relation.INTERSECTS));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.0.0.1","10.10.0.10",true,true,DateTimeZone.UTC,null),equalTo(Relation.INTERSECTS));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.20.0.10","10.20.0.1",true,true,DateTimeZone.UTC,null),equalTo(Relation.DISJOINT));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.0.0.1","10.0.0.100",true,true,DateTimeZone.UTC,null),equalTo(Relation.DISJOINT));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field",null,"10.0.0.100",true,true,DateTimeZone.UTC,null),equalTo(Relation.DISJOINT));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.20.0.10",null,true,true,DateTimeZone.UTC,null),equalTo(Relation.DISJOINT));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.10.0.60","10.20.0.1",false,true,DateTimeZone.UTC,null),equalTo(Relation.DISJOINT));
  assertThat(fieldStatsProvider.isFieldWithinQuery("ip_field","10.0.0.1","10.10.0.10",true,false,DateTimeZone.UTC,null),equalTo(Relation.DISJOINT));
}
