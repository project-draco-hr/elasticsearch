{
  try {
    FormatDateTimeFormatter formatter=version.onOrAfter(Version.V_2_0_0) ? dateTimeFormatter : EPOCH_MILLIS_PARSER;
    return Long.toString(formatter.parser().parseMillis(timestampAsString));
  }
 catch (  RuntimeException e) {
    if (version.before(Version.V_2_0_0)) {
      try {
        return Long.toString(dateTimeFormatter.parser().parseMillis(timestampAsString));
      }
 catch (      RuntimeException e1) {
        throw new TimestampParsingException(timestampAsString,e1);
      }
    }
    throw new TimestampParsingException(timestampAsString,e);
  }
}
