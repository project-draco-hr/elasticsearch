{
  if (source != null) {
    return source;
  }
  XContentParser parser=null;
  try {
    Document doc=reader.document(docId,SourceFieldSelector.INSTANCE);
    Fieldable sourceField=doc.getFieldable(SourceFieldMapper.NAME);
    byte[] source=sourceField.getBinaryValue();
    if (LZFDecoder.isCompressed(source)) {
      BytesStreamInput siBytes=new BytesStreamInput(source);
      LZFStreamInput siLzf=CachedStreamInput.cachedLzf(siBytes);
      XContentType contentType=XContentFactory.xContentType(siLzf);
      siLzf.resetToBufferStart();
      parser=XContentFactory.xContent(contentType).createParser(siLzf);
      this.source=parser.map();
    }
 else {
      parser=XContentFactory.xContent(source).createParser(source);
      this.source=parser.map();
    }
  }
 catch (  Exception e) {
    throw new ElasticSearchParseException("failed to parse / load source",e);
  }
 finally {
    if (parser != null) {
      parser.close();
    }
  }
  return this.source;
}
