{
  try {
    client().prepareSearch("idx").setTypes("type").addAggregation(histogram("histo").field(INTERVAL_FIELD).interval(interval).extendedBounds(0L,(long)(interval * (numBuckets - 1))).subAggregation(randomMetric("the_metric",VALUE_FIELD)).subAggregation(movingAvg("movavg_counts","the_metric").window(windowSize).modelBuilder(randomModelBuilder()).gapPolicy(gapPolicy).predict(-10))).execute().actionGet();
    fail("MovingAvg should not accept a prediction size that is negative");
  }
 catch (  IllegalArgumentException exception) {
  }
}
