{
  Request request=new Request().index("test");
  request.shardId=new ShardId("test","_na_",0);
  PlainActionFuture<Response> listener=new PlainActionFuture<>();
  setState(clusterService,ClusterStateCreationUtils.state("test",randomBoolean(),ShardRoutingState.STARTED));
  action.new AsyncSingleAction(request,listener).start();
  assertThat(transport.capturedRequests().length,equalTo(1));
  long requestId=transport.capturedRequests()[0].requestId;
  transport.clear();
  transport.handleRemoteError(requestId,new TransportException("a generic transport exception",new Exception("generic test exception")));
  try {
    assertTrue(listener.isDone());
    listener.get();
    fail("this should fail with a transport exception");
  }
 catch (  ExecutionException t) {
    if (ExceptionsHelper.unwrap(t,TransportException.class) == null) {
      logger.info("expected TransportException  but got ",t);
      fail("expected and TransportException");
    }
  }
}
