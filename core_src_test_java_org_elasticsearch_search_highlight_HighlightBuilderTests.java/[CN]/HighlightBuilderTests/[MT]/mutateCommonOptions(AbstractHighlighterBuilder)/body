{
switch (randomIntBetween(1,16)) {
case 1:
    highlightBuilder.preTags(randomStringArray(4,6));
  break;
case 2:
highlightBuilder.postTags(randomStringArray(4,6));
break;
case 3:
highlightBuilder.fragmentSize(randomIntBetween(101,200));
break;
case 4:
highlightBuilder.numOfFragments(randomIntBetween(11,20));
break;
case 5:
highlightBuilder.highlighterType(randomAsciiOfLengthBetween(11,20));
break;
case 6:
highlightBuilder.fragmenter(randomAsciiOfLengthBetween(11,20));
break;
case 7:
highlightBuilder.highlightQuery(new TermQueryBuilder(randomAsciiOfLengthBetween(11,20),randomAsciiOfLengthBetween(11,20)));
break;
case 8:
highlightBuilder.order(randomAsciiOfLengthBetween(11,20));
break;
case 9:
highlightBuilder.highlightFilter(toggleOrSet(highlightBuilder.highlightFilter()));
break;
case 10:
highlightBuilder.forceSource(toggleOrSet(highlightBuilder.forceSource()));
break;
case 11:
highlightBuilder.boundaryMaxScan(randomIntBetween(11,20));
break;
case 12:
highlightBuilder.boundaryChars(randomAsciiOfLengthBetween(11,20).toCharArray());
break;
case 13:
highlightBuilder.noMatchSize(randomIntBetween(11,20));
break;
case 14:
highlightBuilder.phraseLimit(randomIntBetween(11,20));
break;
case 15:
int items=6;
Map<String,Object> options=new HashMap<String,Object>(items);
for (int i=0; i < items; i++) {
options.put(randomAsciiOfLengthBetween(1,10),randomAsciiOfLengthBetween(1,10));
}
highlightBuilder.options(options);
break;
case 16:
highlightBuilder.requireFieldMatch(toggleOrSet(highlightBuilder.requireFieldMatch()));
break;
}
}
