{
  if (randomBoolean()) {
    highlightBuilder.preTags(randomStringArray(0,3));
    highlightBuilder.postTags(randomStringArray(0,3));
  }
  if (randomBoolean()) {
    highlightBuilder.fragmentSize(randomIntBetween(0,100));
  }
  if (randomBoolean()) {
    highlightBuilder.numOfFragments(randomIntBetween(0,10));
  }
  if (randomBoolean()) {
    highlightBuilder.highlighterType(randomAsciiOfLengthBetween(1,10));
  }
  if (randomBoolean()) {
    highlightBuilder.fragmenter(randomAsciiOfLengthBetween(1,10));
  }
  if (randomBoolean()) {
    QueryBuilder highlightQuery=new MatchAllQueryBuilder();
    highlightQuery.boost((float)randomDoubleBetween(0,10,false));
    highlightQuery.queryName(randomAsciiOfLength(10));
    highlightBuilder.highlightQuery(highlightQuery);
  }
  if (randomBoolean()) {
    highlightBuilder.order(randomAsciiOfLengthBetween(1,10));
  }
  if (randomBoolean()) {
    highlightBuilder.highlightFilter(randomBoolean());
  }
  if (randomBoolean()) {
    highlightBuilder.forceSource(randomBoolean());
  }
  if (randomBoolean()) {
    highlightBuilder.boundaryMaxScan(randomIntBetween(0,10));
  }
  if (randomBoolean()) {
    highlightBuilder.boundaryChars(randomAsciiOfLengthBetween(1,10).toCharArray());
  }
  if (randomBoolean()) {
    highlightBuilder.noMatchSize(randomIntBetween(0,10));
  }
  if (randomBoolean()) {
    highlightBuilder.phraseLimit(randomIntBetween(0,10));
  }
  if (randomBoolean()) {
    int items=randomIntBetween(0,5);
    Map<String,Object> options=new HashMap<String,Object>(items);
    for (int i=0; i < items; i++) {
      Object value=null;
switch (randomInt(2)) {
case 0:
        value=randomAsciiOfLengthBetween(1,10);
      break;
case 1:
    value=new Integer(randomInt(1000));
  break;
case 2:
value=new Boolean(randomBoolean());
break;
}
options.put(randomAsciiOfLengthBetween(1,10),value);
}
}
if (randomBoolean()) {
highlightBuilder.requireFieldMatch(randomBoolean());
}
}
