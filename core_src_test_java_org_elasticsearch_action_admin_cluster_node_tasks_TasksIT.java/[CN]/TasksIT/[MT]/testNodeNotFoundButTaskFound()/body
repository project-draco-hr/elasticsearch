{
  CyclicBarrier b=new CyclicBarrier(2);
  TaskResultsService resultsService=internalCluster().getInstance(TaskResultsService.class);
  resultsService.storeResult(new TaskResult(new TaskInfo(new TaskId("fake",1),"test","test","",null,0,0,false,TaskId.EMPTY_TASK_ID),new RuntimeException("test")),new ActionListener<Void>(){
    @Override public void onResponse(    Void response){
      try {
        b.await();
      }
 catch (      InterruptedException|BrokenBarrierException e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Exception e){
      throw new RuntimeException(e);
    }
  }
);
  b.await();
  GetTaskResponse response=expectFinishedTask(new TaskId("fake:1"));
  assertEquals("test",response.getTask().getTask().getAction());
  assertNotNull(response.getTask().getError());
  assertNull(response.getTask().getResponse());
}
