{
  LinkedHashMap<String,ContextMapping> map=new LinkedHashMap<>();
  map.put("geo",ContextBuilder.geo("geo").build());
  final CompletionMappingBuilder mapping=new CompletionMappingBuilder().context(map);
  createIndexAndMapping(mapping);
  int numDocs=10;
  List<IndexRequestBuilder> indexRequestBuilders=new ArrayList<>();
  GeoPoint[] geoPoints=new GeoPoint[]{new GeoPoint("ezs42e44yx96"),new GeoPoint("u4pruydqqvj8")};
  for (int i=0; i < numDocs; i++) {
    XContentBuilder source=jsonBuilder().startObject().startObject(FIELD).field("input","suggestion" + i).field("weight",i + 1).startObject("contexts").field("geo",(i % 2 == 0) ? geoPoints[0].getGeohash() : geoPoints[1].getGeohash()).endObject().endObject().endObject();
    indexRequestBuilders.add(client().prepareIndex(INDEX,TYPE,"" + i).setSource(source));
  }
  indexRandom(true,indexRequestBuilders);
  CompletionSuggestionBuilder prefix=SuggestBuilders.completionSuggestion(FIELD).prefix("sugg");
  assertSuggestions("foo",prefix,"suggestion9","suggestion8","suggestion7","suggestion6","suggestion5");
  CompletionSuggestionBuilder geoFilteringPrefix=SuggestBuilders.completionSuggestion(FIELD).prefix("sugg").contexts(Collections.singletonMap("geo",Collections.singletonList(GeoQueryContext.builder().setGeoPoint(new GeoPoint(geoPoints[0])).build())));
  assertSuggestions("foo",geoFilteringPrefix,"suggestion8","suggestion6","suggestion4","suggestion2","suggestion0");
}
