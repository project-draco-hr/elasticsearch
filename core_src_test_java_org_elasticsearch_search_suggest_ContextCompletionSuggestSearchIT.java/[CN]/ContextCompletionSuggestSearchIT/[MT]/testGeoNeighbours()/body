{
  String geohash="gcpv";
  List<String> neighbours=new ArrayList<>();
  neighbours.add("gcpw");
  neighbours.add("gcpy");
  neighbours.add("u10n");
  neighbours.add("gcpt");
  neighbours.add("u10j");
  neighbours.add("gcps");
  neighbours.add("gcpu");
  neighbours.add("u10h");
  LinkedHashMap<String,ContextMapping> map=new LinkedHashMap<>();
  map.put("geo",ContextBuilder.geo("geo").precision(4).build());
  final CompletionMappingBuilder mapping=new CompletionMappingBuilder().context(map);
  createIndexAndMapping(mapping);
  int numDocs=10;
  List<IndexRequestBuilder> indexRequestBuilders=new ArrayList<>();
  for (int i=0; i < numDocs; i++) {
    XContentBuilder source=jsonBuilder().startObject().startObject(FIELD).field("input","suggestion" + i).field("weight",i + 1).startObject("contexts").field("geo",randomFrom(neighbours)).endObject().endObject().endObject();
    indexRequestBuilders.add(client().prepareIndex(INDEX,TYPE,"" + i).setSource(source));
  }
  indexRandom(true,indexRequestBuilders);
  ensureYellow(INDEX);
  CompletionSuggestionBuilder prefix=SuggestBuilders.completionSuggestion("foo").field(FIELD).prefix("sugg");
  assertSuggestions("foo",prefix,"suggestion9","suggestion8","suggestion7","suggestion6","suggestion5");
  CompletionSuggestionBuilder geoNeighbourPrefix=SuggestBuilders.completionSuggestion("foo").field(FIELD).prefix("sugg").geoContexts("geo",new GeoQueryContext(geohash));
  assertSuggestions("foo",geoNeighbourPrefix,"suggestion9","suggestion8","suggestion7","suggestion6","suggestion5");
}
