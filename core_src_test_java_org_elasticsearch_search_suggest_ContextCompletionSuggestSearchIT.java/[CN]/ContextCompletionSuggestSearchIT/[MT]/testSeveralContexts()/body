{
  LinkedHashMap<String,ContextMapping> map=new LinkedHashMap<>();
  final int numContexts=randomIntBetween(2,5);
  for (int i=0; i < numContexts; i++) {
    map.put("type" + i,ContextBuilder.category("type" + i).field("type" + i).build());
  }
  final CompletionMappingBuilder mapping=new CompletionMappingBuilder().context(map);
  createIndexAndMapping(mapping);
  int numDocs=randomIntBetween(10,200);
  List<IndexRequestBuilder> indexRequestBuilders=new ArrayList<>();
  for (int i=0; i < numDocs; i++) {
    XContentBuilder source=jsonBuilder().startObject().startObject(FIELD).field("input","suggestion" + i).field("weight",numDocs - i).endObject();
    for (int c=0; c < numContexts; c++) {
      source.field("type" + c,"type" + c + i % 4);
    }
    source.endObject();
    indexRequestBuilders.add(client().prepareIndex(INDEX,TYPE,"" + i).setSource(source));
  }
  indexRandom(true,indexRequestBuilders);
  CompletionSuggestionBuilder prefix=SuggestBuilders.completionSuggestion(FIELD).prefix("sugg");
  assertSuggestions("foo",prefix,"suggestion0","suggestion1","suggestion2","suggestion3","suggestion4");
}
