{
  for (  Item item : likeItems) {
    setDefaultIndexTypeFields(parseContext,item,moreLikeFields,useDefaultField);
  }
  for (  Item item : unlikeItems) {
    setDefaultIndexTypeFields(parseContext,item,moreLikeFields,useDefaultField);
  }
  MultiTermVectorsResponse responses=fetchService.fetchResponse(likeItems,unlikeItems,SearchContext.current());
  mltQuery.setLikeText(MoreLikeThisFetchService.getFieldsFor(responses,likeItems));
  if (!unlikeItems.isEmpty()) {
    org.apache.lucene.index.Fields[] unlikeFields=MoreLikeThisFetchService.getFieldsFor(responses,unlikeItems);
    if (unlikeFields.length > 0) {
      mltQuery.setUnlikeText(unlikeFields);
    }
  }
  BooleanQuery boolQuery=new BooleanQuery();
  boolQuery.add(mltQuery,BooleanClause.Occur.SHOULD);
  if (!include) {
    handleExclude(boolQuery,likeItems);
  }
  return boolQuery;
}
