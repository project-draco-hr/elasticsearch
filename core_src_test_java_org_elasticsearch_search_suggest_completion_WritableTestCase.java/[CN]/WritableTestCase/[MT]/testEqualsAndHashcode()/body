{
  M firstModel=createTestModel();
  String modelName=firstModel.getClass().getSimpleName();
  assertFalse(modelName + " is equal to null",firstModel.equals(null));
  assertFalse(modelName + " is equal to incompatible type",firstModel.equals(""));
  assertTrue(modelName + " is not equal to self",firstModel.equals(firstModel));
  assertThat("same " + modelName + "'s hashcode returns different values if called multiple times",firstModel.hashCode(),equalTo(firstModel.hashCode()));
  assertThat("different " + modelName + " should not be equal",createMutation(firstModel),not(equalTo(firstModel)));
  M secondModel=copyModel(firstModel);
  assertTrue(modelName + " is not equal to self",secondModel.equals(secondModel));
  assertTrue(modelName + " is not equal to its copy",firstModel.equals(secondModel));
  assertTrue("equals is not symmetric",secondModel.equals(firstModel));
  assertThat(modelName + " copy's hashcode is different from original hashcode",secondModel.hashCode(),equalTo(firstModel.hashCode()));
  M thirdModel=copyModel(secondModel);
  assertTrue(modelName + " is not equal to self",thirdModel.equals(thirdModel));
  assertTrue(modelName + " is not equal to its copy",secondModel.equals(thirdModel));
  assertThat(modelName + " copy's hashcode is different from original hashcode",secondModel.hashCode(),equalTo(thirdModel.hashCode()));
  assertTrue("equals is not transitive",firstModel.equals(thirdModel));
  assertThat(modelName + " copy's hashcode is different from original hashcode",firstModel.hashCode(),equalTo(thirdModel.hashCode()));
  assertTrue(modelName + " equals is not symmetric",thirdModel.equals(secondModel));
  assertTrue(modelName + " equals is not symmetric",thirdModel.equals(firstModel));
}
