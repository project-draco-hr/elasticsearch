{
  BytesRef[] toJoin=new BytesRef[this.candidates.length];
  int len=separator.length * this.candidates.length - 1;
  for (int i=0; i < toJoin.length; i++) {
    Candidate candidate=candidates[i];
    if (preTag == null || candidate.userInput) {
      toJoin[i]=candidate.term;
    }
 else {
      final int maxLen=preTag.length + postTag.length + candidate.term.length;
      final BytesRefBuilder highlighted=new BytesRefBuilder();
      highlighted.grow(maxLen);
      if (i == 0 || candidates[i - 1].userInput) {
        highlighted.append(preTag);
      }
      highlighted.append(candidate.term);
      if (toJoin.length == i + 1 || candidates[i + 1].userInput) {
        highlighted.append(postTag);
      }
      toJoin[i]=highlighted.get();
    }
    len+=toJoin[i].length;
  }
  result.grow(len);
  return SuggestUtils.join(separator,result,toJoin);
}
