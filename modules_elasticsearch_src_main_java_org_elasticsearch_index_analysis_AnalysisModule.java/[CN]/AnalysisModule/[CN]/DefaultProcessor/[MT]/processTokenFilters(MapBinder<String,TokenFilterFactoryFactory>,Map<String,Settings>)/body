{
  if (!groupSettings.containsKey("stop")) {
    binder.addBinding("stop").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,StopTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("asciifolding")) {
    binder.addBinding("asciifolding").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,ASCIIFoldingTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("length")) {
    binder.addBinding("length").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,LengthTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("lowercase")) {
    binder.addBinding("lowercase").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,LowerCaseTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("porterStem")) {
    binder.addBinding("porterStem").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,PorterStemTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("porter_stem")) {
    binder.addBinding("porter_stem").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,PorterStemTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("standard")) {
    binder.addBinding("standard").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,StandardTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("nGram")) {
    binder.addBinding("nGram").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,NGramTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("ngram")) {
    binder.addBinding("ngram").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,NGramTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("edgeNGram")) {
    binder.addBinding("edgeNGram").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,EdgeNGramTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("edge_ngram")) {
    binder.addBinding("edge_ngram").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,EdgeNGramTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("shingle")) {
    binder.addBinding("shingle").toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class,ShingleTokenFilterFactory.class)).in(Scopes.SINGLETON);
  }
}
