{
  if (!groupSettings.containsKey("arabic")) {
    binder.addBinding("arabic").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,ArabicAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("brazilian")) {
    binder.addBinding("brazilian").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,BrazilianAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("chinese")) {
    binder.addBinding("chinese").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,ChineseAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("cjk")) {
    binder.addBinding("cjk").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,ChineseAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("czech")) {
    binder.addBinding("czech").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,CzechAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("dutch")) {
    binder.addBinding("dutch").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,DutchAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("french")) {
    binder.addBinding("french").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,FrenchAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("german")) {
    binder.addBinding("german").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,GermanAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("greek")) {
    binder.addBinding("greek").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,GreekAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("persian")) {
    binder.addBinding("persian").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,PersianAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("russian")) {
    binder.addBinding("russian").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,RussianAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
  if (!groupSettings.containsKey("thai")) {
    binder.addBinding("thai").toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class,ThaiAnalyzerProvider.class)).in(Scopes.SINGLETON);
  }
}
