{
  final String[] params=indicesShardsReplicasNodes.split(",");
  int numIndices=toInt(params[0]);
  int numShards=toInt(params[1]);
  int numReplicas=toInt(params[2]);
  int numNodes=toInt(params[3]);
  strategy=Allocators.createAllocationService(Settings.builder().put("cluster.routing.allocation.awareness.attributes","tag").build());
  MetaData.Builder mb=MetaData.builder();
  for (int i=1; i <= numIndices; i++) {
    mb.put(IndexMetaData.builder("test_" + i).settings(Settings.builder().put("index.version.created",Version.CURRENT)).numberOfShards(numShards).numberOfReplicas(numReplicas));
  }
  MetaData metaData=mb.build();
  RoutingTable.Builder rb=RoutingTable.builder();
  for (int i=1; i <= numIndices; i++) {
    rb.addAsNew(metaData.index("test_" + i));
  }
  RoutingTable routingTable=rb.build();
  DiscoveryNodes.Builder nb=DiscoveryNodes.builder();
  for (int i=1; i <= numNodes; i++) {
    nb.put(Allocators.newNode("node" + i,Collections.singletonMap("tag","tag_" + (i % numTags))));
  }
  initialClusterState=ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(routingTable).nodes(nb).build();
}
