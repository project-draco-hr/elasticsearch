{
  String parentMapping=XContentFactory.jsonBuilder().startObject().startObject("parent_type").endObject().endObject().string();
  String childMapping=XContentFactory.jsonBuilder().startObject().startObject("child_type").startObject("_parent").field("type","parent_type").endObject().endObject().endObject().string();
  IndexService indexService=createIndex("test");
  indexService.mapperService().merge("parent_type",new CompressedXContent(parentMapping),MergeReason.MAPPING_UPDATE,false);
  indexService.mapperService().merge("child_type",new CompressedXContent(childMapping),MergeReason.MAPPING_UPDATE,false);
  DocumentMapper parentDocMapper=indexService.mapperService().documentMapper("parent_type");
  ParsedDocument doc=parentDocMapper.parse(SourceToParse.source("test","parent_type","1122",new BytesArray("{}")));
  assertEquals(1,getNumberOfFieldWithParentPrefix(doc.rootDoc()));
  assertEquals("1122",doc.rootDoc().getBinaryValue("_parent#parent_type").utf8ToString());
  DocumentMapper childDocMapper=indexService.mapperService().documentMapper("child_type");
  doc=childDocMapper.parse(SourceToParse.source("test","child_type","1",new BytesArray("{}")).parent("1122"));
  assertEquals(1,getNumberOfFieldWithParentPrefix(doc.rootDoc()));
  assertEquals("1122",doc.rootDoc().getBinaryValue("_parent#parent_type").utf8ToString());
}
