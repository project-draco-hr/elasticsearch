{
  assertAcked(prepareCreate("test").addAlias(new Alias("alias")).setSettings(Settings.builder().put("index.refresh_interval",-1)));
  ensureGreen();
  GetResponse response=client().prepareGet("test","type1","1").get();
  assertThat(response.isExists(),equalTo(false));
  logger.info("--> index doc 1");
  client().prepareIndex("test","type1","1").setSource("field1","value1","field2","value2").get();
  response=client().prepareGet(indexOrAlias(),"type1","1").setVersion(Versions.MATCH_ANY).get();
  assertThat(response.isExists(),equalTo(true));
  assertThat(response.getId(),equalTo("1"));
  assertThat(response.getVersion(),equalTo(1L));
  response=client().prepareGet(indexOrAlias(),"type1","1").setVersion(1).get();
  assertThat(response.isExists(),equalTo(true));
  assertThat(response.getId(),equalTo("1"));
  assertThat(response.getVersion(),equalTo(1L));
  try {
    client().prepareGet(indexOrAlias(),"type1","1").setVersion(2).get();
    fail();
  }
 catch (  VersionConflictEngineException e) {
  }
  refresh();
  response=client().prepareGet(indexOrAlias(),"type1","1").setVersion(Versions.MATCH_ANY).setRealtime(false).get();
  assertThat(response.isExists(),equalTo(true));
  assertThat(response.getId(),equalTo("1"));
  assertThat(response.getIndex(),equalTo("test"));
  assertThat(response.getVersion(),equalTo(1L));
  response=client().prepareGet(indexOrAlias(),"type1","1").setVersion(1).setRealtime(false).get();
  assertThat(response.isExists(),equalTo(true));
  assertThat(response.getId(),equalTo("1"));
  assertThat(response.getIndex(),equalTo("test"));
  assertThat(response.getVersion(),equalTo(1L));
  try {
    client().prepareGet(indexOrAlias(),"type1","1").setVersion(2).setRealtime(false).get();
    fail();
  }
 catch (  VersionConflictEngineException e) {
  }
  logger.info("--> index doc 1 again, so increasing the version");
  client().prepareIndex("test","type1","1").setSource("field1","value1","field2","value2").get();
  response=client().prepareGet(indexOrAlias(),"type1","1").setVersion(Versions.MATCH_ANY).get();
  assertThat(response.isExists(),equalTo(true));
  assertThat(response.getId(),equalTo("1"));
  assertThat(response.getIndex(),equalTo("test"));
  assertThat(response.getVersion(),equalTo(2L));
  try {
    client().prepareGet(indexOrAlias(),"type1","1").setVersion(1).get();
    fail();
  }
 catch (  VersionConflictEngineException e) {
  }
  response=client().prepareGet(indexOrAlias(),"type1","1").setVersion(2).get();
  assertThat(response.isExists(),equalTo(true));
  assertThat(response.getId(),equalTo("1"));
  assertThat(response.getIndex(),equalTo("test"));
  assertThat(response.getVersion(),equalTo(2L));
  refresh();
  response=client().prepareGet(indexOrAlias(),"type1","1").setVersion(Versions.MATCH_ANY).setRealtime(false).get();
  assertThat(response.isExists(),equalTo(true));
  assertThat(response.getId(),equalTo("1"));
  assertThat(response.getIndex(),equalTo("test"));
  assertThat(response.getVersion(),equalTo(2L));
  try {
    client().prepareGet(indexOrAlias(),"type1","1").setVersion(1).setRealtime(false).get();
    fail();
  }
 catch (  VersionConflictEngineException e) {
  }
  response=client().prepareGet(indexOrAlias(),"type1","1").setVersion(2).setRealtime(false).get();
  assertThat(response.isExists(),equalTo(true));
  assertThat(response.getId(),equalTo("1"));
  assertThat(response.getIndex(),equalTo("test"));
  assertThat(response.getVersion(),equalTo(2L));
}
