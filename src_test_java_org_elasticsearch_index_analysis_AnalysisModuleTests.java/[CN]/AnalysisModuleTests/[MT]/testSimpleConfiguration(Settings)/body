{
  AnalysisService analysisService=getAnalysisService(settings);
  Analyzer analyzer=analysisService.analyzer("custom1").analyzer();
  assertThat(analyzer,instanceOf(CustomAnalyzer.class));
  CustomAnalyzer custom1=(CustomAnalyzer)analyzer;
  assertThat(custom1.tokenizerFactory(),instanceOf(StandardTokenizerFactory.class));
  assertThat(custom1.tokenFilters().length,equalTo(2));
  StopTokenFilterFactory stop1=(StopTokenFilterFactory)custom1.tokenFilters()[0];
  assertThat(stop1.stopWords().size(),equalTo(1));
  analyzer=analysisService.analyzer("custom2").analyzer();
  assertThat(analyzer,instanceOf(CustomAnalyzer.class));
  CustomAnalyzer custom2=(CustomAnalyzer)analyzer;
  analyzer=analysisService.analyzer("custom5").analyzer();
  assertThat(analyzer,instanceOf(CustomAnalyzer.class));
  CustomAnalyzer custom5=(CustomAnalyzer)analyzer;
  assertThat(custom5.charFilters()[0],instanceOf(MappingCharFilterFactory.class));
  analyzer=analysisService.analyzer("alias1").analyzer();
  assertThat(analyzer,instanceOf(StandardAnalyzer.class));
  analyzer=analysisService.analyzer("custom3").analyzer();
  assertThat(analyzer,instanceOf(CustomAnalyzer.class));
  CustomAnalyzer custom3=(CustomAnalyzer)analyzer;
  PatternReplaceCharFilterFactory patternReplaceCharFilterFactory=(PatternReplaceCharFilterFactory)custom3.charFilters()[0];
  assertThat(patternReplaceCharFilterFactory.getPattern().pattern(),equalTo("sample(.*)"));
  assertThat(patternReplaceCharFilterFactory.getReplacement(),equalTo("replacedSample $1"));
  analyzer=analysisService.analyzer("custom4").analyzer();
  assertThat(analyzer,instanceOf(CustomAnalyzer.class));
  CustomAnalyzer custom4=(CustomAnalyzer)analyzer;
  assertThat(custom4.tokenFilters()[0],instanceOf(MyFilterTokenFilterFactory.class));
  Set<?> wordList=Analysis.getWordSet(null,settings,"index.analysis.filter.dict_dec.word_list");
  MatcherAssert.assertThat(wordList.size(),equalTo(6));
}
