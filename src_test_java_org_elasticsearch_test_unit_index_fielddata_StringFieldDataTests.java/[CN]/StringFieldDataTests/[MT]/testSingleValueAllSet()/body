{
  fillSingleValueAllSet();
  IndexFieldData indexFieldData=getForField("value");
  AtomicReaderContext readerContext=refreshReader();
  AtomicFieldData fieldData=indexFieldData.load(readerContext);
  assertThat(fieldData.getNumDocs(),equalTo(3));
  BytesValues bytesValues=fieldData.getBytesValues();
  assertThat(bytesValues.isMultiValued(),equalTo(false));
  assertThat(bytesValues.hasValue(0),equalTo(true));
  assertThat(bytesValues.hasValue(1),equalTo(true));
  assertThat(bytesValues.hasValue(2),equalTo(true));
  assertThat(bytesValues.getValue(0),equalTo(new BytesRef(two())));
  assertThat(bytesValues.getValue(1),equalTo(new BytesRef(one())));
  assertThat(bytesValues.getValue(2),equalTo(new BytesRef(three())));
  BytesRef bytesRef=new BytesRef();
  assertThat(bytesValues.getValueScratch(0,bytesRef),equalTo(new BytesRef(two())));
  assertThat(bytesRef,equalTo(new BytesRef(two())));
  assertThat(bytesValues.getValueScratch(1,bytesRef),equalTo(new BytesRef(one())));
  assertThat(bytesRef,equalTo(new BytesRef(one())));
  assertThat(bytesValues.getValueScratch(2,bytesRef),equalTo(new BytesRef(three())));
  assertThat(bytesRef,equalTo(new BytesRef(three())));
  BytesValues.Iter bytesValuesIter=bytesValues.getIter(0);
  assertThat(bytesValuesIter.hasNext(),equalTo(true));
  assertThat(bytesValuesIter.next(),equalTo(new BytesRef(two())));
  assertThat(bytesValuesIter.hasNext(),equalTo(false));
  BytesValues hashedBytesValues=fieldData.getBytesValues();
  assertThat(hashedBytesValues.hasValue(0),equalTo(true));
  assertThat(hashedBytesValues.hasValue(1),equalTo(true));
  assertThat(hashedBytesValues.hasValue(2),equalTo(true));
  assertThat(convert(hashedBytesValues,0),equalTo(new HashedBytesRef(two())));
  assertThat(convert(hashedBytesValues,1),equalTo(new HashedBytesRef(one())));
  assertThat(convert(hashedBytesValues,2),equalTo(new HashedBytesRef(three())));
  BytesValues.Iter hashedBytesValuesIter=hashedBytesValues.getIter(0);
  assertThat(hashedBytesValuesIter.hasNext(),equalTo(true));
  assertThat(new HashedBytesRef(hashedBytesValuesIter.next(),hashedBytesValuesIter.hash()),equalTo(new HashedBytesRef(two())));
  assertThat(hashedBytesValuesIter.hasNext(),equalTo(false));
  IndexSearcher searcher=new IndexSearcher(readerContext.reader());
  TopFieldDocs topDocs;
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null,SortMode.MIN))));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(1));
  assertThat(toString(((FieldDoc)topDocs.scoreDocs[0]).fields[0]),equalTo(one()));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(0));
  assertThat(toString(((FieldDoc)topDocs.scoreDocs[1]).fields[0]),equalTo(two()));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(2));
  assertThat(toString(((FieldDoc)topDocs.scoreDocs[2]).fields[0]),equalTo(three()));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null,SortMode.MAX),true)));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(1));
}
