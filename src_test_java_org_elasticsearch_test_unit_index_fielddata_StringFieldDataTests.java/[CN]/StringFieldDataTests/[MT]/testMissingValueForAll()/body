{
  fillAllMissing();
  IndexFieldData indexFieldData=getForField("value");
  AtomicFieldData fieldData=indexFieldData.load(refreshReader());
  assertThat(fieldData.getNumDocs(),equalTo(3));
  BytesValues bytesValues=fieldData.getBytesValues();
  assertThat(bytesValues.isMultiValued(),equalTo(false));
  assertThat(bytesValues.hasValue(0),equalTo(false));
  assertThat(bytesValues.hasValue(1),equalTo(false));
  assertThat(bytesValues.hasValue(2),equalTo(false));
  assertThat(bytesValues.getValue(0),nullValue());
  assertThat(bytesValues.getValue(1),nullValue());
  assertThat(bytesValues.getValue(2),nullValue());
  BytesRef bytesRef=new BytesRef();
  assertThat(bytesValues.getValueScratch(0,bytesRef),equalTo(new BytesRef()));
  assertThat(bytesRef,equalTo(new BytesRef()));
  assertThat(bytesValues.getValueScratch(1,bytesRef),equalTo(new BytesRef()));
  assertThat(bytesRef,equalTo(new BytesRef()));
  assertThat(bytesValues.getValueScratch(2,bytesRef),equalTo(new BytesRef()));
  assertThat(bytesRef,equalTo(new BytesRef()));
  BytesValues.Iter bytesValuesIter=bytesValues.getIter(0);
  assertThat(bytesValuesIter.hasNext(),equalTo(false));
  bytesValuesIter=bytesValues.getIter(1);
  assertThat(bytesValuesIter.hasNext(),equalTo(false));
  bytesValuesIter=bytesValues.getIter(2);
  assertThat(bytesValuesIter.hasNext(),equalTo(false));
  BytesValues hashedBytesValues=fieldData.getBytesValues();
  assertThat(hashedBytesValues.hasValue(0),equalTo(false));
  assertThat(hashedBytesValues.hasValue(1),equalTo(false));
  assertThat(hashedBytesValues.hasValue(2),equalTo(false));
  assertThat(hashedBytesValues.getValue(0),nullValue());
  assertThat(hashedBytesValues.getValue(1),nullValue());
  assertThat(hashedBytesValues.getValue(2),nullValue());
  BytesValues.Iter hashedBytesValuesIter=hashedBytesValues.getIter(0);
  assertThat(hashedBytesValuesIter.hasNext(),equalTo(false));
  hashedBytesValuesIter=hashedBytesValues.getIter(1);
  assertThat(hashedBytesValuesIter.hasNext(),equalTo(false));
  hashedBytesValuesIter=hashedBytesValues.getIter(2);
  assertThat(hashedBytesValuesIter.hasNext(),equalTo(false));
  StringValues stringValues=fieldData.getStringValues();
  assertThat(stringValues.hasValue(0),equalTo(false));
  assertThat(stringValues.hasValue(1),equalTo(false));
  assertThat(stringValues.hasValue(2),equalTo(false));
  assertThat(stringValues.getValue(0),nullValue());
  assertThat(stringValues.getValue(1),nullValue());
  assertThat(stringValues.getValue(2),nullValue());
  StringArrayRef stringArrayRef;
  stringArrayRef=stringValues.getValues(0);
  assertThat(stringArrayRef.size(),equalTo(0));
  stringArrayRef=stringValues.getValues(1);
  assertThat(stringArrayRef.size(),equalTo(0));
  stringArrayRef=stringValues.getValues(2);
  assertThat(stringArrayRef.size(),equalTo(0));
  StringValues.Iter stringValuesIter=stringValues.getIter(0);
  assertThat(stringValuesIter.hasNext(),equalTo(false));
  stringValuesIter=stringValues.getIter(1);
  assertThat(stringValuesIter.hasNext(),equalTo(false));
  stringValuesIter=stringValues.getIter(2);
  assertThat(stringValuesIter.hasNext(),equalTo(false));
  stringValues.forEachValueInDoc(0,new StringValuesVerifierProc(0).addMissing());
  stringValues.forEachValueInDoc(1,new StringValuesVerifierProc(1).addMissing());
  stringValues.forEachValueInDoc(2,new StringValuesVerifierProc(2).addMissing());
}
