{
  fillMultiValueAllSet();
  IndexFieldData indexFieldData=getForField("value");
  AtomicFieldData fieldData=indexFieldData.load(refreshReader());
  assertThat(fieldData.getNumDocs(),equalTo(3));
  BytesValues bytesValues=fieldData.getBytesValues();
  assertThat(bytesValues.isMultiValued(),equalTo(true));
  assertThat(bytesValues.hasValue(0),equalTo(true));
  assertThat(bytesValues.hasValue(1),equalTo(true));
  assertThat(bytesValues.hasValue(2),equalTo(true));
  assertThat(bytesValues.getValue(0),equalTo(new BytesRef(two())));
  assertThat(bytesValues.getValue(1),equalTo(new BytesRef(one())));
  assertThat(bytesValues.getValue(2),equalTo(new BytesRef(three())));
  BytesRef bytesRef=new BytesRef();
  assertThat(bytesValues.getValueScratch(0,bytesRef),equalTo(new BytesRef(two())));
  assertThat(bytesRef,equalTo(new BytesRef(two())));
  assertThat(bytesValues.getValueScratch(1,bytesRef),equalTo(new BytesRef(one())));
  assertThat(bytesRef,equalTo(new BytesRef(one())));
  assertThat(bytesValues.getValueScratch(2,bytesRef),equalTo(new BytesRef(three())));
  assertThat(bytesRef,equalTo(new BytesRef(three())));
  BytesRefArrayRef bytesRefArrayRef=bytesValues.getValues(0);
  assertThat(bytesRefArrayRef.size(),equalTo(2));
  assertThat(bytesRefArrayRef.values[bytesRefArrayRef.start],equalTo(new BytesRef(two())));
  assertThat(bytesRefArrayRef.values[bytesRefArrayRef.start + 1],equalTo(new BytesRef(four())));
  bytesRefArrayRef=bytesValues.getValues(1);
  assertThat(bytesRefArrayRef.size(),equalTo(1));
  assertThat(bytesRefArrayRef.values[bytesRefArrayRef.start],equalTo(new BytesRef(one())));
  bytesRefArrayRef=bytesValues.getValues(2);
  assertThat(bytesRefArrayRef.size(),equalTo(1));
  assertThat(bytesRefArrayRef.values[bytesRefArrayRef.start],equalTo(new BytesRef(three())));
  BytesValues.Iter bytesValuesIter=bytesValues.getIter(0);
  assertThat(bytesValuesIter.hasNext(),equalTo(true));
  assertThat(bytesValuesIter.next(),equalTo(new BytesRef(two())));
  assertThat(bytesValuesIter.hasNext(),equalTo(true));
  assertThat(bytesValuesIter.next(),equalTo(new BytesRef(four())));
  assertThat(bytesValuesIter.hasNext(),equalTo(false));
  bytesValues.forEachValueInDoc(0,new BytesValuesVerifierProc(0).addExpected(two()).addExpected(four()));
  bytesValues.forEachValueInDoc(1,new BytesValuesVerifierProc(1).addExpected(one()));
  bytesValues.forEachValueInDoc(2,new BytesValuesVerifierProc(2).addExpected(three()));
  HashedBytesValues hashedBytesValues=fieldData.getHashedBytesValues();
  assertThat(hashedBytesValues.hasValue(0),equalTo(true));
  assertThat(hashedBytesValues.hasValue(1),equalTo(true));
  assertThat(hashedBytesValues.hasValue(2),equalTo(true));
  assertThat(hashedBytesValues.getValue(0),equalTo(new HashedBytesRef(two())));
  assertThat(hashedBytesValues.getValue(1),equalTo(new HashedBytesRef(one())));
  assertThat(hashedBytesValues.getValue(2),equalTo(new HashedBytesRef(three())));
  HashedBytesValues.Iter hashedBytesValuesIter=hashedBytesValues.getIter(0);
  assertThat(hashedBytesValuesIter.hasNext(),equalTo(true));
  assertThat(hashedBytesValuesIter.next(),equalTo(new HashedBytesRef(two())));
  assertThat(hashedBytesValuesIter.hasNext(),equalTo(true));
  assertThat(hashedBytesValuesIter.next(),equalTo(new HashedBytesRef(four())));
  assertThat(hashedBytesValuesIter.hasNext(),equalTo(false));
  hashedBytesValues.forEachValueInDoc(0,new HashedBytesValuesVerifierProc(0).addExpected(two()).addExpected(four()));
  hashedBytesValues.forEachValueInDoc(1,new HashedBytesValuesVerifierProc(1).addExpected(one()));
  hashedBytesValues.forEachValueInDoc(2,new HashedBytesValuesVerifierProc(2).addExpected(three()));
  StringValues stringValues=fieldData.getStringValues();
  assertThat(stringValues.hasValue(0),equalTo(true));
  assertThat(stringValues.hasValue(1),equalTo(true));
  assertThat(stringValues.hasValue(2),equalTo(true));
  assertThat(stringValues.getValue(0),equalTo(two()));
  assertThat(stringValues.getValue(1),equalTo(one()));
  assertThat(stringValues.getValue(2),equalTo(three()));
  StringArrayRef stringArrayRef;
  stringArrayRef=stringValues.getValues(0);
  assertThat(stringArrayRef.size(),equalTo(2));
  assertThat(stringArrayRef.values[stringArrayRef.start],equalTo(two()));
  assertThat(stringArrayRef.values[stringArrayRef.start + 1],equalTo(four()));
  stringArrayRef=stringValues.getValues(1);
  assertThat(stringArrayRef.size(),equalTo(1));
  assertThat(stringArrayRef.values[stringArrayRef.start],equalTo(one()));
  stringArrayRef=stringValues.getValues(2);
  assertThat(stringArrayRef.size(),equalTo(1));
  assertThat(stringArrayRef.values[stringArrayRef.start],equalTo(three()));
  StringValues.Iter stringValuesIter=stringValues.getIter(0);
  assertThat(stringValuesIter.hasNext(),equalTo(true));
  assertThat(stringValuesIter.next(),equalTo(two()));
  assertThat(stringValuesIter.hasNext(),equalTo(true));
  assertThat(stringValuesIter.next(),equalTo(four()));
  assertThat(stringValuesIter.hasNext(),equalTo(false));
  stringValuesIter=stringValues.getIter(1);
  assertThat(stringValuesIter.hasNext(),equalTo(true));
  assertThat(stringValuesIter.next(),equalTo(one()));
  assertThat(stringValuesIter.hasNext(),equalTo(false));
  stringValuesIter=stringValues.getIter(2);
  assertThat(stringValuesIter.hasNext(),equalTo(true));
  assertThat(stringValuesIter.next(),equalTo(three()));
  assertThat(stringValuesIter.hasNext(),equalTo(false));
  stringValues.forEachValueInDoc(0,new StringValuesVerifierProc(0).addExpected(two()).addExpected(four()));
  stringValues.forEachValueInDoc(1,new StringValuesVerifierProc(1).addExpected(one()));
  stringValues.forEachValueInDoc(2,new StringValuesVerifierProc(2).addExpected(three()));
  IndexSearcher searcher=new IndexSearcher(DirectoryReader.open(writer,true));
  TopFieldDocs topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null,SortMode.MIN))));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs.length,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(1));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(2));
  topDocs=searcher.search(new MatchAllDocsQuery(),10,new Sort(new SortField("value",indexFieldData.comparatorSource(null,SortMode.MAX),true)));
  assertThat(topDocs.totalHits,equalTo(3));
  assertThat(topDocs.scoreDocs.length,equalTo(3));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(0));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(2));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(1));
}
