{
  this.recoveryStatus=recoveryStatus;
  final ImmutableMap<String,BlobMetaData> blobs;
  try {
    blobs=blobContainer.listBlobs();
  }
 catch (  IOException e) {
    throw new IndexShardGatewayRecoveryException(shardId,"Failed to list content of gateway",e);
  }
  List<CommitPoint> commitPointsList=Lists.newArrayList();
  boolean atLeastOneCommitPointExists=false;
  for (  String name : blobs.keySet()) {
    if (name.startsWith("commit-")) {
      atLeastOneCommitPointExists=true;
      try {
        commitPointsList.add(CommitPoints.fromXContent(blobContainer.readBlobFully(name)));
      }
 catch (      Exception e) {
        logger.warn("failed to read commit point [{}]",e,name);
      }
    }
  }
  if (atLeastOneCommitPointExists && commitPointsList.isEmpty()) {
    throw new IndexShardGatewayRecoveryException(shardId,"Commit points exists but none could be loaded",null);
  }
  CommitPoints commitPoints=new CommitPoints(commitPointsList);
  if (commitPoints.commits().isEmpty()) {
    try {
      indexShard.store().deleteContent();
    }
 catch (    IOException e) {
      logger.warn("failed to clean store before starting shard",e);
    }
    recoveryStatus.index().startTime(System.currentTimeMillis());
    recoveryStatus.index().time(System.currentTimeMillis() - recoveryStatus.index().startTime());
    return;
  }
  for (  CommitPoint commitPoint : commitPoints) {
    if (!commitPointExistsInBlobs(commitPoint,blobs)) {
      logger.warn("listed commit_point [{}]/[{}], but not all files exists, ignoring",commitPoint.name(),commitPoint.version());
      continue;
    }
    try {
      recoveryStatus.index().startTime(System.currentTimeMillis());
      recoverIndex(commitPoint,blobs);
      recoveryStatus.index().time(System.currentTimeMillis() - recoveryStatus.index().startTime());
      recoverTranslog(commitPoint,blobs);
      return;
    }
 catch (    Exception e) {
      throw new IndexShardGatewayRecoveryException(shardId,"failed to recover commit_point [" + commitPoint.name() + "]/["+ commitPoint.version()+ "]",e);
    }
  }
  throw new IndexShardGatewayRecoveryException(shardId,"No commit point data is available in gateway",null);
}
