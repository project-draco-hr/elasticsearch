{
  FakeFsDirectory[] directories=new FakeFsDirectory[]{new FakeFsDirectory("dir0",10L),new FakeFsDirectory("dir1",20L),new FakeFsDirectory("dir2",30L)};
  FakeDirectoryService directoryService=new FakeDirectoryService(directories);
  RandomWeightedDistributor randomWeightedDistributor=new RandomWeightedDistributor(directoryService);
  for (int i=0; i < 10000; i++) {
    ((FakeFsDirectory)randomWeightedDistributor.any()).incrementAllocationCount();
  }
  for (  FakeFsDirectory directory : directories) {
    assertThat(directory.getAllocationCount(),greaterThan(0));
  }
  assertThat((double)directories[1].getAllocationCount() / directories[0].getAllocationCount(),closeTo(2.0,0.5));
  assertThat((double)directories[2].getAllocationCount() / directories[0].getAllocationCount(),closeTo(3.0,0.5));
  for (  FakeFsDirectory directory : directories) {
    directory.resetAllocationCount();
  }
  directories[1].setUsableSpace(0L);
  for (int i=0; i < 1000; i++) {
    ((FakeFsDirectory)randomWeightedDistributor.any()).incrementAllocationCount();
  }
  assertThat(directories[0].getAllocationCount(),greaterThan(0));
  assertThat(directories[1].getAllocationCount(),equalTo(0));
  assertThat(directories[2].getAllocationCount(),greaterThan(0));
}
