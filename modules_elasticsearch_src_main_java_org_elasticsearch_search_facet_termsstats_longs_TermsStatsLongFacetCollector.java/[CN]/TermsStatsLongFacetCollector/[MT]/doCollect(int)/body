{
  if (!keyFieldData.hasValue(doc)) {
    missing++;
    return;
  }
  long key=keyFieldData.longValue(doc);
  InternalTermsStatsLongFacet.LongEntry longEntry=entries.get(key);
  if (longEntry == null) {
    longEntry=new InternalTermsStatsLongFacet.LongEntry(key,1,0,Double.NaN,Double.NaN);
    entries.put(key,longEntry);
  }
 else {
    longEntry.count++;
  }
  if (script == null) {
    if (valueFieldData.multiValued()) {
      for (      double value : valueFieldData.doubleValues(doc)) {
        if (value < longEntry.min || Double.isNaN(longEntry.min)) {
          longEntry.min=value;
        }
        if (value > longEntry.max || Double.isNaN(longEntry.max)) {
          longEntry.max=value;
        }
        longEntry.total+=value;
      }
    }
 else {
      double value=valueFieldData.doubleValue(doc);
      if (value < longEntry.min || Double.isNaN(longEntry.min)) {
        longEntry.min=value;
      }
      if (value > longEntry.max || Double.isNaN(longEntry.max)) {
        longEntry.max=value;
      }
      longEntry.total+=value;
    }
  }
 else {
    script.setNextDocId(doc);
    double value=script.runAsDouble();
    if (value < longEntry.min || Double.isNaN(longEntry.min)) {
      longEntry.min=value;
    }
    if (value > longEntry.max || Double.isNaN(longEntry.max)) {
      longEntry.max=value;
    }
    longEntry.total+=value;
  }
}
