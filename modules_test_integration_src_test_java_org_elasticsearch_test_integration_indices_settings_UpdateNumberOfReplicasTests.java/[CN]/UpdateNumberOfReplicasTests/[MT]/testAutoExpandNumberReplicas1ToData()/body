{
  logger.info("--> creating index test with auto expand replicas");
  client1.admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("number_of_shards",2).put("auto_expand_replicas","1-all")).execute().actionGet();
  logger.info("--> running cluster health");
  ClusterHealthResponse clusterHealth=client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(4).execute().actionGet();
  logger.info("--> done cluster health, status " + clusterHealth.status());
  assertThat(clusterHealth.timedOut(),equalTo(false));
  assertThat(clusterHealth.status(),equalTo(ClusterHealthStatus.GREEN));
  assertThat(clusterHealth.indices().get("test").activePrimaryShards(),equalTo(2));
  assertThat(clusterHealth.indices().get("test").numberOfReplicas(),equalTo(1));
  assertThat(clusterHealth.indices().get("test").activeShards(),equalTo(4));
  logger.info("--> add another node, should increase the number of replicas");
  startNode("node3");
  logger.info("--> running cluster health");
  clusterHealth=client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(6).execute().actionGet();
  logger.info("--> done cluster health, status " + clusterHealth.status());
  assertThat(clusterHealth.timedOut(),equalTo(false));
  assertThat(clusterHealth.status(),equalTo(ClusterHealthStatus.GREEN));
  assertThat(clusterHealth.indices().get("test").activePrimaryShards(),equalTo(2));
  assertThat(clusterHealth.indices().get("test").numberOfReplicas(),equalTo(2));
  assertThat(clusterHealth.indices().get("test").activeShards(),equalTo(6));
  logger.info("--> closing one node");
  closeNode("node3");
  logger.info("--> running cluster health");
  clusterHealth=client1.admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForActiveShards(4).execute().actionGet();
  logger.info("--> done cluster health, status " + clusterHealth.status());
  assertThat(clusterHealth.timedOut(),equalTo(false));
  assertThat(clusterHealth.status(),equalTo(ClusterHealthStatus.GREEN));
  assertThat(clusterHealth.indices().get("test").activePrimaryShards(),equalTo(2));
  assertThat(clusterHealth.indices().get("test").numberOfReplicas(),equalTo(1));
  assertThat(clusterHealth.indices().get("test").activeShards(),equalTo(4));
  logger.info("--> closing another node");
  closeNode("node2");
  logger.info("--> running cluster health");
  clusterHealth=client1.admin().cluster().prepareHealth().setWaitForYellowStatus().setWaitForActiveShards(2).execute().actionGet();
  logger.info("--> done cluster health, status " + clusterHealth.status());
  assertThat(clusterHealth.timedOut(),equalTo(false));
  assertThat(clusterHealth.status(),equalTo(ClusterHealthStatus.YELLOW));
  assertThat(clusterHealth.indices().get("test").activePrimaryShards(),equalTo(2));
  assertThat(clusterHealth.indices().get("test").numberOfReplicas(),equalTo(1));
  assertThat(clusterHealth.indices().get("test").activeShards(),equalTo(2));
}
