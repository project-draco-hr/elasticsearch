{
  assertAcked(prepareCreate("idx").addMapping("type","nested","type=nested"));
  List<IndexRequestBuilder> builders=new ArrayList<IndexRequestBuilder>();
  numParents=randomIntBetween(3,10);
  numChildren=new int[numParents];
  int totalChildren=0;
  for (int i=0; i < numParents; ++i) {
    if (i == numParents - 1 && totalChildren == 0) {
      numChildren[i]=randomIntBetween(1,5);
    }
 else {
      numChildren[i]=randomInt(5);
    }
    totalChildren+=numChildren[i];
  }
  assertTrue(totalChildren > 0);
  for (int i=0; i < numParents; i++) {
    XContentBuilder source=jsonBuilder().startObject().field("value",i + 1).startArray("nested");
    for (int j=0; j < numChildren[i]; ++j) {
      source=source.startObject().field("value",i + 1 + j).endObject();
    }
    source=source.endArray().endObject();
    builders.add(client().prepareIndex("idx","type","" + i + 1).setSource(source));
  }
  indexRandom(true,builders);
  ensureSearchable();
}
