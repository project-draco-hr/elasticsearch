{
  final boolean timeoutSet=searchContext.timeoutInMillis() != -1;
  final boolean terminateAfterSet=searchContext.terminateAfter() != SearchContext.DEFAULT_TERMINATE_AFTER;
  if (timeoutSet) {
    collector=Lucene.wrapTimeLimitingCollector(collector,searchContext.timeEstimateCounter(),searchContext.timeoutInMillis());
  }
  if (terminateAfterSet) {
    collector=Lucene.wrapCountBasedEarlyTerminatingCollector(collector,searchContext.terminateAfter());
  }
  if (currentState == Stage.MAIN_QUERY) {
    if (searchContext.parsedPostFilter() != null) {
      final Weight filterWeight=createNormalizedWeight(searchContext.parsedPostFilter().query(),false);
      collector=new FilteredCollector(collector,filterWeight);
    }
    if (queryCollectors != null && !queryCollectors.isEmpty()) {
      ArrayList<Collector> allCollectors=new ArrayList<>(queryCollectors.values());
      allCollectors.add(collector);
      collector=MultiCollector.wrap(allCollectors);
    }
    if (searchContext.minimumScore() != null) {
      collector=new MinimumScoreCollector(collector,searchContext.minimumScore());
    }
  }
  super.search(query,collector);
}
