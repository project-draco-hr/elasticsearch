{
  if (!input.incrementToken())   return false;
  char[] termBuffer=termAtt.buffer();
  int len=termAtt.length();
  if (len == 0) {
    return true;
  }
  int start=0;
  int end=0;
  int endOff=0;
  for (start=0; start < len && termBuffer[start] <= ' '; start++) {
  }
  for (end=len; end >= start && termBuffer[end - 1] <= ' '; end--) {
    endOff++;
  }
  if (start > 0 || end < len) {
    if (start < end) {
      termAtt.copyBuffer(termBuffer,start,(end - start));
    }
 else {
      termAtt.setEmpty();
    }
    if (updateOffsets) {
      int newStart=offsetAtt.startOffset() + start;
      int newEnd=offsetAtt.endOffset() - (start < end ? endOff : 0);
      offsetAtt.setOffset(newStart,newEnd);
    }
  }
  return true;
}
