{
  final double[] pcts=randomPercentiles();
  int sigDigits=randomSignificantDigits();
  SearchResponse searchResponse=client().prepareSearch("idx").setQuery(matchAllQuery()).addAggregation(global("global").subAggregation(percentiles("percentiles").numberOfSignificantValueDigits(sigDigits).method(PercentilesMethod.HDR).field("value").percentiles(pcts))).execute().actionGet();
  assertHitCount(searchResponse,10);
  Global global=searchResponse.getAggregations().get("global");
  assertThat(global,notNullValue());
  assertThat(global.getName(),equalTo("global"));
  assertThat(global.getDocCount(),equalTo(10L));
  assertThat(global.getAggregations(),notNullValue());
  assertThat(global.getAggregations().asMap().size(),equalTo(1));
  Percentiles percentiles=global.getAggregations().get("percentiles");
  assertThat(percentiles,notNullValue());
  assertThat(percentiles.getName(),equalTo("percentiles"));
  assertThat((Percentiles)global.getProperty("percentiles"),sameInstance(percentiles));
}
