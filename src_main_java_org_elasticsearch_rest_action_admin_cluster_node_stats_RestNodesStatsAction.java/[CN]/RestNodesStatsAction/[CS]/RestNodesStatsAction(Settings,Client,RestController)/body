{
  super(settings,client);
  controller.registerHandler(RestRequest.Method.GET,"/_cluster/nodes/stats",this);
  controller.registerHandler(RestRequest.Method.GET,"/_cluster/nodes/{nodeId}/stats",this);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats",this);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats",this);
  RestIndicesHandler indicesHandler=new RestIndicesHandler(new CommonStatsFlags().all());
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/indices",indicesHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/indices",indicesHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/indices/stats",indicesHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/indices/stats",indicesHandler);
  for (  Flag flag : CommonStatsFlags.Flag.values()) {
    indicesHandler=new RestIndicesHandler(new CommonStatsFlags().clear().set(flag,true));
    controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/indices/" + flag.getRestName(),indicesHandler);
    controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/indices/" + flag.getRestName(),indicesHandler);
    controller.registerHandler(RestRequest.Method.GET,"/_nodes/indices/" + flag.getRestName() + "/stats",indicesHandler);
    controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/indices/" + flag.getRestName() + "/stats",indicesHandler);
    if (flag == Flag.FieldData || flag == Flag.Completion) {
      controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/indices/" + flag.getRestName() + "/{fields}",indicesHandler);
      controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/indices/" + flag.getRestName() + "/{fields}",indicesHandler);
      controller.registerHandler(RestRequest.Method.GET,"/_nodes/indices/" + flag.getRestName() + "/{fields}/stats",indicesHandler);
      controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/indices/" + flag.getRestName() + "/{fields}/stats",indicesHandler);
    }
  }
  RestOsHandler osHandler=new RestOsHandler();
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/os",osHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/os",osHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/os/stats",osHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/os/stats",osHandler);
  RestProcessHandler processHandler=new RestProcessHandler();
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/process",processHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/process",processHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/process/stats",processHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/process/stats",processHandler);
  RestJvmHandler jvmHandler=new RestJvmHandler();
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/jvm",jvmHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/jvm",jvmHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/jvm/stats",jvmHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/jvm/stats",jvmHandler);
  RestThreadPoolHandler threadPoolHandler=new RestThreadPoolHandler();
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/thread_pool",threadPoolHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/thread_pool",threadPoolHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/thread_pool/stats",threadPoolHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/thread_pool/stats",threadPoolHandler);
  RestNetworkHandler networkHandler=new RestNetworkHandler();
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/network",networkHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/network",networkHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/network/stats",networkHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/network/stats",networkHandler);
  RestFsHandler fsHandler=new RestFsHandler();
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/fs",fsHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/fs",fsHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/fs/stats",fsHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/fs/stats",fsHandler);
  RestTransportHandler transportHandler=new RestTransportHandler();
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/transport",transportHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/transport",transportHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/transport/stats",transportHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/transport/stats",transportHandler);
  RestHttpHandler httpHandler=new RestHttpHandler();
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/http",httpHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/http",httpHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/http/stats",httpHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/http/stats",httpHandler);
  RestBreakerHandler breakerHandler=new RestBreakerHandler();
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/stats/breaker",breakerHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/stats/breaker",breakerHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/breaker/stats",breakerHandler);
  controller.registerHandler(RestRequest.Method.GET,"/_nodes/{nodeId}/breaker/stats",breakerHandler);
}
