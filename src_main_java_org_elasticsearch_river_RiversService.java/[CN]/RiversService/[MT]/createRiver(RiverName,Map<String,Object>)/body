{
  if (riversInjectors.containsKey(riverName)) {
    logger.warn("ignoring river [{}][{}] creation, already exists",riverName.type(),riverName.name());
    return;
  }
  logger.debug("creating river [{}][{}]",riverName.type(),riverName.name());
  try {
    ModulesBuilder modules=new ModulesBuilder();
    modules.add(new RiverNameModule(riverName));
    modules.add(new RiverModule(riverName,settings,this.settings,typesRegistry));
    modules.add(new RiversPluginsModule(this.settings,injector.getInstance(PluginsService.class)));
    Injector indexInjector=modules.createChildInjector(injector);
    riversInjectors.put(riverName,indexInjector);
    River river=indexInjector.getInstance(River.class);
    rivers=MapBuilder.newMapBuilder(rivers).put(riverName,river).immutableMap();
    river.start();
    XContentBuilder builder=XContentFactory.jsonBuilder().startObject();
    builder.startObject("node");
    builder.field("id",clusterService.localNode().id());
    builder.field("name",clusterService.localNode().name());
    builder.field("transport_address",clusterService.localNode().address().toString());
    builder.endObject();
    builder.endObject();
    client.prepareIndex(riverIndexName,riverName.name(),"_status").setConsistencyLevel(WriteConsistencyLevel.ONE).setSource(builder).execute().actionGet();
  }
 catch (  Exception e) {
    logger.warn("failed to create river [{}][{}]",e,riverName.type(),riverName.name());
    try {
      XContentBuilder builder=XContentFactory.jsonBuilder().startObject();
      builder.field("error",ExceptionsHelper.detailedMessage(e));
      builder.startObject("node");
      builder.field("id",clusterService.localNode().id());
      builder.field("name",clusterService.localNode().name());
      builder.field("transport_address",clusterService.localNode().address().toString());
      builder.endObject();
      builder.endObject();
      client.prepareIndex(riverIndexName,riverName.name(),"_status").setConsistencyLevel(WriteConsistencyLevel.ONE).setSource(builder).execute().actionGet();
    }
 catch (    Exception e1) {
      logger.warn("failed to write failed status for river creation",e);
    }
  }
}
