{
  super(store);
  this.indexSettingsService=indexSettingsService;
  this.forceMergeDeletesPctAllowed=componentSettings.getAsDouble("expunge_deletes_allowed",10d);
  this.floorSegment=componentSettings.getAsBytesSize("floor_segment",new ByteSizeValue(2,ByteSizeUnit.MB));
  this.maxMergeAtOnce=componentSettings.getAsInt("max_merge_at_once",10);
  this.maxMergeAtOnceExplicit=componentSettings.getAsInt("max_merge_at_once_explicit",30);
  this.maxMergedSegment=componentSettings.getAsBytesSize("max_merged_segment",componentSettings.getAsBytesSize("max_merge_segment",new ByteSizeValue(5,ByteSizeUnit.GB)));
  this.segmentsPerTier=componentSettings.getAsDouble("segments_per_tier",10.0d);
  this.reclaimDeletesWeight=componentSettings.getAsDouble("reclaim_deletes_weight",2.0d);
  fixSettingsIfNeeded();
  logger.debug("using [tiered] merge policy with expunge_deletes_allowed[{}], floor_segment[{}], max_merge_at_once[{}], max_merge_at_once_explicit[{}], max_merged_segment[{}], segments_per_tier[{}], reclaim_deletes_weight[{}]",forceMergeDeletesPctAllowed,floorSegment,maxMergeAtOnce,maxMergeAtOnceExplicit,maxMergedSegment,segmentsPerTier,reclaimDeletesWeight);
  indexSettingsService.addListener(applySettings);
}
