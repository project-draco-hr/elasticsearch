{
  double oldExpungeDeletesPctAllowed=mergePolicy.getForceMergeDeletesPctAllowed();
  double expungeDeletesPctAllowed=settings.getAsDouble(INDEX_MERGE_POLICY_EXPUNGE_DELETES_ALLOWED,DEFAULT_EXPUNGE_DELETES_ALLOWED);
  if (expungeDeletesPctAllowed != oldExpungeDeletesPctAllowed) {
    logger.info("updating [expunge_deletes_allowed] from [{}] to [{}]",oldExpungeDeletesPctAllowed,expungeDeletesPctAllowed);
    mergePolicy.setForceMergeDeletesPctAllowed(expungeDeletesPctAllowed);
  }
  double oldFloorSegmentMB=mergePolicy.getFloorSegmentMB();
  ByteSizeValue floorSegment=settings.getAsBytesSize(INDEX_MERGE_POLICY_FLOOR_SEGMENT,DEFAULT_FLOOR_SEGMENT);
  if (floorSegment.mbFrac() != oldFloorSegmentMB) {
    logger.info("updating [floor_segment] from [{}mb] to [{}]",oldFloorSegmentMB,floorSegment);
    mergePolicy.setFloorSegmentMB(floorSegment.mbFrac());
  }
  double oldSegmentsPerTier=mergePolicy.getSegmentsPerTier();
  double segmentsPerTier=settings.getAsDouble(INDEX_MERGE_POLICY_SEGMENTS_PER_TIER,DEFAULT_SEGMENTS_PER_TIER);
  if (segmentsPerTier != oldSegmentsPerTier) {
    logger.info("updating [segments_per_tier] from [{}] to [{}]",oldSegmentsPerTier,segmentsPerTier);
    mergePolicy.setSegmentsPerTier(segmentsPerTier);
  }
  int oldMaxMergeAtOnce=mergePolicy.getMaxMergeAtOnce();
  int maxMergeAtOnce=settings.getAsInt(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE,DEFAULT_MAX_MERGE_AT_ONCE);
  if (maxMergeAtOnce != oldMaxMergeAtOnce) {
    logger.info("updating [max_merge_at_once] from [{}] to [{}]",oldMaxMergeAtOnce,maxMergeAtOnce);
    maxMergeAtOnce=adjustMaxMergeAtOnceIfNeeded(maxMergeAtOnce,segmentsPerTier);
    mergePolicy.setMaxMergeAtOnce(maxMergeAtOnce);
  }
  int oldMaxMergeAtOnceExplicit=mergePolicy.getMaxMergeAtOnceExplicit();
  int maxMergeAtOnceExplicit=settings.getAsInt(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_EXPLICIT,DEFAULT_MAX_MERGE_AT_ONCE_EXPLICIT);
  if (maxMergeAtOnceExplicit != oldMaxMergeAtOnceExplicit) {
    logger.info("updating [max_merge_at_once_explicit] from [{}] to [{}]",oldMaxMergeAtOnceExplicit,maxMergeAtOnceExplicit);
    mergePolicy.setMaxMergeAtOnceExplicit(maxMergeAtOnceExplicit);
  }
  double oldMaxMergedSegmentMB=mergePolicy.getMaxMergedSegmentMB();
  ByteSizeValue maxMergedSegment=settings.getAsBytesSize(INDEX_MERGE_POLICY_MAX_MERGED_SEGMENT,DEFAULT_MAX_MERGED_SEGMENT);
  if (maxMergedSegment.mbFrac() != oldMaxMergedSegmentMB) {
    logger.info("updating [max_merged_segment] from [{}mb] to [{}]",oldMaxMergedSegmentMB,maxMergedSegment);
    mergePolicy.setMaxMergedSegmentMB(maxMergedSegment.mbFrac());
  }
  double oldReclaimDeletesWeight=mergePolicy.getReclaimDeletesWeight();
  double reclaimDeletesWeight=settings.getAsDouble(INDEX_MERGE_POLICY_RECLAIM_DELETES_WEIGHT,DEFAULT_RECLAIM_DELETES_WEIGHT);
  if (reclaimDeletesWeight != oldReclaimDeletesWeight) {
    logger.info("updating [reclaim_deletes_weight] from [{}] to [{}]",oldReclaimDeletesWeight,reclaimDeletesWeight);
    mergePolicy.setReclaimDeletesWeight(reclaimDeletesWeight);
  }
  double noCFSRatio=parseNoCFSRatio(settings.get(INDEX_COMPOUND_FORMAT,Double.toString(TieredMergePolicyProvider.this.noCFSRatio)));
  if (noCFSRatio != TieredMergePolicyProvider.this.noCFSRatio) {
    logger.info("updating index.compound_format from [{}] to [{}]",formatNoCFSRatio(TieredMergePolicyProvider.this.noCFSRatio),formatNoCFSRatio(noCFSRatio));
    mergePolicy.setNoCFSRatio(noCFSRatio);
    TieredMergePolicyProvider.this.noCFSRatio=noCFSRatio;
  }
}
