{
  double expungeDeletesPctAllowed=settings.getAsDouble(INDEX_MERGE_POLICY_EXPUNGE_DELETES_ALLOWED,TieredMergePolicyProvider.this.forceMergeDeletesPctAllowed);
  if (expungeDeletesPctAllowed != TieredMergePolicyProvider.this.forceMergeDeletesPctAllowed) {
    logger.info("updating [expunge_deletes_allowed] from [{}] to [{}]",TieredMergePolicyProvider.this.forceMergeDeletesPctAllowed,expungeDeletesPctAllowed);
    TieredMergePolicyProvider.this.forceMergeDeletesPctAllowed=expungeDeletesPctAllowed;
    for (    CustomTieredMergePolicyProvider policy : policies) {
      policy.setForceMergeDeletesPctAllowed(expungeDeletesPctAllowed);
    }
  }
  ByteSizeValue floorSegment=settings.getAsBytesSize(INDEX_MERGE_POLICY_FLOOR_SEGMENT,TieredMergePolicyProvider.this.floorSegment);
  if (!floorSegment.equals(TieredMergePolicyProvider.this.floorSegment)) {
    logger.info("updating [floor_segment] from [{}] to [{}]",TieredMergePolicyProvider.this.floorSegment,floorSegment);
    TieredMergePolicyProvider.this.floorSegment=floorSegment;
    for (    CustomTieredMergePolicyProvider policy : policies) {
      policy.setFloorSegmentMB(floorSegment.mbFrac());
    }
  }
  int maxMergeAtOnce=settings.getAsInt(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE,TieredMergePolicyProvider.this.maxMergeAtOnce);
  if (maxMergeAtOnce != TieredMergePolicyProvider.this.maxMergeAtOnce) {
    logger.info("updating [max_merge_at_once] from [{}] to [{}]",TieredMergePolicyProvider.this.maxMergeAtOnce,maxMergeAtOnce);
    TieredMergePolicyProvider.this.maxMergeAtOnce=maxMergeAtOnce;
    for (    CustomTieredMergePolicyProvider policy : policies) {
      policy.setMaxMergeAtOnce(maxMergeAtOnce);
    }
  }
  int maxMergeAtOnceExplicit=settings.getAsInt(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_EXPLICIT,TieredMergePolicyProvider.this.maxMergeAtOnceExplicit);
  if (maxMergeAtOnceExplicit != TieredMergePolicyProvider.this.maxMergeAtOnceExplicit) {
    logger.info("updating [max_merge_at_once_explicit] from [{}] to [{}]",TieredMergePolicyProvider.this.maxMergeAtOnceExplicit,maxMergeAtOnceExplicit);
    TieredMergePolicyProvider.this.maxMergeAtOnceExplicit=maxMergeAtOnceExplicit;
    for (    CustomTieredMergePolicyProvider policy : policies) {
      policy.setMaxMergeAtOnceExplicit(maxMergeAtOnceExplicit);
    }
  }
  ByteSizeValue maxMergedSegment=settings.getAsBytesSize(INDEX_MERGE_POLICY_MAX_MERGED_SEGMENT,TieredMergePolicyProvider.this.maxMergedSegment);
  if (!maxMergedSegment.equals(TieredMergePolicyProvider.this.maxMergedSegment)) {
    logger.info("updating [max_merged_segment] from [{}] to [{}]",TieredMergePolicyProvider.this.maxMergedSegment,maxMergedSegment);
    TieredMergePolicyProvider.this.maxMergedSegment=maxMergedSegment;
    for (    CustomTieredMergePolicyProvider policy : policies) {
      policy.setFloorSegmentMB(maxMergedSegment.mbFrac());
    }
  }
  double segmentsPerTier=settings.getAsDouble(INDEX_MERGE_POLICY_SEGMENTS_PER_TIER,TieredMergePolicyProvider.this.segmentsPerTier);
  if (segmentsPerTier != TieredMergePolicyProvider.this.segmentsPerTier) {
    logger.info("updating [segments_per_tier] from [{}] to [{}]",TieredMergePolicyProvider.this.segmentsPerTier,segmentsPerTier);
    TieredMergePolicyProvider.this.segmentsPerTier=segmentsPerTier;
    for (    CustomTieredMergePolicyProvider policy : policies) {
      policy.setSegmentsPerTier(segmentsPerTier);
    }
  }
  double reclaimDeletesWeight=settings.getAsDouble(INDEX_MERGE_POLICY_RECLAIM_DELETES_WEIGHT,TieredMergePolicyProvider.this.reclaimDeletesWeight);
  if (reclaimDeletesWeight != TieredMergePolicyProvider.this.reclaimDeletesWeight) {
    logger.info("updating [reclaim_deletes_weight] from [{}] to [{}]",TieredMergePolicyProvider.this.reclaimDeletesWeight,reclaimDeletesWeight);
    TieredMergePolicyProvider.this.reclaimDeletesWeight=reclaimDeletesWeight;
    for (    CustomTieredMergePolicyProvider policy : policies) {
      policy.setReclaimDeletesWeight(reclaimDeletesWeight);
    }
  }
  final double noCFSRatio=parseNoCFSRatio(settings.get(INDEX_COMPOUND_FORMAT,Double.toString(TieredMergePolicyProvider.this.noCFSRatio)));
  if (noCFSRatio != TieredMergePolicyProvider.this.noCFSRatio) {
    logger.info("updating index.compound_format from [{}] to [{}]",formatNoCFSRatio(TieredMergePolicyProvider.this.noCFSRatio),formatNoCFSRatio(noCFSRatio));
    TieredMergePolicyProvider.this.noCFSRatio=noCFSRatio;
    for (    CustomTieredMergePolicyProvider policy : policies) {
      policy.setNoCFSRatio(noCFSRatio);
    }
  }
  fixSettingsIfNeeded();
}
