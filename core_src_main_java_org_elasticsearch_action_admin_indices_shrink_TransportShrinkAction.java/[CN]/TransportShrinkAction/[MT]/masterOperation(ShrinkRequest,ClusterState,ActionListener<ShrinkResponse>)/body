{
  final String sourceIndex=indexNameExpressionResolver.resolveDateMathExpression(shrinkRequest.getSourceIndex());
  client.admin().indices().prepareStats(sourceIndex).clear().setDocs(true).execute(new ActionListener<IndicesStatsResponse>(){
    @Override public void onResponse(    IndicesStatsResponse indicesStatsResponse){
      CreateIndexClusterStateUpdateRequest updateRequest=prepareCreateIndexRequest(shrinkRequest,state,indicesStatsResponse.getTotal().getDocs(),indexNameExpressionResolver);
      createIndexService.createIndex(updateRequest,new ActionListener<ClusterStateUpdateResponse>(){
        @Override public void onResponse(        ClusterStateUpdateResponse response){
          listener.onResponse(new ShrinkResponse(response.isAcknowledged()));
        }
        @Override public void onFailure(        Throwable t){
          if (t instanceof IndexAlreadyExistsException) {
            logger.trace("[{}] failed to create shrink index",t,updateRequest.index());
          }
 else {
            logger.debug("[{}] failed to create shrink index",t,updateRequest.index());
          }
          listener.onFailure(t);
        }
      }
);
    }
    @Override public void onFailure(    Throwable e){
      listener.onFailure(e);
    }
  }
);
}
