{
  super(engineConfig);
  if (engineConfig.getRefreshListeners() != null) {
    throw new IllegalArgumentException("ShadowEngine doesn't support RefreshListeners");
  }
  SearcherFactory searcherFactory=new EngineSearcherFactory(engineConfig);
  final long nonexistentRetryTime=engineConfig.getIndexSettings().getSettings().getAsTime(NONEXISTENT_INDEX_RETRY_WAIT,DEFAULT_NONEXISTENT_INDEX_RETRY_WAIT).getMillis();
  try {
    DirectoryReader reader=null;
    store.incRef();
    boolean success=false;
    try {
      if (Lucene.waitForIndex(store.directory(),nonexistentRetryTime)) {
        reader=ElasticsearchDirectoryReader.wrap(DirectoryReader.open(store.directory()),shardId);
        this.searcherManager=new SearcherManager(reader,searcherFactory);
        this.lastCommittedSegmentInfos=readLastCommittedSegmentInfos(searcherManager,store);
        success=true;
      }
 else {
        throw new IllegalStateException("failed to open a shadow engine after" + nonexistentRetryTime + "ms, "+ "directory is not an index");
      }
    }
 catch (    Throwable e) {
      logger.warn("failed to create new reader",e);
      throw e;
    }
 finally {
      if (success == false) {
        IOUtils.closeWhileHandlingException(reader);
        store.decRef();
      }
    }
  }
 catch (  IOException ex) {
    throw new EngineCreationFailureException(shardId,"failed to open index reader",ex);
  }
  logger.trace("created new ShadowEngine");
}
