{
  if (topDocs.scoreDocs.length - from < 0) {
    out.writeBoolean(false);
    return;
  }
  out.writeBoolean(true);
  if (topDocs instanceof TopFieldDocs) {
    out.writeBoolean(true);
    TopFieldDocs topFieldDocs=(TopFieldDocs)topDocs;
    out.writeVInt(topDocs.totalHits);
    out.writeFloat(topDocs.getMaxScore());
    out.writeVInt(topFieldDocs.fields.length);
    for (    SortField sortField : topFieldDocs.fields) {
      if (sortField.getField() == null) {
        out.writeBoolean(false);
      }
 else {
        out.writeBoolean(true);
        out.writeUTF(sortField.getField());
      }
      out.writeVInt(sortField.getType());
      out.writeBoolean(sortField.getReverse());
    }
    out.writeVInt(topDocs.scoreDocs.length - from);
    int index=0;
    for (    ScoreDoc doc : topFieldDocs.scoreDocs) {
      if (index++ < from) {
        continue;
      }
      FieldDoc fieldDoc=(FieldDoc)doc;
      out.writeVInt(fieldDoc.fields.length);
      for (      Comparable field : fieldDoc.fields) {
        if (field == null) {
          out.writeByte((byte)0);
        }
 else {
          Class type=field.getClass();
          if (type == String.class) {
            out.writeByte((byte)1);
            out.writeUTF((String)field);
          }
 else           if (type == Integer.class) {
            out.writeByte((byte)2);
            out.writeInt((Integer)field);
          }
 else           if (type == Long.class) {
            out.writeByte((byte)3);
            out.writeLong((Long)field);
          }
 else           if (type == Float.class) {
            out.writeByte((byte)4);
            out.writeFloat((Float)field);
          }
 else           if (type == Double.class) {
            out.writeByte((byte)5);
            out.writeDouble((Double)field);
          }
 else           if (type == Byte.class) {
            out.writeByte((byte)6);
            out.writeByte((Byte)field);
          }
 else {
            throw new IOException("Can't handle sort field value of type [" + type + "]");
          }
        }
      }
      out.writeVInt(doc.doc);
      out.writeFloat(doc.score);
    }
  }
 else {
    out.writeBoolean(false);
    out.writeVInt(topDocs.totalHits);
    out.writeFloat(topDocs.getMaxScore());
    out.writeVInt(topDocs.scoreDocs.length - from);
    int index=0;
    for (    ScoreDoc doc : topDocs.scoreDocs) {
      if (index++ < from) {
        continue;
      }
      out.writeVInt(doc.doc);
      out.writeFloat(doc.score);
    }
  }
}
