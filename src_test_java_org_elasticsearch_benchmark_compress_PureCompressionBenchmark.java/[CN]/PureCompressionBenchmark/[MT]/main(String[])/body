{
  final long MAX_SIZE=ByteSizeValue.parseBytesSizeValue("50mb").bytes();
  File testFile=new File("target/test/compress/pure");
  FileSystemUtils.deleteRecursively(testFile);
  testFile.mkdirs();
  FileOutputStream rawJson=new FileOutputStream(new File(testFile,"raw_json"));
  FileOutputStream rawSmile=new FileOutputStream(new File(testFile,"raw_smile"));
  FileOutputStream compressedByDocJson=new FileOutputStream(new File(testFile,"compressed_by_doc_json"));
  FileOutputStream compressedByDocSmile=new FileOutputStream(new File(testFile,"compressed_by_doc_smile"));
  Compressor compressor=CompressorFactory.defaultCompressor();
  StreamOutput compressedJson=compressor.streamOutput(new OutputStreamStreamOutput(new FileOutputStream(new File(testFile,"compressed_json"))));
  StreamOutput compressedSmile=compressor.streamOutput(new OutputStreamStreamOutput(new FileOutputStream(new File(testFile,"compressed_smile"))));
  TestData testData=new TestData();
  while (testData.next() && testData.getTotalSize() < MAX_SIZE) {
{
      XContentBuilder builder=XContentFactory.jsonBuilder();
      testData.current(builder);
      rawJson.write(builder.bytes().array(),builder.bytes().arrayOffset(),builder.bytes().length());
      compressedJson.write(builder.bytes().array(),builder.bytes().arrayOffset(),builder.bytes().length());
      byte[] compressed=compressor.compress(builder.bytes().array(),builder.bytes().arrayOffset(),builder.bytes().length());
      compressedByDocJson.write(compressed);
      builder.close();
    }
{
      XContentBuilder builder=XContentFactory.smileBuilder();
      testData.current(builder);
      rawSmile.write(builder.bytes().array(),builder.bytes().arrayOffset(),builder.bytes().length());
      compressedSmile.write(builder.bytes().array(),builder.bytes().arrayOffset(),builder.bytes().length());
      byte[] compressed=compressor.compress(builder.bytes().array(),builder.bytes().arrayOffset(),builder.bytes().length());
      compressedByDocSmile.write(compressed);
      builder.close();
    }
  }
  rawJson.close();
  rawSmile.close();
  compressedJson.close();
  compressedSmile.close();
  compressedByDocJson.close();
  compressedByDocSmile.close();
}
