{
synchronized (delayedPrepareBulkRequestReference) {
    TimeValue delay=throttleWaitTime(lastBatchStartTime,lastBatchSize);
    AbstractRunnable oneTime=new AbstractRunnable(){
      private final AtomicBoolean hasRun=new AtomicBoolean(false);
      @Override protected void doRun() throws Exception {
        if (hasRun.compareAndSet(false,true)) {
          prepareBulkRequestRunnable.run();
        }
      }
      @Override public void onFailure(      Throwable t){
        prepareBulkRequestRunnable.onFailure(t);
      }
    }
;
    delayedPrepareBulkRequestReference.set(new DelayedPrepareBulkRequest(threadPool,getRequestsPerSecond(),delay,oneTime));
  }
}
