{
  if (!metaData.hasIndex(index.getName())) {
    throw new IllegalStateException(index + " exists in routing does not exists in metadata");
  }
  IndexMetaData indexMetaData=metaData.index(index.getName());
  if (indexMetaData.getIndexUUID().equals(index.getUUID()) == false) {
    throw new IllegalStateException(index.getName() + " exists in routing does not exists in metadata with the same uuid");
  }
  if (indexMetaData.getNumberOfShards() != shards().size()) {
    Set<Integer> expected=new HashSet<>();
    for (int i=0; i < indexMetaData.getNumberOfShards(); i++) {
      expected.add(i);
    }
    for (    IndexShardRoutingTable indexShardRoutingTable : this) {
      expected.remove(indexShardRoutingTable.shardId().id());
    }
    throw new IllegalStateException("Wrong number of shards in routing table, missing: " + expected);
  }
  for (  IndexShardRoutingTable indexShardRoutingTable : this) {
    int routingNumberOfReplicas=indexShardRoutingTable.size() - 1;
    if (routingNumberOfReplicas != indexMetaData.getNumberOfReplicas()) {
      throw new IllegalStateException("Shard [" + indexShardRoutingTable.shardId().id() + "] routing table has wrong number of replicas, expected ["+ indexMetaData.getNumberOfReplicas()+ "], got ["+ routingNumberOfReplicas+ "]");
    }
    for (    ShardRouting shardRouting : indexShardRoutingTable) {
      if (!shardRouting.index().equals(index)) {
        throw new IllegalStateException("shard routing has an index [" + shardRouting.index() + "] that is different "+ "from the routing table");
      }
    }
  }
  return true;
}
