{
  internalCluster().startNodesAsync(randomIntBetween(1,3)).get();
  index("test1","type","1","f","f");
  ClusterStatsResponse response=client().admin().cluster().prepareClusterStats().get();
  String msg=response.toString();
  assertThat(msg,response.getTimestamp(),Matchers.greaterThan(946681200000L));
  assertThat(msg,response.indicesStats.getStore().getSizeInBytes(),Matchers.greaterThan(0L));
  assertThat(msg,response.nodesStats.getFs().getTotal().getBytes(),Matchers.greaterThan(0L));
  assertThat(msg,response.nodesStats.getJvm().getVersions().size(),Matchers.greaterThan(0));
  assertThat(msg,response.nodesStats.getVersions().size(),Matchers.greaterThan(0));
  assertThat(msg,response.nodesStats.getVersions().contains(Version.CURRENT),Matchers.equalTo(true));
  assertThat(msg,response.nodesStats.getPlugins().size(),Matchers.greaterThanOrEqualTo(0));
  assertThat(msg,response.nodesStats.getProcess().count,Matchers.greaterThan(0));
  assertThat(msg,response.nodesStats.getProcess().getAvgOpenFileDescriptors(),Matchers.greaterThanOrEqualTo(0L));
  assertThat(msg,response.nodesStats.getProcess().getMinOpenFileDescriptors(),Matchers.greaterThanOrEqualTo(-1L));
  assertThat(msg,response.nodesStats.getProcess().getMaxOpenFileDescriptors(),Matchers.greaterThanOrEqualTo(-1L));
  NodesStatsResponse nodesStatsResponse=client().admin().cluster().prepareNodesStats().setOs(true).get();
  long total=0;
  long free=0;
  long used=0;
  for (  NodeStats nodeStats : nodesStatsResponse.getNodes()) {
    total+=nodeStats.getOs().getMem().getTotal().getBytes();
    free+=nodeStats.getOs().getMem().getFree().getBytes();
    used+=nodeStats.getOs().getMem().getUsed().getBytes();
  }
  assertEquals(msg,free,response.nodesStats.getOs().getMem().getFree().getBytes());
  assertEquals(msg,total,response.nodesStats.getOs().getMem().getTotal().getBytes());
  assertEquals(msg,used,response.nodesStats.getOs().getMem().getUsed().getBytes());
  assertEquals(msg,OsStats.calculatePercentage(used,total),response.nodesStats.getOs().getMem().getUsedPercent());
  assertEquals(msg,OsStats.calculatePercentage(free,total),response.nodesStats.getOs().getMem().getFreePercent());
}
