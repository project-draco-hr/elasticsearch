{
  SortedMap<Character,Byte> typeMap=new TreeMap<Character,Byte>();
  for (  String rule : rules) {
    Matcher m=typePattern.matcher(rule);
    if (!m.find())     throw new RuntimeException("Invalid Mapping Rule : [" + rule + "]");
    String lhs=parseString(m.group(1).trim());
    Byte rhs=parseType(m.group(2).trim());
    if (lhs.length() != 1)     throw new RuntimeException("Invalid Mapping Rule : [" + rule + "]. Only a single character is allowed.");
    if (rhs == null)     throw new RuntimeException("Invalid Mapping Rule : [" + rule + "]. Illegal type.");
    typeMap.put(lhs.charAt(0),rhs);
  }
  byte types[]=new byte[Math.max(typeMap.lastKey() + 1,WordDelimiterIterator.DEFAULT_WORD_DELIM_TABLE.length)];
  for (int i=0; i < types.length; i++)   types[i]=WordDelimiterIterator.getType(i);
  for (  Map.Entry<Character,Byte> mapping : typeMap.entrySet())   types[mapping.getKey()]=mapping.getValue();
  return types;
}
