{
  super(index,indexSettings,name,settings);
  List<String> charTypeTableValues=Analysis.getWordList(env,settings,"type_table");
  if (charTypeTableValues == null) {
    this.charTypeTable=WordDelimiterIterator.DEFAULT_WORD_DELIM_TABLE;
  }
 else {
    this.charTypeTable=parseTypes(charTypeTableValues);
  }
  this.generateWordParts=settings.getAsBoolean("generate_word_parts",true);
  this.generateNumberParts=settings.getAsBoolean("generate_number_parts",true);
  this.catenateWords=settings.getAsBoolean("catenate_words",false);
  this.catenateNumbers=settings.getAsBoolean("catenate_numbers",false);
  this.catenateAll=settings.getAsBoolean("catenate_all",false);
  this.splitOnCaseChange=settings.getAsBoolean("split_on_case_change",true);
  this.preserveOriginal=settings.getAsBoolean("preserve_original",false);
  this.splitOnNumerics=settings.getAsBoolean("split_on_numerics",true);
  this.stemEnglishPossessive=settings.getAsBoolean("stem_english_possessive",true);
  Set<?> protectedWords=Analysis.getWordSet(env,settings,"protected_words",version);
  this.protoWords=protectedWords == null ? null : CharArraySet.copy(Lucene.VERSION,protectedWords);
}
