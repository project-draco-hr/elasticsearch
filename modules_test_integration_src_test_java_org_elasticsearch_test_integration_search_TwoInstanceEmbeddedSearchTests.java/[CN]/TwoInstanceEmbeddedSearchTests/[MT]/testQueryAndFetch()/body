{
  SearchSourceBuilder sourceBuilder=searchSource().query(termQuery("multi","test")).from(0).size(20).explain(true);
  Map<SearchShardTarget,QueryFetchSearchResult> queryFetchResults=newHashMap();
  for (  ShardsIterator shardsIt : indicesService.searchShards(clusterService.state(),new String[]{"test"},null)) {
    for (    ShardRouting shardRouting : shardsIt) {
      InternalSearchRequest searchRequest=searchRequest(shardRouting,sourceBuilder).scroll(new Scroll(new TimeValue(10,TimeUnit.MINUTES)));
      QueryFetchSearchResult queryFetchResult=nodeToSearchService.get(shardRouting.currentNodeId()).executeFetchPhase(searchRequest);
      queryFetchResults.put(queryFetchResult.shardTarget(),queryFetchResult);
    }
  }
  ShardDoc[] sortedShardList=searchPhaseController.sortDocs(queryFetchResults.values());
  SearchHits hits=searchPhaseController.merge(sortedShardList,queryFetchResults,queryFetchResults).hits();
  assertThat(hits.totalHits(),equalTo(100l));
  assertThat(hits.hits().length,equalTo(60));
  for (int i=0; i < 60; i++) {
    SearchHit hit=hits.hits()[i];
    assertThat("id[" + hit.id() + "]",hit.id(),equalTo(Integer.toString(100 - i - 1)));
  }
}
