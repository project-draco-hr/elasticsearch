{
  final CompletableFuture<? extends T> a;
  final BiFun<? super T,Throwable,? extends U> fn;
  final CompletableFuture<U> dst;
  Object r;
  T t;
  Throwable ex;
  if ((dst=this.dst) != null && (fn=this.fn) != null && (a=this.src) != null && (r=a.result) != null && compareAndSet(0,1)) {
    if (r instanceof AltResult) {
      ex=((AltResult)r).ex;
      t=null;
    }
 else {
      ex=null;
      @SuppressWarnings("unchecked") T tr=(T)r;
      t=tr;
    }
    U u=null;
    Throwable dx=null;
    try {
      u=fn.apply(t,ex);
    }
 catch (    Throwable rex) {
      dx=rex;
    }
    dst.internalComplete(u,dx);
  }
}
