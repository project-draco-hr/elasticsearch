{
  final CompletableFuture<? extends T> a;
  final Fun<? super Throwable,? extends T> fn;
  final CompletableFuture<T> dst;
  Object r;
  T t=null;
  Throwable ex, dx=null;
  if ((dst=this.dst) != null && (fn=this.fn) != null && (a=this.src) != null && (r=a.result) != null && compareAndSet(0,1)) {
    if ((r instanceof AltResult) && (ex=((AltResult)r).ex) != null) {
      try {
        t=fn.apply(ex);
      }
 catch (      Throwable rex) {
        dx=rex;
      }
    }
 else {
      @SuppressWarnings("unchecked") T tr=(T)r;
      t=tr;
    }
    dst.internalComplete(t,dx);
  }
}
