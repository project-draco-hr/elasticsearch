{
  int len=cfs.length;
  if (len > 1)   return allTree(cfs,0,len - 1);
 else {
    CompletableFuture<Void> dst=new CompletableFuture<>();
    CompletableFuture<?> f;
    if (len == 0)     dst.result=NIL;
 else     if ((f=cfs[0]) == null)     throw new NullPointerException();
 else {
      ThenPropagate d=null;
      CompletionNode p=null;
      Object r;
      while ((r=f.result) == null) {
        if (d == null)         d=new ThenPropagate(f,dst);
 else         if (p == null)         p=new CompletionNode(d);
 else         if (UNSAFE.compareAndSwapObject(f,COMPLETIONS,p.next=f.completions,p))         break;
      }
      if (r != null && (d == null || d.compareAndSet(0,1)))       dst.internalComplete(null,(r instanceof AltResult) ? ((AltResult)r).ex : null);
      f.helpPostComplete();
    }
    return dst;
  }
}
