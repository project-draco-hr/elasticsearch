{
  if (buffer.readableBytes() < 6) {
    return null;
  }
  int readerIndex=buffer.readerIndex();
  if (buffer.getByte(readerIndex) != 'E' || buffer.getByte(readerIndex + 1) != 'S') {
    if (bufferStartsWith(buffer,readerIndex,"GET ") || bufferStartsWith(buffer,readerIndex,"POST ") || bufferStartsWith(buffer,readerIndex,"PUT ")|| bufferStartsWith(buffer,readerIndex,"HEAD ")|| bufferStartsWith(buffer,readerIndex,"DELETE ")|| bufferStartsWith(buffer,readerIndex,"OPTIONS ")|| bufferStartsWith(buffer,readerIndex,"PATCH ")|| bufferStartsWith(buffer,readerIndex,"TRACE ")) {
      throw new HttpOnTransportException("This is not a HTTP port");
    }
    throw new StreamCorruptedException("invalid internal transport message format, got (" + Integer.toHexString(buffer.getByte(readerIndex) & 0xFF) + ","+ Integer.toHexString(buffer.getByte(readerIndex + 1) & 0xFF)+ ","+ Integer.toHexString(buffer.getByte(readerIndex + 2) & 0xFF)+ ","+ Integer.toHexString(buffer.getByte(readerIndex + 3) & 0xFF)+ ")");
  }
  int dataLen=buffer.getInt(buffer.readerIndex() + 2);
  if (dataLen <= 0) {
    throw new StreamCorruptedException("invalid data length: " + dataLen);
  }
  if (dataLen > NINETY_PER_HEAP_SIZE) {
    throw new TooLongFrameException("transport content length received [" + new ByteSizeValue(dataLen) + "] exceeded ["+ new ByteSizeValue(NINETY_PER_HEAP_SIZE)+ "]");
  }
  if (buffer.readableBytes() < dataLen + 6) {
    return null;
  }
  buffer.skipBytes(6);
  return buffer;
}
