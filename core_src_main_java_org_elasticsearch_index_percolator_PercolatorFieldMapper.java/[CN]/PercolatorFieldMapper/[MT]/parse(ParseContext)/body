{
  QueryShardContext queryShardContext=new QueryShardContext(this.queryShardContext);
  DocumentMapper documentMapper=queryShardContext.getMapperService().documentMapper(context.type());
  for (  FieldMapper fieldMapper : documentMapper.mappers()) {
    if (fieldMapper instanceof PercolatorFieldMapper) {
      PercolatorFieldType fieldType=(PercolatorFieldType)fieldMapper.fieldType();
      if (context.doc().getField(fieldType.getQueryBuilderFieldName()) != null) {
        throw new IllegalArgumentException("a document can only contain one percolator query");
      }
    }
  }
  XContentParser parser=context.parser();
  QueryBuilder<?> queryBuilder=parseQueryBuilder(queryShardContext.newParseContext(parser),parser.getTokenLocation());
  queryBuilder=queryBuilder.rewrite(queryShardContext);
  try (XContentBuilder builder=XContentFactory.contentBuilder(PercolatorQueryCache.QUERY_BUILDER_CONTENT_TYPE)){
    queryBuilder.toXContent(builder,new MapParams(Collections.emptyMap()));
    builder.flush();
    byte[] queryBuilderAsBytes=builder.bytes().toBytes();
    context.doc().add(new Field(queryBuilderField.name(),queryBuilderAsBytes,queryBuilderField.fieldType()));
  }
   Query query=toQuery(queryShardContext,mapUnmappedFieldAsString,queryBuilder);
  ExtractQueryTermsService.extractQueryTerms(query,context.doc(),queryTermsField.name(),unknownQueryField.name(),queryTermsField.fieldType());
  return null;
}
