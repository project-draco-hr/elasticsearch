{
  final int additionalContinueCount=randomInt(10);
  TestFilter testFilter=new TestFilter(randomInt(),new Callback(){
    @Override public void execute(    final RestRequest request,    final RestChannel channel,    final RestFilterChain filterChain) throws Exception {
      for (int i=0; i <= additionalContinueCount; i++) {
        filterChain.continueProcessing(request,channel);
      }
    }
  }
);
  RestController restController=new RestController(Settings.EMPTY);
  restController.registerFilter(testFilter);
  restController.registerHandler(RestRequest.Method.GET,"/",new RestHandler(){
    @Override public void handleRequest(    RestRequest request,    RestChannel channel) throws Exception {
      channel.sendResponse(new TestResponse());
    }
  }
);
  FakeRestRequest fakeRestRequest=new FakeRestRequest();
  FakeRestChannel fakeRestChannel=new FakeRestChannel(fakeRestRequest,additionalContinueCount + 1);
  restController.dispatchRequest(fakeRestRequest,fakeRestChannel);
  fakeRestChannel.await();
  assertThat(testFilter.runs.get(),equalTo(1));
  assertThat(fakeRestChannel.responses.get(),equalTo(1));
  assertThat(fakeRestChannel.errors.get(),equalTo(additionalContinueCount));
}
