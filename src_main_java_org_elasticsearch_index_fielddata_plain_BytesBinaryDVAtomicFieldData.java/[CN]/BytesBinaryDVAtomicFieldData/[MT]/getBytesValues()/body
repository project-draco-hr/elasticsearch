{
  return new SortedBinaryDocValues(){
    int count;
    BytesRefBuilder[] refs=new BytesRefBuilder[0];
    final ByteArrayDataInput in=new ByteArrayDataInput();
    @Override public void setDocument(    int docId){
      final BytesRef bytes=values.get(docId);
      in.reset(bytes.bytes,bytes.offset,bytes.length);
      if (bytes.length == 0) {
        count=0;
      }
 else {
        count=in.readVInt();
        if (count > refs.length) {
          final int previousLength=refs.length;
          refs=Arrays.copyOf(refs,ArrayUtil.oversize(count,RamUsageEstimator.NUM_BYTES_OBJECT_REF));
          for (int i=previousLength; i < refs.length; ++i) {
            refs[i]=new BytesRefBuilder();
          }
        }
        for (int i=0; i < count; ++i) {
          final int length=in.readVInt();
          final BytesRefBuilder scratch=refs[i];
          scratch.grow(length);
          in.readBytes(scratch.bytes(),0,length);
          scratch.setLength(length);
        }
      }
    }
    @Override public int count(){
      return count;
    }
    @Override public BytesRef valueAt(    int index){
      return refs[index].get();
    }
  }
;
}
