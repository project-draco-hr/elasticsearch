{
  boolean autoCreateIndex=randomBoolean();
  logger.info("auto_create_index set to {}",autoCreateIndex);
  Settings settings=Settings.builder().put("discovery.type","zen").put("action.auto_create_index",autoCreateIndex).put("discovery.zen.minimum_master_nodes",2).put(ZenDiscovery.PING_TIMEOUT_SETTING.getKey(),"200ms").put("discovery.initial_state_timeout","500ms").put(DiscoverySettings.NO_MASTER_BLOCK_SETTING.getKey(),"all").build();
  TimeValue timeout=TimeValue.timeValueMillis(200);
  internalCluster().startNode(settings);
  internalCluster().startNode(settings);
  createIndex("test");
  client().admin().cluster().prepareHealth("test").setWaitForGreenStatus().execute().actionGet();
  internalCluster().stopRandomDataNode();
  assertBusy(new Runnable(){
    @Override public void run(){
      ClusterState state=client().admin().cluster().prepareState().setLocal(true).execute().actionGet().getState();
      assertTrue(state.blocks().hasGlobalBlock(DiscoverySettings.NO_MASTER_BLOCK_ID));
    }
  }
);
  assertThrows(client().prepareGet("test","type1","1"),ClusterBlockException.class,RestStatus.SERVICE_UNAVAILABLE);
  assertThrows(client().prepareGet("no_index","type1","1"),ClusterBlockException.class,RestStatus.SERVICE_UNAVAILABLE);
  assertThrows(client().prepareMultiGet().add("test","type1","1"),ClusterBlockException.class,RestStatus.SERVICE_UNAVAILABLE);
  assertThrows(client().prepareMultiGet().add("no_index","type1","1"),ClusterBlockException.class,RestStatus.SERVICE_UNAVAILABLE);
  assertThrows(client().admin().indices().prepareAnalyze("test","this is a test"),ClusterBlockException.class,RestStatus.SERVICE_UNAVAILABLE);
  assertThrows(client().admin().indices().prepareAnalyze("no_index","this is a test"),ClusterBlockException.class,RestStatus.SERVICE_UNAVAILABLE);
  assertThrows(client().prepareSearch("test").setSize(0),ClusterBlockException.class,RestStatus.SERVICE_UNAVAILABLE);
  assertThrows(client().prepareSearch("no_index").setSize(0),ClusterBlockException.class,RestStatus.SERVICE_UNAVAILABLE);
  checkWriteAction(false,timeout,client().prepareUpdate("test","type1","1").setScript(new Script("test script",ScriptService.ScriptType.INLINE,null,null)).setTimeout(timeout));
  checkWriteAction(autoCreateIndex,timeout,client().prepareUpdate("no_index","type1","1").setScript(new Script("test script",ScriptService.ScriptType.INLINE,null,null)).setTimeout(timeout));
  checkWriteAction(false,timeout,client().prepareIndex("test","type1","1").setSource(XContentFactory.jsonBuilder().startObject().endObject()).setTimeout(timeout));
  checkWriteAction(autoCreateIndex,timeout,client().prepareIndex("no_index","type1","1").setSource(XContentFactory.jsonBuilder().startObject().endObject()).setTimeout(timeout));
  BulkRequestBuilder bulkRequestBuilder=client().prepareBulk();
  bulkRequestBuilder.add(client().prepareIndex("test","type1","1").setSource(XContentFactory.jsonBuilder().startObject().endObject()));
  bulkRequestBuilder.add(client().prepareIndex("test","type1","2").setSource(XContentFactory.jsonBuilder().startObject().endObject()));
  checkBulkAction(false,bulkRequestBuilder);
  bulkRequestBuilder=client().prepareBulk();
  bulkRequestBuilder.add(client().prepareIndex("no_index","type1","1").setSource(XContentFactory.jsonBuilder().startObject().endObject()));
  bulkRequestBuilder.add(client().prepareIndex("no_index","type1","2").setSource(XContentFactory.jsonBuilder().startObject().endObject()));
  checkBulkAction(autoCreateIndex,bulkRequestBuilder);
  internalCluster().startNode(settings);
  client().admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
}
