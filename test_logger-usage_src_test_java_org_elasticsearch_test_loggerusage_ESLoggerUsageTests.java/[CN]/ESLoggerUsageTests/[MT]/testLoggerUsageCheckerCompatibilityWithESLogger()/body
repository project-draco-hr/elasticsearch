{
  assertThat(ESLoggerUsageChecker.LOGGER_CLASS,equalTo(Logger.class.getName()));
  assertThat(ESLoggerUsageChecker.THROWABLE_CLASS,equalTo(Throwable.class.getName()));
  int varargsMethodCount=0;
  for (  Method method : Logger.class.getMethods()) {
    if (method.isVarArgs()) {
      assertThat(ESLoggerUsageChecker.LOGGER_METHODS,hasItem(method.getName()));
      varargsMethodCount++;
    }
  }
  assertThat(varargsMethodCount,equalTo(ESLoggerUsageChecker.LOGGER_METHODS.size() * 2));
  for (  String methodName : ESLoggerUsageChecker.LOGGER_METHODS) {
    assertThat(Logger.class.getMethod(methodName,String.class,Object[].class),notNullValue());
    assertThat(Logger.class.getMethod(methodName,String.class,Throwable.class,Object[].class),notNullValue());
  }
}
