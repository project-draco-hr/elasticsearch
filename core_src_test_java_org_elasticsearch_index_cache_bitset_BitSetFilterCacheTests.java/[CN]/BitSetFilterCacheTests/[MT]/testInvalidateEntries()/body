{
  IndexWriter writer=new IndexWriter(new RAMDirectory(),new IndexWriterConfig(new StandardAnalyzer()).setMergePolicy(new LogByteSizeMergePolicy()));
  Document document=new Document();
  document.add(new StringField("field","value",Field.Store.NO));
  writer.addDocument(document);
  writer.commit();
  document=new Document();
  document.add(new StringField("field","value",Field.Store.NO));
  writer.addDocument(document);
  writer.commit();
  document=new Document();
  document.add(new StringField("field","value",Field.Store.NO));
  writer.addDocument(document);
  writer.commit();
  DirectoryReader reader=DirectoryReader.open(writer);
  reader=ElasticsearchDirectoryReader.wrap(reader,new ShardId("test","_na_",0));
  IndexSearcher searcher=new IndexSearcher(reader);
  BitsetFilterCache cache=new BitsetFilterCache(INDEX_SETTINGS,new BitsetFilterCache.Listener(){
    @Override public void onCache(    ShardId shardId,    Accountable accountable){
    }
    @Override public void onRemoval(    ShardId shardId,    Accountable accountable){
    }
  }
);
  BitSetProducer filter=cache.getBitSetProducer(new TermQuery(new Term("field","value")));
  assertThat(matchCount(filter,reader),equalTo(3));
  assertThat(matchCount(filter,reader),equalTo(3));
  assertThat(cache.getLoadedFilters().weight(),equalTo(3L));
  writer.forceMerge(1);
  reader.close();
  reader=DirectoryReader.open(writer);
  reader=ElasticsearchDirectoryReader.wrap(reader,new ShardId("test","_na_",0));
  searcher=new IndexSearcher(reader);
  assertThat(matchCount(filter,reader),equalTo(3));
  assertThat(matchCount(filter,reader),equalTo(3));
  assertThat(cache.getLoadedFilters().weight(),equalTo(1L));
  reader.close();
  writer.close();
  assertThat(cache.getLoadedFilters().weight(),equalTo(0L));
}
