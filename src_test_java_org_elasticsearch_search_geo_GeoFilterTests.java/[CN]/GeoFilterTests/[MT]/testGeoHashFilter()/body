{
  String geohash=randomhash(10);
  logger.info("Testing geohash boundingbox filter for [{}]",geohash);
  List<String> neighbors=GeoHashUtils.neighbors(geohash);
  List<String> parentNeighbors=GeoHashUtils.neighbors(geohash.substring(0,geohash.length() - 1));
  logger.info("Neighbors {}",neighbors);
  logger.info("Parent Neighbors {}",parentNeighbors);
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("location").startObject("properties").startObject("pin").field("type","geo_point").field("geohash_prefix",true).field("latlon",false).endObject().endObject().endObject().endObject().string();
  ensureYellow();
  client().admin().indices().prepareCreate("locations").addMapping("location",mapping).execute().actionGet();
  client().prepareIndex("locations","location","1").setCreate(true).setSource("{\"pin\":\"" + geohash + "\"}").execute().actionGet();
  for (int i=0; i < neighbors.size(); i++) {
    client().prepareIndex("locations","location","N" + i).setCreate(true).setSource("{\"pin\":\"" + neighbors.get(i) + "\"}").execute().actionGet();
  }
  client().prepareIndex("locations","location","p").setCreate(true).setSource("{\"pin\":\"" + geohash.substring(0,geohash.length() - 1) + "\"}").execute().actionGet();
  for (int i=0; i < parentNeighbors.size(); i++) {
    client().prepareIndex("locations","location","p" + i).setCreate(true).setSource("{\"pin\":\"" + parentNeighbors.get(i) + "\"}").execute().actionGet();
  }
  client().admin().indices().prepareRefresh("locations").execute().actionGet();
  SearchResponse results1=client().prepareSearch("locations").setQuery(QueryBuilders.matchAllQuery()).setFilter("{\"geohash_cell\": {\"pin\": \"" + geohash + "\", \"neighbors\": false}}").execute().actionGet();
  assertHitCount(results1,1);
  SearchResponse results2=client().prepareSearch("locations").setQuery(QueryBuilders.matchAllQuery()).setFilter("{\"geohash_cell\": {\"pin\": \"" + geohash.substring(0,geohash.length() - 1) + "\", \"neighbors\": true}}").execute().actionGet();
  assertHitCount(results2,2 + neighbors.size() + parentNeighbors.size());
  GeoPoint point=GeoHashUtils.decode(geohash);
  int precision=geohash.length();
  logger.info("Testing lat/lon format");
  String pointTest1="{\"geohash_cell\": {\"pin\": {\"lat\": " + point.lat() + ",\"lon\": "+ point.lon()+ "},\"precision\": "+ precision+ ",\"neighbors\": true}}";
  SearchResponse results3=client().prepareSearch("locations").setQuery(QueryBuilders.matchAllQuery()).setFilter(pointTest1).execute().actionGet();
  assertHitCount(results3,neighbors.size() + 1);
  logger.info("Testing String format");
  String pointTest2="{\"geohash_cell\": {\"pin\": \"" + point.lat() + ","+ point.lon()+ "\",\"precision\": "+ precision+ ",\"neighbors\": true}}";
  SearchResponse results4=client().prepareSearch("locations").setQuery(QueryBuilders.matchAllQuery()).setFilter(pointTest2).execute().actionGet();
  assertHitCount(results4,neighbors.size() + 1);
  logger.info("Testing Array format");
  String pointTest3="{\"geohash_cell\": {\"pin\": [" + point.lon() + ","+ point.lat()+ "],\"precision\": "+ precision+ ",\"neighbors\": true}}";
  SearchResponse results5=client().prepareSearch("locations").setQuery(QueryBuilders.matchAllQuery()).setFilter(pointTest3).execute().actionGet();
  assertHitCount(results5,neighbors.size() + 1);
}
