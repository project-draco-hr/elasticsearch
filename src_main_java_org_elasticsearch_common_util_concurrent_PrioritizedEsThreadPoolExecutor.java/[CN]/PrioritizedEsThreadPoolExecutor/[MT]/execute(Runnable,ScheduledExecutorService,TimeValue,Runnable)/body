{
  if (command instanceof PrioritizedRunnable) {
    command=new TieBreakingPrioritizedRunnable((PrioritizedRunnable)command,insertionOrder.incrementAndGet());
  }
 else   if (!(command instanceof PrioritizedFutureTask)) {
    command=new TieBreakingPrioritizedRunnable(command,Priority.NORMAL,insertionOrder.incrementAndGet());
  }
  if (timeout.nanos() >= 0) {
    final Runnable fCommand=command;
    timer.schedule(new Runnable(){
      @Override public void run(){
        boolean removed=getQueue().remove(fCommand);
        if (removed) {
          timeoutCallback.run();
        }
      }
    }
,timeout.nanos(),TimeUnit.NANOSECONDS);
  }
  super.execute(command);
}
