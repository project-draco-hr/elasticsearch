{
  assertAcked(client().admin().cluster().preparePutRepository("test-repo-blocks").setType("fs").setVerify(false).setSettings(ImmutableSettings.settingsBuilder().put("location",randomRepoPath())));
  logger.info("-->  deleting a repository is blocked when the cluster is read only");
  try {
    setClusterReadOnly(true);
    assertBlocked(client().admin().cluster().prepareDeleteRepository("test-repo-blocks"),MetaData.CLUSTER_READ_ONLY_BLOCK);
  }
  finally {
    setClusterReadOnly(false);
  }
  logger.info("-->  deleting a repository is allowed when the cluster is not read only");
  assertAcked(client().admin().cluster().prepareDeleteRepository("test-repo-blocks"));
}
