{
  Settings settings=ImmutableSettings.Builder.EMPTY_SETTINGS;
  IndexQueryParserModule queryParserModule=new IndexQueryParserModule(settings);
  queryParserModule.addProcessor(new IndexQueryParserModule.QueryParsersProcessor(){
    @Override public void processXContentQueryParsers(    XContentQueryParsersBindings bindings){
      bindings.processXContentQueryParser("my",PluginJsonQueryParser.class);
    }
    @Override public void processXContentFilterParsers(    XContentFilterParsersBindings bindings){
      bindings.processXContentQueryFilter("my",PluginJsonFilterParser.class);
    }
  }
);
  Index index=new Index("test");
  Injector injector=new ModulesBuilder().add(new SettingsModule(settings),new ThreadPoolModule(settings),new ScriptModule(settings),new IndexSettingsModule(index,settings),new IndexCacheModule(settings),new AnalysisModule(settings),new IndexEngineModule(settings),new SimilarityModule(settings),queryParserModule,new IndexNameModule(index)).createInjector();
  IndexQueryParserService indexQueryParserService=injector.getInstance(IndexQueryParserService.class);
  PluginJsonQueryParser myJsonQueryParser=(PluginJsonQueryParser)indexQueryParserService.queryParser("my");
  assertThat(myJsonQueryParser.names()[0],equalTo("my"));
  PluginJsonFilterParser myJsonFilterParser=(PluginJsonFilterParser)indexQueryParserService.filterParser("my");
  assertThat(myJsonFilterParser.names()[0],equalTo("my"));
}
