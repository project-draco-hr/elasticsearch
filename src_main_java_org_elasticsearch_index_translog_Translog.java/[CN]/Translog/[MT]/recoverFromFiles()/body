{
  boolean success=false;
  ArrayList<ChannelImmutableReader> foundTranslogs=new ArrayList<>();
  try (ReleasableLock lock=writeLock.acquire()){
    try (DirectoryStream<Path> stream=Files.newDirectoryStream(location,TRANSLOG_FILE_PREFIX + "[0-9]*")){
      for (      Path file : stream) {
        final long id=parseIdFromFileName(file);
        if (id < 0) {
          throw new TranslogException(shardId,"failed to parse id from file name matching pattern " + file);
        }
        idGenerator=Math.max(idGenerator,id + 1);
        final ChannelReference raf=new InternalChannelReference(id,location.resolve(getFilename(id)),StandardOpenOption.READ);
        foundTranslogs.add(new ChannelImmutableReader(id,raf,raf.channel().size(),ChannelReader.UNKNOWN_OP_COUNT));
        logger.debug("found local translog with id [{}]",id);
      }
    }
     CollectionUtil.timSort(foundTranslogs);
    uncommittedTranslogs.addAll(foundTranslogs);
    success=true;
  }
  finally {
    if (success == false) {
      IOUtils.closeWhileHandlingException(foundTranslogs);
    }
  }
}
