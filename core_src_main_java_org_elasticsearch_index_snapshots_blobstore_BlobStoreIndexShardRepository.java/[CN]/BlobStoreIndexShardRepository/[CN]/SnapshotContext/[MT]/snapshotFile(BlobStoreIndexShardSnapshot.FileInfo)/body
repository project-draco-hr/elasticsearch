{
  final String file=fileInfo.physicalName();
  try (IndexInput indexInput=store.openVerifyingInput(file,IOContext.READONCE,fileInfo.metadata())){
    for (int i=0; i < fileInfo.numberOfParts(); i++) {
      final long partBytes=fileInfo.partBytes(i);
      final InputStreamIndexInput inputStreamIndexInput=new InputStreamIndexInput(indexInput,partBytes);
      InputStream inputStream=snapshotRateLimiter == null ? inputStreamIndexInput : new RateLimitingInputStream(inputStreamIndexInput,snapshotRateLimiter,snapshotThrottleListener);
      inputStream=new AbortableInputStream(inputStream,fileInfo.physicalName());
      blobContainer.writeBlob(fileInfo.partName(i),inputStream,partBytes);
    }
    Store.verify(indexInput);
    snapshotStatus.addProcessedFile(fileInfo.length());
  }
 catch (  Exception t) {
    failStoreIfCorrupted(t);
    snapshotStatus.addProcessedFile(0);
    throw t;
  }
}
