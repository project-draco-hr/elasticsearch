{
  this.blobStore=blobStore;
  this.basePath=basePath;
  this.chunkSize=chunkSize;
  this.snapshotRateLimiter=snapshotRateLimiter;
  this.restoreRateLimiter=restoreRateLimiter;
  this.rateLimiterListener=rateLimiterListener;
  this.snapshotThrottleListener=new RateLimitingInputStream.Listener(){
    @Override public void onPause(    long nanos){
      rateLimiterListener.onSnapshotPause(nanos);
    }
  }
;
  this.compress=compress;
  indexShardSnapshotFormat=new ChecksumBlobStoreFormat<>(SNAPSHOT_CODEC,SNAPSHOT_NAME_FORMAT,BlobStoreIndexShardSnapshot.PROTO,parseFieldMatcher,isCompress());
  indexShardSnapshotLegacyFormat=new LegacyBlobStoreFormat<>(LEGACY_SNAPSHOT_NAME_FORMAT,BlobStoreIndexShardSnapshot.PROTO,parseFieldMatcher);
  indexShardSnapshotsFormat=new ChecksumBlobStoreFormat<>(SNAPSHOT_INDEX_CODEC,SNAPSHOT_INDEX_NAME_FORMAT,BlobStoreIndexShardSnapshots.PROTO,parseFieldMatcher,isCompress());
}
