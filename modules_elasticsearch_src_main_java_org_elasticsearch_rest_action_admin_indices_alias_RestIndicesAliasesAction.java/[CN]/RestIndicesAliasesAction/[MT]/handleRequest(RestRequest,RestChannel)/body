{
  IndicesAliasesRequest indicesAliasesRequest=new IndicesAliasesRequest();
  try {
    byte[] content=request.contentAsBytes();
    XContentParser parser=XContentFactory.xContent(content).createParser(content);
    XContentParser.Token token=parser.nextToken();
    if (token == null) {
      throw new ElasticSearchIllegalArgumentException("No action is specified");
    }
    while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
      if (token == XContentParser.Token.START_ARRAY) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          if (token == XContentParser.Token.FIELD_NAME) {
            String action=parser.currentName();
            AliasAction.Type type;
            if ("add".equals(action)) {
              type=AliasAction.Type.ADD;
            }
 else             if ("remove".equals(action)) {
              type=AliasAction.Type.REMOVE;
            }
 else {
              throw new ElasticSearchIllegalArgumentException("Alias action [" + action + "] not supported");
            }
            String index=null;
            String alias=null;
            String currentFieldName=null;
            while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
              if (token == XContentParser.Token.FIELD_NAME) {
                currentFieldName=parser.currentName();
              }
 else               if (token == XContentParser.Token.VALUE_STRING) {
                if ("index".equals(currentFieldName)) {
                  index=parser.text();
                }
 else                 if ("alias".equals(currentFieldName)) {
                  alias=parser.text();
                }
              }
            }
            if (index == null) {
              throw new ElasticSearchIllegalArgumentException("Alias action [" + action + "] requires an [index] to be set");
            }
            if (alias == null) {
              throw new ElasticSearchIllegalArgumentException("Alias action [" + action + "] requires an [alias] to be set");
            }
            if (type == AliasAction.Type.ADD) {
              indicesAliasesRequest.addAlias(index,alias);
            }
 else             if (type == AliasAction.Type.REMOVE) {
              indicesAliasesRequest.removeAlias(index,alias);
            }
          }
        }
      }
    }
  }
 catch (  Exception e) {
    try {
      channel.sendResponse(new XContentThrowableRestResponse(request,e));
    }
 catch (    IOException e1) {
      logger.warn("Failed to send response",e1);
      return;
    }
  }
  client.admin().indices().aliases(indicesAliasesRequest,new ActionListener<IndicesAliasesResponse>(){
    @Override public void onResponse(    IndicesAliasesResponse response){
      try {
        XContentBuilder builder=restContentBuilder(request);
        builder.startObject().field("ok",true).endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
