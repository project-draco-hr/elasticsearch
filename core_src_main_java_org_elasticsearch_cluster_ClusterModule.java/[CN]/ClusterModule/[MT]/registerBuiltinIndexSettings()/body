{
  registerIndexDynamicSetting(IndexStore.INDEX_STORE_THROTTLE_MAX_BYTES_PER_SEC,Validator.BYTES_SIZE);
  registerIndexDynamicSetting(IndexStore.INDEX_STORE_THROTTLE_TYPE,Validator.EMPTY);
  registerIndexDynamicSetting(MergeSchedulerConfig.MAX_THREAD_COUNT,Validator.NON_NEGATIVE_INTEGER);
  registerIndexDynamicSetting(MergeSchedulerConfig.MAX_MERGE_COUNT,Validator.EMPTY);
  registerIndexDynamicSetting(MergeSchedulerConfig.AUTO_THROTTLE,Validator.EMPTY);
  registerIndexDynamicSetting(FilterAllocationDecider.INDEX_ROUTING_REQUIRE_GROUP + "*",Validator.EMPTY);
  registerIndexDynamicSetting(FilterAllocationDecider.INDEX_ROUTING_INCLUDE_GROUP + "*",Validator.EMPTY);
  registerIndexDynamicSetting(FilterAllocationDecider.INDEX_ROUTING_EXCLUDE_GROUP + "*",Validator.EMPTY);
  registerIndexDynamicSetting(EnableAllocationDecider.INDEX_ROUTING_ALLOCATION_ENABLE,Validator.EMPTY);
  registerIndexDynamicSetting(EnableAllocationDecider.INDEX_ROUTING_REBALANCE_ENABLE,Validator.EMPTY);
  registerIndexDynamicSetting(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,Validator.NON_NEGATIVE_INTEGER);
  registerIndexDynamicSetting(IndexMetaData.SETTING_AUTO_EXPAND_REPLICAS,Validator.EMPTY);
  registerIndexDynamicSetting(IndexMetaData.SETTING_READ_ONLY,Validator.EMPTY);
  registerIndexDynamicSetting(IndexMetaData.SETTING_BLOCKS_READ,Validator.EMPTY);
  registerIndexDynamicSetting(IndexMetaData.SETTING_BLOCKS_WRITE,Validator.EMPTY);
  registerIndexDynamicSetting(IndexMetaData.SETTING_BLOCKS_METADATA,Validator.EMPTY);
  registerIndexDynamicSetting(IndexMetaData.SETTING_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE,Validator.EMPTY);
  registerIndexDynamicSetting(IndexMetaData.SETTING_PRIORITY,Validator.NON_NEGATIVE_INTEGER);
  registerIndexDynamicSetting(IndicesTTLService.INDEX_TTL_DISABLE_PURGE,Validator.EMPTY);
  registerIndexDynamicSetting(IndexShard.INDEX_REFRESH_INTERVAL,Validator.TIME);
  registerIndexDynamicSetting(PrimaryShardAllocator.INDEX_RECOVERY_INITIAL_SHARDS,Validator.EMPTY);
  registerIndexDynamicSetting(EngineConfig.INDEX_COMPOUND_ON_FLUSH,Validator.BOOLEAN);
  registerIndexDynamicSetting(EngineConfig.INDEX_GC_DELETES_SETTING,Validator.TIME);
  registerIndexDynamicSetting(IndexShard.INDEX_FLUSH_ON_CLOSE,Validator.BOOLEAN);
  registerIndexDynamicSetting(EngineConfig.INDEX_VERSION_MAP_SIZE,Validator.BYTES_SIZE_OR_PERCENTAGE);
  registerIndexDynamicSetting(IndexingSlowLog.INDEX_INDEXING_SLOWLOG_THRESHOLD_INDEX_WARN,Validator.TIME);
  registerIndexDynamicSetting(IndexingSlowLog.INDEX_INDEXING_SLOWLOG_THRESHOLD_INDEX_INFO,Validator.TIME);
  registerIndexDynamicSetting(IndexingSlowLog.INDEX_INDEXING_SLOWLOG_THRESHOLD_INDEX_DEBUG,Validator.TIME);
  registerIndexDynamicSetting(IndexingSlowLog.INDEX_INDEXING_SLOWLOG_THRESHOLD_INDEX_TRACE,Validator.TIME);
  registerIndexDynamicSetting(IndexingSlowLog.INDEX_INDEXING_SLOWLOG_REFORMAT,Validator.EMPTY);
  registerIndexDynamicSetting(IndexingSlowLog.INDEX_INDEXING_SLOWLOG_LEVEL,Validator.EMPTY);
  registerIndexDynamicSetting(IndexingSlowLog.INDEX_INDEXING_SLOWLOG_MAX_SOURCE_CHARS_TO_LOG,Validator.EMPTY);
  registerIndexDynamicSetting(SearchSlowLog.INDEX_SEARCH_SLOWLOG_THRESHOLD_QUERY_WARN,Validator.TIME);
  registerIndexDynamicSetting(SearchSlowLog.INDEX_SEARCH_SLOWLOG_THRESHOLD_QUERY_INFO,Validator.TIME);
  registerIndexDynamicSetting(SearchSlowLog.INDEX_SEARCH_SLOWLOG_THRESHOLD_QUERY_DEBUG,Validator.TIME);
  registerIndexDynamicSetting(SearchSlowLog.INDEX_SEARCH_SLOWLOG_THRESHOLD_QUERY_TRACE,Validator.TIME);
  registerIndexDynamicSetting(SearchSlowLog.INDEX_SEARCH_SLOWLOG_THRESHOLD_FETCH_WARN,Validator.TIME);
  registerIndexDynamicSetting(SearchSlowLog.INDEX_SEARCH_SLOWLOG_THRESHOLD_FETCH_INFO,Validator.TIME);
  registerIndexDynamicSetting(SearchSlowLog.INDEX_SEARCH_SLOWLOG_THRESHOLD_FETCH_DEBUG,Validator.TIME);
  registerIndexDynamicSetting(SearchSlowLog.INDEX_SEARCH_SLOWLOG_THRESHOLD_FETCH_TRACE,Validator.TIME);
  registerIndexDynamicSetting(SearchSlowLog.INDEX_SEARCH_SLOWLOG_REFORMAT,Validator.EMPTY);
  registerIndexDynamicSetting(SearchSlowLog.INDEX_SEARCH_SLOWLOG_LEVEL,Validator.EMPTY);
  registerIndexDynamicSetting(ShardsLimitAllocationDecider.INDEX_TOTAL_SHARDS_PER_NODE,Validator.INTEGER);
  registerIndexDynamicSetting(MergePolicyConfig.INDEX_MERGE_POLICY_EXPUNGE_DELETES_ALLOWED,Validator.DOUBLE);
  registerIndexDynamicSetting(MergePolicyConfig.INDEX_MERGE_POLICY_FLOOR_SEGMENT,Validator.BYTES_SIZE);
  registerIndexDynamicSetting(MergePolicyConfig.INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE,Validator.INTEGER_GTE_2);
  registerIndexDynamicSetting(MergePolicyConfig.INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_EXPLICIT,Validator.INTEGER_GTE_2);
  registerIndexDynamicSetting(MergePolicyConfig.INDEX_MERGE_POLICY_MAX_MERGED_SEGMENT,Validator.BYTES_SIZE);
  registerIndexDynamicSetting(MergePolicyConfig.INDEX_MERGE_POLICY_SEGMENTS_PER_TIER,Validator.DOUBLE_GTE_2);
  registerIndexDynamicSetting(MergePolicyConfig.INDEX_MERGE_POLICY_RECLAIM_DELETES_WEIGHT,Validator.NON_NEGATIVE_DOUBLE);
  registerIndexDynamicSetting(MergePolicyConfig.INDEX_COMPOUND_FORMAT,Validator.EMPTY);
  registerIndexDynamicSetting(IndexShard.INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE,Validator.BYTES_SIZE);
  registerIndexDynamicSetting(IndexSettings.INDEX_TRANSLOG_DURABILITY,Validator.EMPTY);
  registerIndexDynamicSetting(IndicesWarmer.INDEX_WARMER_ENABLED,Validator.EMPTY);
  registerIndexDynamicSetting(IndicesRequestCache.INDEX_CACHE_REQUEST_ENABLED,Validator.BOOLEAN);
  registerIndexDynamicSetting(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING,Validator.TIME);
  registerIndexDynamicSetting(DefaultSearchContext.MAX_RESULT_WINDOW,Validator.POSITIVE_INTEGER);
}
