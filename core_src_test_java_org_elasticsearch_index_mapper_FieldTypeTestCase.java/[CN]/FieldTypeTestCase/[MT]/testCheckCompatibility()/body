{
  MappedFieldType ft1=createNamedDefaultFieldType();
  MappedFieldType ft2=createNamedDefaultFieldType();
  assertCompatible("default",ft1,ft2,true);
  assertCompatible("default",ft1,ft2,false);
  assertCompatible("default",ft2,ft1,true);
  assertCompatible("default",ft2,ft1,false);
  for (  Modifier modifier : modifiers) {
    ft1=createNamedDefaultFieldType();
    ft2=createNamedDefaultFieldType();
    modifier.normalizeOther(ft1);
    modifier.modify(ft2);
    if (modifier.strictOnly) {
      String[] conflicts={"mapper [foo] is used by multiple types","update [" + modifier.property + "]"};
      assertCompatible(modifier.property,ft1,ft2,false);
      assertNotCompatible(modifier.property,ft1,ft2,true,conflicts);
      assertCompatible(modifier.property,ft2,ft1,false);
      assertNotCompatible(modifier.property,ft2,ft1,true,conflicts);
    }
 else {
      String conflict="different [" + modifier.property + "]";
      assertNotCompatible(modifier.property,ft1,ft2,true,conflict);
      assertNotCompatible(modifier.property,ft1,ft2,false,conflict);
      assertNotCompatible(modifier.property,ft2,ft1,true,conflict);
      assertNotCompatible(modifier.property,ft2,ft1,false,conflict);
    }
  }
}
