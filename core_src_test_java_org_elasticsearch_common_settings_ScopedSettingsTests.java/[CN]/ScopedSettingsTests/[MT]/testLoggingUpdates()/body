{
  final String level=ESLoggerFactory.getRootLogger().getLevel();
  final String testLevel=ESLoggerFactory.getLogger("test").getLevel();
  String property=randomFrom(ESLoggerFactory.LogLevel.values()).toString();
  Settings.Builder builder=Settings.builder().put("logger.level",property);
  try {
    ClusterSettings settings=new ClusterSettings(builder.build(),ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);
    try {
      settings.validate(Settings.builder().put("logger._root","boom").build());
      fail();
    }
 catch (    IllegalArgumentException ex) {
      assertEquals("No enum constant org.elasticsearch.common.logging.ESLoggerFactory.LogLevel.BOOM",ex.getMessage());
    }
    assertEquals(level,ESLoggerFactory.getRootLogger().getLevel());
    settings.applySettings(Settings.builder().put("logger._root","TRACE").build());
    assertEquals("TRACE",ESLoggerFactory.getRootLogger().getLevel());
    settings.applySettings(Settings.builder().build());
    assertEquals(property,ESLoggerFactory.getRootLogger().getLevel());
    settings.applySettings(Settings.builder().put("logger.test","TRACE").build());
    assertEquals("TRACE",ESLoggerFactory.getLogger("test").getLevel());
    settings.applySettings(Settings.builder().build());
    assertEquals(testLevel,ESLoggerFactory.getLogger("test").getLevel());
  }
  finally {
    ESLoggerFactory.getRootLogger().setLevel(level);
    ESLoggerFactory.getLogger("test").setLevel(testLevel);
  }
}
