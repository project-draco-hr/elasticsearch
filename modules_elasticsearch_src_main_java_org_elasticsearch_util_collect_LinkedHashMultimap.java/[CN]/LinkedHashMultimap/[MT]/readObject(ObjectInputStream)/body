{
  stream.defaultReadObject();
  expectedValuesPerKey=stream.readInt();
  int distinctKeys=Serialization.readCount(stream);
  setMap(new LinkedHashMap<K,Collection<V>>(Maps.capacity(distinctKeys)));
  linkedEntries=new LinkedHashSet<Map.Entry<K,V>>(distinctKeys * expectedValuesPerKey);
  Serialization.populateMultimap(this,stream,distinctKeys);
  linkedEntries.clear();
  for (int i=0; i < size(); i++) {
    @SuppressWarnings("unchecked") K key=(K)stream.readObject();
    @SuppressWarnings("unchecked") V value=(V)stream.readObject();
    linkedEntries.add(Maps.immutableEntry(key,value));
  }
}
