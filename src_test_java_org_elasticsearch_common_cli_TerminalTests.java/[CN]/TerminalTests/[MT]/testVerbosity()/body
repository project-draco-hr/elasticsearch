{
  final AtomicReference<Boolean> printed=new AtomicReference<>(false);
  Terminal terminal=new TerminalMock(Terminal.Verbosity.SILENT){
    @Override protected void doPrint(    String msg,    Object... args){
      printed.set(true);
      assertThat(msg,equalTo("text"));
    }
  }
;
  terminal.print(Terminal.Verbosity.SILENT,"text");
  assertPrinted(printed);
  terminal.print(Terminal.Verbosity.NORMAL,"text");
  assertNotPrinted(printed);
  terminal.print(Terminal.Verbosity.VERBOSE,"text");
  assertNotPrinted(printed);
  terminal=new TerminalMock(Terminal.Verbosity.NORMAL){
    @Override protected void doPrint(    String msg,    Object... args){
      printed.set(true);
      assertThat(msg,equalTo("text"));
    }
  }
;
  terminal.print(Terminal.Verbosity.SILENT,"text");
  assertPrinted(printed);
  terminal.print(Terminal.Verbosity.NORMAL,"text");
  assertPrinted(printed);
  terminal.print(Terminal.Verbosity.VERBOSE,"text");
  assertNotPrinted(printed);
  terminal=new TerminalMock(Terminal.Verbosity.VERBOSE){
    @Override protected void doPrint(    String msg,    Object... args){
      printed.set(true);
      assertThat(msg,equalTo("text"));
    }
  }
;
  terminal.print(Terminal.Verbosity.SILENT,"text");
  assertPrinted(printed);
  terminal.print(Terminal.Verbosity.NORMAL,"text");
  assertPrinted(printed);
  terminal.print(Terminal.Verbosity.VERBOSE,"text");
  assertPrinted(printed);
}
