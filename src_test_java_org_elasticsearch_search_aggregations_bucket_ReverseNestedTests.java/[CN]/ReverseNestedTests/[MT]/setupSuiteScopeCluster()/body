{
  assertAcked(prepareCreate("idx").addMapping("type1",jsonBuilder().startObject().startObject("properties").startObject("field1").field("type","string").endObject().startObject("nested1").field("type","nested").startObject("properties").startObject("field2").field("type","string").endObject().endObject().endObject().endObject().endObject()).addMapping("type2",jsonBuilder().startObject().startObject("properties").startObject("nested1").field("type","nested").startObject("properties").startObject("field1").field("type","string").endObject().startObject("nested2").field("type","nested").startObject("properties").startObject("field2").field("type","string").endObject().endObject().endObject().endObject().endObject().endObject().endObject()));
  insertDocs(Arrays.asList("a","b","c"),Arrays.asList("1","2","3","4"));
  insertDocs(Arrays.asList("b","c","d"),Arrays.asList("4","5","6","7"));
  insertDocs(Arrays.asList("c","d","e"),Arrays.asList("7","8","9","1"));
  refresh();
  insertDocs(Arrays.asList("a","e"),Arrays.asList("7","4","1","1"));
  insertDocs(Arrays.asList("a","c"),Arrays.asList("2","1"));
  insertDocs(Arrays.asList("a"),Arrays.asList("3","4"));
  refresh();
  insertDocs(Arrays.asList("x","c"),Arrays.asList("1","8"));
  insertDocs(Arrays.asList("y","c"),Arrays.asList("6"));
  insertDocs(Arrays.asList("z"),Arrays.asList("5","9"));
  refresh();
  ensureSearchable();
}
