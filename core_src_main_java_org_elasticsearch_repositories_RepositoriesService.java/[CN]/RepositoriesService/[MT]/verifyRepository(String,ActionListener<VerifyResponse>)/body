{
  final Repository repository=repository(repositoryName);
  try {
    final String verificationToken=repository.startVerification();
    if (verificationToken != null) {
      try {
        verifyAction.verify(repositoryName,verificationToken,new ActionListener<VerifyResponse>(){
          @Override public void onResponse(          VerifyResponse verifyResponse){
            try {
              repository.endVerification(verificationToken);
            }
 catch (            Exception e) {
              logger.warn(new ParameterizedMessage("[{}] failed to finish repository verification",repositoryName),e);
              listener.onFailure(e);
              return;
            }
            listener.onResponse(verifyResponse);
          }
          @Override public void onFailure(          Exception e){
            listener.onFailure(e);
          }
        }
);
      }
 catch (      Exception e) {
        try {
          repository.endVerification(verificationToken);
        }
 catch (        Exception inner) {
          inner.addSuppressed(e);
          logger.warn(new ParameterizedMessage("[{}] failed to finish repository verification",repositoryName),inner);
        }
        listener.onFailure(e);
      }
    }
 else {
      listener.onResponse(new VerifyResponse(new DiscoveryNode[0],new VerificationFailure[0]));
    }
  }
 catch (  Exception e) {
    listener.onFailure(e);
  }
}
