{
  logger.debug("creating repository [{}][{}]",repositoryMetaData.type(),repositoryMetaData.name());
  Injector repositoryInjector=null;
  try {
    ModulesBuilder modules=new ModulesBuilder();
    RepositoryName name=new RepositoryName(repositoryMetaData.type(),repositoryMetaData.name());
    modules.add(new RepositoryNameModule(name));
    modules.add(new RepositoryModule(name,repositoryMetaData.settings(),this.settings,typesRegistry));
    repositoryInjector=modules.createChildInjector(injector);
    Repository repository=repositoryInjector.getInstance(Repository.class);
    IndexShardRepository indexShardRepository=repositoryInjector.getInstance(IndexShardRepository.class);
    repository.start();
    return new RepositoryHolder(repositoryMetaData.type(),repositoryMetaData.settings(),repository,indexShardRepository);
  }
 catch (  Throwable t) {
    logger.warn("failed to create repository [{}][{}]",t,repositoryMetaData.type(),repositoryMetaData.name());
    throw new RepositoryException(repositoryMetaData.name(),"failed to create repository",t);
  }
}
