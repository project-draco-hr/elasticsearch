{
  Document d=new Document();
  final StringField s=new StringField("value","",Field.Store.YES);
  d.add(s);
  final String[] values=new String[randomIntBetween(2,30)];
  for (int i=1; i < values.length; ++i) {
    values[i]=TestUtil.randomUnicodeString(getRandom());
  }
  final int numDocs=scaledRandomIntBetween(10,10000);
  for (int i=0; i < numDocs; ++i) {
    final String value=RandomPicks.randomFrom(getRandom(),values);
    if (value == null) {
      writer.addDocument(new Document());
    }
 else {
      s.setStringValue(value);
      writer.addDocument(d);
    }
    if (randomInt(10) == 0) {
      writer.commit();
    }
  }
  final IndexFieldData indexFieldData=getForField("value");
  final String missingValue=values[1];
  IndexSearcher searcher=new IndexSearcher(DirectoryReader.open(writer,true));
  XFieldComparatorSource comparator=indexFieldData.comparatorSource(missingValue,MultiValueMode.MIN,null);
  TopFieldDocs topDocs=searcher.search(new MatchAllDocsQuery(),randomBoolean() ? numDocs : randomIntBetween(10,numDocs),new Sort(new SortField("value",comparator,reverse)));
  assertEquals(numDocs,topDocs.totalHits);
  BytesRef previousValue=reverse ? UnicodeUtil.BIG_TERM : new BytesRef();
  for (int i=0; i < topDocs.scoreDocs.length; ++i) {
    final String docValue=searcher.doc(topDocs.scoreDocs[i].doc).get("value");
    final BytesRef value=new BytesRef(docValue == null ? missingValue : docValue);
    if (reverse) {
      assertTrue(previousValue.compareTo(value) >= 0);
    }
 else {
      assertTrue(previousValue.compareTo(value) <= 0);
    }
    previousValue=value;
  }
  searcher.getIndexReader().close();
}
