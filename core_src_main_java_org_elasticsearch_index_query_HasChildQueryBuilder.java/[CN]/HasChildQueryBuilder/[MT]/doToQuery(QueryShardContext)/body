{
  Query innerQuery;
  final String[] previousTypes=context.getTypes();
  context.setTypes(type);
  try {
    innerQuery=query.toQuery(context);
  }
  finally {
    context.setTypes(previousTypes);
  }
  if (innerQuery == null) {
    return null;
  }
  DocumentMapper childDocMapper=context.getMapperService().documentMapper(type);
  if (childDocMapper == null) {
    throw new QueryShardException(context,"[" + NAME + "] no mapping found for type ["+ type+ "]");
  }
  ParentFieldMapper parentFieldMapper=childDocMapper.parentFieldMapper();
  if (parentFieldMapper.active() == false) {
    throw new QueryShardException(context,"[" + NAME + "] _parent field has no parent type configured");
  }
  if (queryInnerHits != null) {
    try (XContentParser parser=queryInnerHits.getXcontentParser()){
      XContentParser.Token token=parser.nextToken();
      if (token != XContentParser.Token.START_OBJECT) {
        throw new IllegalStateException("start object expected but was: [" + token + "]");
      }
      InnerHitsSubSearchContext innerHits=context.getInnerHitsContext(parser);
      if (innerHits != null) {
        ParsedQuery parsedQuery=new ParsedQuery(innerQuery,context.copyNamedQueries());
        InnerHitsContext.ParentChildInnerHits parentChildInnerHits=new InnerHitsContext.ParentChildInnerHits(innerHits.getSubSearchContext(),parsedQuery,null,context.getMapperService(),childDocMapper);
        String name=innerHits.getName() != null ? innerHits.getName() : type;
        context.addInnerHits(name,parentChildInnerHits);
      }
    }
   }
  String parentType=parentFieldMapper.type();
  DocumentMapper parentDocMapper=context.getMapperService().documentMapper(parentType);
  if (parentDocMapper == null) {
    throw new QueryShardException(context,"[" + NAME + "] Type ["+ type+ "] points to a non existent parent type ["+ parentType+ "]");
  }
  if (maxChildren > 0 && maxChildren < minChildren) {
    throw new QueryShardException(context,"[" + NAME + "] 'max_children' is less than 'min_children'");
  }
  innerQuery=Queries.filtered(innerQuery,childDocMapper.typeFilter());
  final ParentChildIndexFieldData parentChildIndexFieldData=context.getForField(parentFieldMapper.fieldType());
  int maxChildren=maxChildren();
  if (maxChildren == 0) {
    maxChildren=Integer.MAX_VALUE;
  }
  return new LateParsingQuery(parentDocMapper.typeFilter(),innerQuery,minChildren(),maxChildren,parentType,scoreMode,parentChildIndexFieldData,context.getSearchSimilarity());
}
