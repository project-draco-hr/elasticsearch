{
  Predicate<Object> waitPredicate=new Predicate<Object>(){
    @Override public boolean apply(    Object input){
      if (stateChangeListener.shardStates.size() != numShards) {
        return false;
      }
      for (      List<IndexShardState> indexShardStates : stateChangeListener.shardStates.values()) {
        if (indexShardStates == null || indexShardStates.size() != shardStates.length) {
          return false;
        }
        for (int i=0; i < shardStates.length; i++) {
          if (indexShardStates.get(i) != shardStates[i]) {
            return false;
          }
        }
      }
      return true;
    }
  }
;
  if (!awaitBusy(waitPredicate,1,TimeUnit.MINUTES)) {
    fail("failed to observe expect shard states\n" + "expected: [" + numShards + "] shards with states: "+ Strings.arrayToCommaDelimitedString(shardStates)+ "\n"+ "observed:\n"+ stateChangeListener);
  }
  stateChangeListener.shardStates.clear();
}
