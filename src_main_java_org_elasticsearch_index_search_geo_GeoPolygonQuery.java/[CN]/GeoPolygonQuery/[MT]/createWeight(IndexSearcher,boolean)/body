{
  return new RandomAccessWeight(this){
    @Override protected Bits getMatchingDocs(    LeafReaderContext context) throws IOException {
      final int maxDoc=context.reader().maxDoc();
      final MultiGeoPointValues values=indexFieldData.load(context).getGeoPointValues();
      return new Bits(){
        private boolean pointInPolygon(        GeoPoint[] points,        double lat,        double lon){
          boolean inPoly=false;
          for (int i=1; i < points.length; i++) {
            if (points[i].lon() < lon && points[i - 1].lon() >= lon || points[i - 1].lon() < lon && points[i].lon() >= lon) {
              if (points[i].lat() + (lon - points[i].lon()) / (points[i - 1].lon() - points[i].lon()) * (points[i - 1].lat() - points[i].lat()) < lat) {
                inPoly=!inPoly;
              }
            }
          }
          return inPoly;
        }
        @Override public boolean get(        int doc){
          values.setDocument(doc);
          final int length=values.count();
          for (int i=0; i < length; i++) {
            GeoPoint point=values.valueAt(i);
            if (pointInPolygon(points,point.lat(),point.lon())) {
              return true;
            }
          }
          return false;
        }
        @Override public int length(){
          return maxDoc;
        }
      }
;
    }
  }
;
}
