{
  MappingNode mnode=(MappingNode)node;
  if (Properties.class.isAssignableFrom(node.getType())) {
    Properties properties=new Properties();
    if (!node.isTwoStepsConstruction()) {
      constructMapping2ndStep(mnode,(Map<Object,Object>)properties);
    }
 else {
      throw new YAMLException("Properties must not be recursive.");
    }
    return properties;
  }
 else   if (SortedMap.class.isAssignableFrom(node.getType())) {
    SortedMap<Object,Object> map=new TreeMap<Object,Object>();
    if (!node.isTwoStepsConstruction()) {
      constructMapping2ndStep(mnode,map);
    }
    return map;
  }
 else   if (Map.class.isAssignableFrom(node.getType())) {
    if (node.isTwoStepsConstruction()) {
      return createDefaultMap();
    }
 else {
      return constructMapping(mnode);
    }
  }
 else   if (SortedSet.class.isAssignableFrom(node.getType())) {
    SortedSet<Object> set=new TreeSet<Object>();
    if (!node.isTwoStepsConstruction()) {
      constructSet2ndStep(mnode,set);
    }
    return set;
  }
 else   if (Set.class.isAssignableFrom(node.getType())) {
    if (node.isTwoStepsConstruction()) {
      return createDefaultSet();
    }
 else {
      return constructSet(mnode);
    }
  }
 else {
    if (node.isTwoStepsConstruction()) {
      return createEmptyJavaBean(mnode);
    }
 else {
      return constructJavaBean2ndStep(mnode,createEmptyJavaBean(mnode));
    }
  }
}
