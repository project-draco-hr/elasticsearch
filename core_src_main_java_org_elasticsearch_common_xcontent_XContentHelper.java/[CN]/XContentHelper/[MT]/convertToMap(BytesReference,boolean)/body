{
  try {
    XContentType contentType;
    InputStream input;
    Compressor compressor=CompressorFactory.compressor(bytes);
    if (compressor != null) {
      InputStream compressedStreamInput=compressor.streamInput(bytes.streamInput());
      if (compressedStreamInput.markSupported() == false) {
        compressedStreamInput=new BufferedInputStream(compressedStreamInput);
      }
      contentType=XContentFactory.xContentType(compressedStreamInput);
      input=compressedStreamInput;
    }
 else {
      contentType=XContentFactory.xContentType(bytes);
      input=bytes.streamInput();
    }
    try (XContentParser parser=XContentFactory.xContent(contentType).createParser(input)){
      if (ordered) {
        return Tuple.tuple(contentType,parser.mapOrdered());
      }
 else {
        return Tuple.tuple(contentType,parser.map());
      }
    }
   }
 catch (  IOException e) {
    throw new ElasticsearchParseException("Failed to parse content to map",e);
  }
}
