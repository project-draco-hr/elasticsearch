{
  createIndex("idx");
  client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();
  for (int i=0; i < 10; i++) {
    client().prepareIndex("idx","type","" + i).setSource(jsonBuilder().startObject().field("mapped_str","" + i).field("mapped_long",i).field("mapped_double",i).endObject()).execute().actionGet();
  }
  client().admin().indices().prepareFlush().setRefresh(true).execute().actionGet();
  SearchResponse searchResponse=client().prepareSearch().setQuery(matchAllQuery()).addFacet(termsFacet("string").fields("mapped_str","unmapped").size(10)).addFacet(termsFacet("long").fields("mapped_long","unmapped").size(10)).addFacet(termsFacet("double").fields("mapped_double","unmapped").size(10)).addFacet(termsFacet("all_unmapped").fields("unmapped","unmapped_1").size(10)).execute().actionGet();
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(10l));
  TermsFacet facet=searchResponse.getFacets().facet("string");
  assertThat(facet.getName(),equalTo("string"));
  assertThat(facet.getEntries().size(),is(10));
  assertThat(facet.getTotalCount(),is(10l));
  assertThat(facet.getMissingCount(),is(0l));
  facet=searchResponse.getFacets().facet("long");
  assertThat(facet.getName(),equalTo("long"));
  assertThat(facet.getEntries().size(),is(10));
  assertThat(facet.getTotalCount(),is(10l));
  assertThat(facet.getMissingCount(),is(0l));
  facet=searchResponse.getFacets().facet("double");
  assertThat(facet.getName(),equalTo("double"));
  assertThat(facet.getEntries().size(),is(10));
  assertThat(facet.getTotalCount(),is(10l));
  assertThat(facet.getMissingCount(),is(0l));
  facet=searchResponse.getFacets().facet("all_unmapped");
  assertThat(facet.getName(),equalTo("all_unmapped"));
  assertThat(facet.getEntries().size(),is(0));
  assertThat(facet.getTotalCount(),is(0l));
  assertThat(facet.getMissingCount(),is(10l));
}
