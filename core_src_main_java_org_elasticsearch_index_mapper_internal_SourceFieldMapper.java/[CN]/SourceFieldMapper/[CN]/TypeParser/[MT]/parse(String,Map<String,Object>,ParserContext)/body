{
  Builder builder=new Builder();
  for (Iterator<Map.Entry<String,Object>> iterator=node.entrySet().iterator(); iterator.hasNext(); ) {
    Map.Entry<String,Object> entry=iterator.next();
    String fieldName=Strings.toUnderscoreCase(entry.getKey());
    Object fieldNode=entry.getValue();
    if (fieldName.equals("enabled")) {
      builder.enabled(nodeBooleanValue(fieldNode));
      iterator.remove();
    }
 else     if ("format".equals(fieldName)) {
      builder.format(nodeStringValue(fieldNode,null));
      iterator.remove();
    }
 else     if (fieldName.equals("includes")) {
      List<Object> values=(List<Object>)fieldNode;
      String[] includes=new String[values.size()];
      for (int i=0; i < includes.length; i++) {
        includes[i]=values.get(i).toString();
      }
      builder.includes(includes);
      iterator.remove();
    }
 else     if (fieldName.equals("excludes")) {
      List<Object> values=(List<Object>)fieldNode;
      String[] excludes=new String[values.size()];
      for (int i=0; i < excludes.length; i++) {
        excludes[i]=values.get(i).toString();
      }
      builder.excludes(excludes);
      iterator.remove();
    }
  }
  return builder;
}
