{
  clearAttributes();
  if (finiteStrings == null) {
    Set<IntsRef> strings=toFiniteStrings.toFiniteStrings(input);
    if (strings.size() > MAX_PATHS) {
      throw new IllegalArgumentException("TokenStream expanded to " + strings.size() + " finite strings. Only <= "+ MAX_PATHS+ " finite strings are supported");
    }
    posInc=strings.size();
    finiteStrings=strings.iterator();
  }
  if (finiteStrings.hasNext()) {
    posAttr.setPositionIncrement(posInc);
    posInc=0;
    Util.toBytesRef(finiteStrings.next(),bytesAtt.builder());
    if (charTermAttribute != null) {
      charTermAttribute.setLength(0);
      charTermAttribute.append(bytesAtt.toUTF16());
    }
    if (payload != null) {
      payloadAttr.setPayload(this.payload);
    }
    return true;
  }
  return false;
}
