{
  ClusterState clusterState=clusterService.state();
  for (  AliasAction aliasAction : aliasActions) {
    clusterState.blocks().indexBlockedRaiseException(ClusterBlockLevel.METADATA,aliasAction.index());
    if (!clusterState.metaData().hasIndex(aliasAction.index())) {
      throw new IndexMissingException(new Index(aliasAction.index()));
    }
  }
  clusterService.submitStateUpdateTask("index-aliases",new ClusterStateUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState){
      MetaData.Builder builder=newMetaDataBuilder().metaData(currentState.metaData());
      for (      AliasAction aliasAction : aliasActions) {
        IndexMetaData indexMetaData=builder.get(aliasAction.index());
        if (indexMetaData == null) {
          throw new IndexMissingException(new Index(aliasAction.index()));
        }
        Set<String> indexAliases=newHashSet(indexMetaData.settings().getAsArray("index.aliases"));
        if (aliasAction.actionType() == AliasAction.Type.ADD) {
          indexAliases.add(aliasAction.alias());
        }
 else         if (aliasAction.actionType() == AliasAction.Type.REMOVE) {
          indexAliases.remove(aliasAction.alias());
        }
        Settings settings=settingsBuilder().put(indexMetaData.settings()).putArray("index.aliases",indexAliases.toArray(new String[indexAliases.size()])).build();
        builder.put(newIndexMetaDataBuilder(indexMetaData).settings(settings));
      }
      return newClusterStateBuilder().state(currentState).metaData(builder).build();
    }
  }
);
  return new IndicesAliasesResult();
}
