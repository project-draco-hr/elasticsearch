{
  XContentParser parser=parseContext.parser();
  String fieldName=null;
  Object from=null;
  Object to=null;
  boolean includeLower=RangeQueryBuilder.DEFAULT_INCLUDE_LOWER;
  boolean includeUpper=RangeQueryBuilder.DEFAULT_INCLUDE_UPPER;
  String timeZone=null;
  float boost=AbstractQueryBuilder.DEFAULT_BOOST;
  String queryName=null;
  String format=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (parseContext.isDeprecatedSetting(currentFieldName)) {
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      fieldName=currentFieldName;
      while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
        if (token == XContentParser.Token.FIELD_NAME) {
          currentFieldName=parser.currentName();
        }
 else {
          if ("from".equals(currentFieldName)) {
            from=parser.objectBytes();
          }
 else           if ("to".equals(currentFieldName)) {
            to=parser.objectBytes();
          }
 else           if ("include_lower".equals(currentFieldName) || "includeLower".equals(currentFieldName)) {
            includeLower=parser.booleanValue();
          }
 else           if ("include_upper".equals(currentFieldName) || "includeUpper".equals(currentFieldName)) {
            includeUpper=parser.booleanValue();
          }
 else           if ("boost".equals(currentFieldName)) {
            boost=parser.floatValue();
          }
 else           if ("gt".equals(currentFieldName)) {
            from=parser.objectBytes();
            includeLower=false;
          }
 else           if ("gte".equals(currentFieldName) || "ge".equals(currentFieldName)) {
            from=parser.objectBytes();
            includeLower=true;
          }
 else           if ("lt".equals(currentFieldName)) {
            to=parser.objectBytes();
            includeUpper=false;
          }
 else           if ("lte".equals(currentFieldName) || "le".equals(currentFieldName)) {
            to=parser.objectBytes();
            includeUpper=true;
          }
 else           if ("time_zone".equals(currentFieldName) || "timeZone".equals(currentFieldName)) {
            timeZone=parser.text();
          }
 else           if ("format".equals(currentFieldName)) {
            format=parser.text();
          }
 else           if ("_name".equals(currentFieldName)) {
            queryName=parser.text();
          }
 else {
            throw new QueryParsingException(parseContext,"[range] query does not support [" + currentFieldName + "]");
          }
        }
      }
    }
 else     if (token.isValue()) {
      if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else       if (FIELDDATA_FIELD.match(currentFieldName)) {
      }
 else {
        throw new QueryParsingException(parseContext,"[range] query does not support [" + currentFieldName + "]");
      }
    }
  }
  RangeQueryBuilder rangeQuery=new RangeQueryBuilder(fieldName);
  rangeQuery.from(from);
  rangeQuery.to(to);
  rangeQuery.includeLower(includeLower);
  rangeQuery.includeUpper(includeUpper);
  rangeQuery.timeZone(timeZone);
  rangeQuery.boost(boost);
  rangeQuery.queryName(queryName);
  rangeQuery.format(format);
  return rangeQuery;
}
