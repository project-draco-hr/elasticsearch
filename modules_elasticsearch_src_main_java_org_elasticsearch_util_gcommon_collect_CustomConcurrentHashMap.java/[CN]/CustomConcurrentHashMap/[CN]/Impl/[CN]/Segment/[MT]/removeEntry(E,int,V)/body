{
  Strategy<K,V,E> s=Impl.this.strategy;
  lock();
  try {
    int count=this.count - 1;
    AtomicReferenceArray<E> table=this.table;
    int index=hash & (table.length() - 1);
    E first=table.get(index);
    for (E e=first; e != null; e=s.getNext(e)) {
      if (s.getHash(e) == hash && entry.equals(e)) {
        V entryValue=s.getValue(e);
        if (entryValue == value || (value != null && s.equalValues(entryValue,value))) {
          ++modCount;
          E newFirst=s.getNext(e);
          for (E p=first; p != e; p=s.getNext(p)) {
            K pKey=s.getKey(p);
            if (pKey != null) {
              newFirst=s.copyEntry(pKey,p,newFirst);
            }
 else {
            }
          }
          table.set(index,newFirst);
          this.count=count;
          return true;
        }
 else {
          return false;
        }
      }
    }
    return false;
  }
  finally {
    unlock();
  }
}
