{
  AzureStorageSettings primaryStorage=null;
  Map<String,AzureStorageSettings> secondaryStorage=new HashMap<>();
  TimeValue globalTimeout=settings.getAsTime(Storage.TIMEOUT,TimeValue.timeValueMinutes(5));
  Settings storageSettings=settings.getByPrefix(Storage.PREFIX);
  if (storageSettings != null) {
    Map<String,Object> asMap=storageSettings.getAsStructuredMap();
    for (    Map.Entry<String,Object> storage : asMap.entrySet()) {
      if (storage.getValue() instanceof Map) {
        @SuppressWarnings("unchecked") Map<String,String> map=(Map)storage.getValue();
        TimeValue timeout=TimeValue.parseTimeValue(map.get("timeout"),globalTimeout,Storage.PREFIX + storage.getKey() + ".timeout");
        AzureStorageSettings current=new AzureStorageSettings(storage.getKey(),map.get("account"),map.get("key"),timeout);
        boolean activeByDefault=Boolean.parseBoolean(map.getOrDefault("default","false"));
        if (activeByDefault) {
          if (primaryStorage == null) {
            primaryStorage=current;
          }
 else {
            logger.warn("default storage settings has already been defined. You can not define it to [{}]",storage.getKey());
            secondaryStorage.put(storage.getKey(),current);
          }
        }
 else {
          secondaryStorage.put(storage.getKey(),current);
        }
      }
    }
    if (primaryStorage == null && secondaryStorage.isEmpty() == false) {
      Map.Entry<String,AzureStorageSettings> fallback=secondaryStorage.entrySet().iterator().next();
      if (secondaryStorage.size() > 1) {
        logger.warn("no default storage settings has been defined. " + "Add \"default\": true to the settings you want to activate by default. " + "Forcing default to [{}].",fallback.getKey());
      }
      primaryStorage=fallback.getValue();
      secondaryStorage.remove(fallback.getKey());
    }
  }
  return Tuple.tuple(primaryStorage,secondaryStorage);
}
