{
switch (insnNode.getOpcode()) {
case ICONST_0:
    return new IntegerConstantBasicValue(Type.INT_TYPE,0);
case ICONST_1:
  return new IntegerConstantBasicValue(Type.INT_TYPE,1);
case ICONST_2:
return new IntegerConstantBasicValue(Type.INT_TYPE,2);
case ICONST_3:
return new IntegerConstantBasicValue(Type.INT_TYPE,3);
case ICONST_4:
return new IntegerConstantBasicValue(Type.INT_TYPE,4);
case ICONST_5:
return new IntegerConstantBasicValue(Type.INT_TYPE,5);
case BIPUSH:
case SIPUSH:
return new IntegerConstantBasicValue(Type.INT_TYPE,((IntInsnNode)insnNode).operand);
case Opcodes.LDC:
{
Object constant=((LdcInsnNode)insnNode).cst;
if (constant instanceof Integer) {
return new IntegerConstantBasicValue(Type.INT_TYPE,(Integer)constant);
}
 else {
return super.newOperation(insnNode);
}
}
default :
return super.newOperation(insnNode);
}
}
