{
  int k=(workerCounts >>> TOTAL_COUNT_SHIFT) - 1;
  final ReentrantLock lock=this.workerLock;
  lock.lock();
  try {
    ForkJoinWorkerThread[] ws=workers;
    int len=ws.length;
    if (k < 0 || k >= len || ws[k] != null) {
      for (k=0; k < len && ws[k] != null; ++k)       ;
      if (k == len)       ws=Arrays.copyOf(ws,len << 1);
    }
    ws[k]=w;
    workers=ws;
  }
  finally {
    lock.unlock();
  }
  return k;
}
