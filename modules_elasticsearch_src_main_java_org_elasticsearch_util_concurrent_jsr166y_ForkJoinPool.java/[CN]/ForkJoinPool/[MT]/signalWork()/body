{
  int ec;
  UNSAFE.compareAndSwapInt(this,eventCountOffset,ec=eventCount,ec + 1);
  outer:   for (; ; ) {
    long top=eventWaiters;
    ec=eventCount;
    for (; ; ) {
      ForkJoinWorkerThread[] ws;
      ForkJoinWorkerThread w;
      int id=(int)(top & WAITER_INDEX_MASK);
      if (id <= 0 || (int)(top >>> EVENT_COUNT_SHIFT) == ec)       return;
      if ((ws=workers).length < id || (w=ws[id - 1]) == null || !UNSAFE.compareAndSwapLong(this,eventWaitersOffset,top,top=w.nextWaiter))       continue outer;
      LockSupport.unpark(w);
      if (top != eventWaiters)       return;
    }
  }
}
