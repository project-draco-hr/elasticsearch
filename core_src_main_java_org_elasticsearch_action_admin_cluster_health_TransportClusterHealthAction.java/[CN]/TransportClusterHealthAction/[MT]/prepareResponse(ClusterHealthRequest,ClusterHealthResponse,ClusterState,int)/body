{
  int waitForCounter=0;
  if (request.waitForStatus() != null && response.getStatus().value() <= request.waitForStatus().value()) {
    waitForCounter++;
  }
  if (request.waitForRelocatingShards() != -1 && response.getRelocatingShards() <= request.waitForRelocatingShards()) {
    waitForCounter++;
  }
  if (request.waitForActiveShards() != -1 && response.getActiveShards() >= request.waitForActiveShards()) {
    waitForCounter++;
  }
  if (request.indices().length > 0) {
    try {
      clusterState.metaData().concreteIndices(IndicesOptions.strictExpand(),request.indices());
      waitForCounter++;
    }
 catch (    IndexMissingException e) {
      response.status=ClusterHealthStatus.RED;
    }
  }
  if (!request.waitForNodes().isEmpty()) {
    if (request.waitForNodes().startsWith(">=")) {
      int expected=Integer.parseInt(request.waitForNodes().substring(2));
      if (response.getNumberOfNodes() >= expected) {
        waitForCounter++;
      }
    }
 else     if (request.waitForNodes().startsWith("ge(")) {
      int expected=Integer.parseInt(request.waitForNodes().substring(3,request.waitForNodes().length() - 1));
      if (response.getNumberOfNodes() >= expected) {
        waitForCounter++;
      }
    }
 else     if (request.waitForNodes().startsWith("<=")) {
      int expected=Integer.parseInt(request.waitForNodes().substring(2));
      if (response.getNumberOfNodes() <= expected) {
        waitForCounter++;
      }
    }
 else     if (request.waitForNodes().startsWith("le(")) {
      int expected=Integer.parseInt(request.waitForNodes().substring(3,request.waitForNodes().length() - 1));
      if (response.getNumberOfNodes() <= expected) {
        waitForCounter++;
      }
    }
 else     if (request.waitForNodes().startsWith(">")) {
      int expected=Integer.parseInt(request.waitForNodes().substring(1));
      if (response.getNumberOfNodes() > expected) {
        waitForCounter++;
      }
    }
 else     if (request.waitForNodes().startsWith("gt(")) {
      int expected=Integer.parseInt(request.waitForNodes().substring(3,request.waitForNodes().length() - 1));
      if (response.getNumberOfNodes() > expected) {
        waitForCounter++;
      }
    }
 else     if (request.waitForNodes().startsWith("<")) {
      int expected=Integer.parseInt(request.waitForNodes().substring(1));
      if (response.getNumberOfNodes() < expected) {
        waitForCounter++;
      }
    }
 else     if (request.waitForNodes().startsWith("lt(")) {
      int expected=Integer.parseInt(request.waitForNodes().substring(3,request.waitForNodes().length() - 1));
      if (response.getNumberOfNodes() < expected) {
        waitForCounter++;
      }
    }
 else {
      int expected=Integer.parseInt(request.waitForNodes());
      if (response.getNumberOfNodes() == expected) {
        waitForCounter++;
      }
    }
  }
  return waitForCounter == waitFor;
}
