{
  Mark startMark=reader.getMark();
  char ch=reader.peek(1);
  String handle=null;
  String suffix=null;
  if (ch == '<') {
    reader.forward(2);
    suffix=scanTagUri("tag",startMark);
    if (reader.peek() != '>') {
      throw new ScannerException("while scanning a tag",startMark,"expected '>', but found '" + reader.peek() + "' ("+ ((int)reader.peek())+ ")",reader.getMark());
    }
    reader.forward();
  }
 else   if (Constant.NULL_BL_T_LINEBR.has(ch)) {
    suffix="!";
    reader.forward();
  }
 else {
    int length=1;
    boolean useHandle=false;
    while (Constant.NULL_BL_LINEBR.hasNo(ch)) {
      if (ch == '!') {
        useHandle=true;
        break;
      }
      length++;
      ch=reader.peek(length);
    }
    handle="!";
    if (useHandle) {
      handle=scanTagHandle("tag",startMark);
    }
 else {
      handle="!";
      reader.forward();
    }
    suffix=scanTagUri("tag",startMark);
  }
  ch=reader.peek();
  if (Constant.NULL_BL_LINEBR.hasNo(ch)) {
    throw new ScannerException("while scanning a tag",startMark,"expected ' ', but found '" + ch + "' ("+ ((int)ch)+ ")",reader.getMark());
  }
  TagTuple value=new TagTuple(handle,suffix);
  Mark endMark=reader.getMark();
  return new TagToken(value,startMark,endMark);
}
