{
  if (this.possibleSimpleKeys.keySet().contains(this.flowLevel)) {
    SimpleKey key=this.possibleSimpleKeys.get(this.flowLevel);
    this.possibleSimpleKeys.remove(this.flowLevel);
    this.tokens.add(key.getTokenNumber() - this.tokensTaken,new KeyToken(key.getMark(),key.getMark()));
    if (this.flowLevel == 0) {
      if (addIndent(key.getColumn())) {
        this.tokens.add(key.getTokenNumber() - this.tokensTaken,new BlockMappingStartToken(key.getMark(),key.getMark()));
      }
    }
    this.allowSimpleKey=false;
  }
 else {
    if (this.flowLevel == 0) {
      if (!this.allowSimpleKey) {
        throw new ScannerException(null,null,"mapping values are not allowed here",reader.getMark());
      }
    }
    if (flowLevel == 0) {
      if (addIndent(reader.getColumn())) {
        Mark mark=reader.getMark();
        this.tokens.add(new BlockMappingStartToken(mark,mark));
      }
    }
    allowSimpleKey=(flowLevel == 0);
    removePossibleSimpleKey();
  }
  Mark startMark=reader.getMark();
  reader.forward();
  Mark endMark=reader.getMark();
  Token token=new ValueToken(startMark,endMark);
  this.tokens.add(token);
}
