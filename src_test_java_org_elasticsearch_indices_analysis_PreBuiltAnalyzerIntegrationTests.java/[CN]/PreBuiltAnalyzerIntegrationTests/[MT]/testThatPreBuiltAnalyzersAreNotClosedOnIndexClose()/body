{
  Map<PreBuiltAnalyzers,List<Version>> loadedAnalyzers=Maps.newHashMap();
  List<String> indexNames=Lists.newArrayList();
  for (int i=0; i < 10; i++) {
    String indexName=randomAsciiOfLength(10).toLowerCase(Locale.ROOT);
    indexNames.add(indexName);
    int randomInt=randomInt(PreBuiltAnalyzers.values().length - 1);
    PreBuiltAnalyzers preBuiltAnalyzer=PreBuiltAnalyzers.values()[randomInt];
    String name=preBuiltAnalyzer.name().toLowerCase(Locale.ROOT);
    Version randomVersion=randomVersion();
    if (!loadedAnalyzers.containsKey(preBuiltAnalyzer)) {
      loadedAnalyzers.put(preBuiltAnalyzer,Lists.<Version>newArrayList());
    }
    loadedAnalyzers.get(preBuiltAnalyzer).add(randomVersion);
    final XContentBuilder mapping=jsonBuilder().startObject().startObject("type").startObject("properties").startObject("foo").field("type","string").field("analyzer",name).endObject().endObject().endObject().endObject();
    Settings versionSettings=ImmutableSettings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,randomVersion).build();
    client().admin().indices().prepareCreate(indexName).addMapping("type",mapping).setSettings(versionSettings).get();
  }
  ensureGreen();
  for (int i=0; i < 100; i++) {
    String randomIndex=indexNames.get(randomInt(indexNames.size() - 1));
    String randomId=randomInt() + "";
    Map<String,Object> data=Maps.newHashMap();
    data.put("foo",randomAsciiOfLength(50));
    index(randomIndex,"type",randomId,data);
  }
  refresh();
  int amountOfIndicesToClose=randomInt(10 - 1);
  for (int i=0; i < amountOfIndicesToClose; i++) {
    String indexName=indexNames.get(i);
    client().admin().indices().prepareClose(indexName).execute().actionGet();
  }
  ensureGreen();
  assertThatAnalyzersHaveBeenLoaded(loadedAnalyzers);
  assertLuceneAnalyzersAreNotClosed(loadedAnalyzers);
}
