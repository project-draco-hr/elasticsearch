{
  assertAcked(prepareCreate("test").addMapping("type1","no_long_term","type=text,term_vector=with_positions_offsets","long_term","type=text,term_vector=with_positions_offsets"));
  client().prepareIndex("test","type1","1").setSource("no_long_term","This is a test where foo is highlighed and should be highlighted","long_term","This is a test thisisaverylongwordandmakessurethisfails where foo is highlighed " + "and should be highlighted").get();
  refresh();
  SearchResponse search=client().prepareSearch().setQuery(matchQuery("long_term","thisisaverylongwordandmakessurethisfails foo highlighed")).highlighter(new HighlightBuilder().field("long_term",18,1)).get();
  assertHighlight(search,0,"long_term",0,1,equalTo("<em>thisisaverylongwordandmakessurethisfails</em>"));
  search=client().prepareSearch().setQuery(matchPhraseQuery("no_long_term","test foo highlighed").slop(3)).highlighter(new HighlightBuilder().field("no_long_term",18,1).postTags("</b>").preTags("<b>")).get();
  assertNotHighlighted(search,0,"no_long_term");
  search=client().prepareSearch().setQuery(matchPhraseQuery("no_long_term","test foo highlighed").slop(3)).highlighter(new HighlightBuilder().field("no_long_term",30,1).postTags("</b>").preTags("<b>")).get();
  assertHighlight(search,0,"no_long_term",0,1,equalTo("a <b>test</b> where <b>foo</b> is <b>highlighed</b> and"));
}
