{
  if ("accuracy".equals(fieldName)) {
    suggestion.accuracy(parser.floatValue());
  }
 else   if ("suggest_mode".equals(fieldName) || "suggestMode".equals(fieldName)) {
    suggestion.suggestMode(SuggestUtils.resolveSuggestMode(parser.text()));
  }
 else   if ("sort".equals(fieldName)) {
    suggestion.sort(SuggestUtils.resolveSort(parser.text()));
  }
 else   if ("string_distance".equals(fieldName) || "stringDistance".equals(fieldName)) {
    suggestion.stringDistance(SuggestUtils.resolveDistance(parser.text()));
  }
 else   if ("max_edits".equals(fieldName) || "maxEdits".equals(fieldName) || "fuzziness".equals(fieldName)) {
    suggestion.maxEdits(parser.intValue());
    if (suggestion.maxEdits() < 1 || suggestion.maxEdits() > LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE) {
      throw new ElasticSearchIllegalArgumentException("Illegal max_edits value " + suggestion.maxEdits());
    }
  }
 else   if ("max_inspections".equals(fieldName)) {
    suggestion.maxInspections(parser.intValue());
  }
 else   if ("max_term_freq".equals(fieldName) || "maxTermFreq".equals(fieldName)) {
    suggestion.maxTermFreq(parser.floatValue());
  }
 else   if ("prefix_length".equals(fieldName) || "prefixLength".equals(fieldName)) {
    suggestion.prefixLength(parser.intValue());
  }
 else   if ("min_word_len".equals(fieldName) || "minWordLen".equals(fieldName)) {
    suggestion.minQueryLength(parser.intValue());
  }
 else   if ("min_doc_freq".equals(fieldName) || "minDocFreq".equals(fieldName)) {
    suggestion.minDocFreq(parser.floatValue());
  }
 else {
    return false;
  }
  return true;
}
