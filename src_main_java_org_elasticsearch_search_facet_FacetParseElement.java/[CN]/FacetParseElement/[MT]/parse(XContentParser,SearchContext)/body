{
  XContentParser.Token token;
  List<SearchContextFacets.Entry> entries=new ArrayList<SearchContextFacets.Entry>();
  String facetName=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      facetName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      FacetExecutor facetExecutor=null;
      boolean global=false;
      FacetExecutor.Mode defaultMainMode=null;
      FacetExecutor.Mode defaultGlobalMode=null;
      FacetExecutor.Mode mode=null;
      Filter filter=null;
      boolean cacheFilter=false;
      String nestedPath=null;
      String fieldName=null;
      while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
        if (token == XContentParser.Token.FIELD_NAME) {
          fieldName=parser.currentName();
        }
 else         if (token == XContentParser.Token.START_OBJECT) {
          if ("facet_filter".equals(fieldName) || "facetFilter".equals(fieldName)) {
            filter=context.queryParserService().parseInnerFilter(parser);
          }
 else {
            FacetParser facetParser=facetParsers.parser(fieldName);
            if (facetParser == null) {
              throw new SearchParseException(context,"No facet type found for [" + fieldName + "]");
            }
            facetExecutor=facetParser.parse(facetName,parser,context);
            defaultMainMode=facetParser.defaultMainMode();
            defaultGlobalMode=facetParser.defaultGlobalMode();
          }
        }
 else         if (token.isValue()) {
          if ("global".equals(fieldName)) {
            global=parser.booleanValue();
          }
 else           if ("mode".equals(fieldName)) {
            String modeAsText=parser.text();
            if ("collector".equals(modeAsText)) {
              mode=FacetExecutor.Mode.COLLECTOR;
            }
 else             if ("post".equals(modeAsText)) {
              mode=FacetExecutor.Mode.POST;
            }
 else {
              throw new ElasticSearchIllegalArgumentException("failed to parse facet mode [" + modeAsText + "]");
            }
          }
 else           if ("scope".equals(fieldName) || "_scope".equals(fieldName)) {
            throw new SearchParseException(context,"the [scope] support in facets have been removed");
          }
 else           if ("cache_filter".equals(fieldName) || "cacheFilter".equals(fieldName)) {
            cacheFilter=parser.booleanValue();
          }
 else           if ("nested".equals(fieldName)) {
            nestedPath=parser.text();
          }
        }
      }
      if (filter != null) {
        if (cacheFilter) {
          filter=context.filterCache().cache(filter);
        }
      }
      if (facetExecutor == null) {
        throw new SearchParseException(context,"no facet type found for facet named [" + facetName + "]");
      }
      if (nestedPath != null) {
        facetExecutor=new NestedFacetExecutor(facetExecutor,context,nestedPath);
      }
      if (mode == null) {
        mode=global ? defaultGlobalMode : defaultMainMode;
      }
      entries.add(new SearchContextFacets.Entry(facetName,mode,facetExecutor,global,filter));
    }
  }
  context.facets(new SearchContextFacets(entries));
}
