{
  AllocationService strategy=createAllocationService(Settings.builder().put("cluster.routing.allocation.node_concurrent_recoveries",3).put("cluster.routing.allocation.node_initial_primaries_recoveries",3).build());
  logger.info("Building initial routing table");
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(10).numberOfReplicas(1)).build();
  RoutingTable initialRoutingTable=createRecoveryRoutingTable(metaData.index("test"));
  ClusterState clusterState=ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(initialRoutingTable).build();
  logger.info("start one node, do reroute, only 3 should initialize");
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode("node1"))).build();
  clusterState=strategy.reroute(clusterState,"reroute");
  assertThat(clusterState.routingTable().shardsWithState(STARTED).size(),equalTo(0));
  assertThat(clusterState.routingTable().shardsWithState(INITIALIZING).size(),equalTo(3));
  assertThat(clusterState.routingTable().shardsWithState(UNASSIGNED).size(),equalTo(17));
  logger.info("start initializing, another 3 should initialize");
  clusterState=strategy.applyStartedShards(clusterState,clusterState.routingTable().shardsWithState(INITIALIZING));
  assertThat(clusterState.routingTable().shardsWithState(STARTED).size(),equalTo(3));
  assertThat(clusterState.routingTable().shardsWithState(INITIALIZING).size(),equalTo(3));
  assertThat(clusterState.routingTable().shardsWithState(UNASSIGNED).size(),equalTo(14));
  logger.info("start initializing, another 3 should initialize");
  clusterState=strategy.applyStartedShards(clusterState,clusterState.routingTable().shardsWithState(INITIALIZING));
  assertThat(clusterState.routingTable().shardsWithState(STARTED).size(),equalTo(6));
  assertThat(clusterState.routingTable().shardsWithState(INITIALIZING).size(),equalTo(3));
  assertThat(clusterState.routingTable().shardsWithState(UNASSIGNED).size(),equalTo(11));
  logger.info("start initializing, another 1 should initialize");
  clusterState=strategy.applyStartedShards(clusterState,clusterState.routingTable().shardsWithState(INITIALIZING));
  assertThat(clusterState.routingTable().shardsWithState(STARTED).size(),equalTo(9));
  assertThat(clusterState.routingTable().shardsWithState(INITIALIZING).size(),equalTo(1));
  assertThat(clusterState.routingTable().shardsWithState(UNASSIGNED).size(),equalTo(10));
  logger.info("start initializing, all primaries should be started");
  clusterState=strategy.applyStartedShards(clusterState,clusterState.routingTable().shardsWithState(INITIALIZING));
  assertThat(clusterState.routingTable().shardsWithState(STARTED).size(),equalTo(10));
  assertThat(clusterState.routingTable().shardsWithState(INITIALIZING).size(),equalTo(0));
  assertThat(clusterState.routingTable().shardsWithState(UNASSIGNED).size(),equalTo(10));
}
