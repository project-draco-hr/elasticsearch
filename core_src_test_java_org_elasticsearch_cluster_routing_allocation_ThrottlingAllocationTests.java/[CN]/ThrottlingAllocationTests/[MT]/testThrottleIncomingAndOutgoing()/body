{
  Settings settings=Settings.builder().put("cluster.routing.allocation.node_concurrent_recoveries",5).put("cluster.routing.allocation.node_initial_primaries_recoveries",5).put("cluster.routing.allocation.cluster_concurrent_rebalance",5).build();
  AllocationService strategy=createAllocationService(settings);
  logger.info("Building initial routing table");
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(9).numberOfReplicas(0)).build();
  RoutingTable initialRoutingTable=createRecoveryRoutingTable(metaData.index("test"));
  ClusterState clusterState=ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(initialRoutingTable).build();
  logger.info("start one node, do reroute, only 5 should initialize");
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode("node1"))).build();
  RoutingAllocation.Result routingResult=strategy.reroute(clusterState,"reroute");
  clusterState=ClusterState.builder(clusterState).routingResult(routingResult).build();
  assertThat(clusterState.routingTable().shardsWithState(STARTED).size(),equalTo(0));
  assertThat(clusterState.routingTable().shardsWithState(INITIALIZING).size(),equalTo(5));
  assertThat(clusterState.routingTable().shardsWithState(UNASSIGNED).size(),equalTo(4));
  assertEquals(clusterState.getRoutingNodes().getIncomingRecoveries("node1"),5);
  logger.info("start initializing, all primaries should be started");
  routingResult=strategy.applyStartedShards(clusterState,clusterState.routingTable().shardsWithState(INITIALIZING));
  clusterState=ClusterState.builder(clusterState).routingResult(routingResult).build();
  assertThat(clusterState.routingTable().shardsWithState(STARTED).size(),equalTo(5));
  assertThat(clusterState.routingTable().shardsWithState(INITIALIZING).size(),equalTo(4));
  assertThat(clusterState.routingTable().shardsWithState(UNASSIGNED).size(),equalTo(0));
  routingResult=strategy.applyStartedShards(clusterState,clusterState.routingTable().shardsWithState(INITIALIZING));
  clusterState=ClusterState.builder(clusterState).routingResult(routingResult).build();
  logger.info("start another 2 nodes, 5 shards should be relocating - at most 5 are allowed per node");
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode("node2")).add(newNode("node3"))).build();
  routingResult=strategy.reroute(clusterState,"reroute");
  clusterState=ClusterState.builder(clusterState).routingResult(routingResult).build();
  assertThat(clusterState.routingTable().shardsWithState(STARTED).size(),equalTo(4));
  assertThat(clusterState.routingTable().shardsWithState(RELOCATING).size(),equalTo(5));
  assertThat(clusterState.routingTable().shardsWithState(INITIALIZING).size(),equalTo(5));
  assertThat(clusterState.routingTable().shardsWithState(UNASSIGNED).size(),equalTo(0));
  assertEquals(clusterState.getRoutingNodes().getIncomingRecoveries("node2"),3);
  assertEquals(clusterState.getRoutingNodes().getIncomingRecoveries("node3"),2);
  assertEquals(clusterState.getRoutingNodes().getIncomingRecoveries("node1"),0);
  assertEquals(clusterState.getRoutingNodes().getOutgoingRecoveries("node1"),5);
  routingResult=strategy.applyStartedShards(clusterState,clusterState.routingTable().shardsWithState(INITIALIZING));
  clusterState=ClusterState.builder(clusterState).routingResult(routingResult).build();
  logger.info("start the relocating shards, one more shard should relocate away from node1");
  assertThat(clusterState.routingTable().shardsWithState(STARTED).size(),equalTo(8));
  assertThat(clusterState.routingTable().shardsWithState(RELOCATING).size(),equalTo(1));
  assertThat(clusterState.routingTable().shardsWithState(INITIALIZING).size(),equalTo(1));
  assertThat(clusterState.routingTable().shardsWithState(UNASSIGNED).size(),equalTo(0));
  assertEquals(clusterState.getRoutingNodes().getIncomingRecoveries("node2"),0);
  assertEquals(clusterState.getRoutingNodes().getIncomingRecoveries("node3"),1);
  assertEquals(clusterState.getRoutingNodes().getIncomingRecoveries("node1"),0);
  assertEquals(clusterState.getRoutingNodes().getOutgoingRecoveries("node1"),1);
}
