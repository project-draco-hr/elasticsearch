{
  MoreLikeThisRequest mltRequest=moreLikeThisRequest(request.param("index")).setType(request.param("type")).setId(request.param("id"));
  mltRequest.setRouting(request.param("routing"));
  mltRequest.setListenerThreaded(false);
  try {
    mltRequest.setFields(request.paramAsStringArray("mlt_fields",null));
    mltRequest.setPercentTermsToMatch(request.paramAsFloat("percent_terms_to_match",-1));
    mltRequest.setMinTermFreq(request.paramAsInt("min_term_freq",-1));
    mltRequest.setMaxQueryTerms(request.paramAsInt("max_query_terms",-1));
    mltRequest.setStopWords(request.paramAsStringArray("stop_words",null));
    mltRequest.setMinDocFreq(request.paramAsInt("min_doc_freq",-1));
    mltRequest.setMaxDocFreq(request.paramAsInt("max_doc_freq",-1));
    mltRequest.setMinWordLen(request.paramAsInt("min_word_len",-1));
    mltRequest.setMaxWordLen(request.paramAsInt("max_word_len",-1));
    mltRequest.setBoostTerms(request.paramAsFloat("boost_terms",-1));
    mltRequest.setSearchType(SearchType.fromString(request.param("search_type")));
    mltRequest.setSearchIndices(request.paramAsStringArray("search_indices",null));
    mltRequest.setSearchTypes(request.paramAsStringArray("search_types",null));
    mltRequest.setSearchQueryHint(request.param("search_query_hint"));
    mltRequest.setSearchSize(request.paramAsInt("search_size",mltRequest.getSearchSize()));
    mltRequest.setSearchFrom(request.paramAsInt("search_from",mltRequest.getSearchFrom()));
    String searchScroll=request.param("search_scroll");
    if (searchScroll != null) {
      mltRequest.setSearchScroll(new Scroll(parseTimeValue(searchScroll,null)));
    }
    if (request.hasContent()) {
      mltRequest.setSearchSource(request.content(),request.contentUnsafe());
    }
 else {
      String searchSource=request.param("search_source");
      if (searchSource != null) {
        mltRequest.setSearchSource(searchSource);
      }
    }
  }
 catch (  Exception e) {
    try {
      XContentBuilder builder=restContentBuilder(request);
      channel.sendResponse(new XContentRestResponse(request,BAD_REQUEST,builder.startObject().field("error",e.getMessage()).endObject()));
    }
 catch (    IOException e1) {
      logger.error("Failed to send failure response",e1);
    }
    return;
  }
  client.moreLikeThis(mltRequest,new ActionListener<SearchResponse>(){
    @Override public void onResponse(    SearchResponse response){
      try {
        XContentBuilder builder=restContentBuilder(request);
        builder.startObject();
        response.toXContent(builder,request);
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
