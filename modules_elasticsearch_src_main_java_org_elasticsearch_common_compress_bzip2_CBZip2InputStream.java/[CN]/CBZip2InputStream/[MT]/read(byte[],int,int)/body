{
  if (offs < 0) {
    throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
  }
  if (len < 0) {
    throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
  }
  if (offs + len > dest.length) {
    throw new IndexOutOfBoundsException("offs(" + offs + ") + len("+ len+ ") > dest.length("+ dest.length+ ").");
  }
  if (this.in == null) {
    throw new IOException("stream closed");
  }
  final int hi=offs + len;
  int destOffs=offs;
  for (int b; (destOffs < hi) && ((b=read0()) >= 0); ) {
    dest[destOffs++]=(byte)b;
  }
  return (destOffs == offs) ? -1 : (destOffs - offs);
}
