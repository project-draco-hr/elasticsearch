{
  for (int i=minLen, pp=0; i <= maxLen; i++) {
    for (int j=0; j < alphaSize; j++) {
      if (length[j] == i) {
        perm[pp++]=j;
      }
    }
  }
  for (int i=MAX_CODE_LEN; --i > 0; ) {
    base[i]=0;
    limit[i]=0;
  }
  for (int i=0; i < alphaSize; i++) {
    base[length[i] + 1]++;
  }
  for (int i=1, b=base[0]; i < MAX_CODE_LEN; i++) {
    b+=base[i];
    base[i]=b;
  }
  for (int i=minLen, vec=0, b=base[i]; i <= maxLen; i++) {
    final int nb=base[i + 1];
    vec+=nb - b;
    b=nb;
    limit[i]=vec - 1;
    vec<<=1;
  }
  for (int i=minLen + 1; i <= maxLen; i++) {
    base[i]=((limit[i - 1] + 1) << 1) - base[i];
  }
}
