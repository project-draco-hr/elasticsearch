{
  int numParentDocs=scaledRandomIntBetween(0,32);
  int maxChildDocsPerParent=scaledRandomIntBetween(8,16);
  Directory dir=newDirectory();
  RandomIndexWriter writer=new RandomIndexWriter(random(),dir);
  for (int i=0; i < numParentDocs; i++) {
    int numChildDocs=scaledRandomIntBetween(0,maxChildDocsPerParent);
    List<Document> docs=new ArrayList<>(numChildDocs + 1);
    for (int j=0; j < numChildDocs; j++) {
      Document childDoc=new Document();
      childDoc.add(new StringField("type","child",Field.Store.NO));
      docs.add(childDoc);
    }
    Document parenDoc=new Document();
    parenDoc.add(new StringField("type","parent",Field.Store.NO));
    parenDoc.add(new IntField("num_child_docs",numChildDocs,Field.Store.YES));
    docs.add(parenDoc);
    writer.addDocuments(docs);
  }
  IndexReader reader=writer.getReader();
  writer.close();
  IndexSearcher searcher=new IndexSearcher(reader);
  FetchSubPhase.HitContext hitContext=new FetchSubPhase.HitContext();
  BitDocIdSetFilter parentFilter=new BitDocIdSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term("type","parent"))));
  Filter childFilter=new QueryWrapperFilter(new TermQuery(new Term("type","child")));
  int checkedParents=0;
  for (  LeafReaderContext leaf : reader.leaves()) {
    DocIdSetIterator parents=parentFilter.getDocIdSet(leaf).iterator();
    for (int parentDoc=parents.nextDoc(); parentDoc != DocIdSetIterator.NO_MORE_DOCS; parentDoc=parents.nextDoc()) {
      int expectedChildDocs=leaf.reader().document(parentDoc).getField("num_child_docs").numericValue().intValue();
      hitContext.reset(null,leaf,parentDoc,reader);
      NestedChildrenFilter nestedChildrenFilter=new NestedChildrenFilter(parentFilter,childFilter,hitContext);
      TotalHitCountCollector totalHitCountCollector=new TotalHitCountCollector();
      searcher.search(new ConstantScoreQuery(nestedChildrenFilter),totalHitCountCollector);
      assertThat(totalHitCountCollector.getTotalHits(),equalTo(expectedChildDocs));
      checkedParents++;
    }
  }
  assertThat(checkedParents,equalTo(numParentDocs));
  reader.close();
  dir.close();
}
