{
  super(index,indexSettings,name);
  boolean lowercase=settings.getAsBoolean("lowercase",true);
  String[] stopWords=settings.getAsArray("stopwords",null);
  if (stopWords != null) {
    this.stopWords=ImmutableSet.copyOf(Iterators.forArray(stopWords));
  }
 else {
    this.stopWords=ImmutableSet.copyOf((Iterable<? extends String>)StopAnalyzer.ENGLISH_STOP_WORDS_SET);
  }
  String sPattern=settings.get("pattern","\\W+");
  if (sPattern == null) {
    throw new ElasticSearchIllegalArgumentException("Analyzer [" + name + "] of type pattern must have a `pattern` set");
  }
  Pattern pattern=Regex.compile(sPattern,settings.get("flags"));
  analyzer=new PatternAnalyzer(Lucene.ANALYZER_VERSION,pattern,lowercase,this.stopWords);
}
