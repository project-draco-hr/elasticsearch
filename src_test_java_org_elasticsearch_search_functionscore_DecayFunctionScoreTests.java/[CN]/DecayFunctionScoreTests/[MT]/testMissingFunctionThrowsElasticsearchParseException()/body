{
  String doc="{\n" + "  \"text\": \"baseball bats\"\n" + "}\n";
  String query="{\n" + "    \"function_score\": {\n" + "      \"score_mode\": \"sum\",\n"+ "      \"boost_mode\": \"replace\",\n"+ "      \"functions\": [\n"+ "        {\n"+ "          \"filter\": {\n"+ "            \"term\": {\n"+ "              \"text\": \"baseball\"\n"+ "            }\n"+ "          }\n"+ "        }\n"+ "      ]\n"+ "    }\n"+ "}\n";
  client().prepareIndex("t","test").setSource(doc).get();
  refresh();
  ensureYellow("t");
  try {
    client().search(searchRequest().source(searchSource().query(query))).actionGet();
    fail("Should fail with SearchPhaseExecutionException");
  }
 catch (  SearchPhaseExecutionException failure) {
    assertTrue(failure.getMessage().contains("SearchParseException"));
    assertFalse(failure.getMessage().contains("NullPointerException"));
  }
  query="{\n" + "    \"function_score\": {\n" + "      \"score_mode\": \"sum\",\n"+ "      \"boost_mode\": \"replace\",\n"+ "      \"functions\": [\n"+ "        {\n"+ "          \"filter\": {\n"+ "            \"term\": {\n"+ "              \"text\": \"baseball\"\n"+ "            }\n"+ "          },\n"+ "          \"boost_factor\": 2\n"+ "        },\n"+ "        {\n"+ "          \"filter\": {\n"+ "            \"term\": {\n"+ "              \"text\": \"baseball\"\n"+ "            }\n"+ "          }\n"+ "        }\n"+ "      ]\n"+ "    }\n"+ "}";
  try {
    client().search(searchRequest().source(searchSource().query(query))).actionGet();
    fail("Should fail with SearchPhaseExecutionException");
  }
 catch (  SearchPhaseExecutionException failure) {
    assertTrue(failure.getMessage().contains("SearchParseException"));
    assertFalse(failure.getMessage().contains("NullPointerException"));
    assertTrue(failure.getMessage().contains("One entry in functions list is missing a function"));
  }
  try {
    client().prepareSearch("t").setQuery(QueryBuilders.functionScoreQuery(FilterBuilders.matchAllFilter(),null)).get();
  }
 catch (  ElasticsearchIllegalArgumentException failure) {
    assertTrue(failure.getMessage().contains("function must not be null"));
  }
  try {
    client().prepareSearch("t").setQuery(QueryBuilders.functionScoreQuery().add(FilterBuilders.matchAllFilter(),null)).get();
  }
 catch (  ElasticsearchIllegalArgumentException failure) {
    assertTrue(failure.getMessage().contains("function must not be null"));
  }
  try {
    client().prepareSearch("t").setQuery(QueryBuilders.functionScoreQuery().add(null)).get();
  }
 catch (  ElasticsearchIllegalArgumentException failure) {
    assertTrue(failure.getMessage().contains("function must not be null"));
  }
}
