{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field1").field("type","string").field("postings_format","direct").endObject().startObject("field2").field("type","string").field("postings_format","my_format1").endObject().endObject().endObject().endObject().string();
  Settings indexSettings=ImmutableSettings.settingsBuilder().put("index.codec.postings_format.my_format1.type","direct").put("index.codec.postings_format.my_format1.min_skip_count",16).put("index.codec.postings_format.my_format1.low_freq_cutoff",64).build();
  CodecService codecService=createCodecService(indexSettings);
  DocumentMapper documentMapper=codecService.mapperService().documentMapperParser().parse(mapping);
  assertThat(documentMapper.mappers().name("field1").mapper().postingFormatProvider(),instanceOf(PreBuiltPostingsFormatProvider.class));
  assertThat(documentMapper.mappers().name("field1").mapper().postingFormatProvider().get(),instanceOf(DirectPostingsFormat.class));
  assertThat(documentMapper.mappers().name("field2").mapper().postingFormatProvider(),instanceOf(DirectPostingsFormatProvider.class));
  DirectPostingsFormatProvider provider=(DirectPostingsFormatProvider)documentMapper.mappers().name("field2").mapper().postingFormatProvider();
  assertThat(provider.minSkipCount(),equalTo(16));
  assertThat(provider.lowFreqCutoff(),equalTo(64));
}
