{
  String cause=request.cause();
  if (cause.length() == 0) {
    cause="api";
  }
  final String indexName=indexNameExpressionResolver.resolveDateMathExpression(request.index());
  final CreateIndexClusterStateUpdateRequest updateRequest=new CreateIndexClusterStateUpdateRequest(request,cause,indexName,request.updateAllTypes()).ackTimeout(request.timeout()).masterNodeTimeout(request.masterNodeTimeout()).settings(request.settings()).mappings(request.mappings()).aliases(request.aliases()).customs(request.customs());
  createIndexService.createIndex(updateRequest,new ActionListener<ClusterStateUpdateResponse>(){
    @Override public void onResponse(    ClusterStateUpdateResponse response){
      listener.onResponse(new CreateIndexResponse(response.isAcknowledged()));
    }
    @Override public void onFailure(    Throwable t){
      if (t instanceof IndexAlreadyExistsException) {
        logger.trace("[{}] failed to create",t,request.index());
      }
 else {
        logger.debug("[{}] failed to create",t,request.index());
      }
      listener.onFailure(t);
    }
  }
);
}
