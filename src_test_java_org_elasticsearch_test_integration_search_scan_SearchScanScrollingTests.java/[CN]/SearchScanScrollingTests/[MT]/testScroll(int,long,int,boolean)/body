{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  client.admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",numberOfShards)).execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  Set<String> ids=Sets.newHashSet();
  Set<String> expectedIds=Sets.newHashSet();
  for (int i=0; i < numberOfDocs; i++) {
    String id=Integer.toString(i);
    expectedIds.add(id);
    String routing=null;
    if (unbalanced) {
      if (i < (numberOfDocs * 0.6)) {
        routing="0";
      }
 else       if (i < (numberOfDocs * 0.9)) {
        routing="1";
      }
 else {
        routing="2";
      }
    }
    client.prepareIndex("test","type1",id).setRouting(routing).setSource("field",i).execute().actionGet();
    if (i % 10 == 0) {
      client.admin().indices().prepareFlush().execute().actionGet();
    }
  }
  client.admin().indices().prepareRefresh().execute().actionGet();
  SearchResponse searchResponse=client.prepareSearch().setSearchType(SearchType.SCAN).setQuery(matchAllQuery()).setSize(size).setScroll(TimeValue.timeValueMinutes(2)).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(numberOfDocs));
  while (true) {
    searchResponse=client.prepareSearchScroll(searchResponse.getScrollId()).setScroll(TimeValue.timeValueMinutes(2)).execute().actionGet();
    assertThat(searchResponse.getHits().totalHits(),equalTo(numberOfDocs));
    assertThat(searchResponse.getFailedShards(),equalTo(0));
    for (    SearchHit hit : searchResponse.getHits()) {
      assertThat(hit.id() + "should not exists in the result set",ids.contains(hit.id()),equalTo(false));
      ids.add(hit.id());
    }
    if (searchResponse.getHits().hits().length == 0) {
      break;
    }
  }
  assertThat(expectedIds,equalTo(ids));
}
