{
  String type=null;
  BytesReference querySource=null;
  XContentParser parser=null;
  try {
    parser=XContentHelper.createParser(source);
    String currentFieldName=null;
    XContentParser.Token token=parser.nextToken();
    if (token != XContentParser.Token.START_OBJECT) {
      throw new ElasticSearchException("failed to parse query [" + id + "], not starting with OBJECT");
    }
    while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
      if (token == XContentParser.Token.FIELD_NAME) {
        currentFieldName=parser.currentName();
      }
 else       if (token == XContentParser.Token.START_OBJECT) {
        if ("query".equals(currentFieldName)) {
          if (type != null) {
            return parseQuery(type,null,parser);
          }
 else {
            XContentBuilder builder=XContentFactory.contentBuilder(parser.contentType());
            builder.copyCurrentStructure(parser);
            querySource=builder.bytes();
            builder.close();
          }
        }
 else {
          parser.skipChildren();
        }
      }
 else       if (token == XContentParser.Token.START_ARRAY) {
        parser.skipChildren();
      }
 else       if (token.isValue()) {
        if ("type".equals(currentFieldName)) {
          type=parser.text();
        }
      }
    }
    return parseQuery(type,querySource,null);
  }
 catch (  Exception e) {
    throw new PercolatorException(shardId().index(),"failed to parse query [" + id + "]",e);
  }
 finally {
    if (parser != null) {
      parser.close();
    }
  }
}
