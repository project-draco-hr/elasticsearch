{
  final int len=100000;
  final TDigestState dist=new TDigestState(sizeGuide);
  double[] data=new double[len];
  for (int i=0; i < len; ++i) {
    double x=gen.nextDouble();
    data[i]=x;
    dist.add(x);
  }
  dist.compress();
  Arrays.sort(data);
  double[] xValues=qValues.clone();
  for (int i=0; i < qValues.length; i++) {
    double ix=data.length * qValues[i] - 0.5;
    int index=(int)Math.floor(ix);
    double p=ix - index;
    xValues[i]=data[index] * (1 - p) + data[index + 1] * p;
  }
  assertThat("Summary is too large",(double)dist.centroidCount(),lessThan(sizeGuide * 10));
  int softErrors=0;
  for (int i=0; i < xValues.length; i++) {
    double x=xValues[i];
    double q=qValues[i];
    double estimate=dist.cdf(x);
    assertEquals(q,estimate,0.005);
    estimate=cdf(dist.quantile(q),data);
    if (Math.abs(q - estimate) > 0.005) {
      softErrors++;
    }
    assertEquals(q,estimate,0.012);
  }
  assertTrue(softErrors < 3);
}
