{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  client.admin().indices().prepareCreate("test").execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",1055).startArray("multi_num").value(13.0f).value(23.f).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareFlush().setRefresh(true).execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",1065).startArray("multi_num").value(15.0f).value(31.0f).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareRefresh().execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",1175).startArray("multi_num").value(17.0f).value(25.0f).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareRefresh().execute().actionGet();
  SearchResponse searchResponse=client.prepareSearch().setQuery(QueryBuilders.matchAllQuery()).addFacetHistogram("stats1","num",100).addFacetHistogram("stats2","multi_num",10).addFacetHistogram("stats3","num","multi_num",100).execute().actionGet();
  HistogramFacet facet=searchResponse.facets().facet(HistogramFacet.class,"stats1");
  assertThat(facet.name(),equalTo("stats1"));
  assertThat(facet.entries().size(),equalTo(2));
  assertThat(facet.entries().get(0).key(),equalTo(1000l));
  assertThat(facet.entries().get(0).count(),equalTo(2l));
  assertThat(facet.entries().get(0).total(),equalTo(2120d));
  assertThat(facet.entries().get(0).mean(),equalTo(1060d));
  assertThat(facet.entries().get(1).key(),equalTo(1100l));
  assertThat(facet.entries().get(1).count(),equalTo(1l));
  assertThat(facet.entries().get(1).total(),equalTo(1175d));
  assertThat(facet.entries().get(1).mean(),equalTo(1175d));
  facet=searchResponse.facets().facet(HistogramFacet.class,"stats2");
  assertThat(facet.name(),equalTo("stats2"));
  assertThat(facet.entries().size(),equalTo(3));
  assertThat(facet.entries().get(0).key(),equalTo(10l));
  assertThat(facet.entries().get(0).count(),equalTo(3l));
  assertThat(facet.entries().get(0).total(),equalTo(45d));
  assertThat(facet.entries().get(0).mean(),equalTo(15d));
  assertThat(facet.entries().get(1).key(),equalTo(20l));
  assertThat(facet.entries().get(1).count(),equalTo(2l));
  assertThat(facet.entries().get(1).total(),equalTo(48d));
  assertThat(facet.entries().get(1).mean(),equalTo(24d));
  assertThat(facet.entries().get(2).key(),equalTo(30l));
  assertThat(facet.entries().get(2).count(),equalTo(1l));
  assertThat(facet.entries().get(2).total(),equalTo(31d));
  assertThat(facet.entries().get(2).mean(),equalTo(31d));
  facet=searchResponse.facets().facet(HistogramFacet.class,"stats3");
  assertThat(facet.name(),equalTo("stats3"));
  assertThat(facet.entries().size(),equalTo(2));
  assertThat(facet.entries().get(0).key(),equalTo(1000l));
  assertThat(facet.entries().get(0).count(),equalTo(4l));
  assertThat(facet.entries().get(0).total(),equalTo(82d));
  assertThat(facet.entries().get(0).mean(),equalTo(20.5d));
  assertThat(facet.entries().get(1).key(),equalTo(1100l));
  assertThat(facet.entries().get(1).count(),equalTo(2l));
  assertThat(facet.entries().get(1).total(),equalTo(42d));
  assertThat(facet.entries().get(1).mean(),equalTo(21d));
}
