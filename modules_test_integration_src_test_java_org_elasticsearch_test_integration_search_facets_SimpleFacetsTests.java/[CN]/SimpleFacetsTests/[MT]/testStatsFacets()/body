{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Exception e) {
  }
  client.admin().indices().prepareCreate("test").execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",1).startArray("multi_num").value(1.0).value(2.0f).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareFlush().setRefresh(true).execute().actionGet();
  client.prepareIndex("test","type1").setSource(jsonBuilder().startObject().field("num",2).startArray("multi_num").value(3.0).value(4.0f).endArray().endObject()).execute().actionGet();
  client.admin().indices().prepareRefresh().execute().actionGet();
  SearchResponse searchResponse=client.prepareSearch().setQuery(matchAllQuery()).addFacet(statisticalFacet("stats1").field("num")).addFacet(statisticalFacet("stats2").field("multi_num")).addFacet(statisticalScriptFacet("stats3").script("doc['num'].value * 2")).execute().actionGet();
  if (searchResponse.failedShards() > 0) {
    logger.warn("Failed shards:");
    for (    ShardSearchFailure shardSearchFailure : searchResponse.shardFailures()) {
      logger.warn("-> {}",shardSearchFailure);
    }
  }
  assertThat(searchResponse.failedShards(),equalTo(0));
  StatisticalFacet facet=searchResponse.facets().facet(StatisticalFacet.class,"stats1");
  assertThat(facet.name(),equalTo(facet.name()));
  assertThat(facet.count(),equalTo(2l));
  assertThat(facet.total(),equalTo(3d));
  assertThat(facet.min(),equalTo(1d));
  assertThat(facet.max(),equalTo(2d));
  assertThat(facet.mean(),equalTo(1.5d));
  assertThat(facet.sumOfSquares(),equalTo(5d));
  facet=searchResponse.facets().facet(StatisticalFacet.class,"stats2");
  assertThat(facet.name(),equalTo(facet.name()));
  assertThat(facet.count(),equalTo(4l));
  assertThat(facet.total(),equalTo(10d));
  assertThat(facet.min(),equalTo(1d));
  assertThat(facet.max(),equalTo(4d));
  assertThat(facet.mean(),equalTo(2.5d));
  facet=searchResponse.facets().facet(StatisticalFacet.class,"stats3");
  assertThat(facet.name(),equalTo(facet.name()));
  assertThat(facet.count(),equalTo(2l));
  assertThat(facet.total(),equalTo(6d));
  assertThat(facet.min(),equalTo(2d));
  assertThat(facet.max(),equalTo(4d));
  assertThat(facet.mean(),equalTo(3d));
  assertThat(facet.sumOfSquares(),equalTo(20d));
}
