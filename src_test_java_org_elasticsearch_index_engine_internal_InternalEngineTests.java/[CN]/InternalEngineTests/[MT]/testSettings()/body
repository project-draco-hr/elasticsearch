{
  final InternalEngineHolder holder=(InternalEngineHolder)engine;
  IndexDynamicSettingsModule settings=new IndexDynamicSettingsModule();
  assertTrue(settings.containsSetting(InternalEngineHolder.INDEX_FAIL_ON_CORRUPTION));
  assertTrue(settings.containsSetting(InternalEngineHolder.INDEX_COMPOUND_ON_FLUSH));
  assertTrue(settings.containsSetting(InternalEngineHolder.INDEX_GC_DELETES));
  assertTrue(settings.containsSetting(InternalEngineHolder.INDEX_CODEC));
  assertTrue(settings.containsSetting(InternalEngineHolder.INDEX_FAIL_ON_MERGE_FAILURE));
  assertTrue(settings.containsSetting(InternalEngineHolder.INDEX_INDEX_CONCURRENCY));
  final int iters=between(1,20);
  for (int i=0; i < iters; i++) {
    boolean compoundOnFlush=randomBoolean();
    boolean failOnCorruption=randomBoolean();
    boolean failOnMerge=randomBoolean();
    long gcDeletes=Math.max(0,randomLong());
    int indexConcurrency=randomIntBetween(1,20);
    String codecName=randomFrom(holder.codecService.availableCodecs());
    Settings build=ImmutableSettings.builder().put(InternalEngineHolder.INDEX_FAIL_ON_CORRUPTION,failOnCorruption).put(InternalEngineHolder.INDEX_COMPOUND_ON_FLUSH,compoundOnFlush).put(InternalEngineHolder.INDEX_GC_DELETES,gcDeletes).put(InternalEngineHolder.INDEX_CODEC,codecName).put(InternalEngineHolder.INDEX_FAIL_ON_MERGE_FAILURE,failOnMerge).put(InternalEngineHolder.INDEX_INDEX_CONCURRENCY,indexConcurrency).build();
    engineSettingsService.refreshSettings(build);
    LiveIndexWriterConfig currentIndexWriterConfig=holder.engineSafe().getCurrentIndexWriterConfig();
    assertEquals(holder.compoundOnFlush,compoundOnFlush);
    assertEquals(holder.engineSafe().isCompoundOnFlush(),compoundOnFlush);
    assertEquals(currentIndexWriterConfig.getUseCompoundFile(),compoundOnFlush);
    assertEquals(holder.gcDeletesInMillis,gcDeletes);
    assertEquals(holder.engineSafe().getGcDeletesInMillis(),gcDeletes);
    assertEquals(holder.codecName,codecName);
    assertEquals(holder.engineSafe().getCodecName(),codecName);
    assertEquals(currentIndexWriterConfig.getCodec(),holder.codecService.codec(codecName));
    assertEquals(holder.failEngineOnCorruption,failOnCorruption);
    assertEquals(holder.engineSafe().isFailEngineOnCorruption(),failOnCorruption);
    assertEquals(holder.failOnMergeFailure,failOnMerge);
    assertEquals(holder.indexConcurrency,indexConcurrency);
    assertEquals(holder.engineSafe().getIndexConcurrency(),indexConcurrency);
    assertEquals(currentIndexWriterConfig.getMaxThreadStates(),indexConcurrency);
  }
}
