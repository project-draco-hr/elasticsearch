{
  engine.close();
  Settings settings=ImmutableSettings.builder().put(InternalEngineHolder.INDEX_GC_DELETES,"0ms").build();
  Engine engine=new InternalEngineHolder(shardId,settings,threadPool,engineSettingsService,new ShardIndexingService(shardId,settings,new ShardSlowLogIndexingService(shardId,EMPTY_SETTINGS,engineSettingsService)),null,store,createSnapshotDeletionPolicy(),createTranslog(),createMergePolicy(),createMergeScheduler(engineSettingsService),new AnalysisService(shardId.index(),engineSettingsService.getSettings()),new SimilarityService(shardId.index()),new CodecService(shardId.index()));
  engine.start();
  engine.enableGcDeletes(false);
  Document document=testDocument();
  document.add(new TextField("value","test1",Field.Store.YES));
  ParsedDocument doc=testParsedDocument("1","1","test",null,-1,-1,document,Lucene.STANDARD_ANALYZER,B_2,false);
  engine.index(new Engine.Index(null,newUid("1"),doc,1,VersionType.EXTERNAL,Engine.Operation.Origin.PRIMARY,System.nanoTime(),false));
  engine.delete(new Engine.Delete("test","1",newUid("1"),10,VersionType.EXTERNAL,Engine.Operation.Origin.PRIMARY,System.nanoTime(),false));
  Engine.GetResult getResult=engine.get(new Engine.Get(true,newUid("1")));
  assertThat(getResult.exists(),equalTo(false));
  Thread.sleep(1000);
  if (randomBoolean()) {
    engine.refresh(new Engine.Refresh("test"));
  }
  engine.delete(new Engine.Delete("test","2",newUid("2"),10,VersionType.EXTERNAL,Engine.Operation.Origin.PRIMARY,System.nanoTime(),false));
  getResult=engine.get(new Engine.Get(true,newUid("2")));
  assertThat(getResult.exists(),equalTo(false));
  try {
    engine.index(new Engine.Index(null,newUid("1"),doc,2,VersionType.EXTERNAL,Engine.Operation.Origin.PRIMARY,System.nanoTime()));
    fail("did not hit expected exception");
  }
 catch (  VersionConflictEngineException vcee) {
  }
  getResult=engine.get(new Engine.Get(true,newUid("1")));
  assertThat(getResult.exists(),equalTo(false));
  try {
    engine.index(new Engine.Index(null,newUid("2"),doc,2,VersionType.EXTERNAL,Engine.Operation.Origin.PRIMARY,System.nanoTime()));
    fail("did not hit expected exception");
  }
 catch (  VersionConflictEngineException vcee) {
  }
  getResult=engine.get(new Engine.Get(true,newUid("2")));
  assertThat(getResult.exists(),equalTo(false));
  engine.close();
}
