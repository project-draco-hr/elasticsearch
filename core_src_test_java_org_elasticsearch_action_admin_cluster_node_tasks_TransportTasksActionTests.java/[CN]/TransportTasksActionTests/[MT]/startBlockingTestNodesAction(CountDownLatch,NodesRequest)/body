{
  CountDownLatch actionLatch=new CountDownLatch(nodesCount);
  TestNodesAction[] actions=new TestNodesAction[nodesCount];
  for (int i=0; i < testNodes.length; i++) {
    final int node=i;
    actions[i]=new TestNodesAction(Settings.EMPTY,"testAction",clusterName,threadPool,testNodes[i].clusterService,testNodes[i].transportService){
      @Override protected NodeResponse nodeOperation(      NodeRequest request){
        logger.info("Action on node " + node);
        actionLatch.countDown();
        try {
          checkLatch.await();
        }
 catch (        InterruptedException ex) {
          Thread.currentThread().interrupt();
        }
        logger.info("Action on node " + node + " finished");
        return new NodeResponse(testNodes[node].discoveryNode);
      }
    }
;
  }
  for (  TestNode node : testNodes) {
    assertEquals(0,node.transportService.getTaskManager().getTasks().size());
  }
  ActionFuture<NodesResponse> future=actions[0].execute(request);
  logger.info("Awaiting for all actions to start");
  actionLatch.await();
  logger.info("Done waiting for all actions to start");
  return future;
}
