{
  Map<String,ReducerFactory> reducerFactoriesMap=new HashMap<>();
  for (  ReducerFactory factory : reducerFactories) {
    reducerFactoriesMap.put(factory.getName(),factory);
  }
  Set<String> aggFactoryNames=new HashSet<>();
  for (  AggregatorFactory aggFactory : aggFactories) {
    aggFactoryNames.add(aggFactory.name);
  }
  List<ReducerFactory> orderedReducers=new LinkedList<>();
  List<ReducerFactory> unmarkedFactories=new ArrayList<ReducerFactory>(reducerFactories);
  Set<ReducerFactory> temporarilyMarked=new HashSet<ReducerFactory>();
  while (!unmarkedFactories.isEmpty()) {
    ReducerFactory factory=unmarkedFactories.get(0);
    resolveReducerOrder(aggFactoryNames,reducerFactoriesMap,orderedReducers,unmarkedFactories,temporarilyMarked,factory);
  }
  List<String> orderedReducerNames=new ArrayList<>();
  for (  ReducerFactory reducerFactory : orderedReducers) {
    orderedReducerNames.add(reducerFactory.getName());
  }
  return orderedReducers;
}
