{
  if (temporarilyMarked.contains(factory)) {
    throw new ElasticsearchIllegalStateException("Cyclical dependancy found with reducer [" + factory.getName() + "]");
  }
 else   if (unmarkedFactories.contains(factory)) {
    temporarilyMarked.add(factory);
    String[] bucketsPaths=factory.getBucketsPaths();
    for (    String bucketsPath : bucketsPaths) {
      int aggSepIndex=bucketsPath.indexOf('>');
      String firstAggName=aggSepIndex == -1 ? bucketsPath : bucketsPath.substring(0,aggSepIndex);
      if (bucketsPath.equals("_count") || bucketsPath.equals("_key") || aggFactoryNames.contains(firstAggName)) {
        continue;
      }
 else {
        ReducerFactory matchingFactory=reducerFactoriesMap.get(firstAggName);
        if (matchingFactory != null) {
          resolveReducerOrder(aggFactoryNames,reducerFactoriesMap,orderedReducers,unmarkedFactories,temporarilyMarked,matchingFactory);
        }
 else {
          throw new ElasticsearchIllegalStateException("No aggregation found for path [" + bucketsPath + "]");
        }
      }
    }
    unmarkedFactories.remove(factory);
    temporarilyMarked.remove(factory);
    orderedReducers.add(factory);
  }
}
