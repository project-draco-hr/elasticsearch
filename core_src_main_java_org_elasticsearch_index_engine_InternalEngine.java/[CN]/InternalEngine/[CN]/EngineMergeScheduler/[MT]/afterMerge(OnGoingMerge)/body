{
  int maxNumMerges=mergeScheduler.getMaxMergeCount();
  if (numMergesInFlight.decrementAndGet() < maxNumMerges) {
    if (isThrottling.getAndSet(false)) {
      logger.info("stop throttling indexing: numMergesInFlight={}, maxNumMerges={}",numMergesInFlight,maxNumMerges);
      deactivateThrottling();
    }
  }
  if (indexWriter.hasPendingMerges() == false && System.nanoTime() - lastWriteNanos >= engineConfig.getFlushMergesAfter().nanos()) {
    engineConfig.getThreadPool().executor(ThreadPool.Names.FLUSH).execute(new AbstractRunnable(){
      @Override public void onFailure(      Exception e){
        if (isClosed.get() == false) {
          logger.warn("failed to flush after merge has finished");
        }
      }
      @Override protected void doRun() throws Exception {
        if (tryRenewSyncCommit() == false) {
          flush();
        }
      }
    }
);
  }
}
