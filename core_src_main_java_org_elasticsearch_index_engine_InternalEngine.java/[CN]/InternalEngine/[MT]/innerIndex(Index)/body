{
  try (Releasable ignored=acquireLock(index.uid())){
    lastWriteNanos=index.startTime();
    final long currentVersion;
    final boolean deleted;
    VersionValue versionValue=versionMap.getUnderLock(index.uid().bytes());
    if (versionValue == null) {
      currentVersion=loadCurrentVersionFromIndex(index.uid());
      deleted=currentVersion == Versions.NOT_FOUND;
    }
 else {
      deleted=versionValue.delete();
      if (engineConfig.isEnableGcDeletes() && versionValue.delete() && (engineConfig.getThreadPool().estimatedTimeInMillis() - versionValue.time()) > getGcDeletesInMillis()) {
        currentVersion=Versions.NOT_FOUND;
      }
 else {
        currentVersion=versionValue.version();
      }
    }
    long expectedVersion=index.version();
    if (isVersionConflictForWrites(index,currentVersion,deleted,expectedVersion)) {
      if (!index.origin().isRecovery()) {
        throw new VersionConflictEngineException(shardId,index.type(),index.id(),index.versionType().explainConflictForWrites(currentVersion,expectedVersion,deleted));
      }
      return false;
    }
    long updatedVersion=index.versionType().updateVersion(currentVersion,expectedVersion);
    final boolean created;
    index.updateVersion(updatedVersion);
    if (currentVersion == Versions.NOT_FOUND) {
      created=true;
      index(index,indexWriter);
    }
 else {
      created=update(index,versionValue,indexWriter);
    }
    if (index.origin() != Operation.Origin.LOCAL_TRANSLOG_RECOVERY) {
      final Translog.Location translogLocation=translog.add(new Translog.Index(index));
      index.setTranslogLocation(translogLocation);
      versionMap.putUnderLock(index.uid().bytes(),new VersionValue(updatedVersion,index.getTranslogLocation()));
    }
 else {
      versionMap.putUnderLock(index.uid().bytes(),new VersionValue(updatedVersion,null));
    }
    return created;
  }
 }
