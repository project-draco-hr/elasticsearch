{
  final boolean created;
  try (ReleasableLock lock=readLock.acquire()){
    ensureOpen();
    if (index.origin() == Operation.Origin.RECOVERY) {
      created=innerIndex(index);
    }
 else {
      try (Releasable r=throttle.acquireThrottle()){
        created=innerIndex(index);
      }
     }
  }
 catch (  OutOfMemoryError|IllegalStateException|IOException t) {
    maybeFailEngine("index",t);
    throw new IndexFailedEngineException(shardId,index,t);
  }
  checkVersionMapRefresh();
  return created;
}
