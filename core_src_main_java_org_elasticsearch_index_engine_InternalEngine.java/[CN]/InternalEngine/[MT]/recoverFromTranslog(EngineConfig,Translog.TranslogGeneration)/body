{
  int opsRecovered=0;
  final TranslogRecoveryPerformer handler=engineConfig.getTranslogRecoveryPerformer();
  try {
    Translog.Snapshot snapshot=translog.newSnapshot();
    opsRecovered=handler.recoveryFromSnapshot(this,snapshot);
  }
 catch (  Throwable e) {
    throw new EngineException(shardId,"failed to recover from translog",e);
  }
  if (opsRecovered > 0) {
    logger.trace("flushing post recovery from translog. ops recovered [{}]. committed translog id [{}]. current id [{}]",opsRecovered,translogGeneration == null ? null : translogGeneration.translogFileGeneration,translog.currentFileGeneration());
    flush(true,true);
  }
 else   if (translog.isCurrent(translogGeneration) == false) {
    commitIndexWriter(indexWriter,translog,lastCommittedSegmentInfos.getUserData().get(Engine.SYNC_COMMIT_ID));
  }
}
