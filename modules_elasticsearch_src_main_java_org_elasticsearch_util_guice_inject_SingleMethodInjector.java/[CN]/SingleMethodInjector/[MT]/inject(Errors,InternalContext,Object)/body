{
  Object[] parameters;
  try {
    parameters=SingleParameterInjector.getAll(errors,context,parameterInjectors);
  }
 catch (  ErrorsException e) {
    errors.merge(e.getErrors());
    return;
  }
  try {
    methodInvoker.invoke(o,parameters);
  }
 catch (  IllegalAccessException e) {
    throw new AssertionError(e);
  }
catch (  InvocationTargetException userException) {
    Throwable cause=userException.getCause() != null ? userException.getCause() : userException;
    errors.withSource(injectionPoint).errorInjectingMethod(cause);
  }
}
