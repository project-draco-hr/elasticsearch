{
  final int iters=scaledRandomIntBetween(5,25);
  for (int j=0; j < iters; j++) {
    String[] fields=new String[1 + random().nextInt(10)];
    for (int i=0; i < fields.length; i++) {
      fields[i]=TestUtil.randomRealisticUnicodeString(random(),1,10);
    }
    String term=TestUtil.randomRealisticUnicodeString(random(),1,10);
    Term[] terms=toTerms(fields,term);
    boolean disableCoord=random().nextBoolean();
    boolean useBoolean=random().nextBoolean();
    float tieBreaker=random().nextFloat();
    BlendedTermQuery query=useBoolean ? BlendedTermQuery.booleanBlendedQuery(terms,disableCoord) : BlendedTermQuery.dismaxBlendedQuery(terms,tieBreaker);
    QueryUtils.check(query);
    terms=toTerms(fields,term);
    BlendedTermQuery query2=useBoolean ? BlendedTermQuery.booleanBlendedQuery(terms,disableCoord) : BlendedTermQuery.dismaxBlendedQuery(terms,tieBreaker);
    assertEquals(query,query2);
  }
}
