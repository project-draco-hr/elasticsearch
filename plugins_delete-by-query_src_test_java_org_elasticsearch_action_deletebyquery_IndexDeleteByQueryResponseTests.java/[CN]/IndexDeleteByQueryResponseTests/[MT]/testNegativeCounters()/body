{
  assumeTrue("assertions must be enable for this test to pass",assertionsEnabled());
  try {
    new IndexDeleteByQueryResponse("index",-1L,0L,0L,0L);
    fail("should have thrown an assertion error concerning the negative counter");
  }
 catch (  AssertionError e) {
    assertThat("message contains error about a negative counter: " + e.getMessage(),e.getMessage().contains("counter 'found' cannot be negative"),equalTo(true));
  }
  try {
    new IndexDeleteByQueryResponse("index",0L,-1L,0L,0L);
    fail("should have thrown an assertion error concerning the negative counter");
  }
 catch (  AssertionError e) {
    assertThat("message contains error about a negative counter: " + e.getMessage(),e.getMessage().contains("counter 'deleted' cannot be negative"),equalTo(true));
  }
  try {
    new IndexDeleteByQueryResponse("index",0L,0L,-1L,0L);
    fail("should have thrown an assertion error concerning the negative counter");
  }
 catch (  AssertionError e) {
    assertThat("message contains error about a negative counter: " + e.getMessage(),e.getMessage().contains("counter 'missing' cannot be negative"),equalTo(true));
  }
  try {
    new IndexDeleteByQueryResponse("index",0L,0L,0L,-1L);
    fail("should have thrown an assertion error concerning the negative counter");
  }
 catch (  AssertionError e) {
    assertThat("message contains error about a negative counter: " + e.getMessage(),e.getMessage().contains("counter 'failed' cannot be negative"),equalTo(true));
  }
}
