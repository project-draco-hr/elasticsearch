{
  try {
    IndexDeleteByQueryResponse response=new IndexDeleteByQueryResponse();
    response.incrementFound(-10L);
    fail("should have thrown an assertion error concerning the negative counter");
  }
 catch (  AssertionError e) {
    assertThat("message contains error about a negative counter: " + e.getMessage(),e.getMessage().contains("counter 'found' cannot be negative"),equalTo(true));
  }
  try {
    IndexDeleteByQueryResponse response=new IndexDeleteByQueryResponse();
    response.incrementDeleted(-10L);
    fail("should have thrown an assertion error concerning the negative counter");
  }
 catch (  AssertionError e) {
    assertThat("message contains error about a negative counter: " + e.getMessage(),e.getMessage().contains("counter 'deleted' cannot be negative"),equalTo(true));
  }
  try {
    IndexDeleteByQueryResponse response=new IndexDeleteByQueryResponse();
    response.incrementMissing(-10L);
    fail("should have thrown an assertion error concerning the negative counter");
  }
 catch (  AssertionError e) {
    assertThat("message contains error about a negative counter: " + e.getMessage(),e.getMessage().contains("counter 'missing' cannot be negative"),equalTo(true));
  }
  try {
    IndexDeleteByQueryResponse response=new IndexDeleteByQueryResponse();
    response.incrementFailed(-1L);
    fail("should have thrown an assertion error concerning the negative counter");
  }
 catch (  AssertionError e) {
    assertThat("message contains error about a negative counter: " + e.getMessage(),e.getMessage().contains("counter 'failed' cannot be negative"),equalTo(true));
  }
}
