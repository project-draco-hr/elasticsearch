{
  final double oldFloorSegmentMB=mergePolicy.getFloorSegmentMB();
  final ByteSizeValue floorSegment=settings.getAsBytesSize(INDEX_MERGE_POLICY_FLOOR_SEGMENT,null);
  if (floorSegment != null && floorSegment.mbFrac() != oldFloorSegmentMB) {
    logger.info("updating [floor_segment] from [{}mb] to [{}]",oldFloorSegmentMB,floorSegment);
    mergePolicy.setFloorSegmentMB(floorSegment.mbFrac());
  }
  final double oldSegmentsPerTier=mergePolicy.getSegmentsPerTier();
  final double segmentsPerTier=settings.getAsDouble(INDEX_MERGE_POLICY_SEGMENTS_PER_TIER,oldSegmentsPerTier);
  if (segmentsPerTier != oldSegmentsPerTier) {
    logger.info("updating [segments_per_tier] from [{}] to [{}]",oldSegmentsPerTier,segmentsPerTier);
    mergePolicy.setSegmentsPerTier(segmentsPerTier);
  }
  final int oldMaxMergeAtOnce=mergePolicy.getMaxMergeAtOnce();
  int maxMergeAtOnce=settings.getAsInt(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE,oldMaxMergeAtOnce);
  if (maxMergeAtOnce != oldMaxMergeAtOnce) {
    logger.info("updating [max_merge_at_once] from [{}] to [{}]",oldMaxMergeAtOnce,maxMergeAtOnce);
    maxMergeAtOnce=adjustMaxMergeAtOnceIfNeeded(maxMergeAtOnce,segmentsPerTier);
    mergePolicy.setMaxMergeAtOnce(maxMergeAtOnce);
  }
  final int oldMaxMergeAtOnceExplicit=mergePolicy.getMaxMergeAtOnceExplicit();
  final int maxMergeAtOnceExplicit=settings.getAsInt(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_EXPLICIT,oldMaxMergeAtOnceExplicit);
  if (maxMergeAtOnceExplicit != oldMaxMergeAtOnceExplicit) {
    logger.info("updating [max_merge_at_once_explicit] from [{}] to [{}]",oldMaxMergeAtOnceExplicit,maxMergeAtOnceExplicit);
    mergePolicy.setMaxMergeAtOnceExplicit(maxMergeAtOnceExplicit);
  }
  final double oldMaxMergedSegmentMB=mergePolicy.getMaxMergedSegmentMB();
  final ByteSizeValue maxMergedSegment=settings.getAsBytesSize(INDEX_MERGE_POLICY_MAX_MERGED_SEGMENT,null);
  if (maxMergedSegment != null && maxMergedSegment.mbFrac() != oldMaxMergedSegmentMB) {
    logger.info("updating [max_merged_segment] from [{}mb] to [{}]",oldMaxMergedSegmentMB,maxMergedSegment);
    mergePolicy.setMaxMergedSegmentMB(maxMergedSegment.mbFrac());
  }
  final double oldReclaimDeletesWeight=mergePolicy.getReclaimDeletesWeight();
  final double reclaimDeletesWeight=settings.getAsDouble(INDEX_MERGE_POLICY_RECLAIM_DELETES_WEIGHT,oldReclaimDeletesWeight);
  if (reclaimDeletesWeight != oldReclaimDeletesWeight) {
    logger.info("updating [reclaim_deletes_weight] from [{}] to [{}]",oldReclaimDeletesWeight,reclaimDeletesWeight);
    mergePolicy.setReclaimDeletesWeight(reclaimDeletesWeight);
  }
}
