{
  try {
    SecurityManager sm=System.getSecurityManager();
    if (sm != null) {
      sm.checkPermission(new SpecialPermission());
    }
    String fake=MessageDigests.toHexString(MessageDigests.sha1().digest(scriptSource.getBytes(StandardCharsets.UTF_8)));
    return AccessController.doPrivileged(new PrivilegedAction<Object>(){
      @Override public Class<?> run(){
        GroovyCodeSource gcs=new GroovyCodeSource(scriptSource,fake,BootstrapInfo.UNTRUSTED_CODEBASE);
        gcs.setCachable(false);
        return loader.parseClass(gcs);
      }
    }
);
  }
 catch (  Throwable e) {
    if (logger.isTraceEnabled()) {
      logger.trace("exception compiling Groovy script:",e);
    }
    throw new GeneralScriptException("failed to compile groovy script",e);
  }
}
