{
  run(addMapping(prepareCreate("test"),"type1",new Object[]{"nested1","type","nested"}));
  ensureGreen();
  SearchResponse searchResponse=client().prepareSearch("test").setQuery(termQuery("_all","n_value1_1")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(0l));
  searchResponse=client().prepareSearch("test").setQuery(termQuery("nested1.n_field1","n_value1_1")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(0l));
  client().prepareIndex("test","type1","1").setSource(jsonBuilder().startObject().field("field1","value1").startArray("nested1").startObject().field("n_field1","n_value1_1").field("n_field2","n_value2_1").endObject().startObject().field("n_field1","n_value1_2").field("n_field2","n_value2_2").endObject().endArray().endObject()).execute().actionGet();
  waitForRelocation(ClusterHealthStatus.GREEN);
  flush();
  GetResponse getResponse=run(client().prepareGet("test","type1","1"));
  assertThat(getResponse.isExists(),equalTo(true));
  assertThat(getResponse.getSourceAsBytes(),notNullValue());
  IndicesStatusResponse statusResponse=run(admin().indices().prepareStatus());
  assertThat(statusResponse.getIndex("test").getDocs().getNumDocs(),equalTo(3l));
  searchResponse=client().prepareSearch("test").setQuery(termQuery("_all","n_value1_1")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  searchResponse=client().prepareSearch("test").setQuery(termQuery("nested1.n_field1","n_value1_1")).execute().actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(0l));
  searchResponse=run(client().prepareSearch("test").setQuery(matchAllQuery()));
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  searchResponse=run(client().prepareSearch("test").setQuery(termQuery("nested1.n_field1","n_value1_1")));
  assertThat(searchResponse.getHits().totalHits(),equalTo(0l));
  searchResponse=run(client().prepareSearch("test").setQuery(nestedQuery("nested1",termQuery("nested1.n_field1","n_value1_1"))));
  assertThat(Arrays.toString(searchResponse.getShardFailures()),searchResponse.getFailedShards(),equalTo(0));
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  searchResponse=run(client().prepareSearch("test").setQuery(nestedQuery("nested1",termQuery("nested1.n_field1","n_value1_1"))).setSearchType(SearchType.DFS_QUERY_THEN_FETCH));
  assertThat(Arrays.toString(searchResponse.getShardFailures()),searchResponse.getFailedShards(),equalTo(0));
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  client().prepareIndex("test","type1","2").setSource(jsonBuilder().startObject().field("field1","value1").startArray("nested1").startObject().field("n_field1","n_value1_1").field("n_field2","n_value2_2").endObject().startObject().field("n_field1","n_value1_2").field("n_field2","n_value2_1").endObject().endArray().endObject()).execute().actionGet();
  waitForRelocation(ClusterHealthStatus.GREEN);
  flush();
  statusResponse=run(client().admin().indices().prepareStatus());
  assertThat(statusResponse.getIndex("test").getDocs().getNumDocs(),equalTo(6l));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",boolQuery().must(termQuery("nested1.n_field1","n_value1_1")).must(termQuery("nested1.n_field2","n_value2_1")))).execute().actionGet();
  assertThat(Arrays.toString(searchResponse.getShardFailures()),searchResponse.getFailedShards(),equalTo(0));
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  searchResponse=client().prepareSearch("test").setQuery(filteredQuery(matchAllQuery(),nestedFilter("nested1",boolQuery().must(termQuery("nested1.n_field1","n_value1_1")).must(termQuery("nested1.n_field2","n_value2_1"))))).execute().actionGet();
  assertThat(Arrays.toString(searchResponse.getShardFailures()),searchResponse.getFailedShards(),equalTo(0));
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("type1.nested1",boolQuery().must(termQuery("nested1.n_field1","n_value1_1")).must(termQuery("nested1.n_field2","n_value2_1")))).execute().actionGet();
  assertThat(Arrays.toString(searchResponse.getShardFailures()),searchResponse.getFailedShards(),equalTo(0));
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
  DeleteResponse deleteResponse=client().prepareDelete("test","type1","2").execute().actionGet();
  assertThat(deleteResponse.isNotFound(),equalTo(false));
  flush();
  statusResponse=client().admin().indices().prepareStatus().execute().actionGet();
  assertThat(statusResponse.getIndex("test").getDocs().getNumDocs(),equalTo(3l));
  searchResponse=client().prepareSearch("test").setQuery(nestedQuery("nested1",termQuery("nested1.n_field1","n_value1_1"))).execute().actionGet();
  assertThat(Arrays.toString(searchResponse.getShardFailures()),searchResponse.getFailedShards(),equalTo(0));
  assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
}
