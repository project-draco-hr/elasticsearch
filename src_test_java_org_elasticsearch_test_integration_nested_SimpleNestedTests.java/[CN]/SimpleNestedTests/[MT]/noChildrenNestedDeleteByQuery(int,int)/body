{
  client.admin().indices().prepareDelete().execute().actionGet();
  client.admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards",1).put("index.referesh_interval",-1).build()).addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("nested1").field("type","nested").endObject().endObject().endObject().endObject()).execute().actionGet();
  client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  for (int i=0; i < total; i++) {
    client.prepareIndex("test","type1",Integer.toString(i)).setSource(jsonBuilder().startObject().field("field1","value1").endObject()).execute().actionGet();
  }
  client.admin().indices().prepareFlush().setRefresh(true).execute().actionGet();
  IndicesStatusResponse statusResponse=client.admin().indices().prepareStatus().execute().actionGet();
  assertThat(statusResponse.index("test").docs().numDocs(),equalTo(total));
  client.prepareDeleteByQuery("test").setQuery(QueryBuilders.idsQuery("type1").ids(Integer.toString(docToDelete))).execute().actionGet();
  client.admin().indices().prepareFlush().setRefresh(true).execute().actionGet();
  statusResponse=client.admin().indices().prepareStatus().execute().actionGet();
  assertThat(statusResponse.index("test").docs().numDocs(),equalTo((total) - 1));
  for (int i=0; i < total; i++) {
    assertThat(client.prepareGet("test","type1",Integer.toString(i)).execute().actionGet().exists(),equalTo(i != docToDelete));
  }
}
