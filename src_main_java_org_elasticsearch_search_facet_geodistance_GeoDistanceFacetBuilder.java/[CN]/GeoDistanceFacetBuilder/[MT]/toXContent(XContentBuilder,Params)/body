{
  if (fieldName == null) {
    throw new SearchSourceBuilderException("field must be set on geo_distance facet for facet [" + name + "]");
  }
  if (entries.isEmpty()) {
    throw new SearchSourceBuilderException("at least one range must be defined for geo_distance facet [" + name + "]");
  }
  builder.startObject(name);
  builder.startObject(GeoDistanceFacet.TYPE);
  if (geohash != null) {
    builder.field(fieldName,geohash);
  }
 else {
    builder.startArray(fieldName).value(lon).value(lat).endArray();
  }
  if (valueFieldName != null) {
    builder.field("value_field",valueFieldName);
  }
  if (valueScript != null) {
    builder.field("value_script",valueScript);
    if (lang != null) {
      builder.field("lang",lang);
    }
    if (this.params != null) {
      builder.field("params",this.params);
    }
  }
  builder.startArray("ranges");
  for (  Entry entry : entries) {
    builder.startObject();
    if (!Double.isInfinite(entry.from)) {
      builder.field("from",entry.from);
    }
    if (!Double.isInfinite(entry.to)) {
      builder.field("to",entry.to);
    }
    builder.endObject();
  }
  builder.endArray();
  if (unit != null) {
    builder.field("unit",unit);
  }
  if (geoDistance != null) {
    builder.field("distance_type",geoDistance.name().toLowerCase());
  }
  builder.endObject();
  addFilterFacetAndGlobal(builder,params);
  builder.endObject();
  return builder;
}
