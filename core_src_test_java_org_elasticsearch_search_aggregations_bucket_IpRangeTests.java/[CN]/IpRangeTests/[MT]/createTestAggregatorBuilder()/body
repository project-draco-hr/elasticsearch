{
  int numRanges=randomIntBetween(1,10);
  IpRangeAggregationBuilder factory=new IpRangeAggregationBuilder("foo");
  for (int i=0; i < numRanges; i++) {
    String key=null;
    if (randomBoolean()) {
      key=randomAsciiOfLengthBetween(1,20);
    }
switch (randomInt(3)) {
case 0:
      boolean v4=randomBoolean();
    int prefixLength;
  if (v4) {
    prefixLength=randomInt(32);
  }
 else {
    prefixLength=randomInt(128);
  }
factory.addMaskRange(key,randomIp(v4) + "/" + prefixLength);
break;
case 1:
factory.addUnboundedFrom(key,randomIp(randomBoolean()));
break;
case 2:
factory.addUnboundedTo(key,randomIp(randomBoolean()));
break;
case 3:
factory.addRange(key,randomIp(randomBoolean()),randomIp(randomBoolean()));
break;
default :
fail();
}
}
factory.field(IP_FIELD_NAME);
if (randomBoolean()) {
factory.keyed(randomBoolean());
}
if (randomBoolean()) {
factory.missing(randomIp(randomBoolean()));
}
return factory;
}
