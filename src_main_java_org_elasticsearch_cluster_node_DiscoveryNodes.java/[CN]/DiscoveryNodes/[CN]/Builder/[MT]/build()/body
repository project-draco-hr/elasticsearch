{
  ImmutableOpenMap.Builder<String,DiscoveryNode> dataNodesBuilder=ImmutableOpenMap.builder();
  ImmutableOpenMap.Builder<String,DiscoveryNode> masterNodesBuilder=ImmutableOpenMap.builder();
  Version minNodeVersion=Version.CURRENT;
  Version minNonClientNodeVersion=Version.CURRENT;
  for (  ObjectObjectCursor<String,DiscoveryNode> nodeEntry : nodes) {
    if (nodeEntry.value.dataNode()) {
      dataNodesBuilder.put(nodeEntry.key,nodeEntry.value);
      minNonClientNodeVersion=Version.smallest(minNonClientNodeVersion,nodeEntry.value.version());
    }
    if (nodeEntry.value.masterNode()) {
      masterNodesBuilder.put(nodeEntry.key,nodeEntry.value);
      minNonClientNodeVersion=Version.smallest(minNonClientNodeVersion,nodeEntry.value.version());
    }
    minNodeVersion=Version.smallest(minNodeVersion,nodeEntry.value.version());
  }
  return new DiscoveryNodes(nodes.build(),dataNodesBuilder.build(),masterNodesBuilder.build(),masterNodeId,localNodeId,minNodeVersion,minNonClientNodeVersion);
}
