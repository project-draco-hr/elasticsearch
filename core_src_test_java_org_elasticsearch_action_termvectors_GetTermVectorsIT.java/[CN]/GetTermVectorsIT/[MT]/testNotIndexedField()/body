{
  assertAcked(prepareCreate("test").addAlias(new Alias("alias")).addMapping("type1","field0","type=integer,","field1","type=text,index=false","field2","type=text,index=false,store=true","field3","type=text,index=false,term_vector=yes","field4","type=keyword","field5","type=text,index=true"));
  List<IndexRequestBuilder> indexBuilders=new ArrayList<>();
  for (int i=0; i < 6; i++) {
    indexBuilders.add(client().prepareIndex().setIndex("test").setType("type1").setId(String.valueOf(i)).setSource("field" + i,i));
  }
  indexRandom(true,indexBuilders);
  for (int i=0; i < 4; i++) {
    TermVectorsResponse resp=client().prepareTermVectors(indexOrAlias(),"type1",String.valueOf(i)).setSelectedFields("field" + i).get();
    assertThat(resp,notNullValue());
    assertThat(resp.isExists(),equalTo(true));
    assertThat(resp.getIndex(),equalTo("test"));
    assertThat("field" + i + " :",resp.getFields().terms("field" + i),nullValue());
  }
  for (int i=4; i < 6; i++) {
    TermVectorsResponse resp=client().prepareTermVectors(indexOrAlias(),"type1",String.valueOf(i)).setSelectedFields("field" + i).get();
    assertThat(resp.getIndex(),equalTo("test"));
    assertThat("field" + i + " :",resp.getFields().terms("field" + i),notNullValue());
  }
}
