{
  XContentBuilder mapping=jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("existingfield").field("type","string").field("term_vector","with_positions_offsets_payloads").endObject().endObject().endObject().endObject();
  assertAcked(prepareCreate("test").addAlias(new Alias("alias")).addMapping("type1",mapping));
  ensureYellow();
  client().prepareIndex("test","type1","0").setSource("anotherexistingfield",1).execute().actionGet();
  refresh();
  ActionFuture<TermVectorsResponse> termVectors=client().termVectors(new TermVectorsRequest(indexOrAlias(),"type1","0").selectedFields(randomBoolean() ? new String[]{"existingfield"} : null).termStatistics(true).fieldStatistics(true).dfs(true));
  TermVectorsResponse actionGet=termVectors.actionGet();
  assertThat(actionGet,notNullValue());
  assertThat(actionGet.isExists(),equalTo(true));
  assertThat(actionGet.getIndex(),equalTo("test"));
  assertThat(actionGet.getFields().terms("existingfield"),nullValue());
}
