{
  final Matcher matcher=include == null ? null : Pattern.compile(include).matcher("");
  ;
  final Iterator<Terms.Bucket> it1=terms1.iterator();
  final Iterator<Terms.Bucket> it2=terms2.iterator();
  int size2=0;
  while (it1.hasNext()) {
    final Terms.Bucket bucket1=it1.next();
    if (bucket1.getDocCount() >= minDocCount && (matcher == null || matcher.reset(bucket1.getKey().string()).matches())) {
      if (size2++ == size) {
        break;
      }
      assertTrue(it2.hasNext());
      final Terms.Bucket bucket2=it2.next();
      assertEquals(bucket1.getKey(),bucket2.getKey());
      assertEquals(bucket1.getDocCount(),bucket2.getDocCount());
    }
  }
  assertFalse(it2.hasNext());
}
