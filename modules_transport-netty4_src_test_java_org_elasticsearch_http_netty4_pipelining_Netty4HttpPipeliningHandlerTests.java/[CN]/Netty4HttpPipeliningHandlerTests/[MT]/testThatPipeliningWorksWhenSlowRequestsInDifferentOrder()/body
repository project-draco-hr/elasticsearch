{
  final int numberOfRequests=randomIntBetween(2,128);
  final EmbeddedChannel embeddedChannel=new EmbeddedChannel(new HttpPipeliningHandler(numberOfRequests),new WorkEmulatorHandler());
  for (int i=0; i < numberOfRequests; i++) {
    embeddedChannel.writeInbound(createHttpRequest("/" + String.valueOf(i)));
  }
  final List<String> urls=new ArrayList<>(waitingRequests.keySet());
  Randomness.shuffle(urls);
  final List<CountDownLatch> latches=new ArrayList<>();
  for (  final String url : urls) {
    latches.add(finishRequest(url));
  }
  for (  final CountDownLatch latch : latches) {
    latch.await();
  }
  embeddedChannel.flush();
  for (int i=0; i < numberOfRequests; i++) {
    assertReadHttpMessageHasContent(embeddedChannel,String.valueOf(i));
  }
  assertTrue(embeddedChannel.isOpen());
}
