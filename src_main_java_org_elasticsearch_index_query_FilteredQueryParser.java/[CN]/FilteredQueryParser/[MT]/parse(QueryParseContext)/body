{
  XContentParser parser=parseContext.parser();
  Query query=Queries.newMatchAllQuery();
  Filter filter=null;
  boolean filterFound=false;
  float boost=1.0f;
  FilterCachingPolicy cache=parseContext.autoFilterCachePolicy();
  HashedBytesRef cacheKey=null;
  String queryName=null;
  String currentFieldName=null;
  XContentParser.Token token;
  FilteredQuery.FilterStrategy filterStrategy=CUSTOM_FILTER_STRATEGY;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("query".equals(currentFieldName)) {
        query=parseContext.parseInnerQuery();
      }
 else       if ("filter".equals(currentFieldName)) {
        filterFound=true;
        filter=parseContext.parseInnerFilter();
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[filtered] query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token.isValue()) {
      if ("strategy".equals(currentFieldName)) {
        String value=parser.text();
        if ("query_first".equals(value) || "queryFirst".equals(value)) {
          filterStrategy=FilteredQuery.QUERY_FIRST_FILTER_STRATEGY;
        }
 else         if ("random_access_always".equals(value) || "randomAccessAlways".equals(value)) {
          filterStrategy=ALWAYS_RANDOM_ACCESS_FILTER_STRATEGY;
        }
 else         if ("leap_frog".equals(value) || "leapFrog".equals(value)) {
          filterStrategy=FilteredQuery.LEAP_FROG_QUERY_FIRST_STRATEGY;
        }
 else         if (value.startsWith("random_access_")) {
          int threshold=Integer.parseInt(value.substring("random_access_".length()));
          filterStrategy=new CustomRandomAccessFilterStrategy(threshold);
        }
 else         if (value.startsWith("randomAccess")) {
          int threshold=Integer.parseInt(value.substring("randomAccess".length()));
          filterStrategy=new CustomRandomAccessFilterStrategy(threshold);
        }
 else         if ("leap_frog_query_first".equals(value) || "leapFrogQueryFirst".equals(value)) {
          filterStrategy=FilteredQuery.LEAP_FROG_QUERY_FIRST_STRATEGY;
        }
 else         if ("leap_frog_filter_first".equals(value) || "leapFrogFilterFirst".equals(value)) {
          filterStrategy=FilteredQuery.LEAP_FROG_FILTER_FIRST_STRATEGY;
        }
 else {
          throw new QueryParsingException(parseContext.index(),"[filtered] strategy value not supported [" + value + "]");
        }
      }
 else       if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else       if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else       if ("_cache".equals(currentFieldName)) {
        cache=parseContext.parseFilterCachePolicy();
      }
 else       if ("_cache_key".equals(currentFieldName) || "_cacheKey".equals(currentFieldName)) {
        cacheKey=new HashedBytesRef(parser.text());
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[filtered] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (query == null) {
    return null;
  }
  if (filter == null) {
    if (!filterFound) {
      return query;
    }
 else {
      return query;
    }
  }
  if (filter == Queries.MATCH_ALL_FILTER) {
    return query;
  }
  if (cache != null) {
    filter=parseContext.cacheFilter(filter,cacheKey,cache);
  }
  if (Queries.isConstantMatchAllQuery(query)) {
    Query q=new ConstantScoreQuery(filter);
    q.setBoost(boost);
    return q;
  }
  FilteredQuery filteredQuery=new FilteredQuery(query,filter,filterStrategy);
  filteredQuery.setBoost(boost);
  if (queryName != null) {
    parseContext.addNamedQuery(queryName,filteredQuery);
  }
  return filteredQuery;
}
