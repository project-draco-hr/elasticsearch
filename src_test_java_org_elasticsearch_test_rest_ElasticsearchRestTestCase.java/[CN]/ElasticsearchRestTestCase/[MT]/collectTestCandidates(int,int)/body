{
  List<RestTestCandidate> testCandidates=Lists.newArrayList();
  FileSystem fileSystem=getFileSystem();
  try {
    String[] paths=resolvePathsProperty(REST_TESTS_SUITE,DEFAULT_TESTS_PATH);
    Map<String,Set<Path>> yamlSuites=FileUtils.findYamlSuites(fileSystem,DEFAULT_TESTS_PATH,paths);
    RestTestSuiteParser restTestSuiteParser=new RestTestSuiteParser();
    for (    String api : yamlSuites.keySet()) {
      List<Path> yamlFiles=Lists.newArrayList(yamlSuites.get(api));
      for (      Path yamlFile : yamlFiles) {
        String key=api + yamlFile.getFileName().toString();
        if (mustExecute(key,id,count)) {
          RestTestSuite restTestSuite=restTestSuiteParser.parse(api,yamlFile);
          for (          TestSection testSection : restTestSuite.getTestSections()) {
            testCandidates.add(new RestTestCandidate(restTestSuite,testSection));
          }
        }
      }
    }
  }
  finally {
    IOUtils.close(fileSystem);
  }
  Collections.sort(testCandidates,new Comparator<RestTestCandidate>(){
    @Override public int compare(    RestTestCandidate o1,    RestTestCandidate o2){
      return o1.getTestPath().compareTo(o2.getTestPath());
    }
  }
);
  return testCandidates;
}
