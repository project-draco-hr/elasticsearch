{
  AnalysisService analysisService=createAnalysisService();
  TokenFilterFactory tokenFilter=analysisService.tokenFilter("kuromoji_stemmer");
  assertThat(tokenFilter,instanceOf(KuromojiKatakanaStemmerFactory.class));
  String source="????????????????????????????????????????????????????????????????????????????????????????????????";
  Tokenizer tokenizer=new JapaneseTokenizer(null,true,JapaneseTokenizer.Mode.SEARCH);
  tokenizer.setReader(new StringReader(source));
  String[] expected_tokens_katakana=new String[]{"?????????","????????????","???","??????","??????","???","??????","?????????","???","??????","???","?????????","???","??????","???"};
  assertSimpleTSOutput(tokenFilter.create(tokenizer),expected_tokens_katakana);
  tokenFilter=analysisService.tokenFilter("kuromoji_ks");
  assertThat(tokenFilter,instanceOf(KuromojiKatakanaStemmerFactory.class));
  tokenizer=new JapaneseTokenizer(null,true,JapaneseTokenizer.Mode.SEARCH);
  tokenizer.setReader(new StringReader(source));
  expected_tokens_katakana=new String[]{"?????????","???????????????","???","??????","??????","???","??????","?????????","???","??????","???","?????????","???","??????","???"};
  assertSimpleTSOutput(tokenFilter.create(tokenizer),expected_tokens_katakana);
}
