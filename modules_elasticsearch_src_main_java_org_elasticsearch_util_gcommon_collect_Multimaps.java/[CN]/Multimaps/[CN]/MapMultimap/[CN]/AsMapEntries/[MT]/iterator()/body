{
  return new Iterator<Entry<K,Collection<V>>>(){
    final Iterator<K> keys=map.keySet().iterator();
    public boolean hasNext(){
      return keys.hasNext();
    }
    public Entry<K,Collection<V>> next(){
      final K key=keys.next();
      return new AbstractMapEntry<K,Collection<V>>(){
        @Override public K getKey(){
          return key;
        }
        @Override public Collection<V> getValue(){
          return get(key);
        }
      }
;
    }
    public void remove(){
      keys.remove();
    }
  }
;
}
