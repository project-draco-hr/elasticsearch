{
  if (kind == NodeId.scalar && implicit) {
    List<ResolverTuple> resolvers=null;
    if ("".equals(value)) {
      resolvers=yamlImplicitResolvers.get('\0');
    }
 else {
      resolvers=yamlImplicitResolvers.get(value.charAt(0));
    }
    if (resolvers != null) {
      for (      ResolverTuple v : resolvers) {
        Tag tag=v.getTag();
        Pattern regexp=v.getRegexp();
        if (regexp.matcher(value).matches()) {
          return tag;
        }
      }
    }
    if (yamlImplicitResolvers.containsKey(null)) {
      for (      ResolverTuple v : yamlImplicitResolvers.get(null)) {
        Tag tag=v.getTag();
        Pattern regexp=v.getRegexp();
        if (regexp.matcher(value).matches()) {
          return tag;
        }
      }
    }
  }
switch (kind) {
case scalar:
    return Tag.STR;
case sequence:
  return Tag.SEQ;
default :
return Tag.MAP;
}
}
