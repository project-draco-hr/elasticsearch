{
  checkFrequencies(subsetFreq,subsetSize,supersetFreq,supersetSize,scoreFunctionName);
  Frequencies frequencies=new Frequencies();
  if (backgroundIsSuperset) {
    frequencies.N00=supersetSize - supersetFreq - (subsetSize - subsetFreq);
    frequencies.N01=(subsetSize - subsetFreq);
    frequencies.N10=supersetFreq - subsetFreq;
    frequencies.N11=subsetFreq;
    frequencies.N0_=supersetSize - supersetFreq;
    frequencies.N1_=supersetFreq;
    frequencies.N_0=supersetSize - subsetSize;
    frequencies.N_1=subsetSize;
    frequencies.N=supersetSize;
  }
 else {
    frequencies.N00=supersetSize - supersetFreq;
    frequencies.N01=subsetSize - subsetFreq;
    frequencies.N10=supersetFreq;
    frequencies.N11=subsetFreq;
    frequencies.N0_=supersetSize - supersetFreq + subsetSize - subsetFreq;
    frequencies.N1_=supersetFreq + subsetFreq;
    frequencies.N_0=supersetSize;
    frequencies.N_1=subsetSize;
    frequencies.N=supersetSize + subsetSize;
  }
  return frequencies;
}
