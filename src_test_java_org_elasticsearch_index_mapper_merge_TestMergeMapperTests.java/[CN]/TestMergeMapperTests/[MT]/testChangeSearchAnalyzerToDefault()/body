{
  DocumentMapperParser parser=createIndex("test").mapperService().documentMapperParser();
  String mapping1=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","string").field("analyzer","standard").field("search_analyzer","whitespace").endObject().endObject().endObject().endObject().string();
  String mapping2=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","string").field("analyzer","standard").field("ignore_above",14).endObject().endObject().endObject().endObject().string();
  DocumentMapper existing=parser.parse(mapping1);
  DocumentMapper changed=parser.parse(mapping2);
  assertThat(((NamedAnalyzer)existing.mappers().name("field").mapper().searchAnalyzer()).name(),equalTo("whitespace"));
  DocumentMapper.MergeResult mergeResult=existing.merge(changed,mergeFlags().simulate(false));
  assertThat(mergeResult.hasConflicts(),equalTo(false));
  assertThat(((NamedAnalyzer)existing.mappers().name("field").mapper().searchAnalyzer()).name(),equalTo("standard"));
  assertThat(((StringFieldMapper)(existing.mappers().name("field").mapper())).getIgnoreAbove(),equalTo(14));
}
