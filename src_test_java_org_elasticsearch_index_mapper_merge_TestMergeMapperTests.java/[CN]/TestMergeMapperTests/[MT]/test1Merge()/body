{
  String stage1Mapping=XContentFactory.jsonBuilder().startObject().startObject("person").startObject("properties").startObject("name").field("type","string").endObject().endObject().endObject().endObject().string();
  DocumentMapperParser parser=createIndex("test").mapperService().documentMapperParser();
  DocumentMapper stage1=parser.parse(stage1Mapping);
  String stage2Mapping=XContentFactory.jsonBuilder().startObject().startObject("person").startObject("properties").startObject("name").field("type","string").endObject().startObject("age").field("type","integer").endObject().startObject("obj1").startObject("properties").startObject("prop1").field("type","integer").endObject().endObject().endObject().endObject().endObject().endObject().string();
  DocumentMapper stage2=parser.parse(stage2Mapping);
  DocumentMapper.MergeResult mergeResult=stage1.merge(stage2,mergeFlags().simulate(true));
  assertThat(mergeResult.hasConflicts(),equalTo(false));
  assertThat(stage1.mappers().smartName("age"),nullValue());
  assertThat(stage1.mappers().smartName("obj1.prop1"),nullValue());
  mergeResult=stage1.merge(stage2,mergeFlags().simulate(false));
  assertThat(mergeResult.hasConflicts(),equalTo(false));
  assertThat(stage1.mappers().smartName("age"),notNullValue());
  assertThat(stage1.mappers().smartName("obj1.prop1"),notNullValue());
}
