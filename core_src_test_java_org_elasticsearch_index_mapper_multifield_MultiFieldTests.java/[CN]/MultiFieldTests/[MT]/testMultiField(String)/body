{
  DocumentMapper docMapper=createIndex("test").mapperService().documentMapperParser().parse("person",new CompressedXContent(mapping));
  BytesReference json=new BytesArray(copyToBytesFromClasspath("/org/elasticsearch/index/mapper/multifield/test-data.json"));
  Document doc=docMapper.parse("test","person","1",json).rootDoc();
  IndexableField f=doc.getField("name");
  assertThat(f.name(),equalTo("name"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(true));
  assertNotSame(IndexOptions.NONE,f.fieldType().indexOptions());
  f=doc.getField("name.indexed");
  assertThat(f.name(),equalTo("name.indexed"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(false));
  assertNotSame(IndexOptions.NONE,f.fieldType().indexOptions());
  f=doc.getField("name.not_indexed");
  assertThat(f.name(),equalTo("name.not_indexed"));
  assertThat(f.stringValue(),equalTo("some name"));
  assertThat(f.fieldType().stored(),equalTo(true));
  assertEquals(IndexOptions.NONE,f.fieldType().indexOptions());
  f=doc.getField("object1.multi1");
  assertThat(f.name(),equalTo("object1.multi1"));
  f=doc.getField("object1.multi1.string");
  assertThat(f.name(),equalTo("object1.multi1.string"));
  assertThat(f.stringValue(),equalTo("2010-01-01"));
  assertThat(docMapper.mappers().getMapper("name"),notNullValue());
  assertThat(docMapper.mappers().getMapper("name"),instanceOf(TextFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().getMapper("name").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("name").fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("name").fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("name.indexed"),notNullValue());
  assertThat(docMapper.mappers().getMapper("name.indexed"),instanceOf(TextFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().getMapper("name.indexed").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("name.indexed").fieldType().stored(),equalTo(false));
  assertThat(docMapper.mappers().getMapper("name.indexed").fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("name.not_indexed"),notNullValue());
  assertThat(docMapper.mappers().getMapper("name.not_indexed"),instanceOf(TextFieldMapper.class));
  assertEquals(IndexOptions.NONE,docMapper.mappers().getMapper("name.not_indexed").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("name.not_indexed").fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("name.not_indexed").fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("name.test1"),notNullValue());
  assertThat(docMapper.mappers().getMapper("name.test1"),instanceOf(TextFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().getMapper("name.test1").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("name.test1").fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("name.test1").fieldType().tokenized(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("name.test1").fieldType().fieldDataType().getLoading(),equalTo(MappedFieldType.Loading.EAGER));
  assertThat(docMapper.mappers().getMapper("name.test2"),notNullValue());
  assertThat(docMapper.mappers().getMapper("name.test2"),instanceOf(TokenCountFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().getMapper("name.test2").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("name.test2").fieldType().stored(),equalTo(true));
  assertThat(docMapper.mappers().getMapper("name.test2").fieldType().tokenized(),equalTo(false));
  assertThat(((TokenCountFieldMapper)docMapper.mappers().getMapper("name.test2")).analyzer(),equalTo("simple"));
  assertThat(((TokenCountFieldMapper)docMapper.mappers().getMapper("name.test2")).analyzer(),equalTo("simple"));
  assertThat(docMapper.mappers().getMapper("object1.multi1"),notNullValue());
  assertThat(docMapper.mappers().getMapper("object1.multi1"),instanceOf(DateFieldMapper.class));
  assertThat(docMapper.mappers().getMapper("object1.multi1.string"),notNullValue());
  assertThat(docMapper.mappers().getMapper("object1.multi1.string"),instanceOf(KeywordFieldMapper.class));
  assertNotSame(IndexOptions.NONE,docMapper.mappers().getMapper("object1.multi1.string").fieldType().indexOptions());
  assertThat(docMapper.mappers().getMapper("object1.multi1.string").fieldType().tokenized(),equalTo(false));
}
