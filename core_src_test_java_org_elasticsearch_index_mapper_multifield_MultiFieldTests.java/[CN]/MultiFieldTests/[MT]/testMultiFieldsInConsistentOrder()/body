{
  String[] multiFieldNames=new String[randomIntBetween(2,10)];
  for (int i=0; i < multiFieldNames.length; i++) {
    multiFieldNames[i]=randomAsciiOfLength(4);
  }
  XContentBuilder builder=jsonBuilder().startObject().startObject("type").startObject("properties").startObject("my_field").field("type","text").startObject("fields");
  for (  String multiFieldName : multiFieldNames) {
    builder=builder.startObject(multiFieldName).field("type","text").endObject();
  }
  builder=builder.endObject().endObject().endObject().endObject().endObject();
  String mapping=builder.string();
  DocumentMapper docMapper=createIndex("test").mapperService().documentMapperParser().parse("type",new CompressedXContent(mapping));
  Arrays.sort(multiFieldNames);
  Map<String,Object> sourceAsMap=XContentHelper.convertToMap(docMapper.mappingSource().compressedReference(),true).v2();
  @SuppressWarnings("unchecked") Map<String,Object> multiFields=(Map<String,Object>)XContentMapValues.extractValue("type.properties.my_field.fields",sourceAsMap);
  assertThat(multiFields.size(),equalTo(multiFieldNames.length));
  int i=0;
  for (  String field : multiFields.keySet()) {
    assertThat(field,equalTo(multiFieldNames[i++]));
  }
}
