{
  FSDataInputStream fileStream=null;
  try {
    long recoveryTranslogId=findLatestTranslogId();
    if (recoveryTranslogId == -1) {
      indexShard.start();
      return new RecoveryStatus.Translog(-1,0,new ByteSizeValue(0,ByteSizeUnit.BYTES));
    }
    FileStatus status=fileSystem.getFileStatus(new Path(translogPath,"translog-" + recoveryTranslogId));
    fileStream=fileSystem.open(status.getPath());
    ArrayList<Translog.Operation> operations=Lists.newArrayList();
    for (; ; ) {
      try {
        operations.add(readTranslogOperation(new DataInputStreamInput(fileStream)));
      }
 catch (      EOFException e) {
        break;
      }
    }
    indexShard.performRecovery(operations);
    return new RecoveryStatus.Translog(recoveryTranslogId,operations.size(),new ByteSizeValue(status.getLen(),ByteSizeUnit.BYTES));
  }
 catch (  Exception e) {
    throw new IndexShardGatewayRecoveryException(shardId(),"Failed to perform recovery of translog",e);
  }
 finally {
    if (fileStream != null) {
      try {
        fileStream.close();
      }
 catch (      IOException e) {
      }
    }
  }
}
