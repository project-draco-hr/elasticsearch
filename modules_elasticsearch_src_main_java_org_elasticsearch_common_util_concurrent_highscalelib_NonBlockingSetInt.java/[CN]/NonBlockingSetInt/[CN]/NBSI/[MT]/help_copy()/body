{
  NBSI top_nbsi=_non_blocking_set_int._nbsi;
  final int HELP=8;
  int idx=top_nbsi._copyIdx.getAndAdd(64 * HELP);
  for (int i=0; i < HELP; i++) {
    int j=idx + i * 64;
    j%=(top_nbsi._bits.length << 6);
    top_nbsi.help_copy_impl(j);
    top_nbsi.help_copy_impl(j + 63);
  }
  if (top_nbsi._copyDone.get() == top_nbsi._sum_bits_length)   if (_non_blocking_set_int.CAS_nbsi(top_nbsi,top_nbsi._new)) {
  }
  return _new;
}
