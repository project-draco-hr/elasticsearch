{
  if ((i >> 6) >= _bits.length)   return _new == null ? false : help_copy().remove(i);
  NBSI nbsi=this;
  int j=i;
  while ((j & 63) == 63) {
    nbsi=nbsi._nbsi64;
    j=j >> 6;
  }
  final long mask=mask(j);
  long old;
  do {
    old=nbsi._bits[j >> 6];
    if (old < 0)     return help_copy_impl(i).help_copy().remove(i);
    if ((old & mask) == 0)     return false;
  }
 while (!nbsi.CAS(j >> 6,old,old & ~mask));
  _size.add(-1);
  return true;
}
