{
  if (script == null) {
    return request;
  }
  if (executable == null) {
    CompiledScript compiled=scriptService.compile(script,ScriptContext.Standard.UPDATE,emptyMap());
    executable=scriptService.executable(compiled,params);
  }
  if (context == null) {
    context=new HashMap<>();
  }
  context.put(IndexFieldMapper.NAME,doc.getIndex());
  context.put(TypeFieldMapper.NAME,doc.getType());
  context.put(IdFieldMapper.NAME,doc.getId());
  Long oldVersion=doc.getVersion();
  context.put(VersionFieldMapper.NAME,oldVersion);
  String oldParent=doc.getParent();
  context.put(ParentFieldMapper.NAME,oldParent);
  String oldRouting=doc.getRouting();
  context.put(RoutingFieldMapper.NAME,oldRouting);
  Long oldTimestamp=doc.getTimestamp();
  context.put(TimestampFieldMapper.NAME,oldTimestamp);
  Long oldTTL=doc.getTTL();
  context.put(TTLFieldMapper.NAME,oldTTL);
  context.put(SourceFieldMapper.NAME,request.getSource());
  OpType oldOpType=OpType.INDEX;
  context.put("op",oldOpType.toString());
  executable.setNextVar("ctx",context);
  executable.run();
  Map<String,Object> resultCtx=(Map<String,Object>)executable.unwrap(context);
  String newOp=(String)resultCtx.remove("op");
  if (newOp == null) {
    throw new IllegalArgumentException("Script cleared operation type");
  }
  request.setSource((Map<String,Object>)resultCtx.remove(SourceFieldMapper.NAME));
  Object newValue=context.remove(IndexFieldMapper.NAME);
  if (false == doc.getIndex().equals(newValue)) {
    scriptChangedIndex(request,newValue);
  }
  newValue=context.remove(TypeFieldMapper.NAME);
  if (false == doc.getType().equals(newValue)) {
    scriptChangedType(request,newValue);
  }
  newValue=context.remove(IdFieldMapper.NAME);
  if (false == doc.getId().equals(newValue)) {
    scriptChangedId(request,newValue);
  }
  newValue=context.remove(VersionFieldMapper.NAME);
  if (false == Objects.equals(oldVersion,newValue)) {
    scriptChangedVersion(request,newValue);
  }
  newValue=context.remove(ParentFieldMapper.NAME);
  if (false == Objects.equals(oldParent,newValue)) {
    scriptChangedParent(request,newValue);
  }
  newValue=context.remove(RoutingFieldMapper.NAME);
  if (false == Objects.equals(oldRouting,newValue)) {
    scriptChangedRouting(request,newValue);
  }
  newValue=context.remove(TimestampFieldMapper.NAME);
  if (false == Objects.equals(oldTimestamp,newValue)) {
    scriptChangedTimestamp(request,newValue);
  }
  newValue=context.remove(TTLFieldMapper.NAME);
  if (false == Objects.equals(oldTTL,newValue)) {
    scriptChangedTTL(request,newValue);
  }
  OpType newOpType=OpType.fromString(newOp);
  if (newOpType != oldOpType) {
    return scriptChangedOpType(request,oldOpType,newOpType);
  }
  if (false == context.isEmpty()) {
    throw new IllegalArgumentException("Invalid fields added to context [" + String.join(",",context.keySet()) + ']');
  }
  return request;
}
