{
  try {
    if (randomBoolean()) {
      new GeoDistanceQueryBuilder("");
    }
 else {
      new GeoDistanceQueryBuilder(null);
    }
    fail("must not be null or empty");
  }
 catch (  IllegalArgumentException ex) {
    assertThat(ex.getMessage(),equalTo("fieldName must not be null or empty"));
  }
  GeoDistanceQueryBuilder query=new GeoDistanceQueryBuilder("fieldName");
  try {
    if (randomBoolean()) {
      query.distance("");
    }
 else {
      query.distance(null);
    }
    fail("must not be null or empty");
  }
 catch (  IllegalArgumentException ex) {
    assertThat(ex.getMessage(),equalTo("distance must not be null or empty"));
  }
  try {
    if (randomBoolean()) {
      query.distance("",DistanceUnit.DEFAULT);
    }
 else {
      query.distance(null,DistanceUnit.DEFAULT);
    }
    fail("distance must not be null or empty");
  }
 catch (  IllegalArgumentException ex) {
    assertThat(ex.getMessage(),equalTo("distance must not be null or empty"));
  }
  try {
    if (randomBoolean()) {
      query.distance("1",null);
    }
 else {
      query.distance(1,null);
    }
    fail("distance must not be null");
  }
 catch (  IllegalArgumentException ex) {
    assertThat(ex.getMessage(),equalTo("distance unit must not be null"));
  }
  try {
    query.distance(randomIntBetween(Integer.MIN_VALUE,0),DistanceUnit.DEFAULT);
    fail("distance must be greater than zero");
  }
 catch (  IllegalArgumentException ex) {
    assertThat(ex.getMessage(),equalTo("distance must be greater than zero"));
  }
  try {
    if (randomBoolean()) {
      query.geohash(null);
    }
 else {
      query.geohash("");
    }
    fail("geohash must not be null");
  }
 catch (  IllegalArgumentException ex) {
    assertThat(ex.getMessage(),equalTo("geohash must not be null or empty"));
  }
  try {
    query.geoDistance(null);
    fail("geodistance must not be null");
  }
 catch (  IllegalArgumentException ex) {
    assertThat(ex.getMessage(),equalTo("geoDistance must not be null"));
  }
  try {
    query.optimizeBbox(null);
    fail("optimizeBbox must not be null");
  }
 catch (  IllegalArgumentException ex) {
    assertThat(ex.getMessage(),equalTo("optimizeBbox must not be null"));
  }
}
