{
  Map<String,Object> vars=new HashMap<String,Object>();
  Map<String,Object> obj2=MapBuilder.<String,Object>newMapBuilder().put("prop2","value2").map();
  Map<String,Object> obj1=MapBuilder.<String,Object>newMapBuilder().put("prop1","value1").put("obj2",obj2).map();
  vars.put("l",Arrays.asList("1","2","3",obj1));
  Object o=se.execute(new CompiledScript(ScriptService.ScriptType.INLINE,"testAccessInScript","js",se.compile("l.length")),vars);
  assertThat(((Number)o).intValue(),equalTo(4));
  o=se.execute(new CompiledScript(ScriptService.ScriptType.INLINE,"testAccessInScript","js",se.compile("l[0]")),vars);
  assertThat(((String)o),equalTo("1"));
  o=se.execute(new CompiledScript(ScriptService.ScriptType.INLINE,"testAccessInScript","js",se.compile("l[3]")),vars);
  obj1=(Map<String,Object>)o;
  assertThat((String)obj1.get("prop1"),equalTo("value1"));
  assertThat((String)((Map<String,Object>)obj1.get("obj2")).get("prop2"),equalTo("value2"));
  o=se.execute(new CompiledScript(ScriptService.ScriptType.INLINE,"testAccessInScript","js",se.compile("l[3].prop1")),vars);
  assertThat(((String)o),equalTo("value1"));
}
