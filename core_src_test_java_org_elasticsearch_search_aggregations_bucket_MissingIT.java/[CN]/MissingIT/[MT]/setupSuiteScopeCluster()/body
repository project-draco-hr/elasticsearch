{
  assertAcked(client().admin().indices().prepareCreate("idx").addMapping("type","tag","type=keyword").get());
  List<IndexRequestBuilder> builders=new ArrayList<>();
  numDocs=randomIntBetween(5,20);
  numDocsMissing=randomIntBetween(1,numDocs - 1);
  for (int i=0; i < numDocsMissing; i++) {
    builders.add(client().prepareIndex("idx","type","" + i).setSource(jsonBuilder().startObject().field("value",i).endObject()));
  }
  for (int i=numDocsMissing; i < numDocs; i++) {
    builders.add(client().prepareIndex("idx","type","" + i).setSource(jsonBuilder().startObject().field("tag","tag1").endObject()));
  }
  createIndex("unmapped_idx");
  numDocsUnmapped=randomIntBetween(2,5);
  for (int i=0; i < numDocsUnmapped; i++) {
    builders.add(client().prepareIndex("unmapped_idx","type","" + i).setSource(jsonBuilder().startObject().field("value",i).endObject()));
  }
  prepareCreate("empty_bucket_idx").addMapping("type","value","type=integer").execute().actionGet();
  for (int i=0; i < 2; i++) {
    builders.add(client().prepareIndex("empty_bucket_idx","type","" + i).setSource(jsonBuilder().startObject().field("value",i * 2).endObject()));
  }
  indexRandom(true,builders);
  ensureSearchable();
}
