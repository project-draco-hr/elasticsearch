{
  Multibinder<AllocationDecider> allocationMultibinder=Multibinder.newSetBinder(binder(),AllocationDecider.class);
  allocationMultibinder.addBinding().to(SameShardAllocationDecider.class);
  allocationMultibinder.addBinding().to(FilterAllocationDecider.class);
  allocationMultibinder.addBinding().to(ReplicaAfterPrimaryActiveAllocationDecider.class);
  allocationMultibinder.addBinding().to(ThrottlingAllocationDecider.class);
  allocationMultibinder.addBinding().to(RebalanceOnlyWhenActiveAllocationDecider.class);
  allocationMultibinder.addBinding().to(ClusterRebalanceAllocationDecider.class);
  allocationMultibinder.addBinding().to(ConcurrentRebalanceAllocationDecider.class);
  allocationMultibinder.addBinding().to(DisableAllocationDecider.class);
  allocationMultibinder.addBinding().to(AwarenessAllocationDecider.class);
  allocationMultibinder.addBinding().to(ShardsLimitAllocationDecider.class);
  for (  Class<? extends AllocationDecider> allocation : allocations) {
    allocationMultibinder.addBinding().to(allocation);
  }
  bind(AllocationDeciders.class).asEagerSingleton();
}
