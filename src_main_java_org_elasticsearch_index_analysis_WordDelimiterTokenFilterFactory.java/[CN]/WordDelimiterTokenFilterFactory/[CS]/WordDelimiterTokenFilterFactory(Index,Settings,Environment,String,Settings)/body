{
  super(index,indexSettings,name,settings);
  List<String> charTypeTableValues=Analysis.getWordList(env,settings,"type_table");
  if (charTypeTableValues == null) {
    this.charTypeTable=WordDelimiterIterator.DEFAULT_WORD_DELIM_TABLE;
  }
 else {
    this.charTypeTable=parseTypes(charTypeTableValues);
  }
  int flags=0;
  flags|=getFlag(GENERATE_WORD_PARTS,settings,"generate_word_parts",true);
  flags|=getFlag(GENERATE_WORD_PARTS,settings,"generate_number_parts",true);
  flags|=getFlag(CATENATE_WORDS,settings,"catenate_words",false);
  flags|=getFlag(CATENATE_NUMBERS,settings,"catenate_numbers",false);
  flags|=getFlag(CATENATE_ALL,settings,"catenate_all",false);
  flags|=getFlag(SPLIT_ON_CASE_CHANGE,settings,"split_on_case_change",true);
  flags|=getFlag(PRESERVE_ORIGINAL,settings,"preserve_original",false);
  flags|=getFlag(SPLIT_ON_NUMERICS,settings,"split_on_numerics",true);
  flags|=getFlag(STEM_ENGLISH_POSSESSIVE,settings,"stem_english_possessive",true);
  Set<?> protectedWords=Analysis.getWordSet(env,settings,"protected_words",version);
  this.protoWords=protectedWords == null ? null : CharArraySet.copy(Lucene.VERSION,protectedWords);
  this.flags=flags;
}
