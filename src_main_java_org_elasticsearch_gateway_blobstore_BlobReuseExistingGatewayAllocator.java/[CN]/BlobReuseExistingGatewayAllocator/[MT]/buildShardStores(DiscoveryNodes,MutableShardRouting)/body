{
  Map<DiscoveryNode,TransportNodesListShardStoreMetaData.StoreFilesMetaData> shardStores=cachedStores.get(shard.shardId());
  Set<String> nodesIds;
  if (shardStores == null) {
    shardStores=Maps.newHashMap();
    cachedStores.put(shard.shardId(),shardStores);
    nodesIds=nodes.dataNodes().keySet();
  }
 else {
    nodesIds=Sets.newHashSet();
    for (Iterator<DiscoveryNode> it=shardStores.keySet().iterator(); it.hasNext(); ) {
      DiscoveryNode node=it.next();
      if (!nodes.nodeExists(node.id())) {
        it.remove();
      }
    }
    for (    DiscoveryNode node : nodes.dataNodes().values()) {
      if (!shardStores.containsKey(node)) {
        nodesIds.add(node.id());
      }
    }
  }
  if (!nodesIds.isEmpty()) {
    TransportNodesListShardStoreMetaData.NodesStoreFilesMetaData nodesStoreFilesMetaData=listShardStoreMetaData.list(shard.shardId(),false,nodesIds,listTimeout).actionGet();
    if (logger.isTraceEnabled()) {
      if (nodesStoreFilesMetaData.failures().length > 0) {
        StringBuilder sb=new StringBuilder(shard + ": failures when trying to list stores on nodes:");
        for (int i=0; i < nodesStoreFilesMetaData.failures().length; i++) {
          Throwable cause=ExceptionsHelper.unwrapCause(nodesStoreFilesMetaData.failures()[i]);
          if (cause instanceof ConnectTransportException) {
            continue;
          }
          sb.append("\n    -> ").append(nodesStoreFilesMetaData.failures()[i].getDetailedMessage());
        }
        logger.trace(sb.toString());
      }
    }
    for (    TransportNodesListShardStoreMetaData.NodeStoreFilesMetaData nodeStoreFilesMetaData : nodesStoreFilesMetaData) {
      if (nodeStoreFilesMetaData.storeFilesMetaData() != null) {
        shardStores.put(nodeStoreFilesMetaData.getNode(),nodeStoreFilesMetaData.storeFilesMetaData());
      }
    }
  }
  return shardStores;
}
