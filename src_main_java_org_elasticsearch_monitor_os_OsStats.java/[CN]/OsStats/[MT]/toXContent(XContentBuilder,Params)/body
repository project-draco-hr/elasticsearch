{
  builder.startObject(Fields.OS);
  builder.field(Fields.TIMESTAMP,timestamp);
  if (uptime != -1) {
    builder.byteSizeField(Fields.UPTIME,Fields.UPTIME_IN_MILLIS,uptime);
  }
  if (loadAverage.length > 0) {
    builder.startArray(Fields.LOAD_AVERAGE);
    for (    double value : loadAverage) {
      builder.value(value);
    }
    builder.endArray();
  }
  if (cpu != null) {
    builder.startObject(Fields.CPU);
    builder.field(Fields.SYS,cpu.sys());
    builder.field(Fields.USER,cpu.user());
    builder.field(Fields.IDLE,cpu.idle());
    builder.field(Fields.STOLEN,cpu.stolen());
    builder.endObject();
  }
  if (mem != null) {
    builder.startObject(Fields.MEM);
    builder.byteSizeField(Fields.FREE,Fields.FREE_IN_BYTES,mem.free);
    builder.byteSizeField(Fields.USED,Fields.USED_IN_BYTES,mem.used);
    builder.field(Fields.FREE_PERCENT,mem.freePercent());
    builder.field(Fields.USED_PERCENT,mem.usedPercent());
    builder.byteSizeField(Fields.ACTUAL_FREE,Fields.ACTUAL_FREE_IN_BYTES,mem.actualFree);
    builder.byteSizeField(Fields.ACTUAL_USED,Fields.ACTUAL_USED_IN_BYTES,mem.actualUsed);
    builder.endObject();
  }
  if (swap != null) {
    builder.startObject(Fields.SWAP);
    builder.byteSizeField(Fields.USED,Fields.USED_IN_BYTES,swap.used);
    builder.byteSizeField(Fields.FREE,Fields.FREE_IN_BYTES,swap.free);
    builder.endObject();
  }
  builder.endObject();
  return builder;
}
