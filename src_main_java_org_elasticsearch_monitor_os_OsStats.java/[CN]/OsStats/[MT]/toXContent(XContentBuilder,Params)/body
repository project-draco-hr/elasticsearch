{
  builder.startObject(Fields.OS);
  builder.field(Fields.TIMESTAMP,timestamp);
  builder.field(Fields.UPTIME,uptime().format());
  builder.field(Fields.UPTIME_IN_MILLIS,uptime().millis());
  builder.startArray(Fields.LOAD_AVERAGE);
  for (  double value : loadAverage) {
    builder.value(value);
  }
  builder.endArray();
  if (cpu != null) {
    builder.startObject(Fields.CPU);
    builder.field(Fields.SYS,cpu.sys());
    builder.field(Fields.USER,cpu.user());
    builder.field(Fields.IDLE,cpu.idle());
    builder.endObject();
  }
  if (mem != null) {
    builder.startObject(Fields.MEM);
    builder.field(Fields.FREE,mem.free().toString());
    builder.field(Fields.FREE_IN_BYTES,mem.free);
    builder.field(Fields.USED,mem.used().toString());
    builder.field(Fields.USED_IN_BYTES,mem.used);
    builder.field(Fields.FREE_PERCENT,mem.freePercent());
    builder.field(Fields.USED_PERCENT,mem.usedPercent());
    builder.field(Fields.ACTUAL_FREE,mem.actualFree().toString());
    builder.field(Fields.ACTUAL_FREE_IN_BYTES,mem.actualFree);
    builder.field(Fields.ACTUAL_USED,mem.actualUsed().toString());
    builder.field(Fields.ACTUAL_USED_IN_BYTES,mem.actualUsed);
    builder.endObject();
  }
  if (swap != null) {
    builder.startObject(Fields.SWAP);
    builder.field(Fields.USED,swap.used().toString());
    builder.field(Fields.USED_IN_BYTES,swap.used);
    builder.field(Fields.FREE,swap.free().toString());
    builder.field(Fields.FREE_IN_BYTES,swap.free);
    builder.endObject();
  }
  builder.endObject();
  return builder;
}
