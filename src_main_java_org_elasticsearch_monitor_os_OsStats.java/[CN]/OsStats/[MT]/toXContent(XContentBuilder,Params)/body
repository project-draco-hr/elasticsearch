{
  builder.startObject(Fields.OS);
  builder.field(Fields.TIMESTAMP,timestamp);
  if (uptime != -1) {
    builder.timeValueField(Fields.UPTIME_IN_MILLIS,Fields.UPTIME,uptime);
  }
  if (loadAverage.length > 0) {
    if (params.param("load_average_format","array").equals("hash")) {
      builder.startObject(Fields.LOAD_AVERAGE);
      builder.field(Fields.LOAD_AVERAGE_1m,loadAverage[0]);
      builder.field(Fields.LOAD_AVERAGE_5m,loadAverage[1]);
      builder.field(Fields.LOAD_AVERAGE_15m,loadAverage[2]);
      builder.endObject();
    }
 else {
      builder.startArray(Fields.LOAD_AVERAGE);
      for (      double value : loadAverage) {
        builder.value(value);
      }
      builder.endArray();
    }
  }
  if (cpu != null) {
    builder.startObject(Fields.CPU);
    builder.field(Fields.SYS,cpu.sys());
    builder.field(Fields.USER,cpu.user());
    builder.field(Fields.IDLE,cpu.idle());
    builder.field(Fields.STOLEN,cpu.stolen());
    builder.endObject();
  }
  if (mem != null) {
    builder.startObject(Fields.MEM);
    builder.byteSizeField(Fields.FREE_IN_BYTES,Fields.FREE,mem.free);
    builder.byteSizeField(Fields.USED_IN_BYTES,Fields.USED,mem.used);
    builder.field(Fields.FREE_PERCENT,mem.freePercent());
    builder.field(Fields.USED_PERCENT,mem.usedPercent());
    builder.byteSizeField(Fields.ACTUAL_FREE_IN_BYTES,Fields.ACTUAL_FREE,mem.actualFree);
    builder.byteSizeField(Fields.ACTUAL_USED_IN_BYTES,Fields.ACTUAL_USED,mem.actualUsed);
    builder.endObject();
  }
  if (swap != null) {
    builder.startObject(Fields.SWAP);
    builder.byteSizeField(Fields.USED_IN_BYTES,Fields.USED,swap.used);
    builder.byteSizeField(Fields.FREE_IN_BYTES,Fields.FREE,swap.free);
    builder.endObject();
  }
  builder.endObject();
  return builder;
}
