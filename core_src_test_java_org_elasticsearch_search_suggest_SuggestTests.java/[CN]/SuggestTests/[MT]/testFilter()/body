{
  List<Suggest.Suggestion<? extends Suggest.Suggestion.Entry<? extends Suggest.Suggestion.Entry.Option>>> suggestions;
  CompletionSuggestion completionSuggestion=new CompletionSuggestion(randomAsciiOfLength(10),2);
  PhraseSuggestion phraseSuggestion=new PhraseSuggestion(randomAsciiOfLength(10),2);
  TermSuggestion termSuggestion=new TermSuggestion(randomAsciiOfLength(10),2,SortBy.SCORE);
  suggestions=Arrays.asList(completionSuggestion,phraseSuggestion,termSuggestion);
  Suggest suggest=new Suggest(suggestions);
  List<PhraseSuggestion> phraseSuggestions=suggest.filter(PhraseSuggestion.class);
  assertThat(phraseSuggestions.size(),equalTo(1));
  assertThat(phraseSuggestions.get(0),equalTo(phraseSuggestion));
  List<TermSuggestion> termSuggestions=suggest.filter(TermSuggestion.class);
  assertThat(termSuggestions.size(),equalTo(1));
  assertThat(termSuggestions.get(0),equalTo(termSuggestion));
  List<CompletionSuggestion> completionSuggestions=suggest.filter(CompletionSuggestion.class);
  assertThat(completionSuggestions.size(),equalTo(1));
  assertThat(completionSuggestions.get(0),equalTo(completionSuggestion));
}
