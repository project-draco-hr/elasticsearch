{
  Context ctx=Context.enter();
  try {
    ctx.setWrapFactory(wrapFactory);
    final Scriptable scope=ctx.newObject(globalScope);
    scope.setPrototype(globalScope);
    scope.setParentScope(null);
    return new SearchScript(){
      @Override public LeafSearchScript getLeafSearchScript(      LeafReaderContext context) throws IOException {
        final LeafSearchLookup leafLookup=lookup.getLeafSearchLookup(context);
        for (        Map.Entry<String,Object> entry : leafLookup.asMap().entrySet()) {
          ScriptableObject.putProperty(scope,entry.getKey(),entry.getValue());
        }
        if (vars != null) {
          for (          Map.Entry<String,Object> entry : vars.entrySet()) {
            ScriptableObject.putProperty(scope,entry.getKey(),entry.getValue());
          }
        }
        return new JavaScriptSearchScript((Script)compiledScript.compiled(),scope,leafLookup);
      }
      @Override public boolean needsScores(){
        return true;
      }
    }
;
  }
  finally {
    Context.exit();
  }
}
