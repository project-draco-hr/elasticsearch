{
  createIndex("test");
  ensureGreen();
  IndicesService indicesService=getInstanceFromNode(IndicesService.class);
  NodeEnvironment env=getInstanceFromNode(NodeEnvironment.class);
  IndexService test=indicesService.indexService("test");
  IndexShard shard=test.shard(0);
  try {
    shard.deleteShardState();
    fail("shard is active metadata delete must fail");
  }
 catch (  IllegalStateException ex) {
  }
  ShardRouting routing=shard.routingEntry();
  ShardStateMetaData shardStateMetaData=load(logger,env.availableShardPaths(shard.shardId));
  assertEquals(shardStateMetaData,getShardStateMetadata(shard));
  routing=TestShardRouting.newShardRouting(shard.shardId.index().getName(),shard.shardId.id(),routing.currentNodeId(),null,routing.primary(),ShardRoutingState.INITIALIZING,shard.shardRouting.allocationId(),shard.shardRouting.version() + 1);
  shard.updateRoutingEntry(routing,true);
  shard.deleteShardState();
  assertNull("no shard state expected after delete on initializing",load(logger,env.availableShardPaths(shard.shardId)));
}
