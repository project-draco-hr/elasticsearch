{
  IndexShard shard=newStartedShard(true);
  indexDoc(shard,"test","0","{\"foo\" : \"bar\"}");
  indexDoc(shard,"test","1","{\"foobar\" : \"bar\"}");
  shard.refresh("test");
  Engine.GetResult getResult=shard.get(new Engine.Get(false,new Term(UidFieldMapper.NAME,Uid.createUid("test","1"))));
  assertTrue(getResult.exists());
  assertNotNull(getResult.searcher());
  getResult.release();
  try (Engine.Searcher searcher=shard.acquireSearcher("test")){
    TopDocs search=searcher.searcher().search(new TermQuery(new Term("foo","bar")),10);
    assertEquals(search.totalHits,1);
    search=searcher.searcher().search(new TermQuery(new Term("foobar","bar")),10);
    assertEquals(search.totalHits,1);
  }
   IndexSearcherWrapper wrapper=new IndexSearcherWrapper(){
    @Override public DirectoryReader wrap(    DirectoryReader reader) throws IOException {
      return new FieldMaskingReader("foo",reader);
    }
    @Override public IndexSearcher wrap(    IndexSearcher searcher) throws EngineException {
      return searcher;
    }
  }
;
  closeShards(shard);
  IndexShard newShard=newShard(ShardRoutingHelper.reinitPrimary(shard.routingEntry()),shard.shardPath(),shard.indexSettings().getIndexMetaData(),wrapper);
  recoveryShardFromStore(newShard);
  try (Engine.Searcher searcher=newShard.acquireSearcher("test")){
    TopDocs search=searcher.searcher().search(new TermQuery(new Term("foo","bar")),10);
    assertEquals(search.totalHits,0);
    search=searcher.searcher().search(new TermQuery(new Term("foobar","bar")),10);
    assertEquals(search.totalHits,1);
  }
   getResult=newShard.get(new Engine.Get(false,new Term(UidFieldMapper.NAME,Uid.createUid("test","1"))));
  assertTrue(getResult.exists());
  assertNotNull(getResult.searcher());
  assertTrue(getResult.searcher().reader() instanceof FieldMaskingReader);
  getResult.release();
  closeShards(newShard);
}
