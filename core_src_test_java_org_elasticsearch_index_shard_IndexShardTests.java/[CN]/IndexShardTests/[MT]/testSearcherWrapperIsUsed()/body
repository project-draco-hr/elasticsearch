{
  createIndex("test");
  ensureGreen();
  IndicesService indicesService=getInstanceFromNode(IndicesService.class);
  IndexService indexService=indicesService.indexService("test");
  IndexShard shard=indexService.getShardOrNull(0);
  client().prepareIndex("test","test","0").setSource("{\"foo\" : \"bar\"}").setRefresh(randomBoolean()).get();
  client().prepareIndex("test","test","1").setSource("{\"foobar\" : \"bar\"}").setRefresh(true).get();
  try (Engine.Searcher searcher=shard.acquireSearcher("test")){
    TopDocs search=searcher.searcher().search(new TermQuery(new Term("foo","bar")),10);
    assertEquals(search.totalHits,1);
    search=searcher.searcher().search(new TermQuery(new Term("foobar","bar")),10);
    assertEquals(search.totalHits,1);
  }
   ShardRouting routing=new ShardRouting(shard.routingEntry());
  shard.close("simon says",true);
  IndexServicesProvider indexServices=indexService.getIndexServices();
  IndexSearcherWrapper wrapper=new IndexSearcherWrapper(){
    @Override public DirectoryReader wrap(    DirectoryReader reader) throws IOException {
      return new FieldMaskingReader("foo",reader);
    }
    @Override public IndexSearcher wrap(    EngineConfig engineConfig,    IndexSearcher searcher) throws EngineException {
      return searcher;
    }
  }
;
  IndexServicesProvider newProvider=new IndexServicesProvider(indexServices.getIndicesLifecycle(),indexServices.getThreadPool(),indexServices.getMapperService(),indexServices.getQueryParserService(),indexServices.getIndexCache(),indexServices.getIndexAliasesService(),indexServices.getIndicesQueryCache(),indexServices.getCodecService(),indexServices.getTermVectorsService(),indexServices.getIndexFieldDataService(),indexServices.getWarmer(),indexServices.getSimilarityService(),indexServices.getFactory(),indexServices.getBigArrays(),wrapper);
  IndexShard newShard=new IndexShard(shard.shardId(),shard.indexSettings,shard.shardPath(),shard.store(),newProvider);
  ShardRoutingHelper.reinit(routing);
  newShard.updateRoutingEntry(routing,false);
  DiscoveryNode localNode=new DiscoveryNode("foo",DummyTransportAddress.INSTANCE,Version.CURRENT);
  assertTrue(newShard.recoverFromStore(routing,localNode));
  routing=new ShardRouting(routing);
  ShardRoutingHelper.moveToStarted(routing);
  newShard.updateRoutingEntry(routing,true);
  try (Engine.Searcher searcher=newShard.acquireSearcher("test")){
    TopDocs search=searcher.searcher().search(new TermQuery(new Term("foo","bar")),10);
    assertEquals(search.totalHits,0);
    search=searcher.searcher().search(new TermQuery(new Term("foobar","bar")),10);
    assertEquals(search.totalHits,1);
  }
   newShard.close("just do it",randomBoolean());
}
