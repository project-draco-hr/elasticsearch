{
  createIndex("test");
  ensureGreen();
  IndicesService indicesService=getInstanceFromNode(IndicesService.class);
  IndexService test=indicesService.indexService(resolveIndex("test"));
  final IndexShard shard=test.getShardOrNull(0);
  int translogOps=1;
  client().prepareIndex("test","test","0").setSource("{}").setRefreshPolicy(randomBoolean() ? IMMEDIATE : NONE).get();
  if (randomBoolean()) {
    client().admin().indices().prepareFlush().get();
    translogOps=0;
  }
  ShardRouting routing=shard.routingEntry();
  test.removeShard(0,"b/c simon says so");
  routing=ShardRoutingHelper.reinit(routing);
  IndexShard newShard=test.createShard(routing);
  newShard.updateRoutingEntry(routing);
  DiscoveryNode localNode=new DiscoveryNode("foo",DummyTransportAddress.INSTANCE,emptyMap(),emptySet(),Version.CURRENT);
  newShard.markAsRecovering("store",new RecoveryState(newShard.shardId(),routing.primary(),RecoveryState.Type.STORE,localNode,localNode));
  assertTrue(newShard.recoverFromStore());
  assertEquals(translogOps,newShard.recoveryState().getTranslog().recoveredOperations());
  assertEquals(translogOps,newShard.recoveryState().getTranslog().totalOperations());
  assertEquals(translogOps,newShard.recoveryState().getTranslog().totalOperationsOnStart());
  assertEquals(100.0f,newShard.recoveryState().getTranslog().recoveredPercent(),0.01f);
  newShard.updateRoutingEntry(routing.moveToStarted());
  SearchResponse response=client().prepareSearch().get();
  assertHitCount(response,1);
}
