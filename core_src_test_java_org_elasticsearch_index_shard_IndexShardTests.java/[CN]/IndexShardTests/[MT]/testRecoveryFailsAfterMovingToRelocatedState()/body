{
  createIndex("test");
  ensureGreen();
  IndicesService indicesService=getInstanceFromNode(IndicesService.class);
  IndexService test=indicesService.indexService("test");
  final IndexShard shard=test.getShardOrNull(0);
  ShardRouting origRouting=shard.routingEntry();
  assertThat(shard.state(),equalTo(IndexShardState.STARTED));
  ShardRouting inRecoveryRouting=new ShardRouting(origRouting);
  ShardRoutingHelper.relocate(inRecoveryRouting,"some_node");
  shard.updateRoutingEntry(inRecoveryRouting,true);
  shard.relocated("simulate mark as relocated");
  assertThat(shard.state(),equalTo(IndexShardState.RELOCATED));
  ShardRouting failedRecoveryRouting=new ShardRouting(origRouting);
  try {
    shard.updateRoutingEntry(failedRecoveryRouting,true);
    fail("Expected IndexShardRelocatedException");
  }
 catch (  IndexShardRelocatedException expected) {
  }
}
