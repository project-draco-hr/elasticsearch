{
  XContentParser.Token token;
  if (parser.currentToken() != XContentParser.Token.START_OBJECT) {
    token=parser.nextToken();
    if (token != XContentParser.Token.START_OBJECT) {
      throw new ParsingException(parser.getTokenLocation(),"[_na] query malformed, must start with start_object");
    }
  }
  token=parser.nextToken();
  if (token == XContentParser.Token.END_OBJECT) {
    String msg="query malformed, empty clause found at [" + parser.getTokenLocation() + "]";
    DEPRECATION_LOGGER.deprecated(msg);
    if (parseFieldMatcher.isStrict()) {
      throw new IllegalArgumentException(msg);
    }
    return Optional.empty();
  }
  if (token != XContentParser.Token.FIELD_NAME) {
    throw new ParsingException(parser.getTokenLocation(),"[_na] query malformed, no field after start_object");
  }
  String queryName=parser.currentName();
  token=parser.nextToken();
  if (token != XContentParser.Token.START_OBJECT) {
    throw new ParsingException(parser.getTokenLocation(),"[" + queryName + "] query malformed, no start_object after query name");
  }
  @SuppressWarnings("unchecked") Optional<QueryBuilder> result=(Optional<QueryBuilder>)indicesQueriesRegistry.lookup(queryName,parseFieldMatcher,parser.getTokenLocation()).fromXContent(this);
  if (parser.currentToken() == XContentParser.Token.END_OBJECT) {
    parser.nextToken();
  }
  return result;
}
