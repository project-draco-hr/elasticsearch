{
  InternalTestCluster.Async<List<String>> replicas=internalCluster().startNodesAsync(1);
  Path baseTempDir=createTempDir();
  Settings.Builder nodeSettings=Settings.builder().put(Environment.PATH_DATA_SETTING.getKey(),baseTempDir.resolve("single-path").toAbsolutePath()).put(Node.NODE_MASTER_SETTING.getKey(),false);
  InternalTestCluster.Async<String> singleDataPathNode=internalCluster().startNodeAsync(nodeSettings.build());
  nodeSettings=Settings.builder().put(Environment.PATH_DATA_SETTING.getKey(),baseTempDir.resolve("multi-path1").toAbsolutePath() + "," + baseTempDir.resolve("multi-path2").toAbsolutePath()).put(Node.NODE_MASTER_SETTING.getKey(),false);
  InternalTestCluster.Async<String> multiDataPathNode=internalCluster().startNodeAsync(nodeSettings.build());
  singleDataPathNodeName=singleDataPathNode.get();
  Path[] nodePaths=internalCluster().getInstance(NodeEnvironment.class,singleDataPathNodeName).nodeDataPaths();
  assertEquals(1,nodePaths.length);
  singleDataPath=nodePaths[0].resolve(NodeEnvironment.INDICES_FOLDER);
  assertFalse(Files.exists(singleDataPath));
  Files.createDirectories(singleDataPath);
  logger.info("--> Single data path: {}",singleDataPath);
  multiDataPathNodeName=multiDataPathNode.get();
  nodePaths=internalCluster().getInstance(NodeEnvironment.class,multiDataPathNodeName).nodeDataPaths();
  assertEquals(2,nodePaths.length);
  multiDataPath=new Path[]{nodePaths[0].resolve(NodeEnvironment.INDICES_FOLDER),nodePaths[1].resolve(NodeEnvironment.INDICES_FOLDER)};
  assertFalse(Files.exists(multiDataPath[0]));
  assertFalse(Files.exists(multiDataPath[1]));
  Files.createDirectories(multiDataPath[0]);
  Files.createDirectories(multiDataPath[1]);
  logger.info("--> Multi data paths: {}, {}",multiDataPath[0],multiDataPath[1]);
  replicas.get();
}
