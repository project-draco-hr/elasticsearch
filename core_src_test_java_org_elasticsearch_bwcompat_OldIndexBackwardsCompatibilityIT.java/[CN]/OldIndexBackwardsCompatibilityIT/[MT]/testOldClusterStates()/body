{
  MetaDataStateFormat<MetaData> globalFormat=new MetaDataStateFormat<MetaData>(XContentType.JSON,"global-"){
    @Override public void toXContent(    XContentBuilder builder,    MetaData state) throws IOException {
      throw new UnsupportedOperationException();
    }
    @Override public MetaData fromXContent(    XContentParser parser) throws IOException {
      return MetaData.Builder.fromXContent(parser);
    }
  }
;
  MetaDataStateFormat<IndexMetaData> indexFormat=new MetaDataStateFormat<IndexMetaData>(XContentType.JSON,"state-"){
    @Override public void toXContent(    XContentBuilder builder,    IndexMetaData state) throws IOException {
      throw new UnsupportedOperationException();
    }
    @Override public IndexMetaData fromXContent(    XContentParser parser) throws IOException {
      return IndexMetaData.Builder.fromXContent(parser);
    }
  }
;
  Collections.shuffle(indexes,random());
  for (  String indexFile : indexes) {
    String indexName=indexFile.replace(".zip","").toLowerCase(Locale.ROOT).replace("unsupported-","index-");
    Path nodeDir=getNodeDir(indexFile);
    logger.info("Parsing cluster state files from index [" + indexName + "]");
    assertNotNull(globalFormat.loadLatestState(logger,nodeDir));
    Path indexDir=nodeDir.resolve("indices").resolve(indexName);
    assertNotNull(indexFormat.loadLatestState(logger,indexDir));
  }
}
