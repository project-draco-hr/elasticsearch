{
  final String[] files=directory.listAll();
  List<CorruptIndexException> ex=new ArrayList<>();
  for (  String file : files) {
    if (file.startsWith(CORRUPTED)) {
      try (ChecksumIndexInput input=directory.openChecksumInput(file,IOContext.READONCE)){
        int version=CodecUtil.checkHeader(input,CODEC,VERSION_START,VERSION);
        String msg=input.readString();
        StringBuilder builder=new StringBuilder(shardId.toString());
        builder.append(" Preexisting corrupted index [");
        builder.append(file).append("] caused by: ");
        builder.append(msg);
        if (version == VERSION_STACK_TRACE) {
          builder.append(System.lineSeparator());
          builder.append(input.readString());
        }
        ex.add(new CorruptIndexException(builder.toString()));
        CodecUtil.checkFooter(input);
      }
     }
  }
  if (ex.isEmpty() == false) {
    ExceptionsHelper.rethrowAndSuppress(ex);
  }
}
