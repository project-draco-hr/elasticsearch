{
  final RecoveryDiff recoveryDiff=targetMetaData.recoveryDiff(sourceMetaData);
  if (recoveryDiff.identical.size() != recoveryDiff.size()) {
    if (recoveryDiff.missing.isEmpty()) {
      for (      StoreFileMetaData meta : recoveryDiff.different) {
        StoreFileMetaData local=targetMetaData.get(meta.name());
        StoreFileMetaData remote=sourceMetaData.get(meta.name());
        final boolean same=local.isSame(remote);
        final boolean hashAndLengthEqual=(local.checksum() == null && remote.checksum() == null && local.hash().equals(remote.hash()) && local.length() == remote.length());
        final boolean consistent=hashAndLengthEqual || same;
        if (consistent == false) {
          logger.debug("Files are different on the recovery target: {} ",recoveryDiff);
          throw new ElasticsearchIllegalStateException("local version: " + local + " is different from remote version after recovery: "+ remote,null);
        }
      }
    }
 else {
      logger.debug("Files are missing on the recovery target: {} ",recoveryDiff);
      throw new ElasticsearchIllegalStateException("Files are missing on the recovery target: [different=" + recoveryDiff.different + ", missing="+ recoveryDiff.missing+ ']',null);
    }
  }
}
