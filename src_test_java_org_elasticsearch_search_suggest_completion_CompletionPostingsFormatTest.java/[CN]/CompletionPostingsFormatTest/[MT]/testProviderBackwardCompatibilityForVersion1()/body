{
  AnalyzingCompletionLookupProviderV1 providerV1=new AnalyzingCompletionLookupProviderV1(true,false,true,true);
  AnalyzingCompletionLookupProvider currentProvider=new AnalyzingCompletionLookupProvider(true,false,true,true);
  RAMDirectory dir=new RAMDirectory();
  IndexOutput output=dir.createOutput("foo.txt",IOContext.DEFAULT);
  FieldsConsumer consumer=providerV1.consumer(output);
  FieldInfo fieldInfo=new FieldInfo("foo",true,1,false,true,true,IndexOptions.DOCS_AND_FREQS_AND_POSITIONS,DocValuesType.SORTED,DocValuesType.BINARY,new HashMap<String,String>());
  TermsConsumer addField=consumer.addField(fieldInfo);
  PostingsConsumer postingsConsumer=addField.startTerm(new BytesRef("foofightersgenerator"));
  postingsConsumer.startDoc(0,1);
  postingsConsumer.addPosition(256 - 2,providerV1.buildPayload(new BytesRef("Generator - Foo Fighters"),9,new BytesRef("id:10")),0,1);
  postingsConsumer.finishDoc();
  addField.finishTerm(new BytesRef("foofightersgenerator"),new TermStats(1,1));
  addField.startTerm(new BytesRef("generator"));
  postingsConsumer.startDoc(0,1);
  postingsConsumer.addPosition(256 - 1,providerV1.buildPayload(new BytesRef("Generator - Foo Fighters"),9,new BytesRef("id:10")),0,1);
  postingsConsumer.finishDoc();
  addField.finishTerm(new BytesRef("generator"),new TermStats(1,1));
  addField.finish(1,1,1);
  consumer.close();
  output.close();
  IndexInput input=dir.openInput("foo.txt",IOContext.DEFAULT);
  LookupFactory load=currentProvider.load(input);
  PostingsFormatProvider format=new PreBuiltPostingsFormatProvider(new ElasticSearch090PostingsFormat());
  NamedAnalyzer analyzer=new NamedAnalyzer("foo",new StandardAnalyzer(TEST_VERSION_CURRENT));
  AnalyzingCompletionLookupProvider.AnalyzingSuggestHolder analyzingSuggestHolder=load.getAnalyzingSuggestHolder(new CompletionFieldMapper(new Names("foo"),analyzer,analyzer,format,null,true,true,true,Integer.MAX_VALUE));
  assertThat(analyzingSuggestHolder.sepLabel,is(AnalyzingCompletionLookupProviderV1.SEP_LABEL));
  assertThat(analyzingSuggestHolder.payloadSep,is(AnalyzingCompletionLookupProviderV1.PAYLOAD_SEP));
  assertThat(analyzingSuggestHolder.endByte,is(AnalyzingCompletionLookupProviderV1.END_BYTE));
  dir.close();
}
