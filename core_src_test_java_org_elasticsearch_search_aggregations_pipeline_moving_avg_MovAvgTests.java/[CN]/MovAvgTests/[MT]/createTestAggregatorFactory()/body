{
  String name=randomAsciiOfLengthBetween(3,20);
  String[] bucketsPaths=new String[1];
  bucketsPaths[0]=randomAsciiOfLengthBetween(3,20);
  Factory factory=new Factory(name,bucketsPaths);
  if (randomBoolean()) {
    factory.format(randomAsciiOfLengthBetween(1,10));
  }
  if (randomBoolean()) {
    factory.gapPolicy(randomFrom(GapPolicy.values()));
  }
  if (randomBoolean()) {
switch (randomInt(4)) {
case 0:
      factory.model(new SimpleModel());
    factory.window(randomIntBetween(1,100));
  break;
case 1:
factory.model(new LinearModel());
factory.window(randomIntBetween(1,100));
break;
case 2:
if (randomBoolean()) {
factory.model(new EwmaModel());
factory.window(randomIntBetween(1,100));
}
 else {
factory.model(new EwmaModel(randomDouble()));
factory.window(randomIntBetween(1,100));
}
break;
case 3:
if (randomBoolean()) {
factory.model(new HoltLinearModel());
factory.window(randomIntBetween(1,100));
}
 else {
factory.model(new HoltLinearModel(randomDouble(),randomDouble()));
factory.window(randomIntBetween(1,100));
}
break;
case 4:
default :
if (randomBoolean()) {
factory.model(new HoltWintersModel());
factory.window(randomIntBetween(2,100));
}
 else {
int period=randomIntBetween(1,100);
factory.model(new HoltWintersModel(randomDouble(),randomDouble(),randomDouble(),period,randomFrom(SeasonalityType.values()),randomBoolean()));
factory.window(randomIntBetween(2 * period,200 * period));
}
break;
}
}
factory.predict(randomIntBetween(1,50));
if (factory.model().canBeMinimized() && randomBoolean()) {
factory.minimize(randomBoolean());
}
return factory;
}
