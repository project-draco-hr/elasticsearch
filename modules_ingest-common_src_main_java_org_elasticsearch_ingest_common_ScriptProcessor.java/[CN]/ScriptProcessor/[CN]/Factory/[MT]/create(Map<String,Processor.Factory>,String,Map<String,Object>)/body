{
  String lang=readStringProperty(TYPE,processorTag,config,"lang");
  String inline=readOptionalStringProperty(TYPE,processorTag,config,"inline");
  String file=readOptionalStringProperty(TYPE,processorTag,config,"file");
  String id=readOptionalStringProperty(TYPE,processorTag,config,"id");
  Map<String,?> params=readOptionalMap(TYPE,processorTag,config,"params");
  boolean containsNoScript=!hasLength(file) && !hasLength(id) && !hasLength(inline);
  if (containsNoScript) {
    throw newConfigurationException(TYPE,processorTag,null,"Need [file], [id], or [inline] parameter to refer to scripts");
  }
  boolean moreThanOneConfigured=(Strings.hasLength(file) && Strings.hasLength(id)) || (Strings.hasLength(file) && Strings.hasLength(inline)) || (Strings.hasLength(id) && Strings.hasLength(inline));
  if (moreThanOneConfigured) {
    throw newConfigurationException(TYPE,processorTag,null,"Only one of [file], [id], or [inline] may be configured");
  }
  if (params == null) {
    params=emptyMap();
  }
  final Script script;
  if (Strings.hasLength(file)) {
    script=new Script(file,FILE,lang,params);
  }
 else   if (Strings.hasLength(inline)) {
    script=new Script(inline,INLINE,lang,params);
  }
 else   if (Strings.hasLength(id)) {
    script=new Script(id,STORED,lang,params);
  }
 else {
    throw newConfigurationException(TYPE,processorTag,null,"Could not initialize script");
  }
  return new ScriptProcessor(processorTag,script,scriptService);
}
