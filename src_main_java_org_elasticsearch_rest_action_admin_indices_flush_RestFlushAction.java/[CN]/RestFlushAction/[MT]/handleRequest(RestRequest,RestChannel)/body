{
  FlushRequest flushRequest=new FlushRequest(RestActions.splitIndices(request.param("index")));
  flushRequest.listenerThreaded(false);
  flushRequest.ignoreIndices(IgnoreIndices.fromString(request.param("ignore_indices")));
  BroadcastOperationThreading operationThreading=BroadcastOperationThreading.fromString(request.param("operationThreading"),BroadcastOperationThreading.SINGLE_THREAD);
  if (operationThreading == BroadcastOperationThreading.NO_THREADS) {
    operationThreading=BroadcastOperationThreading.THREAD_PER_SHARD;
  }
  flushRequest.operationThreading(operationThreading);
  flushRequest.refresh(request.paramAsBoolean("refresh",flushRequest.refresh()));
  flushRequest.full(request.paramAsBoolean("full",flushRequest.full()));
  flushRequest.force(request.paramAsBoolean("force",flushRequest.force()));
  client.admin().indices().flush(flushRequest,new ActionListener<FlushResponse>(){
    @Override public void onResponse(    FlushResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        builder.field("ok",true);
        buildBroadcastShardsHeader(builder,response);
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
