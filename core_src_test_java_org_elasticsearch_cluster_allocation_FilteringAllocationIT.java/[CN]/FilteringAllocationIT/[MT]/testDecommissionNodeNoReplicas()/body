{
  logger.info("--> starting 2 nodes");
  List<String> nodesIds=internalCluster().startNodesAsync(2).get();
  final String node_0=nodesIds.get(0);
  final String node_1=nodesIds.get(1);
  assertThat(cluster().size(),equalTo(2));
  logger.info("--> creating an index with no replicas");
  client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_replicas",0)).execute().actionGet();
  ensureGreen();
  logger.info("--> index some data");
  for (int i=0; i < 100; i++) {
    client().prepareIndex("test","type",Integer.toString(i)).setSource("field","value" + i).execute().actionGet();
  }
  client().admin().indices().prepareRefresh().execute().actionGet();
  assertThat(client().prepareSearch().setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(100L));
  logger.info("--> decommission the second node");
  client().admin().cluster().prepareUpdateSettings().setTransientSettings(settingsBuilder().put("cluster.routing.allocation.exclude._name",node_1)).execute().actionGet();
  waitForRelocation();
  logger.info("--> verify all are allocated on node1 now");
  ClusterState clusterState=client().admin().cluster().prepareState().execute().actionGet().getState();
  for (  IndexRoutingTable indexRoutingTable : clusterState.routingTable()) {
    for (    IndexShardRoutingTable indexShardRoutingTable : indexRoutingTable) {
      for (      ShardRouting shardRouting : indexShardRoutingTable) {
        assertThat(clusterState.nodes().get(shardRouting.currentNodeId()).getName(),equalTo(node_0));
      }
    }
  }
  client().admin().indices().prepareRefresh().execute().actionGet();
  assertThat(client().prepareSearch().setSize(0).setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(),equalTo(100L));
}
