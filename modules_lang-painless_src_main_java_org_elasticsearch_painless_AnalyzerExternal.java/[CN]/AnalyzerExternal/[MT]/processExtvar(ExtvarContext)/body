{
  final ExtNodeMetadata varenmd=metadata.getExtNodeMetadata(ctx);
  final ParserRuleContext parent=varenmd.parent;
  final ExternalMetadata parentemd=metadata.getExternalMetadata(parent);
  final IdentifierContext idctx=ctx.identifier();
  final String id=idctx.getText();
  final ExtdotContext dotctx=ctx.extdot();
  final ExtbraceContext bracectx=ctx.extbrace();
  final boolean type=utility.isValidType(idctx,false);
  if (type) {
    if (parentemd.current != null || dotctx == null || bracectx != null) {
      throw new IllegalArgumentException(AnalyzerUtility.error(ctx) + "Unexpected static type [" + id+ "].");
    }
    varenmd.type=definition.getType(id);
    parentemd.current=varenmd.type;
    parentemd.statik=true;
    metadata.createExtNodeMetadata(parent,dotctx);
    analyzer.visit(dotctx);
  }
 else {
    utility.isValidIdentifier(idctx,true);
    if (parentemd.current != null) {
      throw new IllegalStateException(AnalyzerUtility.error(ctx) + "Unexpected variable [" + id+ "] load.");
    }
    varenmd.last=parentemd.scope == 0 && dotctx == null && bracectx == null;
    final Variable variable=utility.getVariable(id);
    if (variable == null) {
      throw new IllegalArgumentException(AnalyzerUtility.error(ctx) + "Unknown variable [" + id+ "].");
    }
    if ("_score".equals(id) || "doc".equals(id) || "ctx".equals(id)) {
      if (varenmd.last && parentemd.storeExpr != null) {
        throw new IllegalArgumentException(AnalyzerUtility.error(ctx) + "Variable [" + id+ "] is read-only.");
      }
      if ("_score".equals(id)) {
        metadata.scoreValueUsed=true;
      }
 else       if ("ctx".equals(id)) {
        metadata.ctxValueUsed=true;
      }
    }
    varenmd.target=variable.slot;
    varenmd.type=variable.type;
    analyzeLoadStoreExternal(ctx);
    parentemd.current=varenmd.type;
    if (dotctx != null) {
      metadata.createExtNodeMetadata(parent,dotctx);
      analyzer.visit(dotctx);
    }
 else     if (bracectx != null) {
      metadata.createExtNodeMetadata(parent,bracectx);
      analyzer.visit(bracectx);
    }
  }
}
