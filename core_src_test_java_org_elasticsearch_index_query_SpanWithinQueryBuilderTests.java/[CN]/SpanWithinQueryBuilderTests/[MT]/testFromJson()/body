{
  String json="{\n" + "  \"span_within\" : {\n" + "    \"big\" : {\n"+ "      \"span_near\" : {\n"+ "        \"clauses\" : [ {\n"+ "          \"span_term\" : {\n"+ "            \"field1\" : {\n"+ "              \"value\" : \"bar\",\n"+ "              \"boost\" : 1.0\n"+ "            }\n"+ "          }\n"+ "        }, {\n"+ "          \"span_term\" : {\n"+ "            \"field1\" : {\n"+ "              \"value\" : \"baz\",\n"+ "              \"boost\" : 1.0\n"+ "            }\n"+ "          }\n"+ "        } ],\n"+ "        \"slop\" : 5,\n"+ "        \"in_order\" : true,\n"+ "        \"collect_payloads\" : true,\n"+ "        \"boost\" : 1.0\n"+ "      }\n"+ "    },\n"+ "    \"little\" : {\n"+ "      \"span_term\" : {\n"+ "        \"field1\" : {\n"+ "          \"value\" : \"foo\",\n"+ "          \"boost\" : 1.0\n"+ "        }\n"+ "      }\n"+ "    },\n"+ "    \"boost\" : 1.0\n"+ "  }\n"+ "}";
  SpanWithinQueryBuilder parsed=(SpanWithinQueryBuilder)parseQuery(json);
  checkGeneratedJson(json,parsed);
  assertEquals(json,"foo",((SpanTermQueryBuilder)parsed.littleQuery()).value());
  assertEquals(json,2,((SpanNearQueryBuilder)parsed.bigQuery()).clauses().size());
}
