{
  if (tru != null || fals != null) {
    if (operation == Operation.AND) {
      final Label localfals=fals == null ? new Label() : fals;
      left.fals=localfals;
      right.tru=tru;
      right.fals=fals;
      left.write(settings,adapter);
      right.write(settings,adapter);
      if (fals == null) {
        adapter.mark(localfals);
      }
    }
 else     if (operation == Operation.OR) {
      final Label localtru=tru == null ? new Label() : tru;
      left.tru=localtru;
      right.tru=tru;
      right.fals=fals;
      left.write(settings,adapter);
      right.write(settings,adapter);
      if (tru == null) {
        adapter.mark(localtru);
      }
    }
 else {
      throw new IllegalStateException(error("Illegal tree structure."));
    }
  }
 else {
    if (operation == Operation.AND) {
      final Label localfals=new Label();
      final Label end=new Label();
      left.fals=localfals;
      right.fals=localfals;
      left.write(settings,adapter);
      right.write(settings,adapter);
      adapter.push(true);
      adapter.goTo(end);
      adapter.mark(localfals);
      adapter.push(false);
      adapter.mark(end);
    }
 else     if (operation == Operation.OR) {
      final Label localtru=new Label();
      final Label localfals=new Label();
      final Label end=new Label();
      left.tru=localtru;
      right.fals=localfals;
      left.write(settings,adapter);
      right.write(settings,adapter);
      adapter.mark(localtru);
      adapter.push(true);
      adapter.goTo(end);
      adapter.mark(localfals);
      adapter.push(false);
      adapter.mark(end);
    }
 else {
      throw new IllegalStateException(error("Illegal tree structure."));
    }
  }
}
