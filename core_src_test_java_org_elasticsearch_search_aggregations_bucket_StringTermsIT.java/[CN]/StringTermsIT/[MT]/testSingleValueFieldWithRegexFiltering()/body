{
  SearchResponse response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).includeExclude(new IncludeExclude("val00.+",null))).execute().actionGet();
  assertSearchResponse(response);
  Terms terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(10));
  for (int i=0; i < 10; i++) {
    Terms.Bucket bucket=terms.getBucketByKey("val00" + i);
    assertThat(bucket,notNullValue());
    assertThat(key(bucket),equalTo("val00" + i));
    assertThat(bucket.getDocCount(),equalTo(1L));
  }
  response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).includeExclude(new IncludeExclude("val00.+","(val000|val001)"))).execute().actionGet();
  assertSearchResponse(response);
  terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(8));
  for (int i=2; i < 10; i++) {
    Terms.Bucket bucket=terms.getBucketByKey("val00" + i);
    assertThat(bucket,notNullValue());
    assertThat(key(bucket),equalTo("val00" + i));
    assertThat(bucket.getDocCount(),equalTo(1L));
  }
  response=client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).includeExclude(new IncludeExclude(null,new RegExp("val0[1-9]+.+")))).execute().actionGet();
  assertSearchResponse(response);
  terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  assertThat(terms.getBuckets().size(),equalTo(10));
  for (int i=0; i < 10; i++) {
    Terms.Bucket bucket=terms.getBucketByKey("val00" + i);
    assertThat(bucket,notNullValue());
    assertThat(key(bucket),equalTo("val00" + i));
    assertThat(bucket.getDocCount(),equalTo(1L));
  }
}
