{
  RestoreSource restoreSource=indexShard.routingEntry().restoreSource();
  final RecoveryState.Translog translogState=indexShard.recoveryState().getTranslog();
  if (restoreSource == null) {
    throw new IndexShardRestoreFailedException(shardId,"empty restore source");
  }
  if (logger.isTraceEnabled()) {
    logger.trace("[{}] restoring shard [{}]",restoreSource.snapshot(),shardId);
  }
  try {
    translogState.totalOperations(0);
    translogState.totalOperationsOnStart(0);
    indexShard.prepareForIndexRecovery();
    ShardId snapshotShardId=shardId;
    if (!shardId.getIndexName().equals(restoreSource.index())) {
      snapshotShardId=new ShardId(restoreSource.index(),IndexMetaData.INDEX_UUID_NA_VALUE,shardId.id());
    }
    repository.restoreShard(indexShard,restoreSource.snapshot().getSnapshotId(),restoreSource.version(),snapshotShardId,indexShard.recoveryState());
    indexShard.skipTranslogRecovery();
    indexShard.finalizeRecovery();
    indexShard.postRecovery("restore done");
  }
 catch (  Exception e) {
    throw new IndexShardRestoreFailedException(shardId,"restore failed",e);
  }
}
