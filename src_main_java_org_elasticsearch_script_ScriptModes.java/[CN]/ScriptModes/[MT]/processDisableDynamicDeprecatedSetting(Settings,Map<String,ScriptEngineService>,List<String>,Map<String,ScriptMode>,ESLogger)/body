{
  String disableDynamicSetting=settings.get(ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING);
  if (disableDynamicSetting != null) {
    if (processedSettings.isEmpty()) {
      ScriptService.DynamicScriptDisabling dynamicScriptDisabling=ScriptService.DynamicScriptDisabling.parse(disableDynamicSetting);
switch (dynamicScriptDisabling) {
case EVERYTHING_ALLOWED:
        addGlobalScriptTypeModes(scriptEngines.keySet(),ScriptType.INDEXED,ScriptMode.ON,scriptModes);
      addGlobalScriptTypeModes(scriptEngines.keySet(),ScriptType.INLINE,ScriptMode.ON,scriptModes);
    break;
case ONLY_DISK_ALLOWED:
  addGlobalScriptTypeModes(scriptEngines.keySet(),ScriptType.INDEXED,ScriptMode.OFF,scriptModes);
addGlobalScriptTypeModes(scriptEngines.keySet(),ScriptType.INLINE,ScriptMode.OFF,scriptModes);
break;
}
logger.warn("deprecated setting [{}] is set, replace with fine-grained scripting settings (e.g. script.inline, script.indexed, script.file)",ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING);
}
 else {
processedSettings.add(ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING + ": " + disableDynamicSetting);
throw new ElasticsearchIllegalArgumentException("conflicting scripting settings have been specified, use either " + ScriptService.DISABLE_DYNAMIC_SCRIPTING_SETTING + " (deprecated) or the newer fine-grained settings (e.g. script.inline, script.indexed, script.file), not both at the same time:\n"+ processedSettings);
}
}
}
