{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("int").field("type","integer").field("precision_step","1").endObject().startObject("float").field("type","float").field("precision_step","2").endObject().startObject("long").field("type","long").field("precision_step","1").endObject().startObject("double").field("type","double").field("precision_step","2").endObject().startObject("short").field("type","short").field("precision_step","1").endObject().startObject("byte").field("type","byte").field("precision_step","2").endObject().startObject("date").field("type","date").field("precision_step","1").endObject().startObject("ip").field("type","ip").field("precision_step","2").endObject().endObject().endObject().endObject().string();
  DocumentMapper mapper=createIndex("test").mapperService().documentMapperParser().parse(mapping);
  ParsedDocument doc=mapper.parse("test","type","1",XContentFactory.jsonBuilder().startObject().field("int","100").field("float","100.0").field("long","5000").field("double","34.545").field("short","1645").field("byte","50").field("date","2010-01-01").field("ip","255.255.255.255").endObject().bytes());
  assertEquals(1,doc.docs().size());
  Document luceneDoc=doc.docs().get(0);
  assertPrecisionStepEquals(1,luceneDoc.getField("int"));
  assertPrecisionStepEquals(2,luceneDoc.getField("float"));
  assertPrecisionStepEquals(1,luceneDoc.getField("long"));
  assertPrecisionStepEquals(2,luceneDoc.getField("double"));
  assertPrecisionStepEquals(1,luceneDoc.getField("short"));
  assertPrecisionStepEquals(2,luceneDoc.getField("byte"));
  assertPrecisionStepEquals(1,luceneDoc.getField("date"));
  assertPrecisionStepEquals(2,luceneDoc.getField("ip"));
}
