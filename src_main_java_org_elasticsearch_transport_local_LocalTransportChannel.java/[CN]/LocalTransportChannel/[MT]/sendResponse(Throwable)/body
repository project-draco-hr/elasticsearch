{
  CachedStreamOutput.Entry cachedEntry=CachedStreamOutput.popEntry();
  try {
    BytesStreamOutput stream;
    try {
      stream=cachedEntry.bytes();
      writeResponseExceptionHeader(stream);
      RemoteTransportException tx=new RemoteTransportException(targetTransport.nodeName(),targetTransport.boundAddress().boundAddress(),action,error);
      ThrowableObjectOutputStream too=new ThrowableObjectOutputStream(stream);
      too.writeObject(tx);
      too.close();
    }
 catch (    NotSerializableException e) {
      cachedEntry.reset();
      stream=cachedEntry.bytes();
      writeResponseExceptionHeader(stream);
      RemoteTransportException tx=new RemoteTransportException(targetTransport.nodeName(),targetTransport.boundAddress().boundAddress(),action,new NotSerializableTransportException(error));
      ThrowableObjectOutputStream too=new ThrowableObjectOutputStream(stream);
      too.writeObject(tx);
      too.close();
    }
    final byte[] data=stream.copiedByteArray();
    targetTransport.threadPool().generic().execute(new Runnable(){
      @Override public void run(){
        targetTransport.messageReceived(data,action,sourceTransport,null);
      }
    }
);
  }
  finally {
    CachedStreamOutput.pushEntry(cachedEntry);
  }
}
