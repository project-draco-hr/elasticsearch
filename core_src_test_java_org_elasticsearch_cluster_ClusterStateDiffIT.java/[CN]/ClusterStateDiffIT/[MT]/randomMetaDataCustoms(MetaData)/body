{
  return randomParts(metaData,"custom",new RandomPart<MetaData.Custom>(){
    @Override public ImmutableOpenMap<String,MetaData.Custom> parts(    MetaData metaData){
      return metaData.customs();
    }
    @Override public MetaData.Builder put(    MetaData.Builder builder,    MetaData.Custom part){
      return builder.putCustom(part.type(),part);
    }
    @Override public MetaData.Builder remove(    MetaData.Builder builder,    String name){
      if (IndexGraveyard.TYPE.equals(name)) {
        return builder.indexGraveyard(IndexGraveyard.builder().build());
      }
 else {
        return builder.removeCustom(name);
      }
    }
    @Override public MetaData.Custom randomCreate(    String name){
      if (randomBoolean()) {
        return new RepositoriesMetaData();
      }
 else {
        return IndexGraveyardTests.createRandom();
      }
    }
    @Override public MetaData.Custom randomChange(    MetaData.Custom part){
      return part;
    }
  }
);
}
