{
  boolean isFailure=randomBoolean();
  SimulateDocumentBaseResult simulateDocumentBaseResult;
  if (isFailure) {
    simulateDocumentBaseResult=new SimulateDocumentBaseResult(new IllegalArgumentException("test"));
  }
 else {
    IngestDocument ingestDocument=RandomDocumentPicks.randomIngestDocument(random());
    simulateDocumentBaseResult=new SimulateDocumentBaseResult(ingestDocument);
  }
  BytesStreamOutput out=new BytesStreamOutput();
  simulateDocumentBaseResult.writeTo(out);
  StreamInput streamInput=StreamInput.wrap(out.bytes());
  SimulateDocumentBaseResult otherSimulateDocumentBaseResult=new SimulateDocumentBaseResult(streamInput);
  if (isFailure) {
    assertThat(otherSimulateDocumentBaseResult.getIngestDocument(),equalTo(simulateDocumentBaseResult.getIngestDocument()));
    assertThat(otherSimulateDocumentBaseResult.getFailure(),instanceOf(IllegalArgumentException.class));
    IllegalArgumentException e=(IllegalArgumentException)otherSimulateDocumentBaseResult.getFailure();
    assertThat(e.getMessage(),equalTo("test"));
  }
 else {
    assertIngestDocument(otherSimulateDocumentBaseResult.getIngestDocument(),simulateDocumentBaseResult.getIngestDocument());
  }
}
