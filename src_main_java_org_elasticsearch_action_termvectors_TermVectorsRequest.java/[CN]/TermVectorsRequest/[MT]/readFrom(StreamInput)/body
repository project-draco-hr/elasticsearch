{
  super.readFrom(in);
  if (in.getVersion().before(Version.V_1_4_0_Beta1)) {
    in.readString();
  }
  type=in.readString();
  id=in.readString();
  if (in.getVersion().onOrAfter(Version.V_1_4_0_Beta1)) {
    if (in.readBoolean()) {
      doc=in.readBytesReference();
    }
  }
  routing=in.readOptionalString();
  preference=in.readOptionalString();
  long flags=in.readVLong();
  flagsEnum.clear();
  for (  Flag flag : Flag.values()) {
    if ((flags & (1 << flag.ordinal())) != 0) {
      flagsEnum.add(flag);
    }
  }
  int numSelectedFields=in.readVInt();
  if (numSelectedFields > 0) {
    selectedFields=new HashSet<>();
    for (int i=0; i < numSelectedFields; i++) {
      selectedFields.add(in.readString());
    }
  }
  if (in.getVersion().onOrAfter(Version.V_1_5_0)) {
    if (in.readBoolean()) {
      perFieldAnalyzer=readPerFieldAnalyzer(in.readMap());
    }
    this.realtime=in.readBoolean();
  }
}
