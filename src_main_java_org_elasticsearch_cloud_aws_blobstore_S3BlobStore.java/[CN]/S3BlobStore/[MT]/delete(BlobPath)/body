{
  ObjectListing prevListing=null;
  int objectCount=0;
  DeleteObjectsRequest multiObjectDeleteRequest=null;
  ArrayList<KeyVersion> keys=new ArrayList<KeyVersion>();
  while (true) {
    ObjectListing list;
    if (prevListing != null) {
      list=client.listNextBatchOfObjects(prevListing);
    }
 else {
      list=client.listObjects(bucket,path.buildAsString("/") + "/");
      multiObjectDeleteRequest=new DeleteObjectsRequest(list.getBucketName());
    }
    for (    S3ObjectSummary summary : list.getObjectSummaries()) {
      objectCount++;
      keys.add(new KeyVersion(summary.getKey()));
      if (objectCount > 500) {
        multiObjectDeleteRequest.setKeys(keys);
        client.deleteObjects(multiObjectDeleteRequest);
        multiObjectDeleteRequest=new DeleteObjectsRequest(list.getBucketName());
        keys.clear();
        objectCount=0;
      }
    }
    if (list.isTruncated()) {
      prevListing=list;
    }
 else {
      break;
    }
  }
  if (objectCount > 0) {
    multiObjectDeleteRequest.setKeys(keys);
    client.deleteObjects(multiObjectDeleteRequest);
  }
}
