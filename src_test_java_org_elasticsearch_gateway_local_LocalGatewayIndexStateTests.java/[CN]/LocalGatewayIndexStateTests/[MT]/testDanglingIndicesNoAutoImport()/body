{
  Settings settings=settingsBuilder().put("gateway.type","local").put("gateway.local.auto_import_dangled","no").put("index.number_of_shards",1).put("index.number_of_replicas",1).build();
  logger.info("--> starting two nodes");
  final String node_1=cluster().startNode(settings);
  cluster().startNode(settings);
  logger.info("--> indexing a simple document");
  client().prepareIndex("test","type1","1").setSource("field1","value1").setRefresh(true).execute().actionGet();
  logger.info("--> waiting for green status");
  ClusterHealthResponse health=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  logger.info("--> verify 1 doc in the index");
  for (int i=0; i < 10; i++) {
    assertThat(client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().getCount(),equalTo(1l));
  }
  assertThat(client().prepareGet("test","type1","1").execute().actionGet().isExists(),equalTo(true));
  logger.info("--> restarting the nodes");
  final Gateway gateway1=cluster().getInstance(Gateway.class,node_1);
  cluster().fullRestart(new RestartCallback(){
    @Override public Settings onNodeStopped(    String nodeName) throws Exception {
      if (node_1.equals(nodeName)) {
        logger.info("--> deleting the data for the first node");
        gateway1.reset();
      }
      return null;
    }
  }
);
  logger.info("--> waiting for green status");
  health=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  Thread.sleep(500);
  logger.info("--> verify that the dangling index does not exists");
  assertThat(client().admin().indices().prepareExists("test").execute().actionGet().isExists(),equalTo(false));
  logger.info("--> restart start the nodes, but make sure we do recovery only after we have 2 nodes in the cluster");
  cluster().fullRestart(new RestartCallback(){
    @Override public Settings onNodeStopped(    String nodeName) throws Exception {
      return settingsBuilder().put("gateway.recover_after_nodes",2).build();
    }
  }
);
  logger.info("--> waiting for green status");
  health=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  logger.info("--> verify that the dangling index does exists now!");
  assertThat(client().admin().indices().prepareExists("test").execute().actionGet().isExists(),equalTo(true));
  logger.info("--> verify the doc is there");
  assertThat(client().prepareGet("test","type1","1").execute().actionGet().isExists(),equalTo(true));
}
