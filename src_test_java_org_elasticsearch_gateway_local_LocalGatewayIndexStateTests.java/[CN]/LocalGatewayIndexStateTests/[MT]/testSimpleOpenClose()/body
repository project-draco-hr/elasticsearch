{
  logger.info("--> starting 2 nodes");
  cluster().startNode(settingsBuilder().put("gateway.type","local").build());
  cluster().startNode(settingsBuilder().put("gateway.type","local").build());
  logger.info("--> creating test index");
  createIndex("test");
  NumShards test=getNumShards("test");
  logger.info("--> waiting for green status");
  ClusterHealthResponse health=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  ClusterStateResponse stateResponse=client().admin().cluster().prepareState().execute().actionGet();
  assertThat(stateResponse.getState().metaData().index("test").state(),equalTo(IndexMetaData.State.OPEN));
  assertThat(stateResponse.getState().routingTable().index("test").shards().size(),equalTo(test.numPrimaries));
  assertThat(stateResponse.getState().routingTable().index("test").shardsWithState(ShardRoutingState.STARTED).size(),equalTo(test.totalNumShards));
  logger.info("--> indexing a simple document");
  client().prepareIndex("test","type1","1").setSource("field1","value1").execute().actionGet();
  logger.info("--> closing test index...");
  client().admin().indices().prepareClose("test").execute().actionGet();
  stateResponse=client().admin().cluster().prepareState().execute().actionGet();
  assertThat(stateResponse.getState().metaData().index("test").state(),equalTo(IndexMetaData.State.CLOSE));
  assertThat(stateResponse.getState().routingTable().index("test"),nullValue());
  logger.info("--> verifying that the state is green");
  health=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  assertThat(health.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  logger.info("--> trying to index into a closed index ...");
  try {
    client().prepareIndex("test","type1","1").setSource("field1","value1").setTimeout("1s").execute().actionGet();
    fail();
  }
 catch (  ClusterBlockException e) {
  }
  logger.info("--> creating another index (test2) by indexing into it");
  client().prepareIndex("test2","type1","1").setSource("field1","value1").execute().actionGet();
  logger.info("--> verifying that the state is green");
  health=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  assertThat(health.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  logger.info("--> opening the first index again...");
  client().admin().indices().prepareOpen("test").execute().actionGet();
  logger.info("--> verifying that the state is green");
  health=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  assertThat(health.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  stateResponse=client().admin().cluster().prepareState().execute().actionGet();
  assertThat(stateResponse.getState().metaData().index("test").state(),equalTo(IndexMetaData.State.OPEN));
  assertThat(stateResponse.getState().routingTable().index("test").shards().size(),equalTo(test.numPrimaries));
  assertThat(stateResponse.getState().routingTable().index("test").shardsWithState(ShardRoutingState.STARTED).size(),equalTo(test.totalNumShards));
  logger.info("--> trying to get the indexed document on the first index");
  GetResponse getResponse=client().prepareGet("test","type1","1").execute().actionGet();
  assertThat(getResponse.isExists(),equalTo(true));
  logger.info("--> closing test index...");
  client().admin().indices().prepareClose("test").execute().actionGet();
  stateResponse=client().admin().cluster().prepareState().execute().actionGet();
  assertThat(stateResponse.getState().metaData().index("test").state(),equalTo(IndexMetaData.State.CLOSE));
  assertThat(stateResponse.getState().routingTable().index("test"),nullValue());
  logger.info("--> restarting nodes...");
  cluster().fullRestart();
  logger.info("--> waiting for two nodes and green status");
  health=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  stateResponse=client().admin().cluster().prepareState().execute().actionGet();
  assertThat(stateResponse.getState().metaData().index("test").state(),equalTo(IndexMetaData.State.CLOSE));
  assertThat(stateResponse.getState().routingTable().index("test"),nullValue());
  logger.info("--> trying to index into a closed index ...");
  try {
    client().prepareIndex("test","type1","1").setSource("field1","value1").setTimeout("1s").execute().actionGet();
    fail();
  }
 catch (  ClusterBlockException e) {
  }
  logger.info("--> opening index...");
  client().admin().indices().prepareOpen("test").execute().actionGet();
  logger.info("--> waiting for green status");
  health=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  stateResponse=client().admin().cluster().prepareState().execute().actionGet();
  assertThat(stateResponse.getState().metaData().index("test").state(),equalTo(IndexMetaData.State.OPEN));
  assertThat(stateResponse.getState().routingTable().index("test").shards().size(),equalTo(test.numPrimaries));
  assertThat(stateResponse.getState().routingTable().index("test").shardsWithState(ShardRoutingState.STARTED).size(),equalTo(test.totalNumShards));
  logger.info("--> trying to get the indexed document on the first round (before close and shutdown)");
  getResponse=client().prepareGet("test","type1","1").execute().actionGet();
  assertThat(getResponse.isExists(),equalTo(true));
  logger.info("--> indexing a simple document");
  client().prepareIndex("test","type1","2").setSource("field1","value1").execute().actionGet();
}
