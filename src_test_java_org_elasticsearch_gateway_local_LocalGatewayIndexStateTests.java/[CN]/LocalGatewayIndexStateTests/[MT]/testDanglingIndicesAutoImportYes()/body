{
  Settings settings=settingsBuilder().put("gateway.type","local").put("gateway.local.auto_import_dangled","yes").put("index.number_of_shards",1).put("index.number_of_replicas",1).build();
  logger.info("--> cleaning nodes");
  buildNode("node1",settingsBuilder().put("gateway.type","local").build());
  buildNode("node2",settingsBuilder().put("gateway.type","local").build());
  cleanAndCloseNodes();
  logger.info("--> starting two nodes");
  startNode("node1",settings);
  startNode("node2",settings);
  logger.info("--> indexing a simple document");
  client("node1").prepareIndex("test","type1","1").setSource("field1","value1").setRefresh(true).execute().actionGet();
  logger.info("--> waiting for green status");
  ClusterHealthResponse health=client("node1").admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  logger.info("--> verify 1 doc in the index");
  for (int i=0; i < 10; i++) {
    assertThat(client("node1").prepareCount().setQuery(matchAllQuery()).execute().actionGet().getCount(),equalTo(1l));
  }
  assertThat(client("node1").prepareGet("test","type1","1").execute().actionGet().isExists(),equalTo(true));
  logger.info("--> shutting down the nodes");
  Gateway gateway1=((InternalNode)node("node1")).injector().getInstance(Gateway.class);
  closeNode("node1");
  closeNode("node2");
  logger.info("--> deleting the data for the first node");
  gateway1.reset();
  logger.info("--> start the 2 nodes back, simulating dangling index (exists on second, doesn't exists on first)");
  startNode("node1",settings);
  startNode("node2",settings);
  logger.info("--> waiting for green status");
  health=client("node1").admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  long time=System.currentTimeMillis();
  while ((System.currentTimeMillis() - time) < TimeValue.timeValueSeconds(10).millis()) {
    if (client("node1").admin().indices().prepareExists("test").execute().actionGet().isExists()) {
      break;
    }
  }
  logger.info("--> verify that the dangling index exists");
  assertThat(client("node1").admin().indices().prepareExists("test").execute().actionGet().isExists(),equalTo(true));
  logger.info("--> waiting for green status");
  health=client("node1").admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().setWaitForNodes("2").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  logger.info("--> verify the doc is there");
  assertThat(client("node1").prepareGet("test","type1","1").execute().actionGet().isExists(),equalTo(true));
}
