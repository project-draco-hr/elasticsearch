{
  logger.info("--> cleaning nodes");
  logger.info("--> starting 1 master node non data");
  cluster().startNode(settingsBuilder().put("node.data",false).put("gateway.type","local").put("index.number_of_shards",2).put("index.number_of_replicas",1).build());
  logger.info("--> create an index");
  client().admin().indices().prepareCreate("test").execute().actionGet();
  logger.info("--> closing master node");
  cluster().closeNonSharedNodes(false);
  logger.info("--> starting 1 master node non data again");
  cluster().startNode(settingsBuilder().put("node.data",false).put("gateway.type","local").put("index.number_of_shards",2).put("index.number_of_replicas",1).build());
  logger.info("--> waiting for test index to be created");
  ClusterHealthResponse health=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setIndices("test").execute().actionGet();
  assertThat(health.isTimedOut(),equalTo(false));
  logger.info("--> verify we have an index");
  ClusterStateResponse clusterStateResponse=client().admin().cluster().prepareState().setIndices("test").execute().actionGet();
  assertThat(clusterStateResponse.getState().metaData().hasIndex("test"),equalTo(true));
}
