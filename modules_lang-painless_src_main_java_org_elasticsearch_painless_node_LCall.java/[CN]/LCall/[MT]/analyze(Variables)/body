{
  if (before == null) {
    throw new IllegalArgumentException(error("Illegal call [" + name + "] made without target."));
  }
 else   if (before.sort == Sort.ARRAY) {
    throw new IllegalArgumentException(error("Illegal call [" + name + "] on array type."));
  }
 else   if (store) {
    throw new IllegalArgumentException(error("Cannot assign a value to a call [" + name + "]."));
  }
  Definition.MethodKey methodKey=new Definition.MethodKey(name,arguments.size());
  Struct struct=before.struct;
  method=statik ? struct.staticMethods.get(methodKey) : struct.methods.get(methodKey);
  if (method != null) {
    for (int argument=0; argument < arguments.size(); ++argument) {
      AExpression expression=arguments.get(argument);
      expression.expected=method.arguments.get(argument);
      expression.internal=true;
      expression.analyze(variables);
      arguments.set(argument,expression.cast(variables));
    }
    statement=true;
    after=method.rtn;
    return this;
  }
 else   if (before.sort == Sort.DEF) {
    ALink link=new LDefCall(line,offset,location,name,arguments);
    link.copy(this);
    return link.analyze(variables);
  }
  throw new IllegalArgumentException(error("Unknown call [" + name + "] with ["+ arguments.size()+ "] arguments on type ["+ struct.name+ "]."));
}
