{
  if (fieldName.equals("date_formats")) {
    List<FormatDateTimeFormatter> dateTimeFormatters=newArrayList();
    if (fieldNode instanceof List) {
      for (      Object node1 : (List)fieldNode) {
        dateTimeFormatters.add(parseDateTimeFormatter(fieldName,node1));
      }
    }
 else     if ("none".equals(fieldNode.toString())) {
      dateTimeFormatters=null;
    }
 else {
      dateTimeFormatters.add(parseDateTimeFormatter(fieldName,fieldNode));
    }
    if (dateTimeFormatters == null) {
      ((Builder)builder).noDateTimeFormatter();
    }
 else {
      ((Builder)builder).dateTimeFormatter(dateTimeFormatters);
    }
  }
 else   if (fieldName.equals("dynamic_templates")) {
    List tmplNodes=(List)fieldNode;
    for (    Object tmplNode : tmplNodes) {
      Map<String,Object> tmpl=(Map<String,Object>)tmplNode;
      if (tmpl.size() != 1) {
        throw new MapperParsingException("A dynamic template must be defined with a name");
      }
      Map.Entry<String,Object> entry=tmpl.entrySet().iterator().next();
      ((Builder)builder).add(DynamicTemplate.parse(entry.getKey(),(Map<String,Object>)entry.getValue()));
    }
  }
}
