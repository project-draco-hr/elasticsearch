{
  logger.info("--> start data node / non master node");
  cluster().startNode(settingsBuilder().put("node.data",true).put("node.master",false).put("discovery.initial_state_timeout","1s"));
  try {
    assertThat(client().admin().cluster().prepareState().setMasterNodeTimeout("100ms").execute().actionGet().getState().nodes().masterNodeId(),nullValue());
    fail("should not be able to find master");
  }
 catch (  MasterNotDiscoveredException e) {
  }
  logger.info("--> start master node (1)");
  final String masterNodeName=cluster().startNode(settingsBuilder().put("node.data",false).put("node.master",true));
  assertThat(cluster().nonMasterClient().admin().cluster().prepareState().execute().actionGet().getState().nodes().masterNode().name(),equalTo(masterNodeName));
  assertThat(cluster().masterClient().admin().cluster().prepareState().execute().actionGet().getState().nodes().masterNode().name(),equalTo(masterNodeName));
  logger.info("--> start master node (2)");
  final String nextMasterEligableNodeName=cluster().startNode(settingsBuilder().put("node.data",false).put("node.master",true));
  assertThat(cluster().nonMasterClient().admin().cluster().prepareState().execute().actionGet().getState().nodes().masterNode().name(),equalTo(masterNodeName));
  assertThat(cluster().nonMasterClient().admin().cluster().prepareState().execute().actionGet().getState().nodes().masterNode().name(),equalTo(masterNodeName));
  assertThat(cluster().masterClient().admin().cluster().prepareState().execute().actionGet().getState().nodes().masterNode().name(),equalTo(masterNodeName));
  logger.info("--> closing master node (1)");
  cluster().stopCurrentMasterNode();
  assertThat(cluster().nonMasterClient().admin().cluster().prepareState().execute().actionGet().getState().nodes().masterNode().name(),equalTo(nextMasterEligableNodeName));
  assertThat(cluster().masterClient().admin().cluster().prepareState().execute().actionGet().getState().nodes().masterNode().name(),equalTo(nextMasterEligableNodeName));
}
