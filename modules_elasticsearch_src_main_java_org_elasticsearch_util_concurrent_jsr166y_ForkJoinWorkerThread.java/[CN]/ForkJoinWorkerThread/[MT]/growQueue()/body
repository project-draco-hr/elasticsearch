{
  ForkJoinTask<?>[] oldQ=queue;
  int oldSize=oldQ.length;
  int newSize=oldSize << 1;
  if (newSize > MAXIMUM_QUEUE_CAPACITY)   throw new RejectedExecutionException("Queue capacity exceeded");
  ForkJoinTask<?>[] newQ=queue=new ForkJoinTask<?>[newSize];
  int b=base;
  int bf=b + oldSize;
  int oldMask=oldSize - 1;
  int newMask=newSize - 1;
  do {
    int oldIndex=b & oldMask;
    ForkJoinTask<?> t=oldQ[oldIndex];
    if (t != null && !casSlotNull(oldQ,oldIndex,t))     t=null;
    writeSlot(newQ,b & newMask,t);
  }
 while (++b != bf);
  pool.signalWork();
}
