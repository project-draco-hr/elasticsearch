{
  for (; ; ) {
    int s=runState;
    if ((s & TERMINATING) != 0) {
      if (UNSAFE.compareAndSwapInt(this,runStateOffset,s,s | (TRIMMED | TERMINATING)))       return false;
    }
 else     if (UNSAFE.compareAndSwapInt(this,runStateOffset,s,s | SUSPENDED))     break;
  }
  lastEventCount=0;
  ForkJoinPool p=pool;
  p.releaseWaiters();
  p.accumulateStealCount(this);
  interrupted();
  if (poolIndex < p.getParallelism()) {
    while ((runState & SUSPENDED) != 0)     doPark();
    return true;
  }
  return timedSuspend();
}
