{
  List<DiscoveryNode> nodes=new ArrayList<>();
  nodes.add(clusterService.localNode());
  int nodeId=0;
  for (int i=randomInt(5); i > 0; i--) {
    DiscoveryNode node=newNode(nodeId++);
    nodes.add(node);
    joinNode(node);
  }
  nodeJoinController.startElectionContext();
  ArrayList<Future<Void>> pendingJoins=new ArrayList<>();
  for (int i=randomInt(5); i > 0; i--) {
    DiscoveryNode node=newNode(nodeId++);
    nodes.add(node);
    pendingJoins.add(joinNodeAsync(node));
  }
  nodeJoinController.stopElectionContext("test");
  boolean hadSyncJoin=false;
  for (int i=randomInt(5); i > 0; i--) {
    DiscoveryNode node=newNode(nodeId++);
    nodes.add(node);
    joinNode(node);
    hadSyncJoin=true;
  }
  if (hadSyncJoin) {
    for (    Future<Void> joinFuture : pendingJoins) {
      assertThat(joinFuture.isDone(),equalTo(true));
    }
  }
  for (  Future<Void> joinFuture : pendingJoins) {
    joinFuture.get();
  }
}
