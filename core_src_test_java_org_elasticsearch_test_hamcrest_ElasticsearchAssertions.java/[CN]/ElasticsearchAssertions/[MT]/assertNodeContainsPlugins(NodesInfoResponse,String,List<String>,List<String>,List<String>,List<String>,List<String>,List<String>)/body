{
  Assert.assertThat(response.getNodesMap().get(nodeId),notNullValue());
  PluginsInfo plugins=response.getNodesMap().get(nodeId).getPlugins();
  Assert.assertThat(plugins,notNullValue());
  List<String> pluginNames=FluentIterable.from(plugins.getInfos()).filter(jvmPluginPredicate).transform(nameFunction).toList();
  for (  String expectedJvmPluginName : expectedJvmPluginNames) {
    Assert.assertThat(pluginNames,hasItem(expectedJvmPluginName));
  }
  List<String> pluginDescriptions=FluentIterable.from(plugins.getInfos()).filter(jvmPluginPredicate).transform(descriptionFunction).toList();
  for (  String expectedJvmPluginDescription : expectedJvmPluginDescriptions) {
    Assert.assertThat(pluginDescriptions,hasItem(expectedJvmPluginDescription));
  }
  List<String> jvmPluginVersions=FluentIterable.from(plugins.getInfos()).filter(jvmPluginPredicate).transform(versionFunction).toList();
  for (  String pluginVersion : expectedJvmVersions) {
    Assert.assertThat(jvmPluginVersions,hasItem(pluginVersion));
  }
  FluentIterable<String> jvmUrls=FluentIterable.from(plugins.getInfos()).filter(Predicates.and(jvmPluginPredicate,Predicates.not(sitePluginPredicate))).transform(urlFunction).filter(notNull());
  Assert.assertThat(Iterables.size(jvmUrls),is(0));
  List<String> sitePluginNames=FluentIterable.from(plugins.getInfos()).filter(sitePluginPredicate).transform(nameFunction).toList();
  Assert.assertThat(sitePluginNames.isEmpty(),is(expectedSitePluginNames.isEmpty()));
  for (  String expectedSitePluginName : expectedSitePluginNames) {
    Assert.assertThat(sitePluginNames,hasItem(expectedSitePluginName));
  }
  List<String> sitePluginDescriptions=FluentIterable.from(plugins.getInfos()).filter(sitePluginPredicate).transform(descriptionFunction).toList();
  Assert.assertThat(sitePluginDescriptions.isEmpty(),is(expectedSitePluginDescriptions.isEmpty()));
  for (  String sitePluginDescription : expectedSitePluginDescriptions) {
    Assert.assertThat(sitePluginDescriptions,hasItem(sitePluginDescription));
  }
  List<String> sitePluginUrls=FluentIterable.from(plugins.getInfos()).filter(sitePluginPredicate).transform(urlFunction).toList();
  Assert.assertThat(sitePluginUrls,not(contains(nullValue())));
  List<String> sitePluginVersions=FluentIterable.from(plugins.getInfos()).filter(sitePluginPredicate).transform(versionFunction).toList();
  Assert.assertThat(sitePluginVersions.isEmpty(),is(expectedSiteVersions.isEmpty()));
  for (  String pluginVersion : expectedSiteVersions) {
    Assert.assertThat(sitePluginVersions,hasItem(pluginVersion));
  }
}
