{
synchronized (this) {
    if (poolCurrentSize < poolMaxSize) {
      poolCurrentSize++;
      return new ReusableMemoryIndex(false,bytesPerMemoryIndex);
    }
  }
  ReusableMemoryIndex poll=null;
  try {
    final TimeValue timeout=this.timeout;
    poll=queue.poll(timeout.getMillis(),TimeUnit.MILLISECONDS);
  }
 catch (  InterruptedException ie) {
    Thread.currentThread().interrupt();
  }
  return poll == null ? new ReusableMemoryIndex(false,bytesPerMemoryIndex) : poll;
}
