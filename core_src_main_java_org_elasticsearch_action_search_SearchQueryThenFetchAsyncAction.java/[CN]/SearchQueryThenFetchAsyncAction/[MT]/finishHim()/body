{
  threadPool.executor(ThreadPool.Names.SEARCH).execute(new ActionRunnable<SearchResponse>(listener){
    @Override public void doRun() throws IOException {
      final boolean isScrollRequest=request.scroll() != null;
      final InternalSearchResponse internalResponse=searchPhaseController.merge(isScrollRequest,sortedShardDocs,firstResults,fetchResults);
      String scrollId=isScrollRequest ? TransportSearchHelper.buildScrollId(request.searchType(),firstResults) : null;
      listener.onResponse(new SearchResponse(internalResponse,scrollId,expectedSuccessfulOps,successfulOps.get(),buildTookInMillis(),buildShardFailures()));
      releaseIrrelevantSearchContexts(firstResults,docIdsToLoad);
    }
    @Override public void onFailure(    Exception e){
      try {
        ReduceSearchPhaseException failure=new ReduceSearchPhaseException("fetch","",e,buildShardFailures());
        if (logger.isDebugEnabled()) {
          logger.debug("failed to reduce search",failure);
        }
        super.onFailure(failure);
      }
  finally {
        releaseIrrelevantSearchContexts(firstResults,docIdsToLoad);
      }
    }
  }
);
}
