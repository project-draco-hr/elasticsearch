{
  Map<String,Object> source=new HashMap<String,Object>(){
    @Override public Object remove(    Object key){
      if (key.equals("list")) {
        throw new UnsupportedOperationException();
      }
      return super.remove(key);
    }
  }
;
  source.put("list",Collections.singletonList("item"));
  IngestDocument ingestDocument=new IngestDocument(source,Collections.emptyMap());
  Processor processor=new RenameProcessor(randomAsciiOfLength(10),"list","new_field",false);
  try {
    processor.execute(ingestDocument);
    fail("processor execute should have failed");
  }
 catch (  UnsupportedOperationException e) {
    assertThat(ingestDocument.getSourceAndMetadata().containsKey("list"),equalTo(true));
    assertThat(ingestDocument.getSourceAndMetadata().containsKey("new_field"),equalTo(false));
  }
}
