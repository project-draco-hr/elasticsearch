{
  String tokenizerName=analyzerSettings.get("tokenizer");
  if (tokenizerName == null) {
    throw new IllegalArgumentException("Custom Analyzer [" + name() + "] must be configured with a tokenizer");
  }
  TokenizerFactory tokenizer=analysisService.tokenizer(tokenizerName);
  if (tokenizer == null) {
    throw new IllegalArgumentException("Custom Analyzer [" + name() + "] failed to find tokenizer under name ["+ tokenizerName+ "]");
  }
  List<CharFilterFactory> charFilters=new ArrayList<>();
  String[] charFilterNames=analyzerSettings.getAsArray("char_filter");
  for (  String charFilterName : charFilterNames) {
    CharFilterFactory charFilter=analysisService.charFilter(charFilterName);
    if (charFilter == null) {
      throw new IllegalArgumentException("Custom Analyzer [" + name() + "] failed to find char_filter under name ["+ charFilterName+ "]");
    }
    charFilters.add(charFilter);
  }
  List<TokenFilterFactory> tokenFilters=new ArrayList<>();
  String[] tokenFilterNames=analyzerSettings.getAsArray("filter");
  for (  String tokenFilterName : tokenFilterNames) {
    TokenFilterFactory tokenFilter=analysisService.tokenFilter(tokenFilterName);
    if (tokenFilter == null) {
      throw new IllegalArgumentException("Custom Analyzer [" + name() + "] failed to find filter under name ["+ tokenFilterName+ "]");
    }
    tokenFilters.add(tokenFilter);
  }
  int positionIncrementGap=StringFieldMapper.Defaults.positionIncrementGap(Version.indexCreated(indexSettings.getSettings()));
  if (analyzerSettings.getAsMap().containsKey("position_offset_gap")) {
    if (indexSettings.getVersion().before(Version.V_2_0_0)) {
      if (analyzerSettings.getAsMap().containsKey("position_increment_gap")) {
        throw new IllegalArgumentException("Custom Analyzer [" + name() + "] defined both [position_offset_gap] and [position_increment_gap], use only [position_increment_gap]");
      }
      positionIncrementGap=analyzerSettings.getAsInt("position_offset_gap",positionIncrementGap);
    }
 else {
      throw new IllegalArgumentException("Option [position_offset_gap] in Custom Analyzer [" + name() + "] has been renamed, please use [position_increment_gap] instead.");
    }
  }
  positionIncrementGap=analyzerSettings.getAsInt("position_increment_gap",positionIncrementGap);
  int offsetGap=analyzerSettings.getAsInt("offset_gap",-1);
  ;
  this.customAnalyzer=new CustomAnalyzer(tokenizer,charFilters.toArray(new CharFilterFactory[charFilters.size()]),tokenFilters.toArray(new TokenFilterFactory[tokenFilters.size()]),positionIncrementGap,offsetGap);
}
