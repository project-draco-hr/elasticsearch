{
  if (statements == null || statements.isEmpty()) {
    throw createError(new IllegalArgumentException("Cannot generate an empty function [" + name + "]."));
  }
  this.locals=new Locals(reserved,locals,rtnType,parameters);
  locals=this.locals;
  locals.incrementScope();
  AStatement last=statements.get(statements.size() - 1);
  for (  AStatement statement : statements) {
    if (allEscape) {
      throw createError(new IllegalArgumentException("Unreachable statement."));
    }
    statement.lastSource=statement == last;
    statement.analyze(locals);
    methodEscape=statement.methodEscape;
    allEscape=statement.allEscape;
  }
  if (!methodEscape && rtnType.sort != Sort.VOID) {
    throw createError(new IllegalArgumentException("Not all paths provide a return value for method [" + name + "]."));
  }
  locals.decrementScope();
}
