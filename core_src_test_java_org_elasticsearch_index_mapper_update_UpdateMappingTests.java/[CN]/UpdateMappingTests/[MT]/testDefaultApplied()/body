{
  createIndex("test1",Settings.builder().build());
  createIndex("test2",Settings.builder().build());
  XContentBuilder defaultMapping=XContentFactory.jsonBuilder().startObject().startObject(MapperService.DEFAULT_MAPPING).startObject("_timestamp").field("enabled",true).endObject().endObject().endObject();
  client().admin().indices().preparePutMapping().setType(MapperService.DEFAULT_MAPPING).setSource(defaultMapping).get();
  XContentBuilder typeMapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_all").field("enabled",false).endObject().endObject().endObject();
  client().admin().indices().preparePutMapping("test1").setType("type").setSource(typeMapping).get();
  client().admin().indices().preparePutMapping("test1","test2").setType("type").setSource(typeMapping).get();
  GetMappingsResponse response=client().admin().indices().prepareGetMappings("test2").get();
  assertNotNull(response.getMappings().get("test2").get("type").getSourceAsMap().get("_all"));
  assertFalse((Boolean)((LinkedHashMap)response.getMappings().get("test2").get("type").getSourceAsMap().get("_all")).get("enabled"));
  assertNotNull(response.getMappings().get("test2").get("type").getSourceAsMap().get("_timestamp"));
  assertTrue((Boolean)((LinkedHashMap)response.getMappings().get("test2").get("type").getSourceAsMap().get("_timestamp")).get("enabled"));
}
