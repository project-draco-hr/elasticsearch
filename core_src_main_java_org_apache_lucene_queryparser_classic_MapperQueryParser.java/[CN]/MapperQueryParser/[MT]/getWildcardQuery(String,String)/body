{
  if (termStr.equals("*")) {
    if ("*".equals(field) || Objects.equals(field,this.field)) {
      String actualField=field;
      if (actualField == null) {
        actualField=this.field;
      }
      if (actualField == null) {
        return newMatchAllDocsQuery();
      }
      if ("*".equals(actualField) || "_all".equals(actualField)) {
        return newMatchAllDocsQuery();
      }
      return FIELD_QUERY_EXTENSIONS.get(ExistsFieldQueryExtension.NAME).query(context,actualField);
    }
  }
  if (lowercaseExpandedTerms) {
    termStr=termStr.toLowerCase(locale);
  }
  Collection<String> fields=extractMultiFields(field);
  if (fields != null) {
    if (fields.size() == 1) {
      return getWildcardQuerySingle(fields.iterator().next(),termStr);
    }
    if (settings.useDisMax()) {
      List<Query> queries=new ArrayList<>();
      boolean added=false;
      for (      String mField : fields) {
        Query q=getWildcardQuerySingle(mField,termStr);
        if (q != null) {
          added=true;
          queries.add(applyBoost(mField,q));
        }
      }
      if (!added) {
        return null;
      }
      return new DisjunctionMaxQuery(queries,settings.tieBreaker());
    }
 else {
      List<BooleanClause> clauses=new ArrayList<>();
      for (      String mField : fields) {
        Query q=getWildcardQuerySingle(mField,termStr);
        if (q != null) {
          clauses.add(new BooleanClause(applyBoost(mField,q),BooleanClause.Occur.SHOULD));
        }
      }
      if (clauses.size() == 0)       return null;
      return getBooleanQuery(clauses,true);
    }
  }
 else {
    return getWildcardQuerySingle(field,termStr);
  }
}
