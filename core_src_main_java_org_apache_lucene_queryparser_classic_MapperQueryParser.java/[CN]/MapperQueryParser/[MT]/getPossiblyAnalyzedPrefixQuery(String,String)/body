{
  if (!settings.analyzeWildcard()) {
    return super.getPrefixQuery(field,termStr);
  }
  List<String> tlist;
  TokenStream source=null;
  try {
    try {
      source=getAnalyzer().tokenStream(field,termStr);
      source.reset();
    }
 catch (    IOException e) {
      return super.getPrefixQuery(field,termStr);
    }
    tlist=new ArrayList<>();
    CharTermAttribute termAtt=source.addAttribute(CharTermAttribute.class);
    while (true) {
      try {
        if (!source.incrementToken())         break;
      }
 catch (      IOException e) {
        break;
      }
      tlist.add(termAtt.toString());
    }
  }
  finally {
    if (source != null) {
      IOUtils.closeWhileHandlingException(source);
    }
  }
  if (tlist.size() == 1) {
    return super.getPrefixQuery(field,tlist.get(0));
  }
 else {
    List<BooleanClause> clauses=new ArrayList<>();
    for (    String token : tlist) {
      clauses.add(new BooleanClause(super.getPrefixQuery(field,token),BooleanClause.Occur.SHOULD));
    }
    return getBooleanQueryCoordDisabled(clauses);
  }
}
