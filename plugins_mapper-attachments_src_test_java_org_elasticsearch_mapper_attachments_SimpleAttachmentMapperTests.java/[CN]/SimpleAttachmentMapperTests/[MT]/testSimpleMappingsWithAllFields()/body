{
  DocumentMapperParser mapperParser=MapperTestUtils.newMapperService(createTempDir(),Settings.EMPTY,getIndicesModuleWithRegisteredAttachmentMapper()).documentMapperParser();
  String mapping=copyToStringFromClasspath("/org/elasticsearch/index/mapper/attachment/test/unit/simple/test-mapping-all-fields.json");
  DocumentMapper docMapper=mapperParser.parse("person",new CompressedXContent(mapping));
  byte[] html=copyToBytesFromClasspath("/org/elasticsearch/index/mapper/attachment/test/sample-files/testXHTML.html");
  BytesReference json=jsonBuilder().startObject().field("file",html).endObject().bytes();
  ParseContext.Document doc=docMapper.parse("person","person","1",json).rootDoc();
  assertThat(doc.get(docMapper.mappers().getMapper("file.content_type").fieldType().names().indexName()),startsWith("application/xhtml+xml"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.title").fieldType().names().indexName()),equalTo("XHTML test document"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.content").fieldType().names().indexName()),containsString("This document tests the ability of Apache Tika to extract content"));
  String builtMapping=docMapper.mappingSource().string();
  docMapper=mapperParser.parse("person",new CompressedXContent(builtMapping));
  json=jsonBuilder().startObject().field("file",html).endObject().bytes();
  doc=docMapper.parse("person","person","1",json).rootDoc();
  assertThat(doc.get(docMapper.mappers().getMapper("file.content_type").fieldType().names().indexName()),startsWith("application/xhtml+xml"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.title").fieldType().names().indexName()),equalTo("XHTML test document"));
  assertThat(doc.get(docMapper.mappers().getMapper("file.content").fieldType().names().indexName()),containsString("This document tests the ability of Apache Tika to extract content"));
}
