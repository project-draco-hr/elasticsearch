{
  Node node=NodeBuilder.nodeBuilder().settings(ImmutableSettings.settingsBuilder().put("gateway.type","none")).node();
  node.client().prepareIndex("_river","test1","_meta").setSource(jsonBuilder().startObject().field("type","rabbitmq").endObject()).execute().actionGet();
  ConnectionFactory cfconn=new ConnectionFactory();
  cfconn.setHost("localhost");
  cfconn.setPort(AMQP.PROTOCOL.PORT);
  Connection conn=cfconn.newConnection();
  Channel ch=conn.createChannel();
  ch.exchangeDeclare("elasticsearch","direct",true);
  ch.queueDeclare("elasticsearch",true,false,false,null);
  String message="{ \"index\" : { \"index\" : \"test\", \"type\" : \"type1\", \"id\" : \"1\" }\n" + "{ \"type1\" : { \"field1\" : \"value1\" } }\n" + "{ \"delete\" : { \"index\" : \"test\", \"type\" : \"type1\", \"id\" : \"2\" } }\n"+ "{ \"create\" : { \"index\" : \"test\", \"type\" : \"type1\", \"id\" : \"1\" }\n"+ "{ \"type1\" : { \"field1\" : \"value1\" } }";
  ch.basicPublish("elasticsearch","elasticsearch",null,message.getBytes());
  ch.close();
  conn.close();
  Thread.sleep(100000);
}
