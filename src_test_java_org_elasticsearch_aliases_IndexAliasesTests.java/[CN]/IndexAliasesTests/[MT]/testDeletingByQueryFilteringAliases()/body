{
  logger.info("--> creating index [test1] and [test2");
  createIndex("test1","test2");
  ensureGreen();
  logger.info("--> adding filtering aliases to index [test1]");
  assertAcked(admin().indices().prepareAliases().addAlias("test1","aliasToTest1"));
  assertAcked(admin().indices().prepareAliases().addAlias("test1","aliasToTests"));
  assertAcked(admin().indices().prepareAliases().addAlias("test1","foos",termFilter("name","foo")));
  assertAcked(admin().indices().prepareAliases().addAlias("test1","bars",termFilter("name","bar")));
  assertAcked(admin().indices().prepareAliases().addAlias("test1","tests",termFilter("name","test")));
  logger.info("--> adding filtering aliases to index [test2]");
  assertAcked(admin().indices().prepareAliases().addAlias("test2","aliasToTest2"));
  assertAcked(admin().indices().prepareAliases().addAlias("test2","aliasToTests"));
  assertAcked(admin().indices().prepareAliases().addAlias("test2","foos",termFilter("name","foo")));
  assertAcked(admin().indices().prepareAliases().addAlias("test2","tests",termFilter("name","test")));
  logger.info("--> indexing against [test1]");
  client().index(indexRequest("test1").type("type1").id("1").source(source("1","foo test"))).get();
  client().index(indexRequest("test1").type("type1").id("2").source(source("2","bar test"))).get();
  client().index(indexRequest("test1").type("type1").id("3").source(source("3","baz test"))).get();
  client().index(indexRequest("test1").type("type1").id("4").source(source("4","something else"))).get();
  logger.info("--> indexing against [test2]");
  client().index(indexRequest("test2").type("type1").id("5").source(source("5","foo test"))).get();
  client().index(indexRequest("test2").type("type1").id("6").source(source("6","bar test"))).get();
  client().index(indexRequest("test2").type("type1").id("7").source(source("7","baz test"))).get();
  client().index(indexRequest("test2").type("type1").id("8").source(source("8","something else"))).get();
  refresh();
  logger.info("--> checking counts before delete");
  assertThat(client().prepareCount("bars").setQuery(QueryBuilders.matchAllQuery()).get().getCount(),equalTo(1L));
  logger.info("--> delete by query from a single alias");
  client().prepareDeleteByQuery("bars").setQuery(QueryBuilders.termQuery("name","test")).get();
  logger.info("--> verify that only one record was deleted");
  assertThat(client().prepareCount("test1").setQuery(QueryBuilders.matchAllQuery()).get().getCount(),equalTo(3L));
  logger.info("--> delete by query from an aliases pointing to two indices");
  client().prepareDeleteByQuery("foos").setQuery(QueryBuilders.matchAllQuery()).get();
  logger.info("--> verify that proper records were deleted");
  SearchResponse searchResponse=client().prepareSearch("aliasToTests").setQuery(QueryBuilders.matchAllQuery()).get();
  assertHits(searchResponse.getHits(),"3","4","6","7","8");
  logger.info("--> delete by query from an aliases and an index");
  client().prepareDeleteByQuery("tests","test2").setQuery(QueryBuilders.matchAllQuery()).get();
  logger.info("--> verify that proper records were deleted");
  searchResponse=client().prepareSearch("aliasToTests").setQuery(QueryBuilders.matchAllQuery()).get();
  assertHits(searchResponse.getHits(),"4");
}
