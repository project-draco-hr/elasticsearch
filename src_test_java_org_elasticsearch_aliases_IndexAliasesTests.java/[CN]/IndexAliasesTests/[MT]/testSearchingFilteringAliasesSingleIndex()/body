{
  client().admin().indices().prepareDelete().execute().actionGet();
  logger.info("--> creating index [test]");
  client().admin().indices().create(createIndexRequest("test")).actionGet();
  logger.info("--> running cluster_health");
  ClusterHealthResponse clusterHealth=client().admin().cluster().health(clusterHealthRequest().waitForGreenStatus()).actionGet();
  logger.info("--> done cluster_health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  logger.info("--> adding filtering aliases to index [test]");
  client().admin().indices().prepareAliases().addAlias("test","alias1").execute().actionGet();
  client().admin().indices().prepareAliases().addAlias("test","alias2").execute().actionGet();
  client().admin().indices().prepareAliases().addAlias("test","foos",termFilter("name","foo")).execute().actionGet();
  client().admin().indices().prepareAliases().addAlias("test","bars",termFilter("name","bar")).execute().actionGet();
  client().admin().indices().prepareAliases().addAlias("test","tests",termFilter("name","test")).execute().actionGet();
  logger.info("--> indexing against [test]");
  client().index(indexRequest("test").type("type1").id("1").source(source("1","foo test")).refresh(true)).actionGet();
  client().index(indexRequest("test").type("type1").id("2").source(source("2","bar test")).refresh(true)).actionGet();
  client().index(indexRequest("test").type("type1").id("3").source(source("3","baz test")).refresh(true)).actionGet();
  client().index(indexRequest("test").type("type1").id("4").source(source("4","something else")).refresh(true)).actionGet();
  logger.info("--> checking single filtering alias search");
  SearchResponse searchResponse=client().prepareSearch("foos").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  assertHits(searchResponse.getHits(),"1");
  logger.info("--> checking single filtering alias wildcard search");
  searchResponse=client().prepareSearch("fo*").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  assertHits(searchResponse.getHits(),"1");
  searchResponse=client().prepareSearch("tests").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  assertHits(searchResponse.getHits(),"1","2","3");
  logger.info("--> checking single filtering alias search with sort");
  searchResponse=client().prepareSearch("tests").setQuery(QueryBuilders.matchAllQuery()).addSort("_uid",SortOrder.ASC).execute().actionGet();
  assertHits(searchResponse.getHits(),"1","2","3");
  logger.info("--> checking single filtering alias search with global facets");
  searchResponse=client().prepareSearch("tests").setQuery(QueryBuilders.matchQuery("name","bar")).addFacet(FacetBuilders.termsFacet("test").field("name").global(true)).execute().actionGet();
  assertThat(((TermsFacet)searchResponse.getFacets().facet("test")).getEntries().size(),equalTo(4));
  logger.info("--> checking single filtering alias search with global facets and sort");
  searchResponse=client().prepareSearch("tests").setQuery(QueryBuilders.matchQuery("name","bar")).addFacet(FacetBuilders.termsFacet("test").field("name").global(true)).addSort("_uid",SortOrder.ASC).execute().actionGet();
  assertThat(((TermsFacet)searchResponse.getFacets().facet("test")).getEntries().size(),equalTo(4));
  logger.info("--> checking single filtering alias search with non-global facets");
  searchResponse=client().prepareSearch("tests").setQuery(QueryBuilders.matchQuery("name","bar")).addFacet(FacetBuilders.termsFacet("test").field("name").global(false)).addSort("_uid",SortOrder.ASC).execute().actionGet();
  assertThat(((TermsFacet)searchResponse.getFacets().facet("test")).getEntries().size(),equalTo(2));
  searchResponse=client().prepareSearch("foos","bars").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  assertHits(searchResponse.getHits(),"1","2");
  logger.info("--> checking single non-filtering alias search");
  searchResponse=client().prepareSearch("alias1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  assertHits(searchResponse.getHits(),"1","2","3","4");
  logger.info("--> checking non-filtering alias and filtering alias search");
  searchResponse=client().prepareSearch("alias1","foos").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  assertHits(searchResponse.getHits(),"1","2","3","4");
  logger.info("--> checking index and filtering alias search");
  searchResponse=client().prepareSearch("test","foos").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  assertHits(searchResponse.getHits(),"1","2","3","4");
  logger.info("--> checking index and alias wildcard search");
  searchResponse=client().prepareSearch("te*","fo*").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  assertHits(searchResponse.getHits(),"1","2","3","4");
}
