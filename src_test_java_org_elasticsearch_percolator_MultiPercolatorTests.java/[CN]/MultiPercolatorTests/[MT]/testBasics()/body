{
  client().admin().indices().prepareCreate("test").execute().actionGet();
  ensureGreen();
  logger.info("--> register a queries");
  client().prepareIndex("test","_percolator","1").setSource(jsonBuilder().startObject().field("query",matchQuery("field1","b")).field("a","b").endObject()).execute().actionGet();
  client().prepareIndex("test","_percolator","2").setSource(jsonBuilder().startObject().field("query",matchQuery("field1","c")).endObject()).execute().actionGet();
  client().prepareIndex("test","_percolator","3").setSource(jsonBuilder().startObject().field("query",boolQuery().must(matchQuery("field1","b")).must(matchQuery("field1","c"))).endObject()).execute().actionGet();
  client().prepareIndex("test","_percolator","4").setSource(jsonBuilder().startObject().field("query",matchAllQuery()).endObject()).execute().actionGet();
  MultiPercolateResponse response=client().prepareMultiPercolate().add(client().preparePercolate().setIndices("test").setDocumentType("type").setPercolateDoc(docBuilder().setDoc(jsonBuilder().startObject().field("field1","b").endObject()))).add(client().preparePercolate().setIndices("test").setDocumentType("type").setPercolateDoc(docBuilder().setDoc(yamlBuilder().startObject().field("field1","c").endObject()))).add(client().preparePercolate().setIndices("test").setDocumentType("type").setPercolateDoc(docBuilder().setDoc(smileBuilder().startObject().field("field1","b c").endObject()))).add(client().preparePercolate().setIndices("test").setDocumentType("type").setPercolateDoc(docBuilder().setDoc(jsonBuilder().startObject().field("field1","d").endObject()))).add(client().preparePercolate().setIndices("test").setDocumentType("type").setGetRequest(Requests.getRequest("test").type("type").id("5"))).execute().actionGet();
  MultiPercolateResponse.Item item=response.getItems()[0];
  assertThat(item.getResponse().getMatches(),arrayWithSize(2));
  assertThat(item.errorMessage(),nullValue());
  assertThat(convertFromTextArray(item.getResponse().getMatches(),"test"),arrayContainingInAnyOrder("1","4"));
  item=response.getItems()[1];
  assertThat(item.errorMessage(),nullValue());
  assertNoFailures(item.response());
  assertThat(item.getResponse().getMatches(),arrayWithSize(2));
  assertThat(item.getResponse().getMatches(),arrayWithSize(2));
  assertThat(item.getResponse().getCount(),equalTo(2l));
  assertThat(convertFromTextArray(item.getResponse().getMatches(),"test"),arrayContainingInAnyOrder("2","4"));
  item=response.getItems()[2];
  assertThat(item.errorMessage(),nullValue());
  assertNoFailures(item.response());
  assertThat(item.getResponse().getMatches(),arrayWithSize(4));
  assertThat(item.getResponse().getCount(),equalTo(4l));
  assertThat(convertFromTextArray(item.getResponse().getMatches(),"test"),arrayContainingInAnyOrder("1","2","3","4"));
  item=response.getItems()[3];
  assertThat(item.errorMessage(),nullValue());
  assertNoFailures(item.response());
  assertThat(item.getResponse().getMatches(),arrayWithSize(1));
  assertThat(item.getResponse().getCount(),equalTo(1l));
  assertThat(convertFromTextArray(item.getResponse().getMatches(),"test"),arrayContaining("4"));
  item=response.getItems()[4];
  assertThat(item.getResponse(),nullValue());
  assertThat(item.errorMessage(),notNullValue());
  assertThat(item.errorMessage(),containsString("document missing"));
}
