{
  int estimatedBytesSize=scaledRandomIntBetween(ByteSizeValue.parseBytesSizeValue("10k","estimatedBytesSize").bytesAsInt(),ByteSizeValue.parseBytesSizeValue("256k","estimatedBytesSize").bytesAsInt());
  XContentBuilder mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties");
  int counter=0;
  int numberOfFields=0;
  while (true) {
    mapping.startObject(Strings.randomBase64UUID()).field("type","text").endObject();
    counter+=10;
    numberOfFields++;
    if (counter > estimatedBytesSize) {
      break;
    }
  }
  logger.info("number of fields [{}], estimated bytes [{}]",numberOfFields,estimatedBytesSize);
  mapping.endObject().endObject().endObject();
  int numberOfShards=scaledRandomIntBetween(1,cluster().numDataNodes());
  assertAcked(client().admin().indices().prepareCreate("test").setSettings(IndexMetaData.SETTING_NUMBER_OF_SHARDS,numberOfShards,IndexMetaData.SETTING_NUMBER_OF_REPLICAS,0).addMapping("type",mapping).setTimeout("60s").get());
  ensureGreen();
  MappingMetaData masterMappingMetaData=client().admin().indices().prepareGetMappings("test").setTypes("type").get().getMappings().get("test").get("type");
  for (  Client client : clients()) {
    MappingMetaData mappingMetadata=client.admin().indices().prepareGetMappings("test").setTypes("type").setLocal(true).get().getMappings().get("test").get("type");
    assertThat(mappingMetadata.source().string(),equalTo(masterMappingMetaData.source().string()));
    assertThat(mappingMetadata,equalTo(masterMappingMetaData));
  }
}
