{
  Map<K,V> onlyOnLeft=newHashMap();
  Map<K,V> onlyOnRight=new HashMap<K,V>(right);
  Map<K,V> onBoth=newHashMap();
  Map<K,MapDifference.ValueDifference<V>> differences=newHashMap();
  boolean eq=true;
  for (  Entry<? extends K,? extends V> entry : left.entrySet()) {
    K leftKey=entry.getKey();
    V leftValue=entry.getValue();
    if (right.containsKey(leftKey)) {
      V rightValue=onlyOnRight.remove(leftKey);
      if (Objects.equal(leftValue,rightValue)) {
        onBoth.put(leftKey,leftValue);
      }
 else {
        eq=false;
        differences.put(leftKey,new ValueDifferenceImpl<V>(leftValue,rightValue));
      }
    }
 else {
      eq=false;
      onlyOnLeft.put(leftKey,leftValue);
    }
  }
  boolean areEqual=eq && onlyOnRight.isEmpty();
  return new MapDifferenceImpl<K,V>(areEqual,onlyOnLeft,onlyOnRight,onBoth,differences);
}
