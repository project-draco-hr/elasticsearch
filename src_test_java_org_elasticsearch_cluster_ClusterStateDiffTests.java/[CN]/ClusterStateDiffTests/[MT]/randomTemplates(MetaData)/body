{
  return randomParts(metaData,"template",new RandomPart<IndexTemplateMetaData>(){
    @Override public ImmutableOpenMap<String,IndexTemplateMetaData> parts(    MetaData metaData){
      return metaData.templates();
    }
    @Override public MetaData.Builder put(    MetaData.Builder builder,    IndexTemplateMetaData part){
      return builder.put(part);
    }
    @Override public MetaData.Builder remove(    MetaData.Builder builder,    String name){
      return builder.removeTemplate(name);
    }
    @Override public IndexTemplateMetaData randomCreate(    String name){
      IndexTemplateMetaData.Builder builder=IndexTemplateMetaData.builder(name);
      builder.order(randomInt(1000)).template(randomName("temp")).settings(randomSettings(Settings.EMPTY));
      int aliasCount=randomIntBetween(0,10);
      for (int i=0; i < aliasCount; i++) {
        builder.putAlias(randomAlias());
      }
      if (randomBoolean()) {
        builder.putCustom(IndexWarmersMetaData.TYPE,randomWarmers());
      }
      return builder.build();
    }
    @Override public IndexTemplateMetaData randomChange(    IndexTemplateMetaData part){
      IndexTemplateMetaData.Builder builder=new IndexTemplateMetaData.Builder(part);
      builder.order(randomInt(1000));
      return builder.build();
    }
  }
);
}
