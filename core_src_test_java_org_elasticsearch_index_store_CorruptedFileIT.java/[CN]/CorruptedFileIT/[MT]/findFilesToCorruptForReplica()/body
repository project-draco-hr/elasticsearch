{
  Map<String,List<Path>> filesToNodes=new HashMap<>();
  ClusterState state=client().admin().cluster().prepareState().get().getState();
  Index test=state.metaData().index("test").getIndex();
  for (  ShardRouting shardRouting : state.getRoutingTable().allShards("test")) {
    if (shardRouting.primary()) {
      continue;
    }
    assertTrue(shardRouting.assignedToNode());
    NodesStatsResponse nodeStatses=client().admin().cluster().prepareNodesStats(shardRouting.currentNodeId()).setFs(true).get();
    NodeStats nodeStats=nodeStatses.getNodes()[0];
    List<Path> files=new ArrayList<>();
    filesToNodes.put(nodeStats.getNode().getName(),files);
    for (    FsInfo.Path info : nodeStats.getFs()) {
      String path=info.getPath();
      Path file=PathUtils.get(path).resolve("indices").resolve(test.getUUID()).resolve(Integer.toString(shardRouting.getId())).resolve("index");
      if (Files.exists(file)) {
        try (DirectoryStream<Path> stream=Files.newDirectoryStream(file)){
          for (          Path item : stream) {
            if (item.getFileName().toString().startsWith("segments_")) {
              files.add(item);
            }
          }
        }
       }
    }
  }
  return filesToNodes;
}
