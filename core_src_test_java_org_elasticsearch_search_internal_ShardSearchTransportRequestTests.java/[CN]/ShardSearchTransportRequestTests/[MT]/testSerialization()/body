{
  ShardSearchTransportRequest shardSearchTransportRequest=createShardSearchTransportRequest();
  try (BytesStreamOutput output=new BytesStreamOutput()){
    shardSearchTransportRequest.writeTo(output);
    try (StreamInput in=new NamedWriteableAwareStreamInput(output.bytes().streamInput(),namedWriteableRegistry)){
      ShardSearchTransportRequest deserializedRequest=new ShardSearchTransportRequest();
      deserializedRequest.readFrom(in);
      assertEquals(deserializedRequest.scroll(),shardSearchTransportRequest.scroll());
      assertArrayEquals(deserializedRequest.filteringAliases(),shardSearchTransportRequest.filteringAliases());
      assertArrayEquals(deserializedRequest.indices(),shardSearchTransportRequest.indices());
      assertArrayEquals(deserializedRequest.types(),shardSearchTransportRequest.types());
      assertEquals(deserializedRequest.indicesOptions(),shardSearchTransportRequest.indicesOptions());
      assertEquals(deserializedRequest.isProfile(),shardSearchTransportRequest.isProfile());
      assertEquals(deserializedRequest.nowInMillis(),shardSearchTransportRequest.nowInMillis());
      assertEquals(deserializedRequest.source(),shardSearchTransportRequest.source());
      assertEquals(deserializedRequest.searchType(),shardSearchTransportRequest.searchType());
      assertEquals(deserializedRequest.shardId(),shardSearchTransportRequest.shardId());
      assertEquals(deserializedRequest.numberOfShards(),shardSearchTransportRequest.numberOfShards());
      assertNotSame(deserializedRequest,shardSearchTransportRequest);
    }
   }
 }
