{
  XContentParser parser=parseContext.parser();
  TermSuggestionBuilder tmpSuggestion=new TermSuggestionBuilder("_na_");
  ParseFieldMatcher parseFieldMatcher=parseContext.parseFieldMatcher();
  XContentParser.Token token;
  String currentFieldName=null;
  String fieldname=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token.isValue()) {
      if (parseFieldMatcher.match(currentFieldName,SuggestionBuilder.ANALYZER_FIELD)) {
        tmpSuggestion.analyzer(parser.text());
      }
 else       if (parseFieldMatcher.match(currentFieldName,SuggestionBuilder.FIELDNAME_FIELD)) {
        fieldname=parser.text();
      }
 else       if (parseFieldMatcher.match(currentFieldName,SuggestionBuilder.SIZE_FIELD)) {
        tmpSuggestion.size(parser.intValue());
      }
 else       if (parseFieldMatcher.match(currentFieldName,SuggestionBuilder.SHARDSIZE_FIELD)) {
        tmpSuggestion.shardSize(parser.intValue());
      }
 else       if (parseFieldMatcher.match(currentFieldName,SUGGEST_MODE)) {
        tmpSuggestion.suggestMode(SuggestMode.resolve(parser.text()));
      }
 else       if (parseFieldMatcher.match(currentFieldName,ACCURACY)) {
        tmpSuggestion.accuracy(parser.floatValue());
      }
 else       if (parseFieldMatcher.match(currentFieldName,SORT)) {
        tmpSuggestion.sort(SortBy.resolve(parser.text()));
      }
 else       if (parseFieldMatcher.match(currentFieldName,STRING_DISTANCE)) {
        tmpSuggestion.stringDistance(StringDistanceImpl.resolve(parser.text()));
      }
 else       if (parseFieldMatcher.match(currentFieldName,MAX_EDITS)) {
        tmpSuggestion.maxEdits(parser.intValue());
      }
 else       if (parseFieldMatcher.match(currentFieldName,MAX_INSPECTIONS)) {
        tmpSuggestion.maxInspections(parser.intValue());
      }
 else       if (parseFieldMatcher.match(currentFieldName,MAX_TERM_FREQ)) {
        tmpSuggestion.maxTermFreq(parser.floatValue());
      }
 else       if (parseFieldMatcher.match(currentFieldName,PREFIX_LENGTH)) {
        tmpSuggestion.prefixLength(parser.intValue());
      }
 else       if (parseFieldMatcher.match(currentFieldName,MIN_WORD_LENGTH)) {
        tmpSuggestion.minWordLength(parser.intValue());
      }
 else       if (parseFieldMatcher.match(currentFieldName,MIN_DOC_FREQ)) {
        tmpSuggestion.minDocFreq(parser.floatValue());
      }
    }
 else {
      throw new ParsingException(parser.getTokenLocation(),"suggester[term] doesn't support field [" + currentFieldName + "]");
    }
  }
  if (fieldname == null) {
    throw new ParsingException(parser.getTokenLocation(),"the required field option is missing");
  }
  return new TermSuggestionBuilder(fieldname,tmpSuggestion);
}
