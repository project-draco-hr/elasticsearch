{
  XContentParser parser=parseContext.parser();
  TermSuggestionBuilder suggestion=new TermSuggestionBuilder(name);
  ParseFieldMatcher parseFieldMatcher=parseContext.parseFieldMatcher();
  XContentParser.Token token;
  String fieldName=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      fieldName=parser.currentName();
    }
 else     if (token.isValue()) {
      if (parseFieldMatcher.match(fieldName,SuggestionBuilder.ANALYZER_FIELD)) {
        suggestion.analyzer(parser.text());
      }
 else       if (parseFieldMatcher.match(fieldName,SuggestionBuilder.FIELDNAME_FIELD)) {
        suggestion.field(parser.text());
      }
 else       if (parseFieldMatcher.match(fieldName,SuggestionBuilder.SIZE_FIELD)) {
        suggestion.size(parser.intValue());
      }
 else       if (parseFieldMatcher.match(fieldName,SuggestionBuilder.SHARDSIZE_FIELD)) {
        suggestion.shardSize(parser.intValue());
      }
 else       if (parseFieldMatcher.match(fieldName,SUGGEST_MODE)) {
        suggestion.suggestMode(SuggestMode.resolve(parser.text()));
      }
 else       if (parseFieldMatcher.match(fieldName,ACCURACY)) {
        suggestion.accuracy(parser.floatValue());
      }
 else       if (parseFieldMatcher.match(fieldName,SORT)) {
        suggestion.sort(SortBy.resolve(parser.text()));
      }
 else       if (parseFieldMatcher.match(fieldName,STRING_DISTANCE)) {
        suggestion.stringDistance(StringDistanceImpl.resolve(parser.text()));
      }
 else       if (parseFieldMatcher.match(fieldName,MAX_EDITS)) {
        suggestion.maxEdits(parser.intValue());
      }
 else       if (parseFieldMatcher.match(fieldName,MAX_INSPECTIONS)) {
        suggestion.maxInspections(parser.intValue());
      }
 else       if (parseFieldMatcher.match(fieldName,MAX_TERM_FREQ)) {
        suggestion.maxTermFreq(parser.floatValue());
      }
 else       if (parseFieldMatcher.match(fieldName,PREFIX_LENGTH)) {
        suggestion.prefixLength(parser.intValue());
      }
 else       if (parseFieldMatcher.match(fieldName,MIN_WORD_LENGTH)) {
        suggestion.minWordLength(parser.intValue());
      }
 else       if (parseFieldMatcher.match(fieldName,MIN_DOC_FREQ)) {
        suggestion.minDocFreq(parser.floatValue());
      }
    }
 else {
      throw new IllegalArgumentException("suggester[term] doesn't support field [" + fieldName + "]");
    }
  }
  return suggestion;
}
