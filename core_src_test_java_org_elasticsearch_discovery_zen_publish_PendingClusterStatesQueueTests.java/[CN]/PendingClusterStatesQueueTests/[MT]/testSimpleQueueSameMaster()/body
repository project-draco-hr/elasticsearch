{
  final int numUpdates=scaledRandomIntBetween(50,100);
  List<ClusterState> states=randomStates(numUpdates,"master");
  Collections.shuffle(states,random());
  PendingClusterStatesQueue queue;
  queue=createQueueWithStates(states);
  assertThat(queue.getNextClusterStateToProcess(),nullValue());
  ClusterState highestCommitted=null;
  for (  ClusterStateContext context : randomCommitStates(queue)) {
    if (highestCommitted == null || context.state.supersedes(highestCommitted)) {
      highestCommitted=context.state;
    }
  }
  assertThat(queue.getNextClusterStateToProcess(),sameInstance(highestCommitted));
  queue.markAsProcessed(highestCommitted);
  assertThat(queue.getNextClusterStateToProcess(),nullValue());
}
