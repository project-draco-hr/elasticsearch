{
  boolean found=false;
  currentDocFreq=NOT_FOUND;
  currentTotalTermFreq=NOT_FOUND;
  int docFreq=0;
  long totalTermFreq=0;
  for (  Holder anEnum : enums) {
    if (!anEnum.termsEnum.seekExact(text)) {
      continue;
    }
    found=true;
    if (anEnum.bits == null) {
      docFreq+=anEnum.termsEnum.docFreq();
      if (docsEnumFlag == DocsEnum.FLAG_FREQS) {
        long leafTotalTermFreq=anEnum.termsEnum.totalTermFreq();
        if (totalTermFreq == -1 || leafTotalTermFreq == -1) {
          totalTermFreq=-1;
          continue;
        }
        totalTermFreq+=leafTotalTermFreq;
      }
    }
 else {
      DocsEnum docsEnum=anEnum.docsEnum=anEnum.termsEnum.docs(anEnum.bits,anEnum.docsEnum,docsEnumFlag);
      if (docsEnumFlag == DocsEnum.FLAG_FREQS) {
        for (int docId=docsEnum.nextDoc(); docId != DocIdSetIterator.NO_MORE_DOCS; docId=docsEnum.nextDoc()) {
          docFreq++;
          totalTermFreq+=docsEnum.freq();
        }
      }
 else {
        for (int docId=docsEnum.nextDoc(); docId != DocIdSetIterator.NO_MORE_DOCS; docId=docsEnum.nextDoc()) {
          docFreq++;
        }
      }
    }
    currentDocFreq=docFreq;
    currentTotalTermFreq=totalTermFreq;
    current=text;
  }
  return found;
}
