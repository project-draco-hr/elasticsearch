{
  int docFreq=0;
  long totalTermFreq=0;
  for (  Holder anEnum : enums) {
    if (anEnum.termsEnum.seekExact(text)) {
      if (anEnum.bits == null) {
        docFreq+=anEnum.termsEnum.docFreq();
        if (docsEnumFlag == DocsEnum.FLAG_FREQS) {
          long leafTotalTermFreq=anEnum.termsEnum.totalTermFreq();
          if (totalTermFreq == -1 || leafTotalTermFreq == -1) {
            totalTermFreq=-1;
            continue;
          }
          totalTermFreq+=leafTotalTermFreq;
        }
      }
 else {
        final DocsEnum docsEnum=anEnum.docsEnum=anEnum.termsEnum.docs(anEnum.bits,anEnum.docsEnum,docsEnumFlag);
        if (docsEnumFlag == DocsEnum.FLAG_FREQS) {
          for (int docId=docsEnum.nextDoc(); docId != DocIdSetIterator.NO_MORE_DOCS; docId=docsEnum.nextDoc()) {
            docFreq++;
            totalTermFreq+=docsEnum.freq();
          }
        }
 else {
          for (int docId=docsEnum.nextDoc(); docId != DocIdSetIterator.NO_MORE_DOCS; docId=docsEnum.nextDoc()) {
            docFreq++;
          }
        }
      }
    }
  }
  if (docFreq > 0) {
    currentDocFreq=docFreq;
    currentTotalTermFreq=totalTermFreq;
    current=text;
    return true;
  }
 else {
    currentDocFreq=NOT_FOUND;
    currentTotalTermFreq=NOT_FOUND;
    current=null;
    return false;
  }
}
