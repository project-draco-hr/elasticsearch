{
  final Queue<Iterator<ShardRouting>> queue=new ArrayDeque<>();
  for (  Map.Entry<String,RoutingNode> entry : nodesToShards.entrySet()) {
    queue.add(entry.getValue().copyShards().iterator());
  }
  return new Iterator<ShardRouting>(){
    public boolean hasNext(){
      while (!queue.isEmpty()) {
        if (queue.peek().hasNext()) {
          return true;
        }
        queue.poll();
      }
      return false;
    }
    public ShardRouting next(){
      if (hasNext() == false) {
        throw new NoSuchElementException();
      }
      Iterator<ShardRouting> iter=queue.poll();
      ShardRouting result=iter.next();
      queue.offer(iter);
      return result;
    }
    public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
