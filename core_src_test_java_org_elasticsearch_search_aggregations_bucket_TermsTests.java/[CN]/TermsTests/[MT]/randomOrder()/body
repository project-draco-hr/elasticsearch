{
  List<Terms.Order> orders=new ArrayList<>();
switch (randomInt(4)) {
case 0:
    orders.add(Terms.Order.term(randomBoolean()));
  break;
case 1:
orders.add(Terms.Order.count(randomBoolean()));
break;
case 2:
orders.add(Terms.Order.aggregation(randomAsciiOfLengthBetween(3,20),randomBoolean()));
break;
case 3:
orders.add(Terms.Order.aggregation(randomAsciiOfLengthBetween(3,20),randomAsciiOfLengthBetween(3,20),randomBoolean()));
break;
case 4:
int numOrders=randomIntBetween(1,3);
for (int i=0; i < numOrders; i++) {
orders.addAll(randomOrder());
}
break;
default :
fail();
}
return orders;
}
