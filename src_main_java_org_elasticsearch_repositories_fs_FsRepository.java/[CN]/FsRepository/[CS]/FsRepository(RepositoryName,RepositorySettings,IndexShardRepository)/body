{
  super(name.getName(),repositorySettings,indexShardRepository);
  Path locationFile;
  String location=repositorySettings.settings().get("location",settings.get("repositories.fs.location"));
  if (location == null) {
    logger.warn("using local fs location for gateway, should be changed to be a shared location across nodes");
    throw new RepositoryException(name.name(),"missing location");
  }
 else {
    locationFile=Paths.get(location);
  }
  blobStore=new FsBlobStore(settings,locationFile);
  this.chunkSize=repositorySettings.settings().getAsBytesSize("chunk_size",settings.getAsBytesSize("repositories.fs.chunk_size",null));
  this.compress=repositorySettings.settings().getAsBoolean("compress",settings.getAsBoolean("repositories.fs.compress",false));
  this.basePath=BlobPath.cleanPath();
}
