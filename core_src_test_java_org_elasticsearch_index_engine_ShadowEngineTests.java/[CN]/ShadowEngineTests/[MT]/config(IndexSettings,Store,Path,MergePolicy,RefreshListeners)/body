{
  IndexWriterConfig iwc=newIndexWriterConfig();
  final EngineConfig.OpenMode openMode;
  try {
    if (Lucene.indexExists(store.directory()) == false) {
      openMode=EngineConfig.OpenMode.CREATE_INDEX_AND_TRANSLOG;
    }
 else {
      openMode=EngineConfig.OpenMode.OPEN_INDEX_CREATE_TRANSLOG;
    }
  }
 catch (  IOException e) {
    throw new ElasticsearchException("can't find index?",e);
  }
  Engine.EventListener eventListener=new Engine.EventListener(){
    @Override public void onFailedEngine(    String reason,    @Nullable Exception e){
    }
  }
;
  TranslogConfig translogConfig=new TranslogConfig(shardId,translogPath,indexSettings,BigArrays.NON_RECYCLING_INSTANCE);
  EngineConfig config=new EngineConfig(openMode,shardId,threadPool,indexSettings,null,store,createSnapshotDeletionPolicy(),mergePolicy,iwc.getAnalyzer(),iwc.getSimilarity(),new CodecService(null,logger),eventListener,null,IndexSearcher.getDefaultQueryCache(),IndexSearcher.getDefaultQueryCachingPolicy(),translogConfig,TimeValue.timeValueMinutes(5),refreshListeners,IndexRequest.UNSET_AUTO_GENERATED_TIMESTAMP);
  return config;
}
