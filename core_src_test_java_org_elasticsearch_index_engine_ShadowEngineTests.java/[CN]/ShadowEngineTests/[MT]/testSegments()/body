{
  primaryEngine.close();
  primaryEngine=createInternalEngine(defaultSettings,store,createTempDir(),NoMergePolicy.INSTANCE);
  List<Segment> segments=primaryEngine.segments(false);
  assertThat(segments.isEmpty(),equalTo(true));
  assertThat(primaryEngine.segmentsStats(false).getCount(),equalTo(0L));
  assertThat(primaryEngine.segmentsStats(false).getMemoryInBytes(),equalTo(0L));
  ParsedDocument doc=testParsedDocument("1","1","test",null,-1,-1,testDocumentWithTextField(),B_1,null);
  primaryEngine.index(new Engine.Index(newUid("1"),doc));
  ParsedDocument doc2=testParsedDocument("2","2","test",null,-1,-1,testDocumentWithTextField(),B_2,null);
  primaryEngine.index(new Engine.Index(newUid("2"),doc2));
  primaryEngine.refresh("test");
  segments=primaryEngine.segments(false);
  assertThat(segments.size(),equalTo(1));
  SegmentsStats stats=primaryEngine.segmentsStats(false);
  assertThat(stats.getCount(),equalTo(1L));
  assertThat(stats.getTermsMemoryInBytes(),greaterThan(0L));
  assertThat(stats.getStoredFieldsMemoryInBytes(),greaterThan(0L));
  assertThat(stats.getTermVectorsMemoryInBytes(),equalTo(0L));
  assertThat(stats.getNormsMemoryInBytes(),greaterThan(0L));
  assertThat(stats.getPointsMemoryInBytes(),greaterThan(0L));
  assertThat(stats.getDocValuesMemoryInBytes(),greaterThan(0L));
  assertThat(segments.get(0).isCommitted(),equalTo(false));
  assertThat(segments.get(0).isSearch(),equalTo(true));
  assertThat(segments.get(0).getNumDocs(),equalTo(2));
  assertThat(segments.get(0).getDeletedDocs(),equalTo(0));
  assertTrue(segments.get(0).isCompound());
  assertThat(segments.get(0).ramTree,nullValue());
  segments=replicaEngine.segments(false);
  assertThat(segments.size(),equalTo(0));
  stats=replicaEngine.segmentsStats(false);
  assertThat(stats.getCount(),equalTo(0L));
  assertThat(stats.getTermsMemoryInBytes(),equalTo(0L));
  assertThat(stats.getStoredFieldsMemoryInBytes(),equalTo(0L));
  assertThat(stats.getTermVectorsMemoryInBytes(),equalTo(0L));
  assertThat(stats.getNormsMemoryInBytes(),equalTo(0L));
  assertThat(stats.getPointsMemoryInBytes(),equalTo(0L));
  assertThat(stats.getDocValuesMemoryInBytes(),equalTo(0L));
  assertThat(segments.size(),equalTo(0));
  primaryEngine.flush();
  replicaEngine.refresh("tests");
  segments=primaryEngine.segments(false);
  assertThat(segments.size(),equalTo(1));
  assertThat(primaryEngine.segmentsStats(false).getCount(),equalTo(1L));
  assertThat(segments.get(0).isCommitted(),equalTo(true));
  assertThat(segments.get(0).isSearch(),equalTo(true));
  assertThat(segments.get(0).getNumDocs(),equalTo(2));
  assertThat(segments.get(0).getDeletedDocs(),equalTo(0));
  assertThat(segments.get(0).isCompound(),equalTo(true));
  segments=replicaEngine.segments(false);
  assertThat(segments.size(),equalTo(1));
  assertThat(replicaEngine.segmentsStats(false).getCount(),equalTo(1L));
  assertThat(segments.get(0).isCommitted(),equalTo(true));
  assertThat(segments.get(0).isSearch(),equalTo(true));
  assertThat(segments.get(0).getNumDocs(),equalTo(2));
  assertThat(segments.get(0).getDeletedDocs(),equalTo(0));
  assertThat(segments.get(0).isCompound(),equalTo(true));
  ParsedDocument doc3=testParsedDocument("3","3","test",null,-1,-1,testDocumentWithTextField(),B_3,null);
  primaryEngine.index(new Engine.Index(newUid("3"),doc3));
  primaryEngine.refresh("test");
  segments=primaryEngine.segments(false);
  assertThat(segments.size(),equalTo(2));
  assertThat(primaryEngine.segmentsStats(false).getCount(),equalTo(2L));
  assertThat(primaryEngine.segmentsStats(false).getTermsMemoryInBytes(),greaterThan(stats.getTermsMemoryInBytes()));
  assertThat(primaryEngine.segmentsStats(false).getStoredFieldsMemoryInBytes(),greaterThan(stats.getStoredFieldsMemoryInBytes()));
  assertThat(primaryEngine.segmentsStats(false).getTermVectorsMemoryInBytes(),equalTo(0L));
  assertThat(primaryEngine.segmentsStats(false).getNormsMemoryInBytes(),greaterThan(stats.getNormsMemoryInBytes()));
  assertThat(primaryEngine.segmentsStats(false).getPointsMemoryInBytes(),greaterThan(stats.getPointsMemoryInBytes()));
  assertThat(primaryEngine.segmentsStats(false).getDocValuesMemoryInBytes(),greaterThan(stats.getDocValuesMemoryInBytes()));
  assertThat(segments.get(0).getGeneration() < segments.get(1).getGeneration(),equalTo(true));
  assertThat(segments.get(0).isCommitted(),equalTo(true));
  assertThat(segments.get(0).isSearch(),equalTo(true));
  assertThat(segments.get(0).getNumDocs(),equalTo(2));
  assertThat(segments.get(0).getDeletedDocs(),equalTo(0));
  assertThat(segments.get(0).isCompound(),equalTo(true));
  assertThat(segments.get(1).isCommitted(),equalTo(false));
  assertThat(segments.get(1).isSearch(),equalTo(true));
  assertThat(segments.get(1).getNumDocs(),equalTo(1));
  assertThat(segments.get(1).getDeletedDocs(),equalTo(0));
  assertThat(segments.get(1).isCompound(),equalTo(true));
  primaryEngine.flush();
  replicaEngine.refresh("test");
  segments=replicaEngine.segments(false);
  assertThat(segments.size(),equalTo(2));
  assertThat(replicaEngine.segmentsStats(false).getCount(),equalTo(2L));
  assertThat(replicaEngine.segmentsStats(false).getTermsMemoryInBytes(),greaterThan(stats.getTermsMemoryInBytes()));
  assertThat(replicaEngine.segmentsStats(false).getStoredFieldsMemoryInBytes(),greaterThan(stats.getStoredFieldsMemoryInBytes()));
  assertThat(replicaEngine.segmentsStats(false).getTermVectorsMemoryInBytes(),equalTo(0L));
  assertThat(replicaEngine.segmentsStats(false).getNormsMemoryInBytes(),greaterThan(stats.getNormsMemoryInBytes()));
  assertThat(replicaEngine.segmentsStats(false).getPointsMemoryInBytes(),greaterThan(stats.getPointsMemoryInBytes()));
  assertThat(replicaEngine.segmentsStats(false).getDocValuesMemoryInBytes(),greaterThan(stats.getDocValuesMemoryInBytes()));
  assertThat(segments.get(0).getGeneration() < segments.get(1).getGeneration(),equalTo(true));
  assertThat(segments.get(0).isCommitted(),equalTo(true));
  assertThat(segments.get(0).isSearch(),equalTo(true));
  assertThat(segments.get(0).getNumDocs(),equalTo(2));
  assertThat(segments.get(0).getDeletedDocs(),equalTo(0));
  assertThat(segments.get(0).isCompound(),equalTo(true));
  assertThat(segments.get(1).isCommitted(),equalTo(true));
  assertThat(segments.get(1).isSearch(),equalTo(true));
  assertThat(segments.get(1).getNumDocs(),equalTo(1));
  assertThat(segments.get(1).getDeletedDocs(),equalTo(0));
  assertThat(segments.get(1).isCompound(),equalTo(true));
  primaryEngine.delete(new Engine.Delete("test","1",newUid("1")));
  primaryEngine.refresh("test");
  segments=primaryEngine.segments(false);
  assertThat(segments.size(),equalTo(2));
  assertThat(primaryEngine.segmentsStats(false).getCount(),equalTo(2L));
  assertThat(segments.get(0).getGeneration() < segments.get(1).getGeneration(),equalTo(true));
  assertThat(segments.get(0).isCommitted(),equalTo(true));
  assertThat(segments.get(0).isSearch(),equalTo(true));
  assertThat(segments.get(0).getNumDocs(),equalTo(1));
  assertThat(segments.get(0).getDeletedDocs(),equalTo(1));
  assertThat(segments.get(0).isCompound(),equalTo(true));
  assertThat(segments.get(1).isCommitted(),equalTo(true));
  assertThat(segments.get(1).isSearch(),equalTo(true));
  assertThat(segments.get(1).getNumDocs(),equalTo(1));
  assertThat(segments.get(1).getDeletedDocs(),equalTo(0));
  assertThat(segments.get(1).isCompound(),equalTo(true));
  primaryEngine.flush();
  replicaEngine.refresh("test");
  ParsedDocument doc4=testParsedDocument("4","4","test",null,-1,-1,testDocumentWithTextField(),B_3,null);
  primaryEngine.index(new Engine.Index(newUid("4"),doc4));
  primaryEngine.refresh("test");
  segments=primaryEngine.segments(false);
  assertThat(segments.size(),equalTo(3));
  assertThat(primaryEngine.segmentsStats(false).getCount(),equalTo(3L));
  assertThat(segments.get(0).getGeneration() < segments.get(1).getGeneration(),equalTo(true));
  assertThat(segments.get(0).isCommitted(),equalTo(true));
  assertThat(segments.get(0).isSearch(),equalTo(true));
  assertThat(segments.get(0).getNumDocs(),equalTo(1));
  assertThat(segments.get(0).getDeletedDocs(),equalTo(1));
  assertThat(segments.get(0).isCompound(),equalTo(true));
  assertThat(segments.get(1).isCommitted(),equalTo(true));
  assertThat(segments.get(1).isSearch(),equalTo(true));
  assertThat(segments.get(1).getNumDocs(),equalTo(1));
  assertThat(segments.get(1).getDeletedDocs(),equalTo(0));
  assertThat(segments.get(1).isCompound(),equalTo(true));
  assertThat(segments.get(2).isCommitted(),equalTo(false));
  assertThat(segments.get(2).isSearch(),equalTo(true));
  assertThat(segments.get(2).getNumDocs(),equalTo(1));
  assertThat(segments.get(2).getDeletedDocs(),equalTo(0));
  assertThat(segments.get(2).isCompound(),equalTo(true));
}
