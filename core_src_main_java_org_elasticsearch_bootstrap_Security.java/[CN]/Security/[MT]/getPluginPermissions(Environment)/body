{
  Map<String,Policy> map=new HashMap<>();
  if (Files.exists(environment.pluginsFile())) {
    try (DirectoryStream<Path> stream=Files.newDirectoryStream(environment.pluginsFile())){
      for (      Path plugin : stream) {
        Path policyFile=plugin.resolve(PluginInfo.ES_PLUGIN_POLICY);
        if (Files.exists(policyFile)) {
          List<URL> codebases=new ArrayList<>();
          try (DirectoryStream<Path> jarStream=Files.newDirectoryStream(plugin,"*.jar")){
            for (            Path jar : jarStream) {
              codebases.add(jar.toRealPath().toUri().toURL());
            }
          }
           Policy policy=readPolicy(policyFile.toUri().toURL(),codebases.toArray(new URL[codebases.size()]));
          for (          URL url : codebases) {
            if (map.put(url.getFile(),policy) != null) {
              throw new IllegalStateException("per-plugin permissions already granted for jar file: " + url);
            }
          }
        }
      }
    }
   }
  return Collections.unmodifiableMap(map);
}
