{
  Map<String,Object> source=templateSource;
  if (source.containsKey("template")) {
    template(source.get("template").toString());
  }
  if (source.containsKey("order")) {
    order(XContentMapValues.nodeIntegerValue(source.get("order"),order()));
  }
  if (source.containsKey("settings")) {
    if (!(source.get("settings") instanceof Map)) {
      throw new ElasticSearchIllegalArgumentException("Malformed settings section, should include an inner object");
    }
    settings((Map<String,Object>)source.get("settings"));
  }
  if (source.containsKey("mappings")) {
    Map<String,Object> mappings=(Map<String,Object>)source.get("mappings");
    for (    Map.Entry<String,Object> entry : mappings.entrySet()) {
      if (!(entry.getValue() instanceof Map)) {
        throw new ElasticSearchIllegalArgumentException("Malformed mappings section for type [" + entry.getKey() + "], should include an inner object describing the mapping");
      }
      mapping(entry.getKey(),(Map<String,Object>)entry.getValue());
    }
  }
  return this;
}
