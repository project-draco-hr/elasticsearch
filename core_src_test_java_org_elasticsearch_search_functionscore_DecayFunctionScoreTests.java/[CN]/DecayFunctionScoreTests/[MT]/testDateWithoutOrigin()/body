{
  DateTime dt=new DateTime(DateTimeZone.UTC);
  assertAcked(prepareCreate("test").addMapping("type1",jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("test").field("type","string").endObject().startObject("num1").field("type","date").endObject().endObject().endObject().endObject()));
  ensureYellow();
  DateTime docDate=dt.minusDays(1);
  String docDateString=docDate.getYear() + "-" + docDate.getMonthOfYear()+ "-"+ docDate.getDayOfMonth();
  client().index(indexRequest("test").type("type1").id("1").source(jsonBuilder().startObject().field("test","value").field("num1",docDateString).endObject())).actionGet();
  docDate=dt.minusDays(2);
  docDateString=docDate.getYear() + "-" + docDate.getMonthOfYear()+ "-"+ docDate.getDayOfMonth();
  client().index(indexRequest("test").type("type1").id("2").source(jsonBuilder().startObject().field("test","value").field("num1",docDateString).endObject())).actionGet();
  docDate=dt.minusDays(3);
  docDateString=docDate.getYear() + "-" + docDate.getMonthOfYear()+ "-"+ docDate.getDayOfMonth();
  client().index(indexRequest("test").type("type1").id("3").source(jsonBuilder().startObject().field("test","value").field("num1",docDateString).endObject())).actionGet();
  refresh();
  ActionFuture<SearchResponse> response=client().search(searchRequest().searchType(SearchType.QUERY_THEN_FETCH).source(searchSource().query(functionScoreQuery(QueryBuilders.matchAllQuery()).add(linearDecayFunction("num1","1000w")).add(gaussDecayFunction("num1","1d")).add(exponentialDecayFunction("num1","1000w")).scoreMode("multiply"))));
  SearchResponse sr=response.actionGet();
  assertNoFailures(sr);
  SearchHits sh=sr.getHits();
  assertThat(sh.hits().length,equalTo(3));
  double[] scores=new double[4];
  for (int i=0; i < sh.hits().length; i++) {
    scores[Integer.parseInt(sh.getAt(i).getId()) - 1]=sh.getAt(i).getScore();
  }
  assertThat(scores[1],lessThan(scores[0]));
  assertThat(scores[2],lessThan(scores[1]));
}
