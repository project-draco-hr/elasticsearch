{
  this.settings=ImmutableMap.copyOf(new TreeMap<>(settings));
  Map<String,String> forcedUnderscoreSettings=null;
  for (  Map.Entry<String,String> entry : settings.entrySet()) {
    String toUnderscoreCase=Strings.toUnderscoreCase(entry.getKey());
    if (!toUnderscoreCase.equals(entry.getKey())) {
      if (forcedUnderscoreSettings == null) {
        forcedUnderscoreSettings=new HashMap<>();
      }
      forcedUnderscoreSettings.put(toUnderscoreCase,entry.getValue());
    }
  }
  this.forcedUnderscoreSettings=forcedUnderscoreSettings == null ? ImmutableMap.<String,String>of() : ImmutableMap.copyOf(forcedUnderscoreSettings);
  this.classLoader=classLoader;
}
