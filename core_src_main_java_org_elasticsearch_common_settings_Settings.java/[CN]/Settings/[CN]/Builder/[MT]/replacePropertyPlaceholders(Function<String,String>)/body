{
  PropertyPlaceholder propertyPlaceholder=new PropertyPlaceholder("${","}",false);
  PropertyPlaceholder.PlaceholderResolver placeholderResolver=new PropertyPlaceholder.PlaceholderResolver(){
    @Override public String resolvePlaceholder(    String placeholderName){
      final String value=getenv.apply(placeholderName);
      if (value != null) {
        return value;
      }
      return map.get(placeholderName);
    }
    @Override public boolean shouldIgnoreMissing(    String placeholderName){
      if (placeholderName.startsWith("prompt.")) {
        return true;
      }
      return false;
    }
    @Override public boolean shouldRemoveMissingPlaceholder(    String placeholderName){
      if (placeholderName.startsWith("prompt.")) {
        return false;
      }
      return true;
    }
  }
;
  Iterator<Map.Entry<String,String>> entryItr=map.entrySet().iterator();
  while (entryItr.hasNext()) {
    Map.Entry<String,String> entry=entryItr.next();
    if (entry.getValue() == null) {
      continue;
    }
    String value=propertyPlaceholder.replacePlaceholders(entry.getValue(),placeholderResolver);
    if (Strings.hasLength(value)) {
      entry.setValue(value);
    }
 else {
      entryItr.remove();
    }
  }
  return this;
}
