{
  super(index,indexSettings);
  this.analysisService=analysisService;
  this.documentParser=new DocumentMapperParser(index,indexSettings,analysisService);
  this.searchAnalyzer=new SmartIndexNameSearchAnalyzer(analysisService.defaultSearchAnalyzer());
  this.searchQuoteAnalyzer=new SmartIndexNameSearchQuoteAnalyzer(analysisService.defaultSearchQuoteAnalyzer());
  this.dynamic=componentSettings.getAsBoolean("dynamic",true);
  String defaultMappingLocation=componentSettings.get("default_mapping_location");
  URL defaultMappingUrl;
  if (defaultMappingLocation == null) {
    try {
      defaultMappingUrl=environment.resolveConfig("default-mapping.json");
    }
 catch (    FailedToResolveConfigException e) {
      defaultMappingUrl=indexSettings.getClassLoader().getResource("org/elasticsearch/index/mapper/default-mapping.json");
    }
  }
 else {
    try {
      defaultMappingUrl=environment.resolveConfig(defaultMappingLocation);
    }
 catch (    FailedToResolveConfigException e) {
      try {
        defaultMappingUrl=new File(defaultMappingLocation).toURI().toURL();
      }
 catch (      MalformedURLException e1) {
        throw new FailedToResolveConfigException("Failed to resolve dynamic mapping location [" + defaultMappingLocation + "]");
      }
    }
  }
  try {
    defaultMappingSource=Streams.copyToString(new InputStreamReader(defaultMappingUrl.openStream(),Charsets.UTF_8));
  }
 catch (  IOException e) {
    throw new MapperException("Failed to load default mapping source from [" + defaultMappingLocation + "]",e);
  }
  logger.debug("using dynamic[{}], default mapping: default_mapping_location[{}], loaded_from[{}] and source[{}]",dynamic,defaultMappingLocation,defaultMappingUrl,defaultMappingSource);
}
