{
  super(index,indexSettings);
  this.analysisService=analysisService;
  this.fieldDataService=fieldDataService;
  this.fieldMappers=new FieldMappersLookup();
  this.documentParser=new DocumentMapperParser(index,indexSettings,analysisService,postingsFormatService,docValuesFormatService,similarityLookupService,scriptService);
  this.searchAnalyzer=new SmartIndexNameSearchAnalyzer(analysisService.defaultSearchAnalyzer());
  this.searchQuoteAnalyzer=new SmartIndexNameSearchQuoteAnalyzer(analysisService.defaultSearchQuoteAnalyzer());
  this.dynamic=componentSettings.getAsBoolean("dynamic",true);
  String defaultMappingLocation=componentSettings.get("default_mapping_location");
  final URL defaultMappingUrl;
  if (index.getName().equals(ScriptService.SCRIPT_INDEX)) {
    defaultMappingUrl=getMappingUrl(indexSettings,environment,defaultMappingLocation,"script-mapping.json","org/elasticsearch/index/mapper/script-mapping.json");
  }
 else {
    defaultMappingUrl=getMappingUrl(indexSettings,environment,defaultMappingLocation,"default-mapping.json","org/elasticsearch/index/mapper/default-mapping.json");
  }
  if (defaultMappingUrl == null) {
    logger.info("failed to find default-mapping.json in the classpath, using the default template");
    if (index.getName().equals(ScriptService.SCRIPT_INDEX)) {
      defaultMappingSource="{" + "\"_default_\": {" + "\"properties\": {"+ "\"script\": { \"enabled\": false },"+ "\"template\": { \"enabled\": false }"+ "}"+ "}"+ "}";
    }
 else {
      defaultMappingSource="{\n" + "    \"_default_\":{\n" + "    }\n"+ "}";
    }
  }
 else {
    try {
      defaultMappingSource=Streams.copyToString(new InputStreamReader(defaultMappingUrl.openStream(),Charsets.UTF_8));
    }
 catch (    IOException e) {
      throw new MapperException("Failed to load default mapping source from [" + defaultMappingLocation + "]",e);
    }
  }
  String percolatorMappingLocation=componentSettings.get("default_percolator_mapping_location");
  URL percolatorMappingUrl=null;
  if (percolatorMappingLocation != null) {
    try {
      percolatorMappingUrl=environment.resolveConfig(percolatorMappingLocation);
    }
 catch (    FailedToResolveConfigException e) {
      try {
        percolatorMappingUrl=new File(percolatorMappingLocation).toURI().toURL();
      }
 catch (      MalformedURLException e1) {
        throw new FailedToResolveConfigException("Failed to resolve default percolator mapping location [" + percolatorMappingLocation + "]");
      }
    }
  }
  if (percolatorMappingUrl != null) {
    try {
      defaultPercolatorMappingSource=Streams.copyToString(new InputStreamReader(percolatorMappingUrl.openStream(),Charsets.UTF_8));
    }
 catch (    IOException e) {
      throw new MapperException("Failed to load default percolator mapping source from [" + percolatorMappingUrl + "]",e);
    }
  }
 else {
    defaultPercolatorMappingSource="{\n" + "    \"" + "_default_"+ "\":{\n"+ "        \"_id\" : {\"index\": \"not_analyzed\"},"+ "        \"properties\" : {\n"+ "            \"query\" : {\n"+ "                \"type\" : \"object\",\n"+ "                \"enabled\" : false\n"+ "            }\n"+ "        }\n"+ "    }\n"+ "}";
  }
  if (logger.isTraceEnabled()) {
    logger.trace("using dynamic[{}], default mapping: default_mapping_location[{}], loaded_from[{}] and source[{}], default percolator mapping: location[{}], loaded_from[{}] and source[{}]",dynamic,defaultMappingLocation,defaultMappingUrl,defaultMappingSource,percolatorMappingLocation,percolatorMappingUrl,defaultPercolatorMappingSource);
  }
 else   if (logger.isDebugEnabled()) {
    logger.debug("using dynamic[{}], default mapping: default_mapping_location[{}], loaded_from[{}], default percolator mapping: location[{}], loaded_from[{}]",dynamic,defaultMappingLocation,defaultMappingUrl,percolatorMappingLocation,percolatorMappingUrl);
  }
}
