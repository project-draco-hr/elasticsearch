{
  boolean filterPercolateType=hasMapping(PercolatorService.Constants.TYPE_NAME);
  if (types != null && filterPercolateType) {
    for (    String type : types) {
      if (PercolatorService.Constants.TYPE_NAME.equals(type)) {
        filterPercolateType=false;
        break;
      }
    }
  }
  Filter excludePercolatorType=null;
  if (filterPercolateType) {
    excludePercolatorType=new NotFilter(documentMapper(PercolatorService.Constants.TYPE_NAME).typeFilter());
  }
  if (types == null || types.length == 0) {
    if (hasNested && filterPercolateType) {
      return new AndFilter(ImmutableList.of(excludePercolatorType,NonNestedDocsFilter.INSTANCE));
    }
 else     if (hasNested) {
      return NonNestedDocsFilter.INSTANCE;
    }
 else     if (filterPercolateType) {
      return excludePercolatorType;
    }
 else {
      return null;
    }
  }
  if (types.length == 1) {
    DocumentMapper docMapper=documentMapper(types[0]);
    if (docMapper == null) {
      return new TermFilter(new Term(types[0]));
    }
    return docMapper.typeFilter();
  }
  boolean useTermsFilter=true;
  for (  String type : types) {
    DocumentMapper docMapper=documentMapper(type);
    if (docMapper == null) {
      useTermsFilter=false;
      break;
    }
    if (!docMapper.typeMapper().fieldType().indexed()) {
      useTermsFilter=false;
      break;
    }
  }
  if (useTermsFilter) {
    BytesRef[] typesBytes=new BytesRef[types.length];
    for (int i=0; i < typesBytes.length; i++) {
      typesBytes[i]=new BytesRef(types[i]);
    }
    TermsFilter termsFilter=new TermsFilter(TypeFieldMapper.NAME,typesBytes);
    if (filterPercolateType) {
      return new AndFilter(ImmutableList.of(excludePercolatorType,termsFilter));
    }
 else {
      return termsFilter;
    }
  }
 else {
    XBooleanFilter bool=new XBooleanFilter();
    for (    String type : types) {
      DocumentMapper docMapper=documentMapper(type);
      if (docMapper == null) {
        bool.add(new FilterClause(new TermFilter(new Term(TypeFieldMapper.NAME,type)),BooleanClause.Occur.SHOULD));
      }
 else {
        bool.add(new FilterClause(docMapper.typeFilter(),BooleanClause.Occur.SHOULD));
      }
    }
    if (filterPercolateType) {
      bool.add(excludePercolatorType,BooleanClause.Occur.MUST);
    }
    return bool;
  }
}
