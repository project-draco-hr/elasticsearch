{
  RecoveryStatus onGoingRecovery=onGoingRecoveries.get(request.recoveryId());
  if (onGoingRecovery == null) {
    throw new IndexShardClosedException(request.shardId());
  }
  if (onGoingRecovery.canceled) {
    onGoingRecovery.sentCanceledToSource=true;
    throw new IndexShardClosedException(request.shardId());
  }
  Store store=onGoingRecovery.indexShard.store();
  String prefix="recovery." + onGoingRecovery.startTime + ".";
  Set<String> filesToRename=Sets.newHashSet();
  for (  String existingFile : store.directory().listAll()) {
    if (existingFile.startsWith(prefix)) {
      filesToRename.add(existingFile.substring(prefix.length(),existingFile.length()));
    }
  }
  Exception failureToRename=null;
  if (!filesToRename.isEmpty()) {
    for (    String fileToRename : filesToRename) {
      store.directory().deleteFile(fileToRename);
    }
    for (    String fileToRename : filesToRename) {
      try {
        store.renameFile(prefix + fileToRename,fileToRename);
      }
 catch (      Exception e) {
        failureToRename=e;
        break;
      }
    }
  }
  if (failureToRename != null) {
    throw failureToRename;
  }
  store.writeChecksums(onGoingRecovery.checksums);
  for (  String existingFile : store.directory().listAll()) {
    if (!request.snapshotFiles().contains(existingFile) && !Store.isChecksum(existingFile)) {
      try {
        store.directory().deleteFile(existingFile);
      }
 catch (      Exception e) {
      }
    }
  }
  channel.sendResponse(TransportResponse.Empty.INSTANCE);
}
