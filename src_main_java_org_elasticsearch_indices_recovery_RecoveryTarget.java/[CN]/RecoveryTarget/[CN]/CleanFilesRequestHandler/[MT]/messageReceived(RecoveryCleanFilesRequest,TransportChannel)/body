{
  RecoveryStatus onGoingRecovery=onGoingRecoveries.get(request.recoveryId());
  validateRecoveryStatus(onGoingRecovery,request.shardId());
  final Store store=onGoingRecovery.indexShard.store();
  store.incRef();
  try {
    String prefix="recovery." + onGoingRecovery.recoveryState().getTimer().startTime() + ".";
    Set<String> filesToRename=Sets.newHashSet();
    for (    String existingFile : store.directory().listAll()) {
      if (existingFile.startsWith(prefix)) {
        filesToRename.add(existingFile.substring(prefix.length(),existingFile.length()));
      }
    }
    Exception failureToRename=null;
    if (!filesToRename.isEmpty()) {
      final Directory directory=store.directory();
      for (      String file : filesToRename) {
        try {
          directory.deleteFile(file);
        }
 catch (        Throwable ex) {
          logger.debug("failed to delete file [{}]",ex,file);
        }
      }
      for (      String fileToRename : filesToRename) {
        store.renameFile(prefix + fileToRename,fileToRename);
      }
    }
    onGoingRecovery.legacyChecksums.write(store);
    for (    String existingFile : store.directory().listAll()) {
      if (!request.snapshotFiles().contains(existingFile) && !Store.isChecksum(existingFile)) {
        try {
          store.directory().deleteFile(existingFile);
        }
 catch (        Exception e) {
        }
      }
    }
    channel.sendResponse(TransportResponse.Empty.INSTANCE);
  }
  finally {
    store.decRef();
  }
}
