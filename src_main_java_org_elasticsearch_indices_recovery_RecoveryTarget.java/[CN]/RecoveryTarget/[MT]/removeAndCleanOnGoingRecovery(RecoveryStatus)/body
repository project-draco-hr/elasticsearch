{
  if (status == null) {
    return;
  }
  status=onGoingRecoveries.remove(status.recoveryId);
  if (status == null) {
    return;
  }
  status.cancel();
  Set<Entry<String,IndexOutput>> entrySet=status.cancleAndClearOpenIndexInputs();
  Iterator<Entry<String,IndexOutput>> iterator=entrySet.iterator();
  while (iterator.hasNext()) {
    Map.Entry<String,IndexOutput> entry=iterator.next();
synchronized (entry.getValue()) {
      IOUtils.closeWhileHandlingException(entry.getValue());
    }
    iterator.remove();
  }
  status.checksums=null;
}
