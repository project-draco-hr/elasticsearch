{
  super(settings);
  this.threadPool=threadPool;
  this.transportService=transportService;
  this.recoverySettings=recoverySettings;
  this.clusterService=clusterService;
  this.onGoingRecoveries=new RecoveriesCollection(logger,threadPool);
  transportService.registerHandler(Actions.FILES_INFO,new FilesInfoRequestHandler());
  transportService.registerHandler(Actions.FILE_CHUNK,new FileChunkTransportRequestHandler());
  transportService.registerHandler(Actions.CLEAN_FILES,new CleanFilesRequestHandler());
  transportService.registerHandler(Actions.PREPARE_TRANSLOG,new PrepareForTranslogOperationsRequestHandler());
  transportService.registerHandler(Actions.TRANSLOG_OPS,new TranslogOperationsRequestHandler());
  transportService.registerHandler(Actions.FINALIZE,new FinalizeRecoveryRequestHandler());
  indicesLifecycle.addListener(new IndicesLifecycle.Listener(){
    @Override public void beforeIndexShardClosed(    ShardId shardId,    @Nullable IndexShard indexShard){
      if (indexShard != null) {
        onGoingRecoveries.cancelRecoveriesForShard(shardId,"shard closed");
      }
    }
  }
);
}
