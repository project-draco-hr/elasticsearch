{
  UpdateSettingsRequest updateSettingsRequest=updateSettingsRequest(Strings.splitStringByCommaToArray(request.param("index")));
  updateSettingsRequest.listenerThreaded(false);
  updateSettingsRequest.masterNodeTimeout(request.paramAsTime("master_timeout",updateSettingsRequest.masterNodeTimeout()));
  ImmutableSettings.Builder updateSettings=ImmutableSettings.settingsBuilder();
  String bodySettingsStr=request.content().toUtf8();
  if (Strings.hasText(bodySettingsStr)) {
    try {
      Settings buildSettings=ImmutableSettings.settingsBuilder().loadFromSource(bodySettingsStr).build();
      for (      Map.Entry<String,String> entry : buildSettings.getAsMap().entrySet()) {
        String key=entry.getKey();
        String value=entry.getValue();
        if (key.startsWith("settings.")) {
          key=key.substring("settings.".length());
        }
        updateSettings.put(key,value);
      }
    }
 catch (    Exception e) {
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,BAD_REQUEST,new SettingsException("Failed to parse index settings",e)));
      }
 catch (      IOException e1) {
        logger.warn("Failed to send response",e1);
      }
      return;
    }
  }
  for (  Map.Entry<String,String> entry : request.params().entrySet()) {
    if (entry.getKey().equals("pretty")) {
      continue;
    }
    updateSettings.put(entry.getKey(),entry.getValue());
  }
  updateSettingsRequest.settings(updateSettings);
  client.admin().indices().updateSettings(updateSettingsRequest,new ActionListener<UpdateSettingsResponse>(){
    @Override public void onResponse(    UpdateSettingsResponse updateSettingsResponse){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject().field("ok",true).endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
