{
  SearchResponse response=client().prepareSearch("idx").addAggregation(terms("terms").field("tag").subAggregation(sum("sum").field(SINGLE_VALUED_FIELD_NAME))).addAggregation(maxBucket("max_bucket").setBucketsPaths("terms>sum")).execute().actionGet();
  assertSearchResponse(response);
  Terms terms=response.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  assertThat(terms.getName(),equalTo("terms"));
  List<Terms.Bucket> buckets=terms.getBuckets();
  assertThat(buckets.size(),equalTo(interval));
  List<String> maxKeys=new ArrayList<>();
  double maxValue=Double.NEGATIVE_INFINITY;
  for (int i=0; i < interval; ++i) {
    Terms.Bucket bucket=buckets.get(i);
    assertThat(bucket,notNullValue());
    assertThat((String)bucket.getKey(),equalTo("tag" + (i % interval)));
    assertThat(bucket.getDocCount(),greaterThan(0l));
    Sum sum=bucket.getAggregations().get("sum");
    assertThat(sum,notNullValue());
    if (sum.value() > maxValue) {
      maxValue=sum.value();
      maxKeys=new ArrayList<>();
      maxKeys.add(bucket.getKeyAsString());
    }
 else     if (sum.value() == maxValue) {
      maxKeys.add(bucket.getKeyAsString());
    }
  }
  InternalBucketMetricValue maxBucketValue=response.getAggregations().get("max_bucket");
  assertThat(maxBucketValue,notNullValue());
  assertThat(maxBucketValue.getName(),equalTo("max_bucket"));
  assertThat(maxBucketValue.value(),equalTo(maxValue));
  assertThat(maxBucketValue.keys(),equalTo(maxKeys.toArray(new String[maxKeys.size()])));
}
