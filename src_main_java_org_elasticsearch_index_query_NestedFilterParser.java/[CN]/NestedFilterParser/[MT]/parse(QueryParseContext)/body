{
  XContentParser parser=parseContext.parser();
  final NestedQueryParser.ToBlockJoinQueryBuilder builder=new NestedQueryParser.ToBlockJoinQueryBuilder(parseContext);
  float boost=1.0f;
  boolean cache=false;
  HashedBytesRef cacheKey=null;
  String filterName=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("query".equals(currentFieldName)) {
        builder.query();
      }
 else       if ("filter".equals(currentFieldName)) {
        builder.filter();
      }
 else       if ("inner_hits".equals(currentFieldName)) {
        builder.setInnerHits(innerHitsQueryParserHelper.parse(parseContext));
      }
 else {
        throw new QueryParsingException(parseContext,"[nested] filter does not support [" + currentFieldName + "]");
      }
    }
 else     if (token.isValue()) {
      if ("path".equals(currentFieldName)) {
        builder.setPath(parser.text());
      }
 else       if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else       if ("_name".equals(currentFieldName)) {
        filterName=parser.text();
      }
 else       if ("_cache".equals(currentFieldName)) {
        cache=parser.booleanValue();
      }
 else       if ("_cache_key".equals(currentFieldName) || "_cacheKey".equals(currentFieldName)) {
        cacheKey=new HashedBytesRef(parser.text());
      }
 else {
        throw new QueryParsingException(parseContext,"[nested] filter does not support [" + currentFieldName + "]");
      }
    }
  }
  builder.setScoreMode(ScoreMode.None);
  ToParentBlockJoinQuery joinQuery=builder.build();
  if (joinQuery != null) {
    joinQuery.getChildQuery().setBoost(boost);
    Filter nestedFilter=Queries.wrap(joinQuery,parseContext);
    if (cache) {
      nestedFilter=parseContext.cacheFilter(nestedFilter,cacheKey,parseContext.autoFilterCachePolicy());
    }
    if (filterName != null) {
      parseContext.addNamedFilter(filterName,nestedFilter);
    }
    return nestedFilter;
  }
 else {
    return null;
  }
}
