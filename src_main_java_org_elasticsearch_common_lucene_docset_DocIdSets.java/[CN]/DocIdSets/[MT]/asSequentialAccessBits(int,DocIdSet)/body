{
  if (set == null) {
    return new Bits.MatchNoBits(maxDoc);
  }
  Bits bits=set.bits();
  if (bits != null) {
    return bits;
  }
  final DocIdSetIterator iterator=set.iterator();
  if (iterator == null) {
    return new Bits.MatchNoBits(maxDoc);
  }
  return new Bits(){
    int previous=0;
    @Override public boolean get(    int index){
      if (index < previous) {
        throw new ElasticsearchIllegalArgumentException("This Bits instance can only be consumed in order. " + "Got called on [" + index + "] while previously called on ["+ previous+ "]");
      }
      previous=index;
      int doc=iterator.docID();
      if (doc < index) {
        try {
          doc=iterator.advance(index);
        }
 catch (        IOException e) {
          throw new ElasticsearchIllegalStateException("Cannot advance iterator",e);
        }
      }
      return index == doc;
    }
    @Override public int length(){
      return maxDoc;
    }
  }
;
}
