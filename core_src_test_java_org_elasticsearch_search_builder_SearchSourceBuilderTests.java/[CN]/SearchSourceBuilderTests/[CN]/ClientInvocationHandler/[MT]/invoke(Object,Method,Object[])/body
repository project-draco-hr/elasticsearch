{
  if (method.equals(Client.class.getDeclaredMethod("get",GetRequest.class))) {
    return new PlainActionFuture<GetResponse>(){
      @Override public GetResponse get() throws InterruptedException, ExecutionException {
        return delegate.executeGet((GetRequest)args[0]);
      }
    }
;
  }
 else   if (method.equals(Client.class.getDeclaredMethod("multiTermVectors",MultiTermVectorsRequest.class))) {
    return new PlainActionFuture<MultiTermVectorsResponse>(){
      @Override public MultiTermVectorsResponse get() throws InterruptedException, ExecutionException {
        return delegate.executeMultiTermVectors((MultiTermVectorsRequest)args[0]);
      }
    }
;
  }
 else   if (method.equals(Object.class.getDeclaredMethod("toString"))) {
    return "MockClient";
  }
  throw new UnsupportedOperationException("this test can't handle calls to: " + method);
}
