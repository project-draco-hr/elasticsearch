{
  final CompilerSettings compilerSettings;
  if (params.isEmpty()) {
    compilerSettings=DEFAULT_COMPILER_SETTINGS;
  }
 else {
    compilerSettings=new CompilerSettings();
    Map<String,String> clone=new HashMap<>(params);
    String value=clone.remove(NUMERIC_OVERFLOW);
    if (value != null) {
      compilerSettings.setNumericOverflow(Boolean.parseBoolean(value));
    }
    if (!clone.isEmpty()) {
      throw new IllegalArgumentException("Unrecognized compile-time parameter(s): " + clone);
    }
  }
  SecurityManager sm=System.getSecurityManager();
  if (sm != null) {
    sm.checkPermission(new SpecialPermission());
  }
  Compiler.Loader loader=AccessController.doPrivileged(new PrivilegedAction<Compiler.Loader>(){
    @Override public Compiler.Loader run(){
      return new Compiler.Loader(getClass().getClassLoader());
    }
  }
);
  return AccessController.doPrivileged(new PrivilegedAction<Executable>(){
    @Override public Executable run(){
      return Compiler.compile(loader,"something",script,definition,compilerSettings);
    }
  }
,COMPILATION_CONTEXT);
}
