{
  if (!enabled) {
    return Decision.YES;
  }
  if (allocation.nodes().size() <= 1) {
    return Decision.YES;
  }
  ClusterInfo clusterInfo=allocation.clusterInfo();
  if (clusterInfo == null) {
    if (logger.isTraceEnabled()) {
      logger.trace("Cluster info unavailable for disk threshold decider, allowing allocation.");
    }
    return Decision.YES;
  }
  Map<String,DiskUsage> usages=clusterInfo.getNodeDiskUsages();
  if (usages.isEmpty()) {
    if (logger.isTraceEnabled()) {
      logger.trace("Unable to determine disk usages for disk-aware allocation, allowing allocation");
    }
    return Decision.YES;
  }
  DiskUsage usage=usages.get(node.nodeId());
  if (usage == null) {
    usage=averageUsage(node,usages);
    if (logger.isDebugEnabled()) {
      logger.debug("Unable to determine disk usage for {}, defaulting to average across nodes [{} total] [{} free] [{}% free]",node.nodeId(),usage.getTotalBytes(),usage.getFreeBytes(),usage.getFreeDiskAsPercentage());
    }
  }
  double freeDiskPercentage=usage.getFreeDiskAsPercentage();
  long freeBytes=usage.getFreeBytes();
  if (logger.isDebugEnabled()) {
    logger.debug("Node [{}] has {}% free disk ({} bytes)",node.nodeId(),freeDiskPercentage,freeBytes);
  }
  if (freeBytes < freeBytesThresholdHigh.bytes()) {
    if (logger.isDebugEnabled()) {
      logger.debug("Less than the required {} free bytes threshold ({} bytes free) on node {}, shard cannot remain",freeBytesThresholdHigh,freeBytes,node.nodeId());
    }
    return Decision.NO;
  }
  if (freeDiskPercentage < freeDiskThresholdHigh) {
    if (logger.isDebugEnabled()) {
      logger.debug("Less than the required {}% free disk threshold ({}% free) on node {}, shard cannot remain",freeDiskThresholdHigh,freeDiskPercentage,node.nodeId());
    }
    return Decision.NO;
  }
  return Decision.YES;
}
