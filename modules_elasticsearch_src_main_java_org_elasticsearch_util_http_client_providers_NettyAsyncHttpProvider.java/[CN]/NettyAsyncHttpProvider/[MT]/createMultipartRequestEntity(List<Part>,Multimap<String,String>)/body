{
  org.elasticsearch.util.http.multipart.Part[] parts=new org.elasticsearch.util.http.multipart.Part[params.size()];
  int i=0;
  for (  Part part : params) {
    if (part instanceof StringPart) {
      parts[i]=new org.elasticsearch.util.http.multipart.StringPart(part.getName(),((StringPart)part).getValue(),"UTF-8");
    }
 else     if (part instanceof FilePart) {
      parts[i]=new org.elasticsearch.util.http.multipart.FilePart(part.getName(),((FilePart)part).getFile(),((FilePart)part).getMimeType(),((FilePart)part).getCharSet());
    }
 else     if (part instanceof ByteArrayPart) {
      PartSource source=new ByteArrayPartSource(((ByteArrayPart)part).getFileName(),((ByteArrayPart)part).getData());
      parts[i]=new org.elasticsearch.util.http.multipart.FilePart(part.getName(),source,((ByteArrayPart)part).getMimeType(),((ByteArrayPart)part).getCharSet());
    }
 else     if (part == null) {
      throw new NullPointerException("Part cannot be null");
    }
 else {
      throw new IllegalArgumentException(String.format("Unsupported part type for multipart parameter %s",part.getName()));
    }
    ++i;
  }
  return new MultipartRequestEntity(parts,methodParams);
}
