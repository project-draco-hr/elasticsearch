{
  createIndex("test");
  ensureGreen();
  Set<String> ids=Sets.newHashSet();
  Set<String> expectedIds=Sets.newHashSet();
  for (int i=0; i < numberOfDocs; i++) {
    String id=Integer.toString(i);
    expectedIds.add(id);
    String routing=null;
    if (unbalanced) {
      if (i < (numberOfDocs * 0.6)) {
        routing="0";
      }
 else       if (i < (numberOfDocs * 0.9)) {
        routing="1";
      }
 else {
        routing="2";
      }
    }
    client().prepareIndex("test","type1",id).setRouting(routing).setSource("field",i).execute().actionGet();
    if (i % 10 == 0) {
      client().admin().indices().prepareFlush().execute().actionGet();
    }
  }
  refresh();
  SearchResponse searchResponse=client().prepareSearch().setSearchType(SearchType.SCAN).setQuery(matchAllQuery()).setSize(size).setScroll(TimeValue.timeValueMinutes(2)).setTrackScores(trackScores).execute().actionGet();
  try {
    assertHitCount(searchResponse,numberOfDocs);
    while (true) {
      searchResponse=client().prepareSearchScroll(searchResponse.getScrollId()).setScroll(TimeValue.timeValueMinutes(2)).execute().actionGet();
      assertHitCount(searchResponse,numberOfDocs);
      for (      SearchHit hit : searchResponse.getHits()) {
        assertThat(hit.id() + "should not exist in the result set",ids.contains(hit.id()),equalTo(false));
        ids.add(hit.id());
        if (trackScores) {
          assertThat(hit.getScore(),greaterThan(0.0f));
        }
 else {
          assertThat(hit.getScore(),equalTo(0.0f));
        }
      }
      if (searchResponse.getHits().hits().length == 0) {
        break;
      }
    }
    assertThat(expectedIds,equalTo(ids));
  }
  finally {
    clearScroll(searchResponse.getScrollId());
  }
}
