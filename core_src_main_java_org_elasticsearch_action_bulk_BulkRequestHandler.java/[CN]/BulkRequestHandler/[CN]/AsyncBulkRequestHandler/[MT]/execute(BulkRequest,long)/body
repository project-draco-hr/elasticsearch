{
  boolean bulkRequestSetupSuccessful=false;
  boolean acquired=false;
  try {
    listener.beforeBulk(executionId,bulkRequest);
    semaphore.acquire();
    acquired=true;
    Retry.on(EsRejectedExecutionException.class).policy(backoffPolicy).withAsyncBackoff(client,bulkRequest,new ActionListener<BulkResponse>(){
      @Override public void onResponse(      BulkResponse response){
        try {
          listener.afterBulk(executionId,bulkRequest,response);
        }
  finally {
          semaphore.release();
        }
      }
      @Override public void onFailure(      Exception e){
        try {
          listener.afterBulk(executionId,bulkRequest,e);
        }
  finally {
          semaphore.release();
        }
      }
    }
);
    bulkRequestSetupSuccessful=true;
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    logger.info(new ParameterizedMessage("Bulk request {} has been cancelled.",executionId),e);
    listener.afterBulk(executionId,bulkRequest,e);
  }
catch (  Exception e) {
    logger.warn(new ParameterizedMessage("Failed to execute bulk request {}.",executionId),e);
    listener.afterBulk(executionId,bulkRequest,e);
  }
 finally {
    if (!bulkRequestSetupSuccessful && acquired) {
      semaphore.release();
    }
  }
}
