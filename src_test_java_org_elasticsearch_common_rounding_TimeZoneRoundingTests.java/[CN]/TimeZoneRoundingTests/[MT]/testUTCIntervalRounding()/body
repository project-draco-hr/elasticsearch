{
  Rounding tzRounding=TimeZoneRounding.builder(TimeValue.timeValueHours(12)).build();
  assertThat(tzRounding.round(utc("2009-02-03T01:01:01")),equalTo(utc("2009-02-03T00:00:00.000Z")));
  long roundKey=tzRounding.roundKey(utc("2009-02-03T01:01:01"));
  assertThat(roundKey,equalTo(tzRounding.roundKey(utc("2009-02-03T00:00:00.000Z"))));
  assertThat(tzRounding.valueForKey(roundKey),equalTo(utc("2009-02-03T00:00:00.000Z")));
  assertThat(tzRounding.nextRoundingValue(utc("2009-02-03T00:00:00.000Z")),equalTo(utc("2009-02-03T12:00:00.000Z")));
  assertThat(tzRounding.round(utc("2009-02-03T13:01:01")),equalTo(utc("2009-02-03T12:00:00.000Z")));
  assertThat(tzRounding.nextRoundingValue(utc("2009-02-03T12:00:00.000Z")),equalTo(utc("2009-02-04T00:00:00.000Z")));
  tzRounding=TimeZoneRounding.builder(TimeValue.timeValueHours(48)).build();
  assertThat(tzRounding.round(utc("2009-02-03T01:01:01")),equalTo(utc("2009-02-03T00:00:00.000Z")));
  assertThat(tzRounding.nextRoundingValue(utc("2009-02-03T00:00:00.000Z")),equalTo(utc("2009-02-05T00:00:00.000Z")));
  assertThat(tzRounding.round(utc("2009-02-05T13:01:01")),equalTo(utc("2009-02-05T00:00:00.000Z")));
  assertThat(tzRounding.nextRoundingValue(utc("2009-02-05T00:00:00.000Z")),equalTo(utc("2009-02-07T00:00:00.000Z")));
}
