{
  TimeZoneRounding tzRounding=TimeZoneRounding.builder(DateTimeUnit.DAY_OF_MONTH).preZone(DateTimeZone.forOffsetHours(-2)).build();
  assertThat(tzRounding.round(0),equalTo(0l - TimeValue.timeValueHours(24).millis()));
  assertThat(tzRounding.nextRoundingValue(0l - TimeValue.timeValueHours(24).millis()),equalTo(0l));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.DAY_OF_MONTH).preZone(DateTimeZone.forOffsetHours(-2)).postZone(DateTimeZone.forOffsetHours(-2)).build();
  assertThat(tzRounding.round(0),equalTo(0l - TimeValue.timeValueHours(26).millis()));
  assertThat(tzRounding.nextRoundingValue(0l - TimeValue.timeValueHours(26).millis()),equalTo(-TimeValue.timeValueHours(2).millis()));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.DAY_OF_MONTH).preZone(DateTimeZone.forOffsetHours(-2)).build();
  assertThat(tzRounding.round(utc("2009-02-03T01:01:01")),equalTo(utc("2009-02-02T00:00:00")));
  assertThat(tzRounding.nextRoundingValue(utc("2009-02-02T00:00:00")),equalTo(utc("2009-02-03T00:00:00")));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.DAY_OF_MONTH).preZone(DateTimeZone.forOffsetHours(-2)).postZone(DateTimeZone.forOffsetHours(-2)).build();
  assertThat(tzRounding.round(utc("2009-02-03T01:01:01")),equalTo(time("2009-02-02T00:00:00",DateTimeZone.forOffsetHours(+2))));
  assertThat(tzRounding.nextRoundingValue(time("2009-02-02T00:00:00",DateTimeZone.forOffsetHours(+2))),equalTo(time("2009-02-03T00:00:00",DateTimeZone.forOffsetHours(+2))));
}
