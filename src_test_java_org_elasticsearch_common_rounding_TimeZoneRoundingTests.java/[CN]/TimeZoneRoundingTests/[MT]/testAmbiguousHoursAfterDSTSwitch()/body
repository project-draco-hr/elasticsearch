{
  Rounding tzRounding;
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).timeZone(DateTimeZone.forID("Asia/Jerusalem")).build();
  assertThat(tzRounding.round(time("2014-10-25T22:30:00",DateTimeZone.UTC)),equalTo(time("2014-10-25T22:00:00",DateTimeZone.UTC)));
  assertThat(tzRounding.round(time("2014-10-25T23:30:00",DateTimeZone.UTC)),equalTo(time("2014-10-25T23:00:00",DateTimeZone.UTC)));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.DAY_OF_MONTH).timeZone(DateTimeZone.forID("Asia/Jerusalem")).build();
  assertThat(tzRounding.round(time("2014-11-11T17:00:00",DateTimeZone.forID("Asia/Jerusalem"))),equalTo(time("2014-11-11T00:00:00",DateTimeZone.forID("Asia/Jerusalem"))));
  assertThat(tzRounding.round(time("2014-08-11T17:00:00",DateTimeZone.forID("Asia/Jerusalem"))),equalTo(time("2014-08-11T00:00:00",DateTimeZone.forID("Asia/Jerusalem"))));
  assertThat(tzRounding.round(time("2014-10-26T17:00:00",DateTimeZone.forID("Asia/Jerusalem"))),equalTo(time("2014-10-26T00:00:00",DateTimeZone.forID("Asia/Jerusalem"))));
  assertThat(tzRounding.round(time("2015-03-27T17:00:00",DateTimeZone.forID("Asia/Jerusalem"))),equalTo(time("2015-03-27T00:00:00",DateTimeZone.forID("Asia/Jerusalem"))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.MONTH_OF_YEAR).timeZone(DateTimeZone.forID("Asia/Jerusalem")).build();
  assertThat(tzRounding.round(time("2014-11-11T17:00:00",DateTimeZone.forID("Asia/Jerusalem"))),equalTo(time("2014-11-01T00:00:00",DateTimeZone.forID("Asia/Jerusalem"))));
  assertThat(tzRounding.round(time("2014-10-10T17:00:00",DateTimeZone.forID("Asia/Jerusalem"))),equalTo(time("2014-10-01T00:00:00",DateTimeZone.forID("Asia/Jerusalem"))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.YEAR_OF_CENTURY).timeZone(DateTimeZone.forID("Asia/Jerusalem")).build();
  assertThat(tzRounding.round(time("2014-11-11T17:00:00",DateTimeZone.forID("Asia/Jerusalem"))),equalTo(time("2014-01-01T00:00:00",DateTimeZone.forID("Asia/Jerusalem"))));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.YEAR_OF_CENTURY).timeZone(DateTimeZone.forID("Asia/Jerusalem")).build();
  assertThat(tzRounding.round(time("2014-11-11T17:00:00",DateTimeZone.forID("Asia/Jerusalem"))),equalTo(tzRounding.round(time("2014-08-11T17:00:00",DateTimeZone.forID("Asia/Jerusalem")))));
}
