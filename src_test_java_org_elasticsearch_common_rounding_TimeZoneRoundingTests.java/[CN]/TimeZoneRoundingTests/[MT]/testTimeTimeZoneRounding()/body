{
  Rounding tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).preZone(DateTimeZone.forOffsetHours(-2)).build();
  assertThat(tzRounding.round(0),equalTo(0l));
  assertThat(tzRounding.nextRoundingValue(0l),equalTo(TimeValue.timeValueHours(1l).getMillis()));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).preZone(DateTimeZone.forOffsetHours(-2)).postZone(DateTimeZone.forOffsetHours(-2)).build();
  assertThat(tzRounding.round(0),equalTo(0l - TimeValue.timeValueHours(2).millis()));
  assertThat(tzRounding.nextRoundingValue(0l - TimeValue.timeValueHours(2).millis()),equalTo(0l - TimeValue.timeValueHours(1).millis()));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).preZone(DateTimeZone.forOffsetHours(-2)).build();
  assertThat(tzRounding.round(utc("2009-02-03T01:01:01")),equalTo(utc("2009-02-03T01:00:00")));
  assertThat(tzRounding.nextRoundingValue(utc("2009-02-03T01:00:00")),equalTo(utc("2009-02-03T02:00:00")));
  tzRounding=TimeZoneRounding.builder(DateTimeUnit.HOUR_OF_DAY).preZone(DateTimeZone.forOffsetHours(-2)).postZone(DateTimeZone.forOffsetHours(-2)).build();
  assertThat(tzRounding.round(utc("2009-02-03T01:01:01")),equalTo(time("2009-02-03T01:00:00",DateTimeZone.forOffsetHours(+2))));
  assertThat(tzRounding.nextRoundingValue(time("2009-02-03T01:00:00",DateTimeZone.forOffsetHours(+2))),equalTo(time("2009-02-03T02:00:00",DateTimeZone.forOffsetHours(+2))));
}
