{
  String master=cluster().startNode(settingsBuilder().put("node.data",false).build());
  String node_1=cluster().startNode(settingsBuilder().put("node.master",false).build());
  String node_2=cluster().startNode(settingsBuilder().put("node.master",false).build());
  client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards",5).put("index.number_of_replicas",1)).execute().actionGet();
  ClusterHealthResponse healthResponse=client().admin().cluster().prepareHealth("test").setWaitForEvents(Priority.LANGUID).setWaitForNodes("3").setWaitForGreenStatus().execute().actionGet();
  assertThat(healthResponse.isTimedOut(),equalTo(false));
  assertThat(healthResponse.getIndices().get("test").getActiveShards(),equalTo(10));
  client().admin().indices().prepareUpdateSettings("test").setSettings(settingsBuilder().put("index.number_of_replicas",0)).execute().actionGet();
  healthResponse=client().admin().cluster().prepareHealth("test").setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();
  assertThat(healthResponse.isTimedOut(),equalTo(false));
  assertThat(healthResponse.getIndices().get("test").getActiveShards(),equalTo(5));
  try {
    client().admin().indices().prepareUpdateSettings("test").setSettings(settingsBuilder().put("index.refresh_interval","")).execute().actionGet();
    fail();
  }
 catch (  ElasticsearchIllegalArgumentException ex) {
    logger.info("Error message: [{}]",ex.getMessage());
  }
}
