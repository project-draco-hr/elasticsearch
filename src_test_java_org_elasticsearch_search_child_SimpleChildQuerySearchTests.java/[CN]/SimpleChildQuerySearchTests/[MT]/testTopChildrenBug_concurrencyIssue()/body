{
  client().admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",1).put("index.number_of_replicas",0)).addMapping("parent").addMapping("child","_parent","type=parent").get();
  ensureGreen();
  client().prepareIndex("test","parent","p1").setSource("p_field","p_value1").get();
  client().prepareIndex("test","parent","p2").setSource("p_field","p_value2").get();
  client().prepareIndex("test","child","c1").setParent("p1").setSource("c_field","blue").get();
  client().prepareIndex("test","child","c2").setParent("p1").setSource("c_field","red").get();
  client().prepareIndex("test","child","c3").setParent("p2").setSource("c_field","red").get();
  client().admin().indices().prepareRefresh("test").get();
  int numThreads=10;
  final CountDownLatch latch=new CountDownLatch(numThreads);
  final AtomicReference<AssertionError> holder=new AtomicReference<AssertionError>();
  Runnable r=new Runnable(){
    @Override public void run(){
      try {
        for (int i=0; i < 100; i++) {
          SearchResponse searchResponse=client().prepareSearch("test").setQuery(topChildrenQuery("child",termQuery("c_field","blue"))).get();
          assertNoFailures(searchResponse);
          assertThat(searchResponse.getHits().totalHits(),equalTo(1l));
          searchResponse=client().prepareSearch("test").setQuery(topChildrenQuery("child",termQuery("c_field","red"))).get();
          assertNoFailures(searchResponse);
          assertThat(searchResponse.getHits().totalHits(),equalTo(2l));
        }
      }
 catch (      AssertionError error) {
        holder.set(error);
      }
 finally {
        latch.countDown();
      }
    }
  }
;
  for (int i=0; i < 10; i++) {
    new Thread(r).start();
  }
  latch.await();
  if (holder.get() != null) {
    throw holder.get();
  }
}
