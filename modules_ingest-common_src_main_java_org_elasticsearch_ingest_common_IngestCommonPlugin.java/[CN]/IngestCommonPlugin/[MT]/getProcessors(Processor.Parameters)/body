{
  Map<String,Processor.Factory> processors=new HashMap<>();
  processors.put(DateProcessor.TYPE,new DateProcessor.Factory());
  processors.put(SetProcessor.TYPE,new SetProcessor.Factory(parameters.templateService));
  processors.put(AppendProcessor.TYPE,new AppendProcessor.Factory(parameters.templateService));
  processors.put(RenameProcessor.TYPE,new RenameProcessor.Factory());
  processors.put(RemoveProcessor.TYPE,new RemoveProcessor.Factory(parameters.templateService));
  processors.put(SplitProcessor.TYPE,new SplitProcessor.Factory());
  processors.put(JoinProcessor.TYPE,new JoinProcessor.Factory());
  processors.put(UppercaseProcessor.TYPE,new UppercaseProcessor.Factory());
  processors.put(LowercaseProcessor.TYPE,new LowercaseProcessor.Factory());
  processors.put(TrimProcessor.TYPE,new TrimProcessor.Factory());
  processors.put(ConvertProcessor.TYPE,new ConvertProcessor.Factory());
  processors.put(GsubProcessor.TYPE,new GsubProcessor.Factory());
  processors.put(FailProcessor.TYPE,new FailProcessor.Factory(parameters.templateService));
  processors.put(ForEachProcessor.TYPE,new ForEachProcessor.Factory());
  processors.put(DateIndexNameProcessor.TYPE,new DateIndexNameProcessor.Factory());
  processors.put(SortProcessor.TYPE,new SortProcessor.Factory());
  processors.put(GrokProcessor.TYPE,new GrokProcessor.Factory(builtinPatterns));
  processors.put(ScriptProcessor.TYPE,new ScriptProcessor.Factory(parameters.scriptService));
  return Collections.unmodifiableMap(processors);
}
