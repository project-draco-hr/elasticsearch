{
  int num=scaledRandomIntBetween(2,20);
  for (int j=0; j < num; j++) {
    Map<Long,Long> longs=new HashMap<>();
    int uniqueCount=0;
    for (int i=0; i < 797; i++) {
      long ref=randomLong();
      long count=hash.size();
      long key=hash.add(ref);
      if (key >= 0) {
        assertNull(longs.put(ref,key));
        assertEquals(uniqueCount,key);
        uniqueCount++;
        assertEquals(hash.size(),count + 1);
      }
 else {
        assertTrue((-key) - 1L < count);
        assertEquals(hash.size(),count);
      }
    }
    for (    Map.Entry<Long,Long> entry : longs.entrySet()) {
      long expected=entry.getKey();
      long keyIdx=entry.getValue();
      assertEquals(expected,hash.get(keyIdx));
    }
    newHash();
  }
  hash.release();
}
