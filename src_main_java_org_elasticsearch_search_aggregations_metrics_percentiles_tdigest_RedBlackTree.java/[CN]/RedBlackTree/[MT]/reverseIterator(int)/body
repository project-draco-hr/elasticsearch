{
  return new UnmodifiableIterator<IntCursor>(){
    boolean nextSet;
    final IntCursor cursor;
{
      cursor=new IntCursor();
      cursor.index=-1;
      cursor.value=startNode;
      nextSet=cursor.value != NIL;
    }
    boolean computeNext(){
      if (cursor.value != NIL) {
        cursor.value=RedBlackTree.this.prevNode(cursor.value);
      }
      return nextSet=(cursor.value != NIL);
    }
    @Override public boolean hasNext(){
      return nextSet || computeNext();
    }
    @Override public IntCursor next(){
      if (!hasNext()) {
        throw new NoSuchElementException();
      }
      nextSet=false;
      return cursor;
    }
  }
;
}
