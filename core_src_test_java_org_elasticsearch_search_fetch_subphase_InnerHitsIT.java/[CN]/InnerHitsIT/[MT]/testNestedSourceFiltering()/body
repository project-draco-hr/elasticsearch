{
  assertAcked(prepareCreate("index1").addMapping("message","comments","type=nested"));
  client().prepareIndex("index1","message","1").setSource(jsonBuilder().startObject().field("message","quick brown fox").startArray("comments").startObject().field("message","fox eat quick").endObject().startObject().field("message","fox ate rabbit x y z").endObject().startObject().field("message","rabbit got away").endObject().endArray().endObject()).get();
  refresh();
  SearchResponse response=client().prepareSearch().setQuery(nestedQuery("comments",matchQuery("comments.message","fox"),ScoreMode.None).innerHit(new InnerHitBuilder().setFetchSourceContext(new FetchSourceContext("comments.message")))).get();
  assertNoFailures(response);
  assertHitCount(response,1);
  assertThat(response.getHits().getAt(0).getInnerHits().get("comments").totalHits(),equalTo(2L));
  assertThat(extractValue("comments.message",response.getHits().getAt(0).getInnerHits().get("comments").getAt(0).sourceAsMap()),equalTo("fox eat quick"));
  assertThat(extractValue("comments.message",response.getHits().getAt(0).getInnerHits().get("comments").getAt(1).sourceAsMap()),equalTo("fox ate rabbit x y z"));
}
