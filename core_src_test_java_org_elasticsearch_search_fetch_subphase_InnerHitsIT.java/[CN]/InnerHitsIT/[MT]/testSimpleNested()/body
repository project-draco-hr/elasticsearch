{
  assertAcked(prepareCreate("articles").addMapping("article",jsonBuilder().startObject().startObject("article").startObject("properties").startObject("comments").field("type","nested").startObject("properties").startObject("message").field("type","text").field("fielddata",true).endObject().endObject().endObject().startObject("title").field("type","text").endObject().endObject().endObject().endObject()));
  List<IndexRequestBuilder> requests=new ArrayList<>();
  requests.add(client().prepareIndex("articles","article","1").setSource(jsonBuilder().startObject().field("title","quick brown fox").startArray("comments").startObject().field("message","fox eat quick").endObject().startObject().field("message","fox ate rabbit x y z").endObject().startObject().field("message","rabbit got away").endObject().endArray().endObject()));
  requests.add(client().prepareIndex("articles","article","2").setSource(jsonBuilder().startObject().field("title","big gray elephant").startArray("comments").startObject().field("message","elephant captured").endObject().startObject().field("message","mice squashed by elephant x").endObject().startObject().field("message","elephant scared by mice x y").endObject().endArray().endObject()));
  indexRandom(true,requests);
  SearchResponse response=client().prepareSearch("articles").setQuery(nestedQuery("comments",matchQuery("comments.message","fox"),ScoreMode.Avg).innerHit(new InnerHitBuilder().setName("comment"))).get();
  assertNoFailures(response);
  assertHitCount(response,1);
  assertSearchHit(response,1,hasId("1"));
  assertThat(response.getHits().getAt(0).getInnerHits().size(),equalTo(1));
  SearchHits innerHits=response.getHits().getAt(0).getInnerHits().get("comment");
  assertThat(innerHits.totalHits(),equalTo(2L));
  assertThat(innerHits.getHits().length,equalTo(2));
  assertThat(innerHits.getAt(0).getId(),equalTo("1"));
  assertThat(innerHits.getAt(0).getNestedIdentity().getField().string(),equalTo("comments"));
  assertThat(innerHits.getAt(0).getNestedIdentity().getOffset(),equalTo(0));
  assertThat(innerHits.getAt(1).getId(),equalTo("1"));
  assertThat(innerHits.getAt(1).getNestedIdentity().getField().string(),equalTo("comments"));
  assertThat(innerHits.getAt(1).getNestedIdentity().getOffset(),equalTo(1));
  response=client().prepareSearch("articles").setQuery(nestedQuery("comments",matchQuery("comments.message","elephant"),ScoreMode.Avg).innerHit(new InnerHitBuilder().setName("comment"))).get();
  assertNoFailures(response);
  assertHitCount(response,1);
  assertSearchHit(response,1,hasId("2"));
  assertThat(response.getHits().getAt(0).getShard(),notNullValue());
  assertThat(response.getHits().getAt(0).getInnerHits().size(),equalTo(1));
  innerHits=response.getHits().getAt(0).getInnerHits().get("comment");
  assertThat(innerHits.totalHits(),equalTo(3L));
  assertThat(innerHits.getHits().length,equalTo(3));
  assertThat(innerHits.getAt(0).getId(),equalTo("2"));
  assertThat(innerHits.getAt(0).getNestedIdentity().getField().string(),equalTo("comments"));
  assertThat(innerHits.getAt(0).getNestedIdentity().getOffset(),equalTo(0));
  assertThat(innerHits.getAt(1).getId(),equalTo("2"));
  assertThat(innerHits.getAt(1).getNestedIdentity().getField().string(),equalTo("comments"));
  assertThat(innerHits.getAt(1).getNestedIdentity().getOffset(),equalTo(1));
  assertThat(innerHits.getAt(2).getId(),equalTo("2"));
  assertThat(innerHits.getAt(2).getNestedIdentity().getField().string(),equalTo("comments"));
  assertThat(innerHits.getAt(2).getNestedIdentity().getOffset(),equalTo(2));
  response=client().prepareSearch("articles").setQuery(nestedQuery("comments",matchQuery("comments.message","fox"),ScoreMode.Avg).innerHit(new InnerHitBuilder().setHighlightBuilder(new HighlightBuilder().field("comments.message")).setExplain(true).addDocValueField("comments.message").addScriptField("script",new Script("5",ScriptService.ScriptType.INLINE,MockScriptEngine.NAME,Collections.emptyMap())).setSize(1))).get();
  assertNoFailures(response);
  innerHits=response.getHits().getAt(0).getInnerHits().get("comments");
  assertThat(innerHits.getTotalHits(),equalTo(2L));
  assertThat(innerHits.getHits().length,equalTo(1));
  assertThat(innerHits.getAt(0).getHighlightFields().get("comments.message").getFragments()[0].string(),equalTo("<em>fox</em> eat quick"));
  assertThat(innerHits.getAt(0).explanation().toString(),containsString("weight(comments.message:fox in"));
  assertThat(innerHits.getAt(0).getFields().get("comments.message").getValue().toString(),equalTo("eat"));
  assertThat(innerHits.getAt(0).getFields().get("script").getValue().toString(),equalTo("5"));
}
