{
  this.client=client;
  this.listener=listener;
  this.name=name;
  this.concurrentRequests=concurrentRequests;
  this.bulkActions=bulkActions;
  this.bulkSize=bulkSize.bytesAsInt();
  this.semaphore=new Semaphore(concurrentRequests);
  this.bulkRequest=new BulkRequest();
  this.flushInterval=flushInterval;
  if (flushInterval != null) {
    this.scheduler=(ScheduledThreadPoolExecutor)Executors.newScheduledThreadPool(1,EsExecutors.daemonThreadFactory(((InternalClient)client).settings(),(name != null ? "[" + name + "]" : "") + "bulk_processor"));
    this.scheduler.setExecuteExistingDelayedTasksAfterShutdownPolicy(false);
    this.scheduler.setContinueExistingPeriodicTasksAfterShutdownPolicy(false);
    this.scheduledFuture=this.scheduler.scheduleWithFixedDelay(new Flush(),flushInterval.millis(),flushInterval.millis(),TimeUnit.MILLISECONDS);
  }
 else {
    this.scheduler=null;
    this.scheduledFuture=null;
  }
}
