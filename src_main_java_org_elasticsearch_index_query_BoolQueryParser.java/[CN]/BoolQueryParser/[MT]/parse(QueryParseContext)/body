{
  XContentParser parser=parseContext.parser();
  boolean disableCoord=false;
  float boost=1.0f;
  String minimumShouldMatch=null;
  List<BooleanClause> clauses=newArrayList();
  boolean adjustPureNegative=true;
  String queryName=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("must".equals(currentFieldName)) {
        Query query=parseContext.parseInnerQuery();
        if (query != null) {
          clauses.add(new BooleanClause(query,BooleanClause.Occur.MUST));
        }
      }
 else       if ("must_not".equals(currentFieldName) || "mustNot".equals(currentFieldName)) {
        Query query=parseContext.parseInnerQuery();
        if (query != null) {
          clauses.add(new BooleanClause(query,BooleanClause.Occur.MUST_NOT));
        }
      }
 else       if ("should".equals(currentFieldName)) {
        Query query=parseContext.parseInnerQuery();
        if (query != null) {
          clauses.add(new BooleanClause(query,BooleanClause.Occur.SHOULD));
        }
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[bool] query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if ("must".equals(currentFieldName)) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          Query query=parseContext.parseInnerQuery();
          if (query != null) {
            clauses.add(new BooleanClause(query,BooleanClause.Occur.MUST));
          }
        }
      }
 else       if ("must_not".equals(currentFieldName) || "mustNot".equals(currentFieldName)) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          Query query=parseContext.parseInnerQuery();
          if (query != null) {
            clauses.add(new BooleanClause(query,BooleanClause.Occur.MUST_NOT));
          }
        }
      }
 else       if ("should".equals(currentFieldName)) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          Query query=parseContext.parseInnerQuery();
          if (query != null) {
            clauses.add(new BooleanClause(query,BooleanClause.Occur.SHOULD));
          }
        }
      }
 else {
        throw new QueryParsingException(parseContext.index(),"bool query does not support [" + currentFieldName + "]");
      }
    }
 else     if (token.isValue()) {
      if ("disable_coord".equals(currentFieldName) || "disableCoord".equals(currentFieldName)) {
        disableCoord=parser.booleanValue();
      }
 else       if ("minimum_should_match".equals(currentFieldName) || "minimumShouldMatch".equals(currentFieldName)) {
        minimumShouldMatch=parser.textOrNull();
      }
 else       if ("boost".equals(currentFieldName)) {
        boost=parser.floatValue();
      }
 else       if ("minimum_number_should_match".equals(currentFieldName) || "minimumNumberShouldMatch".equals(currentFieldName)) {
        minimumShouldMatch=parser.textOrNull();
      }
 else       if ("adjust_pure_negative".equals(currentFieldName) || "adjustPureNegative".equals(currentFieldName)) {
        adjustPureNegative=parser.booleanValue();
      }
 else       if ("_name".equals(currentFieldName)) {
        queryName=parser.text();
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[bool] query does not support [" + currentFieldName + "]");
      }
    }
  }
  if (clauses.isEmpty()) {
    return null;
  }
  BooleanQuery booleanQuery=new BooleanQuery(disableCoord);
  for (  BooleanClause clause : clauses) {
    booleanQuery.add(clause);
  }
  booleanQuery.setBoost(boost);
  Queries.applyMinimumShouldMatch(booleanQuery,minimumShouldMatch);
  Query query=adjustPureNegative ? fixNegativeQueryIfNeeded(booleanQuery) : booleanQuery;
  if (queryName != null) {
    parseContext.addNamedQuery(queryName,query);
  }
  return query;
}
