{
  SearchContext searchContext=SearchContext.current();
  if (searchContext == null) {
    throw new IllegalStateException("Search context is required to be set");
  }
  String joinField=ParentFieldMapper.joinField(parentType);
  ScoreMode scoreMode;
switch (scoreType) {
case NONE:
    scoreMode=ScoreMode.None;
  break;
case MIN:
scoreMode=ScoreMode.Min;
break;
case MAX:
scoreMode=ScoreMode.Max;
break;
case SUM:
scoreMode=ScoreMode.Total;
break;
case AVG:
scoreMode=ScoreMode.Avg;
break;
default :
throw new UnsupportedOperationException("score type [" + scoreType + "] not supported");
}
IndexReader indexReader=searchContext.searcher().getIndexReader();
IndexSearcher indexSearcher=new IndexSearcher(indexReader);
IndexParentChildFieldData indexParentChildFieldData=parentChildIndexFieldData.loadGlobal(indexReader);
MultiDocValues.OrdinalMap ordinalMap=ParentChildIndexFieldData.getOrdinalMap(indexParentChildFieldData,parentType);
if (maxChildren == 0) {
maxChildren=Integer.MAX_VALUE;
}
return JoinUtil.createJoinQuery(joinField,innerQuery,toQuery,indexSearcher,scoreMode,ordinalMap,minChildren,maxChildren);
}
