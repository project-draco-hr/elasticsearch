{
  writer.writeStatementOffset(location);
  expression.write(writer,globals);
  writer.visitVarInsn(array.type.type.getOpcode(Opcodes.ISTORE),array.getSlot());
  writer.push(-1);
  writer.visitVarInsn(index.type.type.getOpcode(Opcodes.ISTORE),index.getSlot());
  Label begin=new Label();
  Label end=new Label();
  writer.mark(begin);
  writer.visitIincInsn(index.getSlot(),1);
  writer.visitVarInsn(index.type.type.getOpcode(Opcodes.ILOAD),index.getSlot());
  writer.visitVarInsn(array.type.type.getOpcode(Opcodes.ILOAD),array.getSlot());
  writer.arrayLength();
  writer.ifICmp(MethodWriter.GE,end);
  writer.visitVarInsn(array.type.type.getOpcode(Opcodes.ILOAD),array.getSlot());
  writer.visitVarInsn(index.type.type.getOpcode(Opcodes.ILOAD),index.getSlot());
  writer.arrayLoad(indexed.type);
  writer.writeCast(cast);
  writer.visitVarInsn(variable.type.type.getOpcode(Opcodes.ISTORE),variable.getSlot());
  if (loopCounter != null) {
    writer.writeLoopCounter(loopCounter.getSlot(),statementCount,location);
  }
  block.write(writer,globals);
  writer.goTo(begin);
  writer.mark(end);
}
