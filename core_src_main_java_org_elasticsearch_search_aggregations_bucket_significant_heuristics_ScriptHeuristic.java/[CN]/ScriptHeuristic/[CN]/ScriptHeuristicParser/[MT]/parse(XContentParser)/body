{
  NAMES_FIELD.match(parser.currentName(),ParseField.EMPTY_FLAGS);
  Script script=null;
  XContentParser.Token token;
  Map<String,Object> params=null;
  String currentFieldName=null;
  ScriptParameterParser scriptParameterParser=new ScriptParameterParser();
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token.equals(XContentParser.Token.FIELD_NAME)) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if (ScriptField.SCRIPT.match(currentFieldName)) {
        script=Script.parse(parser);
      }
 else       if ("params".equals(currentFieldName)) {
        params=parser.map();
      }
 else {
        throw new ElasticsearchParseException("unknown object " + currentFieldName + " in script_heuristic");
      }
    }
 else     if (!scriptParameterParser.token(currentFieldName,token,parser)) {
      throw new ElasticsearchParseException("unknown field " + currentFieldName + " in script_heuristic");
    }
  }
  if (script == null) {
    ScriptParameterValue scriptValue=scriptParameterParser.getDefaultScriptParameterValue();
    if (scriptValue != null) {
      if (params == null) {
        params=newHashMap();
      }
      script=new Script(scriptValue.script(),scriptValue.scriptType(),scriptParameterParser.lang(),params);
    }
  }
 else   if (params != null) {
    throw new ElasticsearchParseException("script params must be specified inside script object");
  }
  if (script == null) {
    throw new ElasticsearchParseException("No script found in script_heuristic");
  }
  ExecutableScript searchScript;
  try {
    searchScript=scriptService.executable(script,ScriptContext.Standard.AGGS);
  }
 catch (  Exception e) {
    throw new ElasticsearchParseException("The script [" + script + "] could not be loaded",e);
  }
  return new ScriptHeuristic(searchScript,script);
}
