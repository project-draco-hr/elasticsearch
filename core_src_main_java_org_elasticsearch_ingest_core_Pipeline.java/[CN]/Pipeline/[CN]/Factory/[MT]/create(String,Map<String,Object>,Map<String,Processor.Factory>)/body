{
  String description=ConfigurationUtils.readOptionalStringProperty(null,null,config,DESCRIPTION_KEY);
  List<Map<String,Map<String,Object>>> processorConfigs=ConfigurationUtils.readList(null,null,config,PROCESSORS_KEY);
  List<Processor> processors=readProcessorConfigs(processorConfigs,processorRegistry);
  List<Map<String,Map<String,Object>>> onFailureProcessorConfigs=ConfigurationUtils.readOptionalList(null,null,config,ON_FAILURE_KEY);
  List<Processor> onFailureProcessors=readProcessorConfigs(onFailureProcessorConfigs,processorRegistry);
  if (config.isEmpty() == false) {
    throw new ConfigurationPropertyException("pipeline [" + id + "] doesn't support one or more provided configuration parameters "+ Arrays.toString(config.keySet().toArray()));
  }
  CompoundProcessor compoundProcessor=new CompoundProcessor(Collections.unmodifiableList(processors),Collections.unmodifiableList(onFailureProcessors));
  return new Pipeline(id,description,compoundProcessor);
}
