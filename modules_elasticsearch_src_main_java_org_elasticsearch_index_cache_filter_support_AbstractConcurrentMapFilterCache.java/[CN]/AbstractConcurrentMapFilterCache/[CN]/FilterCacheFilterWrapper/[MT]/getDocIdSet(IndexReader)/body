{
  FilterCacheValue<ConcurrentMap<Object,DocSet>> cacheValue=cache.cache.get(reader.getCoreCacheKey());
  if (cacheValue == null) {
    cacheValue=new FilterCacheValue<ConcurrentMap<Object,DocSet>>(cache.buildFilterMap());
    FilterCacheValue<ConcurrentMap<Object,DocSet>> prev=cache.cache.putIfAbsent(reader.getCoreCacheKey(),cacheValue);
    if (prev != null) {
      cacheValue=prev;
    }
 else {
      reader.addReaderFinishedListener(cache);
    }
  }
  Object key=filter;
  if (filter instanceof CacheKeyFilter) {
    key=((CacheKeyFilter)filter).cacheKey();
  }
  DocSet docSet=cacheValue.value().get(key);
  if (docSet != null) {
    return docSet;
  }
  DocIdSet docIdSet=filter.getDocIdSet(reader);
  docSet=FilterCacheValue.cacheable(reader,docIdSet);
  DocSet prev=cacheValue.value().putIfAbsent(key,docSet);
  if (prev != null) {
    docSet=prev;
  }
  return docSet == DocSet.EMPTY_DOC_SET ? null : docSet;
}
