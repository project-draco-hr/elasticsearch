{
  final ExpressionMetadata unaryemd=metadata.getExpressionMetadata(ctx);
  final Object postConst=unaryemd.postConst;
  final Object preConst=unaryemd.preConst;
  final Branch branch=getBranch(ctx);
  if (postConst != null) {
    if (ctx.BOOLNOT() != null) {
      if (branch == null) {
        writeConstant(ctx,postConst);
      }
 else {
        if ((boolean)postConst && branch.tru != null) {
          execute.goTo(branch.tru);
        }
 else         if (!(boolean)postConst && branch.fals != null) {
          execute.goTo(branch.fals);
        }
      }
    }
 else {
      writeConstant(ctx,postConst);
      checkWriteBranch(ctx);
    }
  }
 else   if (preConst != null) {
    if (branch == null) {
      writeConstant(ctx,preConst);
      checkWriteCast(unaryemd);
    }
 else {
      throw new IllegalStateException(error(ctx) + "Unexpected writer state.");
    }
  }
 else {
    final ExpressionContext exprctx=ctx.expression();
    if (ctx.BOOLNOT() != null) {
      final Branch local=markBranch(ctx,exprctx);
      if (branch == null) {
        local.fals=new Label();
        final Label aend=new Label();
        visit(exprctx);
        execute.push(false);
        execute.goTo(aend);
        execute.mark(local.fals);
        execute.push(true);
        execute.mark(aend);
        checkWriteCast(unaryemd);
      }
 else {
        local.tru=branch.fals;
        local.fals=branch.tru;
        visit(exprctx);
      }
    }
 else {
      final org.objectweb.asm.Type type=unaryemd.from.type;
      final Sort sort=unaryemd.from.sort;
      visit(exprctx);
      if (ctx.BWNOT() != null) {
        if (sort == Sort.DEF) {
          execute.invokeStatic(definition.defobjType.type,DEF_NOT_CALL);
        }
 else {
          if (sort == Sort.INT) {
            writeConstant(ctx,-1);
          }
 else           if (sort == Sort.LONG) {
            writeConstant(ctx,-1L);
          }
 else {
            throw new IllegalStateException(error(ctx) + "Unexpected writer state.");
          }
          execute.math(GeneratorAdapter.XOR,type);
        }
      }
 else       if (ctx.SUB() != null) {
        if (sort == Sort.DEF) {
          execute.invokeStatic(definition.defobjType.type,DEF_NEG_CALL);
        }
 else {
          if (settings.getNumericOverflow()) {
            execute.math(GeneratorAdapter.NEG,type);
          }
 else {
            if (sort == Sort.INT) {
              execute.invokeStatic(definition.mathType.type,NEGATEEXACT_INT);
            }
 else             if (sort == Sort.LONG) {
              execute.invokeStatic(definition.mathType.type,NEGATEEXACT_LONG);
            }
 else {
              throw new IllegalStateException(error(ctx) + "Unexpected writer state.");
            }
          }
        }
      }
 else       if (ctx.ADD() == null) {
        throw new IllegalStateException(error(ctx) + "Unexpected writer state.");
      }
      checkWriteCast(unaryemd);
      checkWriteBranch(ctx);
    }
  }
  return null;
}
