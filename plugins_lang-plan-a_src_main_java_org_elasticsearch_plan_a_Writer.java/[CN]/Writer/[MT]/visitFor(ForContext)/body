{
  final ExpressionContext exprctx=ctx.expression();
  final AfterthoughtContext atctx=ctx.afterthought();
  final Branch branch=markBranch(ctx,exprctx);
  final Label start=new Label();
  branch.begin=atctx == null ? start : new Label();
  branch.end=new Label();
  branch.fals=branch.end;
  jumps.push(branch);
  if (ctx.initializer() != null) {
    visit(ctx.initializer());
  }
  execute.mark(start);
  if (exprctx != null) {
    visit(exprctx);
  }
  final BlockContext blockctx=ctx.block();
  boolean allexit=false;
  if (blockctx != null) {
    StatementMetadata blocksmd=adapter.getStatementMetadata(blockctx);
    allexit=blocksmd.allExit;
    visit(blockctx);
  }
  if (atctx != null) {
    execute.mark(branch.begin);
    visit(atctx);
  }
  if (atctx != null || !allexit) {
    execute.goTo(start);
  }
  execute.mark(branch.end);
  jumps.pop();
  return null;
}
