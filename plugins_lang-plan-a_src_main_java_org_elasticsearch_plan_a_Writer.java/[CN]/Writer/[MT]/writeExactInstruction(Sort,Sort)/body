{
  if (psort == Sort.DOUBLE) {
    if (osort == Sort.FLOAT) {
      execute.invokeStatic(definition.utilityType.type,TOFLOATWOOVERFLOW_DOUBLE);
    }
 else     if (osort == Sort.FLOAT_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOFLOATWOOVERFLOW_DOUBLE);
      execute.checkCast(definition.floatobjType.type);
    }
 else     if (osort == Sort.LONG) {
      execute.invokeStatic(definition.utilityType.type,TOLONGWOOVERFLOW_DOUBLE);
    }
 else     if (osort == Sort.LONG_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOLONGWOOVERFLOW_DOUBLE);
      execute.checkCast(definition.longobjType.type);
    }
 else     if (osort == Sort.INT) {
      execute.invokeStatic(definition.utilityType.type,TOINTWOOVERFLOW_DOUBLE);
    }
 else     if (osort == Sort.INT_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOINTWOOVERFLOW_DOUBLE);
      execute.checkCast(definition.intobjType.type);
    }
 else     if (osort == Sort.CHAR) {
      execute.invokeStatic(definition.utilityType.type,TOCHARWOOVERFLOW_DOUBLE);
    }
 else     if (osort == Sort.CHAR_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOCHARWOOVERFLOW_DOUBLE);
      execute.checkCast(definition.charobjType.type);
    }
 else     if (osort == Sort.SHORT) {
      execute.invokeStatic(definition.utilityType.type,TOSHORTWOOVERFLOW_DOUBLE);
    }
 else     if (osort == Sort.SHORT_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOSHORTWOOVERFLOW_DOUBLE);
      execute.checkCast(definition.shortobjType.type);
    }
 else     if (osort == Sort.BYTE) {
      execute.invokeStatic(definition.utilityType.type,TOBYTEWOOVERFLOW_DOUBLE);
    }
 else     if (osort == Sort.BYTE_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOBYTEWOOVERFLOW_DOUBLE);
      execute.checkCast(definition.byteobjType.type);
    }
 else {
      return false;
    }
  }
 else   if (psort == Sort.FLOAT) {
    if (osort == Sort.LONG) {
      execute.invokeStatic(definition.utilityType.type,TOLONGWOOVERFLOW_FLOAT);
    }
 else     if (osort == Sort.LONG_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOLONGWOOVERFLOW_FLOAT);
      execute.checkCast(definition.longobjType.type);
    }
 else     if (osort == Sort.INT) {
      execute.invokeStatic(definition.utilityType.type,TOINTWOOVERFLOW_FLOAT);
    }
 else     if (osort == Sort.INT_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOINTWOOVERFLOW_FLOAT);
      execute.checkCast(definition.intobjType.type);
    }
 else     if (osort == Sort.CHAR) {
      execute.invokeStatic(definition.utilityType.type,TOCHARWOOVERFLOW_FLOAT);
    }
 else     if (osort == Sort.CHAR_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOCHARWOOVERFLOW_FLOAT);
      execute.checkCast(definition.charobjType.type);
    }
 else     if (osort == Sort.SHORT) {
      execute.invokeStatic(definition.utilityType.type,TOSHORTWOOVERFLOW_FLOAT);
    }
 else     if (osort == Sort.SHORT_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOSHORTWOOVERFLOW_FLOAT);
      execute.checkCast(definition.shortobjType.type);
    }
 else     if (osort == Sort.BYTE) {
      execute.invokeStatic(definition.utilityType.type,TOBYTEWOOVERFLOW_FLOAT);
    }
 else     if (osort == Sort.BYTE_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOBYTEWOOVERFLOW_FLOAT);
      execute.checkCast(definition.byteobjType.type);
    }
 else {
      return false;
    }
  }
 else   if (psort == Sort.LONG) {
    if (osort == Sort.INT) {
      execute.invokeStatic(definition.mathType.type,TOINTEXACT_LONG);
    }
 else     if (osort == Sort.INT_OBJ) {
      execute.invokeStatic(definition.mathType.type,TOINTEXACT_LONG);
      execute.checkCast(definition.intobjType.type);
    }
 else     if (osort == Sort.CHAR) {
      execute.invokeStatic(definition.utilityType.type,TOCHAREXACT_LONG);
    }
 else     if (osort == Sort.CHAR_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOCHAREXACT_LONG);
      execute.checkCast(definition.charobjType.type);
    }
 else     if (osort == Sort.SHORT) {
      execute.invokeStatic(definition.utilityType.type,TOSHORTEXACT_LONG);
    }
 else     if (osort == Sort.SHORT_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOSHORTEXACT_LONG);
      execute.checkCast(definition.shortobjType.type);
    }
 else     if (osort == Sort.BYTE) {
      execute.invokeStatic(definition.utilityType.type,TOBYTEEXACT_LONG);
    }
 else     if (osort == Sort.BYTE_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOBYTEEXACT_LONG);
      execute.checkCast(definition.byteobjType.type);
    }
 else {
      return false;
    }
  }
 else   if (psort == Sort.INT) {
    if (osort == Sort.CHAR) {
      execute.invokeStatic(definition.utilityType.type,TOCHAREXACT_INT);
    }
 else     if (osort == Sort.CHAR_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOCHAREXACT_INT);
      execute.checkCast(definition.charobjType.type);
    }
 else     if (osort == Sort.SHORT) {
      execute.invokeStatic(definition.utilityType.type,TOSHORTEXACT_INT);
    }
 else     if (osort == Sort.SHORT_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOSHORTEXACT_INT);
      execute.checkCast(definition.shortobjType.type);
    }
 else     if (osort == Sort.BYTE) {
      execute.invokeStatic(definition.utilityType.type,TOBYTEEXACT_INT);
    }
 else     if (osort == Sort.BYTE_OBJ) {
      execute.invokeStatic(definition.utilityType.type,TOBYTEEXACT_INT);
      execute.checkCast(definition.byteobjType.type);
    }
 else {
      return false;
    }
  }
 else {
    return false;
  }
  return true;
}
