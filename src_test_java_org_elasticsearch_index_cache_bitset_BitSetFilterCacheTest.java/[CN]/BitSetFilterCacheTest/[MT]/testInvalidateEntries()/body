{
  IndexWriter writer=new IndexWriter(new RAMDirectory(),new IndexWriterConfig(new StandardAnalyzer()).setMergePolicy(new LogByteSizeMergePolicy()));
  Document document=new Document();
  document.add(new StringField("field","value",Field.Store.NO));
  writer.addDocument(document);
  writer.commit();
  document=new Document();
  document.add(new StringField("field","value",Field.Store.NO));
  writer.addDocument(document);
  writer.commit();
  document=new Document();
  document.add(new StringField("field","value",Field.Store.NO));
  writer.addDocument(document);
  writer.commit();
  IndexReader reader=DirectoryReader.open(writer,false);
  IndexSearcher searcher=new IndexSearcher(reader);
  BitsetFilterCache cache=new BitsetFilterCache(new Index("test"),ImmutableSettings.EMPTY);
  BitDocIdSetFilter filter=cache.getBitDocIdSetFilter(new TermFilter(new Term("field","value")));
  TopDocs docs=searcher.search(new ConstantScoreQuery(filter),1);
  assertThat(docs.totalHits,equalTo(3));
  docs=searcher.search(new ConstantScoreQuery(filter),1);
  assertThat(docs.totalHits,equalTo(3));
  assertThat(cache.getLoadedFilters().size(),equalTo(3l));
  writer.forceMerge(1);
  reader.close();
  reader=DirectoryReader.open(writer,false);
  searcher=new IndexSearcher(reader);
  docs=searcher.search(new ConstantScoreQuery(filter),1);
  assertThat(docs.totalHits,equalTo(3));
  docs=searcher.search(new ConstantScoreQuery(filter),1);
  assertThat(docs.totalHits,equalTo(3));
  assertThat(cache.getLoadedFilters().size(),equalTo(1l));
  reader.close();
  writer.close();
  assertThat(cache.getLoadedFilters().size(),equalTo(0l));
}
