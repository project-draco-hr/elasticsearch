{
  internalCluster().ensureAtLeastNumDataNodes(2);
  prepareCreate("test").setSettings(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).get();
  ensureGreen();
  IndexStats indexStats=client().admin().indices().prepareStats("test").get().getIndex("test");
  for (  ShardStats shardStats : indexStats.getShards()) {
    assertNull(shardStats.getCommitStats().getUserData().get(Engine.SYNC_COMMIT_ID));
  }
  ShardsSyncedFlushResult result;
  if (randomBoolean()) {
    logger.info("--> sync flushing shard 0");
    result=SyncedFlushUtil.attemptSyncedFlush(internalCluster(),new ShardId("test",0));
  }
 else {
    logger.info("--> sync flushing index [test]");
    IndicesSyncedFlushResult indicesResult=SyncedFlushUtil.attemptSyncedFlush(internalCluster(),"test");
    result=indicesResult.getShardsResultPerIndex().get("test").get(0);
  }
  assertFalse(result.failed());
  assertThat(result.totalShards(),equalTo(indexStats.getShards().length));
  assertThat(result.successfulShards(),equalTo(indexStats.getShards().length));
  indexStats=client().admin().indices().prepareStats("test").get().getIndex("test");
  String syncId=result.syncId();
  for (  ShardStats shardStats : indexStats.getShards()) {
    final String shardSyncId=shardStats.getCommitStats().getUserData().get(Engine.SYNC_COMMIT_ID);
    assertThat(shardSyncId,equalTo(syncId));
  }
  String newNodeName=internalCluster().startNode();
  ClusterState clusterState=client().admin().cluster().prepareState().get().getState();
  ShardRouting shardRouting=clusterState.getRoutingTable().index("test").shard(0).iterator().next();
  String currentNodeName=clusterState.nodes().resolveNode(shardRouting.currentNodeId()).name();
  assertFalse(currentNodeName.equals(newNodeName));
  internalCluster().client().admin().cluster().prepareReroute().add(new MoveAllocationCommand(new ShardId("test",0),currentNodeName,newNodeName)).get();
  client().admin().cluster().prepareHealth().setWaitForRelocatingShards(0).get();
  indexStats=client().admin().indices().prepareStats("test").get().getIndex("test");
  for (  ShardStats shardStats : indexStats.getShards()) {
    assertNotNull(shardStats.getCommitStats().getUserData().get(Engine.SYNC_COMMIT_ID));
  }
  client().admin().indices().prepareUpdateSettings("test").setSettings(Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,0).build()).get();
  ensureGreen("test");
  indexStats=client().admin().indices().prepareStats("test").get().getIndex("test");
  for (  ShardStats shardStats : indexStats.getShards()) {
    assertNotNull(shardStats.getCommitStats().getUserData().get(Engine.SYNC_COMMIT_ID));
  }
  client().admin().indices().prepareUpdateSettings("test").setSettings(Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,internalCluster().numDataNodes() - 1).build()).get();
  ensureGreen("test");
  indexStats=client().admin().indices().prepareStats("test").get().getIndex("test");
  for (  ShardStats shardStats : indexStats.getShards()) {
    assertNotNull(shardStats.getCommitStats().getUserData().get(Engine.SYNC_COMMIT_ID));
  }
}
