{
  left.analyze(variables);
  right.analyze(variables);
  Type promote=AnalyzerCaster.promoteNumeric(left.actual,right.actual,true);
  if (promote == null) {
    throw createError(new ClassCastException("Cannot apply less than [>=] to types " + "[" + left.actual.name + "] and ["+ right.actual.name+ "]."));
  }
  left.expected=promote;
  right.expected=promote;
  left=left.cast(variables);
  right=right.cast(variables);
  if (left.constant != null && right.constant != null) {
    Sort sort=promote.sort;
    if (sort == Sort.INT) {
      constant=(int)left.constant < (int)right.constant;
    }
 else     if (sort == Sort.LONG) {
      constant=(long)left.constant < (long)right.constant;
    }
 else     if (sort == Sort.FLOAT) {
      constant=(float)left.constant < (float)right.constant;
    }
 else     if (sort == Sort.DOUBLE) {
      constant=(double)left.constant < (double)right.constant;
    }
 else {
      throw createError(new IllegalStateException("Illegal tree structure."));
    }
  }
  actual=Definition.BOOLEAN_TYPE;
}
