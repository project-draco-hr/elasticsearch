{
  IndexService indexService=createIndex("test");
  XContentBuilder mappings1=jsonBuilder().startObject().startObject("type1").startArray("dynamic_templates").startObject().startObject("template1").field("match_mapping_type","string").startObject("mapping").field("type","text").startObject("fields").startObject("raw").field("type","keyword").endObject().endObject().endObject().endObject().endObject().endArray().endObject().endObject();
  indexService.mapperService().merge("type1",new CompressedXContent(mappings1.bytes()),MapperService.MergeReason.MAPPING_UPDATE,false);
  XContentBuilder mappings2=jsonBuilder().startObject().startObject("type2").startObject("properties").startObject("field").field("type","text").endObject().endObject().endObject().endObject();
  indexService.mapperService().merge("type2",new CompressedXContent(mappings2.bytes()),MapperService.MergeReason.MAPPING_UPDATE,false);
  XContentBuilder json=XContentFactory.jsonBuilder().startObject().field("field","foo").endObject();
  SourceToParse source=SourceToParse.source("test","type1","1",json.bytes());
  DocumentMapper mapper=indexService.mapperService().documentMapper("type1");
  assertNull(mapper.mappers().getMapper("field.raw"));
  ParsedDocument parsed=mapper.parse(source);
  assertNotNull(parsed.dynamicMappingsUpdate());
  indexService.mapperService().merge("type1",new CompressedXContent(parsed.dynamicMappingsUpdate().toString()),MapperService.MergeReason.MAPPING_UPDATE,false);
  mapper=indexService.mapperService().documentMapper("type1");
  assertNotNull(mapper.mappers().getMapper("field.raw"));
  parsed=mapper.parse(source);
  assertNull(parsed.dynamicMappingsUpdate());
}
