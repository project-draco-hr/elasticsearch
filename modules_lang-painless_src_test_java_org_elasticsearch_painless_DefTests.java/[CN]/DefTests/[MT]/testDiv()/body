{
  assertEquals(1,exec("def x = (byte)2 def y = (byte)2 return x / y"));
  assertEquals(1,exec("def x = (short)2 def y = (byte)2 return x / y"));
  assertEquals(1,exec("def x = (char)2 def y = (byte)2 return x / y"));
  assertEquals(1,exec("def x = (int)2 def y = (byte)2 return x / y"));
  assertEquals(1L,exec("def x = (long)2 def y = (byte)2 return x / y"));
  assertEquals(1F,exec("def x = (float)2 def y = (byte)2 return x / y"));
  assertEquals(1D,exec("def x = (double)2 def y = (byte)2 return x / y"));
  assertEquals(1,exec("def x = (byte)2 def y = (short)2 return x / y"));
  assertEquals(1,exec("def x = (short)2 def y = (short)2 return x / y"));
  assertEquals(1,exec("def x = (char)2 def y = (short)2 return x / y"));
  assertEquals(1,exec("def x = (int)2 def y = (short)2 return x / y"));
  assertEquals(1L,exec("def x = (long)2 def y = (short)2 return x / y"));
  assertEquals(1F,exec("def x = (float)2 def y = (short)2 return x / y"));
  assertEquals(1D,exec("def x = (double)2 def y = (short)2 return x / y"));
  assertEquals(1,exec("def x = (byte)2 def y = (char)2 return x / y"));
  assertEquals(1,exec("def x = (short)2 def y = (char)2 return x / y"));
  assertEquals(1,exec("def x = (char)2 def y = (char)2 return x / y"));
  assertEquals(1,exec("def x = (int)2 def y = (char)2 return x / y"));
  assertEquals(1L,exec("def x = (long)2 def y = (char)2 return x / y"));
  assertEquals(1F,exec("def x = (float)2 def y = (char)2 return x / y"));
  assertEquals(1D,exec("def x = (double)2 def y = (char)2 return x / y"));
  assertEquals(1,exec("def x = (byte)2 def y = (int)2 return x / y"));
  assertEquals(1,exec("def x = (short)2 def y = (int)2 return x / y"));
  assertEquals(1,exec("def x = (char)2 def y = (int)2 return x / y"));
  assertEquals(1,exec("def x = (int)2 def y = (int)2 return x / y"));
  assertEquals(1L,exec("def x = (long)2 def y = (int)2 return x / y"));
  assertEquals(1F,exec("def x = (float)2 def y = (int)2 return x / y"));
  assertEquals(1D,exec("def x = (double)2 def y = (int)2 return x / y"));
  assertEquals(1L,exec("def x = (byte)2 def y = (long)2 return x / y"));
  assertEquals(1L,exec("def x = (short)2 def y = (long)2 return x / y"));
  assertEquals(1L,exec("def x = (char)2 def y = (long)2 return x / y"));
  assertEquals(1L,exec("def x = (int)2 def y = (long)2 return x / y"));
  assertEquals(1L,exec("def x = (long)2 def y = (long)2 return x / y"));
  assertEquals(1F,exec("def x = (float)2 def y = (long)2 return x / y"));
  assertEquals(1D,exec("def x = (double)2 def y = (long)2 return x / y"));
  assertEquals(1F,exec("def x = (byte)2 def y = (float)2 return x / y"));
  assertEquals(1F,exec("def x = (short)2 def y = (float)2 return x / y"));
  assertEquals(1F,exec("def x = (char)2 def y = (float)2 return x / y"));
  assertEquals(1F,exec("def x = (int)2 def y = (float)2 return x / y"));
  assertEquals(1F,exec("def x = (long)2 def y = (float)2 return x / y"));
  assertEquals(1F,exec("def x = (float)2 def y = (float)2 return x / y"));
  assertEquals(1D,exec("def x = (double)2 def y = (float)2 return x / y"));
  assertEquals(1D,exec("def x = (byte)2 def y = (double)2 return x / y"));
  assertEquals(1D,exec("def x = (short)2 def y = (double)2 return x / y"));
  assertEquals(1D,exec("def x = (char)2 def y = (double)2 return x / y"));
  assertEquals(1D,exec("def x = (int)2 def y = (double)2 return x / y"));
  assertEquals(1D,exec("def x = (long)2 def y = (double)2 return x / y"));
  assertEquals(1D,exec("def x = (float)2 def y = (double)2 return x / y"));
  assertEquals(1D,exec("def x = (double)2 def y = (double)2 return x / y"));
  assertEquals(1,exec("def x = (Byte)2 def y = (byte)2 return x / y"));
  assertEquals(1,exec("def x = (Short)2 def y = (short)2 return x / y"));
  assertEquals(1,exec("def x = (Character)2 def y = (char)2 return x / y"));
  assertEquals(1,exec("def x = (Integer)2 def y = (int)2 return x / y"));
  assertEquals(1L,exec("def x = (Long)2 def y = (long)2 return x / y"));
  assertEquals(1F,exec("def x = (Float)2 def y = (float)2 return x / y"));
  assertEquals(1D,exec("def x = (Double)2 def y = (double)2 return x / y"));
}
