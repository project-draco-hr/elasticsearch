{
  boolean fullId=req.paramAsBoolean("full_id",false);
  DiscoveryNodes nodes=state.getState().nodes();
  Table table=getTableWithHeader(req);
  for (  DiscoveryNode node : nodes) {
    NodeInfo info=nodesInfo.getNodesMap().get(node.id());
    NodeStats stats=nodesStats.getNodesMap().get(node.id());
    table.startRow();
    table.addCell(fullId ? node.id() : Strings.substring(node.getId(),0,4));
    table.addCell(info == null ? null : info.getProcess().getId());
    table.addCell(node.getHostName());
    table.addCell(node.getHostAddress());
    if (node.address() instanceof InetSocketTransportAddress) {
      table.addCell(((InetSocketTransportAddress)node.address()).address().getPort());
    }
 else {
      table.addCell("-");
    }
    final Map<String,ThreadPoolStats.Stats> poolThreadStats;
    final Map<String,ThreadPool.Info> poolThreadInfo;
    if (stats == null) {
      poolThreadStats=Collections.emptyMap();
      poolThreadInfo=Collections.emptyMap();
    }
 else {
      poolThreadStats=new HashMap<>(14);
      poolThreadInfo=new HashMap<>(14);
      ThreadPoolStats threadPoolStats=stats.getThreadPool();
      for (      ThreadPoolStats.Stats threadPoolStat : threadPoolStats) {
        poolThreadStats.put(threadPoolStat.getName(),threadPoolStat);
      }
      if (info != null) {
        for (        ThreadPool.Info threadPoolInfo : info.getThreadPool()) {
          poolThreadInfo.put(threadPoolInfo.getName(),threadPoolInfo);
        }
      }
    }
    for (    String pool : SUPPORTED_NAMES) {
      ThreadPoolStats.Stats poolStats=poolThreadStats.get(pool);
      ThreadPool.Info poolInfo=poolThreadInfo.get(pool);
      Long maxQueueSize=null;
      String keepAlive=null;
      Integer minThreads=null;
      Integer maxThreads=null;
      if (poolInfo != null) {
        if (poolInfo.getQueueSize() != null) {
          maxQueueSize=poolInfo.getQueueSize().singles();
        }
        if (poolInfo.getKeepAlive() != null) {
          keepAlive=poolInfo.getKeepAlive().toString();
        }
        if (poolInfo.getMin() >= 0) {
          minThreads=poolInfo.getMin();
        }
        if (poolInfo.getMax() >= 0) {
          maxThreads=poolInfo.getMax();
        }
      }
      table.addCell(poolInfo == null ? null : poolInfo.getThreadPoolType().getType());
      table.addCell(poolStats == null ? null : poolStats.getActive());
      table.addCell(poolStats == null ? null : poolStats.getThreads());
      table.addCell(poolStats == null ? null : poolStats.getQueue());
      table.addCell(maxQueueSize);
      table.addCell(poolStats == null ? null : poolStats.getRejected());
      table.addCell(poolStats == null ? null : poolStats.getLargest());
      table.addCell(poolStats == null ? null : poolStats.getCompleted());
      table.addCell(minThreads);
      table.addCell(maxThreads);
      table.addCell(keepAlive);
    }
    table.endRow();
  }
  return table;
}
