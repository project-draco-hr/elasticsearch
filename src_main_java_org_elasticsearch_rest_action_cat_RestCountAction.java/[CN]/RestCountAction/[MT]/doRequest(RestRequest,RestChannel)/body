{
  String[] indices=Strings.splitStringByCommaToArray(request.param("index"));
  CountRequest countRequest=new CountRequest(indices);
  countRequest.operationThreading(BroadcastOperationThreading.SINGLE_THREAD);
  String source=request.param("source");
  if (source != null) {
    countRequest.query(source);
  }
 else {
    BytesReference querySource=RestActions.parseQuerySource(request);
    if (querySource != null) {
      countRequest.query(querySource,false);
    }
  }
  client.count(countRequest,new ActionListener<CountResponse>(){
    @Override public void onResponse(    CountResponse countResponse){
      try {
        channel.sendResponse(RestTable.buildResponse(buildTable(request,countResponse),request,channel));
      }
 catch (      Throwable t) {
        onFailure(t);
      }
    }
    @Override public void onFailure(    Throwable t){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,t));
      }
 catch (      IOException e) {
        logger.error("Failed to send failure response",e);
      }
    }
  }
);
}
