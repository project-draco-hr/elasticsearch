{
  File configDir=resolveConfigDir();
  logger.info("Using config directory: {}",configDir.getAbsolutePath());
  File loggingFile=new File(configDir,"logging.yml");
  logger.info("Contents of {}: {}",loggingFile,Files.toString(loggingFile,UTF8));
  Settings settings=ImmutableSettings.builder().put("path.conf",configDir.getAbsolutePath()).build();
  logger.info("LogConfigurator Settings: {}",settings.getAsMap());
  LogConfigurator.configure(settings);
  ESLogger esLogger=Log4jESLoggerFactory.getLogger("first");
  Logger logger=((Log4jESLogger)esLogger).logger();
  this.logger.info("Found following appenders:");
  for (Enumeration allAppenders=logger.getAllAppenders(); allAppenders.hasMoreElements(); ) {
    Appender appender=(Appender)allAppenders.nextElement();
    this.logger.info("Found appender: {}",appender.getName());
  }
  Appender appender=logger.getAppender("console1");
  assertThat(appender,notNullValue());
  esLogger=Log4jESLoggerFactory.getLogger("second");
  logger=((Log4jESLogger)esLogger).logger();
  appender=logger.getAppender("console2");
  assertThat(appender,notNullValue());
  esLogger=Log4jESLoggerFactory.getLogger("third");
  logger=((Log4jESLogger)esLogger).logger();
  appender=logger.getAppender("console3");
  assertThat(appender,notNullValue());
}
