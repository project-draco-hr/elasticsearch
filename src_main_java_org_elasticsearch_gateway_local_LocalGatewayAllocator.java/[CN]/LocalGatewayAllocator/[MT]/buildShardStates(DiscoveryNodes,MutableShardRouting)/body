{
  TObjectLongHashMap<DiscoveryNode> shardStates=cachedShardsState.get(shard.shardId());
  Set<String> nodeIds;
  if (shardStates == null) {
    shardStates=new TObjectLongHashMap<DiscoveryNode>();
    cachedShardsState.put(shard.shardId(),shardStates);
    nodeIds=nodes.dataNodes().keySet();
  }
 else {
    for (TObjectLongIterator<DiscoveryNode> it=shardStates.iterator(); it.hasNext(); ) {
      it.advance();
      if (!nodes.nodeExists(it.key().id())) {
        it.remove();
      }
    }
    nodeIds=Sets.newHashSet();
    for (    DiscoveryNode node : nodes.dataNodes().values()) {
      if (!shardStates.containsKey(node)) {
        nodeIds.add(node.id());
      }
    }
  }
  if (nodeIds.isEmpty()) {
    return shardStates;
  }
  TransportNodesListGatewayStartedShards.NodesLocalGatewayStartedShards response=listGatewayStartedShards.list(shard.shardId(),nodes.dataNodes().keySet(),listTimeout).actionGet();
  if (logger.isDebugEnabled()) {
    if (response.failures().length > 0) {
      StringBuilder sb=new StringBuilder(shard + ": failures when trying to list shards on nodes:");
      for (int i=0; i < response.failures().length; i++) {
        Throwable cause=ExceptionsHelper.unwrapCause(response.failures()[i]);
        if (cause instanceof ConnectTransportException) {
          continue;
        }
        sb.append("\n    -> ").append(response.failures()[i].getDetailedMessage());
      }
      logger.debug(sb.toString());
    }
  }
  for (  TransportNodesListGatewayStartedShards.NodeLocalGatewayStartedShards nodeShardState : response) {
    shardStates.put(nodeShardState.getNode(),nodeShardState.version());
  }
  return shardStates;
}
