{
  Settings.Builder builder=Settings.builder().put("script.inline",randomFrom(DISABLE_VALUES)).put(specificEngineOpSettings(MustacheScriptEngineService.NAME,ScriptType.INLINE,ScriptContext.Standard.AGGS),randomFrom(ENABLE_VALUES)).put(specificEngineOpSettings(MustacheScriptEngineService.NAME,ScriptType.INLINE,ScriptContext.Standard.SEARCH),randomFrom(ENABLE_VALUES));
  ImmutableSet<String> mustacheLangSet=ImmutableSet.of(MustacheScriptEngineService.NAME);
  Set<String> allButMustacheLangSet=new HashSet<>(ALL_LANGS);
  allButMustacheLangSet.remove(MustacheScriptEngineService.NAME);
  this.scriptModes=new ScriptModes(scriptEngines,scriptContextRegistry,builder.build());
  assertScriptModes(ScriptMode.ON,mustacheLangSet,new ScriptType[]{ScriptType.INLINE},ScriptContext.Standard.AGGS,ScriptContext.Standard.SEARCH);
  assertScriptModes(ScriptMode.OFF,mustacheLangSet,new ScriptType[]{ScriptType.INLINE},complementOf(ScriptContext.Standard.AGGS,ScriptContext.Standard.SEARCH));
  assertScriptModesAllOps(ScriptMode.OFF,allButMustacheLangSet,ScriptType.INLINE);
  assertScriptModesAllOps(ScriptMode.SANDBOX,ALL_LANGS,ScriptType.INDEXED);
  assertScriptModesAllOps(ScriptMode.ON,ALL_LANGS,ScriptType.FILE);
}
