{
  MapBinder<String,IndexQueryParserFactory> qbinder=MapBinder.newMapBinder(binder(),String.class,IndexQueryParserFactory.class);
  Map<String,Settings> queryParserGroupSettings=settings.getGroups(IndexQueryParserService.Defaults.PREFIX);
  for (  Map.Entry<String,Settings> entry : queryParserGroupSettings.entrySet()) {
    String qName=entry.getKey();
    Settings qSettings=entry.getValue();
    qbinder.addBinding(qName).toProvider(FactoryProvider.newFactory(IndexQueryParserFactory.class,qSettings.getAsClass("type",XContentIndexQueryParser.class))).in(Scopes.SINGLETON);
  }
  if (!queryParserGroupSettings.containsKey(IndexQueryParserService.Defaults.DEFAULT)) {
    qbinder.addBinding(IndexQueryParserService.Defaults.DEFAULT).toProvider(FactoryProvider.newFactory(IndexQueryParserFactory.class,XContentIndexQueryParser.class)).in(Scopes.SINGLETON);
  }
  MapBinder<String,XContentQueryParserFactory> queryBinder=MapBinder.newMapBinder(binder(),String.class,XContentQueryParserFactory.class);
  Map<String,Settings> xContentQueryParserGroups=settings.getGroups(XContentIndexQueryParser.Defaults.QUERY_PREFIX);
  for (  Map.Entry<String,Settings> entry : xContentQueryParserGroups.entrySet()) {
    String qName=entry.getKey();
    Settings qSettings=entry.getValue();
    Class<? extends XContentQueryParser> type=qSettings.getAsClass("type",null);
    if (type == null) {
      throw new IllegalArgumentException("Query Parser [" + qName + "] must be provided with a type");
    }
    queryBinder.addBinding(qName).toProvider(FactoryProvider.newFactory(XContentQueryParserFactory.class,qSettings.getAsClass("type",null))).in(Scopes.SINGLETON);
  }
  MapBinder<String,XContentFilterParserFactory> filterBinder=MapBinder.newMapBinder(binder(),String.class,XContentFilterParserFactory.class);
  Map<String,Settings> xContentFilterParserGroups=settings.getGroups(XContentIndexQueryParser.Defaults.FILTER_PREFIX);
  for (  Map.Entry<String,Settings> entry : xContentFilterParserGroups.entrySet()) {
    String fName=entry.getKey();
    Settings fSettings=entry.getValue();
    Class<? extends XContentFilterParser> type=fSettings.getAsClass("type",null);
    if (type == null) {
      throw new IllegalArgumentException("Filter Parser [" + fName + "] must be provided with a type");
    }
    filterBinder.addBinding(fName).toProvider(FactoryProvider.newFactory(XContentFilterParserFactory.class,fSettings.getAsClass("type",null))).in(Scopes.SINGLETON);
  }
  bind(IndexQueryParserService.class).asEagerSingleton();
}
