{
  Settings nodeSettings=ImmutableSettings.builder().put("node.add_id_to_custom_path",false).put("node.enable_custom_paths",true).build();
  internalCluster().startNodesAsync(3,nodeSettings).get();
  Path dataPath=createTempDir();
  String IDX="test";
  Settings idxSettings=ImmutableSettings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,2).put(IndexMetaData.SETTING_DATA_PATH,dataPath.toAbsolutePath().toString()).put(IndexMetaData.SETTING_SHADOW_REPLICAS,true).put(IndexMetaData.SETTING_SHARED_FILESYSTEM,true).build();
  prepareCreate(IDX).setSettings(idxSettings).addMapping("doc","foo","type=string,index=not_analyzed").get();
  ensureGreen(IDX);
  client().prepareIndex(IDX,"doc","1").setSource("foo","foo").get();
  client().prepareIndex(IDX,"doc","2").setSource("foo","bar").get();
  client().prepareIndex(IDX,"doc","3").setSource("foo","baz").get();
  client().prepareIndex(IDX,"doc","4").setSource("foo","eggplant").get();
  flushAndRefresh(IDX);
  SearchResponse resp=client().prepareSearch(IDX).setQuery(matchAllQuery()).addFieldDataField("foo").addSort("foo",SortOrder.ASC).get();
  assertHitCount(resp,4);
  assertOrderedSearchHits(resp,"2","3","4","1");
  SearchHit[] hits=resp.getHits().hits();
  assertThat(hits[0].field("foo").getValue().toString(),equalTo("bar"));
  assertThat(hits[1].field("foo").getValue().toString(),equalTo("baz"));
  assertThat(hits[2].field("foo").getValue().toString(),equalTo("eggplant"));
  assertThat(hits[3].field("foo").getValue().toString(),equalTo("foo"));
}
