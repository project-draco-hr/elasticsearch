{
  try {
    transport.stop();
  }
  finally {
    for (    Map.Entry<Long,RequestHolder> entry : clientHandlers.entrySet()) {
      final RequestHolder holderToNotify=clientHandlers.remove(entry.getKey());
      if (holderToNotify != null) {
        threadPool.generic().execute(new AbstractRunnable(){
          @Override public void onRejection(          Exception e){
            logger.debug("failed to notify response handler on rejection, action: {}",e,holderToNotify.action());
          }
          @Override public void onFailure(          Exception e){
            logger.warn("failed to notify response handler on exception, action: {}",e,holderToNotify.action());
          }
          @Override public void doRun(){
            TransportException ex=new TransportException("transport stopped, action: " + holderToNotify.action());
            holderToNotify.handler().handleException(ex);
          }
        }
);
      }
    }
  }
}
