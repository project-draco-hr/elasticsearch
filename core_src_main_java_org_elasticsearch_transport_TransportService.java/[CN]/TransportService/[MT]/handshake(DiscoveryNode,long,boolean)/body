{
  final HandshakeResponse response;
  try {
    response=this.submitRequest(node,HANDSHAKE_ACTION_NAME,HandshakeRequest.INSTANCE,TransportRequestOptions.builder().withTimeout(handshakeTimeout).build(),new FutureTransportResponseHandler<HandshakeResponse>(){
      @Override public HandshakeResponse newInstance(){
        return new HandshakeResponse();
      }
    }
).txGet();
  }
 catch (  Exception e) {
    throw new ConnectTransportException(node,"handshake failed",e);
  }
  if (checkClusterName && !Objects.equals(clusterName,response.clusterName)) {
    throw new ConnectTransportException(node,"handshake failed, mismatched cluster name [" + response.clusterName + "]");
  }
 else   if (!isVersionCompatible(response.version)) {
    throw new ConnectTransportException(node,"handshake failed, incompatible version [" + response.version + "]");
  }
  return response.discoveryNode;
}
