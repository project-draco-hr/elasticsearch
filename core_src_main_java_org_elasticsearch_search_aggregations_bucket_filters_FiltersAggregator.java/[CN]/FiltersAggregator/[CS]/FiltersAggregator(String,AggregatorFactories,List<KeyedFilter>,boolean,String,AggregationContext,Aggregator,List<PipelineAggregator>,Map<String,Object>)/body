{
  super(name,factories,aggregationContext,parent,pipelineAggregators,metaData);
  this.keyed=keyed;
  this.keys=new String[filters.size()];
  this.filters=new Weight[filters.size()];
  this.showOtherBucket=otherBucketKey != null;
  this.otherBucketKey=otherBucketKey;
  if (showOtherBucket) {
    this.totalNumKeys=filters.size() + 1;
  }
 else {
    this.totalNumKeys=filters.size();
  }
  for (int i=0; i < filters.size(); ++i) {
    KeyedFilter keyedFilter=filters.get(i);
    this.keys[i]=keyedFilter.key;
    Query filter=keyedFilter.filter.toFilter(context.searchContext().indexShard().getQueryShardContext());
    this.filters[i]=aggregationContext.searchContext().searcher().createNormalizedWeight(filter,false);
  }
}
