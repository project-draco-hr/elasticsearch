{
  SearchResponse response=client().prepareSearch("idx","idx_unmapped").addAggregation(histogram("histo").field(SINGLE_VALUED_FIELD_NAME).interval(interval).extendedBounds(new ExtendedBounds((long)-1 * 2 * interval,(long)valueCounts.length * interval))).get();
  assertSearchResponse(response);
  Histogram histo=response.getAggregations().get("histo");
  assertThat(histo,notNullValue());
  assertThat(histo.getName(),equalTo("histo"));
  List<? extends Bucket> buckets=histo.getBuckets();
  assertThat(buckets.size(),equalTo(numValueBuckets + 3));
  Histogram.Bucket bucket=buckets.get(0);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo((long)-1 * 2 * interval));
  assertThat(bucket.getDocCount(),equalTo(0L));
  bucket=buckets.get(1);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo((long)-1 * interval));
  assertThat(bucket.getDocCount(),equalTo(0L));
  for (int i=2; i < numValueBuckets + 2; ++i) {
    bucket=buckets.get(i);
    assertThat(bucket,notNullValue());
    assertThat(((Number)bucket.getKey()).longValue(),equalTo((long)(i - 2) * interval));
    assertThat(bucket.getDocCount(),equalTo(valueCounts[i - 2]));
  }
}
