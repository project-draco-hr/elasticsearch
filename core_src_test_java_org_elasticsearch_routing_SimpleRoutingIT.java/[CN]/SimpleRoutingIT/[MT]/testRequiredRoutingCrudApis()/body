{
  client().admin().indices().prepareCreate("test").addAlias(new Alias("alias")).addMapping("type1",XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("_routing").field("required",true).endObject().endObject().endObject()).execute().actionGet();
  ensureGreen();
  logger.info("--> indexing with id [1], and routing [0]");
  client().prepareIndex(indexOrAlias(),"type1","1").setRouting("0").setSource("field","value1").setRefresh(true).execute().actionGet();
  logger.info("--> verifying get with no routing, should fail");
  logger.info("--> indexing with id [1], with no routing, should fail");
  try {
    client().prepareIndex(indexOrAlias(),"type1","1").setSource("field","value1").setRefresh(true).execute().actionGet();
    fail("index with missing routing when routing is required should fail");
  }
 catch (  ElasticsearchException e) {
    assertThat(e.unwrapCause(),instanceOf(RoutingMissingException.class));
  }
  logger.info("--> verifying get with routing, should find");
  for (int i=0; i < 5; i++) {
    assertThat(client().prepareGet(indexOrAlias(),"type1","1").setRouting("0").execute().actionGet().isExists(),equalTo(true));
  }
  logger.info("--> deleting with no routing, should fail");
  try {
    client().prepareDelete(indexOrAlias(),"type1","1").setRefresh(true).execute().actionGet();
    fail("delete with missing routing when routing is required should fail");
  }
 catch (  ElasticsearchException e) {
    assertThat(e.unwrapCause(),instanceOf(RoutingMissingException.class));
  }
  for (int i=0; i < 5; i++) {
    try {
      client().prepareGet(indexOrAlias(),"type1","1").execute().actionGet().isExists();
      fail("get with missing routing when routing is required should fail");
    }
 catch (    RoutingMissingException e) {
      assertThat(e.status(),equalTo(RestStatus.BAD_REQUEST));
      assertThat(e.getMessage(),equalTo("routing is required for [test]/[type1]/[1]"));
    }
    assertThat(client().prepareGet(indexOrAlias(),"type1","1").setRouting("0").execute().actionGet().isExists(),equalTo(true));
  }
  logger.info("--> indexing with id [1], and routing [0]");
  client().prepareIndex(indexOrAlias(),"type1","1").setRouting("0").setSource("field","value1").setRefresh(true).execute().actionGet();
  logger.info("--> verifying get with no routing, should not find anything");
  try {
    client().prepareUpdate(indexOrAlias(),"type1","1").setDoc("field","value2").execute().actionGet();
    fail("update with missing routing when routing is required should fail");
  }
 catch (  ElasticsearchException e) {
    assertThat(e.unwrapCause(),instanceOf(RoutingMissingException.class));
  }
  client().prepareUpdate(indexOrAlias(),"type1","1").setRouting("0").setDoc("field","value2").execute().actionGet();
  client().admin().indices().prepareRefresh().execute().actionGet();
  for (int i=0; i < 5; i++) {
    try {
      client().prepareGet(indexOrAlias(),"type1","1").execute().actionGet().isExists();
      fail();
    }
 catch (    RoutingMissingException e) {
      assertThat(e.status(),equalTo(RestStatus.BAD_REQUEST));
      assertThat(e.getMessage(),equalTo("routing is required for [test]/[type1]/[1]"));
    }
    GetResponse getResponse=client().prepareGet(indexOrAlias(),"type1","1").setRouting("0").execute().actionGet();
    assertThat(getResponse.isExists(),equalTo(true));
    assertThat(getResponse.getSourceAsMap().get("field"),equalTo("value2"));
  }
  client().prepareDelete(indexOrAlias(),"type1","1").setRouting("0").setRefresh(true).execute().actionGet();
  for (int i=0; i < 5; i++) {
    try {
      client().prepareGet(indexOrAlias(),"type1","1").execute().actionGet().isExists();
      fail();
    }
 catch (    RoutingMissingException e) {
      assertThat(e.status(),equalTo(RestStatus.BAD_REQUEST));
      assertThat(e.getMessage(),equalTo("routing is required for [test]/[type1]/[1]"));
    }
    assertThat(client().prepareGet(indexOrAlias(),"type1","1").setRouting("0").execute().actionGet().isExists(),equalTo(false));
  }
}
