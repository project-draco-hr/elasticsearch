{
  HasAggregations parent=root;
  double value=Double.NaN;
  for (int i=0; i < pathElements.size(); i++) {
    AggregationPath.PathElement token=pathElements.get(i);
    Aggregation agg=parent.getAggregations().get(token.name);
    if (agg == null) {
      throw new ElasticsearchIllegalArgumentException("Invalid order path [" + this + "]. Cannot find aggregation named ["+ token.name+ "]");
    }
    if (agg instanceof SingleBucketAggregation) {
      if (token.key != null && !token.key.equals("doc_count")) {
        throw new ElasticsearchIllegalArgumentException("Invalid order path [" + this + "]. Unknown value key ["+ token.key+ "] for single-bucket aggregation ["+ token.name+ "]. Either use [doc_count] as key or drop the key all together");
      }
      parent=(SingleBucketAggregation)agg;
      value=((SingleBucketAggregation)agg).getDocCount();
      continue;
    }
    if (i != pathElements.size() - 1) {
      throw new ElasticsearchIllegalArgumentException("Invalid order path [" + this + "]. Metrics aggregations cannot have sub-aggregations (at ["+ token+ ">"+ pathElements.get(i + 1)+ "]");
    }
    if (agg instanceof InternalNumericMetricsAggregation.SingleValue) {
      if (token.key != null && !token.key.equals("value")) {
        throw new ElasticsearchIllegalArgumentException("Invalid order path [" + this + "]. Unknown value key ["+ token.key+ "] for single-value metric aggregation ["+ token.name+ "]. Either use [value] as key or drop the key all together");
      }
      parent=null;
      value=((InternalNumericMetricsAggregation.SingleValue)agg).value();
      continue;
    }
    if (token.key == null) {
      throw new ElasticsearchIllegalArgumentException("Invalid order path [" + this + "]. Missing value key in ["+ token+ "] which refers to a multi-value metric aggregation");
    }
    parent=null;
    value=((InternalNumericMetricsAggregation.MultiValue)agg).value(token.key);
  }
  return value;
}
