{
  if (SCORE_FIELD_NAME.equals(fieldName)) {
    if (reverse) {
      sortFields.add(SORT_SCORE_REVERSE);
    }
 else {
      sortFields.add(SORT_SCORE);
    }
  }
 else   if (DOC_FIELD_NAME.equals(fieldName)) {
    if (reverse) {
      sortFields.add(SORT_DOC_REVERSE);
    }
 else {
      sortFields.add(SORT_DOC);
    }
  }
 else {
    MappedFieldType fieldType=context.fieldMapper(fieldName);
    if (fieldType == null) {
      if (unmappedType != null) {
        fieldType=context.getMapperService().unmappedFieldType(unmappedType);
      }
 else {
        throw new QueryShardException(context,"No mapping found for [" + fieldName + "] in order to sort on");
      }
    }
    if (!fieldType.isSortable()) {
      throw new QueryShardException(context,"Sorting not supported for field[" + fieldName + "]");
    }
    if (fieldType.isNumeric() == false && (sortMode == MultiValueMode.SUM || sortMode == MultiValueMode.AVG)) {
      sortMode=null;
    }
    if (sortMode == null) {
      sortMode=resolveDefaultSortMode(reverse);
    }
    final Nested nested;
    if (nestedHelper != null && nestedHelper.getPath() != null) {
      BitSetProducer rootDocumentsFilter=context.bitsetFilter(Queries.newNonNestedFilter());
      Query innerDocumentsQuery;
      if (nestedHelper.filterFound()) {
        innerDocumentsQuery=nestedHelper.getInnerFilter();
      }
 else {
        innerDocumentsQuery=nestedHelper.getNestedObjectMapper().nestedTypeFilter();
      }
      nested=new Nested(rootDocumentsFilter,innerDocumentsQuery);
    }
 else {
      nested=null;
    }
    IndexFieldData.XFieldComparatorSource fieldComparatorSource=context.getForField(fieldType).comparatorSource(missing,sortMode,nested);
    sortFields.add(new SortField(fieldType.name(),fieldComparatorSource,reverse));
  }
}
