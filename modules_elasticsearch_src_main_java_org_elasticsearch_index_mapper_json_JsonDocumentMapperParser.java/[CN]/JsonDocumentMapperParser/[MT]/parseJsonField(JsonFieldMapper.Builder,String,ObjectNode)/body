{
  for (Iterator<Map.Entry<String,JsonNode>> propsIt=fieldNode.getFields(); propsIt.hasNext(); ) {
    Map.Entry<String,JsonNode> entry=propsIt.next();
    String propName=entry.getKey();
    JsonNode propNode=entry.getValue();
    if (propName.equals("indexName")) {
      builder.indexName(propNode.getTextValue());
    }
 else     if (propName.equals("store")) {
      builder.store(parseStore(name,propNode.getTextValue()));
    }
 else     if (propName.equals("index")) {
      builder.index(parseIndex(name,propNode.getTextValue()));
    }
 else     if (propName.equals("termVector")) {
      builder.termVector(parseTermVector(name,propNode.getTextValue()));
    }
 else     if (propName.equals("boost")) {
      builder.boost(nodeFloatValue(propNode));
    }
 else     if (propName.equals("omitNorms")) {
      builder.omitNorms(nodeBooleanValue(propNode));
    }
 else     if (propName.equals("omitTermFreqAndPositions")) {
      builder.omitTermFreqAndPositions(nodeBooleanValue(propNode));
    }
 else     if (propName.equals("indexAnalyzer")) {
      builder.indexAnalyzer(analysisService.analyzer(propNode.getTextValue()));
    }
 else     if (propName.equals("searchAnalyzer")) {
      builder.searchAnalyzer(analysisService.analyzer(propNode.getTextValue()));
    }
 else     if (propName.equals("analyzer")) {
      builder.indexAnalyzer(analysisService.analyzer(propNode.getTextValue()));
      builder.searchAnalyzer(analysisService.analyzer(propNode.getTextValue()));
    }
  }
}
