{
  TermVectorsFetchBuilder fetchSubPhaseBuilder=(TermVectorsFetchBuilder)context.getSearchExt(NAME);
  if (fetchSubPhaseBuilder == null) {
    return;
  }
  String field=fetchSubPhaseBuilder.getField();
  if (hitContext.hit().fieldsOrNull() == null) {
    hitContext.hit().fields(new HashMap<>());
  }
  SearchHitField hitField=hitContext.hit().fields().get(NAME);
  if (hitField == null) {
    hitField=new InternalSearchHitField(NAME,new ArrayList<>(1));
    hitContext.hit().fields().put(NAME,hitField);
  }
  TermVectorsRequest termVectorsRequest=new TermVectorsRequest(context.indexShard().shardId().getIndex().getName(),hitContext.hit().type(),hitContext.hit().id());
  TermVectorsResponse termVector=TermVectorsService.getTermVectors(context.indexShard(),termVectorsRequest);
  try {
    Map<String,Integer> tv=new HashMap<>();
    TermsEnum terms=termVector.getFields().terms(field).iterator();
    BytesRef term;
    while ((term=terms.next()) != null) {
      tv.put(term.utf8ToString(),terms.postings(null,PostingsEnum.ALL).freq());
    }
    hitField.values().add(tv);
  }
 catch (  IOException e) {
    ESLoggerFactory.getLogger(FetchSubPhasePluginIT.class.getName()).info("Swallowed exception",e);
  }
}
