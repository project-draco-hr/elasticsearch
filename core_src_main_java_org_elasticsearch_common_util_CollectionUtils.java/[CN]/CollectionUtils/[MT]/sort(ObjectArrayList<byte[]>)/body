{
  new IntroSorter(){
    byte[] pivot;
    @Override protected void swap(    int i,    int j){
      final byte[] tmp=array.get(i);
      array.set(i,array.get(j));
      array.set(j,tmp);
    }
    @Override protected int compare(    int i,    int j){
      return compare(array.get(i),array.get(j));
    }
    @Override protected void setPivot(    int i){
      pivot=array.get(i);
    }
    @Override protected int comparePivot(    int j){
      return compare(pivot,array.get(j));
    }
    private int compare(    byte[] left,    byte[] right){
      for (int i=0, j=0; i < left.length && j < right.length; i++, j++) {
        int a=left[i] & 0xFF;
        int b=right[j] & 0xFF;
        if (a != b) {
          return a - b;
        }
      }
      return left.length - right.length;
    }
  }
.sort(0,array.size());
}
