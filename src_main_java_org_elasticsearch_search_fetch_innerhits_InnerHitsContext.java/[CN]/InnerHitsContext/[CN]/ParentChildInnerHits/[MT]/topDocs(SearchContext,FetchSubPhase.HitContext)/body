{
  TopDocsCollector topDocsCollector;
  int topN=from() + size();
  if (sort() != null) {
    topDocsCollector=TopFieldCollector.create(sort(),topN,true,trackScores(),trackScores());
  }
 else {
    topDocsCollector=TopScoreDocCollector.create(topN);
  }
  String field;
  ParentFieldMapper hitParentFieldMapper=documentMapper.parentFieldMapper();
  if (hitParentFieldMapper.active()) {
    field=ParentFieldMapper.NAME;
  }
 else {
    field=UidFieldMapper.NAME;
  }
  String term=Uid.createUid(hitContext.hit().type(),hitContext.hit().id());
  Filter filter=new TermFilter(new Term(field,term));
  Filter typeFilter=documentMapper.typeFilter();
  context.searcher().search(new FilteredQuery(query,new AndFilter(Arrays.asList(filter,typeFilter))),topDocsCollector);
  return topDocsCollector.topDocs(from(),size());
}
