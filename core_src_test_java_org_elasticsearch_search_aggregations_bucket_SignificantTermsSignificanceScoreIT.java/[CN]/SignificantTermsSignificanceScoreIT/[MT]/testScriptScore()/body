{
  indexRandomFrequencies01(randomBoolean() ? "text" : "long");
  ScriptHeuristic scriptHeuristic=getScriptSignificanceHeuristic();
  SearchResponse response=client().prepareSearch(INDEX_NAME).addAggregation(terms("class").field(CLASS_FIELD).subAggregation(significantTerms("mySignificantTerms").field(TEXT_FIELD).executionHint(randomExecutionHint()).significanceHeuristic(scriptHeuristic).minDocCount(1).shardSize(2).size(2))).execute().actionGet();
  assertSearchResponse(response);
  for (  Terms.Bucket classBucket : ((Terms)response.getAggregations().get("class")).getBuckets()) {
    for (    SignificantTerms.Bucket bucket : ((SignificantTerms)classBucket.getAggregations().get("mySignificantTerms")).getBuckets()) {
      assertThat(bucket.getSignificanceScore(),is((double)bucket.getSubsetDf() + bucket.getSubsetSize() + bucket.getSupersetDf()+ bucket.getSupersetSize()));
    }
  }
}
