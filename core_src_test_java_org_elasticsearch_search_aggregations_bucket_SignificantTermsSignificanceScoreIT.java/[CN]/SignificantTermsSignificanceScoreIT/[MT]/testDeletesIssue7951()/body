{
  String settings="{\"index.number_of_shards\": 1, \"index.number_of_replicas\": 0}";
  String mappings="{\"doc\": {\"properties\":{\"text\": {\"type\":\"keyword\"}}}}";
  assertAcked(prepareCreate(INDEX_NAME).setSettings(settings).addMapping("doc",mappings));
  String[] cat1v1={"constant","one"};
  String[] cat1v2={"constant","uno"};
  String[] cat2v1={"constant","two"};
  String[] cat2v2={"constant","duo"};
  List<IndexRequestBuilder> indexRequestBuilderList=new ArrayList<>();
  indexRequestBuilderList.add(client().prepareIndex(INDEX_NAME,DOC_TYPE,"1").setSource(TEXT_FIELD,cat1v1,CLASS_FIELD,"1"));
  indexRequestBuilderList.add(client().prepareIndex(INDEX_NAME,DOC_TYPE,"2").setSource(TEXT_FIELD,cat1v2,CLASS_FIELD,"1"));
  indexRequestBuilderList.add(client().prepareIndex(INDEX_NAME,DOC_TYPE,"3").setSource(TEXT_FIELD,cat2v1,CLASS_FIELD,"2"));
  indexRequestBuilderList.add(client().prepareIndex(INDEX_NAME,DOC_TYPE,"4").setSource(TEXT_FIELD,cat2v2,CLASS_FIELD,"2"));
  indexRandom(true,false,indexRequestBuilderList);
  String[] text=cat1v1;
  indexRequestBuilderList.clear();
  for (int i=0; i < 50; i++) {
    text=text == cat1v2 ? cat1v1 : cat1v2;
    indexRequestBuilderList.add(client().prepareIndex(INDEX_NAME,DOC_TYPE,"1").setSource(TEXT_FIELD,text,CLASS_FIELD,"1"));
  }
  indexRandom(true,false,indexRequestBuilderList);
  SearchResponse response1=client().prepareSearch(INDEX_NAME).setTypes(DOC_TYPE).addAggregation(terms("class").field(CLASS_FIELD).subAggregation(significantTerms("sig_terms").field(TEXT_FIELD).minDocCount(1))).execute().actionGet();
}
