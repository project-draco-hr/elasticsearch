{
  AllocationService strategy=new AllocationService(settingsBuilder().put("cluster.routing.allocation.concurrent_recoveries",10).build());
  logger.info("Building initial routing table");
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test").numberOfShards(1).numberOfReplicas(0)).build();
  RoutingTable routingTable=RoutingTable.builder().addAsNew(metaData.index("test")).build();
  ClusterState clusterState=ClusterState.builder().metaData(metaData).routingTable(routingTable).build();
  assertThat(routingTable.index("test").shards().size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).shards().size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).shards().get(0).state(),equalTo(UNASSIGNED));
  assertThat(routingTable.index("test").shard(0).shards().get(0).currentNodeId(),nullValue());
  logger.info("Adding one node and rerouting");
  clusterState=ClusterState.builder(clusterState).nodes(newNodesBuilder().put(newNode("node1"))).build();
  RoutingTable prevRoutingTable=routingTable;
  routingTable=strategy.reroute(clusterState).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertThat(prevRoutingTable != routingTable,equalTo(true));
  assertThat(routingTable.index("test").shards().size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).shards().size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).shards().get(0).unassigned(),equalTo(false));
  assertThat(routingTable.index("test").shard(0).shards().get(0).state(),equalTo(INITIALIZING));
  assertThat(routingTable.index("test").shard(0).shards().get(0).currentNodeId(),equalTo("node1"));
  logger.info("Marking the shard as failed");
  RoutingNodes routingNodes=clusterState.routingNodes();
  prevRoutingTable=routingTable;
  routingTable=strategy.applyFailedShard(clusterState,routingNodes.node("node1").shardsWithState(INITIALIZING).get(0)).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertThat(prevRoutingTable != routingTable,equalTo(true));
  assertThat(routingTable.index("test").shards().size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).shards().size(),equalTo(1));
  assertThat(routingTable.index("test").shard(0).shards().get(0).state(),equalTo(UNASSIGNED));
  assertThat(routingTable.index("test").shard(0).shards().get(0).currentNodeId(),nullValue());
}
