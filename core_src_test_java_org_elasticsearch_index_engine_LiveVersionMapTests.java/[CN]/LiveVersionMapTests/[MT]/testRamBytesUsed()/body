{
  LiveVersionMap map=new LiveVersionMap();
  for (int i=0; i < 100000; ++i) {
    BytesRefBuilder uid=new BytesRefBuilder();
    uid.copyChars(TestUtil.randomSimpleString(random(),10,20));
    VersionValue version=new VersionValue(randomLong());
    map.putUnderLock(uid.toBytesRef(),version);
  }
  long actualRamBytesUsed=RamUsageTester.sizeOf(map);
  long estimatedRamBytesUsed=map.ramBytesUsed();
  assertEquals(actualRamBytesUsed,estimatedRamBytesUsed,actualRamBytesUsed / 4);
  map.beforeRefresh();
  map.afterRefresh(true);
  for (int i=0; i < 100000; ++i) {
    BytesRefBuilder uid=new BytesRefBuilder();
    uid.copyChars(TestUtil.randomSimpleString(random(),10,20));
    VersionValue version=new VersionValue(randomLong());
    map.putUnderLock(uid.toBytesRef(),version);
  }
  actualRamBytesUsed=RamUsageTester.sizeOf(map);
  estimatedRamBytesUsed=map.ramBytesUsed();
  assertEquals(actualRamBytesUsed,estimatedRamBytesUsed,actualRamBytesUsed / 4);
}
