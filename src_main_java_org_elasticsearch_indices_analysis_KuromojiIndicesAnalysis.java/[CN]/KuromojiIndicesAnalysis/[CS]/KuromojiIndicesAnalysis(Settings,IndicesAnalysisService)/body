{
  super(settings);
  indicesAnalysisService.tokenizerFactories().put("kuromoji_tokenizer",new PreBuiltTokenizerFactoryFactory(new TokenizerFactory(){
    @Override public String name(){
      return "kuromoji_tokenizer";
    }
    @Override public Tokenizer create(    Reader reader){
      return new JapaneseTokenizer(reader,null,true,Mode.SEARCH);
    }
  }
));
  indicesAnalysisService.tokenFilterFactories().put("kuromoji_baseform",new PreBuiltTokenFilterFactoryFactory(new TokenFilterFactory(){
    @Override public String name(){
      return "kuromoji_baseform";
    }
    @Override public TokenStream create(    TokenStream tokenStream){
      return new JapaneseBaseFormFilter(tokenStream);
    }
  }
));
  indicesAnalysisService.tokenFilterFactories().put("kuromoji_part_of_speech",new PreBuiltTokenFilterFactoryFactory(new TokenFilterFactory(){
    @Override public String name(){
      return "kuromoji_part_of_speech";
    }
    @Override public TokenStream create(    TokenStream tokenStream){
      return new JapanesePartOfSpeechStopFilter(false,tokenStream,JapaneseAnalyzer.getDefaultStopTags());
    }
  }
));
  indicesAnalysisService.tokenFilterFactories().put("kuromoji_readingform",new PreBuiltTokenFilterFactoryFactory(new TokenFilterFactory(){
    @Override public String name(){
      return "kuromoji_readingform";
    }
    @Override public TokenStream create(    TokenStream tokenStream){
      return new JapaneseReadingFormFilter(tokenStream,true);
    }
  }
));
  indicesAnalysisService.tokenFilterFactories().put("kuromoji_stemmer",new PreBuiltTokenFilterFactoryFactory(new TokenFilterFactory(){
    @Override public String name(){
      return "kuromoji_stemmer";
    }
    @Override public TokenStream create(    TokenStream tokenStream){
      return new JapaneseKatakanaStemFilter(tokenStream);
    }
  }
));
}
