{
  UpdateRequest request=new UpdateRequest("test","type1","1");
  request.fromXContent(XContentFactory.jsonBuilder().startObject().field("_source",true).endObject());
  assertThat(request.fetchSource(),notNullValue());
  assertThat(request.fetchSource().includes().length,equalTo(0));
  assertThat(request.fetchSource().excludes().length,equalTo(0));
  assertThat(request.fetchSource().fetchSource(),equalTo(true));
  request.fromXContent(XContentFactory.jsonBuilder().startObject().field("_source",false).endObject());
  assertThat(request.fetchSource(),notNullValue());
  assertThat(request.fetchSource().includes().length,equalTo(0));
  assertThat(request.fetchSource().excludes().length,equalTo(0));
  assertThat(request.fetchSource().fetchSource(),equalTo(false));
  request.fromXContent(XContentFactory.jsonBuilder().startObject().field("_source","path.inner.*").endObject());
  assertThat(request.fetchSource(),notNullValue());
  assertThat(request.fetchSource().fetchSource(),equalTo(true));
  assertThat(request.fetchSource().includes().length,equalTo(1));
  assertThat(request.fetchSource().excludes().length,equalTo(0));
  assertThat(request.fetchSource().includes()[0],equalTo("path.inner.*"));
  request.fromXContent(XContentFactory.jsonBuilder().startObject().startObject("_source").field("includes","path.inner.*").field("excludes","another.inner.*").endObject().endObject());
  assertThat(request.fetchSource(),notNullValue());
  assertThat(request.fetchSource().fetchSource(),equalTo(true));
  assertThat(request.fetchSource().includes().length,equalTo(1));
  assertThat(request.fetchSource().excludes().length,equalTo(1));
  assertThat(request.fetchSource().includes()[0],equalTo("path.inner.*"));
  assertThat(request.fetchSource().excludes()[0],equalTo("another.inner.*"));
}
