{
  Path configDir=createTempDir();
  Path geoIpConfigDir=configDir.resolve("ingest-geoip");
  Files.createDirectories(geoIpConfigDir);
  Files.copy(new ByteArrayInputStream(StreamsUtils.copyToBytesFromClasspath("/GeoLite2-City.mmdb")),geoIpConfigDir.resolve("GeoLite2-City.mmdb"));
  Map<String,DatabaseReader> databaseReaders=IngestGeoIpPlugin.loadDatabaseReaders(geoIpConfigDir);
  Map<String,Object> config=new HashMap<>();
  config.put("field","log");
  config.put("pattern","%{COMBINEDAPACHELOG}");
  Processor processor1=new GrokProcessor.Factory(IngestGrokPlugin.loadBuiltinPatterns()).doCreate(null,config);
  config=new HashMap<>();
  config.put("field","response");
  config.put("type","integer");
  Processor processor2=new ConvertProcessor.Factory().create(config);
  config=new HashMap<>();
  config.put("field","bytes");
  config.put("type","integer");
  Processor processor3=new ConvertProcessor.Factory().create(config);
  config=new HashMap<>();
  config.put("match_field","timestamp");
  config.put("target_field","timestamp");
  config.put("match_formats",Arrays.asList("dd/MMM/YYYY:HH:mm:ss Z"));
  Processor processor4=new DateProcessor.Factory().create(config);
  config=new HashMap<>();
  config.put("source_field","clientip");
  Processor processor5=new GeoIpProcessor.Factory(databaseReaders).create(config);
  Pipeline pipeline=new Pipeline("_id","_description",new CompoundProcessor(processor1,processor2,processor3,processor4,processor5));
  Map<String,Object> source=new HashMap<>();
  source.put("log",LOG);
  IngestDocument document=new IngestDocument("_index","_type","_id",null,null,null,null,source);
  pipeline.execute(document);
  assertThat(document.getSourceAndMetadata().size(),equalTo(17));
  assertThat(document.getSourceAndMetadata().get("request"),equalTo("/presentations/logstash-scale11x/images/ahhh___rage_face_by_samusmmx-d5g5zap.png"));
  assertThat(document.getSourceAndMetadata().get("agent"),equalTo("\"Mozilla/5.0 (Linux; Android 4.2.2; VS980 4G Build/JDQ39B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.135 Mobile Safari/537.36\""));
  assertThat(document.getSourceAndMetadata().get("auth"),equalTo("-"));
  assertThat(document.getSourceAndMetadata().get("ident"),equalTo("-"));
  assertThat(document.getSourceAndMetadata().get("verb"),equalTo("GET"));
  assertThat(document.getSourceAndMetadata().get("referrer"),equalTo("\"http://mobile.rivals.com/board_posts.asp?SID=880&mid=198829575&fid=2208&tid=198829575&Team=&TeamId=&SiteId=\""));
  assertThat(document.getSourceAndMetadata().get("response"),equalTo(200));
  assertThat(document.getSourceAndMetadata().get("bytes"),equalTo(175208));
  assertThat(document.getSourceAndMetadata().get("clientip"),equalTo("70.193.17.92"));
  assertThat(document.getSourceAndMetadata().get("httpversion"),equalTo("1.1"));
  assertThat(document.getSourceAndMetadata().get("rawrequest"),nullValue());
  assertThat(document.getSourceAndMetadata().get("timestamp"),equalTo("2014-09-08T02:54:42.000Z"));
  Map<String,Object> geoInfo=(Map<String,Object>)document.getSourceAndMetadata().get("geoip");
  assertThat(geoInfo.size(),equalTo(5));
  assertThat(geoInfo.get("continent_name"),equalTo("North America"));
  assertThat(geoInfo.get("city_name"),equalTo("Charlotte"));
  assertThat(geoInfo.get("country_iso_code"),equalTo("US"));
  assertThat(geoInfo.get("region_name"),equalTo("North Carolina"));
  assertThat(geoInfo.get("location"),notNullValue());
}
