{
  if (indexShard.state() == IndexShardState.CLOSED) {
    return;
  }
  if (disableFlush) {
    reschedule();
    return;
  }
  Translog translog=indexShard.engine().getTranslog();
  if (translog == null) {
    reschedule();
    return;
  }
  int currentNumberOfOperations=translog.totalOperations();
  if (currentNumberOfOperations == 0) {
    reschedule();
    return;
  }
  if (flushThresholdOperations > 0) {
    if (currentNumberOfOperations > flushThresholdOperations) {
      logger.trace("flushing translog, operations [{}], breached [{}]",currentNumberOfOperations,flushThresholdOperations);
      asyncFlushAndReschedule();
      return;
    }
  }
  if (flushThresholdSize.bytes() > 0) {
    long sizeInBytes=translog.sizeInBytes();
    if (sizeInBytes > flushThresholdSize.bytes()) {
      logger.trace("flushing translog, size [{}], breached [{}]",new ByteSizeValue(sizeInBytes),flushThresholdSize);
      asyncFlushAndReschedule();
      return;
    }
  }
  if (flushThresholdPeriod.millis() > 0) {
    if ((threadPool.estimatedTimeInMillis() - lastFlushTime) > flushThresholdPeriod.millis()) {
      logger.trace("flushing translog, last_flush_time [{}], breached [{}]",lastFlushTime,flushThresholdPeriod);
      asyncFlushAndReschedule();
      return;
    }
  }
  reschedule();
}
