{
  Settings settings=settingsBuilder().put(super.indexSettings()).put("gateway.type","local").build();
  cluster().startNode(settings);
  client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards",1).put()).execute().actionGet();
  logger.info("--> register a query");
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"kuku").setSource(jsonBuilder().startObject().field("color","blue").field("query",termQuery("field1","value1")).endObject()).setRefresh(true).execute().actionGet();
  PercolateResponse percolate=client().preparePercolate().setIndices("test").setDocumentType("type1").setSource(jsonBuilder().startObject().startObject("doc").field("field1","value1").endObject().endObject()).execute().actionGet();
  assertThat(percolate.getMatches(),arrayWithSize(1));
  cluster().rollingRestart();
  logger.info("Running Cluster Health (wait for the shards to startup)");
  ClusterHealthResponse clusterHealth=client().admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForActiveShards(1)).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.YELLOW));
  percolate=client().preparePercolate().setIndices("test").setDocumentType("type1").setSource(jsonBuilder().startObject().startObject("doc").field("field1","value1").endObject().endObject()).execute().actionGet();
  assertThat(percolate.getMatches(),arrayWithSize(1));
}
