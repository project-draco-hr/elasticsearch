{
  Settings settings=settingsBuilder().put(super.indexSettings()).put("gateway.type","local").build();
  logger.info("--> Starting 2 nodes");
  cluster().startNode(settings);
  cluster().startNode(settings);
  client().admin().indices().prepareDelete().execute().actionGet();
  ensureGreen();
  client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards",2)).execute().actionGet();
  ensureGreen();
  logger.info("--> Add dummy docs");
  client().prepareIndex("test","type1","1").setSource("field1",0).execute().actionGet();
  client().prepareIndex("test","type2","1").setSource("field1","0").execute().actionGet();
  logger.info("--> register a queries");
  for (int i=1; i <= 100; i++) {
    client().prepareIndex("test",PercolatorService.TYPE_NAME,Integer.toString(i)).setSource(jsonBuilder().startObject().field("query",rangeQuery("field1").from(0).to(i)).field("type","type1").endObject()).execute().actionGet();
  }
  logger.info("--> Percolate doc with field1=95");
  PercolateResponse response=client().preparePercolate().setIndices("test").setDocumentType("type1").setSource(jsonBuilder().startObject().startObject("doc").field("field1",95).endObject().endObject()).execute().actionGet();
  assertMatchCount(response,6l);
  assertThat(response.getMatches(),arrayWithSize(6));
  assertThat(convertFromTextArray(response.getMatches(),"test"),arrayContainingInAnyOrder("95","96","97","98","99","100"));
  logger.info("--> Close and open index to trigger percolate queries loading...");
  assertAcked(client().admin().indices().prepareClose("test"));
  assertAcked(client().admin().indices().prepareOpen("test"));
  ensureGreen();
  logger.info("--> Percolate doc with field1=100");
  response=client().preparePercolate().setIndices("test").setDocumentType("type1").setSource(jsonBuilder().startObject().startObject("doc").field("field1",100).endObject().endObject()).execute().actionGet();
  assertMatchCount(response,1l);
  assertThat(response.getMatches(),arrayWithSize(1));
  assertThat(response.getMatches()[0].getId().string(),equalTo("100"));
}
