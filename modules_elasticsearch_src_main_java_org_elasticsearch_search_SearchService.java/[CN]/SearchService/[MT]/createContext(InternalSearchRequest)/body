{
  IndexService indexService=indicesService.indexServiceSafe(request.index());
  IndexShard indexShard=indexService.shardSafe(request.shardId());
  Engine.Searcher engineSearcher=indexShard.searcher();
  SearchShardTarget shardTarget=new SearchShardTarget(clusterService.state().nodes().localNodeId(),request.index(),request.shardId());
  SearchContext context=new SearchContext(idGenerator.incrementAndGet(),shardTarget,request.timeout(),request.types(),engineSearcher,indexService,scriptService);
  context.scroll(request.scroll());
  parseSource(context,request.source(),request.sourceOffset(),request.sourceLength());
  parseSource(context,request.extraSource(),request.extraSourceOffset(),request.extraSourceLength());
  if (context.from() == -1) {
    context.from(0);
  }
  if (context.size() == -1) {
    context.size(10);
  }
  dfsPhase.preProcess(context);
  queryPhase.preProcess(context);
  fetchPhase.preProcess(context);
  TimeValue keepAlive=defaultKeepAlive;
  if (request.scroll() != null && request.scroll().keepAlive() != null) {
    keepAlive=request.scroll().keepAlive();
  }
  context.keepAlive(keepAlive);
  context.accessed(timerService.estimatedTimeInMillis());
  context.keepAliveTimeout(timerService.newTimeout(new KeepAliveTimerTask(context),keepAlive));
  return context;
}
