{
  buildNode("node1",settingsBuilder().put("gateway.type","local").build());
  buildNode("node2",settingsBuilder().put("gateway.type","local").build());
  cleanAndCloseNodes();
  Node node1=startNode("node1",settingsBuilder().put("gateway.type","local").put("index.number_of_shards",1).build());
  Node node2=startNode("node2",settingsBuilder().put("gateway.type","local").put("index.number_of_shards",1).build());
  node1.client().prepareIndex("test","type1","1").setSource(jsonBuilder().startObject().field("field","value1").endObject()).execute().actionGet();
  node1.client().admin().indices().prepareFlush().execute().actionGet();
  node1.client().prepareIndex("test","type1","2").setSource(jsonBuilder().startObject().field("field","value2").endObject()).execute().actionGet();
  node1.client().admin().indices().prepareRefresh().execute().actionGet();
  assertThat(node1.client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().count(),equalTo(2l));
  logger.info("--> closing nodes");
  closeNode("node1");
  closeNode("node2");
  logger.info("--> cleaning node1 gateway");
  buildNode("node1",settingsBuilder().put("gateway.type","local").build());
  cleanAndCloseNodes();
  node1=startNode("node1",settingsBuilder().put("gateway.type","local").put("gateway.recover_after_nodes",2).build());
  node2=startNode("node2",settingsBuilder().put("gateway.type","local").put("gateway.recover_after_nodes",2).build());
  logger.info("Running Cluster Health (wait for the shards to startup)");
  ClusterHealthResponse clusterHealth=client("node1").admin().cluster().health(clusterHealthRequest().waitForGreenStatus().waitForActiveShards(2)).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.status());
  assertThat(clusterHealth.timedOut(),equalTo(false));
  assertThat(clusterHealth.status(),equalTo(ClusterHealthStatus.GREEN));
  assertThat(node1.client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().count(),equalTo(2l));
}
