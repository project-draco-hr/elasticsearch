{
  if (fieldNames == null) {
    throw new IllegalArgumentException("Cannot add statistics without field names.");
  }
 else   if (fieldVals == null) {
    throw new IllegalArgumentException("Cannot add statistics without field values.");
  }
 else   if (fieldNames.length != fieldVals.length) {
    throw new IllegalArgumentException("Number of field values do not match number of field names.");
  }
  ++docCount;
  String fieldName;
  double fieldValue;
  double m1, m2, m3, m4;
  double d, dn, dn2, t1;
  final HashMap<String,Double> deltas=new HashMap<>();
  for (int i=0; i < fieldNames.length; ++i) {
    fieldName=fieldNames[i];
    fieldValue=fieldVals[i];
    counts.put(fieldName,1 + (counts.containsKey(fieldName) ? counts.get(fieldName) : 0));
    fieldSum.put(fieldName,fieldValue + (fieldSum.containsKey(fieldName) ? fieldSum.get(fieldName) : 0));
    deltas.put(fieldName,fieldValue * docCount - fieldSum.get(fieldName));
    if (means.containsKey(fieldName) == true) {
      m1=means.get(fieldName);
      d=fieldValue - m1;
      means.put(fieldName,m1 + d / docCount);
      dn=d / docCount;
      t1=d * dn * (docCount - 1);
      m2=variances.get(fieldName);
      variances.put(fieldName,m2 + t1);
      m3=skewness.get(fieldName);
      skewness.put(fieldName,m3 + (t1 * dn * (docCount - 2D) - 3D * dn * m2));
      dn2=dn * dn;
      m4=t1 * dn2 * (docCount * docCount - 3D * docCount + 3D) + 6D * dn2 * m2 - 4D * dn * m3;
      kurtosis.put(fieldName,kurtosis.get(fieldName) + m4);
    }
 else {
      means.put(fieldName,fieldValue);
      variances.put(fieldName,0.0);
      skewness.put(fieldName,0.0);
      kurtosis.put(fieldName,0.0);
    }
  }
  this.updateCovariance(fieldNames,deltas);
}
