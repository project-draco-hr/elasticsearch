{
  final int numShards=between(2,5);
  final int numReplicas=0;
  logger.info("--> creating test index ...");
  int allowNodes=2;
  assertAcked(prepareCreate("test",3,settingsBuilder().put(SETTING_NUMBER_OF_SHARDS,numShards).put(SETTING_NUMBER_OF_REPLICAS,numReplicas).put(IndexSettings.INDEX_TRANSLOG_DURABILITY_SETTING.getKey(),Translog.Durability.ASYNC)));
  final int numDocs=scaledRandomIntBetween(200,9999);
  try (BackgroundIndexer indexer=new BackgroundIndexer("test","type",client(),numDocs)){
    for (int i=0; i < numDocs; i+=scaledRandomIntBetween(100,Math.min(1000,numDocs))) {
      indexer.assertNoFailures();
      logger.info("--> waiting for {} docs to be indexed ...",i);
      waitForDocs(i,indexer);
      logger.info("--> {} docs indexed",i);
      allowNodes=2 / allowNodes;
      allowNodes("test",allowNodes);
      logger.info("--> waiting for GREEN health status ...");
      ensureGreen(TimeValue.timeValueMinutes(5));
    }
    logger.info("--> marking and waiting for indexing threads to stop ...");
    indexer.stop();
    logger.info("--> indexing threads stopped");
    logger.info("--> bump up number of replicas to 1 and allow all nodes to hold the index");
    allowNodes("test",3);
    assertAcked(client().admin().indices().prepareUpdateSettings("test").setSettings(settingsBuilder().put("number_of_replicas",1)).get());
    ensureGreen(TimeValue.timeValueMinutes(5));
    logger.info("--> refreshing the index");
    refreshAndAssert();
    logger.info("--> verifying indexed content");
    iterateAssertCount(numShards,indexer.totalIndexedDocs(),10);
  }
 }
