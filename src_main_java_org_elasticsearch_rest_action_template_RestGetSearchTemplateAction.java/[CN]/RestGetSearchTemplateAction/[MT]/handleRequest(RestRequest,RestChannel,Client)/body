{
  final GetIndexedScriptRequest getRequest=new GetIndexedScriptRequest(ScriptService.SCRIPT_INDEX,"mustache",request.param("id"));
  RestResponseListener<GetIndexedScriptResponse> responseListener=new RestResponseListener<GetIndexedScriptResponse>(channel){
    @Override public RestResponse buildResponse(    GetIndexedScriptResponse response) throws Exception {
      XContentBuilder builder=XContentFactory.contentBuilder(XContentType.JSON);
      if (!response.isExists()) {
        return new BytesRestResponse(NOT_FOUND,builder);
      }
 else {
        try {
          String templateString=response.getScript();
          builder.startObject();
          builder.field("template",templateString);
          builder.endObject();
          return new BytesRestResponse(OK,builder);
        }
 catch (        IOException|ClassCastException e) {
          throw new ElasticsearchIllegalStateException("Unable to parse " + response.getScript() + " as json",e);
        }
      }
    }
  }
;
  client.getIndexedScript(getRequest,responseListener);
}
