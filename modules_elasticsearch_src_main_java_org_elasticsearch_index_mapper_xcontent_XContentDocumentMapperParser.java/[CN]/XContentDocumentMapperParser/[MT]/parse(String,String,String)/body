{
  Map<String,Object> mapping=null;
  if (source != null) {
    Tuple<String,Map<String,Object>> t=extractMapping(type,source);
    type=t.v1();
    mapping=t.v2();
  }
  if (mapping == null) {
    mapping=Maps.newHashMap();
  }
  if (type == null) {
    throw new MapperParsingException("Failed to derive type");
  }
  if (defaultSource != null) {
    Tuple<String,Map<String,Object>> t=extractMapping(MapperService.DEFAULT_MAPPING,defaultSource);
    if (t.v2() != null) {
      XContentHelper.mergeDefaults(mapping,t.v2());
    }
  }
  XContentMapper.TypeParser.ParserContext parserContext=new XContentMapper.TypeParser.ParserContext(analysisService,typeParsers);
  XContentDocumentMapper.Builder docBuilder=doc(index.name(),(RootObjectMapper.Builder)rootObjectTypeParser.parse(type,mapping,parserContext));
  for (  Map.Entry<String,Object> entry : mapping.entrySet()) {
    String fieldName=Strings.toUnderscoreCase(entry.getKey());
    Object fieldNode=entry.getValue();
    if (SourceFieldMapper.CONTENT_TYPE.equals(fieldName) || "sourceField".equals(fieldName)) {
      docBuilder.sourceField(parseSourceField((Map<String,Object>)fieldNode,parserContext));
    }
 else     if (IdFieldMapper.CONTENT_TYPE.equals(fieldName) || "idField".equals(fieldName)) {
      docBuilder.idField(parseIdField((Map<String,Object>)fieldNode,parserContext));
    }
 else     if (IndexFieldMapper.CONTENT_TYPE.equals(fieldName) || "indexField".equals(fieldName)) {
      docBuilder.indexField(parseIndexField((Map<String,Object>)fieldNode,parserContext));
    }
 else     if (TypeFieldMapper.CONTENT_TYPE.equals(fieldName) || "typeField".equals(fieldName)) {
      docBuilder.typeField(parseTypeField((Map<String,Object>)fieldNode,parserContext));
    }
 else     if (UidFieldMapper.CONTENT_TYPE.equals(fieldName) || "uidField".equals(fieldName)) {
      docBuilder.uidField(parseUidField((Map<String,Object>)fieldNode,parserContext));
    }
 else     if (RoutingFieldMapper.CONTENT_TYPE.equals(fieldName)) {
      docBuilder.routingField(parseRoutingField((Map<String,Object>)fieldNode,parserContext));
    }
 else     if (BoostFieldMapper.CONTENT_TYPE.equals(fieldName) || "boostField".equals(fieldName)) {
      docBuilder.boostField(parseBoostField((Map<String,Object>)fieldNode,parserContext));
    }
 else     if (AllFieldMapper.CONTENT_TYPE.equals(fieldName) || "allField".equals(fieldName)) {
      docBuilder.allField(parseAllField((Map<String,Object>)fieldNode,parserContext));
    }
 else     if (AnalyzerMapper.CONTENT_TYPE.equals(fieldName)) {
      docBuilder.analyzerField(parseAnalyzerField((Map<String,Object>)fieldNode,parserContext));
    }
 else     if ("index_analyzer".equals(fieldName)) {
      docBuilder.indexAnalyzer(analysisService.analyzer(fieldNode.toString()));
    }
 else     if ("search_analyzer".equals(fieldName)) {
      docBuilder.searchAnalyzer(analysisService.analyzer(fieldNode.toString()));
    }
 else     if ("analyzer".equals(fieldName)) {
      docBuilder.indexAnalyzer(analysisService.analyzer(fieldNode.toString()));
      docBuilder.searchAnalyzer(analysisService.analyzer(fieldNode.toString()));
    }
  }
  if (!docBuilder.hasIndexAnalyzer()) {
    docBuilder.indexAnalyzer(analysisService.defaultIndexAnalyzer());
  }
  if (!docBuilder.hasSearchAnalyzer()) {
    docBuilder.searchAnalyzer(analysisService.defaultSearchAnalyzer());
  }
  ImmutableMap<String,Object> attributes=ImmutableMap.of();
  if (mapping.containsKey("_meta")) {
    attributes=ImmutableMap.copyOf((Map<String,Object>)mapping.get("_meta"));
  }
  docBuilder.meta(attributes);
  XContentDocumentMapper documentMapper=docBuilder.build(this);
  documentMapper.refreshSource();
  return documentMapper;
}
