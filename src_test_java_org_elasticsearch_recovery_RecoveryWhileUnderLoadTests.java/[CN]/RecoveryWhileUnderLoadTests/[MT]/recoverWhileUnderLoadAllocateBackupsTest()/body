{
  logger.info("--> creating test index ...");
  int numberOfShards=numberOfShards();
  assertAcked(prepareCreate("test",1,settingsBuilder().put(SETTING_NUMBER_OF_SHARDS,numberOfShards).put(SETTING_NUMBER_OF_REPLICAS,1)));
  final AtomicLong idGenerator=new AtomicLong();
  final AtomicLong indexCounter=new AtomicLong();
  final AtomicBoolean stop=new AtomicBoolean(false);
  Thread[] writers=new Thread[5];
  final CountDownLatch stopLatch=new CountDownLatch(writers.length);
  logger.info("--> starting {} indexing threads",writers.length);
  for (int i=0; i < writers.length; i++) {
    final int indexerId=i;
    final Client client=client();
    writers[i]=new Thread(){
      @Override public void run(){
        try {
          logger.info("**** starting indexing thread {}",indexerId);
          while (!stop.get()) {
            long id=idGenerator.incrementAndGet();
            if (id % 1000 == 0) {
              client.admin().indices().prepareFlush().execute().actionGet();
            }
            client.prepareIndex("test","type1",Long.toString(id)).setSource(MapBuilder.<String,Object>newMapBuilder().put("test","value" + id).map()).execute().actionGet();
            indexCounter.incrementAndGet();
          }
          logger.info("**** done indexing thread {}",indexerId);
        }
 catch (        Throwable e) {
          logger.warn("**** failed indexing thread {}",e,indexerId);
        }
 finally {
          stopLatch.countDown();
        }
      }
    }
;
    writers[i].start();
  }
  try {
    logger.info("--> waiting for 2000 docs to be indexed ...");
    waitForDocs(2000);
    logger.info("--> 2000 docs indexed");
    logger.info("--> flushing the index ....");
    client().admin().indices().prepareFlush().execute().actionGet();
    logger.info("--> waiting for 4000 docs to be indexed ...");
    waitForDocs(4000);
    logger.info("--> 4000 docs indexed");
    logger.info("--> allow 2 nodes for index [test] ...");
    allowNodes("test",2);
    logger.info("--> waiting for GREEN health status ...");
    assertThat(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout("1m").setWaitForGreenStatus().setWaitForNodes(">=2").execute().actionGet().isTimedOut(),equalTo(false));
    logger.info("--> waiting for 10000 docs to be indexed ...");
    waitForDocs(15000);
    logger.info("--> 10000 docs indexed");
    logger.info("--> marking and waiting for indexing threads to stop ...");
    stop.set(true);
    stopLatch.await();
    logger.info("--> indexing threads stopped");
    logger.info("--> refreshing the index");
    refreshAndAssert();
    logger.info("--> verifying indexed content");
    iterateAssertCount(numberOfShards,indexCounter.get(),10);
  }
  finally {
    stop.set(true);
    stopLatch.await();
  }
}
