{
  ClusterState clusterState=createInitialClusterState();
  RoutingTable routingTable=clusterState.routingTable();
  final int retries=MaxRetryAllocationDecider.SETTING_ALLOCATION_MAX_RETRY.get(Settings.EMPTY);
  for (int i=0; i < retries - 1; i++) {
    List<FailedRerouteAllocation.FailedShard> failedShards=Collections.singletonList(new FailedRerouteAllocation.FailedShard(routingTable.index("idx").shard(0).shards().get(0),"boom" + i,new UnsupportedOperationException()));
    RoutingAllocation.Result result=strategy.applyFailedShards(clusterState,failedShards);
    assertTrue(result.changed());
    routingTable=result.routingTable();
    clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
    assertEquals(routingTable.index("idx").shards().size(),1);
    assertEquals(routingTable.index("idx").shard(0).shards().get(0).state(),INITIALIZING);
    assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getNumFailedAllocations(),i + 1);
    assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getMessage(),"boom" + i);
  }
{
    List<FailedRerouteAllocation.FailedShard> failedShards=Collections.singletonList(new FailedRerouteAllocation.FailedShard(routingTable.index("idx").shard(0).shards().get(0),"boom",new UnsupportedOperationException()));
    RoutingAllocation.Result result=strategy.applyFailedShards(clusterState,failedShards);
    assertTrue(result.changed());
    routingTable=result.routingTable();
    clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
    assertEquals(routingTable.index("idx").shards().size(),1);
    assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getNumFailedAllocations(),retries);
    assertEquals(routingTable.index("idx").shard(0).shards().get(0).state(),UNASSIGNED);
    assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getMessage(),"boom");
  }
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).metaData(MetaData.builder(clusterState.metaData()).put(IndexMetaData.builder(clusterState.metaData().index("idx")).settings(Settings.builder().put(clusterState.metaData().index("idx").getSettings()).put("index.allocation.max_retries",retries + 1).build()).build(),true).build()).build();
  RoutingAllocation.Result result=strategy.reroute(clusterState,"settings changed",false);
  assertTrue(result.changed());
  routingTable=result.routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertEquals(routingTable.index("idx").shards().size(),1);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getNumFailedAllocations(),retries);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).state(),INITIALIZING);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getMessage(),"boom");
  routingTable=strategy.applyStartedShards(clusterState,Collections.singletonList(routingTable.index("idx").shard(0).shards().get(0))).routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertEquals(routingTable.index("idx").shards().size(),1);
  assertNull(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo());
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).state(),STARTED);
  List<FailedRerouteAllocation.FailedShard> failedShards=Collections.singletonList(new FailedRerouteAllocation.FailedShard(routingTable.index("idx").shard(0).shards().get(0),"ZOOOMG",new UnsupportedOperationException()));
  result=strategy.applyFailedShards(clusterState,failedShards);
  assertTrue(result.changed());
  routingTable=result.routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertEquals(routingTable.index("idx").shards().size(),1);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getNumFailedAllocations(),1);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).state(),INITIALIZING);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getMessage(),"ZOOOMG");
}
