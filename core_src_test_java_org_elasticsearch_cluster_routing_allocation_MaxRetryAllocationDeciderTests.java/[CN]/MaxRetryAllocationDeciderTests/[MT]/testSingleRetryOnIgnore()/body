{
  ClusterState clusterState=createInitialClusterState();
  RoutingTable routingTable=clusterState.routingTable();
  final int retries=MaxRetryAllocationDecider.SETTING_ALLOCATION_MAX_RETRY.get(Settings.EMPTY);
  for (int i=0; i < retries - 1; i++) {
    List<FailedShard> failedShards=Collections.singletonList(new FailedShard(routingTable.index("idx").shard(0).shards().get(0),"boom" + i,new UnsupportedOperationException()));
    ClusterState newState=strategy.applyFailedShards(clusterState,failedShards);
    assertThat(newState,not(equalTo(clusterState)));
    clusterState=newState;
    routingTable=newState.routingTable();
    assertEquals(routingTable.index("idx").shards().size(),1);
    assertEquals(routingTable.index("idx").shard(0).shards().get(0).state(),INITIALIZING);
    assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getNumFailedAllocations(),i + 1);
    assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getMessage(),"boom" + i);
  }
  List<FailedShard> failedShards=Collections.singletonList(new FailedShard(routingTable.index("idx").shard(0).shards().get(0),"boom",new UnsupportedOperationException()));
  ClusterState newState=strategy.applyFailedShards(clusterState,failedShards);
  assertThat(newState,not(equalTo(clusterState)));
  clusterState=newState;
  routingTable=newState.routingTable();
  assertEquals(routingTable.index("idx").shards().size(),1);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getNumFailedAllocations(),retries);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).state(),UNASSIGNED);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getMessage(),"boom");
  newState=strategy.reroute(clusterState,new AllocationCommands(),false,true).getClusterState();
  assertThat(newState,not(equalTo(clusterState)));
  clusterState=newState;
  routingTable=newState.routingTable();
  clusterState=ClusterState.builder(clusterState).routingTable(routingTable).build();
  assertEquals(routingTable.index("idx").shards().size(),1);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getNumFailedAllocations(),retries);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).state(),INITIALIZING);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getMessage(),"boom");
  failedShards=Collections.singletonList(new FailedShard(routingTable.index("idx").shard(0).shards().get(0),"boom",new UnsupportedOperationException()));
  newState=strategy.applyFailedShards(clusterState,failedShards);
  assertThat(newState,not(equalTo(clusterState)));
  clusterState=newState;
  routingTable=newState.routingTable();
  assertEquals(routingTable.index("idx").shards().size(),1);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getNumFailedAllocations(),retries + 1);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).state(),UNASSIGNED);
  assertEquals(routingTable.index("idx").shard(0).shards().get(0).unassignedInfo().getMessage(),"boom");
}
