{
  if (value == null) {
    return null;
  }
 else   if (value instanceof Wrapper) {
    value=unwrapValue(((Wrapper)value).unwrap());
  }
 else   if (value instanceof IdScriptableObject) {
    String className=((IdScriptableObject)value).getClassName();
    if ("String".equals(className)) {
      value=Context.jsToJava(value,String.class);
    }
 else     if ("Date".equals(className)) {
      value=Context.jsToJava(value,Date.class);
    }
 else {
      Scriptable values=(Scriptable)value;
      Object[] propIds=values.getIds();
      if (values instanceof NativeArray && isArray(propIds)) {
        List<Object> propValues=new ArrayList<Object>(propIds.length);
        for (int i=0; i < propIds.length; i++) {
          Integer propId=(Integer)propIds[i];
          if (propId instanceof Integer) {
            Object val=values.get(propId,values);
            propValues.add(unwrapValue(val));
          }
        }
        value=propValues;
      }
 else {
        Map<String,Object> propValues=new HashMap<String,Object>(propIds.length);
        for (int i=0; i < propIds.length; i++) {
          Object propId=propIds[i];
          if (propId instanceof String) {
            Object val=values.get((String)propId,values);
            propValues.put((String)propId,unwrapValue(val));
          }
        }
        value=propValues;
      }
    }
  }
 else   if (value instanceof Object[]) {
    Object[] array=(Object[])value;
    ArrayList<Object> list=new ArrayList<Object>(array.length);
    for (int i=0; i < array.length; i++) {
      list.add(unwrapValue(array[i]));
    }
    value=list;
  }
 else   if (value instanceof Map) {
    Map<Object,Object> map=(Map<Object,Object>)value;
    Map<Object,Object> copyMap=new HashMap<Object,Object>(map.size());
    for (    Object key : map.keySet()) {
      copyMap.put(key,unwrapValue(map.get(key)));
    }
    value=copyMap;
  }
  return value;
}
