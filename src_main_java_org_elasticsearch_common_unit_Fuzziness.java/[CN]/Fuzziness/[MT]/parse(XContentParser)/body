{
  XContentParser.Token token=parser.currentToken();
switch (token) {
case VALUE_STRING:
case VALUE_NUMBER:
    final String fuzziness=parser.text();
  if (AUTO.asString().equalsIgnoreCase(fuzziness)) {
    return AUTO;
  }
try {
  final int minimumSimilarity=Integer.parseInt(fuzziness);
switch (minimumSimilarity) {
case 0:
    return ZERO;
case 1:
  return ONE;
case 2:
return TWO;
default :
return build(fuzziness);
}
}
 catch (NumberFormatException ex) {
return build(fuzziness);
}
default :
throw new ElasticsearchIllegalArgumentException("Can't parse fuzziness on token: [" + token + "]");
}
}
