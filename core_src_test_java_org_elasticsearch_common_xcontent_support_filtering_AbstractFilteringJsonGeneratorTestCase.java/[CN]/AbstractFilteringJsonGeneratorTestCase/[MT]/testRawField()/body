{
  XContentBuilder expectedRawField=newXContentBuilder(true).startObject().field("foo",0).startObject("raw").field("content","hello world!").endObject().endObject();
  XContentBuilder expectedRawFieldFiltered=newXContentBuilder(true).startObject().field("foo",0).endObject();
  XContentBuilder expectedRawFieldNotFiltered=newXContentBuilder(true).startObject().startObject("raw").field("content","hello world!").endObject().endObject();
  BytesReference raw=newXContentBuilder(true).startObject().field("content","hello world!").endObject().bytes();
  assertXContentBuilder(expectedRawField,newXContentBuilder(true).startObject().field("foo",0).rawField("raw",raw).endObject());
  assertXContentBuilder(expectedRawFieldFiltered,newXContentBuilder(true,"f*").startObject().field("foo",0).rawField("raw",raw).endObject());
  assertXContentBuilder(expectedRawFieldFiltered,newXContentBuilder(false,"r*").startObject().field("foo",0).rawField("raw",raw).endObject());
  assertXContentBuilder(expectedRawFieldNotFiltered,newXContentBuilder(true,"r*").startObject().field("foo",0).rawField("raw",raw).endObject());
  assertXContentBuilder(expectedRawFieldNotFiltered,newXContentBuilder(false,"f*").startObject().field("foo",0).rawField("raw",raw).endObject());
  assertXContentBuilder(expectedRawField,newXContentBuilder(true).startObject().field("foo",0).rawField("raw",new ByteArrayInputStream(raw.toBytes())).endObject());
  assertXContentBuilder(expectedRawFieldFiltered,newXContentBuilder(true,"f*").startObject().field("foo",0).rawField("raw",new ByteArrayInputStream(raw.toBytes())).endObject());
  assertXContentBuilder(expectedRawFieldFiltered,newXContentBuilder(false,"r*").startObject().field("foo",0).rawField("raw",new ByteArrayInputStream(raw.toBytes())).endObject());
  assertXContentBuilder(expectedRawFieldNotFiltered,newXContentBuilder(true,"r*").startObject().field("foo",0).rawField("raw",new ByteArrayInputStream(raw.toBytes())).endObject());
  assertXContentBuilder(expectedRawFieldNotFiltered,newXContentBuilder(false,"f*").startObject().field("foo",0).rawField("raw",new ByteArrayInputStream(raw.toBytes())).endObject());
}
