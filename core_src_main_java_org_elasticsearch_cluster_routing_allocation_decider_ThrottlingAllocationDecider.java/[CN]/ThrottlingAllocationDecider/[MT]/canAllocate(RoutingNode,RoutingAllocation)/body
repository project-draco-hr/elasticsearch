{
  int currentOutRecoveries=allocation.routingNodes().getOutgoingRecoveries(node.nodeId());
  int currentInRecoveries=allocation.routingNodes().getIncomingRecoveries(node.nodeId());
  if (currentOutRecoveries >= concurrentOutgoingRecoveries) {
    return allocation.decision(Decision.THROTTLE,NAME,"too many outgoing shards are currently recovering [%d], limit: [%d]",currentOutRecoveries,concurrentOutgoingRecoveries);
  }
 else   if (currentInRecoveries >= concurrentIncomingRecoveries) {
    return allocation.decision(Decision.THROTTLE,NAME,"too many incoming shards are currently recovering [%d], limit: [%d]",currentInRecoveries,concurrentIncomingRecoveries);
  }
 else {
    return allocation.decision(Decision.YES,NAME,"below shard recovery limit of outgoing: [%d < %d] incoming: [%d < %d]",currentOutRecoveries,concurrentOutgoingRecoveries,currentInRecoveries,concurrentIncomingRecoveries);
  }
}
