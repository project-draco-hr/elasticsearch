{
  logger.info("--> starting 2 nodes");
  startNode("node1");
  startNode("node2");
  logger.info("--> creating an index with no replicas");
  client("node1").admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_replicas",0)).execute().actionGet();
  ClusterHealthResponse clusterHealthResponse=client("node1").admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();
  assertThat(clusterHealthResponse.isTimedOut(),equalTo(false));
  logger.info("--> index some data");
  for (int i=0; i < 100; i++) {
    client("node1").prepareIndex("test","type",Integer.toString(i)).setSource("field","value" + i).execute().actionGet();
  }
  client("node1").admin().indices().prepareRefresh().execute().actionGet();
  assertThat(client("node1").prepareCount().setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(),equalTo(100l));
  logger.info("--> decommission the second node");
  client("node1").admin().cluster().prepareUpdateSettings().setTransientSettings(settingsBuilder().put("cluster.routing.allocation.exclude._name","node2")).execute().actionGet();
  Thread.sleep(200);
  clusterHealthResponse=client("node1").admin().cluster().prepareHealth().setWaitForGreenStatus().setWaitForRelocatingShards(0).execute().actionGet();
  assertThat(clusterHealthResponse.isTimedOut(),equalTo(false));
  logger.info("--> verify all are allocated on node1 now");
  ClusterState clusterState=client("node1").admin().cluster().prepareState().execute().actionGet().getState();
  for (  IndexRoutingTable indexRoutingTable : clusterState.routingTable()) {
    for (    IndexShardRoutingTable indexShardRoutingTable : indexRoutingTable) {
      for (      ShardRouting shardRouting : indexShardRoutingTable) {
        assertThat(clusterState.nodes().get(shardRouting.currentNodeId()).name(),equalTo("node1"));
      }
    }
  }
  client("node1").admin().indices().prepareRefresh().execute().actionGet();
  assertThat(client("node1").prepareCount().setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(),equalTo(100l));
}
