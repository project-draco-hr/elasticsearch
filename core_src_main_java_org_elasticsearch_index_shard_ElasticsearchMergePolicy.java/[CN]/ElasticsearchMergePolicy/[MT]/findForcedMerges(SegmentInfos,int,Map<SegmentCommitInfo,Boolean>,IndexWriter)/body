{
  if (upgradeInProgress) {
    MergeSpecification spec=new IndexUpgraderMergeSpecification();
    for (    SegmentCommitInfo info : segmentInfos) {
      if (shouldUpgrade(info)) {
        logger.debug("Adding segment " + info.info.name + " to be upgraded");
        spec.add(new OneMerge(Collections.singletonList(info)));
      }
      if (spec.merges.size() == MAX_CONCURRENT_UPGRADE_MERGES) {
        logger.debug("Returning " + spec.merges.size() + " merges for upgrade");
        return spec;
      }
    }
    if (spec.merges.isEmpty() == false) {
      logger.debug("Returning " + spec.merges.size() + " merges for end of upgrade");
      return spec;
    }
    upgradeInProgress=false;
  }
  return upgradedMergeSpecification(delegate.findForcedMerges(segmentInfos,maxSegmentCount,segmentsToMerge,writer));
}
