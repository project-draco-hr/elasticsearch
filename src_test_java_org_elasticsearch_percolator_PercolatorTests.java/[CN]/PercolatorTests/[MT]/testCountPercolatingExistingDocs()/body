{
  client().admin().indices().prepareCreate("test").execute().actionGet();
  ensureGreen();
  logger.info("--> Adding docs");
  client().prepareIndex("test","type","1").setSource("field1","b").execute().actionGet();
  client().prepareIndex("test","type","2").setSource("field1","c").execute().actionGet();
  client().prepareIndex("test","type","3").setSource("field1","b c").execute().actionGet();
  client().prepareIndex("test","type","4").setSource("field1","d").execute().actionGet();
  logger.info("--> register a queries");
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"1").setSource(jsonBuilder().startObject().field("query",matchQuery("field1","b")).field("a","b").endObject()).execute().actionGet();
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"2").setSource(jsonBuilder().startObject().field("query",matchQuery("field1","c")).endObject()).execute().actionGet();
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"3").setSource(jsonBuilder().startObject().field("query",boolQuery().must(matchQuery("field1","b")).must(matchQuery("field1","c"))).endObject()).execute().actionGet();
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"4").setSource(jsonBuilder().startObject().field("query",matchAllQuery()).endObject()).execute().actionGet();
  client().admin().indices().prepareRefresh("test").execute().actionGet();
  logger.info("--> Count percolate existing doc with id 1");
  PercolateResponse response=client().preparePercolate().setIndices("test").setDocumentType("type").setOnlyCount(true).setGetRequest(Requests.getRequest("test").type("type").id("1")).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  assertThat(response.getSuccessfulShards(),equalTo(5));
  assertThat(response.getCount(),equalTo(2l));
  assertThat(response.getMatches(),emptyArray());
  logger.info("--> Count percolate existing doc with id 2");
  response=client().preparePercolate().setIndices("test").setDocumentType("type").setOnlyCount(true).setGetRequest(Requests.getRequest("test").type("type").id("2")).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  assertThat(response.getSuccessfulShards(),equalTo(5));
  assertThat(response.getCount(),equalTo(2l));
  assertThat(response.getMatches(),emptyArray());
  logger.info("--> Count percolate existing doc with id 3");
  response=client().preparePercolate().setIndices("test").setDocumentType("type").setOnlyCount(true).setGetRequest(Requests.getRequest("test").type("type").id("3")).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  assertThat(response.getSuccessfulShards(),equalTo(5));
  assertThat(response.getCount(),equalTo(4l));
  assertThat(response.getMatches(),emptyArray());
  logger.info("--> Count percolate existing doc with id 4");
  response=client().preparePercolate().setIndices("test").setDocumentType("type").setOnlyCount(true).setGetRequest(Requests.getRequest("test").type("type").id("4")).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  assertThat(response.getSuccessfulShards(),equalTo(5));
  assertThat(response.getCount(),equalTo(1l));
  assertThat(response.getMatches(),emptyArray());
}
