{
  assertAcked(client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards",1)));
  ensureGreen();
  logger.info("--> register a query");
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"kuku").setSource(jsonBuilder().startObject().field("color","blue").field("query",termQuery("field1","value1")).endObject()).execute().actionGet();
  refresh();
  CountResponse countResponse=client().prepareCount().setQuery(matchAllQuery()).setTypes(PercolatorService.TYPE_NAME).execute().actionGet();
  assertThat(countResponse.getCount(),equalTo(1l));
  for (int i=0; i < 10; i++) {
    PercolateResponse percolate=client().preparePercolate().setIndices("test").setDocumentType("type1").setSource(jsonBuilder().startObject().startObject("doc").field("field1","value1").endObject().endObject()).execute().actionGet();
    assertMatchCount(percolate,1l);
    assertThat(percolate.getMatches(),arrayWithSize(1));
  }
  for (int i=0; i < 10; i++) {
    PercolateResponse percolate=client().preparePercolate().setIndices("test").setDocumentType("type1").setPreference("_local").setSource(jsonBuilder().startObject().startObject("doc").field("field1","value1").endObject().endObject()).execute().actionGet();
    assertMatchCount(percolate,1l);
    assertThat(percolate.getMatches(),arrayWithSize(1));
  }
  logger.info("--> delete the index");
  client().admin().indices().prepareDelete("test").execute().actionGet();
  logger.info("--> make sure percolated queries for it have been deleted as well");
  countResponse=client().prepareCount().setQuery(matchAllQuery()).setTypes(PercolatorService.TYPE_NAME).execute().actionGet();
  assertHitCount(countResponse,0l);
}
