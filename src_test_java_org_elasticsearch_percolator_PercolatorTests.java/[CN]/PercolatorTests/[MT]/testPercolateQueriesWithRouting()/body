{
  client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put("index.number_of_shards",2)).execute().actionGet();
  ensureGreen();
  logger.info("--> register a queries");
  for (int i=1; i <= 100; i++) {
    client().prepareIndex("test",PercolatorService.TYPE_NAME,Integer.toString(i)).setSource(jsonBuilder().startObject().field("query",matchAllQuery()).endObject()).setRouting(Integer.toString(i % 2)).execute().actionGet();
  }
  logger.info("--> Percolate doc with no routing");
  PercolateResponse response=client().preparePercolate().setIndices("test").setDocumentType("type").setSource(jsonBuilder().startObject().startObject("doc").field("field1","value").endObject().endObject()).execute().actionGet();
  assertThat(response.getMatches(),arrayWithSize(100));
  logger.info("--> Percolate doc with routing=0");
  response=client().preparePercolate().setIndices("test").setDocumentType("type").setSource(jsonBuilder().startObject().startObject("doc").field("field1","value").endObject().endObject()).setRouting("0").execute().actionGet();
  assertThat(response.getMatches(),arrayWithSize(50));
  logger.info("--> Percolate doc with routing=1");
  response=client().preparePercolate().setIndices("test").setDocumentType("type").setSource(jsonBuilder().startObject().startObject("doc").field("field1","value").endObject().endObject()).setRouting("1").execute().actionGet();
  assertThat(response.getMatches(),arrayWithSize(50));
}
