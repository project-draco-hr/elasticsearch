{
  assertAcked(prepareCreate("idx").addMapping("type",jsonBuilder().startObject().startObject("type").field("dynamic",false).startObject("properties").startObject("custom").field("dynamic",true).field("type","object").field("include_in_all",false).endObject().endObject().startArray("dynamic_templates").startObject().startObject("custom_fields").field("path_match","custom.*").startObject("mapping").field("index","not_analyzed").endObject().endObject().endObject().endArray().endObject().endObject()));
  ensureGreen("idx");
  try {
    client().prepareIndex("idx",PercolatorService.TYPE_NAME,"1").setSource(jsonBuilder().startObject().field("query",QueryBuilders.queryString("color:red")).endObject()).get();
    fail();
  }
 catch (  PercolatorException e) {
  }
  PercolateResponse percolateResponse=client().preparePercolate().setDocumentType("type").setPercolateDoc(new PercolateSourceBuilder.DocBuilder().setDoc(jsonBuilder().startObject().startObject("custom").field("color","blue").endObject().endObject())).get();
  assertMatchCount(percolateResponse,0l);
  assertThat(percolateResponse.getMatches(),arrayWithSize(0));
  waitForConcreteMappingsOnAll("idx","type","custom.color");
  client().prepareIndex("idx",PercolatorService.TYPE_NAME,"1").setSource(jsonBuilder().startObject().field("query",QueryBuilders.queryString("color:red")).endObject()).get();
  client().prepareIndex("idx",PercolatorService.TYPE_NAME,"2").setSource(jsonBuilder().startObject().field("query",QueryBuilders.queryString("color:blue")).field("type","type").endObject()).get();
  percolateResponse=client().preparePercolate().setDocumentType("type").setPercolateDoc(new PercolateSourceBuilder.DocBuilder().setDoc(jsonBuilder().startObject().startObject("custom").field("color","blue").endObject().endObject())).get();
  assertMatchCount(percolateResponse,1l);
  assertThat(percolateResponse.getMatches()[0].getId().string(),equalTo("2"));
}
