{
  client().admin().indices().prepareCreate("test").execute().actionGet();
  ensureGreen();
  logger.info("--> Add dummy doc");
  client().prepareIndex("test","type","1").setSource("field","value").execute().actionGet();
  logger.info("--> register a queries");
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"1").setSource(jsonBuilder().startObject().field("query",matchQuery("field1","b")).field("a","b").endObject()).execute().actionGet();
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"2").setSource(jsonBuilder().startObject().field("query",matchQuery("field1","c")).endObject()).execute().actionGet();
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"3").setSource(jsonBuilder().startObject().field("query",boolQuery().must(matchQuery("field1","b")).must(matchQuery("field1","c"))).endObject()).execute().actionGet();
  client().prepareIndex("test",PercolatorService.TYPE_NAME,"4").setSource(jsonBuilder().startObject().field("query",matchAllQuery()).endObject()).execute().actionGet();
  client().admin().indices().prepareRefresh("test").execute().actionGet();
  logger.info("--> Count percolate doc with field1=b");
  PercolateResponse response=client().preparePercolate().setIndices("test").setDocumentType("type").setOnlyCount(true).setPercolateDoc(docBuilder().setDoc(jsonBuilder().startObject().field("field1","b").endObject())).execute().actionGet();
  assertMatchCount(response,2l);
  assertThat(response.getMatches(),nullValue());
  logger.info("--> Count percolate doc with field1=c");
  response=client().preparePercolate().setIndices("test").setDocumentType("type").setOnlyCount(true).setPercolateDoc(docBuilder().setDoc(yamlBuilder().startObject().field("field1","c").endObject())).execute().actionGet();
  assertMatchCount(response,2l);
  assertThat(response.getMatches(),nullValue());
  logger.info("--> Count percolate doc with field1=b c");
  response=client().preparePercolate().setIndices("test").setDocumentType("type").setOnlyCount(true).setPercolateDoc(docBuilder().setDoc(smileBuilder().startObject().field("field1","b c").endObject())).execute().actionGet();
  assertMatchCount(response,4l);
  assertThat(response.getMatches(),nullValue());
  logger.info("--> Count percolate doc with field1=d");
  response=client().preparePercolate().setIndices("test").setDocumentType("type").setOnlyCount(true).setPercolateDoc(docBuilder().setDoc(jsonBuilder().startObject().field("field1","d").endObject())).execute().actionGet();
  assertMatchCount(response,1l);
  assertThat(response.getMatches(),nullValue());
  logger.info("--> Count percolate non existing doc");
  try {
    client().preparePercolate().setIndices("test").setDocumentType("type").setOnlyCount(true).setGetRequest(Requests.getRequest("test").type("type").id("5")).execute().actionGet();
    fail("Exception should have been thrown");
  }
 catch (  DocumentMissingException e) {
  }
}
