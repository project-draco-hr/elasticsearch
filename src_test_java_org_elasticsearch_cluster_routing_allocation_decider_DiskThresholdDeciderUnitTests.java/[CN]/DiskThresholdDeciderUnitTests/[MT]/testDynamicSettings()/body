{
  NodeSettingsService nss=new NodeSettingsService(Settings.EMPTY);
  ClusterInfoService cis=new ClusterInfoService(){
    @Override public ClusterInfo getClusterInfo(){
      Map<String,DiskUsage> usages=new HashMap<>();
      Map<String,Long> shardSizes=new HashMap<>();
      return new ClusterInfo(ImmutableMap.copyOf(usages),ImmutableMap.copyOf(shardSizes));
    }
    @Override public void addListener(    Listener listener){
    }
  }
;
  DiskThresholdDecider decider=new DiskThresholdDecider(Settings.EMPTY,nss,cis,null);
  assertThat(decider.getFreeBytesThresholdHigh(),equalTo(ByteSizeValue.parseBytesSizeValue("0b")));
  assertThat(decider.getFreeDiskThresholdHigh(),equalTo(10.0d));
  assertThat(decider.getFreeBytesThresholdLow(),equalTo(ByteSizeValue.parseBytesSizeValue("0b")));
  assertThat(decider.getFreeDiskThresholdLow(),equalTo(15.0d));
  assertThat(decider.getRerouteInterval().seconds(),equalTo(60L));
  assertTrue(decider.isEnabled());
  assertTrue(decider.isIncludeRelocations());
  DiskThresholdDecider.ApplySettings applySettings=decider.newApplySettings();
  Settings newSettings=Settings.builder().put(DiskThresholdDecider.CLUSTER_ROUTING_ALLOCATION_DISK_THRESHOLD_ENABLED,false).put(DiskThresholdDecider.CLUSTER_ROUTING_ALLOCATION_INCLUDE_RELOCATIONS,false).put(DiskThresholdDecider.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK,"70%").put(DiskThresholdDecider.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK,"500mb").put(DiskThresholdDecider.CLUSTER_ROUTING_ALLOCATION_REROUTE_INTERVAL,"30s").build();
  applySettings.onRefreshSettings(newSettings);
  assertThat("high threshold bytes should be unset",decider.getFreeBytesThresholdHigh(),equalTo(ByteSizeValue.parseBytesSizeValue("0b")));
  assertThat("high threshold percentage should be changed",decider.getFreeDiskThresholdHigh(),equalTo(30.0d));
  assertThat("low threshold bytes should be set to 500mb",decider.getFreeBytesThresholdLow(),equalTo(ByteSizeValue.parseBytesSizeValue("500mb")));
  assertThat("low threshold bytes should be unset",decider.getFreeDiskThresholdLow(),equalTo(0.0d));
  assertThat("reroute interval should be changed to 30 seconds",decider.getRerouteInterval().seconds(),equalTo(30L));
  assertFalse("disk threshold decider should now be disabled",decider.isEnabled());
  assertFalse("relocations should now be disabled",decider.isIncludeRelocations());
}
