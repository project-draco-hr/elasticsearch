{
  XContentParser parser=parseContext.parser();
  ParseFieldMatcher parseFieldMatcher=parseContext.parseFieldMatcher();
  SuggestBuilder suggestBuilder=new SuggestBuilder();
  String fieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      fieldName=parser.currentName();
    }
 else     if (token.isValue()) {
      if (parseFieldMatcher.match(fieldName,GLOBAL_TEXT_FIELD)) {
        suggestBuilder.setText(parser.text());
      }
 else {
        throw new IllegalArgumentException("[suggest] does not support [" + fieldName + "]");
      }
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      String suggestionName=fieldName;
      if (suggestionName == null) {
        throw new IllegalArgumentException("Suggestion must have name");
      }
      suggestBuilder.addSuggestion(SuggestionBuilder.fromXContent(parseContext,suggestionName,suggesters));
    }
 else {
      throw new ParsingException(parser.getTokenLocation(),"unexpected token [" + token + "] after ["+ fieldName+ "]");
    }
  }
  return suggestBuilder;
}
