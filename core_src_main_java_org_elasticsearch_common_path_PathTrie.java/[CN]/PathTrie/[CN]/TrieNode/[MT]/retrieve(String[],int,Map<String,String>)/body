{
  if (index >= path.length)   return null;
  String token=path[index];
  TrieNode node=children.get(token);
  boolean usedWildcard;
  if (node == null) {
    node=children.get(wildcard);
    if (node == null) {
      return null;
    }
    usedWildcard=true;
  }
 else {
    if (index + 1 == path.length && node.value == null && children.get(wildcard) != null) {
      node=children.get(wildcard);
      usedWildcard=true;
    }
 else {
      usedWildcard=token.equals(wildcard);
    }
  }
  put(params,node,token);
  if (index == (path.length - 1)) {
    return node.value;
  }
  T res=node.retrieve(path,index + 1,params);
  if (res == null && !usedWildcard) {
    node=children.get(wildcard);
    if (node != null) {
      put(params,node,token);
      res=node.retrieve(path,index + 1,params);
    }
  }
  return res;
}
