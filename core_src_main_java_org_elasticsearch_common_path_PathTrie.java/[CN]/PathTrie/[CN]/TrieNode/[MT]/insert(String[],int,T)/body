{
  if (index >= path.length)   return;
  String token=path[index];
  String key=token;
  if (isNamedWildcard(token)) {
    key=wildcard;
  }
  TrieNode<T> node=children.get(key);
  if (node == null) {
    if (index == (path.length - 1)) {
      node=new TrieNode<>(token,value,this,wildcard);
    }
 else {
      node=new TrieNode<>(token,null,this,wildcard);
    }
    children=newMapBuilder(children).put(key,node).immutableMap();
  }
 else {
    if (isNamedWildcard(token)) {
      node.updateKeyWithNamedWildcard(token);
    }
    if (index == (path.length - 1)) {
      assert(node.value == null || node.value == value);
      if (node.value == null) {
        node.value=value;
      }
    }
  }
  node.insert(path,index + 1,value);
}
