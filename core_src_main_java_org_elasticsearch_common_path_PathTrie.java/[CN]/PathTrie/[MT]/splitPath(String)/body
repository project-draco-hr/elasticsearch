{
  if (path == null || path.length() == 0) {
    return Strings.EMPTY_ARRAY;
  }
  int count=1;
  boolean splitAllowed=true;
  for (int i=0; i < path.length(); i++) {
    final char currentC=path.charAt(i);
    if ('<' == currentC) {
      splitAllowed=false;
    }
 else     if (currentC == '>') {
      splitAllowed=true;
    }
 else     if (splitAllowed && currentC == separator) {
      count++;
    }
  }
  final List<String> result=new ArrayList<>(count);
  final StringBuilder builder=new StringBuilder();
  splitAllowed=true;
  for (int i=0; i < path.length(); i++) {
    final char currentC=path.charAt(i);
    if ('<' == currentC) {
      splitAllowed=false;
    }
 else     if (currentC == '>') {
      splitAllowed=true;
    }
 else     if (splitAllowed && currentC == separator) {
      if (builder.length() > 0) {
        result.add(builder.toString());
        builder.setLength(0);
      }
      continue;
    }
    builder.append(currentC);
  }
  if (builder.length() > 0) {
    result.add(builder.toString());
  }
  return result.toArray(new String[result.size()]);
}
