{
  final TemplateService templateService=new InternalTemplateService(scriptService);
  Map<String,Processor.Factory> processorFactories=new HashMap<>();
  for (  IngestPlugin ingestPlugin : ingestPlugins) {
    Map<String,Processor.Factory> newProcessors=ingestPlugin.getProcessors(env,scriptService,templateService);
    for (    Map.Entry<String,Processor.Factory> entry : newProcessors.entrySet()) {
      if (processorFactories.put(entry.getKey(),entry.getValue()) != null) {
        throw new IllegalArgumentException("Ingest processor [" + entry.getKey() + "] is already registered");
      }
    }
  }
  this.pipelineStore=new PipelineStore(settings,Collections.unmodifiableMap(processorFactories));
  this.pipelineExecutionService=new PipelineExecutionService(pipelineStore,threadPool);
}
