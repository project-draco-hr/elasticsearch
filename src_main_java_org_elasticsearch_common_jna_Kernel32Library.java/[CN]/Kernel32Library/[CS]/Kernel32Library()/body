{
  try {
    internal=(Kernel32)Native.synchronizedLibrary((Kernel32)Native.loadLibrary("kernel32",Kernel32.class));
    logger.debug("windows/Kernel32 library loaded");
  }
 catch (  NoClassDefFoundError e) {
    logger.warn("JNA not found. native methods and handlers will be disabled.");
  }
catch (  UnsatisfiedLinkError e) {
    logger.warn("unable to link Windows/Kernel32 library. native methods and handlers will be disabled.");
  }
}
