{
  client1.admin().indices().prepareDelete().execute().actionGet();
  logger.info("--> creating index [test1]");
  client1.admin().indices().create(createIndexRequest("test1")).actionGet();
  logger.info("--> creating index [test2]");
  client1.admin().indices().create(createIndexRequest("test2")).actionGet();
  logger.info("--> running cluster_health");
  ClusterHealthResponse clusterHealth=client1.admin().cluster().health(clusterHealthRequest().setWaitForGreenStatus()).actionGet();
  logger.info("--> done cluster_health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  logger.info("--> adding filtering aliases to index [test1]");
  client1.admin().indices().prepareAliases().addAlias("test1","aliasToTest1").execute().actionGet();
  client1.admin().indices().prepareAliases().addAlias("test1","aliasToTests").execute().actionGet();
  client1.admin().indices().prepareAliases().addAlias("test1","foos",termFilter("name","foo")).execute().actionGet();
  client1.admin().indices().prepareAliases().addAlias("test1","bars",termFilter("name","bar")).execute().actionGet();
  client1.admin().indices().prepareAliases().addAlias("test1","tests",termFilter("name","test")).execute().actionGet();
  logger.info("--> adding filtering aliases to index [test2]");
  client1.admin().indices().prepareAliases().addAlias("test2","aliasToTest2").execute().actionGet();
  client1.admin().indices().prepareAliases().addAlias("test2","aliasToTests").execute().actionGet();
  client1.admin().indices().prepareAliases().addAlias("test2","foos",termFilter("name","foo")).execute().actionGet();
  client1.admin().indices().prepareAliases().addAlias("test2","tests",termFilter("name","test")).execute().actionGet();
  logger.info("--> indexing against [test1]");
  client1.index(indexRequest("test1").setType("type1").setId("1").setSource(source("1","foo test")).setRefresh(true)).actionGet();
  client1.index(indexRequest("test1").setType("type1").setId("2").setSource(source("2","bar test")).setRefresh(true)).actionGet();
  client1.index(indexRequest("test1").setType("type1").setId("3").setSource(source("3","baz test")).setRefresh(true)).actionGet();
  client1.index(indexRequest("test1").setType("type1").setId("4").setSource(source("4","something else")).setRefresh(true)).actionGet();
  logger.info("--> indexing against [test2]");
  client1.index(indexRequest("test2").setType("type1").setId("5").setSource(source("5","foo test")).setRefresh(true)).actionGet();
  client1.index(indexRequest("test2").setType("type1").setId("6").setSource(source("6","bar test")).setRefresh(true)).actionGet();
  client1.index(indexRequest("test2").setType("type1").setId("7").setSource(source("7","baz test")).setRefresh(true)).actionGet();
  client1.index(indexRequest("test2").setType("type1").setId("8").setSource(source("8","something else")).setRefresh(true)).actionGet();
  logger.info("--> checking counts before delete");
  assertThat(client1.prepareCount("bars").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(),equalTo(1L));
  logger.info("--> delete by query from a single alias");
  client1.prepareDeleteByQuery("bars").setQuery(QueryBuilders.termQuery("name","test")).execute().actionGet();
  client1.admin().indices().prepareRefresh().execute().actionGet();
  logger.info("--> verify that only one record was deleted");
  assertThat(client1.prepareCount("test1").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(),equalTo(3L));
  logger.info("--> delete by query from an aliases pointing to two indices");
  client1.prepareDeleteByQuery("foos").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  client1.admin().indices().prepareRefresh().execute().actionGet();
  logger.info("--> verify that proper records were deleted");
  SearchResponse searchResponse=client1.prepareSearch("aliasToTests").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  assertHits(searchResponse.getHits(),"3","4","6","7","8");
  logger.info("--> delete by query from an aliases and an index");
  client1.prepareDeleteByQuery("tests","test2").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  client1.admin().indices().prepareRefresh().execute().actionGet();
  logger.info("--> verify that proper records were deleted");
  searchResponse=client1.prepareSearch("aliasToTests").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet();
  assertHits(searchResponse.getHits(),"4");
}
