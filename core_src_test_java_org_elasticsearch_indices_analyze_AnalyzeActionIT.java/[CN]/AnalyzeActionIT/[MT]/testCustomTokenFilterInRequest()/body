{
  Map<String,Object> stopFilterSettings=new HashMap<>();
  stopFilterSettings.put("type","stop");
  stopFilterSettings.put("stopwords",new String[]{"foo","buzz"});
  AnalyzeResponse analyzeResponse=client().admin().indices().prepareAnalyze().setText("Foo buzz test").setTokenizer("whitespace").addTokenFilter("lowercase").addTokenFilter(stopFilterSettings).setExplain(true).get();
  assertThat(analyzeResponse.detail().tokenizer().getName(),equalTo("whitespace"));
  assertThat(analyzeResponse.detail().tokenizer().getTokens().length,equalTo(3));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[0].getTerm(),equalTo("Foo"));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[0].getStartOffset(),equalTo(0));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[0].getEndOffset(),equalTo(3));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[0].getPosition(),equalTo(0));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[1].getTerm(),equalTo("buzz"));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[1].getStartOffset(),equalTo(4));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[1].getEndOffset(),equalTo(8));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[1].getPosition(),equalTo(1));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[2].getTerm(),equalTo("test"));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[2].getStartOffset(),equalTo(9));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[2].getEndOffset(),equalTo(13));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[2].getPosition(),equalTo(2));
  assertThat(analyzeResponse.detail().tokenfilters().length,equalTo(2));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getName(),equalTo("lowercase"));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens().length,equalTo(3));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[0].getTerm(),equalTo("foo"));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[0].getStartOffset(),equalTo(0));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[0].getEndOffset(),equalTo(3));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[0].getPosition(),equalTo(0));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[1].getTerm(),equalTo("buzz"));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[1].getStartOffset(),equalTo(4));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[1].getEndOffset(),equalTo(8));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[1].getPosition(),equalTo(1));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[2].getTerm(),equalTo("test"));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[2].getStartOffset(),equalTo(9));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[2].getEndOffset(),equalTo(13));
  assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[2].getPosition(),equalTo(2));
  assertThat(analyzeResponse.detail().tokenfilters()[1].getName(),equalTo("_anonymous_tokenfilter_[1]"));
  assertThat(analyzeResponse.detail().tokenfilters()[1].getTokens().length,equalTo(1));
  assertThat(analyzeResponse.detail().tokenfilters()[1].getTokens()[0].getTerm(),equalTo("test"));
  assertThat(analyzeResponse.detail().tokenfilters()[1].getTokens()[0].getStartOffset(),equalTo(9));
  assertThat(analyzeResponse.detail().tokenfilters()[1].getTokens()[0].getEndOffset(),equalTo(13));
  assertThat(analyzeResponse.detail().tokenfilters()[1].getTokens()[0].getPosition(),equalTo(2));
}
