{
  assertAcked(prepareCreate("test").addAlias(new Alias("alias")).setSettings(Settings.builder().put("index.analysis.char_filter.my_mapping.type","mapping").putArray("index.analysis.char_filter.my_mapping.mappings","PH=>F").put("index.analysis.analyzer.test_analyzer.type","custom").put("index.analysis.analyzer.test_analyzer.position_increment_gap","100").put("index.analysis.analyzer.test_analyzer.tokenizer","standard").putArray("index.analysis.analyzer.test_analyzer.char_filter","my_mapping").putArray("index.analysis.analyzer.test_analyzer.filter","snowball")));
  ensureGreen();
  for (int i=0; i < 10; i++) {
    AnalyzeResponse analyzeResponse=admin().indices().prepareAnalyze().setIndex(indexOrAlias()).setText("THIS IS A PHISH").setExplain(true).setCharFilters("my_mapping").setTokenizer("keyword").setTokenFilters("lowercase").get();
    assertThat(analyzeResponse.detail().analyzer(),IsNull.nullValue());
    assertThat(analyzeResponse.detail().charfilters().length,equalTo(1));
    assertThat(analyzeResponse.detail().charfilters()[0].getName(),equalTo("my_mapping"));
    assertThat(analyzeResponse.detail().charfilters()[0].getTexts().length,equalTo(1));
    assertThat(analyzeResponse.detail().charfilters()[0].getTexts()[0],equalTo("THIS IS A FISH"));
    assertThat(analyzeResponse.detail().tokenizer().getName(),equalTo("keyword"));
    assertThat(analyzeResponse.detail().tokenizer().getTokens().length,equalTo(1));
    assertThat(analyzeResponse.detail().tokenizer().getTokens()[0].getTerm(),equalTo("THIS IS A FISH"));
    assertThat(analyzeResponse.detail().tokenizer().getTokens()[0].getStartOffset(),equalTo(0));
    assertThat(analyzeResponse.detail().tokenizer().getTokens()[0].getEndOffset(),equalTo(15));
    assertThat(analyzeResponse.detail().tokenfilters().length,equalTo(1));
    assertThat(analyzeResponse.detail().tokenfilters()[0].getName(),equalTo("lowercase"));
    assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens().length,equalTo(1));
    assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[0].getTerm(),equalTo("this is a fish"));
    assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[0].getPosition(),equalTo(0));
    assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[0].getStartOffset(),equalTo(0));
    assertThat(analyzeResponse.detail().tokenfilters()[0].getTokens()[0].getEndOffset(),equalTo(15));
  }
}
