{
  Map<String,Object> charFilterSettings=new HashMap<>();
  charFilterSettings.put("type","mapping");
  charFilterSettings.put("mappings",new String[]{"ph => f","qu => q"});
  AnalyzeResponse analyzeResponse=client().admin().indices().prepareAnalyze().setText("jeff quit phish").setTokenizer("keyword").addCharFilter(charFilterSettings).setExplain(true).get();
  assertThat(analyzeResponse.detail().analyzer(),IsNull.nullValue());
  assertThat(analyzeResponse.detail().charfilters().length,equalTo(1));
  assertThat(analyzeResponse.detail().charfilters()[0].getName(),equalTo("_anonymous_charfilter_[0]"));
  assertThat(analyzeResponse.detail().charfilters()[0].getTexts().length,equalTo(1));
  assertThat(analyzeResponse.detail().charfilters()[0].getTexts()[0],equalTo("jeff qit fish"));
  assertThat(analyzeResponse.detail().tokenizer().getName(),equalTo("keyword"));
  assertThat(analyzeResponse.detail().tokenizer().getTokens().length,equalTo(1));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[0].getTerm(),equalTo("jeff qit fish"));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[0].getStartOffset(),equalTo(0));
  assertThat(analyzeResponse.detail().tokenizer().getTokens()[0].getEndOffset(),equalTo(15));
}
