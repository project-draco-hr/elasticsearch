{
  RepositoriesMetaData repositoriesMetaData=state.getMetaData().custom(RepositoriesMetaData.TYPE);
  if (repositoriesMetaData == null || repositoriesMetaData.repository(request.repository()) == null) {
    throw new RepositoryMissingException(request.repository());
  }
  if (!Strings.hasLength(request.name())) {
    throw new InvalidSnapshotNameException(new SnapshotId(request.repository(),request.name()),"cannot be empty");
  }
  if (request.name().contains(" ")) {
    throw new InvalidSnapshotNameException(new SnapshotId(request.repository(),request.name()),"must not contain whitespace");
  }
  if (request.name().contains(",")) {
    throw new InvalidSnapshotNameException(new SnapshotId(request.repository(),request.name()),"must not contain ','");
  }
  if (request.name().contains("#")) {
    throw new InvalidSnapshotNameException(new SnapshotId(request.repository(),request.name()),"must not contain '#'");
  }
  if (request.name().charAt(0) == '_') {
    throw new InvalidSnapshotNameException(new SnapshotId(request.repository(),request.name()),"must not start with '_'");
  }
  if (!request.name().toLowerCase(Locale.ROOT).equals(request.name())) {
    throw new InvalidSnapshotNameException(new SnapshotId(request.repository(),request.name()),"must be lowercase");
  }
  if (!Strings.validFileName(request.name())) {
    throw new InvalidSnapshotNameException(new SnapshotId(request.repository(),request.name()),"must not contain the following characters " + Strings.INVALID_FILENAME_CHARS);
  }
}
