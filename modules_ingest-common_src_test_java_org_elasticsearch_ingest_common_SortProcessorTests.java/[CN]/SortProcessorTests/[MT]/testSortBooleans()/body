{
  IngestDocument ingestDocument=RandomDocumentPicks.randomIngestDocument(random());
  int numItems=randomIntBetween(1,10);
  List<Boolean> fieldValue=new ArrayList<>(numItems);
  List<Boolean> expectedResult=new ArrayList<>(numItems);
  for (int j=0; j < numItems; j++) {
    Boolean value=randomBoolean();
    fieldValue.add(value);
    expectedResult.add(value);
  }
  Collections.sort(expectedResult);
  SortOrder order=randomBoolean() ? SortOrder.ASCENDING : SortOrder.DESCENDING;
  if (order.equals(SortOrder.DESCENDING)) {
    Collections.reverse(expectedResult);
  }
  String fieldName=RandomDocumentPicks.addRandomField(random(),ingestDocument,fieldValue);
  Processor processor=new SortProcessor(randomAsciiOfLength(10),fieldName,order);
  processor.execute(ingestDocument);
  assertEquals(ingestDocument.getFieldValue(fieldName,List.class),expectedResult);
}
