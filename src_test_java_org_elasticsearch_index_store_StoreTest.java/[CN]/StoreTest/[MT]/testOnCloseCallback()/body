{
  final ShardId shardId=new ShardId(new Index(randomRealisticUnicodeOfCodepointLengthBetween(1,10)),randomIntBetween(0,100));
  DirectoryService directoryService=new LuceneManagedDirectoryService(random());
  final AtomicInteger count=new AtomicInteger(0);
  final ShardLock lock=new DummyShardLock(shardId);
  Store store=new Store(shardId,ImmutableSettings.EMPTY,directoryService,lock,new Store.OnClose(){
    @Override public void handle(    ShardLock theLock){
      assertEquals(shardId,theLock.getShardId());
      assertEquals(lock,theLock);
      count.incrementAndGet();
    }
  }
);
  assertEquals(count.get(),0);
  final int iters=randomIntBetween(1,10);
  for (int i=0; i < iters; i++) {
    store.close();
  }
  assertEquals(count.get(),1);
}
