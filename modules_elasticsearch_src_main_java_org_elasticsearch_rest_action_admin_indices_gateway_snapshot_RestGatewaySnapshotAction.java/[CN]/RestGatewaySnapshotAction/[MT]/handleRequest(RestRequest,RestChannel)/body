{
  GatewaySnapshotRequest gatewaySnapshotRequest=new GatewaySnapshotRequest(RestActions.splitIndices(request.param("index")));
  gatewaySnapshotRequest.timeout(request.paramAsTime("timeout",DEFAULT_TIMEOUT));
  gatewaySnapshotRequest.listenerThreaded(false);
  client.admin().indices().gatewaySnapshot(gatewaySnapshotRequest,new ActionListener<GatewaySnapshotResponse>(){
    @Override public void onResponse(    GatewaySnapshotResponse result){
      try {
        JsonBuilder builder=RestJsonBuilder.restJsonBuilder(request);
        builder.startObject();
        builder.field("ok",true);
        builder.startObject("indices");
        for (        IndexGatewaySnapshotResponse indexResponse : result.indices().values()) {
          builder.startObject(indexResponse.index()).field("ok",true).startObject("_shards").field("total",indexResponse.totalShards()).field("successful",indexResponse.successfulShards()).field("failed",indexResponse.failedShards()).endObject().endObject();
        }
        builder.endObject();
        builder.endObject();
        channel.sendResponse(new JsonRestResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new JsonThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
