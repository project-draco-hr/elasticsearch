{
  long index=-1;
  Path metaDataFile=null;
  MetaData metaData=null;
  long version=-1;
  for (  Path dataLocation : nodeEnv.nodeDataPaths()) {
    final Path stateLocation=dataLocation.resolve(MetaDataStateFormat.STATE_DIR_NAME);
    if (!Files.exists(stateLocation)) {
      continue;
    }
    try (DirectoryStream<Path> stream=Files.newDirectoryStream(stateLocation)){
      for (      Path stateFile : stream) {
        if (logger.isTraceEnabled()) {
          logger.trace("[upgrade]: processing [" + stateFile.getFileName() + "]");
        }
        String name=stateFile.getFileName().toString();
        if (!name.startsWith("metadata-")) {
          continue;
        }
        long fileIndex=Long.parseLong(name.substring(name.indexOf('-') + 1));
        if (fileIndex >= index) {
          try {
            byte[] data=Files.readAllBytes(stateFile);
            if (data.length == 0) {
              continue;
            }
            try (XContentParser parser=XContentHelper.createParser(data,0,data.length)){
              String currentFieldName=null;
              XContentParser.Token token=parser.nextToken();
              if (token != null) {
                while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
                  if (token == XContentParser.Token.FIELD_NAME) {
                    currentFieldName=parser.currentName();
                  }
 else                   if (token == XContentParser.Token.START_OBJECT) {
                    if ("meta-data".equals(currentFieldName)) {
                      metaData=MetaData.Builder.fromXContent(parser);
                    }
                  }
 else                   if (token.isValue()) {
                    if ("version".equals(currentFieldName)) {
                      version=parser.longValue();
                    }
                  }
                }
              }
            }
             index=fileIndex;
            metaDataFile=stateFile;
          }
 catch (          IOException e) {
            logger.warn("failed to read pre 0.19 state from [" + name + "], ignoring...",e);
          }
        }
      }
    }
   }
  if (metaData == null) {
    return;
  }
  logger.info("found old metadata state, loading metadata from [{}] and converting to new metadata location and structure...",metaDataFile.toAbsolutePath());
  writeGlobalState("upgrade",MetaData.builder(metaData).version(version).build());
  for (  IndexMetaData indexMetaData : metaData) {
    IndexMetaData.Builder indexMetaDataBuilder=IndexMetaData.builder(indexMetaData).version(version);
    indexMetaDataBuilder.settings(ImmutableSettings.settingsBuilder().put(indexMetaData.settings()).put(IndexMetaData.SETTING_VERSION_CREATED,Version.V_0_18_0));
    writeIndex("upgrade",indexMetaDataBuilder.build(),null);
  }
  Path backupFile=metaDataFile.resolveSibling("backup-" + metaDataFile.getFileName());
  Files.move(metaDataFile,backupFile,StandardCopyOption.ATOMIC_MOVE);
  for (  Path dataLocation : nodeEnv.nodeDataPaths()) {
    Path stateLocation=dataLocation.resolve(MetaDataStateFormat.STATE_DIR_NAME);
    if (!Files.exists(stateLocation)) {
      continue;
    }
    try (DirectoryStream<Path> stream=Files.newDirectoryStream(stateLocation)){
      for (      Path stateFile : stream) {
        String name=stateFile.getFileName().toString();
        if (!name.startsWith("metadata-")) {
          continue;
        }
        try {
          Files.delete(stateFile);
        }
 catch (        Exception ex) {
          logger.debug("failed to delete file " + stateFile,ex);
        }
      }
    }
   }
  logger.info("conversion to new metadata location and format done, backup create at [{}]",backupFile.toAbsolutePath());
}
