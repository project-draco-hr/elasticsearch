{
  client().admin().indices().prepareCreate("test").setSettings(ImmutableSettings.settingsBuilder().put("index.number_of_shards",1)).execute().actionGet();
  String aMonthAgo=ISODateTimeFormat.yearMonthDay().print(new DateTime(DateTimeZone.UTC).minusMonths(1));
  String aMonthFromNow=ISODateTimeFormat.yearMonthDay().print(new DateTime(DateTimeZone.UTC).plusMonths(1));
  client().prepareIndex("test","type","1").setSource("past",aMonthAgo,"future",aMonthFromNow).execute().actionGet();
  refresh();
  CountResponse countResponse=client().prepareCount().setQuery(queryString("past:[now-2M/d TO now/d]")).execute().actionGet();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount().setQuery(queryString("future:[now/d TO now+2M/d]").lowercaseExpandedTerms(false)).execute().actionGet();
  assertHitCount(countResponse,1l);
  countResponse=client().prepareCount().setQuery(queryString("future:[now/D TO now+2M/d]").lowercaseExpandedTerms(false)).execute().actionGet();
  assertThat(countResponse.getSuccessfulShards(),equalTo(0));
  assertThat(countResponse.getFailedShards(),equalTo(1));
  assertThat(countResponse.getShardFailures().length,equalTo(1));
  assertThat(countResponse.getShardFailures()[0].reason(),allOf(containsString("Failed to parse"),containsString("unit [D] not supported for date math")));
}
