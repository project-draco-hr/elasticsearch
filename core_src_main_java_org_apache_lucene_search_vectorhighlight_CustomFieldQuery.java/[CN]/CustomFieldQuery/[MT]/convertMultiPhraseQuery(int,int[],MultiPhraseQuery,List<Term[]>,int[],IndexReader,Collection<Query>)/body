{
  if (currentPos == 0) {
    int numTerms=0;
    for (    Term[] currentPosTerm : terms) {
      numTerms+=currentPosTerm.length;
    }
    if (numTerms > 16) {
      for (      Term[] currentPosTerm : terms) {
        for (        Term term : currentPosTerm) {
          super.flatten(new TermQuery(term),reader,flatQueries,1F);
        }
      }
      return;
    }
  }
  if (currentPos == terms.size()) {
    PhraseQuery.Builder queryBuilder=new PhraseQuery.Builder();
    queryBuilder.setSlop(orig.getSlop());
    for (int i=0; i < termsIdx.length; i++) {
      queryBuilder.add(terms.get(i)[termsIdx[i]],pos[i]);
    }
    Query query=queryBuilder.build();
    this.flatten(query,reader,flatQueries,1F);
  }
 else {
    Term[] t=terms.get(currentPos);
    for (int i=0; i < t.length; i++) {
      termsIdx[currentPos]=i;
      convertMultiPhraseQuery(currentPos + 1,termsIdx,orig,terms,pos,reader,flatQueries);
    }
  }
}
