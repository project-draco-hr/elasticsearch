{
  builder.field(Fields.CLUSTER_NAME,getClusterName());
  builder.field(Fields.STATUS,getStatus().name().toLowerCase(Locale.ROOT));
  builder.field(Fields.TIMED_OUT,isTimedOut());
  builder.field(Fields.NUMBER_OF_NODES,getNumberOfNodes());
  builder.field(Fields.NUMBER_OF_DATA_NODES,getNumberOfDataNodes());
  builder.field(Fields.ACTIVE_PRIMARY_SHARDS,getActivePrimaryShards());
  builder.field(Fields.ACTIVE_SHARDS,getActiveShards());
  builder.field(Fields.RELOCATING_SHARDS,getRelocatingShards());
  builder.field(Fields.INITIALIZING_SHARDS,getInitializingShards());
  builder.field(Fields.UNASSIGNED_SHARDS,getUnassignedShards());
  String level=params.param("level","cluster");
  boolean outputIndices="indices".equals(level) || "shards".equals(level);
  if (!getValidationFailures().isEmpty()) {
    builder.startArray(Fields.VALIDATION_FAILURES);
    for (    String validationFailure : getValidationFailures()) {
      builder.value(validationFailure);
    }
    if (!outputIndices) {
      for (      ClusterIndexHealth indexHealth : indices.values()) {
        builder.startObject(indexHealth.getIndex());
        if (!indexHealth.getValidationFailures().isEmpty()) {
          builder.startArray(Fields.VALIDATION_FAILURES);
          for (          String validationFailure : indexHealth.getValidationFailures()) {
            builder.value(validationFailure);
          }
          builder.endArray();
        }
        builder.endObject();
      }
    }
    builder.endArray();
  }
  if (outputIndices) {
    builder.startObject(Fields.INDICES);
    for (    ClusterIndexHealth indexHealth : indices.values()) {
      builder.startObject(indexHealth.getIndex(),XContentBuilder.FieldCaseConversion.NONE);
      indexHealth.toXContent(builder,params);
      builder.endObject();
    }
    builder.endObject();
  }
  return builder;
}
