{
  super.readFrom(in);
  clusterName=in.readString();
  activePrimaryShards=in.readVInt();
  activeShards=in.readVInt();
  relocatingShards=in.readVInt();
  initializingShards=in.readVInt();
  unassignedShards=in.readVInt();
  numberOfNodes=in.readVInt();
  numberOfDataNodes=in.readVInt();
  numberOfPendingTasks=in.readInt();
  status=ClusterHealthStatus.fromValue(in.readByte());
  int size=in.readVInt();
  for (int i=0; i < size; i++) {
    ClusterIndexHealth indexHealth=readClusterIndexHealth(in);
    indices.put(indexHealth.getIndex(),indexHealth);
  }
  timedOut=in.readBoolean();
  size=in.readVInt();
  if (size == 0) {
    validationFailures=ImmutableList.of();
  }
 else {
    for (int i=0; i < size; i++) {
      validationFailures.add(in.readString());
    }
  }
  numberOfInFlightFetch=in.readInt();
  if (in.getVersion().onOrAfter(Version.V_1_7_0)) {
    delayedUnassignedShards=in.readInt();
  }
}
