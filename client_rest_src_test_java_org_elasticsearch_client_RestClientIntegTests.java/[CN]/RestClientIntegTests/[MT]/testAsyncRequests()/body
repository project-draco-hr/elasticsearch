{
  int numRequests=randomIntBetween(5,20);
  final CountDownLatch latch=new CountDownLatch(numRequests);
  final List<TestResponse> responses=new CopyOnWriteArrayList<>();
  for (int i=0; i < numRequests; i++) {
    final String method=RestClientTestUtil.randomHttpMethod(getRandom());
    final int statusCode=randomStatusCode(getRandom());
    restClient.performRequest(method,"/" + statusCode,new ResponseListener(){
      @Override public void onSuccess(      Response response){
        responses.add(new TestResponse(method,statusCode,response));
        latch.countDown();
      }
      @Override public void onFailure(      Exception exception){
        responses.add(new TestResponse(method,statusCode,exception));
        latch.countDown();
      }
    }
);
  }
  assertTrue(latch.await(5,TimeUnit.SECONDS));
  assertEquals(numRequests,responses.size());
  for (  TestResponse response : responses) {
    assertEquals(response.method,response.getResponse().getRequestLine().getMethod());
    assertEquals(response.statusCode,response.getResponse().getStatusLine().getStatusCode());
  }
}
