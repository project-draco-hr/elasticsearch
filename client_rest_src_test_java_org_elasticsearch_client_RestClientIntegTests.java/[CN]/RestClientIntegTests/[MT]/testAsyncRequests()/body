{
  int numRequests=randomIntBetween(2,10);
  final CountDownLatch latch=new CountDownLatch(numRequests);
  for (int i=0; i < numRequests; i++) {
    final String method=RestClientTestUtil.randomHttpMethod(getRandom());
    final int statusCode=randomStatusCode(getRandom());
    restClient.performRequest(method,"/" + statusCode,new ResponseListener(){
      @Override public void onSuccess(      Response response){
        latch.countDown();
        assertResponse(response);
      }
      @Override public void onFailure(      Exception exception){
        latch.countDown();
        assertThat(exception,instanceOf(ResponseException.class));
        ResponseException responseException=(ResponseException)exception;
        assertResponse(responseException.getResponse());
      }
      private void assertResponse(      Response response){
        assertEquals(method,response.getRequestLine().getMethod());
        assertEquals(statusCode,response.getStatusLine().getStatusCode());
      }
    }
);
  }
  assertTrue(latch.await(5,TimeUnit.SECONDS));
}
