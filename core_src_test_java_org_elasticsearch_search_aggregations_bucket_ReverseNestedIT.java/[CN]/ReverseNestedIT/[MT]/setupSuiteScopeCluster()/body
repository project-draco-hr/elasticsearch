{
  assertAcked(prepareCreate("idx").addMapping("type1",jsonBuilder().startObject().startObject("properties").startObject("field1").field("type","keyword").endObject().startObject("nested1").field("type","nested").startObject("properties").startObject("field2").field("type","keyword").endObject().endObject().endObject().endObject().endObject()).addMapping("type2",jsonBuilder().startObject().startObject("properties").startObject("nested1").field("type","nested").startObject("properties").startObject("field1").field("type","keyword").endObject().startObject("nested2").field("type","nested").startObject("properties").startObject("field2").field("type","keyword").endObject().endObject().endObject().endObject().endObject().endObject().endObject()));
  insertType1(Arrays.asList("a","b","c"),Arrays.asList("1","2","3","4"));
  insertType1(Arrays.asList("b","c","d"),Arrays.asList("4","5","6","7"));
  insertType1(Arrays.asList("c","d","e"),Arrays.asList("7","8","9","1"));
  refresh();
  insertType1(Arrays.asList("a","e"),Arrays.asList("7","4","1","1"));
  insertType1(Arrays.asList("a","c"),Arrays.asList("2","1"));
  insertType1(Arrays.asList("a"),Arrays.asList("3","4"));
  refresh();
  insertType1(Arrays.asList("x","c"),Arrays.asList("1","8"));
  insertType1(Arrays.asList("y","c"),Arrays.asList("6"));
  insertType1(Arrays.asList("z"),Arrays.asList("5","9"));
  refresh();
  insertType2(new String[][]{new String[]{"a","0","0","1","2"},new String[]{"b","0","1","1","2"},new String[]{"a","0"}});
  insertType2(new String[][]{new String[]{"c","1","1","2","2"},new String[]{"d","3","4"}});
  refresh();
  insertType2(new String[][]{new String[]{"a","0","0","0","0"},new String[]{"b","0","0","0","0"}});
  insertType2(new String[][]{new String[]{"e","1","2"},new String[]{"f","3","4"}});
  refresh();
  ensureSearchable();
}
