{
  try {
    if (awaitBusy(new Predicate<Object>(){
      public boolean apply(      Object o){
        return MockInternalEngine.INFLIGHT_ENGINE_SEARCHERS.isEmpty();
      }
    }
,5,TimeUnit.SECONDS)) {
      return;
    }
  }
 catch (  InterruptedException ex) {
    if (MockInternalEngine.INFLIGHT_ENGINE_SEARCHERS.isEmpty()) {
      return;
    }
  }
  try {
    RuntimeException ex=null;
    StringBuilder builder=new StringBuilder("Unclosed Searchers instance for shards: [");
    for (    Entry<MockInternalEngine.AssertingSearcher,RuntimeException> entry : MockInternalEngine.INFLIGHT_ENGINE_SEARCHERS.entrySet()) {
      ex=entry.getValue();
      builder.append(entry.getKey().shardId()).append(",");
    }
    builder.append("]");
    throw new RuntimeException(builder.toString(),ex);
  }
  finally {
    MockInternalEngine.INFLIGHT_ENGINE_SEARCHERS.clear();
  }
}
