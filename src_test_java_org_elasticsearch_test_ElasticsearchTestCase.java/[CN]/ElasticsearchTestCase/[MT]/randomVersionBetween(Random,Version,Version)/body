{
  int minVersionIndex=SORTED_VERSIONS.size();
  if (minVersion != null) {
    minVersionIndex=SORTED_VERSIONS.indexOf(minVersion);
  }
  int maxVersionIndex=0;
  if (maxVersion != null) {
    maxVersionIndex=SORTED_VERSIONS.indexOf(maxVersion);
  }
  if (minVersionIndex == -1) {
    throw new IllegalArgumentException("minVersion [" + minVersion + "] does not exist.");
  }
 else   if (maxVersionIndex == -1) {
    throw new IllegalArgumentException("maxVersion [" + maxVersion + "] does not exist.");
  }
 else {
    int range=minVersionIndex + 1 - maxVersionIndex;
    return SORTED_VERSIONS.get(maxVersionIndex + random.nextInt(range));
  }
}
