{
  XContentParser parser=parseContext.parser();
  MapperService.SmartNameFieldMappers smartNameFieldMappers=null;
  Boolean cache=null;
  String filterName=null;
  String currentFieldName=null;
  CacheKeyFilter.Key cacheKey=null;
  XContentParser.Token token;
  String execution="plain";
  List<String> terms=Lists.newArrayList();
  String fieldName=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      fieldName=currentFieldName;
      while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
        String value=parser.text();
        if (value == null) {
          throw new QueryParsingException(parseContext.index(),"No value specified for term filter");
        }
        terms.add(value);
      }
    }
 else     if (token.isValue()) {
      if ("execution".equals(currentFieldName)) {
        execution=parser.text();
      }
 else       if ("_name".equals(currentFieldName)) {
        filterName=parser.text();
      }
 else       if ("_cache".equals(currentFieldName)) {
        cache=parser.booleanValue();
      }
 else       if ("_cache_key".equals(currentFieldName) || "_cacheKey".equals(currentFieldName)) {
        cacheKey=new CacheKeyFilter.Key(parser.text());
      }
 else {
        throw new QueryParsingException(parseContext.index(),"[terms] filter does not support [" + currentFieldName + "]");
      }
    }
  }
  if (fieldName == null) {
    throw new QueryParsingException(parseContext.index(),"bool filter requires a field name, followed by array of terms");
  }
  FieldMapper fieldMapper=null;
  smartNameFieldMappers=parseContext.smartFieldMappers(fieldName);
  if (smartNameFieldMappers != null) {
    if (smartNameFieldMappers.hasMapper()) {
      fieldMapper=smartNameFieldMappers.mapper();
      fieldName=fieldMapper.names().indexName();
    }
  }
  Filter filter;
  if ("plain".equals(execution)) {
    PublicTermsFilter termsFilter=new PublicTermsFilter();
    if (fieldMapper != null) {
      for (      String term : terms) {
        termsFilter.addTerm(fieldMapper.names().createIndexNameTerm(fieldMapper.indexedValue(term)));
      }
    }
 else {
      for (      String term : terms) {
        termsFilter.addTerm(new Term(fieldName,term));
      }
    }
    filter=termsFilter;
    if (cache == null || cache) {
      filter=parseContext.cacheFilter(filter,cacheKey);
    }
  }
 else   if ("bool".equals(execution)) {
    XBooleanFilter boolFiler=new XBooleanFilter();
    if (fieldMapper != null) {
      for (      String term : terms) {
        boolFiler.addShould(parseContext.cacheFilter(fieldMapper.fieldFilter(term,parseContext),null));
      }
    }
 else {
      for (      String term : terms) {
        boolFiler.addShould(parseContext.cacheFilter(new TermFilter(new Term(fieldName,term)),null));
      }
    }
    filter=boolFiler;
    if (cache != null && cache) {
      filter=parseContext.cacheFilter(filter,cacheKey);
    }
  }
 else   if ("bool_nocache".equals(execution)) {
    XBooleanFilter boolFiler=new XBooleanFilter();
    if (fieldMapper != null) {
      for (      String term : terms) {
        boolFiler.addShould(fieldMapper.fieldFilter(term,parseContext));
      }
    }
 else {
      for (      String term : terms) {
        boolFiler.addShould(new TermFilter(new Term(fieldName,term)));
      }
    }
    filter=boolFiler;
    if (cache == null || cache) {
      filter=parseContext.cacheFilter(filter,cacheKey);
    }
  }
 else   if ("and".equals(execution)) {
    List<Filter> filters=Lists.newArrayList();
    if (fieldMapper != null) {
      for (      String term : terms) {
        filters.add(parseContext.cacheFilter(fieldMapper.fieldFilter(term,parseContext),null));
      }
    }
 else {
      for (      String term : terms) {
        filters.add(parseContext.cacheFilter(new TermFilter(new Term(fieldName,term)),null));
      }
    }
    filter=new AndFilter(filters);
    if (cache != null && cache) {
      filter=parseContext.cacheFilter(filter,cacheKey);
    }
  }
 else   if ("and_nocache".equals(execution)) {
    List<Filter> filters=Lists.newArrayList();
    if (fieldMapper != null) {
      for (      String term : terms) {
        filters.add(fieldMapper.fieldFilter(term,parseContext));
      }
    }
 else {
      for (      String term : terms) {
        filters.add(new TermFilter(new Term(fieldName,term)));
      }
    }
    filter=new AndFilter(filters);
    if (cache == null || cache) {
      filter=parseContext.cacheFilter(filter,cacheKey);
    }
  }
 else {
    throw new QueryParsingException(parseContext.index(),"bool filter execution value [" + execution + "] not supported");
  }
  filter=wrapSmartNameFilter(filter,smartNameFieldMappers,parseContext);
  if (filterName != null) {
    parseContext.addNamedFilter(filterName,filter);
  }
  return filter;
}
