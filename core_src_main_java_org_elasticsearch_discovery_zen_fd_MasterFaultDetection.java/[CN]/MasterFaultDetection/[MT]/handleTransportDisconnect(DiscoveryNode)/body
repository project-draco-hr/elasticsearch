{
synchronized (masterNodeMutex) {
    if (!node.equals(this.masterNode)) {
      return;
    }
    if (connectOnNetworkDisconnect) {
      try {
        transportService.connectToNode(node);
        if (masterPinger != null) {
          masterPinger.stop();
        }
        this.masterPinger=new MasterPinger();
        threadPool.schedule(TimeValue.timeValueMillis(0),ThreadPool.Names.SAME,masterPinger);
      }
 catch (      Exception e) {
        logger.trace("[master] [{}] transport disconnected (with verified connect)",masterNode);
        notifyMasterFailure(masterNode,null,"transport disconnected (with verified connect)");
      }
    }
 else {
      logger.trace("[master] [{}] transport disconnected",node);
      notifyMasterFailure(node,null,"transport disconnected");
    }
  }
}
