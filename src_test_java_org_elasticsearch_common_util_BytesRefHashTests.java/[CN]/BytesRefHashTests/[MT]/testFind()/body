{
  BytesRefBuilder ref=new BytesRefBuilder();
  BytesRef scratch=new BytesRef();
  int num=scaledRandomIntBetween(2,20);
  for (int j=0; j < num; j++) {
    Set<String> strings=new HashSet<>();
    int uniqueCount=0;
    for (int i=0; i < 797; i++) {
      String str;
      do {
        str=TestUtil.randomRealisticUnicodeString(getRandom(),1000);
      }
 while (str.length() == 0);
      ref.copyChars(str);
      long count=hash.size();
      long key=hash.find(ref.get());
      if (key >= 0) {
        assertFalse(strings.add(str));
        assertTrue(key < count);
        assertEquals(str,hash.get(key,scratch).utf8ToString());
        assertEquals(count,hash.size());
      }
 else {
        key=hash.add(ref.get());
        assertTrue(strings.add(str));
        assertEquals(uniqueCount,key);
        assertEquals(hash.size(),count + 1);
        uniqueCount++;
      }
    }
    assertAllIn(strings,hash);
    newHash();
  }
  hash.close();
}
