{
  if (facets.size() == 1) {
    return facets.get(0);
  }
  InternalTermsFacet first=(InternalTermsFacet)facets.get(0);
  TObjectIntHashMap<String> aggregated=aggregateCache.get().get();
  aggregated.clear();
  for (  Facet facet : facets) {
    TermsFacet mFacet=(TermsFacet)facet;
    for (    TermsFacet.Entry entry : mFacet) {
      aggregated.adjustOrPutValue(entry.term(),entry.count(),entry.count());
    }
  }
  BoundedTreeSet<TermsFacet.Entry> ordered=new BoundedTreeSet<TermsFacet.Entry>(first.comparatorType().comparator(),first.requiredSize);
  for (TObjectIntIterator<String> it=aggregated.iterator(); it.hasNext(); ) {
    it.advance();
    ordered.add(new TermsFacet.Entry(it.key(),it.value()));
  }
  first.entries=ordered;
  return first;
}
