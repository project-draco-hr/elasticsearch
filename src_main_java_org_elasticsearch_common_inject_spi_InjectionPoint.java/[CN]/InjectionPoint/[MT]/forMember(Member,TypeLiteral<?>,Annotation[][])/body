{
  Errors errors=new Errors(member);
  Iterator<Annotation[]> annotationsIterator=Arrays.asList(paramterAnnotations).iterator();
  List<Dependency<?>> dependencies=Lists.newArrayList();
  int index=0;
  for (  TypeLiteral<?> parameterType : type.getParameterTypes(member)) {
    try {
      Annotation[] parameterAnnotations=annotationsIterator.next();
      Key<?> key=Annotations.getKey(parameterType,member,parameterAnnotations,errors);
      dependencies.add(newDependency(key,Nullability.allowsNull(parameterAnnotations),index));
      index++;
    }
 catch (    ErrorsException e) {
      errors.merge(e.getErrors());
    }
  }
  errors.throwConfigurationExceptionIfErrorsExist();
  return ImmutableList.copyOf(dependencies);
}
