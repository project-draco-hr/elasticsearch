{
  Builder builder;
  Version indexVersionCreated=parserContext.indexVersionCreated();
  if (indexVersionCreated.before(Version.V_2_2_0)) {
    builder=new LegacyGeoPointFieldMapper.Builder(name);
  }
 else   if (indexVersionCreated.onOrAfter(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {
    builder=new LatLonPointFieldMapper.Builder(name);
  }
 else {
    builder=new GeoPointFieldMapper.Builder(name);
  }
  parseField(builder,name,node,parserContext);
  for (Iterator<Map.Entry<String,Object>> iterator=node.entrySet().iterator(); iterator.hasNext(); ) {
    Map.Entry<String,Object> entry=iterator.next();
    String propName=entry.getKey();
    Object propNode=entry.getValue();
    if (indexVersionCreated.before(LatLonPointFieldMapper.LAT_LON_FIELD_VERSION)) {
      if (propName.equals("lat_lon")) {
        deprecationLogger.deprecated(CONTENT_TYPE + " lat_lon parameter is deprecated and will be removed " + "in the next major release");
        builder.enableLatLon(XContentMapValues.lenientNodeBooleanValue(propNode));
        iterator.remove();
      }
 else       if (propName.equals("precision_step")) {
        deprecationLogger.deprecated(CONTENT_TYPE + " precision_step parameter is deprecated and will be removed " + "in the next major release");
        builder.precisionStep(XContentMapValues.nodeIntegerValue(propNode));
        iterator.remove();
      }
 else       if (propName.equals("geohash")) {
        deprecationLogger.deprecated(CONTENT_TYPE + " geohash parameter is deprecated and will be removed " + "in the next major release");
        builder.enableGeoHash(XContentMapValues.lenientNodeBooleanValue(propNode));
        iterator.remove();
      }
 else       if (propName.equals("geohash_prefix")) {
        deprecationLogger.deprecated(CONTENT_TYPE + " geohash_prefix parameter is deprecated and will be removed " + "in the next major release");
        builder.geoHashPrefix(XContentMapValues.lenientNodeBooleanValue(propNode));
        if (XContentMapValues.lenientNodeBooleanValue(propNode)) {
          builder.enableGeoHash(true);
        }
        iterator.remove();
      }
 else       if (propName.equals("geohash_precision")) {
        deprecationLogger.deprecated(CONTENT_TYPE + " geohash_precision parameter is deprecated and will be removed " + "in the next major release");
        if (propNode instanceof Integer) {
          builder.geoHashPrecision(XContentMapValues.nodeIntegerValue(propNode));
        }
 else {
          builder.geoHashPrecision(GeoUtils.geoHashLevelsForPrecision(propNode.toString()));
        }
        iterator.remove();
      }
    }
    if (propName.equals(Names.IGNORE_MALFORMED)) {
      builder.ignoreMalformed(XContentMapValues.lenientNodeBooleanValue(propNode));
      iterator.remove();
    }
  }
  if (builder instanceof LegacyGeoPointFieldMapper.Builder) {
    return LegacyGeoPointFieldMapper.parse((LegacyGeoPointFieldMapper.Builder)builder,node,parserContext);
  }
 else   if (builder instanceof LatLonPointFieldMapper.Builder) {
    return (LatLonPointFieldMapper.Builder)builder;
  }
  return (GeoPointFieldMapper.Builder)builder;
}
