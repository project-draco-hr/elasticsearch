{
  final int numDocs=scaledRandomIntBetween(1,100);
  final double[][] array=new double[numDocs][];
  for (int i=0; i < numDocs; ++i) {
    final double[] values=new double[randomInt(4)];
    for (int j=0; j < values.length; ++j) {
      values[j]=randomDouble();
    }
    Arrays.sort(values);
    array[i]=values;
  }
  final SortedNumericDoubleValues multiValues=new SortedNumericDoubleValues(){
    int doc;
    @Override public double valueAt(    int index){
      return array[doc][index];
    }
    @Override public void setDocument(    int doc){
      this.doc=doc;
    }
    @Override public int count(){
      return array[doc].length;
    }
  }
;
  verify(multiValues,numDocs);
  final FixedBitSet rootDocs=randomRootDocs(numDocs);
  final FixedBitSet innerDocs=randomInnerDocs(rootDocs);
  verify(multiValues,numDocs,rootDocs,innerDocs);
}
