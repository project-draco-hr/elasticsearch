{
  final int numDocs=scaledRandomIntBetween(1,100);
  final int[] array=new int[numDocs];
  for (int i=0; i < array.length; ++i) {
    if (randomBoolean()) {
      array[i]=randomInt(1000);
    }
 else {
      array[i]=-1;
    }
  }
  final SortedDocValues singleValues=new SortedDocValues(){
    @Override public int getOrd(    int docID){
      return array[docID];
    }
    @Override public BytesRef lookupOrd(    int ord){
      throw new UnsupportedOperationException();
    }
    @Override public int getValueCount(){
      return 1 << 20;
    }
  }
;
  final RandomAccessOrds multiValues=(RandomAccessOrds)DocValues.singleton(singleValues);
  verify(multiValues,numDocs);
  final FixedBitSet rootDocs=randomRootDocs(numDocs);
  final FixedBitSet innerDocs=randomInnerDocs(rootDocs);
  verify(multiValues,numDocs,rootDocs,innerDocs);
}
