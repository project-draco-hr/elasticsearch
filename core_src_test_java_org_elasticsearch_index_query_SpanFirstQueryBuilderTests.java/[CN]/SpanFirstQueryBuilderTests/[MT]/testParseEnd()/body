{
{
    XContentBuilder builder=XContentFactory.jsonBuilder();
    builder.startObject();
    builder.startObject(SpanFirstQueryBuilder.NAME);
    builder.field("match");
    spanTermQuery("description","jumped").toXContent(builder,null);
    builder.endObject();
    builder.endObject();
    try {
      parseQuery(builder.string());
      fail("missing [end] parameter should raise exception");
    }
 catch (    ParsingException e) {
      assertTrue(e.getMessage().contains("spanFirst must have [end] set"));
    }
  }
{
    XContentBuilder builder=XContentFactory.jsonBuilder();
    builder.startObject();
    builder.startObject(SpanFirstQueryBuilder.NAME);
    builder.field("end",10);
    builder.endObject();
    builder.endObject();
    try {
      parseQuery(builder.string());
      fail("missing [match] parameter should raise exception");
    }
 catch (    ParsingException e) {
      assertTrue(e.getMessage().contains("spanFirst must have [match] span query clause"));
    }
  }
}
