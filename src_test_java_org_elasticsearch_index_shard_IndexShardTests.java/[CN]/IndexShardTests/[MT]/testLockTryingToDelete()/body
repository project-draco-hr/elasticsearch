{
  createIndex("test");
  ensureGreen();
  NodeEnvironment env=getInstanceFromNode(NodeEnvironment.class);
  Path[] shardPaths=env.availableShardPaths(new ShardId("test",0));
  logger.info("--> paths: [{}]",shardPaths);
  try {
    NodeEnvironment.acquireFSLockForPaths(Settings.EMPTY,shardPaths);
    fail("should not have been able to acquire the lock");
  }
 catch (  ElasticsearchException e) {
    assertTrue("msg: " + e.getMessage(),e.getMessage().contains("unable to acquire write.lock"));
  }
  ShardLock sLock=new DummyShardLock(new ShardId("test",0));
  try {
    env.deleteShardDirectoryUnderLock(sLock,Settings.builder().build());
    fail("should not have been able to delete the directory");
  }
 catch (  ElasticsearchException e) {
    assertTrue("msg: " + e.getMessage(),e.getMessage().contains("unable to acquire write.lock"));
  }
}
