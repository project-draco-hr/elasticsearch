{
  boolean initValue=randomBoolean();
  createIndex("test",settingsBuilder().put(IndexShard.INDEX_FLUSH_ON_CLOSE,initValue).build());
  ensureGreen();
  IndicesService indicesService=getInstanceFromNode(IndicesService.class);
  IndexService test=indicesService.indexService("test");
  IndexShard shard=test.shard(0);
  assertEquals(initValue,shard.isFlushOnClose());
  final boolean newValue=!initValue;
  assertAcked(client().admin().indices().prepareUpdateSettings("test").setSettings(settingsBuilder().put(IndexShard.INDEX_FLUSH_ON_CLOSE,newValue).build()));
  assertEquals(newValue,shard.isFlushOnClose());
  try {
    assertAcked(client().admin().indices().prepareUpdateSettings("test").setSettings(settingsBuilder().put(IndexShard.INDEX_FLUSH_ON_CLOSE,"FOOBAR").build()));
    fail("exception expected");
  }
 catch (  ElasticsearchIllegalArgumentException ex) {
  }
  assertEquals(newValue,shard.isFlushOnClose());
}
