{
  SearchResponse response=client().prepareSearch("idx").addAggregation(histogram("histo").field(MULTI_VALUED_FIELD_NAME).interval(interval).subAggregation(derivative("deriv").setBucketsPaths("_count"))).execute().actionGet();
  assertSearchResponse(response);
  InternalHistogram deriv=response.getAggregations().get("histo");
  assertThat(deriv,notNullValue());
  assertThat(deriv.getName(),equalTo("histo"));
  List<? extends Bucket> buckets=deriv.getBuckets();
  assertThat(deriv.getBuckets().size(),equalTo(numValuesBuckets));
  for (int i=0; i < numValuesBuckets; ++i) {
    Histogram.Bucket bucket=buckets.get(i);
    assertThat(bucket,notNullValue());
    assertThat(bucket.getKeyAsString(),equalTo(String.valueOf(i * interval)));
    assertThat(((Number)bucket.getKey()).longValue(),equalTo((long)i * interval));
    assertThat(bucket.getDocCount(),equalTo(valuesCounts[i]));
    SimpleValue docCountDeriv=bucket.getAggregations().get("deriv");
    if (i > 0) {
      assertThat(docCountDeriv,notNullValue());
      assertThat(docCountDeriv.value(),equalTo((double)firstDerivValuesCounts[i - 1]));
    }
 else {
      assertThat(docCountDeriv,nullValue());
    }
  }
}
