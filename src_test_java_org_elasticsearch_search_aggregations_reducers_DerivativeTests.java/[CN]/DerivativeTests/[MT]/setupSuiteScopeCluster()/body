{
  createIndex("idx");
  createIndex("idx_unmapped");
  numDocs=randomIntBetween(6,20);
  interval=randomIntBetween(2,5);
  numValueBuckets=numDocs / interval + 1;
  valueCounts=new long[numValueBuckets];
  for (int i=0; i < numDocs; i++) {
    final int bucket=(i + 1) / interval;
    valueCounts[bucket]++;
  }
  numValuesBuckets=(numDocs + 1) / interval + 1;
  valuesCounts=new long[numValuesBuckets];
  for (int i=0; i < numDocs; i++) {
    final int bucket1=(i + 1) / interval;
    final int bucket2=(i + 2) / interval;
    valuesCounts[bucket1]++;
    if (bucket1 != bucket2) {
      valuesCounts[bucket2]++;
    }
  }
  numFirstDerivValueBuckets=numValueBuckets - 1;
  firstDerivValueCounts=new long[numFirstDerivValueBuckets];
  long lastValueCount=-1;
  for (int i=0; i < numValueBuckets; i++) {
    long thisValue=valueCounts[i];
    if (lastValueCount != -1) {
      long diff=thisValue - lastValueCount;
      firstDerivValueCounts[i - 1]=diff;
    }
    lastValueCount=thisValue;
  }
  numSecondDerivValueBuckets=numFirstDerivValueBuckets - 1;
  secondDerivValueCounts=new long[numSecondDerivValueBuckets];
  long lastFirstDerivativeValueCount=-1;
  for (int i=0; i < numFirstDerivValueBuckets; i++) {
    long thisFirstDerivativeValue=firstDerivValueCounts[i];
    if (lastFirstDerivativeValueCount != -1) {
      long diff=thisFirstDerivativeValue - lastFirstDerivativeValueCount;
      secondDerivValueCounts[i - 1]=diff;
    }
    lastFirstDerivativeValueCount=thisFirstDerivativeValue;
  }
  numFirstDerivValuesBuckets=numValuesBuckets - 1;
  firstDerivValuesCounts=new long[numFirstDerivValuesBuckets];
  long lastValuesCount=-1;
  for (int i=0; i < numValuesBuckets; i++) {
    long thisValue=valuesCounts[i];
    if (lastValuesCount != -1) {
      long diff=thisValue - lastValuesCount;
      firstDerivValuesCounts[i - 1]=diff;
    }
    lastValuesCount=thisValue;
  }
  List<IndexRequestBuilder> builders=new ArrayList<>();
  for (int i=0; i < numDocs; i++) {
    builders.add(client().prepareIndex("idx","type").setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,i + 1).startArray(MULTI_VALUED_FIELD_NAME).value(i + 1).value(i + 2).endArray().field("tag","tag" + i).endObject()));
  }
  assertAcked(prepareCreate("empty_bucket_idx").addMapping("type",SINGLE_VALUED_FIELD_NAME,"type=integer"));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 0).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,0).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 1).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,1).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 2).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,2).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 3).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,2).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 4).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,4).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 5).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,4).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 6).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,5).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 7).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,5).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 8).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,9).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 9).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,9).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 10).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,9).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 11).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,10).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 12).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,10).endObject()));
  builders.add(client().prepareIndex("empty_bucket_idx","type","" + 13).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,11).endObject()));
  indexRandom(true,builders);
  ensureSearchable();
}
