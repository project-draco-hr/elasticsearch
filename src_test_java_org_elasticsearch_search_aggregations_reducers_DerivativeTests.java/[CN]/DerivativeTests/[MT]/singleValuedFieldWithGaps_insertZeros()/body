{
  SearchResponse searchResponse=client().prepareSearch("empty_bucket_idx").setQuery(matchAllQuery()).addAggregation(histogram("histo").field(SINGLE_VALUED_FIELD_NAME).interval(1).minDocCount(0).subAggregation(derivative("deriv").setBucketsPaths("_count").gapPolicy(GapPolicy.INSERT_ZEROS))).execute().actionGet();
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(14l));
  InternalHistogram deriv=searchResponse.getAggregations().get("histo");
  assertThat(deriv,Matchers.notNullValue());
  assertThat(deriv.getName(),equalTo("histo"));
  List<Histogram.Bucket> buckets=(List<Bucket>)deriv.getBuckets();
  assertThat(buckets.size(),equalTo(12));
  Histogram.Bucket bucket=buckets.get(0);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(0l));
  assertThat(bucket.getDocCount(),equalTo(1l));
  SimpleValue docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,nullValue());
  bucket=buckets.get(1);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(1l));
  assertThat(bucket.getDocCount(),equalTo(1l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(0d));
  bucket=buckets.get(2);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(2l));
  assertThat(bucket.getDocCount(),equalTo(2l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(1d));
  bucket=buckets.get(3);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(3l));
  assertThat(bucket.getDocCount(),equalTo(0l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(-2d));
  bucket=buckets.get(4);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(4l));
  assertThat(bucket.getDocCount(),equalTo(2l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(2d));
  bucket=buckets.get(5);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(5l));
  assertThat(bucket.getDocCount(),equalTo(2l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(0d));
  bucket=buckets.get(6);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(6l));
  assertThat(bucket.getDocCount(),equalTo(0l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(-2d));
  bucket=buckets.get(7);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(7l));
  assertThat(bucket.getDocCount(),equalTo(0l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(0d));
  bucket=buckets.get(8);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(8l));
  assertThat(bucket.getDocCount(),equalTo(0l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(0d));
  bucket=buckets.get(9);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(9l));
  assertThat(bucket.getDocCount(),equalTo(3l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(3d));
  bucket=buckets.get(10);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(10l));
  assertThat(bucket.getDocCount(),equalTo(2l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(-1d));
  bucket=buckets.get(11);
  assertThat(bucket,notNullValue());
  assertThat(((Number)bucket.getKey()).longValue(),equalTo(11l));
  assertThat(bucket.getDocCount(),equalTo(1l));
  docCountDeriv=bucket.getAggregations().get("deriv");
  assertThat(docCountDeriv,notNullValue());
  assertThat(docCountDeriv.value(),equalTo(-1d));
}
