{
  int numProcessors=randomInt(8);
  List<Processor> processors=new ArrayList<>(numProcessors);
  for (int i=0; i < numProcessors; i++) {
    processors.add(new Processor(){
      @Override public void execute(      IngestDocument ingestDocument) throws Exception {
        String existingValue=ingestDocument.getFieldValue("_value",String.class);
        ingestDocument.setFieldValue("_value",existingValue + ".");
      }
      @Override public String getType(){
        return null;
      }
      @Override public String getTag(){
        return null;
      }
    }
);
  }
  int numValues=randomIntBetween(1,32);
  List<String> values=new ArrayList<>(numValues);
  for (int i=0; i < numValues; i++) {
    values.add("");
  }
  IngestDocument ingestDocument=new IngestDocument("_index","_type","_id",null,null,null,null,Collections.singletonMap("values",values));
  ForEachProcessor processor=new ForEachProcessor("_tag","values",processors);
  processor.execute(ingestDocument);
  List<String> result=ingestDocument.getFieldValue("values",List.class);
  assertThat(result.size(),equalTo(numValues));
  String expectedString="";
  for (int i=0; i < numProcessors; i++) {
    expectedString=expectedString + ".";
  }
  for (  String r : result) {
    assertThat(r,equalTo(expectedString));
  }
}
