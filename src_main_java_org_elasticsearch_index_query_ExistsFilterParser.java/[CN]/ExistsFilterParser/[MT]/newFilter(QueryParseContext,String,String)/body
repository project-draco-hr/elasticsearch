{
  final FieldMappers fieldNamesMappers=parseContext.mapperService().indexName(FieldNamesFieldMapper.NAME);
  final FieldNamesFieldMapper fieldNamesMapper=(FieldNamesFieldMapper)fieldNamesMappers.mapper();
  MapperService.SmartNameObjectMapper smartNameObjectMapper=parseContext.smartObjectMapper(fieldPattern);
  if (smartNameObjectMapper != null && smartNameObjectMapper.hasMapper()) {
    fieldPattern=fieldPattern + ".*";
  }
  List<String> fields=parseContext.simpleMatchToIndexNames(fieldPattern);
  if (fields.isEmpty()) {
    return Queries.newMatchNoDocsFilter();
  }
  MapperService.SmartNameFieldMappers nonNullFieldMappers=null;
  BooleanQuery boolFilter=new BooleanQuery();
  for (  String field : fields) {
    MapperService.SmartNameFieldMappers smartNameFieldMappers=parseContext.smartFieldMappers(field);
    if (smartNameFieldMappers != null) {
      nonNullFieldMappers=smartNameFieldMappers;
    }
    Query filter=null;
    if (fieldNamesMapper != null && fieldNamesMapper.enabled()) {
      final String f;
      if (smartNameFieldMappers != null && smartNameFieldMappers.hasMapper()) {
        f=smartNameFieldMappers.mapper().names().indexName();
      }
 else {
        f=field;
      }
      filter=fieldNamesMapper.termFilter(f,parseContext);
    }
    if (filter == null && smartNameFieldMappers != null && smartNameFieldMappers.hasMapper()) {
      filter=smartNameFieldMappers.mapper().rangeFilter(null,null,true,true,parseContext);
    }
    if (filter == null) {
      filter=new TermRangeQuery(field,null,null,true,true);
    }
    boolFilter.add(filter,BooleanClause.Occur.SHOULD);
  }
  Filter filter=Queries.wrap(boolFilter);
  filter=parseContext.cacheFilter(filter,new HashedBytesRef("$exists$" + fieldPattern),parseContext.autoFilterCachePolicy());
  if (filterName != null) {
    parseContext.addNamedFilter(filterName,filter);
  }
  return filter;
}
