{
  cluster().startNode();
  createIndex("test");
  for (int i=0; i < 1000; i++) {
    client().prepareIndex("test","type1",Long.toString(i)).setSource(MapBuilder.<String,Object>newMapBuilder().put("test","value" + i).map()).execute().actionGet();
  }
  flush();
  for (int i=1000; i < 2000; i++) {
    client().prepareIndex("test","type1",Long.toString(i)).setSource(MapBuilder.<String,Object>newMapBuilder().put("test","value" + i).map()).execute().actionGet();
  }
  cluster().startNodesAsync(2).get();
  assertTimeout(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout("1m").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes("3"));
  cluster().startNodesAsync(2).get();
  setMinimumMasterNodes(3);
  assertTimeout(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout("1m").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes("5"));
  refresh();
  for (int i=0; i < 10; i++) {
    assertHitCount(client().prepareCount().setQuery(matchAllQuery()).get(),2000l);
  }
  cluster().stopRandomNode();
  assertTimeout(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout("1m").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes("4"));
  setMinimumMasterNodes(2);
  cluster().stopRandomNode();
  assertTimeout(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout("1m").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes("3"));
  refresh();
  for (int i=0; i < 10; i++) {
    assertHitCount(client().prepareCount().setQuery(matchAllQuery()).get(),2000l);
  }
  cluster().stopRandomNode();
  assertTimeout(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout("1m").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes("2"));
  setMinimumMasterNodes(1);
  cluster().stopRandomNode();
  assertTimeout(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout("1m").setWaitForYellowStatus().setWaitForRelocatingShards(0).setWaitForNodes("1"));
  refresh();
  for (int i=0; i < 10; i++) {
    assertHitCount(client().prepareCount().setQuery(matchAllQuery()).get(),2000l);
  }
}
