{
{
    IndexService service=createIndex("foo",Settings.EMPTY,"bar","_size","enabled=true");
    DocumentMapper docMapper=service.mapperService().documentMapper("bar");
    SizeFieldMapper mapper=docMapper.metadataMapper(SizeFieldMapper.class);
    assertThat(mapper.enabled(),is(true));
    MappedFieldType ft=mapper.fieldType();
    assertThat(ft.hasDocValues(),is(true));
    assertThat(mapper.fieldType(),instanceOf(NumberFieldMapper.NumberFieldType.class));
  }
{
    IndexService service=createIndex("foo2",Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.V_5_0_0_alpha4.id).build(),"bar","_size","enabled=true");
    DocumentMapper docMapper=service.mapperService().documentMapper("bar");
    SizeFieldMapper mapper=docMapper.metadataMapper(SizeFieldMapper.class);
    assertThat(mapper.enabled(),is(true));
    assertThat(mapper.fieldType().hasDocValues(),is(false));
    assertThat(mapper.fieldType(),instanceOf(NumberFieldMapper.NumberFieldType.class));
  }
{
    IndexService service=createIndex("foo3",Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.V_5_0_0_alpha1.id).build(),"bar","_size","enabled=true");
    DocumentMapper docMapper=service.mapperService().documentMapper("bar");
    SizeFieldMapper mapper=docMapper.metadataMapper(SizeFieldMapper.class);
    assertThat(mapper.enabled(),is(true));
    assertThat(mapper.fieldType().hasDocValues(),is(false));
    assertThat(mapper.fieldType(),instanceOf(LegacyNumberFieldMapper.NumberFieldType.class));
  }
}
