{
  boolean cache=componentSettings.getAsBoolean("memory.enabled",false);
  if (!cache) {
    return null;
  }
  SizeValue bufferSize=componentSettings.getAsSize("memory.buffer_size",new SizeValue(100,SizeUnit.KB));
  SizeValue cacheSize=componentSettings.getAsSize("memory.cache_size",new SizeValue(20,SizeUnit.MB));
  boolean direct=componentSettings.getAsBoolean("memory.direct",true);
  boolean warmCache=componentSettings.getAsBoolean("memory.warm_cache",true);
  Directory memDir;
  if (direct) {
    memDir=new ByteBufferDirectory((int)bufferSize.bytes(),(int)cacheSize.bytes(),true,warmCache);
  }
 else {
    memDir=new HeapDirectory(bufferSize,cacheSize,warmCache);
  }
  String[] primaryExtensions=componentSettings.getAsArray("memory.extensions",new String[]{"","del","gen"});
  return new SwitchDirectory(ImmutableSet.copyOf(primaryExtensions),memDir,fsDirectory,true);
}
