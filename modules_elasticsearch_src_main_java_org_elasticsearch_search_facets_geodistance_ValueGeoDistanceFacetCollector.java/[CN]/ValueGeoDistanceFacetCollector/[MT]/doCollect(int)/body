{
  if (!latFieldData.hasValue(doc) || !lonFieldData.hasValue(doc)) {
    return;
  }
  if (latFieldData.multiValued()) {
    double[] lats=latFieldData.doubleValues(doc);
    double[] lons=latFieldData.doubleValues(doc);
    double[] values=valueFieldData.multiValued() ? valueFieldData.doubleValues(doc) : null;
    for (int i=0; i < lats.length; i++) {
      double distance=geoDistance.calculate(lat,lon,lats[i],lons[i],unit);
      for (      GeoDistanceFacet.Entry entry : entries) {
        if (distance >= entry.getFrom() && distance < entry.getTo()) {
          entry.count++;
          if (values != null) {
            if (i < values.length) {
              entry.total+=values[i];
            }
          }
 else           if (valueFieldData.hasValue(doc)) {
            entry.total+=valueFieldData.doubleValue(doc);
          }
        }
      }
    }
  }
 else {
    double distance=geoDistance.calculate(lat,lon,latFieldData.doubleValue(doc),lonFieldData.doubleValue(doc),unit);
    for (    GeoDistanceFacet.Entry entry : entries) {
      if (distance >= entry.getFrom() && distance < entry.getTo()) {
        entry.count++;
        if (valueFieldData.multiValued()) {
          double[] values=valueFieldData.doubleValues(doc);
          for (          double value : values) {
            entry.total+=value;
          }
        }
 else         if (valueFieldData.hasValue(doc)) {
          entry.total+=valueFieldData.doubleValue(doc);
        }
      }
    }
  }
}
