{
  if (!fieldData.hasValue(doc)) {
    return;
  }
  if (fieldData.multiValued()) {
    GeoPoint[] points=fieldData.values(doc);
    double[] values=valueFieldData.multiValued() ? valueFieldData.doubleValues(doc) : null;
    for (int i=0; i < points.length; i++) {
      double distance=geoDistance.calculate(lat,lon,points[i].lat(),points[i].lon(),unit);
      for (      GeoDistanceFacet.Entry entry : entries) {
        if (distance >= entry.getFrom() && distance < entry.getTo()) {
          entry.count++;
          if (values != null) {
            if (i < values.length) {
              entry.total+=values[i];
            }
          }
 else           if (valueFieldData.hasValue(doc)) {
            entry.total+=valueFieldData.doubleValue(doc);
          }
        }
      }
    }
  }
 else {
    GeoPoint point=fieldData.value(doc);
    double distance=geoDistance.calculate(lat,lon,point.lat(),point.lon(),unit);
    for (    GeoDistanceFacet.Entry entry : entries) {
      if (distance >= entry.getFrom() && distance < entry.getTo()) {
        entry.count++;
        if (valueFieldData.multiValued()) {
          double[] values=valueFieldData.doubleValues(doc);
          for (          double value : values) {
            entry.total+=value;
          }
        }
 else         if (valueFieldData.hasValue(doc)) {
          entry.total+=valueFieldData.doubleValue(doc);
        }
      }
    }
  }
}
