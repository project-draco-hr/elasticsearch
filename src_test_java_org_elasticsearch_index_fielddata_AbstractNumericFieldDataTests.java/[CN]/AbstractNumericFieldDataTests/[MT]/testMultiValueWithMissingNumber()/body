{
  fillMultiValueWithMissing();
  IndexNumericFieldData indexFieldData=getForField("value");
  AtomicNumericFieldData fieldData=indexFieldData.load(refreshReader());
  assertThat(fieldData.getNumDocs(),equalTo(3));
  LongValues longValues=fieldData.getLongValues();
  assertThat(longValues.isMultiValued(),equalTo(true));
  assertThat(longValues.hasValue(0),equalTo(true));
  assertThat(longValues.hasValue(1),equalTo(false));
  assertThat(longValues.hasValue(2),equalTo(true));
  assertThat(longValues.getValue(0),equalTo(2l));
  assertThat(longValues.getValue(2),equalTo(3l));
  assertThat(longValues.getValueMissing(0,-1),equalTo(2l));
  assertThat(longValues.getValueMissing(1,-1),equalTo(-1l));
  assertThat(longValues.getValueMissing(2,-1),equalTo(3l));
  assertThat(longValues.setDocument(0),equalTo(2));
  assertThat(longValues.nextValue(),equalTo(2l));
  assertThat(longValues.nextValue(),equalTo(4l));
  assertThat(longValues.setDocument(1),equalTo(0));
  assertThat(longValues.setDocument(2),equalTo(1));
  assertThat(longValues.nextValue(),equalTo(3l));
  DoubleValues doubleValues=fieldData.getDoubleValues();
  assertThat(doubleValues.isMultiValued(),equalTo(true));
  assertThat(doubleValues.hasValue(0),equalTo(true));
  assertThat(doubleValues.hasValue(1),equalTo(false));
  assertThat(doubleValues.hasValue(2),equalTo(true));
  assertThat(doubleValues.getValue(0),equalTo(2d));
  assertThat(doubleValues.getValue(2),equalTo(3d));
  assertThat(doubleValues.getValueMissing(0,-1),equalTo(2d));
  assertThat(doubleValues.getValueMissing(1,-1),equalTo(-1d));
  assertThat(doubleValues.getValueMissing(2,-1),equalTo(3d));
  assertThat(2,equalTo(doubleValues.setDocument(0)));
  assertThat(doubleValues.nextValue(),equalTo(2d));
  assertThat(doubleValues.nextValue(),equalTo(4d));
  assertThat(0,equalTo(doubleValues.setDocument(1)));
  assertThat(1,equalTo(doubleValues.setDocument(2)));
  assertThat(doubleValues.nextValue(),equalTo(3d));
}
