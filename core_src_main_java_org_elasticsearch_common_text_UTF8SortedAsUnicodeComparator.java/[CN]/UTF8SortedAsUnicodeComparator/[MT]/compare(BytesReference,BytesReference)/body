{
  if (a.hasArray() && b.hasArray()) {
    final byte[] aBytes=a.array();
    int aUpto=a.arrayOffset();
    final byte[] bBytes=b.array();
    int bUpto=b.arrayOffset();
    final int aStop=aUpto + Math.min(a.length(),b.length());
    while (aUpto < aStop) {
      int aByte=aBytes[aUpto++] & 0xff;
      int bByte=bBytes[bUpto++] & 0xff;
      int diff=aByte - bByte;
      if (diff != 0) {
        return diff;
      }
    }
    return a.length() - b.length();
  }
 else {
    final byte[] aBytes=a.toBytes();
    int aUpto=0;
    final byte[] bBytes=b.toBytes();
    int bUpto=0;
    final int aStop=aUpto + Math.min(a.length(),b.length());
    while (aUpto < aStop) {
      int aByte=aBytes[aUpto++] & 0xff;
      int bByte=bBytes[bUpto++] & 0xff;
      int diff=aByte - bByte;
      if (diff != 0) {
        return diff;
      }
    }
    return a.length() - b.length();
  }
}
