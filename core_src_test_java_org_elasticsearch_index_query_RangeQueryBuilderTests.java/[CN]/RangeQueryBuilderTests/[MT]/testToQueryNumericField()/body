{
  assumeTrue("test runs only when at least a type is registered",getCurrentTypes().length > 0);
  Query parsedQuery=rangeQuery(INT_FIELD_NAME).from(23).to(54).includeLower(true).includeUpper(false).toQuery(createShardContext());
  assertThat(parsedQuery,either(instanceOf(LegacyNumericRangeQuery.class)).or(instanceOf(PointRangeQuery.class)));
  if (parsedQuery instanceof LegacyNumericRangeQuery) {
    LegacyNumericRangeQuery rangeQuery=(LegacyNumericRangeQuery)parsedQuery;
    assertThat(rangeQuery.getField(),equalTo(INT_FIELD_NAME));
    assertThat(rangeQuery.getMin().intValue(),equalTo(23));
    assertThat(rangeQuery.getMax().intValue(),equalTo(54));
    assertThat(rangeQuery.includesMin(),equalTo(true));
    assertThat(rangeQuery.includesMax(),equalTo(false));
  }
 else {
    assertEquals(IntPoint.newRangeQuery(INT_FIELD_NAME,23,53),parsedQuery);
  }
}
