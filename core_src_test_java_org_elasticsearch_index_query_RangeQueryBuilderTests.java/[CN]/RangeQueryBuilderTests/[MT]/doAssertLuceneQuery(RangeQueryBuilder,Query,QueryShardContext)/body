{
  if (getCurrentTypes().length == 0 || (queryBuilder.fieldName().equals(DATE_FIELD_NAME) == false && queryBuilder.fieldName().equals(INT_FIELD_NAME) == false)) {
    assertThat(query,instanceOf(TermRangeQuery.class));
    TermRangeQuery termRangeQuery=(TermRangeQuery)query;
    assertThat(termRangeQuery.getField(),equalTo(queryBuilder.fieldName()));
    assertThat(termRangeQuery.getLowerTerm(),equalTo(BytesRefs.toBytesRef(queryBuilder.from())));
    assertThat(termRangeQuery.getUpperTerm(),equalTo(BytesRefs.toBytesRef(queryBuilder.to())));
    assertThat(termRangeQuery.includesLower(),equalTo(queryBuilder.includeLower()));
    assertThat(termRangeQuery.includesUpper(),equalTo(queryBuilder.includeUpper()));
  }
 else   if (queryBuilder.fieldName().equals(DATE_FIELD_NAME)) {
  }
 else   if (queryBuilder.fieldName().equals(INT_FIELD_NAME)) {
    assertThat(query,either(instanceOf(LegacyNumericRangeQuery.class)).or(instanceOf(PointRangeQuery.class)));
    if (query instanceof LegacyNumericRangeQuery) {
      LegacyNumericRangeQuery numericRangeQuery=(LegacyNumericRangeQuery)query;
      assertThat(numericRangeQuery.getField(),equalTo(queryBuilder.fieldName()));
      assertThat(numericRangeQuery.getMin(),equalTo(queryBuilder.from()));
      assertThat(numericRangeQuery.getMax(),equalTo(queryBuilder.to()));
      assertThat(numericRangeQuery.includesMin(),equalTo(queryBuilder.includeLower()));
      assertThat(numericRangeQuery.includesMax(),equalTo(queryBuilder.includeUpper()));
    }
 else {
      Integer min=(Integer)queryBuilder.from();
      Integer max=(Integer)queryBuilder.to();
      int minInt, maxInt;
      if (min == null) {
        minInt=Integer.MIN_VALUE;
      }
 else {
        minInt=min.intValue();
        if (queryBuilder.includeLower() == false && minInt != Integer.MAX_VALUE) {
          minInt++;
        }
      }
      if (max == null) {
        maxInt=Integer.MAX_VALUE;
      }
 else {
        maxInt=max.intValue();
        if (queryBuilder.includeUpper() == false && maxInt != Integer.MIN_VALUE) {
          maxInt--;
        }
      }
      try {
        assertEquals(IntPoint.newRangeQuery(INT_FIELD_NAME,minInt,maxInt),query);
      }
 catch (      AssertionError e) {
        throw e;
      }
    }
  }
 else {
    throw new UnsupportedOperationException();
  }
}
