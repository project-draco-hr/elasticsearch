{
  assumeTrue("test runs only when at least a type is registered",getCurrentTypes().length > 0);
  long startDate=System.currentTimeMillis();
  String query="{\n" + "    \"range\" : {\n" + "        \"" + DATE_FIELD_NAME + "\" : {\n"+ "            \"gte\": \"2012-01-01\",\n"+ "            \"lte\": \"now\",\n"+ "            \"time_zone\": \"+01:00\"\n"+ "        }\n"+ "    }\n"+ "}";
  Query parsedQuery=parseQuery(query).toQuery(createShardContext()).rewrite(null);
  if (parsedQuery instanceof PointRangeQuery) {
  }
 else {
    assertThat(parsedQuery,instanceOf(LegacyNumericRangeQuery.class));
    DateTime min=DateTime.parse("2012-01-01T00:00:00.000+01:00");
    DateTime max=new DateTime(startDate,DateTimeZone.UTC);
    assertThat(((LegacyNumericRangeQuery)parsedQuery).getMin().longValue(),is(min.getMillis()));
    assertThat(((LegacyNumericRangeQuery)parsedQuery).getMax().longValue() - max.getMillis(),lessThanOrEqualTo(60000L));
  }
  query="{\n" + "    \"range\" : {\n" + "        \"" + INT_FIELD_NAME + "\" : {\n"+ "            \"gte\": \"0\",\n"+ "            \"lte\": \"100\",\n"+ "            \"time_zone\": \"-01:00\"\n"+ "        }\n"+ "    }\n"+ "}";
  try {
    parseQuery(query).toQuery(createShardContext());
    fail("A Range Query on a numeric field with a TimeZone should raise a ParsingException");
  }
 catch (  QueryShardException e) {
  }
}
