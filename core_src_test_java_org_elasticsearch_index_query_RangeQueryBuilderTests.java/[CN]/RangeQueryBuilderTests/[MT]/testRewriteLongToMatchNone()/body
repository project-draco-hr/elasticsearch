{
  String fieldName=randomAsciiOfLengthBetween(1,20);
  RangeQueryBuilder query=new RangeQueryBuilder(fieldName);
  int queryFromValue=randomIntBetween(-1000000,1000000);
  int queryToValue=randomIntBetween(queryFromValue,2000000);
  query.from((long)queryFromValue);
  query.to((long)queryToValue);
  QueryShardContext queryShardContext=queryShardContext();
  FieldStatsProvider fieldStatsProvider=new FieldStatsProvider(null,null){
    @Override public Relation isFieldWithinQuery(    String fieldName,    Object from,    Object to,    boolean includeLower,    boolean includeUpper,    DateTimeZone timeZone,    DateMathParser dateMathParser) throws IOException {
      return Relation.DISJOINT;
    }
  }
;
  queryShardContext.setFieldStatsProvider(fieldStatsProvider);
  QueryBuilder<?> rewritten=query.rewrite(queryShardContext);
  assertThat(rewritten,instanceOf(MatchNoneQueryBuilder.class));
}
