{
  Set<String> side1=new HashSet<>();
  Set<String> side2=new HashSet<>(Arrays.asList(internalCluster().getNodeNames()));
  side1.add(isolatedNode);
  side2.remove(isolatedNode);
  NetworkPartition partition;
  if (randomBoolean()) {
    partition=new NetworkUnresponsivePartition(side1,side2,getRandom());
  }
 else {
    partition=new NetworkDisconnectPartition(side1,side2,getRandom());
  }
  internalCluster().setDisruptionScheme(partition);
  return partition;
}
