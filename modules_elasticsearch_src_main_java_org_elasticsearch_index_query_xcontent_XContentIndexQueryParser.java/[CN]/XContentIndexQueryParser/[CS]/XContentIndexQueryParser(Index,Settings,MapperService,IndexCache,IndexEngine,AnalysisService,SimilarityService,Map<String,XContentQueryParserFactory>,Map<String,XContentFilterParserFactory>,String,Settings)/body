{
  super(index,indexSettings);
  this.name=name;
  this.mapperService=mapperService;
  this.similarityService=similarityService;
  this.indexCache=indexCache;
  this.indexEngine=indexEngine;
  List<XContentQueryParser> queryParsers=newArrayList();
  if (namedQueryParsers != null) {
    Map<String,Settings> queryParserGroups=indexSettings.getGroups(XContentIndexQueryParser.Defaults.QUERY_PREFIX);
    for (    Map.Entry<String,XContentQueryParserFactory> entry : namedQueryParsers.entrySet()) {
      String queryParserName=entry.getKey();
      XContentQueryParserFactory queryParserFactory=entry.getValue();
      Settings queryParserSettings=queryParserGroups.get(queryParserName);
      if (queryParserSettings == null) {
        queryParserSettings=EMPTY_SETTINGS;
      }
      queryParsers.add(queryParserFactory.create(queryParserName,queryParserSettings));
    }
  }
  List<XContentFilterParser> filterParsers=newArrayList();
  if (namedFilterParsers != null) {
    Map<String,Settings> filterParserGroups=indexSettings.getGroups(XContentIndexQueryParser.Defaults.FILTER_PREFIX);
    for (    Map.Entry<String,XContentFilterParserFactory> entry : namedFilterParsers.entrySet()) {
      String filterParserName=entry.getKey();
      XContentFilterParserFactory filterParserFactory=entry.getValue();
      Settings filterParserSettings=filterParserGroups.get(filterParserName);
      if (filterParserSettings == null) {
        filterParserSettings=EMPTY_SETTINGS;
      }
      filterParsers.add(filterParserFactory.create(filterParserName,filterParserSettings));
    }
  }
  this.queryParserRegistry=new XContentQueryParserRegistry(index,indexSettings,analysisService,queryParsers,filterParsers);
}
