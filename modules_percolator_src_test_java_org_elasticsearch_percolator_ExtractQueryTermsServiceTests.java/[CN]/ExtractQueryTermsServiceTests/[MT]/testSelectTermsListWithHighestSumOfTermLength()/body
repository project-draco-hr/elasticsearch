{
  Set<Term> terms1=new HashSet<>();
  int shortestTerms1Length=Integer.MAX_VALUE;
  int sumTermLength=randomIntBetween(1,128);
  while (sumTermLength > 0) {
    int length=randomInt(sumTermLength);
    shortestTerms1Length=Math.min(shortestTerms1Length,length);
    terms1.add(new Term("field",randomAsciiOfLength(length)));
    sumTermLength-=length;
  }
  Set<Term> terms2=new HashSet<>();
  int shortestTerms2Length=Integer.MAX_VALUE;
  sumTermLength=randomIntBetween(1,128);
  while (sumTermLength > 0) {
    int length=randomInt(sumTermLength);
    shortestTerms2Length=Math.min(shortestTerms2Length,length);
    terms2.add(new Term("field",randomAsciiOfLength(length)));
    sumTermLength-=length;
  }
  Set<Term> result=selectTermListWithTheLongestShortestTerm(terms1,terms2);
  Set<Term> expected=shortestTerms1Length >= shortestTerms2Length ? terms1 : terms2;
  assertThat(result,sameInstance(expected));
}
