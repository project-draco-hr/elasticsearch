{
  BooleanQuery.Builder builder=new BooleanQuery.Builder();
  TermQuery termQuery1=new TermQuery(new Term("_field","_term"));
  builder.add(termQuery1,BooleanClause.Occur.SHOULD);
  PhraseQuery phraseQuery=new PhraseQuery("_field","_term1","term2");
  builder.add(phraseQuery,BooleanClause.Occur.SHOULD);
  BooleanQuery.Builder subBuilder=new BooleanQuery.Builder();
  TermQuery termQuery2=new TermQuery(new Term("_field1","_term"));
  subBuilder.add(termQuery2,BooleanClause.Occur.MUST);
  TermQuery termQuery3=new TermQuery(new Term("_field3","_long_term"));
  subBuilder.add(termQuery3,BooleanClause.Occur.MUST);
  builder.add(subBuilder.build(),BooleanClause.Occur.SHOULD);
  BooleanQuery booleanQuery=builder.build();
  List<Term> terms=new ArrayList<>(extractQueryTerms(booleanQuery));
  Collections.sort(terms);
  assertThat(terms.size(),equalTo(3));
  assertThat(terms.get(0).field(),equalTo(termQuery1.getTerm().field()));
  assertThat(terms.get(0).bytes(),equalTo(termQuery1.getTerm().bytes()));
  assertThat(terms.get(1).field(),equalTo(phraseQuery.getTerms()[0].field()));
  assertThat(terms.get(1).bytes(),equalTo(phraseQuery.getTerms()[0].bytes()));
  assertThat(terms.get(2).field(),equalTo(termQuery3.getTerm().field()));
  assertThat(terms.get(2).bytes(),equalTo(termQuery3.getTerm().bytes()));
}
