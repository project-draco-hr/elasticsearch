{
  BooleanQuery.Builder builder=new BooleanQuery.Builder();
  TermQuery termQuery1=new TermQuery(new Term("_field","_term1"));
  builder.add(termQuery1,BooleanClause.Occur.SHOULD);
  TermQuery termQuery2=new TermQuery(new Term("_field","_term2"));
  builder.add(termQuery2,BooleanClause.Occur.SHOULD);
  Result result=extractQueryTerms(builder.build());
  assertThat("All clauses are exact, so candidate matches are verified",result.verified,is(true));
  builder=new BooleanQuery.Builder();
  builder.add(termQuery1,BooleanClause.Occur.SHOULD);
  PhraseQuery phraseQuery1=new PhraseQuery("_field","_term1","_term2");
  builder.add(phraseQuery1,BooleanClause.Occur.SHOULD);
  result=extractQueryTerms(builder.build());
  assertThat("Clause isn't exact, so candidate matches are not verified",result.verified,is(false));
  builder=new BooleanQuery.Builder();
  builder.add(phraseQuery1,BooleanClause.Occur.SHOULD);
  PhraseQuery phraseQuery2=new PhraseQuery("_field","_term3","_term4");
  builder.add(phraseQuery2,BooleanClause.Occur.SHOULD);
  result=extractQueryTerms(builder.build());
  assertThat("No clause is exact, so candidate matches are not verified",result.verified,is(false));
  builder=new BooleanQuery.Builder();
  builder.add(termQuery1,BooleanClause.Occur.MUST_NOT);
  builder.add(termQuery2,BooleanClause.Occur.SHOULD);
  result=extractQueryTerms(builder.build());
  assertThat("There is a must_not clause, so candidate matches are not verified",result.verified,is(false));
  builder=new BooleanQuery.Builder();
  builder.setMinimumNumberShouldMatch(randomIntBetween(2,32));
  builder.add(termQuery1,BooleanClause.Occur.SHOULD);
  builder.add(termQuery2,BooleanClause.Occur.SHOULD);
  result=extractQueryTerms(builder.build());
  assertThat("Minimum match is >= 1, so candidate matches are not verified",result.verified,is(false));
  builder=new BooleanQuery.Builder();
  builder.add(termQuery1,randomBoolean() ? BooleanClause.Occur.MUST : BooleanClause.Occur.FILTER);
  result=extractQueryTerms(builder.build());
  assertThat("Single required clause, so candidate matches are verified",result.verified,is(false));
  builder=new BooleanQuery.Builder();
  builder.add(termQuery1,randomBoolean() ? BooleanClause.Occur.MUST : BooleanClause.Occur.FILTER);
  builder.add(termQuery2,randomBoolean() ? BooleanClause.Occur.MUST : BooleanClause.Occur.FILTER);
  result=extractQueryTerms(builder.build());
  assertThat("Two or more required clauses, so candidate matches are not verified",result.verified,is(false));
  builder=new BooleanQuery.Builder();
  builder.add(termQuery1,randomBoolean() ? BooleanClause.Occur.MUST : BooleanClause.Occur.FILTER);
  builder.add(termQuery2,BooleanClause.Occur.MUST_NOT);
  result=extractQueryTerms(builder.build());
  assertThat("Required and prohibited clauses, so candidate matches are not verified",result.verified,is(false));
}
