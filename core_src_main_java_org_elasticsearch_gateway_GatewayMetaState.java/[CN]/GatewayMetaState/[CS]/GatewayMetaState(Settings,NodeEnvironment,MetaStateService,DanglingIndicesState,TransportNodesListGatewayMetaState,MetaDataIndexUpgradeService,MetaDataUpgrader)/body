{
  super(settings);
  this.nodeEnv=nodeEnv;
  this.metaStateService=metaStateService;
  this.danglingIndicesState=danglingIndicesState;
  nodesListGatewayMetaState.init(this);
  if (DiscoveryNode.isDataNode(settings)) {
    ensureNoPre019ShardState(nodeEnv);
  }
  if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {
    nodeEnv.ensureAtomicMoveSupported();
  }
  if (DiscoveryNode.isMasterNode(settings) || DiscoveryNode.isDataNode(settings)) {
    try {
      ensureNoPre019State();
      IndexFolderUpgrader.upgradeIndicesIfNeeded(settings,nodeEnv);
      final MetaData metaData=metaStateService.loadFullState();
      final MetaData upgradedMetaData=upgradeMetaData(metaData,metaDataIndexUpgradeService,metaDataUpgrader);
      if (metaData != upgradedMetaData) {
        if (MetaData.isGlobalStateEquals(metaData,upgradedMetaData) == false) {
          metaStateService.writeGlobalState("upgrade",upgradedMetaData);
        }
        for (        IndexMetaData indexMetaData : upgradedMetaData) {
          if (metaData.hasIndexMetaData(indexMetaData) == false) {
            metaStateService.writeIndex("upgrade",indexMetaData);
          }
        }
      }
      long startNS=System.nanoTime();
      metaStateService.loadFullState();
      logger.debug("took {} to load state",TimeValue.timeValueMillis(TimeValue.nsecToMSec(System.nanoTime() - startNS)));
    }
 catch (    Exception e) {
      logger.error("failed to read local state, exiting...",e);
      throw e;
    }
  }
}
