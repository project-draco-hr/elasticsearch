{
  RestoreSnapshotRequest restoreSnapshotRequest=restoreSnapshotRequest(request.param("repository"),request.param("snapshot"));
  restoreSnapshotRequest.masterNodeTimeout(request.paramAsTime("master_timeout",restoreSnapshotRequest.masterNodeTimeout()));
  restoreSnapshotRequest.waitForCompletion(request.paramAsBoolean("wait_for_completion",false));
  restoreSnapshotRequest.source(request.content().toUtf8());
  client.admin().cluster().restoreSnapshot(restoreSnapshotRequest,new ActionListener<RestoreSnapshotResponse>(){
    @Override public void onResponse(    RestoreSnapshotResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        response.toXContent(builder,request);
        builder.endObject();
        channel.sendResponse(new BytesRestResponse(OK,builder));
      }
 catch (      IOException e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new BytesRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
