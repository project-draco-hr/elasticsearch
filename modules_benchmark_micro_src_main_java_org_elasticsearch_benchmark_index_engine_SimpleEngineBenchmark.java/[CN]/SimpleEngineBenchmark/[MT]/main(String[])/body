{
  ShardId shardId=new ShardId(new Index("index"),1);
  Settings settings=EMPTY_SETTINGS;
  Store store=new ByteBufferStore(shardId,settings,null,new ByteBufferCache(settings));
  store.deleteContent();
  ThreadPool threadPool=new ThreadPool();
  SnapshotDeletionPolicy deletionPolicy=new SnapshotDeletionPolicy(new KeepOnlyLastDeletionPolicy(shardId,settings));
  Engine engine=new RobinEngine(shardId,settings,new IndexSettingsService(shardId.index(),settings),store,deletionPolicy,new FsTranslog(shardId,EMPTY_SETTINGS,new File("work/fs-translog"),false),new LogByteSizeMergePolicyProvider(store,new IndexSettingsService(shardId.index(),EMPTY_SETTINGS)),new ConcurrentMergeSchedulerProvider(shardId,settings),new AnalysisService(shardId.index()),new SimilarityService(shardId.index()),new NonBloomCache(shardId.index()));
  engine.start();
  SimpleEngineBenchmark benchmark=new SimpleEngineBenchmark(store,engine).numberOfContentItems(1000).searcherThreads(50).searcherIterations(10000).writerThreads(10).writerIterations(10000).refreshSchedule(new TimeValue(1,TimeUnit.SECONDS)).flushSchedule(new TimeValue(1,TimeUnit.MINUTES)).create(false).build();
  benchmark.run();
  engine.close();
  store.close();
  threadPool.shutdown();
}
