{
  for (  Thread t : searcherThreads) {
    t.start();
  }
  for (  Thread t : writerThreads) {
    t.start();
  }
  barrier1.await();
  Refresher refresher=new Refresher();
  scheduledExecutorService.scheduleWithFixedDelay(refresher,refreshSchedule.millis(),refreshSchedule.millis(),TimeUnit.MILLISECONDS);
  Flusher flusher=new Flusher();
  scheduledExecutorService.scheduleWithFixedDelay(flusher,flushSchedule.millis(),flushSchedule.millis(),TimeUnit.MILLISECONDS);
  StopWatch stopWatch=new StopWatch();
  stopWatch.start();
  barrier2.await();
  latch.await();
  stopWatch.stop();
  System.out.println("Summary");
  System.out.println("   -- Readers [" + searcherThreads.length + "] with ["+ searcherIterations+ "] iterations");
  System.out.println("   -- Writers [" + writerThreads.length + "] with ["+ writerIterations+ "] iterations");
  System.out.println("   -- Took: " + stopWatch.totalTime());
  System.out.println("   -- Refresh [" + refresher.id + "] took: "+ refresher.stopWatch.totalTime());
  System.out.println("   -- Flush [" + flusher.id + "] took: "+ flusher.stopWatch.totalTime());
  System.out.println("   -- Store size " + store.estimateSize());
  scheduledExecutorService.shutdown();
  engine.refresh(new Engine.Refresh(true));
  stopWatch=new StopWatch();
  stopWatch.start();
  Engine.Searcher searcher=engine.searcher();
  TopDocs topDocs=searcher.searcher().search(new MatchAllDocsQuery(),idGenerator.get() + 1);
  stopWatch.stop();
  System.out.println("   -- Indexed [" + idGenerator.get() + "] docs, found ["+ topDocs.totalHits+ "] hits, took "+ stopWatch.totalTime());
  searcher.release();
}
