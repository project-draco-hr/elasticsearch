{
  AllocationService strategy=new AllocationService(settingsBuilder().build());
  MetaData metaData=newMetaDataBuilder().put(newIndexMetaDataBuilder("disabled").settings(ImmutableSettings.builder().put(DisableAllocationDecider.INDEX_ROUTING_ALLOCATION_DISABLE_ALLOCATION,true).put(DisableAllocationDecider.INDEX_ROUTING_ALLOCATION_DISABLE_NEW_ALLOCATION,true)).numberOfShards(1).numberOfReplicas(1)).put(newIndexMetaDataBuilder("enabled").numberOfShards(1).numberOfReplicas(1)).build();
  RoutingTable routingTable=routingTable().addAsNew(metaData.index("disabled")).addAsNew(metaData.index("enabled")).build();
  ClusterState clusterState=newClusterStateBuilder().metaData(metaData).routingTable(routingTable).build();
  logger.info("--> adding two nodes and do rerouting");
  clusterState=newClusterStateBuilder().state(clusterState).nodes(newNodesBuilder().put(newNode("node1")).put(newNode("node2"))).build();
  routingTable=strategy.reroute(clusterState).routingTable();
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  assertThat(clusterState.routingNodes().shardsWithState(INITIALIZING).size(),equalTo(1));
  logger.info("--> start the shards (primaries)");
  routingTable=strategy.applyStartedShards(clusterState,clusterState.routingNodes().shardsWithState(INITIALIZING)).routingTable();
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  logger.info("--> start the shards (replicas)");
  routingTable=strategy.applyStartedShards(clusterState,clusterState.routingNodes().shardsWithState(INITIALIZING)).routingTable();
  clusterState=newClusterStateBuilder().state(clusterState).routingTable(routingTable).build();
  logger.info("--> verify only enabled index has been routed");
  assertThat(clusterState.readOnlyRoutingNodes().shardsWithState("enabled",STARTED).size(),equalTo(2));
  assertThat(clusterState.readOnlyRoutingNodes().shardsWithState("disabled",STARTED).size(),equalTo(0));
}
