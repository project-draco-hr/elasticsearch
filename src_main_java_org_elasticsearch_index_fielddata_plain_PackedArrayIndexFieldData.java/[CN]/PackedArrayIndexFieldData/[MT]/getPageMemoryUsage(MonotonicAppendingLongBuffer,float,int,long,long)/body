{
  int bitsRequired;
  long pageMemorySize=0;
  PackedInts.FormatAndBits formatAndBits;
  if (pageMaxOrdinal == Long.MIN_VALUE) {
    pageMemorySize+=RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + RamUsageEstimator.NUM_BYTES_INT);
  }
 else {
    long pageMinValue=values.get(pageMinOrdinal);
    long pageMaxValue=values.get(pageMaxOrdinal);
    long pageDelta=pageMaxValue - pageMinValue;
    if (pageDelta != 0) {
      bitsRequired=pageDelta < 0 ? 64 : PackedInts.bitsRequired(pageDelta);
      formatAndBits=PackedInts.fastestFormatAndBits(pageSize,bitsRequired,acceptableOverheadRatio);
      pageMemorySize+=formatAndBits.format.longCount(PackedInts.VERSION_CURRENT,pageSize,formatAndBits.bitsPerValue) * RamUsageEstimator.NUM_BYTES_LONG;
      pageMemorySize+=RamUsageEstimator.NUM_BYTES_LONG;
    }
 else {
      pageMemorySize+=RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + RamUsageEstimator.NUM_BYTES_INT);
    }
  }
  return pageMemorySize;
}
