{
  RestRequest request=channel.request();
  boolean verbose=request.paramAsBoolean("v",false);
  List<DisplayHeader> headers=buildDisplayHeaders(table,request);
  int[] width=buildWidths(table,request,verbose,headers);
  BytesStreamOutput bytesOut=channel.bytesOutput();
  UTF8StreamWriter out=new UTF8StreamWriter().setOutput(bytesOut);
  int lastHeader=headers.size() - 1;
  if (verbose) {
    for (int col=0; col < headers.size(); col++) {
      DisplayHeader header=headers.get(col);
      boolean isLastColumn=col == lastHeader;
      pad(new Table.Cell(header.display,table.findHeaderByName(header.name)),width[col],request,out,isLastColumn);
      if (!isLastColumn) {
        out.append(" ");
      }
    }
    out.append("\n");
  }
  for (int row=0; row < table.getRows().size(); row++) {
    for (int col=0; col < headers.size(); col++) {
      DisplayHeader header=headers.get(col);
      boolean isLastColumn=col == lastHeader;
      pad(table.getAsMap().get(header.name).get(row),width[col],request,out,isLastColumn);
      if (!isLastColumn) {
        out.append(" ");
      }
    }
    out.append("\n");
  }
  out.close();
  return new BytesRestResponse(RestStatus.OK,BytesRestResponse.TEXT_CONTENT_TYPE,bytesOut.bytes());
}
