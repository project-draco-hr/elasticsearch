{
  SearchContext sc=SearchContext.current();
  IndexParentChildFieldData globalIfd=parentChildIndexFieldData.loadGlobal(searcher.getIndexReader());
  final long valueCount;
  List<LeafReaderContext> leaves=searcher.getIndexReader().leaves();
  if (globalIfd == null || leaves.isEmpty()) {
    return new BooleanQuery().createWeight(searcher,needsScores);
  }
 else {
    AtomicParentChildFieldData afd=globalIfd.load(leaves.get(0));
    SortedDocValues globalValues=afd.getOrdinalsValues(parentType);
    valueCount=globalValues.getValueCount();
  }
  if (valueCount == 0) {
    return new BooleanQuery().createWeight(searcher,needsScores);
  }
  IndexSearcher indexSearcher=new IndexSearcher(searcher.getIndexReader());
  indexSearcher.setSimilarity(searcher.getSimilarity(true));
  indexSearcher.setQueryCache(null);
  ParentOrdCollector collector=new ParentOrdCollector(globalIfd,valueCount,parentType);
  indexSearcher.search(childQuery,collector);
  final long remaining=collector.foundParents();
  if (remaining == 0) {
    return new BooleanQuery().createWeight(searcher,needsScores);
  }
  Filter shortCircuitFilter=null;
  if (remaining <= shortCircuitParentDocSet) {
    shortCircuitFilter=ParentIdsFilter.createShortCircuitFilter(nonNestedDocsFilter,sc,parentType,collector.values,collector.parentOrds,remaining);
  }
  return new ParentWeight(this,parentFilter,globalIfd,shortCircuitFilter,collector,remaining);
}
