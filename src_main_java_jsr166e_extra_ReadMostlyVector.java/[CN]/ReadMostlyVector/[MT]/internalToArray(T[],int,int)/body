{
  int alen=a.length;
  T[] result;
  final SequenceLock lock=this.lock;
  boolean locked=false;
  try {
    for (; ; ) {
      long seq=lock.awaitAvailability();
      Object[] items=array;
      int n=count;
      int len=items.length;
      if (n > len)       continue;
      int fence=bound < 0 || bound > n ? n : bound;
      int rlen=fence - origin;
      if (rlen < 0)       rlen=0;
      if (origin < 0 || alen >= rlen) {
        if (rlen > 0)         System.arraycopy(items,0,a,origin,rlen);
        if (alen > rlen)         a[rlen]=null;
        result=a;
      }
 else       result=(T[])Arrays.copyOfRange(items,origin,fence,a.getClass());
      if (lock.getSequence() == seq)       break;
      lock.lock();
      locked=true;
    }
  }
  finally {
    if (locked)     lock.unlock();
  }
  return result;
}
