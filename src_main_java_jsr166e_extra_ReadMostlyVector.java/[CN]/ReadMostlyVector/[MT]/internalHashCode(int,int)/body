{
  final SequenceLock lock=this.lock;
  int hash;
  boolean locked=false;
  try {
    for (; ; ) {
      hash=1;
      long seq=lock.awaitAvailability();
      Object[] items=array;
      int n=count;
      int len=items.length;
      if (n > len)       continue;
      int fence=bound < 0 || bound > n ? n : bound;
      if (origin >= 0) {
        for (int i=origin; i < fence; ++i) {
          Object e=items[i];
          hash=31 * hash + (e == null ? 0 : e.hashCode());
        }
      }
      if (lock.getSequence() == seq)       break;
      lock.lock();
      locked=true;
    }
  }
  finally {
    if (locked)     lock.unlock();
  }
  return hash;
}
