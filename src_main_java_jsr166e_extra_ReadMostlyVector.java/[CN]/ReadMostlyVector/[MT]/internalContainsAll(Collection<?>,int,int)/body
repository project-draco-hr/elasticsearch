{
  final SequenceLock lock=this.lock;
  boolean contained;
  boolean locked=false;
  try {
    for (; ; ) {
      long seq=lock.awaitAvailability();
      int n=count;
      Object[] items=array;
      int len=items.length;
      if (n > len)       continue;
      int fence=bound < 0 || bound > n ? n : bound;
      if (origin < 0)       contained=false;
 else {
        contained=true;
        for (        Object e : c) {
          int idx=(locked ? rawIndexOf(e,origin,fence) : validatedIndexOf(e,items,origin,fence,seq));
          if (idx < 0) {
            contained=false;
            break;
          }
        }
      }
      if (lock.getSequence() == seq)       break;
      lock.lock();
      locked=true;
    }
  }
  finally {
    if (locked)     lock.unlock();
  }
  return contained;
}
