{
  if (!fromClusterEvent) {
    request.operationThreaded(true);
    clusterService.add(request.timeout(),new TimeoutClusterStateListener(){
      @Override public void clusterChanged(      ClusterChangedEvent event){
        if (start(true)) {
          clusterService.remove(this);
        }
      }
      @Override public void onTimeout(      TimeValue timeValue){
        final PrimaryNotStartedActionException failure=new PrimaryNotStartedActionException(shard.shardId(),"Timeout waiting for [" + timeValue + "]");
        if (request.listenerThreaded()) {
          threadPool.execute(new Runnable(){
            @Override public void run(){
              listener.onFailure(failure);
            }
          }
);
        }
 else {
          listener.onFailure(failure);
        }
      }
    }
);
  }
}
