{
  if (logger.isDebugEnabled()) {
    logger.debug("Received shard started for {}",shardRouting);
  }
  clusterService.submitStateUpdateTask("shard-started (" + shardRouting + ")",new ClusterStateUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState){
      RoutingTable routingTable=currentState.routingTable();
      IndexShardRoutingTable indexShardRoutingTable=routingTable.index(shardRouting.index()).shard(shardRouting.id());
      for (      ShardRouting entry : indexShardRoutingTable) {
        if (shardRouting.currentNodeId().equals(entry.currentNodeId())) {
          if (entry.started()) {
            return currentState;
          }
        }
      }
      if (logger.isDebugEnabled()) {
        logger.debug("Applying started shard {}",shardRouting);
      }
      RoutingTable newRoutingTable=shardsRoutingStrategy.applyStartedShards(currentState,newArrayList(shardRouting));
      if (routingTable == newRoutingTable) {
        return currentState;
      }
      return newClusterStateBuilder().state(currentState).routingTable(newRoutingTable).build();
    }
  }
);
}
