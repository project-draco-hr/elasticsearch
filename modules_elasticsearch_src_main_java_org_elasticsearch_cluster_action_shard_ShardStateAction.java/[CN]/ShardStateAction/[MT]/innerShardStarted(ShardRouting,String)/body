{
  if (logger.isDebugEnabled()) {
    logger.debug("Received shard started for {}, reason [{}]",shardRouting,reason);
  }
  clusterService.submitStateUpdateTask("shard-started (" + shardRouting + "), reason ["+ reason+ "]",new ClusterStateUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState){
      RoutingTable routingTable=currentState.routingTable();
      IndexRoutingTable indexRoutingTable=routingTable.index(shardRouting.index());
      if (indexRoutingTable == null) {
        return currentState;
      }
      IndexShardRoutingTable indexShardRoutingTable=indexRoutingTable.shard(shardRouting.id());
      for (      ShardRouting entry : indexShardRoutingTable) {
        if (shardRouting.currentNodeId().equals(entry.currentNodeId())) {
          if (entry.started()) {
            return currentState;
          }
        }
      }
      if (logger.isDebugEnabled()) {
        logger.debug("Applying started shard {}, reason [{}]",shardRouting,reason);
      }
      RoutingTable newRoutingTable=shardsRoutingStrategy.applyStartedShards(currentState,newArrayList(shardRouting));
      if (routingTable == newRoutingTable) {
        return currentState;
      }
      return newClusterStateBuilder().state(currentState).routingTable(newRoutingTable).build();
    }
  }
);
}
