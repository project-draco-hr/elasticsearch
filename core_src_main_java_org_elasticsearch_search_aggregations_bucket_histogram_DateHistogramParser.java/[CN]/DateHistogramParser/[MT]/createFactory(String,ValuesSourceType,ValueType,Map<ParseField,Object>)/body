{
  DateHistogramAggregationBuilder factory=new DateHistogramAggregationBuilder(aggregationName);
  Object interval=otherOptions.get(Rounding.Interval.INTERVAL_FIELD);
  if (interval == null) {
    throw new ParsingException(null,"Missing required field [interval] for histogram aggregation [" + aggregationName + "]");
  }
 else   if (interval instanceof Long) {
    factory.interval((Long)interval);
  }
 else   if (interval instanceof DateHistogramInterval) {
    factory.dateHistogramInterval((DateHistogramInterval)interval);
  }
 else {
    throw new IllegalStateException("Unexpected interval class: " + interval.getClass());
  }
  Long offset=(Long)otherOptions.get(Rounding.OffsetRounding.OFFSET_FIELD);
  if (offset != null) {
    factory.offset(offset);
  }
  ExtendedBounds extendedBounds=(ExtendedBounds)otherOptions.get(ExtendedBounds.EXTENDED_BOUNDS_FIELD);
  if (extendedBounds != null) {
    factory.extendedBounds(extendedBounds);
  }
  Boolean keyed=(Boolean)otherOptions.get(Histogram.KEYED_FIELD);
  if (keyed != null) {
    factory.keyed(keyed);
  }
  Long minDocCount=(Long)otherOptions.get(Histogram.MIN_DOC_COUNT_FIELD);
  if (minDocCount != null) {
    factory.minDocCount(minDocCount);
  }
  InternalOrder order=(InternalOrder)otherOptions.get(Histogram.ORDER_FIELD);
  if (order != null) {
    factory.order(order);
  }
  return factory;
}
