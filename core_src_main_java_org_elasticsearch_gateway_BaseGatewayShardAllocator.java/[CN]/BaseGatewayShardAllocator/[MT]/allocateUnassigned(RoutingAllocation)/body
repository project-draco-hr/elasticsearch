{
  final RoutingNodes routingNodes=allocation.routingNodes();
  final RoutingNodes.UnassignedShards.UnassignedIterator unassignedIterator=routingNodes.unassigned().iterator();
  while (unassignedIterator.hasNext()) {
    final ShardRouting shard=unassignedIterator.next();
    final UnassignedShardDecision unassignedShardDecision=makeAllocationDecision(shard,allocation,logger);
    if (unassignedShardDecision.isDecisionTaken() == false) {
      continue;
    }
    if (unassignedShardDecision.getFinalDecisionSafe().type() == Decision.Type.YES) {
      unassignedIterator.initialize(unassignedShardDecision.getAssignedNodeId(),unassignedShardDecision.getAllocationId(),shard.primary() ? ShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE : allocation.clusterInfo().getShardSize(shard,ShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE),allocation.changes());
    }
 else {
      unassignedIterator.removeAndIgnore(unassignedShardDecision.getAllocationStatus(),allocation.changes());
    }
  }
}
