{
  XContentParser parser=parseContext.parser();
  ParseFieldMatcher parsefieldMatcher=parseContext.parseFieldMatcher();
  XContentParser.Token token;
  String fieldName=null;
  String suggestText=null;
  String prefix=null;
  String regex=null;
  SuggestionBuilder<?> suggestionBuilder=null;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      fieldName=parser.currentName();
    }
 else     if (token.isValue()) {
      if (parsefieldMatcher.match(fieldName,TEXT_FIELD)) {
        suggestText=parser.text();
      }
 else       if (parsefieldMatcher.match(fieldName,PREFIX_FIELD)) {
        prefix=parser.text();
      }
 else       if (parsefieldMatcher.match(fieldName,REGEX_FIELD)) {
        regex=parser.text();
      }
 else {
        throw new IllegalArgumentException("[suggestion] does not support [" + fieldName + "]");
      }
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      SuggestionBuilder<?> suggestParser=suggesters.getSuggestionPrototype(fieldName);
      if (suggestParser == null) {
        throw new IllegalArgumentException("Suggester[" + fieldName + "] not supported");
      }
      suggestionBuilder=suggestParser.innerFromXContent(parseContext);
    }
  }
  if (suggestText != null) {
    suggestionBuilder.text(suggestText);
  }
  if (prefix != null) {
    suggestionBuilder.prefix(prefix);
  }
  if (regex != null) {
    suggestionBuilder.regex(regex);
  }
  return suggestionBuilder;
}
