{
  Candidate original=set.originalTerm;
  BytesRef term=preFilter(original.term,spare,byteSpare);
  final long frequency=original.frequency;
  spellchecker.setThresholdFrequency(thresholdFrequency(frequency,dictSize));
  SuggestWord[] suggestSimilar=spellchecker.suggestSimilar(new Term(field,term),numCandidates,reader,this.suggestMode);
  List<Candidate> candidates=new ArrayList<Candidate>(suggestSimilar.length);
  for (int i=0; i < suggestSimilar.length; i++) {
    SuggestWord suggestWord=suggestSimilar[i];
    BytesRef candidate=new BytesRef(suggestWord.string);
    postFilter(new Candidate(candidate,internalFrequency(candidate),suggestWord.score,score(suggestWord.freq,suggestWord.score,dictSize)),spare,byteSpare,candidates);
  }
  set.addCandidates(candidates);
  return set;
}
