{
  this.spellchecker=spellchecker;
  this.field=field;
  this.suggestMode=suggestMode;
  this.reader=reader;
  Terms terms=MultiFields.getTerms(reader,field);
  if (terms == null) {
    throw new ElasticSearchIllegalArgumentException("generator field [" + field + "] doesn't exist");
  }
  final long dictSize=terms.getSumTotalTermFreq();
  this.useTotalTermFrequency=dictSize != -1;
  this.dictSize=dictSize == -1 ? reader.maxDoc() : dictSize;
  this.preFilter=preFilter;
  this.postFilter=postFilter;
  this.nonErrorLikelihood=nonErrorLikelihood;
  float thresholdFrequency=spellchecker.getThresholdFrequency();
  this.frequencyPlateau=thresholdFrequency >= 1.0f ? (int)thresholdFrequency : (int)(dictSize * thresholdFrequency);
  termsEnum=terms.iterator(null);
}
