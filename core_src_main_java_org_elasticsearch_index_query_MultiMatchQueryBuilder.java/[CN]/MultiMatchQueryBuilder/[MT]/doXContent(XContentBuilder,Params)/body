{
  builder.startObject(NAME);
  builder.field("query",value);
  builder.startArray("fields");
  for (  Map.Entry<String,Float> fieldEntry : this.fieldsBoosts.entrySet()) {
    builder.value(fieldEntry.getKey() + "^" + fieldEntry.getValue());
  }
  builder.endArray();
  builder.field("type",type.toString().toLowerCase(Locale.ENGLISH));
  builder.field("operator",operator.toString());
  if (analyzer != null) {
    builder.field("analyzer",analyzer);
  }
  builder.field("slop",slop);
  if (fuzziness != null) {
    fuzziness.toXContent(builder,params);
  }
  builder.field("prefix_length",prefixLength);
  builder.field("max_expansions",maxExpansions);
  if (minimumShouldMatch != null) {
    builder.field("minimum_should_match",minimumShouldMatch);
  }
  if (fuzzyRewrite != null) {
    builder.field("fuzzy_rewrite",fuzzyRewrite);
  }
  if (useDisMax != null) {
    builder.field("use_dis_max",useDisMax);
  }
  if (tieBreaker != null) {
    builder.field("tie_breaker",tieBreaker);
  }
  builder.field("lenient",lenient);
  if (cutoffFrequency != null) {
    builder.field("cutoff_frequency",cutoffFrequency);
  }
  builder.field("zero_terms_query",zeroTermsQuery.toString());
  printBoostAndQueryName(builder);
  builder.endObject();
}
