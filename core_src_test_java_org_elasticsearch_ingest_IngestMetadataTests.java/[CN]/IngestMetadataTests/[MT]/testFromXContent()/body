{
  PipelineConfiguration pipeline=new PipelineConfiguration("1",new BytesArray("{\"processors\": [{\"set\" : {\"field\": \"_field\", \"value\": \"_value\"}}]}"));
  PipelineConfiguration pipeline2=new PipelineConfiguration("2",new BytesArray("{\"processors\": [{\"set\" : {\"field\": \"_field1\", \"value\": \"_value1\"}}]}"));
  Map<String,PipelineConfiguration> map=new HashMap<>();
  map.put(pipeline.getId(),pipeline);
  map.put(pipeline2.getId(),pipeline2);
  IngestMetadata ingestMetadata=new IngestMetadata(map);
  XContentBuilder builder=XContentFactory.contentBuilder(randomFrom(XContentType.values()));
  builder.prettyPrint();
  builder.startObject();
  ingestMetadata.toXContent(builder,ToXContent.EMPTY_PARAMS);
  builder.endObject();
  XContentBuilder shuffled=shuffleXContent(builder,Collections.emptySet());
  final XContentParser parser=XContentFactory.xContent(shuffled.bytes()).createParser(shuffled.bytes());
  MetaData.Custom custom=ingestMetadata.fromXContent(parser);
  assertTrue(custom instanceof IngestMetadata);
  IngestMetadata m=(IngestMetadata)custom;
  assertEquals(2,m.getPipelines().size());
  assertEquals("1",m.getPipelines().get("1").getId());
  assertEquals("2",m.getPipelines().get("2").getId());
  assertEquals(pipeline.getConfigAsMap(),m.getPipelines().get("1").getConfigAsMap());
  assertEquals(pipeline2.getConfigAsMap(),m.getPipelines().get("2").getConfigAsMap());
}
