{
  BytesReference pipelineConfig=new BytesArray("{}");
  Map<String,PipelineConfiguration> pipelines=new HashMap<>();
  pipelines.put("1",new PipelineConfiguration("1",pipelineConfig));
  pipelines.put("2",new PipelineConfiguration("2",pipelineConfig));
  IngestMetadata ingestMetadata1=new IngestMetadata(pipelines);
  pipelines=new HashMap<>();
  pipelines.put("1",new PipelineConfiguration("1",pipelineConfig));
  pipelines.put("3",new PipelineConfiguration("3",pipelineConfig));
  pipelines.put("4",new PipelineConfiguration("4",pipelineConfig));
  IngestMetadata ingestMetadata2=new IngestMetadata(pipelines);
  IngestMetadata.IngestMetadataDiff diff=(IngestMetadata.IngestMetadataDiff)ingestMetadata2.diff(ingestMetadata1);
  assertThat(((DiffableUtils.MapDiff)diff.pipelines).getDeletes().size(),equalTo(1));
  assertThat(((DiffableUtils.MapDiff)diff.pipelines).getDeletes().get(0),equalTo("2"));
  assertThat(((DiffableUtils.MapDiff)diff.pipelines).getUpserts().size(),equalTo(2));
  assertThat(((DiffableUtils.MapDiff)diff.pipelines).getUpserts().containsKey("3"),is(true));
  assertThat(((DiffableUtils.MapDiff)diff.pipelines).getUpserts().containsKey("4"),is(true));
  IngestMetadata endResult=(IngestMetadata)diff.apply(ingestMetadata2);
  assertThat(endResult,not(equalTo(ingestMetadata1)));
  assertThat(endResult.getPipelines().size(),equalTo(3));
  assertThat(endResult.getPipelines().get("1"),equalTo(new PipelineConfiguration("1",pipelineConfig)));
  assertThat(endResult.getPipelines().get("3"),equalTo(new PipelineConfiguration("3",pipelineConfig)));
  assertThat(endResult.getPipelines().get("4"),equalTo(new PipelineConfiguration("4",pipelineConfig)));
  pipelines=new HashMap<>();
  pipelines.put("1",new PipelineConfiguration("1",new BytesArray("{}")));
  pipelines.put("2",new PipelineConfiguration("2",new BytesArray("{}")));
  IngestMetadata ingestMetadata3=new IngestMetadata(pipelines);
  diff=(IngestMetadata.IngestMetadataDiff)ingestMetadata3.diff(ingestMetadata1);
  assertThat(((DiffableUtils.MapDiff)diff.pipelines).getDeletes().size(),equalTo(0));
  assertThat(((DiffableUtils.MapDiff)diff.pipelines).getUpserts().size(),equalTo(0));
  endResult=(IngestMetadata)diff.apply(ingestMetadata3);
  assertThat(endResult,equalTo(ingestMetadata1));
  assertThat(endResult.getPipelines().size(),equalTo(2));
  assertThat(endResult.getPipelines().get("1"),equalTo(new PipelineConfiguration("1",pipelineConfig)));
  assertThat(endResult.getPipelines().get("2"),equalTo(new PipelineConfiguration("2",pipelineConfig)));
  pipelines=new HashMap<>();
  pipelines.put("1",new PipelineConfiguration("1",new BytesArray("{}")));
  pipelines.put("2",new PipelineConfiguration("2",new BytesArray("{\"key\" : \"value\"}")));
  IngestMetadata ingestMetadata4=new IngestMetadata(pipelines);
  diff=(IngestMetadata.IngestMetadataDiff)ingestMetadata4.diff(ingestMetadata1);
  assertThat(((DiffableUtils.MapDiff)diff.pipelines).getDiffs().size(),equalTo(1));
  assertThat(((DiffableUtils.MapDiff)diff.pipelines).getDiffs().containsKey("2"),is(true));
  endResult=(IngestMetadata)diff.apply(ingestMetadata4);
  assertThat(endResult,not(equalTo(ingestMetadata1)));
  assertThat(endResult.getPipelines().size(),equalTo(2));
  assertThat(endResult.getPipelines().get("1"),equalTo(new PipelineConfiguration("1",pipelineConfig)));
  assertThat(endResult.getPipelines().get("2"),equalTo(new PipelineConfiguration("2",new BytesArray("{\"key\" : \"value\"}"))));
}
