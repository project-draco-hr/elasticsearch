{
  final NodeEnvironment env=newNodeEnvironment();
  final int numIndices=randomIntBetween(1,10);
  Map<String,List<Path>> actualIndexDataPaths=new HashMap<>();
  for (int i=0; i < numIndices; i++) {
    Index index=new Index("foo" + i,"fooUUID" + i);
    Path[] indexPaths=env.indexPaths(index);
    for (    Path path : indexPaths) {
      Files.createDirectories(path);
      String fileName=path.getFileName().toString();
      List<Path> paths=actualIndexDataPaths.get(fileName);
      if (paths == null) {
        paths=new ArrayList<>();
      }
      paths.add(path);
      actualIndexDataPaths.put(fileName,paths);
    }
  }
  for (  Map.Entry<String,List<Path>> actualIndexDataPathEntry : actualIndexDataPaths.entrySet()) {
    List<Path> actual=actualIndexDataPathEntry.getValue();
    Path[] actualPaths=actual.toArray(new Path[actual.size()]);
    assertThat(actualPaths,equalTo(env.resolveIndexFolder(actualIndexDataPathEntry.getKey())));
  }
  assertTrue("LockedShards: " + env.lockedShards(),env.lockedShards().isEmpty());
  env.close();
}
