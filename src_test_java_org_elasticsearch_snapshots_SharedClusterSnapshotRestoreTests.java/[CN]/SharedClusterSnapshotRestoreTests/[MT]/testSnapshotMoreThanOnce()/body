{
  Client client=client();
  logger.info("-->  creating repository");
  assertAcked(client.admin().cluster().preparePutRepository("test-repo").setType("fs").setSettings(ImmutableSettings.settingsBuilder().put("location",createTempDir()).put("compress",randomBoolean()).put("chunk_size",randomIntBetween(100,1000))));
  assertAcked(prepareCreate("test").setSettings(ImmutableSettings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1)));
  ensureGreen();
  logger.info("-->  indexing");
  final int numdocs=randomIntBetween(10,100);
  IndexRequestBuilder[] builders=new IndexRequestBuilder[numdocs];
  for (int i=0; i < builders.length; i++) {
    builders[i]=client().prepareIndex("test","doc",Integer.toString(i)).setSource("foo","bar" + i);
  }
  indexRandom(true,builders);
  flushAndRefresh();
  assertNoFailures(client().admin().indices().prepareOptimize("test").setFlush(true).setMaxNumSegments(1).get());
  CreateSnapshotResponse createSnapshotResponseFirst=client.admin().cluster().prepareCreateSnapshot("test-repo","test").setWaitForCompletion(true).setIndices("test").get();
  assertThat(createSnapshotResponseFirst.getSnapshotInfo().successfulShards(),greaterThan(0));
  assertThat(createSnapshotResponseFirst.getSnapshotInfo().successfulShards(),equalTo(createSnapshotResponseFirst.getSnapshotInfo().totalShards()));
  assertThat(client.admin().cluster().prepareGetSnapshots("test-repo").setSnapshots("test").get().getSnapshots().get(0).state(),equalTo(SnapshotState.SUCCESS));
{
    SnapshotStatus snapshotStatus=client.admin().cluster().prepareSnapshotStatus("test-repo").setSnapshots("test").get().getSnapshots().get(0);
    List<SnapshotIndexShardStatus> shards=snapshotStatus.getShards();
    for (    SnapshotIndexShardStatus status : shards) {
      assertThat(status.getStats().getProcessedFiles(),greaterThan(1));
    }
  }
  CreateSnapshotResponse createSnapshotResponseSecond=client.admin().cluster().prepareCreateSnapshot("test-repo","test-1").setWaitForCompletion(true).setIndices("test").get();
  assertThat(createSnapshotResponseSecond.getSnapshotInfo().successfulShards(),greaterThan(0));
  assertThat(createSnapshotResponseSecond.getSnapshotInfo().successfulShards(),equalTo(createSnapshotResponseSecond.getSnapshotInfo().totalShards()));
  assertThat(client.admin().cluster().prepareGetSnapshots("test-repo").setSnapshots("test-1").get().getSnapshots().get(0).state(),equalTo(SnapshotState.SUCCESS));
{
    SnapshotStatus snapshotStatus=client.admin().cluster().prepareSnapshotStatus("test-repo").setSnapshots("test-1").get().getSnapshots().get(0);
    List<SnapshotIndexShardStatus> shards=snapshotStatus.getShards();
    for (    SnapshotIndexShardStatus status : shards) {
      assertThat(status.getStats().getProcessedFiles(),equalTo(0));
    }
  }
  client().prepareDelete("test","doc","1").get();
  CreateSnapshotResponse createSnapshotResponseThird=client.admin().cluster().prepareCreateSnapshot("test-repo","test-2").setWaitForCompletion(true).setIndices("test").get();
  assertThat(createSnapshotResponseThird.getSnapshotInfo().successfulShards(),greaterThan(0));
  assertThat(createSnapshotResponseThird.getSnapshotInfo().successfulShards(),equalTo(createSnapshotResponseThird.getSnapshotInfo().totalShards()));
  assertThat(client.admin().cluster().prepareGetSnapshots("test-repo").setSnapshots("test-2").get().getSnapshots().get(0).state(),equalTo(SnapshotState.SUCCESS));
{
    SnapshotStatus snapshotStatus=client.admin().cluster().prepareSnapshotStatus("test-repo").setSnapshots("test-2").get().getSnapshots().get(0);
    List<SnapshotIndexShardStatus> shards=snapshotStatus.getShards();
    for (    SnapshotIndexShardStatus status : shards) {
      assertThat(status.getStats().getProcessedFiles(),equalTo(2));
    }
  }
}
