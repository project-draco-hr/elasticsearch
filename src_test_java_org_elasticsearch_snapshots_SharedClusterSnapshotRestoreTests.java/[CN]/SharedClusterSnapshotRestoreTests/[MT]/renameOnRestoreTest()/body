{
  Client client=client();
  logger.info("-->  creating repository");
  assertAcked(client.admin().cluster().preparePutRepository("test-repo").setType("fs").setSettings(ImmutableSettings.settingsBuilder().put("location",createTempDir())));
  createIndex("test-idx-1","test-idx-2","test-idx-3");
  ensureGreen();
  assertAcked(client.admin().indices().prepareAliases().addAlias("test-idx-1","alias-1").addAlias("test-idx-2","alias-2").addAlias("test-idx-3","alias-3"));
  logger.info("--> indexing some data");
  for (int i=0; i < 100; i++) {
    index("test-idx-1","doc",Integer.toString(i),"foo","bar" + i);
    index("test-idx-2","doc",Integer.toString(i),"foo","bar" + i);
  }
  refresh();
  assertThat(client.prepareCount("test-idx-1").get().getCount(),equalTo(100L));
  assertThat(client.prepareCount("test-idx-2").get().getCount(),equalTo(100L));
  logger.info("--> snapshot");
  CreateSnapshotResponse createSnapshotResponse=client.admin().cluster().prepareCreateSnapshot("test-repo","test-snap").setWaitForCompletion(true).setIndices("test-idx-1","test-idx-2").get();
  assertThat(createSnapshotResponse.getSnapshotInfo().successfulShards(),greaterThan(0));
  assertThat(createSnapshotResponse.getSnapshotInfo().successfulShards(),equalTo(createSnapshotResponse.getSnapshotInfo().totalShards()));
  logger.info("--> restore indices with different names");
  RestoreSnapshotResponse restoreSnapshotResponse=client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap").setRenamePattern("(.+)").setRenameReplacement("$1-copy").setWaitForCompletion(true).execute().actionGet();
  assertThat(restoreSnapshotResponse.getRestoreInfo().totalShards(),greaterThan(0));
  assertThat(client.prepareCount("test-idx-1-copy").get().getCount(),equalTo(100L));
  assertThat(client.prepareCount("test-idx-2-copy").get().getCount(),equalTo(100L));
  logger.info("--> close just restored indices");
  client.admin().indices().prepareClose("test-idx-1-copy","test-idx-2-copy").get();
  logger.info("--> and try to restore these indices again");
  restoreSnapshotResponse=client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap").setRenamePattern("(.+)").setRenameReplacement("$1-copy").setWaitForCompletion(true).execute().actionGet();
  assertThat(restoreSnapshotResponse.getRestoreInfo().totalShards(),greaterThan(0));
  assertThat(client.prepareCount("test-idx-1-copy").get().getCount(),equalTo(100L));
  assertThat(client.prepareCount("test-idx-2-copy").get().getCount(),equalTo(100L));
  logger.info("--> close indices");
  assertAcked(client.admin().indices().prepareClose("test-idx-1","test-idx-2-copy"));
  logger.info("--> restore indices with different names");
  restoreSnapshotResponse=client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap").setRenamePattern("(.+-2)").setRenameReplacement("$1-copy").setWaitForCompletion(true).execute().actionGet();
  assertThat(restoreSnapshotResponse.getRestoreInfo().totalShards(),greaterThan(0));
  logger.info("--> delete indices");
  cluster().wipeIndices("test-idx-1","test-idx-1-copy","test-idx-2","test-idx-2-copy");
  logger.info("--> try renaming indices using the same name");
  try {
    client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap").setRenamePattern("(.+)").setRenameReplacement("same-name").setWaitForCompletion(true).execute().actionGet();
    fail("Shouldn't be here");
  }
 catch (  SnapshotRestoreException ex) {
  }
  logger.info("--> try renaming indices using the same name");
  try {
    client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap").setRenamePattern("test-idx-2").setRenameReplacement("test-idx-1").setWaitForCompletion(true).execute().actionGet();
    fail("Shouldn't be here");
  }
 catch (  SnapshotRestoreException ex) {
  }
  logger.info("--> try renaming indices using invalid index name");
  try {
    client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap").setIndices("test-idx-1").setRenamePattern(".+").setRenameReplacement("__WRONG__").setWaitForCompletion(true).execute().actionGet();
    fail("Shouldn't be here");
  }
 catch (  InvalidIndexNameException ex) {
  }
  logger.info("--> try renaming indices into existing alias name");
  try {
    client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap").setIndices("test-idx-1").setRenamePattern(".+").setRenameReplacement("alias-3").setWaitForCompletion(true).execute().actionGet();
    fail("Shouldn't be here");
  }
 catch (  InvalidIndexNameException ex) {
  }
  logger.info("--> try renaming indices into existing alias of itself");
  try {
    client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap").setIndices("test-idx-1").setRenamePattern("test-idx").setRenameReplacement("alias").setWaitForCompletion(true).execute().actionGet();
    fail("Shouldn't be here");
  }
 catch (  SnapshotRestoreException ex) {
  }
  logger.info("--> try renaming indices into existing alias of another restored index");
  try {
    client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap").setIndices("test-idx-1","test-idx-2").setRenamePattern("test-idx-1").setRenameReplacement("alias-2").setWaitForCompletion(true).execute().actionGet();
    fail("Shouldn't be here");
  }
 catch (  SnapshotRestoreException ex) {
  }
  logger.info("--> try renaming indices into existing alias of itself, but don't restore aliases ");
  restoreSnapshotResponse=client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap").setIndices("test-idx-1").setRenamePattern("test-idx").setRenameReplacement("alias").setWaitForCompletion(true).setIncludeAliases(false).execute().actionGet();
  assertThat(restoreSnapshotResponse.getRestoreInfo().totalShards(),greaterThan(0));
}
