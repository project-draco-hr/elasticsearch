{
  Client client=client();
  logger.info("-->  creating repository");
  PutRepositoryResponse putRepositoryResponse=client.admin().cluster().preparePutRepository("test-repo").setType("fs").setSettings(ImmutableSettings.settingsBuilder().put("location",newTempDir())).get();
  assertThat(putRepositoryResponse.isAcknowledged(),equalTo(true));
  logger.info("-->  creating test template");
  assertThat(client.admin().indices().preparePutTemplate("test-template").setTemplate("te*").addMapping("test-mapping","{}").get().isAcknowledged(),equalTo(true));
  logger.info("--> snapshot");
  CreateSnapshotResponse createSnapshotResponse=client.admin().cluster().prepareCreateSnapshot("test-repo","test-snap").setIndices().setWaitForCompletion(true).get();
  assertThat(createSnapshotResponse.getSnapshotInfo().totalShards(),equalTo(0));
  assertThat(createSnapshotResponse.getSnapshotInfo().successfulShards(),equalTo(0));
  assertThat(client.admin().cluster().prepareGetSnapshots("test-repo").setSnapshots("test-snap").get().getSnapshots().get(0).state(),equalTo(SnapshotState.SUCCESS));
  logger.info("-->  delete test template");
  assertThat(client.admin().indices().prepareDeleteTemplate("test-template").get().isAcknowledged(),equalTo(true));
  ClusterStateResponse clusterStateResponse=client.admin().cluster().prepareState().setFilterRoutingTable(true).setFilterNodes(true).setFilterIndexTemplates("test-template").setFilterIndices().get();
  assertThat(clusterStateResponse.getState().getMetaData().templates().containsKey("test-template"),equalTo(false));
  logger.info("--> restore cluster state");
  RestoreSnapshotResponse restoreSnapshotResponse=client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap").setWaitForCompletion(true).setRestoreGlobalState(true).execute().actionGet();
  assertThat(restoreSnapshotResponse.getRestoreInfo().totalShards(),equalTo(0));
  logger.info("--> check that template is restored");
  clusterStateResponse=client.admin().cluster().prepareState().setFilterRoutingTable(true).setFilterNodes(true).setFilterIndexTemplates("test-template").setFilterIndices().get();
  assertThat(clusterStateResponse.getState().getMetaData().templates().containsKey("test-template"),equalTo(true));
}
