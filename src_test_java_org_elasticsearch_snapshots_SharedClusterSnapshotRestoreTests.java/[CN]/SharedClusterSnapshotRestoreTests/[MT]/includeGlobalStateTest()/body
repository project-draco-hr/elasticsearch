{
  Client client=client();
  logger.info("-->  creating repository");
  File location=newTempDir();
  PutRepositoryResponse putRepositoryResponse=run(client.admin().cluster().preparePutRepository("test-repo").setType("fs").setSettings(ImmutableSettings.settingsBuilder().put("location",location)));
  assertThat(putRepositoryResponse.isAcknowledged(),equalTo(true));
  logger.info("-->  creating test template");
  assertThat(run(client.admin().indices().preparePutTemplate("test-template").setTemplate("te*").addMapping("test-mapping","{}")).isAcknowledged(),equalTo(true));
  logger.info("--> snapshot without global state");
  CreateSnapshotResponse createSnapshotResponse=run(client.admin().cluster().prepareCreateSnapshot("test-repo","test-snap-no-global-state").setIndices().setIncludeGlobalState(false).setWaitForCompletion(true));
  assertThat(createSnapshotResponse.getSnapshotInfo().totalShards(),equalTo(0));
  assertThat(createSnapshotResponse.getSnapshotInfo().successfulShards(),equalTo(0));
  assertThat(run(client.admin().cluster().prepareGetSnapshots("test-repo").setSnapshots("test-snap-no-global-state")).getSnapshots().get(0).state(),equalTo(SnapshotState.SUCCESS));
  logger.info("--> snapshot with global state");
  createSnapshotResponse=run(client.admin().cluster().prepareCreateSnapshot("test-repo","test-snap-with-global-state").setIndices().setIncludeGlobalState(true).setWaitForCompletion(true));
  assertThat(createSnapshotResponse.getSnapshotInfo().totalShards(),equalTo(0));
  assertThat(createSnapshotResponse.getSnapshotInfo().successfulShards(),equalTo(0));
  assertThat(run(client.admin().cluster().prepareGetSnapshots("test-repo").setSnapshots("test-snap-with-global-state")).getSnapshots().get(0).state(),equalTo(SnapshotState.SUCCESS));
  logger.info("-->  delete test template");
  wipeTemplates("test-template");
  ClusterStateResponse clusterStateResponse=run(client.admin().cluster().prepareState().setFilterRoutingTable(true).setFilterNodes(true).setFilterIndexTemplates("test-template").setFilterIndices());
  assertThat(clusterStateResponse.getState().getMetaData().templates().containsKey("test-template"),equalTo(false));
  logger.info("--> try restoring cluster state from snapshot without global state");
  RestoreSnapshotResponse restoreSnapshotResponse=client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap-no-global-state").setWaitForCompletion(true).setRestoreGlobalState(true).execute().actionGet();
  assertThat(restoreSnapshotResponse.getRestoreInfo().totalShards(),equalTo(0));
  logger.info("--> check that template wasn't restored");
  clusterStateResponse=run(client.admin().cluster().prepareState().setFilterRoutingTable(true).setFilterNodes(true).setFilterIndexTemplates("test-template").setFilterIndices());
  assertThat(clusterStateResponse.getState().getMetaData().templates().containsKey("test-template"),equalTo(false));
  logger.info("--> restore cluster state");
  restoreSnapshotResponse=client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap-with-global-state").setWaitForCompletion(true).setRestoreGlobalState(true).execute().actionGet();
  assertThat(restoreSnapshotResponse.getRestoreInfo().totalShards(),equalTo(0));
  logger.info("--> check that template is restored");
  clusterStateResponse=run(client.admin().cluster().prepareState().setFilterRoutingTable(true).setFilterNodes(true).setFilterIndexTemplates("test-template").setFilterIndices());
  assertThat(clusterStateResponse.getState().getMetaData().templates().containsKey("test-template"),equalTo(true));
  createIndex("test-idx");
  ensureGreen();
  logger.info("--> indexing some data");
  for (int i=0; i < 100; i++) {
    index("test-idx","doc",Integer.toString(i),"foo","bar" + i);
  }
  refresh();
  assertThat(run(client.prepareCount("test-idx")).getCount(),equalTo(100L));
  logger.info("--> snapshot without global state but with indices");
  createSnapshotResponse=run(client.admin().cluster().prepareCreateSnapshot("test-repo","test-snap-no-global-state-with-index").setIndices("test-idx").setIncludeGlobalState(false).setWaitForCompletion(true));
  assertThat(createSnapshotResponse.getSnapshotInfo().totalShards(),greaterThan(0));
  assertThat(createSnapshotResponse.getSnapshotInfo().successfulShards(),equalTo(createSnapshotResponse.getSnapshotInfo().totalShards()));
  assertThat(run(client.admin().cluster().prepareGetSnapshots("test-repo").setSnapshots("test-snap-no-global-state-with-index")).getSnapshots().get(0).state(),equalTo(SnapshotState.SUCCESS));
  logger.info("-->  delete test template and index ");
  wipeIndex("test-idx");
  wipeTemplates("test-template");
  clusterStateResponse=run(client.admin().cluster().prepareState().setFilterRoutingTable(true).setFilterNodes(true).setFilterIndexTemplates("test-template").setFilterIndices());
  assertThat(clusterStateResponse.getState().getMetaData().templates().containsKey("test-template"),equalTo(false));
  logger.info("--> try restoring index and cluster state from snapshot without global state");
  restoreSnapshotResponse=client.admin().cluster().prepareRestoreSnapshot("test-repo","test-snap-no-global-state-with-index").setWaitForCompletion(true).setRestoreGlobalState(true).execute().actionGet();
  assertThat(restoreSnapshotResponse.getRestoreInfo().totalShards(),greaterThan(0));
  assertThat(restoreSnapshotResponse.getRestoreInfo().failedShards(),equalTo(0));
  ensureGreen();
  logger.info("--> check that template wasn't restored but index was");
  clusterStateResponse=run(client.admin().cluster().prepareState().setFilterRoutingTable(true).setFilterNodes(true).setFilterIndexTemplates("test-template").setFilterIndices());
  assertThat(clusterStateResponse.getState().getMetaData().templates().containsKey("test-template"),equalTo(false));
  assertThat(run(client.prepareCount("test-idx")).getCount(),equalTo(100L));
}
