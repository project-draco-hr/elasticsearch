{
  Client client=client();
  logger.info("-->  creating repository");
  PutRepositoryResponse putRepositoryResponse=run(client.admin().cluster().preparePutRepository("test-repo").setType("fs").setSettings(ImmutableSettings.settingsBuilder().put("location",newTempDir(LifecycleScope.SUITE))));
  assertThat(putRepositoryResponse.isAcknowledged(),equalTo(true));
  createIndex("test-idx","test-idx-closed");
  ensureGreen();
  logger.info("-->  closing index test-idx-closed");
  run(client.admin().indices().prepareClose("test-idx-closed"));
  ClusterStateResponse stateResponse=run(client.admin().cluster().prepareState());
  assertThat(stateResponse.getState().metaData().index("test-idx-closed").state(),equalTo(IndexMetaData.State.CLOSE));
  assertThat(stateResponse.getState().routingTable().index("test-idx-closed"),nullValue());
  logger.info("--> snapshot");
  CreateSnapshotResponse createSnapshotResponse=run(client.admin().cluster().prepareCreateSnapshot("test-repo","test-snap").setWaitForCompletion(true).setIndices("test-idx*"));
  assertThat(createSnapshotResponse.getSnapshotInfo().indices().size(),equalTo(1));
  assertThat(createSnapshotResponse.getSnapshotInfo().shardFailures().size(),equalTo(0));
  logger.info("-->  deleting snapshot");
  run(client.admin().cluster().prepareDeleteSnapshot("test-repo","test-snap"));
}
