{
  BytesStreamOutput out=new BytesStreamOutput();
{
    Settings build=Settings.builder().put("request.headers.default","1").build();
    ThreadContext threadContext=new ThreadContext(build);
    threadContext.putHeader("foo","bar");
    threadContext.putTransient("ctx.foo",1);
    threadContext.addResponseHeader("Warning","123456");
    if (rarely()) {
      threadContext.addResponseHeader("Warning","123456");
    }
    threadContext.addResponseHeader("Warning","234567");
    assertEquals("bar",threadContext.getHeader("foo"));
    assertNotNull(threadContext.getTransient("ctx.foo"));
    assertEquals("1",threadContext.getHeader("default"));
    assertThat(threadContext.getResponseHeaders().keySet(),hasSize(1));
    threadContext.writeTo(out);
  }
{
    Settings otherSettings=Settings.builder().put("request.headers.default","5").build();
    ThreadContext otherThreadContext=new ThreadContext(otherSettings);
    otherThreadContext.readHeaders(out.bytes().streamInput());
    assertEquals("bar",otherThreadContext.getHeader("foo"));
    assertNull(otherThreadContext.getTransient("ctx.foo"));
    assertEquals("1",otherThreadContext.getHeader("default"));
    final Map<String,List<String>> responseHeaders=otherThreadContext.getResponseHeaders();
    final List<String> warnings=responseHeaders.get("Warning");
    assertThat(responseHeaders.keySet(),hasSize(1));
    assertThat(warnings,hasSize(2));
    assertThat(warnings,hasItem(equalTo("123456")));
    assertThat(warnings,hasItem(equalTo("234567")));
  }
}
