{
  final String index="test";
  clusterService.setState(stateWithStartedPrimary(index,true,randomInt(5)));
  String indexUUID=clusterService.state().metaData().index(index).getIndexUUID();
  AtomicBoolean progress=new AtomicBoolean();
  AtomicBoolean timedOut=new AtomicBoolean();
  TimeValue timeout=new TimeValue(1,TimeUnit.MILLISECONDS);
  CountDownLatch latch=new CountDownLatch(1);
  shardStateAction.shardFailed(clusterService.state(),getRandomShardRouting(index),indexUUID,"test",getSimulatedFailure(),timeout,new ShardStateAction.Listener(){
    @Override public void onShardFailedFailure(    DiscoveryNode master,    TransportException e){
      if (e instanceof ReceiveTimeoutTransportException) {
        assertFalse(progress.get());
        timedOut.set(true);
      }
      latch.countDown();
    }
  }
);
  latch.await();
  progress.set(true);
  assertTrue(timedOut.get());
  final CapturingTransport.CapturedRequest[] capturedRequests=transport.getCapturedRequestsAndClear();
  assertThat(capturedRequests.length,equalTo(1));
}
