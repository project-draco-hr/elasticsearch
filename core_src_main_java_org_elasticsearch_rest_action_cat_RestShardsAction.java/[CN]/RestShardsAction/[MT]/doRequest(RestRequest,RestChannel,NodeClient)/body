{
  final String[] indices=Strings.splitStringByCommaToArray(request.param("index"));
  final ClusterStateRequest clusterStateRequest=new ClusterStateRequest();
  clusterStateRequest.local(request.paramAsBoolean("local",clusterStateRequest.local()));
  clusterStateRequest.masterNodeTimeout(request.paramAsTime("master_timeout",clusterStateRequest.masterNodeTimeout()));
  clusterStateRequest.clear().nodes(true).metaData(true).routingTable(true).indices(indices);
  client.admin().cluster().state(clusterStateRequest,new RestActionListener<ClusterStateResponse>(channel){
    @Override public void processResponse(    final ClusterStateResponse clusterStateResponse){
      IndicesStatsRequest indicesStatsRequest=new IndicesStatsRequest();
      indicesStatsRequest.all();
      client.admin().indices().stats(indicesStatsRequest,new RestResponseListener<IndicesStatsResponse>(channel){
        @Override public RestResponse buildResponse(        IndicesStatsResponse indicesStatsResponse) throws Exception {
          return RestTable.buildResponse(buildTable(request,clusterStateResponse,indicesStatsResponse),channel);
        }
      }
);
    }
  }
);
}
