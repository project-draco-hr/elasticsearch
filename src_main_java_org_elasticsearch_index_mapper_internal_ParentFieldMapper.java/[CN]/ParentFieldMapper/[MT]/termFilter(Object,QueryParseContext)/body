{
  if (context == null) {
    return super.termFilter(value,context);
  }
  BytesRef bValue=BytesRefs.toBytesRef(value);
  if (Uid.hasDelimiter(bValue)) {
    return new QueryWrapperFilter(new TermQuery(new Term(names.indexName(),bValue)));
  }
  List<String> types=new ArrayList<>(context.mapperService().types().size());
  for (  DocumentMapper documentMapper : context.mapperService().docMappers(false)) {
    if (!documentMapper.parentFieldMapper().active()) {
      types.add(documentMapper.type());
    }
  }
  if (types.isEmpty()) {
    return Queries.newMatchNoDocsFilter();
  }
 else   if (types.size() == 1) {
    return new QueryWrapperFilter(new TermQuery(new Term(names.indexName(),Uid.createUidAsBytes(types.get(0),bValue))));
  }
 else {
    List<BytesRef> typesValues=new ArrayList<>(types.size());
    for (    String type : context.mapperService().types()) {
      typesValues.add(Uid.createUidAsBytes(type,bValue));
    }
    return new QueryWrapperFilter(new TermsQuery(names.indexName(),typesValues));
  }
}
