{
  final Map<DiscoveryNode,IndicesClusterStateService> clusterStateServiceMap=new HashMap<>();
  ClusterState state=randomInitialClusterState(clusterStateServiceMap);
  for (int i=0; i < 30; i++) {
    logger.info("Iteration {}",i);
    final ClusterState previousState=state;
    for (int j=0; j < randomInt(3); j++) {
      state=randomlyUpdateClusterState(state,clusterStateServiceMap);
    }
    for (    DiscoveryNode node : state.nodes()) {
      IndicesClusterStateService indicesClusterStateService=clusterStateServiceMap.get(node);
      ClusterState localState=adaptClusterStateToLocalNode(state,node);
      ClusterState previousLocalState=adaptClusterStateToLocalNode(previousState,node);
      indicesClusterStateService.clusterChanged(new ClusterChangedEvent("simulated change " + i,localState,previousLocalState));
      assertClusterStateMatchesNodeState(localState,indicesClusterStateService);
    }
  }
  logger.info("Final cluster state: {}",state.prettyPrint());
}
