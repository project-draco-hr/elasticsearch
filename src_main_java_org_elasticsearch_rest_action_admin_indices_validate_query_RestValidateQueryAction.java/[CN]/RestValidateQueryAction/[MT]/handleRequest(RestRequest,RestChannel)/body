{
  ValidateQueryRequest validateQueryRequest=new ValidateQueryRequest(Strings.splitStringByCommaToArray(request.param("index")));
  validateQueryRequest.listenerThreaded(false);
  validateQueryRequest.indicesOptions(IndicesOptions.fromRequest(request,validateQueryRequest.indicesOptions()));
  try {
    BroadcastOperationThreading operationThreading=BroadcastOperationThreading.fromString(request.param("operation_threading"),BroadcastOperationThreading.SINGLE_THREAD);
    if (operationThreading == BroadcastOperationThreading.NO_THREADS) {
      operationThreading=BroadcastOperationThreading.SINGLE_THREAD;
    }
    validateQueryRequest.operationThreading(operationThreading);
    if (request.hasContent()) {
      validateQueryRequest.source(request.content(),request.contentUnsafe());
    }
 else {
      String source=request.param("source");
      if (source != null) {
        validateQueryRequest.source(source);
      }
 else {
        QuerySourceBuilder querySourceBuilder=RestActions.parseQuerySource(request);
        if (querySourceBuilder != null) {
          validateQueryRequest.source(querySourceBuilder);
        }
      }
    }
    validateQueryRequest.types(Strings.splitStringByCommaToArray(request.param("type")));
    if (request.paramAsBoolean("explain",false)) {
      validateQueryRequest.explain(true);
    }
 else {
      validateQueryRequest.explain(false);
    }
  }
 catch (  Exception e) {
    try {
      XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
      channel.sendResponse(new XContentRestResponse(request,BAD_REQUEST,builder.startObject().field("error",e.getMessage()).endObject()));
    }
 catch (    IOException e1) {
      logger.error("Failed to send failure response",e1);
    }
    return;
  }
  client.admin().indices().validateQuery(validateQueryRequest,new ActionListener<ValidateQueryResponse>(){
    @Override public void onResponse(    ValidateQueryResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        builder.field("valid",response.isValid());
        buildBroadcastShardsHeader(builder,response);
        if (response.getQueryExplanation() != null && !response.getQueryExplanation().isEmpty()) {
          builder.startArray("explanations");
          for (          QueryExplanation explanation : response.getQueryExplanation()) {
            builder.startObject();
            if (explanation.getIndex() != null) {
              builder.field("index",explanation.getIndex(),XContentBuilder.FieldCaseConversion.NONE);
            }
            builder.field("valid",explanation.isValid());
            if (explanation.getError() != null) {
              builder.field("error",explanation.getError());
            }
            if (explanation.getExplanation() != null) {
              builder.field("explanation",explanation.getExplanation());
            }
            builder.endObject();
          }
          builder.endArray();
        }
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Throwable e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
