{
  logger.info("--> creating indices");
  createIndex("test1","test2","test3");
  client().admin().indices().preparePutMapping("test1","test2","test3").setType("type1").setSource("name","type=string").get();
  waitForConcreteMappingsOnAll("test1","type1","name");
  waitForConcreteMappingsOnAll("test2","type1","name");
  waitForConcreteMappingsOnAll("test3","type1","name");
  ensureGreen();
  logger.info("--> adding aliases to indices");
  assertAcked(admin().indices().prepareAliases().addAlias("test1","alias12"));
  assertAcked(admin().indices().prepareAliases().addAlias("test2","alias12"));
  logger.info("--> adding filtering aliases to indices");
  assertAcked(admin().indices().prepareAliases().addAlias("test1","filter1",termQuery("name","test1")));
  assertAcked(admin().indices().prepareAliases().addAlias("test2","filter23",termQuery("name","foo")));
  assertAcked(admin().indices().prepareAliases().addAlias("test3","filter23",termQuery("name","foo")));
  assertAcked(admin().indices().prepareAliases().addAlias("test1","filter13",termQuery("name","baz")));
  assertAcked(admin().indices().prepareAliases().addAlias("test3","filter13",termQuery("name","baz")));
  logger.info("--> indexing against [test1]");
  client().index(indexRequest("test1").type("type1").id("11").source(source("11","foo test1"))).get();
  client().index(indexRequest("test1").type("type1").id("12").source(source("12","bar test1"))).get();
  client().index(indexRequest("test1").type("type1").id("13").source(source("13","baz test1"))).get();
  client().index(indexRequest("test2").type("type1").id("21").source(source("21","foo test2"))).get();
  client().index(indexRequest("test2").type("type1").id("22").source(source("22","bar test2"))).get();
  client().index(indexRequest("test2").type("type1").id("23").source(source("23","baz test2"))).get();
  client().index(indexRequest("test3").type("type1").id("31").source(source("31","foo test3"))).get();
  client().index(indexRequest("test3").type("type1").id("32").source(source("32","bar test3"))).get();
  client().index(indexRequest("test3").type("type1").id("33").source(source("33","baz test3"))).get();
  refresh();
  logger.info("--> checking filtering alias for multiple indices");
  SearchResponse searchResponse=client().prepareSearch("filter23","filter13").setQuery(QueryBuilders.matchAllQuery()).get();
  assertHits(searchResponse.getHits(),"21","31","13","33");
  assertThat(client().prepareCount("filter23","filter13").setQuery(QueryBuilders.matchAllQuery()).get().getCount(),equalTo(4L));
  searchResponse=client().prepareSearch("filter23","filter1").setQuery(QueryBuilders.matchAllQuery()).get();
  assertHits(searchResponse.getHits(),"21","31","11","12","13");
  assertThat(client().prepareCount("filter23","filter1").setQuery(QueryBuilders.matchAllQuery()).get().getCount(),equalTo(5L));
  searchResponse=client().prepareSearch("filter13","filter1").setQuery(QueryBuilders.matchAllQuery()).get();
  assertHits(searchResponse.getHits(),"11","12","13","33");
  assertThat(client().prepareCount("filter13","filter1").setQuery(QueryBuilders.matchAllQuery()).get().getCount(),equalTo(4L));
  searchResponse=client().prepareSearch("filter13","filter1","filter23").setQuery(QueryBuilders.matchAllQuery()).get();
  assertHits(searchResponse.getHits(),"11","12","13","21","31","33");
  assertThat(client().prepareCount("filter13","filter1","filter23").setQuery(QueryBuilders.matchAllQuery()).get().getCount(),equalTo(6L));
  searchResponse=client().prepareSearch("filter23","filter13","test2").setQuery(QueryBuilders.matchAllQuery()).get();
  assertHits(searchResponse.getHits(),"21","22","23","31","13","33");
  assertThat(client().prepareCount("filter23","filter13","test2").setQuery(QueryBuilders.matchAllQuery()).get().getCount(),equalTo(6L));
  searchResponse=client().prepareSearch("filter23","filter13","test1","test2").setQuery(QueryBuilders.matchAllQuery()).get();
  assertHits(searchResponse.getHits(),"11","12","13","21","22","23","31","33");
  assertThat(client().prepareCount("filter23","filter13","test1","test2").setQuery(QueryBuilders.matchAllQuery()).get().getCount(),equalTo(8L));
}
