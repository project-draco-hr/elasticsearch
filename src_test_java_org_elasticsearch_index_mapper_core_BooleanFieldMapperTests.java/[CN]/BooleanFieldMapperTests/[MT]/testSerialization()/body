{
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","boolean").endObject().endObject().endObject().endObject().string();
  DocumentMapper defaultMapper=parser.parse(mapping);
  final FieldMapper<?>[] mapper=new BooleanFieldMapper[1];
  defaultMapper.root().traverse(new FieldMapperListener(){
    @Override public void fieldMapper(    FieldMapper<?> fieldMapper){
      if (fieldMapper.name().equals("field")) {
        mapper[0]=fieldMapper;
      }
    }
  }
);
  XContentBuilder builder=XContentFactory.jsonBuilder().startObject();
  mapper[0].toXContent(builder,ToXContent.EMPTY_PARAMS);
  builder.endObject();
  assertEquals("{\"field\":{\"type\":\"boolean\"}}",builder.string());
  mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("field").field("type","boolean").field("doc_values","false").field("null_value",true).endObject().endObject().endObject().endObject().string();
  defaultMapper=parser.parse(mapping);
  defaultMapper.root().traverse(new FieldMapperListener(){
    @Override public void fieldMapper(    FieldMapper<?> fieldMapper){
      if (fieldMapper.name().equals("field")) {
        mapper[0]=fieldMapper;
      }
    }
  }
);
  builder=XContentFactory.jsonBuilder().startObject();
  mapper[0].toXContent(builder,ToXContent.EMPTY_PARAMS);
  builder.endObject();
  assertEquals("{\"field\":{\"type\":\"boolean\",\"doc_values\":false,\"null_value\":true}}",builder.string());
}
