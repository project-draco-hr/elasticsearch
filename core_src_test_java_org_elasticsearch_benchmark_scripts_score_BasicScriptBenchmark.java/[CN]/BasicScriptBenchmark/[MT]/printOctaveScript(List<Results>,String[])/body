{
  if (args.length == 0) {
    return;
  }
  try (BufferedWriter out=Files.newBufferedWriter(PathUtils.get(args[0]),StandardCharsets.UTF_8)){
    out.write("#! /usr/local/bin/octave -qf");
    out.write("\n\n\n\n");
    out.write("######################################\n");
    out.write("# Octave script for plotting results\n");
    String filename="scriptScoreBenchmark" + new DateTime(DateTimeZone.UTC).toString();
    out.write("#Call '" + args[0] + "' from the command line. The plot is then in "+ filename+ "\n\n");
    out.write("handleArray = [];\n tagArray = [];\n plot([]);\n hold on;\n");
    for (    Results result : allResults) {
      out.write("\n");
      out.write("# " + result.description);
      result.printResults(out);
      out.write("handleArray = [handleArray, addToPlot(" + Results.NUM_TERMS + ", "+ Results.TIME_PER_DOCIN_MILLIS+ ", '"+ result.color+ "','"+ result.lineStyle+ "',5)];\n");
      out.write("tagArray = [tagArray; '" + result.label + "'];\n");
      out.write("\n");
    }
    out.write("xlabel(\'number of query terms');");
    out.write("ylabel(\'query time per document');");
    out.write("legend(handleArray,tagArray);\n");
    out.write("saveas(gcf,'" + filename + ".png','png')\n");
    out.write("hold off;\n\n");
  }
 catch (  IOException e) {
    System.err.println("Error: " + e.getMessage());
  }
  writeHelperFunction();
}
