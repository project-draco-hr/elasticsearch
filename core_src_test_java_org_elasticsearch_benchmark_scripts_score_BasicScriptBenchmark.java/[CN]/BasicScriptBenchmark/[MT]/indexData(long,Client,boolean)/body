{
  try {
    client.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  Throwable t) {
  }
  XContentBuilder mapping=XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties").startObject("text").field("type","string").field("index_options","offsets").field("analyzer","payload_float").endObject().endObject().endObject().endObject();
  client.admin().indices().prepareCreate("test").addMapping("type1",mapping).setSettings(Settings.settingsBuilder().put("index.analysis.analyzer.payload_float.tokenizer","whitespace").putArray("index.analysis.analyzer.payload_float.filter","delimited_float").put("index.analysis.filter.delimited_float.delimiter","|").put("index.analysis.filter.delimited_float.encoding","float").put("index.analysis.filter.delimited_float.type","delimited_payload_filter").put("index.number_of_replicas",0).put("index.number_of_shards",1)).execute().actionGet();
  client.admin().cluster().prepareHealth("test").setWaitForGreenStatus().setTimeout("10s").execute().actionGet();
  BulkRequestBuilder bulkRequest=client.prepareBulk();
  Random random=new Random(1);
  for (int i=0; i < numDocs; i++) {
    bulkRequest.add(client.prepareIndex().setType("type1").setIndex("test").setSource(jsonBuilder().startObject().field("text",randomText(random,randomizeTerms)).endObject()));
    if (i % 1000 == 0) {
      bulkRequest.execute().actionGet();
      bulkRequest=client.prepareBulk();
    }
  }
  bulkRequest.execute().actionGet();
  client.admin().indices().prepareRefresh("test").execute().actionGet();
  client.admin().indices().prepareFlush("test").execute().actionGet();
  System.out.println("Done indexing " + numDocs + " documents");
}
