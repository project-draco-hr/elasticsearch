{
  if (lifecycle.stoppedOrClosed()) {
    listener.onClose();
    return;
  }
  NotifyTimeout notifyTimeout=new NotifyTimeout(listener,timeout);
  notifyTimeout.future=threadPool.schedule(notifyTimeout,timeout,ThreadPool.ExecutionType.THREADED);
  onGoingTimeouts.add(notifyTimeout);
  clusterStateListeners.add(listener);
  updateTasksExecutor.execute(new Runnable(){
    @Override public void run(){
      listener.postAdded();
    }
  }
);
}
