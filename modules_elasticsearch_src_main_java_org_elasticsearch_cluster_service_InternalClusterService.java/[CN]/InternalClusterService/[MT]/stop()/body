{
  if (!lifecycle.moveToStopped()) {
    return this;
  }
  scheduledFuture.cancel(false);
  for (  TimeoutHolder holder : clusterStateTimeoutListeners) {
    holder.listener.onTimeout(holder.timeout);
  }
  updateTasksExecutor.shutdown();
  try {
    updateTasksExecutor.awaitTermination(10,TimeUnit.SECONDS);
  }
 catch (  InterruptedException e) {
  }
  return this;
}
