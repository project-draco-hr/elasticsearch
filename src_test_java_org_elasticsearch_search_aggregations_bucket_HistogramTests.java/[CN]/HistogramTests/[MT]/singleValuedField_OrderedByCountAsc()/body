{
  SearchResponse response=client().prepareSearch("idx").addAggregation(histogram("histo").field(SINGLE_VALUED_FIELD_NAME).interval(interval).order(Histogram.Order.COUNT_ASC)).execute().actionGet();
  assertSearchResponse(response);
  Histogram histo=response.getAggregations().get("histo");
  assertThat(histo,notNullValue());
  assertThat(histo.getName(),equalTo("histo"));
  assertThat(histo.getBuckets().size(),equalTo(numValueBuckets));
  LongOpenHashSet buckets=new LongOpenHashSet();
  List<Histogram.Bucket> histoBuckets=new ArrayList<Histogram.Bucket>(histo.getBuckets());
  long previousCount=Long.MIN_VALUE;
  for (int i=0; i < numValueBuckets; ++i) {
    Histogram.Bucket bucket=histoBuckets.get(i);
    assertThat(bucket,notNullValue());
    long key=((Number)bucket.getKey()).longValue();
    assertEquals(0,key % interval);
    assertTrue(buckets.add(key));
    assertThat(bucket.getDocCount(),equalTo(valueCounts[(int)(key / interval)]));
    assertThat(bucket.getDocCount(),greaterThanOrEqualTo(previousCount));
    previousCount=bucket.getDocCount();
  }
}
