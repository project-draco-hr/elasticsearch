{
  SearchResponse response=client().prepareSearch("idx").addAggregation(histogram("histo").field(MULTI_VALUED_FIELD_NAME).script("_value + 1").interval(interval)).execute().actionGet();
  assertSearchResponse(response);
  final int numBuckets=(numDocs + 2) / interval - 2 / interval + 1;
  final long[] counts=new long[(numDocs + 2) / interval + 1];
  for (int i=0; i < numDocs; ++i) {
    final int bucket1=(i + 2) / interval;
    final int bucket2=(i + 3) / interval;
    ++counts[bucket1];
    if (bucket1 != bucket2) {
      ++counts[bucket2];
    }
  }
  Histogram histo=response.getAggregations().get("histo");
  assertThat(histo,notNullValue());
  assertThat(histo.getName(),equalTo("histo"));
  assertThat(histo.buckets().size(),equalTo(numBuckets));
  for (int i=2 / interval; i <= (numDocs + 2) / interval; ++i) {
    Histogram.Bucket bucket=histo.getByKey(i * interval);
    assertThat(bucket,notNullValue());
    assertThat(bucket.getKey(),equalTo((long)i * interval));
    assertThat(bucket.getDocCount(),equalTo(counts[i]));
  }
}
