{
  prepareCreate("empty_bucket_idx").addMapping("type",SINGLE_VALUED_FIELD_NAME,"type=integer").execute().actionGet();
  List<IndexRequestBuilder> builders=new ArrayList<IndexRequestBuilder>();
  for (int i=0; i < 2; i++) {
    builders.add(client().prepareIndex("empty_bucket_idx","type","" + i).setSource(jsonBuilder().startObject().field(SINGLE_VALUED_FIELD_NAME,i * 2).endObject()));
  }
  indexRandom(true,builders.toArray(new IndexRequestBuilder[builders.size()]));
  SearchResponse searchResponse=client().prepareSearch("empty_bucket_idx").setQuery(matchAllQuery()).addAggregation(histogram("histo").field(SINGLE_VALUED_FIELD_NAME).interval(1l).minDocCount(0).subAggregation(histogram("sub_histo").interval(1l))).execute().actionGet();
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(2l));
  Histogram histo=searchResponse.getAggregations().get("histo");
  assertThat(histo,Matchers.notNullValue());
  Histogram.Bucket bucket=histo.getBucketByKey(1l);
  assertThat(bucket,Matchers.notNullValue());
  histo=bucket.getAggregations().get("sub_histo");
  assertThat(histo,Matchers.notNullValue());
  assertThat(histo.getName(),equalTo("sub_histo"));
  assertThat(histo.getBuckets().isEmpty(),is(true));
}
