{
  IndexService indexService=newIndexService();
  IndexService.RefreshTasks refreshTask=indexService.getRefreshTask();
  assertEquals(1000,refreshTask.getInterval().millis());
  assertTrue(indexService.getRefreshTask().mustReschedule());
  IndexMetaData metaData=IndexMetaData.builder(indexService.getMetaData()).settings(Settings.builder().put(indexService.getMetaData().getSettings()).put(IndexSettings.INDEX_REFRESH_INTERVAL,-1)).build();
  indexService.updateMetaData(metaData);
  assertNotSame(refreshTask,indexService.getRefreshTask());
  assertTrue(refreshTask.isClosed());
  assertFalse(indexService.getRefreshTask().mustReschedule());
  metaData=IndexMetaData.builder(indexService.getMetaData()).settings(Settings.builder().put(indexService.getMetaData().getSettings()).put(IndexSettings.INDEX_REFRESH_INTERVAL,"100ms")).build();
  indexService.updateMetaData(metaData);
  assertNotSame(refreshTask,indexService.getRefreshTask());
  assertTrue(refreshTask.isClosed());
  refreshTask=indexService.getRefreshTask();
  assertTrue(refreshTask.mustReschedule());
  assertEquals(100,refreshTask.getInterval().millis());
  metaData=IndexMetaData.builder(indexService.getMetaData()).settings(Settings.builder().put(indexService.getMetaData().getSettings()).put(IndexSettings.INDEX_REFRESH_INTERVAL,"200ms")).build();
  indexService.updateMetaData(metaData);
  assertNotSame(refreshTask,indexService.getRefreshTask());
  assertTrue(refreshTask.isClosed());
  refreshTask=indexService.getRefreshTask();
  assertTrue(refreshTask.mustReschedule());
  assertEquals(200,refreshTask.getInterval().millis());
  metaData=IndexMetaData.builder(indexService.getMetaData()).settings(Settings.builder().put(indexService.getMetaData().getSettings()).put(IndexSettings.INDEX_REFRESH_INTERVAL,"200ms")).build();
  indexService.updateMetaData(metaData);
  assertSame(refreshTask,indexService.getRefreshTask());
  assertTrue(indexService.getRefreshTask().mustReschedule());
  assertFalse(refreshTask.isClosed());
  assertEquals(200,refreshTask.getInterval().millis());
}
