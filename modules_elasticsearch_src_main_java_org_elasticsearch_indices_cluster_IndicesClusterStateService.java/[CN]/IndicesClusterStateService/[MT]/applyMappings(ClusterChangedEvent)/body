{
  for (  IndexMetaData indexMetaData : event.state().metaData()) {
    if (!indicesService.hasIndex(indexMetaData.index())) {
      continue;
    }
    String index=indexMetaData.index();
    IndexService indexService=indicesService.indexServiceSafe(index);
    MapperService mapperService=indexService.mapperService();
    ImmutableMap<String,String> mappings=indexMetaData.mappings();
    for (    Map.Entry<String,String> entry : mappings.entrySet()) {
      String mappingType=entry.getKey();
      String mappingSource=entry.getValue();
      try {
        if (!mapperService.hasMapping(mappingType)) {
          if (logger.isDebugEnabled()) {
            logger.debug("Index [" + index + "] Adding mapping ["+ mappingType+ "], source ["+ mappingSource+ "]");
          }
          mapperService.add(mappingType,mappingSource);
          nodeMappingCreatedAction.nodeMappingCreated(new NodeMappingCreatedAction.NodeMappingCreatedResponse(index,mappingType,event.state().nodes().localNodeId()));
        }
 else {
          DocumentMapper existingMapper=mapperService.documentMapper(mappingType);
          if (!mappingSource.equals(existingMapper.mappingSource())) {
            if (logger.isDebugEnabled()) {
              logger.debug("Index [" + index + "] Updating mapping ["+ mappingType+ "], source ["+ mappingSource+ "]");
            }
            mapperService.add(mappingType,mappingSource);
            nodeMappingCreatedAction.nodeMappingCreated(new NodeMappingCreatedAction.NodeMappingCreatedResponse(index,mappingType,event.state().nodes().localNodeId()));
          }
        }
      }
 catch (      Exception e) {
        logger.warn("Failed to add mapping [" + mappingType + "], source ["+ mappingSource+ "]",e);
      }
    }
  }
}
