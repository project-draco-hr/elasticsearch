{
  while (state.index < state.length) {
    if (state.data[state.index] == '(' && (flags & PRECEDENCE_OPERATORS) != 0) {
      consumeSubQuery(state);
    }
 else     if (state.data[state.index] == ')' && (flags & PRECEDENCE_OPERATORS) != 0) {
      ++state.index;
    }
 else     if (state.data[state.index] == '"' && (flags & PHRASE_OPERATOR) != 0) {
      consumePhrase(state);
    }
 else     if (state.data[state.index] == '+' && (flags & AND_OPERATOR) != 0) {
      if (state.currentOperation == null && state.top != null) {
        state.currentOperation=BooleanClause.Occur.MUST;
      }
      ++state.index;
    }
 else     if (state.data[state.index] == '|' && (flags & OR_OPERATOR) != 0) {
      if (state.currentOperation == null && state.top != null) {
        state.currentOperation=BooleanClause.Occur.SHOULD;
      }
      ++state.index;
    }
 else     if (state.data[state.index] == '-' && (flags & NOT_OPERATOR) != 0) {
      ++state.not;
      ++state.index;
      continue;
    }
 else     if ((state.data[state.index] == ' ' || state.data[state.index] == '\t' || state.data[state.index] == '\n' || state.data[state.index] == '\r') && (flags & WHITESPACE_OPERATOR) != 0) {
      ++state.index;
    }
 else {
      consumeToken(state);
    }
    state.not=0;
  }
}
