{
  List<Document> docs=new ArrayList<>();
  Document document=new Document();
  document.add(new StringField("field2","a",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","b",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","c",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("__type","parent",Field.Store.NO));
  document.add(new StringField("field1","a",Field.Store.NO));
  docs.add(document);
  writer.addDocuments(docs);
  writer.commit();
  docs.clear();
  document=new Document();
  document.add(new StringField("field2","c",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","d",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","e",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("__type","parent",Field.Store.NO));
  document.add(new StringField("field1","b",Field.Store.NO));
  docs.add(document);
  writer.addDocuments(docs);
  docs.clear();
  document=new Document();
  document.add(new StringField("field2","e",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","f",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","g",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("__type","parent",Field.Store.NO));
  document.add(new StringField("field1","c",Field.Store.NO));
  docs.add(document);
  writer.addDocuments(docs);
  docs.clear();
  document=new Document();
  document.add(new StringField("field2","g",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","h",Field.Store.NO));
  document.add(new StringField("filter_1","F",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","i",Field.Store.NO));
  document.add(new StringField("filter_1","F",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("__type","parent",Field.Store.NO));
  document.add(new StringField("field1","d",Field.Store.NO));
  docs.add(document);
  writer.addDocuments(docs);
  writer.commit();
  docs.clear();
  document=new Document();
  document.add(new StringField("field2","i",Field.Store.NO));
  document.add(new StringField("filter_1","F",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","j",Field.Store.NO));
  document.add(new StringField("filter_1","F",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","k",Field.Store.NO));
  document.add(new StringField("filter_1","F",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("__type","parent",Field.Store.NO));
  document.add(new StringField("field1","f",Field.Store.NO));
  docs.add(document);
  writer.addDocuments(docs);
  docs.clear();
  document=new Document();
  document.add(new StringField("field2","k",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","l",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","m",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("__type","parent",Field.Store.NO));
  document.add(new StringField("field1","g",Field.Store.NO));
  docs.add(document);
  writer.addDocuments(docs);
  document=new Document();
  document.add(new StringField("__type","parent",Field.Store.NO));
  document.add(new StringField("field1","h",Field.Store.NO));
  writer.addDocument(document);
  docs.clear();
  document=new Document();
  document.add(new StringField("field2","m",Field.Store.NO));
  document.add(new StringField("filter_1","T",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","n",Field.Store.NO));
  document.add(new StringField("filter_1","F",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("field2","o",Field.Store.NO));
  document.add(new StringField("filter_1","F",Field.Store.NO));
  docs.add(document);
  document=new Document();
  document.add(new StringField("__type","parent",Field.Store.NO));
  document.add(new StringField("field1","i",Field.Store.NO));
  docs.add(document);
  writer.addDocuments(docs);
  writer.commit();
  document=new Document();
  document.add(new StringField("fieldXXX","x",Field.Store.NO));
  writer.addDocument(document);
  document=new Document();
  document.add(new StringField("fieldXXX","x",Field.Store.NO));
  writer.addDocument(document);
  document=new Document();
  document.add(new StringField("fieldXXX","x",Field.Store.NO));
  writer.addDocument(document);
  MultiValueMode sortMode=MultiValueMode.MIN;
  IndexSearcher searcher=new IndexSearcher(DirectoryReader.open(writer,false));
  PagedBytesIndexFieldData indexFieldData=getForField("field2");
  Filter parentFilter=new TermFilter(new Term("__type","parent"));
  Filter childFilter=new NotFilter(parentFilter);
  BytesRefFieldComparatorSource nestedComparatorSource=new BytesRefFieldComparatorSource(indexFieldData,null,sortMode,new Nested(parentFilter,childFilter));
  ToParentBlockJoinQuery query=new ToParentBlockJoinQuery(new XFilteredQuery(new MatchAllDocsQuery(),childFilter),new FixedBitSetCachingWrapperFilter(parentFilter),ScoreMode.None);
  Sort sort=new Sort(new SortField("field2",nestedComparatorSource));
  TopFieldDocs topDocs=searcher.search(query,5,sort);
  assertThat(topDocs.totalHits,equalTo(7));
  assertThat(topDocs.scoreDocs.length,equalTo(5));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(3));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[0]).fields[0]).utf8ToString(),equalTo("a"));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(7));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[1]).fields[0]).utf8ToString(),equalTo("c"));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(11));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[2]).fields[0]).utf8ToString(),equalTo("e"));
  assertThat(topDocs.scoreDocs[3].doc,equalTo(15));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[3]).fields[0]).utf8ToString(),equalTo("g"));
  assertThat(topDocs.scoreDocs[4].doc,equalTo(19));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[4]).fields[0]).utf8ToString(),equalTo("i"));
  sortMode=MultiValueMode.MAX;
  nestedComparatorSource=new BytesRefFieldComparatorSource(indexFieldData,null,sortMode,new Nested(parentFilter,childFilter));
  sort=new Sort(new SortField("field2",nestedComparatorSource,true));
  topDocs=searcher.search(query,5,sort);
  assertThat(topDocs.totalHits,equalTo(7));
  assertThat(topDocs.scoreDocs.length,equalTo(5));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(28));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[0]).fields[0]).utf8ToString(),equalTo("o"));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(23));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[1]).fields[0]).utf8ToString(),equalTo("m"));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(19));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[2]).fields[0]).utf8ToString(),equalTo("k"));
  assertThat(topDocs.scoreDocs[3].doc,equalTo(15));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[3]).fields[0]).utf8ToString(),equalTo("i"));
  assertThat(topDocs.scoreDocs[4].doc,equalTo(11));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[4]).fields[0]).utf8ToString(),equalTo("g"));
  childFilter=new AndFilter(Arrays.asList(new NotFilter(parentFilter),new TermFilter(new Term("filter_1","T"))));
  nestedComparatorSource=new BytesRefFieldComparatorSource(indexFieldData,null,sortMode,new Nested(parentFilter,childFilter));
  query=new ToParentBlockJoinQuery(new XFilteredQuery(new MatchAllDocsQuery(),childFilter),new FixedBitSetCachingWrapperFilter(parentFilter),ScoreMode.None);
  sort=new Sort(new SortField("field2",nestedComparatorSource,true));
  topDocs=searcher.search(query,5,sort);
  assertThat(topDocs.totalHits,equalTo(6));
  assertThat(topDocs.scoreDocs.length,equalTo(5));
  assertThat(topDocs.scoreDocs[0].doc,equalTo(23));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[0]).fields[0]).utf8ToString(),equalTo("m"));
  assertThat(topDocs.scoreDocs[1].doc,equalTo(28));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[1]).fields[0]).utf8ToString(),equalTo("m"));
  assertThat(topDocs.scoreDocs[2].doc,equalTo(11));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[2]).fields[0]).utf8ToString(),equalTo("g"));
  assertThat(topDocs.scoreDocs[3].doc,equalTo(15));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[3]).fields[0]).utf8ToString(),equalTo("g"));
  assertThat(topDocs.scoreDocs[4].doc,equalTo(7));
  assertThat(((BytesRef)((FieldDoc)topDocs.scoreDocs[4]).fields[0]).utf8ToString(),equalTo("e"));
  searcher.getIndexReader().close();
}
