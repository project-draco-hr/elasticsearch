{
  if (event.nodesRemoved()) {
synchronized (banedParents) {
      lastDiscoveryNodes=event.state().getNodes();
      Iterator<TaskId> banIterator=banedParents.keySet().iterator();
      while (banIterator.hasNext()) {
        TaskId taskId=banIterator.next();
        if (lastDiscoveryNodes.nodeExists(taskId.getNodeId()) == false) {
          logger.debug("Removing ban for the parent [{}] on the node [{}], reason: the parent node is gone",taskId,event.state().getNodes().localNode());
          banIterator.remove();
        }
      }
    }
    for (    Map.Entry<Long,CancellableTaskHolder> taskEntry : cancellableTasks.entrySet()) {
      CancellableTaskHolder holder=taskEntry.getValue();
      CancellableTask task=holder.getTask();
      TaskId parentTaskId=task.getParentTaskId();
      if (parentTaskId.isSet() == false && lastDiscoveryNodes.nodeExists(parentTaskId.getNodeId()) == false) {
        if (task.cancelOnParentLeaving()) {
          holder.cancel("Coordinating node [" + parentTaskId.getNodeId() + "] left the cluster");
        }
      }
    }
  }
}
