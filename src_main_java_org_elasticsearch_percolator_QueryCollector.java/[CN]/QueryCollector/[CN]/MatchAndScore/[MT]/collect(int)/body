{
  spare.hash=values.getValueHashed(doc,spare.bytes);
  Query query=queries.get(spare);
  if (query == null) {
    return;
  }
  try {
    collector.reset();
    searcher.search(query,collector);
    if (collector.exists()) {
      if (!limit || counter < size) {
        matches.add(values.makeSafe(spare.bytes));
        scores.add(scorer.score());
      }
      counter++;
    }
  }
 catch (  IOException e) {
    logger.warn("[" + spare.bytes.utf8ToString() + "] failed to execute query",e);
  }
}
