{
  fillExtendedMvSet();
  refreshReader();
  FieldDataType fieldDataType=new FieldDataType("string",Settings.builder().put("global_values","fixed").put("cache","node"));
  IndexOrdinalsFieldData ifd=getForField(fieldDataType,"value",hasDocValues());
  IndexOrdinalsFieldData globalOrdinals=ifd.loadGlobal(topLevelReader);
  assertThat(ifd.loadGlobal(topLevelReader),sameInstance(globalOrdinals));
  assertThat(indicesFieldDataCache.getCache().weight(),equalTo(hasDocValues() ? 1L : 4L));
  IndexOrdinalsFieldData cachedInstance=null;
  for (  Accountable ramUsage : indicesFieldDataCache.getCache().values()) {
    if (ramUsage instanceof IndexOrdinalsFieldData) {
      cachedInstance=(IndexOrdinalsFieldData)ramUsage;
      break;
    }
  }
  assertThat(cachedInstance,sameInstance(globalOrdinals));
  topLevelReader.close();
  assertThat(indicesFieldDataCache.getCache().weight(),equalTo(hasDocValues() ? 0L : 3L));
  refreshReader();
  assertThat(ifd.loadGlobal(topLevelReader),not(sameInstance(globalOrdinals)));
  ifdService.clear();
  assertThat(indicesFieldDataCache.getCache().weight(),equalTo(0L));
}
