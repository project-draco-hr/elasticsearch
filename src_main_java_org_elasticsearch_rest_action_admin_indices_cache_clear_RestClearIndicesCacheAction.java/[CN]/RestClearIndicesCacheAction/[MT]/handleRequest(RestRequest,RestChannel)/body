{
  ClearIndicesCacheRequest clearIndicesCacheRequest=new ClearIndicesCacheRequest(RestActions.splitIndices(request.param("index")));
  clearIndicesCacheRequest.setListenerThreaded(false);
  if (request.hasParam("ignore_indices")) {
    clearIndicesCacheRequest.setIgnoreIndices(IgnoreIndices.fromString(request.param("ignore_indices")));
  }
  try {
    clearIndicesCacheRequest.setFilterCache(request.paramAsBoolean("filter",clearIndicesCacheRequest.isFilterCache()));
    clearIndicesCacheRequest.setFieldDataCache(request.paramAsBoolean("field_data",clearIndicesCacheRequest.isFieldDataCache()));
    clearIndicesCacheRequest.setIdCache(request.paramAsBoolean("id",clearIndicesCacheRequest.isIdCache()));
    clearIndicesCacheRequest.setFields(request.paramAsStringArray("fields",clearIndicesCacheRequest.getFields()));
    clearIndicesCacheRequest.setFilterKeys(request.paramAsStringArray("filter_keys",clearIndicesCacheRequest.getFilterKeys()));
    BroadcastOperationThreading operationThreading=BroadcastOperationThreading.fromString(request.param("operationThreading"),BroadcastOperationThreading.SINGLE_THREAD);
    if (operationThreading == BroadcastOperationThreading.NO_THREADS) {
      operationThreading=BroadcastOperationThreading.THREAD_PER_SHARD;
    }
    clearIndicesCacheRequest.setOperationThreading(operationThreading);
  }
 catch (  Exception e) {
    try {
      XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
      channel.sendResponse(new XContentRestResponse(request,BAD_REQUEST,builder.startObject().field("error",e.getMessage()).endObject()));
    }
 catch (    IOException e1) {
      logger.error("Failed to send failure response",e1);
    }
    return;
  }
  client.admin().indices().clearCache(clearIndicesCacheRequest,new ActionListener<ClearIndicesCacheResponse>(){
    @Override public void onResponse(    ClearIndicesCacheResponse response){
      try {
        XContentBuilder builder=RestXContentBuilder.restContentBuilder(request);
        builder.startObject();
        builder.field("ok",true);
        buildBroadcastShardsHeader(builder,response);
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,OK,builder));
      }
 catch (      Exception e) {
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
