{
  Map<String,Object> config=new HashMap<>();
  config.put("foo","fooScriptValue");
  config.put("bar_file","barScriptValue");
  config.put("baz_id",1L);
  config.put("lang","myLang");
  Set<String> parameters=new HashSet<>();
  parameters.add("foo");
  parameters.add("bar");
  parameters.add("baz");
  ScriptParameterParser paramParser=new ScriptParameterParser(parameters);
  assertThat(paramParser.getScriptParameterValue("foo"),nullValue());
  assertThat(paramParser.getScriptParameterValue("bar"),nullValue());
  assertThat(paramParser.getScriptParameterValue("baz"),nullValue());
  assertThat(paramParser.getScriptParameterValue("bar_file"),nullValue());
  assertThat(paramParser.getScriptParameterValue("baz_id"),nullValue());
  assertThat(paramParser.lang(),nullValue());
  try {
    paramParser.parseConfig(config,true,ParseFieldMatcher.STRICT);
    fail("Expected ScriptParseException");
  }
 catch (  ScriptParseException e) {
    assertThat(e.getMessage(),is("Value must be of type String: [baz_id]"));
  }
}
