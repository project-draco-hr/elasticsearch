{
  XContentParser parser=XContentHelper.createParser(new BytesArray("{ \"foo_file\" : \"scriptValue\", \"foo\" : \"scriptValue\" }"));
  Token token=parser.nextToken();
  while (token != Token.VALUE_STRING) {
    token=parser.nextToken();
  }
  Set<String> parameters=Collections.singleton("foo");
  ScriptParameterParser paramParser=new ScriptParameterParser(parameters);
  assertThat(paramParser.getScriptParameterValue("foo"),nullValue());
  assertThat(paramParser.token(parser.currentName(),parser.currentToken(),parser,ParseFieldMatcher.STRICT),equalTo(true));
  assertParameterValue(paramParser,"foo","scriptValue",ScriptType.FILE);
  assertThat(paramParser.lang(),nullValue());
  token=parser.nextToken();
  while (token != Token.VALUE_STRING) {
    token=parser.nextToken();
  }
  try {
    paramParser.token(parser.currentName(),parser.currentToken(),parser,ParseFieldMatcher.STRICT);
    fail("Expected ScriptParseException");
  }
 catch (  ScriptParseException e) {
    assertThat(e.getMessage(),is("Only one of [foo, foo_file, foo_id] is allowed."));
  }
}
