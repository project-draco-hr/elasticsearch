{
  Cache<String,FieldData> fieldDataCache=cache.get(reader.getCoreCacheKey());
  if (fieldDataCache == null) {
synchronized (creationMutex) {
      fieldDataCache=cache.get(reader.getCoreCacheKey());
      if (fieldDataCache == null) {
        fieldDataCache=buildFieldDataMap();
        if (reader instanceof SegmentReader) {
          ((SegmentReader)reader).addCoreClosedListener(this);
        }
        cache.put(reader.getCoreCacheKey(),fieldDataCache);
      }
    }
  }
  FieldData fieldData=fieldDataCache.getIfPresent(fieldName);
  if (fieldData == null) {
synchronized (fieldDataCache) {
      fieldData=fieldDataCache.getIfPresent(fieldName);
      if (fieldData == null) {
        try {
          long time=System.nanoTime();
          fieldData=FieldData.load(type,reader,fieldName);
          fieldDataCache.put(fieldName,fieldData);
          long took=System.nanoTime() - time;
          if (logger.isTraceEnabled()) {
            logger.trace("loaded field [{}] for reader [{}], took [{}], took_millis [{}]",fieldName,reader,TimeValue.timeValueNanos(took),TimeUnit.NANOSECONDS.toMillis(took));
          }
        }
 catch (        OutOfMemoryError e) {
          logger.warn("loading field [" + fieldName + "] caused out of memory failure",e);
          final OutOfMemoryError outOfMemoryError=new OutOfMemoryError("loading field [" + fieldName + "] caused out of memory failure");
          outOfMemoryError.initCause(e);
          throw outOfMemoryError;
        }
      }
    }
  }
  return fieldData;
}
