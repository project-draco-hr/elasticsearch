{
  assertEquals(5D,Utility.subtractWithoutOverflow(10D,5D),0D);
  assertTrue(Double.isNaN(Utility.subtractWithoutOverflow(5D,Double.NaN)));
  assertTrue(Double.isNaN(Utility.subtractWithoutOverflow(Double.POSITIVE_INFINITY,Double.POSITIVE_INFINITY)));
  try {
    Utility.subtractWithoutOverflow(Double.MAX_VALUE,-Double.MAX_VALUE);
    fail("did not get expected exception");
  }
 catch (  ArithmeticException expected) {
  }
  try {
    Utility.subtractWithoutOverflow(-Double.MAX_VALUE,Double.MAX_VALUE);
    fail("did not get expected exception");
  }
 catch (  ArithmeticException expected) {
  }
}
