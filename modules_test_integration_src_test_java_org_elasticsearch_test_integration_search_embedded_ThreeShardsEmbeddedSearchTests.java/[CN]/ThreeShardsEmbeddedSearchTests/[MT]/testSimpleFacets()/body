{
  SearchSourceBuilder sourceBuilder=searchSource().query(termQuery("multi","test")).from(0).size(20).explain(true).sort("age",SortOrder.ASC).facet(FacetBuilders.queryFacet("all",termQuery("multi","test"))).facet(FacetBuilders.queryFacet("test1",termQuery("name","test1")));
  Map<SearchShardTarget,QuerySearchResultProvider> queryResults=newHashMap();
  for (  ShardIterator shardIt : clusterService.operationRouting().searchShards(clusterService.state(),new String[]{"test"},new String[]{"test"},null,null,null)) {
    for (    ShardRouting shardRouting : shardIt.asUnordered()) {
      InternalSearchRequest searchRequest=searchRequest(shardRouting,sourceBuilder,SearchType.QUERY_THEN_FETCH).scroll(new Scroll(new TimeValue(10,TimeUnit.MINUTES)));
      QuerySearchResult queryResult=nodeToSearchService.get(shardRouting.currentNodeId()).executeQueryPhase(searchRequest);
      queryResults.put(queryResult.shardTarget(),queryResult);
    }
  }
  ShardDoc[] sortedShardList=searchPhaseController.sortDocs(queryResults.values());
  Map<SearchShardTarget,ExtTIntArrayList> docIdsToLoad=searchPhaseController.docIdsToLoad(sortedShardList);
  Map<SearchShardTarget,FetchSearchResult> fetchResults=newHashMap();
  for (  Map.Entry<SearchShardTarget,ExtTIntArrayList> entry : docIdsToLoad.entrySet()) {
    SearchShardTarget shardTarget=entry.getKey();
    ExtTIntArrayList docIds=entry.getValue();
    FetchSearchResult fetchResult=nodeToSearchService.get(shardTarget.nodeId()).executeFetchPhase(new FetchSearchRequest(queryResults.get(shardTarget).queryResult().id(),docIds));
    fetchResults.put(fetchResult.shardTarget(),fetchResult.initCounter());
  }
  InternalSearchResponse searchResponse=searchPhaseController.merge(sortedShardList,queryResults,fetchResults);
  assertThat(searchResponse.hits().totalHits(),equalTo(100l));
  assertThat(searchResponse.facets().facet(QueryFacet.class,"test1").count(),equalTo(1l));
  assertThat(searchResponse.facets().facet(QueryFacet.class,"all").count(),equalTo(100l));
}
