{
  EnhancedPainlessLexer realLexer=(EnhancedPainlessLexer)lexer;
  Token lastToken=realLexer.getPreviousToken();
  if (lastToken == null) {
    return true;
  }
switch (lastToken.getType()) {
case PainlessLexer.RBRACE:
case PainlessLexer.RP:
case PainlessLexer.OCTAL:
case PainlessLexer.HEX:
case PainlessLexer.INTEGER:
case PainlessLexer.DECIMAL:
case PainlessLexer.ID:
case PainlessLexer.DOTINTEGER:
case PainlessLexer.DOTID:
    return false;
default :
  return true;
}
}
