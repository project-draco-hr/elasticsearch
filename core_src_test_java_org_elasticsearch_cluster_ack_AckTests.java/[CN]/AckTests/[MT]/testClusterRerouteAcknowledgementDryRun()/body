{
  client().admin().indices().prepareCreate("test").setSettings(settingsBuilder().put(SETTING_NUMBER_OF_SHARDS,between(cluster().numDataNodes(),DEFAULT_MAX_NUM_SHARDS)).put(SETTING_NUMBER_OF_REPLICAS,0)).get();
  ensureGreen();
  MoveAllocationCommand moveAllocationCommand=getAllocationCommand();
  assertAcked(client().admin().cluster().prepareReroute().setDryRun(true).add(moveAllocationCommand));
  ClusterStateResponse clusterStateResponse=client().admin().cluster().prepareState().get();
  boolean found=false;
  for (  ShardRouting shardRouting : clusterStateResponse.getState().routingNodes().routingNodeIter(moveAllocationCommand.fromNode())) {
    if (shardRouting.shardId().equals(moveAllocationCommand.shardId())) {
      assertThat(shardRouting.started(),equalTo(true));
      found=true;
      break;
    }
  }
  assertThat(found,equalTo(true));
  for (  ShardRouting shardRouting : clusterStateResponse.getState().routingNodes().routingNodeIter(moveAllocationCommand.toNode())) {
    if (shardRouting.shardId().equals(moveAllocationCommand.shardId())) {
      fail("shard [" + shardRouting + "] shouldn't be on node ["+ moveAllocationCommand.toString()+ "]");
    }
  }
}
