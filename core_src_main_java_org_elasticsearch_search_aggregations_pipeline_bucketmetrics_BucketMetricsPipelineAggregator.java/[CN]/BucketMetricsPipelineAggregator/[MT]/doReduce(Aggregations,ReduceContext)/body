{
  preCollection();
  List<String> bucketsPath=AggregationPath.parse(bucketsPaths()[0]).getPathElementsAsStringList();
  for (  Aggregation aggregation : aggregations) {
    if (aggregation.getName().equals(bucketsPath.get(0))) {
      bucketsPath=bucketsPath.subList(1,bucketsPath.size());
      InternalMultiBucketAggregation<?,?> multiBucketsAgg=(InternalMultiBucketAggregation<?,?>)aggregation;
      List<? extends Bucket> buckets=multiBucketsAgg.getBuckets();
      for (int i=0; i < buckets.size(); i++) {
        Bucket bucket=buckets.get(i);
        Double bucketValue=BucketHelpers.resolveBucketValue(multiBucketsAgg,bucket,bucketsPath,gapPolicy);
        if (bucketValue != null && !Double.isNaN(bucketValue)) {
          collectBucketValue(bucket.getKeyAsString(),bucketValue);
        }
      }
    }
  }
  return buildAggregation(Collections.emptyList(),metaData());
}
