{
  assertNoTimeout(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).get());
  assertBusy(new Runnable(){
    @Override public void run(){
      for (      Client client : clients()) {
        ClusterHealthResponse clusterHealth=client.admin().cluster().prepareHealth().setLocal(true).get();
        assertThat("client " + client + " still has in flight fetch",clusterHealth.getNumberOfInFlightFetch(),equalTo(0));
        PendingClusterTasksResponse pendingTasks=client.admin().cluster().preparePendingClusterTasks().setLocal(true).get();
        assertThat("client " + client + " still has pending tasks "+ pendingTasks.prettyPrint(),pendingTasks,Matchers.emptyIterable());
        clusterHealth=client.admin().cluster().prepareHealth().setLocal(true).get();
        assertThat("client " + client + " still has in flight fetch",clusterHealth.getNumberOfInFlightFetch(),equalTo(0));
      }
    }
  }
);
  assertNoTimeout(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).get());
}
