{
  if (cluster() != null) {
    boolean getResolvedAddress=InetSocketTransportAddress.getResolveAddress();
    try {
      InetSocketTransportAddress.setResolveAddress(false);
      ClusterState masterClusterState=client().admin().cluster().prepareState().all().get().getState();
      byte[] masterClusterStateBytes=ClusterState.Builder.toBytes(masterClusterState);
      masterClusterState=ClusterState.Builder.fromBytes(masterClusterStateBytes,null);
      Map<String,Object> masterStateMap=convertToMap(masterClusterState);
      int masterClusterStateSize=masterClusterState.toString().length();
      String masterId=masterClusterState.nodes().masterNodeId();
      for (      Client client : cluster()) {
        ClusterState localClusterState=client.admin().cluster().prepareState().all().setLocal(true).get().getState();
        byte[] localClusterStateBytes=ClusterState.Builder.toBytes(localClusterState);
        localClusterState=ClusterState.Builder.fromBytes(localClusterStateBytes,null);
        final Map<String,Object> localStateMap=convertToMap(localClusterState);
        final int localClusterStateSize=localClusterState.toString().length();
        if (masterClusterState.version() == localClusterState.version() && localClusterState.nodes().nodes().containsKey(masterId)) {
          try {
            assertEquals("clusterstate UUID does not match",masterClusterState.uuid(),localClusterState.uuid());
            assertEquals("clusterstate size does not match",masterClusterStateSize,localClusterStateSize);
            assertTrue("clusterstate JSON serialization does not match",mapsEqualIgnoringArrayOrder(masterStateMap,localStateMap));
          }
 catch (          AssertionError error) {
            logger.error("Cluster state from master:\n{}\nLocal cluster state:\n{}",masterClusterState.toString(),localClusterState.toString());
            throw error;
          }
        }
      }
    }
  finally {
      InetSocketTransportAddress.setResolveAddress(getResolvedAddress);
    }
  }
}
