{
  builder.startObject(name);
  if (nested.isNested()) {
    builder.field("type",NESTED_CONTENT_TYPE);
    if (nested.isIncludeInParent()) {
      builder.field("include_in_parent",true);
    }
    if (nested.isIncludeInRoot()) {
      builder.field("include_in_root",true);
    }
  }
 else   if (mappers.isEmpty()) {
    builder.field("type",CONTENT_TYPE);
  }
  if (this instanceof RootObjectMapper) {
    if (dynamic != Dynamic.TRUE) {
      builder.field("dynamic",dynamic.name().toLowerCase());
    }
  }
 else {
    if (dynamic != Defaults.DYNAMIC) {
      builder.field("dynamic",dynamic.name().toLowerCase());
    }
  }
  if (enabled != Defaults.ENABLED) {
    builder.field("enabled",enabled);
  }
  if (pathType != Defaults.PATH_TYPE) {
    builder.field("path",pathType.name().toLowerCase());
  }
  if (includeInAll != null) {
    builder.field("include_in_all",includeInAll);
  }
  if (custom != null) {
    custom.toXContent(builder,params);
  }
  doXContent(builder,params);
  TreeMap<String,Mapper> sortedMappers=new TreeMap<String,Mapper>(mappers);
  for (  Mapper mapper : sortedMappers.values()) {
    if (mapper instanceof InternalMapper) {
      mapper.toXContent(builder,params);
    }
  }
  if (additionalMappers != null && additionalMappers.length > 0) {
    TreeMap<String,Mapper> additionalSortedMappers=new TreeMap<String,Mapper>();
    for (    Mapper mapper : additionalMappers) {
      additionalSortedMappers.put(mapper.name(),mapper);
    }
    for (    Mapper mapper : additionalSortedMappers.values()) {
      mapper.toXContent(builder,params);
    }
  }
  if (!mappers.isEmpty()) {
    builder.startObject("properties");
    for (    Mapper mapper : sortedMappers.values()) {
      if (!(mapper instanceof InternalMapper)) {
        mapper.toXContent(builder,params);
      }
    }
    builder.endObject();
  }
  builder.endObject();
}
