{
  final int top=top(points,offset,length);
  final int prev=(offset + ((top + length - 1) % length));
  final int next=(offset + ((top + 1) % length));
  boolean orientation=points[offset + prev].x > points[offset + next].x;
  Pair<Pair,Pair> range=range(points,offset,length);
  final double rng=(Double)range.getLeft().getRight() - (Double)range.getLeft().getLeft();
  if ((rng > DATELINE && rng != 2 * DATELINE && orientation && component == 0) || (shell.translated && component != 0)) {
    translate(points);
    if (component == 0 && !shell.translated) {
      shell.translated=true;
    }
    if ((component == 0 && orientation) || (component != 0 && !orientation)) {
      orientation=!orientation;
    }
  }
  return concat(component,direction ^ orientation,points,offset,edges,toffset,length);
}
