{
  XContentParser.Token token;
  String parameterName=null;
  double scale=0;
  double origin=0;
  double decay=0.5;
  double offset=0.0d;
  boolean scaleFound=false;
  boolean refFound=false;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      parameterName=parser.currentName();
    }
 else     if (parameterName.equals(DecayFunctionBuilder.SCALE)) {
      scale=parser.doubleValue();
      scaleFound=true;
    }
 else     if (parameterName.equals(DecayFunctionBuilder.DECAY)) {
      decay=parser.doubleValue();
    }
 else     if (parameterName.equals(DecayFunctionBuilder.ORIGIN)) {
      origin=parser.doubleValue();
      refFound=true;
    }
 else     if (parameterName.equals(DecayFunctionBuilder.OFFSET)) {
      offset=parser.doubleValue();
    }
 else {
      throw new ElasticsearchParseException("parameter [{}] not supported!",parameterName);
    }
  }
  if (!scaleFound || !refFound) {
    throw new ElasticsearchParseException("both [{}] and [{}] must be set for numeric fields.",DecayFunctionBuilder.SCALE,DecayFunctionBuilder.ORIGIN);
  }
  IndexNumericFieldData numericFieldData=parseContext.getForField(fieldType);
  return new NumericFieldDataScoreFunction(origin,scale,decay,offset,getDecayFunction(),numericFieldData,mode);
}
