{
  String currentFieldName;
  XContentParser.Token token;
  AbstractDistanceScoreFunction scoreFunction;
  String multiValueMode="MIN";
  XContentBuilder variableContent=XContentFactory.jsonBuilder();
  String fieldName=null;
  while ((token=parser.nextToken()) == XContentParser.Token.FIELD_NAME) {
    currentFieldName=parser.currentName();
    token=parser.nextToken();
    if (token == XContentParser.Token.START_OBJECT) {
      variableContent.copyCurrentStructure(parser);
      fieldName=currentFieldName;
    }
 else     if (context.parseFieldMatcher().match(currentFieldName,MULTI_VALUE_MODE)) {
      multiValueMode=parser.text();
    }
 else {
      throw new ElasticsearchParseException("malformed score function score parameters.");
    }
  }
  if (fieldName == null) {
    throw new ElasticsearchParseException("malformed score function score parameters.");
  }
  XContentParser variableParser=XContentFactory.xContent(variableContent.string()).createParser(variableContent.string());
  scoreFunction=parseVariable(fieldName,variableParser,context,MultiValueMode.fromString(multiValueMode.toUpperCase(Locale.ROOT)));
  return scoreFunction;
}
