{
  if (context.aggregations() != null) {
    AggregationContext aggregationContext=new AggregationContext(context);
    context.aggregations().aggregationContext(aggregationContext);
    List<Aggregator> collectors=new ArrayList<>();
    Aggregator[] aggregators;
    try {
      aggregators=context.aggregations().factories().createTopLevelAggregators(aggregationContext);
    }
 catch (    IOException e) {
      throw new AggregationInitializationException("Could not initialize aggregators",e);
    }
    for (int i=0; i < aggregators.length; i++) {
      if (aggregators[i] instanceof GlobalAggregator == false) {
        collectors.add(aggregators[i]);
      }
    }
    context.aggregations().aggregators(aggregators);
    if (!collectors.isEmpty()) {
      context.searcher().queryCollectors().put(AggregationPhase.class,(BucketCollector.wrap(collectors)));
    }
  }
}
