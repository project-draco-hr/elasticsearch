{
  if (context.aggregations() == null) {
    return;
  }
  if (context.queryResult().aggregations() != null) {
    return;
  }
  Aggregator[] aggregators=context.aggregations().aggregators();
  boolean success=false;
  try {
    List<Aggregator> globals=new ArrayList<>();
    for (int i=0; i < aggregators.length; i++) {
      if (aggregators[i] instanceof GlobalAggregator) {
        globals.add(aggregators[i]);
      }
    }
    if (!globals.isEmpty()) {
      AggregationsCollector collector=new AggregationsCollector(globals,context.aggregations().aggregationContext());
      Query query=new XConstantScoreQuery(Queries.MATCH_ALL_FILTER);
      Filter searchFilter=context.searchFilter(context.types());
      if (searchFilter != null) {
        query=new XFilteredQuery(query,searchFilter);
      }
      try {
        context.searcher().search(query,collector);
      }
 catch (      Exception e) {
        throw new QueryPhaseExecutionException(context,"Failed to execute global aggregators",e);
      }
      collector.postCollection();
    }
    List<InternalAggregation> aggregations=new ArrayList<>(aggregators.length);
    for (    Aggregator aggregator : context.aggregations().aggregators()) {
      aggregations.add(aggregator.buildAggregation(0));
    }
    context.queryResult().aggregations(new InternalAggregations(aggregations));
    success=true;
  }
  finally {
    Releasables.release(success,aggregators);
  }
}
