{
  logger.info("--> cleaning nodes");
  buildNode("node1",settingsBuilder().put("gateway.type","local").build());
  buildNode("node2",settingsBuilder().put("gateway.type","local").build());
  cleanAndCloseNodes();
  logger.info("--> starting 1 master node non data");
  startNode("node1",settingsBuilder().put("node.data",false).put("gateway.type","local").put("index.number_of_shards",2).put("index.number_of_replicas",1).build());
  logger.info("--> create an index");
  client("node1").admin().indices().prepareCreate("test").execute().actionGet();
  logger.info("--> closing master node");
  closeNode("node1");
  logger.info("--> starting 1 master node non data again");
  startNode("node1",settingsBuilder().put("node.data",false).put("gateway.type","local").put("index.number_of_shards",2).put("index.number_of_replicas",1).build());
  logger.info("--> waiting for test index to be created");
  ClusterHealthResponse health=client("node1").admin().cluster().prepareHealth().setIndices("test").execute().actionGet();
  assertThat(health.timedOut(),equalTo(false));
  logger.info("--> verify we have an index");
  ClusterStateResponse clusterStateResponse=client("node1").admin().cluster().prepareState().setFilterIndices("test").execute().actionGet();
  assertThat(clusterStateResponse.state().metaData().hasIndex("test"),equalTo(true));
}
