{
  boolean isFailure=randomBoolean();
  SimulateDocumentSimpleResult simulateDocumentSimpleResult;
  if (isFailure) {
    simulateDocumentSimpleResult=new SimulateDocumentSimpleResult(new IllegalArgumentException("test"));
  }
 else {
    IngestDocument ingestDocument=new IngestDocument(randomAsciiOfLengthBetween(1,10),randomAsciiOfLengthBetween(1,10),randomAsciiOfLengthBetween(1,10),Collections.singletonMap(randomAsciiOfLengthBetween(1,10),randomAsciiOfLengthBetween(1,10)));
    simulateDocumentSimpleResult=new SimulateDocumentSimpleResult(ingestDocument);
  }
  BytesStreamOutput out=new BytesStreamOutput();
  simulateDocumentSimpleResult.writeTo(out);
  StreamInput streamInput=StreamInput.wrap(out.bytes());
  SimulateDocumentSimpleResult otherSimulateDocumentSimpleResult=SimulateDocumentSimpleResult.readSimulateDocumentSimpleResult(streamInput);
  assertThat(otherSimulateDocumentSimpleResult.getIngestDocument(),equalTo(simulateDocumentSimpleResult.getIngestDocument()));
  if (isFailure) {
    assertThat(otherSimulateDocumentSimpleResult.getFailure(),instanceOf(IllegalArgumentException.class));
    IllegalArgumentException e=(IllegalArgumentException)otherSimulateDocumentSimpleResult.getFailure();
    assertThat(e.getMessage(),equalTo("test"));
  }
}
