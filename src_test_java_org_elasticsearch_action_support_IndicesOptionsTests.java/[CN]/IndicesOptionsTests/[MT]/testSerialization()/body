{
  int iterations=randomIntBetween(5,20);
  for (int i=0; i < iterations; i++) {
    IndicesOptions indicesOptions=IndicesOptions.fromOptions(randomBoolean(),randomBoolean(),randomBoolean(),randomBoolean(),randomBoolean(),randomBoolean());
    BytesStreamOutput output=new BytesStreamOutput();
    Version outputVersion=randomVersion();
    output.setVersion(outputVersion);
    indicesOptions.writeIndicesOptions(output);
    BytesStreamInput bytesStreamInput=new BytesStreamInput(output.bytes());
    bytesStreamInput.setVersion(randomVersion());
    IndicesOptions indicesOptions2=IndicesOptions.readIndicesOptions(bytesStreamInput);
    assertThat(indicesOptions2.ignoreUnavailable(),equalTo(indicesOptions.ignoreUnavailable()));
    assertThat(indicesOptions2.allowNoIndices(),equalTo(indicesOptions.allowNoIndices()));
    assertThat(indicesOptions2.expandWildcardsOpen(),equalTo(indicesOptions.expandWildcardsOpen()));
    assertThat(indicesOptions2.expandWildcardsClosed(),equalTo(indicesOptions.expandWildcardsClosed()));
    assertThat(indicesOptions2.forbidClosedIndices(),equalTo(indicesOptions.forbidClosedIndices()));
    assertThat(indicesOptions2.allowAliasesToMultipleIndices(),equalTo(indicesOptions.allowAliasesToMultipleIndices()));
  }
}
