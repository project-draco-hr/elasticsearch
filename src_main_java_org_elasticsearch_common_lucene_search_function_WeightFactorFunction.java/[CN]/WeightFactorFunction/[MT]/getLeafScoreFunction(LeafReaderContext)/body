{
  final LeafScoreFunction leafFunction=scoreFunction.getLeafScoreFunction(ctx);
  return new LeafScoreFunction(){
    @Override public double score(    int docId,    float subQueryScore){
      return leafFunction.score(docId,subQueryScore) * getWeight();
    }
    @Override public Explanation explainScore(    int docId,    Explanation subQueryScore) throws IOException {
      Explanation functionScoreExplanation;
      Explanation functionExplanation=leafFunction.explainScore(docId,subQueryScore);
      functionScoreExplanation=new ComplexExplanation(true,functionExplanation.getValue() * (float)getWeight(),"product of:");
      functionScoreExplanation.addDetail(functionExplanation);
      functionScoreExplanation.addDetail(explainWeight());
      return functionScoreExplanation;
    }
  }
;
}
