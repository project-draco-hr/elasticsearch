{
  Table tab=new Table();
  if (headers) {
    tab.addRow(new Row().addCell("index").addCell("shard").addCell("replica").addCell("state").addCell("docs").addCell("size").addCell("bytes").addCell("host").addCell("node"),true);
  }
  for (  ShardRouting shard : state.getState().routingTable().allShards()) {
    Row row=new Row();
    String pri="r";
    String host="";
    String docs="";
    String size="";
    String bytes="";
    String nodeName="";
    if (shard.assignedToNode()) {
      host=((InetSocketTransportAddress)state.getState().nodes().get(shard.currentNodeId()).address()).address().getHostString();
      nodeName=state.getState().nodes().get(shard.currentNodeId()).name();
    }
    if (null != stats.asMap().get(shard.globalId())) {
      size=stats.asMap().get(shard.globalId()).getStore().size().toString();
      bytes=new Long(stats.asMap().get(shard.globalId()).getStore().getSizeInBytes()).toString();
      docs=new Long(stats.asMap().get(shard.globalId()).getDocs().getCount()).toString();
    }
    if (shard.primary()) {
      pri="p";
    }
    row.addCell(shard.index()).addCell(new Integer(shard.shardId().id()).toString()).addCell(pri).addCell(shard.state().toString()).addCell(docs).addCell(size).addCell(bytes).addCell(host).addCell(nodeName);
    tab.addRow(row);
  }
  return tab.render(headers);
}
