{
  final String[] indices=Strings.splitStringByCommaToArray(request.param("index"));
  final ClusterStateRequest clusterStateRequest=new ClusterStateRequest();
  clusterStateRequest.local(request.paramAsBoolean("local",clusterStateRequest.local()));
  clusterStateRequest.masterNodeTimeout(request.paramAsTime("master_timeout",clusterStateRequest.masterNodeTimeout()));
  client.admin().cluster().state(clusterStateRequest,new ActionListener<ClusterStateResponse>(){
    @Override public void onResponse(    final ClusterStateResponse clusterStateResponse){
      final String[] concreteIndices=clusterStateResponse.getState().metaData().concreteIndicesIgnoreMissing(indices);
      IndicesStatsRequest indicesStatsRequest=new IndicesStatsRequest();
      indicesStatsRequest.clear().docs(true).store(true);
      client.admin().indices().stats(indicesStatsRequest,new ActionListener<IndicesStatsResponse>(){
        @Override public void onResponse(        IndicesStatsResponse indicesStatsResponse){
          try {
            channel.sendResponse(RestTable.buildResponse(buildTable(concreteIndices,clusterStateResponse,indicesStatsResponse),request,channel));
          }
 catch (          Throwable e) {
            onFailure(e);
          }
        }
        @Override public void onFailure(        Throwable e){
          try {
            channel.sendResponse(new XContentThrowableRestResponse(request,e));
          }
 catch (          IOException e1) {
            logger.error("Failed to send failure response",e1);
          }
        }
      }
);
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
