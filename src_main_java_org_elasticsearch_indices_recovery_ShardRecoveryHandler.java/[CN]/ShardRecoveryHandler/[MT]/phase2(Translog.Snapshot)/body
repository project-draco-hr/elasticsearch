{
  if (shard.state() == IndexShardState.CLOSED) {
    throw new IndexShardClosedException(request.shardId());
  }
  logger.trace("{} recovery [phase2] to {}: start",request.shardId(),request.targetNode());
  StopWatch stopWatch=new StopWatch().start();
  transportService.submitRequest(request.targetNode(),RecoveryTarget.Actions.PREPARE_TRANSLOG,new RecoveryPrepareForTranslogOperationsRequest(request.recoveryId(),request.shardId()),TransportRequestOptions.options().withTimeout(internalActionTimeout),EmptyTransportResponseHandler.INSTANCE_SAME).txGet();
  stopWatch.stop();
  response.startTime=stopWatch.totalTime().millis();
  logger.trace("{} recovery [phase2] to {}: start took [{}]",request.shardId(),request.targetNode(),request.targetNode(),stopWatch.totalTime());
  logger.trace("{} recovery [phase2] to {}: updating current mapping to master",request.shardId(),request.targetNode());
  updateMappingOnMaster();
  logger.trace("{} recovery [phase2] to {}: sending transaction log operations",request.shardId(),request.targetNode());
  stopWatch=new StopWatch().start();
  int totalOperations=sendSnapshot(snapshot);
  stopWatch.stop();
  logger.trace("{} recovery [phase2] to {}: took [{}]",request.shardId(),request.targetNode(),stopWatch.totalTime());
  response.phase2Time=stopWatch.totalTime().millis();
  response.phase2Operations=totalOperations;
}
