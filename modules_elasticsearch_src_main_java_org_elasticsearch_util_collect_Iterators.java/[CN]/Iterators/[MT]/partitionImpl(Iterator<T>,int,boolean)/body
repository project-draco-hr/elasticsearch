{
  checkNotNull(iterator);
  checkArgument(size > 0);
  return new UnmodifiableIterator<List<T>>(){
    public boolean hasNext(){
      return iterator.hasNext();
    }
    public List<T> next(){
      if (!hasNext()) {
        throw new NoSuchElementException();
      }
      Object[] array=new Object[size];
      int count=0;
      for (; count < size && iterator.hasNext(); count++) {
        array[count]=iterator.next();
      }
      @SuppressWarnings("unchecked") List<T> list=Collections.unmodifiableList((List<T>)Arrays.asList(array));
      return (pad || count == size) ? list : Platform.subList(list,0,count);
    }
  }
;
}
