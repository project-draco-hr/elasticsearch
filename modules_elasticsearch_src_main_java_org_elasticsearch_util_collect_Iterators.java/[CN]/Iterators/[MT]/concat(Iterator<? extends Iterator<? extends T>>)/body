{
  checkNotNull(inputs);
  return new Iterator<T>(){
    Iterator<? extends T> current=emptyIterator();
    Iterator<? extends T> removeFrom;
    public boolean hasNext(){
      boolean currentHasNext;
      while (!(currentHasNext=current.hasNext()) && inputs.hasNext()) {
        current=inputs.next();
      }
      return currentHasNext;
    }
    public T next(){
      if (!hasNext()) {
        throw new NoSuchElementException();
      }
      removeFrom=current;
      return current.next();
    }
    public void remove(){
      checkState(removeFrom != null,"no calls to next() since last call to remove()");
      removeFrom.remove();
      removeFrom=null;
    }
  }
;
}
