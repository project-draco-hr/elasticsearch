{
  index=in.readUTF();
  type=in.readUTF();
  id=in.readUTF();
  int size=in.readInt();
  if (size == 0) {
    fields=Strings.EMPTY_ARRAY;
  }
 else {
    fields=new String[in.readInt()];
    for (int i=0; i < size; i++) {
      fields[i]=in.readUTF();
    }
  }
  percentTermsToMatch=in.readFloat();
  minTermFrequency=in.readInt();
  maxQueryTerms=in.readInt();
  size=in.readInt();
  if (size > 0) {
    stopWords=new String[size];
    for (int i=0; i < size; i++) {
      stopWords[i]=in.readUTF();
    }
  }
  minDocFreq=in.readInt();
  maxDocFreq=in.readInt();
  minWordLen=in.readInt();
  maxWordLen=in.readInt();
  if (in.readBoolean()) {
    boostTerms=in.readBoolean();
  }
  boostTermsFactor=in.readFloat();
  searchType=SearchType.fromId(in.readByte());
  if (in.readBoolean()) {
    searchQueryHint=in.readUTF();
  }
  size=in.readInt();
  if (size == -1) {
    searchIndices=null;
  }
 else   if (size == 0) {
    searchIndices=Strings.EMPTY_ARRAY;
  }
 else {
    searchIndices=new String[size];
    for (int i=0; i < size; i++) {
      searchIndices[i]=in.readUTF();
    }
  }
  size=in.readInt();
  if (size == -1) {
    searchTypes=null;
  }
 else   if (size == 0) {
    searchTypes=Strings.EMPTY_ARRAY;
  }
 else {
    searchTypes=new String[size];
    for (int i=0; i < size; i++) {
      searchTypes[i]=in.readUTF();
    }
  }
  if (in.readBoolean()) {
    searchScroll=readScroll(in);
  }
  size=in.readInt();
  if (size == 0) {
    searchSource=Bytes.EMPTY_ARRAY;
  }
 else {
    searchSource=new byte[in.readInt()];
    in.readFully(searchSource);
  }
}
