{
  SearchResponse response=client().prepareSearch("idx").addAggregation(geoDistance("amsterdam_rings").field("location").unit(DistanceUnit.KILOMETERS).point("52.3760, 4.894").addUnboundedTo("ring1",500).addRange("ring2",500,1000).addUnboundedFrom("ring3",1000)).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  GeoDistance geoDist=response.getAggregations().get("amsterdam_rings");
  assertThat(geoDist,notNullValue());
  assertThat(geoDist.getName(),equalTo("amsterdam_rings"));
  assertThat(geoDist.buckets().size(),equalTo(3));
  GeoDistance.Bucket bucket=geoDist.getByKey("ring1");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("ring1"));
  assertThat(bucket.getFrom(),equalTo(0.0));
  assertThat(bucket.getTo(),equalTo(500.0));
  assertThat(bucket.getDocCount(),equalTo(2l));
  bucket=geoDist.getByKey("ring2");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("ring2"));
  assertThat(bucket.getFrom(),equalTo(500.0));
  assertThat(bucket.getTo(),equalTo(1000.0));
  assertThat(bucket.getDocCount(),equalTo(2l));
  bucket=geoDist.getByKey("ring3");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("ring3"));
  assertThat(bucket.getFrom(),equalTo(1000.0));
  assertThat(bucket.getTo(),equalTo(Double.POSITIVE_INFINITY));
  assertThat(bucket.getDocCount(),equalTo(1l));
}
