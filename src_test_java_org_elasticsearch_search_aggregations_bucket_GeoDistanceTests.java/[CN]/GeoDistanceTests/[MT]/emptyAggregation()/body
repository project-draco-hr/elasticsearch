{
  SearchResponse searchResponse=client().prepareSearch("empty_bucket_idx").setQuery(matchAllQuery()).addAggregation(histogram("histo").field("value").interval(1l).minDocCount(0).subAggregation(geoDistance("geo_dist").field("location").point("52.3760, 4.894").addRange("0-100",0.0,100.0))).execute().actionGet();
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(2l));
  Histogram histo=searchResponse.getAggregations().get("histo");
  assertThat(histo,Matchers.notNullValue());
  Histogram.Bucket bucket=histo.getBuckets().get(1);
  assertThat(bucket,Matchers.notNullValue());
  Range geoDistance=bucket.getAggregations().get("geo_dist");
  List<Range.Bucket> buckets=new ArrayList<Range.Bucket>(geoDistance.getBuckets());
  assertThat(geoDistance,Matchers.notNullValue());
  assertThat(geoDistance.getName(),equalTo("geo_dist"));
  assertThat(buckets.size(),is(1));
  assertThat((String)buckets.get(0).getKey(),equalTo("0-100"));
  assertThat(((Number)buckets.get(0).getFrom()).doubleValue(),equalTo(0.0));
  assertThat(((Number)buckets.get(0).getTo()).doubleValue(),equalTo(100.0));
  assertThat(buckets.get(0).getFromAsString(),equalTo("0.0"));
  assertThat(buckets.get(0).getToAsString(),equalTo("100.0"));
  assertThat(buckets.get(0).getDocCount(),equalTo(0l));
}
