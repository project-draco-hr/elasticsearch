{
  client().admin().cluster().prepareHealth("idx_unmapped").setWaitForYellowStatus().execute().actionGet();
  SearchResponse response=client().prepareSearch("idx_unmapped").addAggregation(geoDistance("amsterdam_rings").field("location").unit(DistanceUnit.KILOMETERS).point("52.3760, 4.894").addUnboundedTo(500).addRange(500,1000).addUnboundedFrom(1000)).execute().actionGet();
  assertThat(response.getFailedShards(),equalTo(0));
  GeoDistance geoDist=response.getAggregations().get("amsterdam_rings");
  assertThat(geoDist,notNullValue());
  assertThat(geoDist.getName(),equalTo("amsterdam_rings"));
  assertThat(geoDist.buckets().size(),equalTo(3));
  GeoDistance.Bucket bucket=geoDist.getByKey("*-500.0");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("*-500.0"));
  assertThat(bucket.getFrom(),equalTo(0.0));
  assertThat(bucket.getTo(),equalTo(500.0));
  assertThat(bucket.getDocCount(),equalTo(0l));
  bucket=geoDist.getByKey("500.0-1000.0");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("500.0-1000.0"));
  assertThat(bucket.getFrom(),equalTo(500.0));
  assertThat(bucket.getTo(),equalTo(1000.0));
  assertThat(bucket.getDocCount(),equalTo(0l));
  bucket=geoDist.getByKey("1000.0-*");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("1000.0-*"));
  assertThat(bucket.getFrom(),equalTo(1000.0));
  assertThat(bucket.getTo(),equalTo(Double.POSITIVE_INFINITY));
  assertThat(bucket.getDocCount(),equalTo(0l));
}
