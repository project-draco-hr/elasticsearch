{
  createIndex("test");
  int numDocs=randomIntBetween(100,150);
  IndexRequestBuilder[] docs=new IndexRequestBuilder[numDocs];
  for (int i=0; i < numDocs; i++) {
    docs[i]=client().prepareIndex("test","type1",String.valueOf(i)).setSource("field1",English.intToEnglish(i),"field2",i);
  }
  indexRandom(true,docs);
  ensureGreen();
  QueryBuilder q=QueryBuilders.matchQuery("field1","one");
  SearchResponse resp=client().prepareSearch().setQuery(q).setProfile(true).setSearchType(SearchType.QUERY_THEN_FETCH).execute().actionGet();
  Map<String,ProfileShardResult> p=resp.getProfileResults();
  assertNotNull(p);
  assertThat("Profile response should not be an empty array",resp.getProfileResults().size(),not(0));
  for (  Map.Entry<String,ProfileShardResult> shardResult : resp.getProfileResults().entrySet()) {
    for (    QueryProfileShardResult searchProfiles : shardResult.getValue().getQueryProfileResults()) {
      for (      ProfileResult result : searchProfiles.getQueryResults()) {
        assertEquals(result.getQueryName(),"TermQuery");
        assertEquals(result.getLuceneDescription(),"field1:one");
        assertThat(result.getTime(),greaterThan(0L));
        assertNotNull(result.getTimeBreakdown());
      }
      CollectorResult result=searchProfiles.getCollectorResult();
      assertThat(result.getName(),not(isEmptyOrNullString()));
      assertThat(result.getTime(),greaterThan(0L));
    }
  }
}
