{
  DiscoveryNode discoNode=allocation.nodes().resolveNode(node);
  ShardRouting shardRouting=null;
  RoutingNodes routingNodes=allocation.routingNodes();
  RoutingNode routingNode=routingNodes.node(discoNode.getId());
  if (routingNode != null) {
    IndexMetaData indexMetaData=allocation.metaData().index(index());
    if (indexMetaData == null) {
      throw new IndexNotFoundException(index());
    }
    ShardId shardId=new ShardId(indexMetaData.getIndex(),shardId());
    shardRouting=routingNode.getByShardId(shardId);
  }
  if (shardRouting == null) {
    if (explain) {
      return new RerouteExplanation(this,allocation.decision(Decision.NO,"cancel_allocation_command","can't cancel " + shardId + ", failed to find it on node "+ discoNode));
    }
    throw new IllegalArgumentException("[cancel_allocation] can't cancel " + shardId + ", failed to find it on node "+ discoNode);
  }
  if (shardRouting.primary() && allowPrimary == false) {
    if ((shardRouting.initializing() && shardRouting.relocatingNodeId() != null) == false) {
      if (explain) {
        return new RerouteExplanation(this,allocation.decision(Decision.NO,"cancel_allocation_command","can't cancel " + shardId + " on node "+ discoNode+ ", shard is primary and "+ shardRouting.state().name().toLowerCase(Locale.ROOT)));
      }
      throw new IllegalArgumentException("[cancel_allocation] can't cancel " + shardId + " on node "+ discoNode+ ", shard is primary and "+ shardRouting.state().name().toLowerCase(Locale.ROOT));
    }
  }
  AllocationService.cancelShard(Loggers.getLogger(CancelAllocationCommand.class),shardRouting,new UnassignedInfo(UnassignedInfo.Reason.REROUTE_CANCELLED,null),routingNodes);
  return new RerouteExplanation(this,allocation.decision(Decision.YES,"cancel_allocation_command","shard " + shardId + " on node "+ discoNode+ " can be cancelled"));
}
