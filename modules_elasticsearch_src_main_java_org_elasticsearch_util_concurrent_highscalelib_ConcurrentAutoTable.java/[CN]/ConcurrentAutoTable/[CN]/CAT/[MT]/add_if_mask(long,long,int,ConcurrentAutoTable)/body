{
  long[] t=_t;
  int idx=hash & (t.length - 1);
  long old=t[idx];
  boolean ok=CAS(t,idx,old & ~mask,old + x);
  if (_sum_cache != Long.MIN_VALUE)   _sum_cache=Long.MIN_VALUE;
  if (ok)   return old;
  if ((old & mask) != 0)   return old;
  int cnt=0;
  while (true) {
    old=t[idx];
    if ((old & mask) != 0)     return old;
    if (CAS(t,idx,old,old + x))     break;
    cnt++;
  }
  if (cnt < MAX_SPIN)   return old;
  if (t.length >= 1024 * 1024)   return old;
  long r=_resizers;
  int newbytes=(t.length << 1) << 3;
  while (!_resizerUpdater.compareAndSet(this,r,r + newbytes))   r=_resizers;
  r+=newbytes;
  if (master._cat != this)   return old;
  if ((r >> 17) != 0) {
    try {
      Thread.sleep(r >> 17);
    }
 catch (    InterruptedException e) {
    }
    if (master._cat != this)     return old;
  }
  CAT newcat=new CAT(this,t.length * 2,0);
  master.CAS_cat(this,newcat);
  return old;
}
