{
  final long MAX_SIZE=ByteSizeValue.parseBytesSizeValue("50mb").bytes();
  final boolean WITH_TV=true;
  File testFile=new File("target/test/compress/lucene");
  FileSystemUtils.deleteRecursively(testFile);
  testFile.mkdirs();
  FSDirectory uncompressedDir=new NIOFSDirectory(new File(testFile,"uncompressed"));
  IndexWriter uncompressedWriter=new IndexWriter(uncompressedDir,new IndexWriterConfig(Lucene.VERSION,Lucene.STANDARD_ANALYZER));
  Directory compressedLzfDir=new CompressedDirectory(new NIOFSDirectory(new File(testFile,"compressed_lzf")),new LZFCompressor(),false,"fdt","tvf");
  IndexWriter compressedLzfWriter=new IndexWriter(compressedLzfDir,new IndexWriterConfig(Lucene.VERSION,Lucene.STANDARD_ANALYZER));
  System.out.println("feeding data...");
  TestData testData=new TestData();
  while (testData.next() && testData.getTotalSize() < MAX_SIZE) {
    XContentBuilder builder=XContentFactory.jsonBuilder();
    testData.current(builder);
    builder.close();
    Document doc=new Document();
    doc.add(new Field("_source",builder.bytes().array(),builder.bytes().arrayOffset(),builder.bytes().length()));
    if (WITH_TV) {
      Field field=new Field("text",builder.string(),Field.Store.NO,Field.Index.ANALYZED,Field.TermVector.WITH_POSITIONS_OFFSETS);
      doc.add(field);
    }
    uncompressedWriter.addDocument(doc);
    compressedLzfWriter.addDocument(doc);
  }
  System.out.println("optimizing...");
  uncompressedWriter.forceMerge(1);
  compressedLzfWriter.forceMerge(1);
  uncompressedWriter.waitForMerges();
  compressedLzfWriter.waitForMerges();
  System.out.println("done");
  uncompressedWriter.close();
  compressedLzfWriter.close();
  compressedLzfDir.close();
  uncompressedDir.close();
}
