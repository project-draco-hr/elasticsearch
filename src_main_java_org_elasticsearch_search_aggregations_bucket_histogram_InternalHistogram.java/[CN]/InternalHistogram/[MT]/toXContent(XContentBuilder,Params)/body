{
  builder.startObject(name);
  if (keyed) {
    builder.startObject(CommonFields.BUCKETS);
  }
 else {
    builder.startArray(CommonFields.BUCKETS);
  }
  for (  B bucket : buckets) {
    if (formatter != null) {
      Text keyTxt=new StringText(formatter.format(bucket.key));
      if (keyed) {
        builder.startObject(keyTxt.string());
      }
 else {
        builder.startObject();
      }
      builder.field(CommonFields.KEY_AS_STRING,keyTxt);
    }
 else {
      if (keyed) {
        builder.startObject(String.valueOf(bucket.getKeyAsNumber()));
      }
 else {
        builder.startObject();
      }
    }
    builder.field(CommonFields.KEY,bucket.key);
    builder.field(CommonFields.DOC_COUNT,bucket.docCount);
    bucket.aggregations.toXContentInternal(builder,params);
    builder.endObject();
  }
  if (keyed) {
    builder.endObject();
  }
 else {
    builder.endArray();
  }
  return builder.endObject();
}
