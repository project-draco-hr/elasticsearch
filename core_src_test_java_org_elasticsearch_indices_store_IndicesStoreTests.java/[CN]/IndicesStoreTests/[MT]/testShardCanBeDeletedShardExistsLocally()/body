{
  int numShards=randomIntBetween(1,7);
  int numReplicas=randomInt(2);
  ClusterState.Builder clusterState=ClusterState.builder(new ClusterName("test"));
  clusterState.metaData(MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(numShards).numberOfReplicas(numReplicas)));
  clusterState.nodes(DiscoveryNodes.builder().localNodeId(localNode.getId()).add(localNode).add(new DiscoveryNode("xyz",new LocalTransportAddress("xyz"),emptyMap(),emptySet(),Version.CURRENT)));
  IndexShardRoutingTable.Builder routingTable=new IndexShardRoutingTable.Builder(new ShardId("test","_na_",1));
  int localShardId=randomInt(numShards - 1);
  for (int i=0; i < numShards; i++) {
    String nodeId=i == localShardId ? localNode.getId() : randomBoolean() ? "abc" : "xyz";
    String relocationNodeId=randomBoolean() ? null : randomBoolean() ? localNode.getId() : "xyz";
    routingTable.addShard(TestShardRouting.newShardRouting("test",i,nodeId,relocationNodeId,true,ShardRoutingState.STARTED));
    for (int j=0; j < numReplicas; j++) {
      routingTable.addShard(TestShardRouting.newShardRouting("test",i,nodeId,relocationNodeId,false,ShardRoutingState.STARTED));
    }
  }
  assertFalse(indicesStore.shardCanBeDeleted(clusterState.build(),routingTable.build()));
}
