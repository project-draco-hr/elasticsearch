{
  GeoPointFieldType geoPointFieldType=(GeoPointFieldType)fieldType;
  DoubleFieldMapper latMapper=null;
  DoubleFieldMapper lonMapper=null;
  context.path().add(name);
  if (enableLatLon) {
    NumberFieldMapper.Builder<?,?> latMapperBuilder=new DoubleFieldMapper.Builder(Names.LAT).includeInAll(false);
    NumberFieldMapper.Builder<?,?> lonMapperBuilder=new DoubleFieldMapper.Builder(Names.LON).includeInAll(false);
    if (precisionStep != null) {
      latMapperBuilder.precisionStep(precisionStep);
      lonMapperBuilder.precisionStep(precisionStep);
    }
    latMapper=(DoubleFieldMapper)latMapperBuilder.includeInAll(false).store(fieldType.stored()).docValues(false).build(context);
    lonMapper=(DoubleFieldMapper)lonMapperBuilder.includeInAll(false).store(fieldType.stored()).docValues(false).build(context);
    geoPointFieldType.setLatLonEnabled(latMapper.fieldType(),lonMapper.fieldType());
  }
  KeywordFieldMapper geoHashMapper=null;
  if (enableGeoHash || enableGeoHashPrefix) {
    geoHashMapper=new KeywordFieldMapper.Builder(Names.GEOHASH).index(true).includeInAll(false).store(fieldType.stored()).build(context);
    geoPointFieldType.setGeoHashEnabled(geoHashMapper.fieldType(),geoHashPrecision,enableGeoHashPrefix);
  }
  context.path().remove();
  return build(context,name,fieldType,defaultFieldType,context.indexSettings(),latMapper,lonMapper,geoHashMapper,multiFieldsBuilder.build(this,context),ignoreMalformed(context),copyTo);
}
