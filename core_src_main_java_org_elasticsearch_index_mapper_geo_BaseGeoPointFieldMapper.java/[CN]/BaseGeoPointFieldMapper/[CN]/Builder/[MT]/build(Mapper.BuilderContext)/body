{
  GeoPointFieldType geoPointFieldType=(GeoPointFieldType)fieldType;
  FieldMapper latMapper=null;
  FieldMapper lonMapper=null;
  context.path().add(name);
  if (enableLatLon) {
    if (context.indexCreatedVersion().before(Version.V_5_0_0)) {
      LegacyNumberFieldMapper.Builder<?,?> latMapperBuilder=new LegacyDoubleFieldMapper.Builder(Names.LAT).includeInAll(false);
      LegacyNumberFieldMapper.Builder<?,?> lonMapperBuilder=new LegacyDoubleFieldMapper.Builder(Names.LON).includeInAll(false);
      if (precisionStep != null) {
        latMapperBuilder.precisionStep(precisionStep);
        lonMapperBuilder.precisionStep(precisionStep);
      }
      latMapper=(LegacyDoubleFieldMapper)latMapperBuilder.includeInAll(false).store(fieldType.stored()).docValues(false).build(context);
      lonMapper=(LegacyDoubleFieldMapper)lonMapperBuilder.includeInAll(false).store(fieldType.stored()).docValues(false).build(context);
    }
 else {
      latMapper=new NumberFieldMapper.Builder(Names.LAT,NumberFieldMapper.NumberType.DOUBLE).includeInAll(false).store(fieldType.stored()).docValues(false).build(context);
      lonMapper=new NumberFieldMapper.Builder(Names.LON,NumberFieldMapper.NumberType.DOUBLE).includeInAll(false).store(fieldType.stored()).docValues(false).build(context);
    }
    geoPointFieldType.setLatLonEnabled(latMapper.fieldType(),lonMapper.fieldType());
  }
  KeywordFieldMapper geoHashMapper=null;
  if (enableGeoHash || enableGeoHashPrefix) {
    geoHashMapper=new KeywordFieldMapper.Builder(Names.GEOHASH).index(true).includeInAll(false).store(fieldType.stored()).build(context);
    geoPointFieldType.setGeoHashEnabled(geoHashMapper.fieldType(),geoHashPrecision,enableGeoHashPrefix);
  }
  context.path().remove();
  return build(context,name,fieldType,defaultFieldType,context.indexSettings(),latMapper,lonMapper,geoHashMapper,multiFieldsBuilder.build(this,context),ignoreMalformed(context),copyTo);
}
