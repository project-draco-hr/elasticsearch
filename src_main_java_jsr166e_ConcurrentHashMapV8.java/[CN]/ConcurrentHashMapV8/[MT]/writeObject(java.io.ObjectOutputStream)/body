{
  int sshift=0;
  int ssize=1;
  while (ssize < DEFAULT_CONCURRENCY_LEVEL) {
    ++sshift;
    ssize<<=1;
  }
  int segmentShift=32 - sshift;
  int segmentMask=ssize - 1;
  @SuppressWarnings("unchecked") Segment<K,V>[] segments=(Segment<K,V>[])new Segment<?,?>[DEFAULT_CONCURRENCY_LEVEL];
  for (int i=0; i < segments.length; ++i)   segments[i]=new Segment<K,V>(LOAD_FACTOR);
  s.putFields().put("segments",segments);
  s.putFields().put("segmentShift",segmentShift);
  s.putFields().put("segmentMask",segmentMask);
  s.writeFields();
  Node<K,V>[] t;
  if ((t=table) != null) {
    Traverser<K,V> it=new Traverser<K,V>(t,t.length,0,t.length);
    for (Node<K,V> p; (p=it.advance()) != null; ) {
      s.writeObject(p.key);
      s.writeObject(p.val);
    }
  }
  s.writeObject(null);
  s.writeObject(null);
  segments=null;
}
