{
  long delta=0L;
  int i=0;
  Node<V>[] tab=table;
  while (tab != null && i < tab.length) {
    Node<V> f=tabAt(tab,i);
    if (f == null)     ++i;
 else     if (f.hash < 0) {
      Object fk;
      if ((fk=f.key) instanceof TreeBin) {
        TreeBin<V> t=(TreeBin<V>)fk;
        t.acquire(0);
        try {
          if (tabAt(tab,i) == f) {
            for (Node<V> p=t.first; p != null; p=p.next) {
              if (p.val != null) {
                p.val=null;
                --delta;
              }
            }
            t.first=null;
            t.root=null;
            ++i;
          }
        }
  finally {
          t.release(0);
        }
      }
 else       tab=(Node<V>[])fk;
    }
 else {
synchronized (f) {
        if (tabAt(tab,i) == f) {
          for (Node<V> e=f; e != null; e=e.next) {
            if (e.val != null) {
              e.val=null;
              --delta;
            }
          }
          setTabAt(tab,i,null);
          ++i;
        }
      }
    }
  }
  if (delta != 0L)   addCount(delta,-1);
}
