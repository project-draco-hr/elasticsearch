{
  int c=(size >= (MAXIMUM_CAPACITY >>> 1)) ? MAXIMUM_CAPACITY : tableSizeFor(size + (size >>> 1) + 1);
  int sc;
  while ((sc=sizeCtl) >= 0) {
    Node[] tab=table;
    int n;
    if (tab == null || (n=tab.length) == 0) {
      n=(sc > c) ? sc : c;
      if (UNSAFE.compareAndSwapInt(this,sizeCtlOffset,sc,-1)) {
        try {
          if (table == tab) {
            table=new Node[n];
            sc=n - (n >>> 2);
          }
        }
  finally {
          sizeCtl=sc;
        }
      }
    }
 else     if (c <= sc || n >= MAXIMUM_CAPACITY)     break;
 else     if (UNSAFE.compareAndSwapInt(this,sizeCtlOffset,sc,-1)) {
      try {
        if (table == tab) {
          table=rebuild(tab);
          sc=(n << 1) - (n >>> 1);
        }
      }
  finally {
        sizeCtl=sc;
      }
    }
  }
}
