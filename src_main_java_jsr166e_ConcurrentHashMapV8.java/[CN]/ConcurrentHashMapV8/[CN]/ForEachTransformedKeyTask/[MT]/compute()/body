{
  final Fun<? super K,? extends U> transformer;
  final Action<? super U> action;
  if ((transformer=this.transformer) != null && (action=this.action) != null) {
    for (int i=baseIndex, f, h; batch > 0 && (h=((f=baseLimit) + i) >>> 1) > i; ) {
      addToPendingCount(1);
      new ForEachTransformedKeyTask<K,V,U>(this,batch>>>=1,baseLimit=h,f,tab,transformer,action).fork();
    }
    for (Node<K,V> p; (p=advance()) != null; ) {
      U u;
      if ((u=transformer.apply(p.key)) != null)       action.apply(u);
    }
    propagateCompletion();
  }
}
