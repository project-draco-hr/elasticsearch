{
  super(TREEBIN,null,null,null);
  this.first=b;
  TreeNode<K,V> r=null;
  for (TreeNode<K,V> x=b, next; x != null; x=next) {
    next=(TreeNode<K,V>)x.next;
    x.left=x.right=null;
    if (r == null) {
      x.parent=null;
      x.red=false;
      r=x;
    }
 else {
      Object key=x.key;
      int hash=x.hash;
      Class<?> kc=null;
      for (TreeNode<K,V> p=r; ; ) {
        int dir, ph;
        if ((ph=p.hash) > hash)         dir=-1;
 else         if (ph < hash)         dir=1;
 else         if ((kc != null || (kc=comparableClassFor(key)) != null))         dir=compareComparables(kc,key,p.key);
 else         dir=0;
        TreeNode<K,V> xp=p;
        if ((p=(dir <= 0) ? p.left : p.right) == null) {
          x.parent=xp;
          if (dir <= 0)           xp.left=x;
 else           xp.right=x;
          r=balanceInsertion(r,x);
          break;
        }
      }
    }
  }
  this.root=r;
}
