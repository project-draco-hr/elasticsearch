{
  Class<?> c=k.getClass();
  while (p != null) {
    int dir, ph;
    Object pk;
    Class<?> pc;
    TreeNode r;
    if (h < (ph=p.hash))     dir=-1;
 else     if (h > ph)     dir=1;
 else     if ((pk=p.key) == k || k.equals(pk))     return p;
 else     if (c != (pc=pk.getClass()))     dir=c.getName().compareTo(pc.getName());
 else     if (k instanceof Comparable)     dir=((Comparable)k).compareTo((Comparable)pk);
 else     dir=0;
    TreeNode pr=p.right;
    if (dir > 0)     p=pr;
 else     if (dir == 0 && pr != null && h >= pr.hash && (r=getTreeNode(h,k,pr)) != null)     return r;
 else     p=p.left;
  }
  return null;
}
