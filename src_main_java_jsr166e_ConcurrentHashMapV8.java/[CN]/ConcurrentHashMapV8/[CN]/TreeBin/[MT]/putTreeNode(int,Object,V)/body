{
  Class<?> c=k.getClass();
  TreeNode<V> pp=root, p=null;
  int dir=0;
  while (pp != null) {
    int ph;
    Object pk;
    Class<?> pc;
    p=pp;
    if ((ph=p.hash) == h) {
      if ((pk=p.key) == k || k.equals(pk))       return p;
      if (c != (pc=pk.getClass()) || !(k instanceof Comparable) || (dir=((Comparable)k).compareTo((Comparable)pk)) == 0) {
        TreeNode<V> s=null, r=null, pr;
        if ((dir=(c == pc) ? 0 : c.getName().compareTo(pc.getName())) == 0) {
          if ((pr=p.right) != null && h >= pr.hash && (r=getTreeNode(h,k,pr)) != null)           return r;
 else           dir=-1;
        }
 else         if ((pr=p.right) != null && h >= pr.hash)         s=pr;
        if (s != null && (r=getTreeNode(h,k,s)) != null)         return r;
      }
    }
 else     dir=(h < ph) ? -1 : 1;
    pp=(dir > 0) ? p.right : p.left;
  }
  TreeNode<V> f=first;
  TreeNode<V> x=first=new TreeNode<V>(h,k,v,f,p);
  if (p == null)   root=x;
 else {
    TreeNode<V> xp, xpp;
    if (f != null)     f.prev=x;
    if (dir <= 0)     p.left=x;
 else     p.right=x;
    x.red=true;
    while (x != null && (xp=x.parent) != null && xp.red && (xpp=xp.parent) != null) {
      TreeNode<V> xppl=xpp.left;
      if (xp == xppl) {
        TreeNode<V> y=xpp.right;
        if (y != null && y.red) {
          y.red=false;
          xp.red=false;
          xpp.red=true;
          x=xpp;
        }
 else {
          if (x == xp.right) {
            rotateLeft(x=xp);
            xpp=(xp=x.parent) == null ? null : xp.parent;
          }
          if (xp != null) {
            xp.red=false;
            if (xpp != null) {
              xpp.red=true;
              rotateRight(xpp);
            }
          }
        }
      }
 else {
        TreeNode<V> y=xppl;
        if (y != null && y.red) {
          y.red=false;
          xp.red=false;
          xpp.red=true;
          x=xpp;
        }
 else {
          if (x == xp.left) {
            rotateRight(x=xp);
            xpp=(xp=x.parent) == null ? null : xp.parent;
          }
          if (xp != null) {
            xp.red=false;
            if (xpp != null) {
              xpp.red=true;
              rotateLeft(xpp);
            }
          }
        }
      }
    }
    TreeNode<V> r=root;
    if (r != null && r.red)     r.red=false;
  }
  return null;
}
