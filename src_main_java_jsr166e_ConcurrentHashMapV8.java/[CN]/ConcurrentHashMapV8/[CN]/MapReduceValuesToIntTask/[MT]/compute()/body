{
  final ObjectToInt<? super V> transformer;
  final IntByIntToInt reducer;
  if ((transformer=this.transformer) != null && (reducer=this.reducer) != null) {
    int r=this.basis;
    for (int b; (b=preSplit()) > 0; )     (rights=new MapReduceValuesToIntTask<K,V>(map,this,b,rights,transformer,r,reducer)).fork();
    V v;
    while ((v=advance()) != null)     r=reducer.apply(r,transformer.apply(v));
    result=r;
    CountedCompleter<?> c;
    for (c=firstComplete(); c != null; c=c.nextComplete()) {
      MapReduceValuesToIntTask<K,V> t=(MapReduceValuesToIntTask<K,V>)c, s=t.rights;
      while (s != null) {
        t.result=reducer.apply(t.result,s.result);
        s=t.rights=s.nextRight;
      }
    }
  }
}
