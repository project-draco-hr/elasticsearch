{
  if (indexVersionCreated.onOrAfter(Version.V_5_0_0_alpha1)) {
    MappedFieldType fieldType=context.fieldMapper(field);
    if (fieldType == null) {
      throw new QueryShardException(context,"field [" + field + "] does not exist");
    }
    if (!(fieldType instanceof PercolatorFieldMapper.PercolatorFieldType)) {
      throw new QueryShardException(context,"expected field [" + field + "] to be of type [percolator], but is of type ["+ fieldType.typeName()+ "]");
    }
    PercolatorFieldMapper.PercolatorFieldType pft=(PercolatorFieldMapper.PercolatorFieldType)fieldType;
    PercolateQuery.QueryStore queryStore=createStore(pft,context,mapUnmappedFieldsAsString);
    PercolateQuery.Builder builder=new PercolateQuery.Builder(documentType,queryStore,document,docSearcher);
    builder.extractQueryTermsQuery(pft.getExtractedTermsField(),pft.getExtractionResultFieldName());
    return builder.build();
  }
 else {
    Query percolateTypeQuery=new TermQuery(new Term(TypeFieldMapper.NAME,MapperService.PERCOLATOR_LEGACY_TYPE_NAME));
    PercolateQuery.Builder builder=new PercolateQuery.Builder(documentType,createLegacyStore(context,mapUnmappedFieldsAsString),document,docSearcher);
    builder.setPercolateTypeQuery(percolateTypeQuery);
    return builder.build();
  }
}
