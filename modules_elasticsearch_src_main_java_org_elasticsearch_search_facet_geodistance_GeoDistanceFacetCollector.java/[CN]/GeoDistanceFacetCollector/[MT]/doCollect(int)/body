{
  if (!fieldData.hasValue(doc)) {
    return;
  }
  if (fieldData.multiValued()) {
    double[] lats=fieldData.latValues(doc);
    double[] lons=fieldData.lonValues(doc);
    for (int i=0; i < lats.length; i++) {
      double distance=geoDistance.calculate(lat,lon,lats[i],lons[i],unit);
      for (      GeoDistanceFacet.Entry entry : entries) {
        if (distance >= entry.getFrom() && distance < entry.getTo()) {
          entry.count++;
          entry.total+=distance;
        }
      }
    }
  }
 else {
    double distance=geoDistance.calculate(lat,lon,fieldData.latValue(doc),fieldData.lonValue(doc),unit);
    for (    GeoDistanceFacet.Entry entry : entries) {
      if (distance >= entry.getFrom() && distance < entry.getTo()) {
        entry.count++;
        entry.total+=distance;
      }
    }
  }
}
