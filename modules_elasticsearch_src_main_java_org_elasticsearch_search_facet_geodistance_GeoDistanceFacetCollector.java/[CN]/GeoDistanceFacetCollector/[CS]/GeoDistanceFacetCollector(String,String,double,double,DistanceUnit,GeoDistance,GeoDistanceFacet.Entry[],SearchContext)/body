{
  super(facetName);
  this.lat=lat;
  this.lon=lon;
  this.unit=unit;
  this.entries=entries;
  this.geoDistance=geoDistance;
  this.fieldDataCache=context.fieldDataCache();
  this.fixedSourceDistance=geoDistance.fixedSourceDistance(lat,lon,unit);
  MapperService.SmartNameFieldMappers smartMappers=context.mapperService().smartName(fieldName);
  if (smartMappers == null || !smartMappers.hasMapper()) {
    throw new FacetPhaseExecutionException(facetName,"No mapping found for field [" + fieldName + "]");
  }
  if (smartMappers.mapper().fieldDataType() != GeoPointFieldDataType.TYPE) {
    throw new FacetPhaseExecutionException(facetName,"field [" + fieldName + "] is not a geo_point field");
  }
  if (smartMappers.hasDocMapper()) {
    setFilter(context.filterCache().cache(smartMappers.docMapper().typeFilter()));
  }
  this.indexFieldName=smartMappers.mapper().names().indexName();
  this.aggregator=new Aggregator(fixedSourceDistance,entries);
}
