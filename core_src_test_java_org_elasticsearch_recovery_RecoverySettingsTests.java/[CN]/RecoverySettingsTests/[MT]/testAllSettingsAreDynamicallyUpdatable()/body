{
  innerTestSettings(RecoverySettings.INDICES_RECOVERY_MAX_BYTES_PER_SEC_SETTING.getKey(),0,new Validator(){
    @Override public void validate(    RecoverySettings recoverySettings,    int expectedValue){
      assertEquals(null,recoverySettings.rateLimiter());
    }
  }
);
  innerTestSettings(RecoverySettings.INDICES_RECOVERY_RETRY_DELAY_STATE_SYNC_SETTING.getKey(),randomIntBetween(1,200),TimeUnit.MILLISECONDS,new Validator(){
    @Override public void validate(    RecoverySettings recoverySettings,    int expectedValue){
      assertEquals(expectedValue,recoverySettings.retryDelayStateSync().millis());
    }
  }
);
  innerTestSettings(RecoverySettings.INDICES_RECOVERY_RETRY_DELAY_NETWORK_SETTING.getKey(),randomIntBetween(1,200),TimeUnit.MILLISECONDS,new Validator(){
    @Override public void validate(    RecoverySettings recoverySettings,    int expectedValue){
      assertEquals(expectedValue,recoverySettings.retryDelayNetwork().millis());
    }
  }
);
  innerTestSettings(RecoverySettings.INDICES_RECOVERY_ACTIVITY_TIMEOUT_SETTING.getKey(),randomIntBetween(1,200),TimeUnit.MILLISECONDS,new Validator(){
    @Override public void validate(    RecoverySettings recoverySettings,    int expectedValue){
      assertEquals(expectedValue,recoverySettings.activityTimeout().millis());
    }
  }
);
  innerTestSettings(RecoverySettings.INDICES_RECOVERY_INTERNAL_ACTION_TIMEOUT_SETTING.getKey(),randomIntBetween(1,200),TimeUnit.MILLISECONDS,new Validator(){
    @Override public void validate(    RecoverySettings recoverySettings,    int expectedValue){
      assertEquals(expectedValue,recoverySettings.internalActionTimeout().millis());
    }
  }
);
  innerTestSettings(RecoverySettings.INDICES_RECOVERY_INTERNAL_LONG_ACTION_TIMEOUT_SETTING.getKey(),randomIntBetween(1,200),TimeUnit.MILLISECONDS,new Validator(){
    @Override public void validate(    RecoverySettings recoverySettings,    int expectedValue){
      assertEquals(expectedValue,recoverySettings.internalActionLongTimeout().millis());
    }
  }
);
}
