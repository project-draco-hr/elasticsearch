{
  AtomicReader reader=context.reader();
  Terms terms=reader.terms(getFieldNames().indexName());
  if (terms == null) {
    return ShortArrayAtomicFieldData.EMPTY;
  }
  final TShortArrayList values=new TShortArrayList();
  values.add((short)0);
  OrdinalsBuilder builder=new OrdinalsBuilder(terms,reader.maxDoc());
  try {
    BytesRefIterator iter=builder.buildFromTerms(builder.wrapNumeric32Bit(terms.iterator(null)),reader.getLiveDocs());
    BytesRef term;
    while ((term=iter.next()) != null) {
      values.add((short)NumericUtils.prefixCodedToInt(term));
    }
    Ordinals build=builder.build(fieldDataType.getSettings());
    if (!build.isMultiValued()) {
      Docs ordinals=build.ordinals();
      short[] sValues=new short[reader.maxDoc()];
      int maxDoc=reader.maxDoc();
      for (int i=0; i < maxDoc; i++) {
        sValues[i]=values.get(ordinals.getOrd(i));
      }
      final FixedBitSet set=builder.buildDocsWithValuesSet();
      if (set == null) {
        return new ShortArrayAtomicFieldData.Single(sValues,reader.maxDoc());
      }
 else {
        return new ShortArrayAtomicFieldData.SingleFixedSet(sValues,reader.maxDoc(),set);
      }
    }
 else {
      return new ShortArrayAtomicFieldData.WithOrdinals(values.toArray(new short[values.size()]),reader.maxDoc(),build);
    }
  }
  finally {
    builder.close();
  }
}
