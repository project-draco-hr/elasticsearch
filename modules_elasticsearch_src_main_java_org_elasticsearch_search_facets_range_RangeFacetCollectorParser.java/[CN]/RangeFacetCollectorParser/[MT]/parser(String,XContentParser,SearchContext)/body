{
  String keyField=null;
  String valueField=null;
  String keyScript=null;
  String valueScript=null;
  Map<String,Object> params=null;
  XContentParser.Token token;
  String fieldName=null;
  List<RangeFacet.Entry> entries=Lists.newArrayList();
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      fieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_ARRAY) {
      if ("ranges".equals(fieldName) || "entries".equals(fieldName)) {
        while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
          double from=Double.NEGATIVE_INFINITY;
          double to=Double.POSITIVE_INFINITY;
          while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
            if (token == XContentParser.Token.FIELD_NAME) {
              fieldName=parser.currentName();
            }
 else             if (token.isValue()) {
              if ("from".equals(fieldName)) {
                from=parser.doubleValue();
              }
 else               if ("to".equals(fieldName)) {
                to=parser.doubleValue();
              }
            }
          }
          entries.add(new RangeFacet.Entry(from,to,0,0));
        }
      }
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("params".equals(fieldName)) {
        params=parser.map();
      }
    }
 else     if (token.isValue()) {
      if ("field".equals(fieldName)) {
        keyField=parser.text();
      }
 else       if ("key_field".equals(fieldName) || "keyField".equals(fieldName)) {
        keyField=parser.text();
      }
 else       if ("value_field".equals(fieldName) || "valueField".equals(fieldName)) {
        valueField=parser.text();
      }
 else       if ("key_script".equals(fieldName) || "keyScript".equals(fieldName)) {
        keyScript=parser.text();
      }
 else       if ("value_script".equals(fieldName) || "valueScript".equals(fieldName)) {
        valueScript=parser.text();
      }
    }
  }
  if (entries.isEmpty()) {
    throw new FacetPhaseExecutionException(facetName,"no ranges defined for range facet");
  }
  RangeFacet.Entry[] rangeEntries=entries.toArray(new RangeFacet.Entry[entries.size()]);
  if (keyScript != null && valueScript != null) {
    return new ScriptRangeFacetCollector(facetName,keyScript,valueScript,params,rangeEntries,context.scriptService(),context.fieldDataCache(),context.mapperService());
  }
  if (keyField == null) {
    throw new FacetPhaseExecutionException(facetName,"key field is required to be set for range facet, either using [field] or using [key_field]");
  }
  if (valueField == null || keyField.equals(valueField)) {
    return new RangeFacetCollector(facetName,keyField,rangeEntries,context.fieldDataCache(),context.mapperService());
  }
 else {
    return new KeyValueRangeFacetCollector(facetName,keyField,valueField,rangeEntries,context.fieldDataCache(),context.mapperService());
  }
}
