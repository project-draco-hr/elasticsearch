{
  String[] incExcTerms={"weller","nosuchterm"};
  SearchResponse response=client().prepareSearch("test").setQuery(new TermQueryBuilder("_all","weller")).addAggregation(new SignificantTermsBuilder("mySignificantTerms").field("description").executionHint(randomExecutionHint()).exclude(incExcTerms)).get();
  assertSearchResponse(response);
  SignificantTerms topTerms=response.getAggregations().get("mySignificantTerms");
  Set<String> terms=new HashSet<>();
  for (  Bucket topTerm : topTerms) {
    terms.add(topTerm.getKeyAsString());
  }
  assertEquals(new HashSet<String>(Arrays.asList("jam","council","style","paul","of","the")),terms);
  response=client().prepareSearch("test").setQuery(new TermQueryBuilder("_all","weller")).addAggregation(new SignificantTermsBuilder("mySignificantTerms").field("description").executionHint(randomExecutionHint()).include(incExcTerms)).get();
  assertSearchResponse(response);
  topTerms=response.getAggregations().get("mySignificantTerms");
  terms=new HashSet<>();
  for (  Bucket topTerm : topTerms) {
    terms.add(topTerm.getKeyAsString());
  }
  assertThat(terms,hasSize(1));
  assertThat(terms.contains("weller"),is(true));
}
