{
  SearchRequest searchRequest;
  try {
    searchRequest=parseSearchRequest(request);
    searchRequest.setListenerThreaded(false);
    SearchOperationThreading operationThreading=SearchOperationThreading.fromString(request.param("operation_threading"),null);
    if (operationThreading != null) {
      if (operationThreading == SearchOperationThreading.NO_THREADS) {
        operationThreading=SearchOperationThreading.SINGLE_THREAD;
      }
      searchRequest.setOperationThreading(operationThreading);
    }
  }
 catch (  Exception e) {
    if (logger.isDebugEnabled()) {
      logger.debug("failed to parse search request parameters",e);
    }
    try {
      XContentBuilder builder=restContentBuilder(request);
      channel.sendResponse(new XContentRestResponse(request,BAD_REQUEST,builder.startObject().field("error",e.getMessage()).endObject()));
    }
 catch (    IOException e1) {
      logger.error("Failed to send failure response",e1);
    }
    return;
  }
  client.search(searchRequest,new ActionListener<SearchResponse>(){
    @Override public void onResponse(    SearchResponse response){
      try {
        XContentBuilder builder=restContentBuilder(request);
        builder.startObject();
        response.toXContent(builder,request);
        builder.endObject();
        channel.sendResponse(new XContentRestResponse(request,response.status(),builder));
      }
 catch (      Exception e) {
        if (logger.isDebugEnabled()) {
          logger.debug("failed to execute search (building response)",e);
        }
        onFailure(e);
      }
    }
    @Override public void onFailure(    Throwable e){
      try {
        channel.sendResponse(new XContentThrowableRestResponse(request,e));
      }
 catch (      IOException e1) {
        logger.error("Failed to send failure response",e1);
      }
    }
  }
);
}
