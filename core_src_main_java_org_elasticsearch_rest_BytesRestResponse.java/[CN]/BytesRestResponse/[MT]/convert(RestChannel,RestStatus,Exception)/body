{
  XContentBuilder builder=channel.newErrorBuilder().startObject();
  if (e == null) {
    builder.field("error","unknown");
  }
 else   if (channel.detailedErrorsEnabled()) {
    final ToXContent.Params params;
    if (channel.request().paramAsBoolean("error_trace",!ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE_DEFAULT)) {
      params=new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_STACK_TRACE,"false"),channel.request());
    }
 else {
      if (status.getStatus() < 500) {
        SUPPRESSED_ERROR_LOGGER.debug(new ParameterizedMessage("path: {}, params: {}",channel.request().rawPath(),channel.request().params()),e);
      }
 else {
        SUPPRESSED_ERROR_LOGGER.warn(new ParameterizedMessage("path: {}, params: {}",channel.request().rawPath(),channel.request().params()),e);
      }
      params=channel.request();
    }
    builder.field("error");
    builder.startObject();
    final ElasticsearchException[] rootCauses=ElasticsearchException.guessRootCauses(e);
    builder.field("root_cause");
    builder.startArray();
    for (    ElasticsearchException rootCause : rootCauses) {
      builder.startObject();
      rootCause.toXContent(builder,new ToXContent.DelegatingMapParams(Collections.singletonMap(ElasticsearchException.REST_EXCEPTION_SKIP_CAUSE,"true"),params));
      builder.endObject();
    }
    builder.endArray();
    ElasticsearchException.toXContent(builder,params,e);
    builder.endObject();
  }
 else {
    builder.field("error",simpleMessage(e));
  }
  builder.field("status",status.getStatus());
  builder.endObject();
  return builder;
}
