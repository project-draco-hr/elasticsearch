{
  SearchSourceBuilder source=searchSource().query(matchAllQuery()).explain(true);
  Set<String> collectedIds=Sets.newHashSet();
  SearchResponse searchResponse=client.search(searchRequest("test").source(source.from(0).size(60)).searchType(QUERY_THEN_FETCH)).actionGet();
  assertThat("Failures " + Arrays.toString(searchResponse.shardFailures()),searchResponse.shardFailures().length,equalTo(0));
  assertThat(searchResponse.hits().totalHits(),equalTo(100l));
  assertThat(searchResponse.hits().hits().length,equalTo(60));
  for (int i=0; i < 60; i++) {
    SearchHit hit=searchResponse.hits().hits()[i];
    collectedIds.add(hit.id());
  }
  searchResponse=client.search(searchRequest("test").source(source.from(60).size(60)).searchType(QUERY_THEN_FETCH)).actionGet();
  assertThat("Failures " + Arrays.toString(searchResponse.shardFailures()),searchResponse.shardFailures().length,equalTo(0));
  assertThat(searchResponse.hits().totalHits(),equalTo(100l));
  assertThat(searchResponse.hits().hits().length,equalTo(40));
  for (int i=0; i < 40; i++) {
    SearchHit hit=searchResponse.hits().hits()[i];
    collectedIds.add(hit.id());
  }
  assertThat(collectedIds,equalTo(fullExpectedIds));
}
