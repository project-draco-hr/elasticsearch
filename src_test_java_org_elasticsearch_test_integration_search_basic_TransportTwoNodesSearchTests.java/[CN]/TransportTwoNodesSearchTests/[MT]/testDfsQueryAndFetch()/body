{
  SearchSourceBuilder source=searchSource().query(termQuery("multi","test")).from(0).size(20).explain(true);
  Set<String> expectedIds=Sets.newHashSet();
  for (int i=0; i < 100; i++) {
    expectedIds.add(Integer.toString(i));
  }
  SearchResponse searchResponse=client.search(searchRequest("test").setSource(source).setSearchType(DFS_QUERY_AND_FETCH).setScroll(new Scroll(timeValueMinutes(10)))).actionGet();
  assertThat("Failures " + Arrays.toString(searchResponse.getShardFailures()),searchResponse.getShardFailures().length,equalTo(0));
  assertThat(searchResponse.getHits().totalHits(),equalTo(100l));
  assertThat(searchResponse.getHits().hits().length,equalTo(60));
  for (int i=0; i < 60; i++) {
    SearchHit hit=searchResponse.getHits().hits()[i];
    assertThat(hit.explanation(),notNullValue());
    assertThat("make sure we don't have duplicates",expectedIds.remove(hit.id()),notNullValue());
  }
  searchResponse=client.searchScroll(searchScrollRequest(searchResponse.getScrollId())).actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(100l));
  assertThat(searchResponse.getHits().hits().length,equalTo(40));
  for (int i=0; i < 40; i++) {
    SearchHit hit=searchResponse.getHits().hits()[i];
    assertThat("make sure we don't have duplicates",expectedIds.remove(hit.id()),notNullValue());
  }
  assertThat("make sure we got all [" + expectedIds + "]",expectedIds.size(),equalTo(0));
}
