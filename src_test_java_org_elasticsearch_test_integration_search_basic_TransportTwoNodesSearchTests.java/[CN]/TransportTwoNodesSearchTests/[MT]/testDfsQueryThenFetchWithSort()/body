{
  prepareData();
  SearchSourceBuilder source=searchSource().query(termQuery("multi","test")).from(0).size(60).explain(true).sort("age",SortOrder.ASC);
  SearchResponse searchResponse=client().search(searchRequest("test").source(source).searchType(DFS_QUERY_THEN_FETCH).scroll(new Scroll(timeValueMinutes(10)))).actionGet();
  assertThat("Failures " + Arrays.toString(searchResponse.getShardFailures()),searchResponse.getShardFailures().length,equalTo(0));
  assertThat(searchResponse.getHits().totalHits(),equalTo(100l));
  assertThat(searchResponse.getHits().hits().length,equalTo(60));
  for (int i=0; i < 60; i++) {
    SearchHit hit=searchResponse.getHits().hits()[i];
    assertThat(hit.explanation(),notNullValue());
    assertThat("id[" + hit.id() + "]",hit.id(),equalTo(Integer.toString(i)));
  }
  searchResponse=client().searchScroll(searchScrollRequest(searchResponse.getScrollId())).actionGet();
  assertThat(searchResponse.getHits().totalHits(),equalTo(100l));
  assertThat(searchResponse.getHits().hits().length,equalTo(40));
  for (int i=0; i < 40; i++) {
    SearchHit hit=searchResponse.getHits().hits()[i];
    assertThat("id[" + hit.id() + "]",hit.id(),equalTo(Integer.toString(i + 60)));
  }
}
