{
  byte type=readByte();
  if (type == -1) {
    return null;
  }
 else   if (type == 0) {
    return readUTF();
  }
 else   if (type == 1) {
    return readInt();
  }
 else   if (type == 2) {
    return readLong();
  }
 else   if (type == 3) {
    return readFloat();
  }
 else   if (type == 4) {
    return readDouble();
  }
 else   if (type == 5) {
    return readBoolean();
  }
 else   if (type == 6) {
    int bytesSize=readVInt();
    byte[] value=new byte[bytesSize];
    readFully(value);
    return value;
  }
 else   if (type == 7) {
    int size=readVInt();
    List list=new ArrayList(size);
    for (int i=0; i < size; i++) {
      list.add(readGenericValue());
    }
    return list;
  }
 else   if (type == 8) {
    int size=readVInt();
    Object[] list=new Object[size];
    for (int i=0; i < size; i++) {
      list[i]=readGenericValue();
    }
    return list;
  }
 else   if (type == 9 || type == 10) {
    int size=readVInt();
    Map map;
    if (type == 9) {
      map=new LinkedHashMap(size);
    }
 else {
      map=new HashMap(size);
    }
    for (int i=0; i < size; i++) {
      map.put(readUTF(),readGenericValue());
    }
    return map;
  }
 else   if (type == 11) {
    return readByte();
  }
 else   if (type == 12) {
    return new Date(readLong());
  }
 else   if (type == 13) {
    return new DateTime(readLong());
  }
 else {
    throw new IOException("Can't read unknown type [" + type + "]");
  }
}
