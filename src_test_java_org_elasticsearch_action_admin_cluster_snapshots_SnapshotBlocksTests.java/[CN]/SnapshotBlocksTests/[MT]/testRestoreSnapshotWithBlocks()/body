{
  assertAcked(client().admin().indices().prepareDelete(INDEX_NAME));
  assertFalse(client().admin().indices().prepareExists(INDEX_NAME).get().isExists());
  logger.info("-->  restoring a snapshot is blocked when the cluster is read only");
  try {
    setClusterReadOnly(true);
    assertBlocked(client().admin().cluster().prepareRestoreSnapshot(REPOSITORY_NAME,SNAPSHOT_NAME),MetaData.CLUSTER_READ_ONLY_BLOCK);
  }
  finally {
    setClusterReadOnly(false);
  }
  logger.info("-->  creating a snapshot is allowed when the cluster is not read only");
  RestoreSnapshotResponse response=client().admin().cluster().prepareRestoreSnapshot(REPOSITORY_NAME,SNAPSHOT_NAME).setWaitForCompletion(true).execute().actionGet();
  assertThat(response.status(),equalTo(RestStatus.OK));
  assertTrue(client().admin().indices().prepareExists(INDEX_NAME).get().isExists());
}
