{
  for (  Item item : likeItems) {
    setDefaultIndexTypeFields(context,item,moreLikeFields,useDefaultField);
  }
  for (  Item item : unlikeItems) {
    setDefaultIndexTypeFields(context,item,moreLikeFields,useDefaultField);
  }
  MultiTermVectorsResponse likeItemsResponse=fetchResponse(context.getClient(),likeItems);
  mltQuery.setLikeText(getFieldsFor(likeItemsResponse));
  if (unlikeItems.length > 0) {
    MultiTermVectorsResponse unlikeItemsResponse=fetchResponse(context.getClient(),unlikeItems);
    org.apache.lucene.index.Fields[] unlikeFields=getFieldsFor(unlikeItemsResponse);
    if (unlikeFields.length > 0) {
      mltQuery.setUnlikeText(unlikeFields);
    }
  }
  BooleanQuery.Builder boolQuery=new BooleanQuery.Builder();
  boolQuery.add(mltQuery,BooleanClause.Occur.SHOULD);
  if (!include) {
    handleExclude(boolQuery,likeItems);
  }
  return boolQuery.build();
}
