{
  try {
    XContentParser parser;
    XContentType contentType;
    Compressor compressor=CompressorFactory.compressor(data,offset,length);
    if (compressor != null) {
      CompressedStreamInput compressedStreamInput=compressor.streamInput(new BytesStreamInput(data,offset,length,false));
      contentType=XContentFactory.xContentType(compressedStreamInput);
      compressedStreamInput.resetToBufferStart();
      parser=XContentFactory.xContent(contentType).createParser(compressedStreamInput);
    }
 else {
      contentType=XContentFactory.xContentType(data,offset,length);
      parser=XContentFactory.xContent(contentType).createParser(data,offset,length);
    }
    if (ordered) {
      return Tuple.tuple(contentType,parser.mapOrderedAndClose());
    }
 else {
      return Tuple.tuple(contentType,parser.mapAndClose());
    }
  }
 catch (  IOException e) {
    throw new ElasticsearchParseException("Failed to parse content to map",e);
  }
}
