{
  try {
    XContentParser parser;
    XContentType contentType;
    if (LZF.isCompressed(data,offset,length)) {
      BytesStreamInput siBytes=new BytesStreamInput(data,offset,length,false);
      LZFStreamInput siLzf=CachedStreamInput.cachedLzf(siBytes);
      contentType=XContentFactory.xContentType(siLzf);
      siLzf.resetToBufferStart();
      parser=XContentFactory.xContent(contentType).createParser(siLzf);
    }
 else {
      contentType=XContentFactory.xContentType(data,offset,length);
      parser=XContentFactory.xContent(contentType).createParser(data,offset,length);
    }
    if (ordered) {
      return Tuple.tuple(contentType,parser.mapOrderedAndClose());
    }
 else {
      return Tuple.tuple(contentType,parser.mapAndClose());
    }
  }
 catch (  IOException e) {
    throw new ElasticSearchParseException("Failed to parse content to map",e);
  }
}
