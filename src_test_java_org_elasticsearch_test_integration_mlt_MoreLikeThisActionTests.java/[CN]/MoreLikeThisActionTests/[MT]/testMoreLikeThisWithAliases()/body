{
  try {
    client1.admin().indices().prepareDelete("test").execute().actionGet();
  }
 catch (  IndexMissingException e) {
  }
  logger.info("Creating index test");
  client1.admin().indices().create(createIndexRequest("test")).actionGet();
  logger.info("Creating aliases alias release");
  client1.admin().indices().aliases(indexAliasesRequest().addAlias("test","release",termFilter("text","release"))).actionGet();
  client1.admin().indices().aliases(indexAliasesRequest().addAlias("test","beta",termFilter("text","beta"))).actionGet();
  logger.info("Running Cluster Health");
  ClusterHealthResponse clusterHealth=client1.admin().cluster().health(clusterHealthRequest().setWaitForGreenStatus()).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.getStatus());
  assertThat(clusterHealth.isTimedOut(),equalTo(false));
  assertThat(clusterHealth.getStatus(),equalTo(ClusterHealthStatus.GREEN));
  logger.info("Indexing...");
  client1.index(indexRequest("test").setType("type1").setId("1").setSource(jsonBuilder().startObject().field("text","lucene beta").endObject())).actionGet();
  client1.index(indexRequest("test").setType("type1").setId("2").setSource(jsonBuilder().startObject().field("text","lucene release").endObject())).actionGet();
  client1.index(indexRequest("test").setType("type1").setId("3").setSource(jsonBuilder().startObject().field("text","elasticsearch beta").endObject())).actionGet();
  client1.index(indexRequest("test").setType("type1").setId("4").setSource(jsonBuilder().startObject().field("text","elasticsearch release").endObject())).actionGet();
  client1.admin().indices().refresh(refreshRequest()).actionGet();
  logger.info("Running moreLikeThis on index");
  SearchResponse mltResponse=client1.moreLikeThis(moreLikeThisRequest("test").setType("type1").setId("1").setMinTermFreq(1).setMinDocFreq(1)).actionGet();
  assertThat(mltResponse.getHits().totalHits(),equalTo(2l));
  logger.info("Running moreLikeThis on beta shard");
  mltResponse=client1.moreLikeThis(moreLikeThisRequest("beta").setType("type1").setId("1").setMinTermFreq(1).setMinDocFreq(1)).actionGet();
  assertThat(mltResponse.getHits().totalHits(),equalTo(1l));
  assertThat(mltResponse.getHits().getAt(0).id(),equalTo("3"));
  logger.info("Running moreLikeThis on release shard");
  mltResponse=client1.moreLikeThis(moreLikeThisRequest("test").setType("type1").setId("1").setMinTermFreq(1).setMinDocFreq(1).setSearchIndices("release")).actionGet();
  assertThat(mltResponse.getHits().totalHits(),equalTo(1l));
  assertThat(mltResponse.getHits().getAt(0).id(),equalTo("2"));
}
