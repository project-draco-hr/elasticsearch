{
  ClusterState clusterState=clusterService.state();
  DiscoveryNode masterNode=clusterState.nodes().masterNode();
  if (masterNode == null) {
    listener.onFailure(new MasterNotDiscoveredException("no master to send allocate dangled request"));
    return;
  }
  AllocateDangledRequest request=new AllocateDangledRequest(clusterService.localNode(),indices);
  transportService.sendRequest(masterNode,ACTION_NAME,request,new TransportResponseHandler<AllocateDangledResponse>(){
    @Override public AllocateDangledResponse newInstance(){
      return new AllocateDangledResponse();
    }
    @Override public void handleResponse(    AllocateDangledResponse response){
      listener.onResponse(response);
    }
    @Override public void handleException(    TransportException exp){
      listener.onFailure(exp);
    }
    @Override public String executor(){
      return ThreadPool.Names.SAME;
    }
  }
);
}
