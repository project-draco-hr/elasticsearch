{
  prepareCreate("idx").addMapping("type",jsonBuilder().startObject().startObject("type").startObject("properties").startObject("num").field("type","double").endObject().endObject().endObject().endObject()).execute().actionGet();
  final int numDocs=scaledRandomIntBetween(500,5000);
  final int maxNumTerms=randomIntBetween(10,2000);
  final int interval=randomIntBetween(1,100);
  final Integer[] values=new Integer[maxNumTerms];
  for (int i=0; i < values.length; ++i) {
    values[i]=randomInt(maxNumTerms * 3) - maxNumTerms;
  }
  for (int i=0; i < numDocs; ++i) {
    XContentBuilder source=jsonBuilder().startObject().field("num",randomDouble()).startArray("values");
    final int numValues=randomInt(4);
    for (int j=0; j < numValues; ++j) {
      source=source.value(randomFrom(values));
    }
    source=source.endArray().endObject();
    client().prepareIndex("idx","type").setSource(source).execute().actionGet();
  }
  assertNoFailures(client().admin().indices().prepareRefresh("idx").setIndicesOptions(IndicesOptions.lenientExpandOpen()).execute().get());
  Map<String,Object> params=new HashMap<>();
  params.put("interval",interval);
  SearchResponse resp=client().prepareSearch("idx").addAggregation(terms("terms").field("values").collectMode(randomFrom(SubAggCollectionMode.values())).script(new Script("floor(_value / interval)",ScriptType.INLINE,CustomScriptPlugin.NAME,params)).size(maxNumTerms)).addAggregation(histogram("histo").field("values").interval(interval).minDocCount(1)).execute().actionGet();
  assertSearchResponse(resp);
  Terms terms=resp.getAggregations().get("terms");
  assertThat(terms,notNullValue());
  Histogram histo=resp.getAggregations().get("histo");
  assertThat(histo,notNullValue());
  assertThat(terms.getBuckets().size(),equalTo(histo.getBuckets().size()));
  for (  Histogram.Bucket bucket : histo.getBuckets()) {
    final double key=((Number)bucket.getKey()).doubleValue() / interval;
    final Terms.Bucket termsBucket=terms.getBucketByKey(String.valueOf(key));
    assertEquals(bucket.getDocCount(),termsBucket.getDocCount());
  }
}
