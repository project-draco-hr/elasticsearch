{
  registerAction(NodesInfoAction.INSTANCE,TransportNodesInfoAction.class);
  registerAction(NodesStatsAction.INSTANCE,TransportNodesStatsAction.class);
  registerAction(NodesShutdownAction.INSTANCE,TransportNodesShutdownAction.class);
  registerAction(NodesRestartAction.INSTANCE,TransportNodesRestartAction.class);
  registerAction(ClusterStateAction.INSTANCE,TransportClusterStateAction.class);
  registerAction(ClusterHealthAction.INSTANCE,TransportClusterHealthAction.class);
  registerAction(ClusterUpdateSettingsAction.INSTANCE,TransportClusterUpdateSettingsAction.class);
  registerAction(ClusterRerouteAction.INSTANCE,TransportClusterRerouteAction.class);
  registerAction(IndicesStatsAction.INSTANCE,TransportIndicesStatsAction.class);
  registerAction(IndicesStatusAction.INSTANCE,TransportIndicesStatusAction.class);
  registerAction(IndicesSegmentsAction.INSTANCE,TransportIndicesSegmentsAction.class);
  registerAction(CreateIndexAction.INSTANCE,TransportCreateIndexAction.class);
  registerAction(DeleteIndexAction.INSTANCE,TransportDeleteIndexAction.class);
  registerAction(OpenIndexAction.INSTANCE,TransportOpenIndexAction.class);
  registerAction(CloseIndexAction.INSTANCE,TransportCloseIndexAction.class);
  registerAction(IndicesExistsAction.INSTANCE,TransportIndicesExistsAction.class);
  registerAction(PutMappingAction.INSTANCE,TransportPutMappingAction.class);
  registerAction(DeleteMappingAction.INSTANCE,TransportDeleteMappingAction.class);
  registerAction(IndicesAliasesAction.INSTANCE,TransportIndicesAliasesAction.class);
  registerAction(UpdateSettingsAction.INSTANCE,TransportUpdateSettingsAction.class);
  registerAction(AnalyzeAction.INSTANCE,TransportAnalyzeAction.class);
  registerAction(PutIndexTemplateAction.INSTANCE,TransportPutIndexTemplateAction.class);
  registerAction(DeleteIndexTemplateAction.INSTANCE,TransportDeleteIndexTemplateAction.class);
  registerAction(ValidateQueryAction.INSTANCE,TransportValidateQueryAction.class);
  registerAction(GatewaySnapshotAction.INSTANCE,TransportGatewaySnapshotAction.class);
  registerAction(RefreshAction.INSTANCE,TransportRefreshAction.class);
  registerAction(FlushAction.INSTANCE,TransportFlushAction.class);
  registerAction(OptimizeAction.INSTANCE,TransportOptimizeAction.class);
  registerAction(ClearIndicesCacheAction.INSTANCE,TransportClearIndicesCacheAction.class);
  registerAction(IndexAction.INSTANCE,TransportIndexAction.class);
  registerAction(GetAction.INSTANCE,TransportGetAction.class);
  registerAction(DeleteAction.INSTANCE,TransportDeleteAction.class,TransportIndexDeleteAction.class,TransportShardDeleteAction.class);
  registerAction(CountAction.INSTANCE,TransportCountAction.class);
  registerAction(UpdateAction.INSTANCE,TransportUpdateAction.class);
  registerAction(MultiGetAction.INSTANCE,TransportMultiGetAction.class,TransportShardMultiGetAction.class);
  registerAction(BulkAction.INSTANCE,TransportBulkAction.class,TransportShardBulkAction.class);
  registerAction(DeleteByQueryAction.INSTANCE,TransportDeleteByQueryAction.class,TransportIndexDeleteByQueryAction.class,TransportShardDeleteByQueryAction.class);
  registerAction(SearchAction.INSTANCE,TransportSearchAction.class,TransportSearchCache.class,TransportSearchDfsQueryThenFetchAction.class,TransportSearchQueryThenFetchAction.class,TransportSearchDfsQueryAndFetchAction.class,TransportSearchQueryAndFetchAction.class,TransportSearchScanAction.class);
  registerAction(SearchScrollAction.INSTANCE,TransportSearchScrollAction.class,TransportSearchScrollScanAction.class,TransportSearchScrollQueryThenFetchAction.class,TransportSearchScrollQueryAndFetchAction.class);
  registerAction(MoreLikeThisAction.INSTANCE,TransportMoreLikeThisAction.class);
  registerAction(PercolateAction.INSTANCE,TransportPercolateAction.class);
  MapBinder<String,GenericAction> actionsBinder=MapBinder.newMapBinder(binder(),String.class,GenericAction.class);
  for (  Map.Entry<String,ActionEntry> entry : actions.entrySet()) {
    actionsBinder.addBinding(entry.getKey()).toInstance(entry.getValue().action);
  }
  if (!proxy) {
    MapBinder<GenericAction,TransportAction> transportActionsBinder=MapBinder.newMapBinder(binder(),GenericAction.class,TransportAction.class);
    for (    Map.Entry<String,ActionEntry> entry : actions.entrySet()) {
      bind(entry.getValue().transportAction).asEagerSingleton();
      transportActionsBinder.addBinding(entry.getValue().action).to(entry.getValue().transportAction).asEagerSingleton();
      for (      Class supportAction : entry.getValue().supportTransportActions) {
        bind(supportAction).asEagerSingleton();
      }
    }
  }
}
