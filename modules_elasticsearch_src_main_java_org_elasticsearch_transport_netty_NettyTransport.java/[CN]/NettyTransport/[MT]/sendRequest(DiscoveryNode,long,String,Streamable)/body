{
  Channel targetChannel=nodeChannel(node);
  HandlesStreamOutput stream=BytesStreamOutput.Cached.cachedHandles();
  stream.writeBytes(LENGTH_PLACEHOLDER);
  stream.writeLong(requestId);
  byte status=0;
  status=setRequest(status);
  stream.writeByte(status);
  stream.writeUTF(action);
  streamable.writeTo(stream);
  byte[] data=((BytesStreamOutput)stream.wrappedOut()).copiedByteArray();
  ChannelBuffer buffer=ChannelBuffers.wrappedBuffer(data);
  int size=buffer.writerIndex() - 4;
  if (size == 0) {
    throw new ElasticSearchIllegalStateException("Trying to send a stream with 0 size");
  }
  buffer.setInt(0,size);
  ChannelFuture channelFuture=targetChannel.write(buffer);
  channelFuture.addListener(new ChannelFutureListener(){
    @Override public void operationComplete(    ChannelFuture future) throws Exception {
      if (!future.isSuccess()) {
        TransportResponseHandler handler=transportServiceAdapter.remove(requestId);
        if (handler != null) {
          handler.handleException(new RemoteTransportException("Failed write request",new SendRequestTransportException(node,action,future.getCause())));
        }
      }
    }
  }
);
}
