{
  if (serverChannel != null) {
    try {
      serverChannel.close().awaitUninterruptibly();
    }
  finally {
      serverChannel=null;
    }
  }
  if (serverOpenChannels != null) {
    serverOpenChannels.close();
    serverOpenChannels=null;
  }
  if (serverBootstrap != null) {
    final CountDownLatch latch=new CountDownLatch(1);
    threadPool.cached().execute(new Runnable(){
      @Override public void run(){
        try {
          serverBootstrap.releaseExternalResources();
        }
  finally {
          latch.countDown();
        }
      }
    }
);
    try {
      latch.await(30,TimeUnit.SECONDS);
    }
 catch (    InterruptedException e) {
    }
    serverBootstrap=null;
  }
  for (Iterator<NodeChannels> it=connectedNodes.values().iterator(); it.hasNext(); ) {
    NodeChannels nodeChannels=it.next();
    it.remove();
    nodeChannels.close();
  }
  if (clientBootstrap != null) {
    final CountDownLatch latch=new CountDownLatch(1);
    threadPool.cached().execute(new Runnable(){
      @Override public void run(){
        try {
          clientBootstrap.releaseExternalResources();
        }
  finally {
          latch.countDown();
        }
      }
    }
);
    try {
      latch.await(30,TimeUnit.SECONDS);
    }
 catch (    InterruptedException e) {
    }
    clientBootstrap=null;
  }
}
