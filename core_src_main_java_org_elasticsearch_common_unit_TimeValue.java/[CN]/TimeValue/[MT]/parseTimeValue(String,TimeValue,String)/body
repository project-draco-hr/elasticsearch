{
  settingName=Objects.requireNonNull(settingName);
  if (sValue == null) {
    return defaultValue;
  }
  try {
    long millis;
    String lowerSValue=sValue.toLowerCase(Locale.ROOT).trim();
    if (lowerSValue.endsWith("ms")) {
      millis=(long)(Double.parseDouble(lowerSValue.substring(0,lowerSValue.length() - 2)));
    }
 else     if (lowerSValue.endsWith("s")) {
      millis=(long)Double.parseDouble(lowerSValue.substring(0,lowerSValue.length() - 1)) * 1000;
    }
 else     if (lowerSValue.endsWith("m")) {
      millis=(long)(Double.parseDouble(lowerSValue.substring(0,lowerSValue.length() - 1)) * 60 * 1000);
    }
 else     if (lowerSValue.endsWith("h")) {
      millis=(long)(Double.parseDouble(lowerSValue.substring(0,lowerSValue.length() - 1)) * 60 * 60* 1000);
    }
 else     if (lowerSValue.endsWith("d")) {
      millis=(long)(Double.parseDouble(lowerSValue.substring(0,lowerSValue.length() - 1)) * 24 * 60* 60* 1000);
    }
 else     if (lowerSValue.endsWith("w")) {
      millis=(long)(Double.parseDouble(lowerSValue.substring(0,lowerSValue.length() - 1)) * 7 * 24* 60* 60* 1000);
    }
 else     if (lowerSValue.equals("-1")) {
      millis=-1;
    }
 else     if (lowerSValue.equals("0")) {
      millis=0;
    }
 else {
      throw new ElasticsearchParseException("Failed to parse setting [{}] with value [{}] as a time value: unit is missing or unrecognized",settingName,sValue);
    }
    return new TimeValue(millis,TimeUnit.MILLISECONDS);
  }
 catch (  NumberFormatException e) {
    throw new ElasticsearchParseException("Failed to parse [{}]",e,sValue);
  }
}
