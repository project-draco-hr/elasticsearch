{
  XContentParser parser=parseContext.parser();
  Filter filter=null;
  boolean cache=false;
  CacheKeyFilter.Key cacheKey=null;
  String filterName=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
      if ("filter".equals(currentFieldName)) {
        filter=parseContext.parseInnerFilter();
      }
 else {
        filter=parseContext.parseInnerFilter(currentFieldName);
      }
    }
 else     if (token.isValue()) {
      if ("_cache".equals(currentFieldName)) {
        cache=parser.booleanValue();
      }
 else       if ("_name".equals(currentFieldName)) {
        filterName=parser.text();
      }
 else       if ("_cache_key".equals(currentFieldName) || "_cacheKey".equals(currentFieldName)) {
        cacheKey=new CacheKeyFilter.Key(parser.text());
      }
    }
  }
  if (filter == null) {
    throw new QueryParsingException(parseContext.index(),"filter is required when using `not` filter");
  }
  Filter notFilter=new NotFilter(filter);
  if (cache) {
    notFilter=parseContext.cacheFilter(notFilter,cacheKey);
  }
  if (filterName != null) {
    parseContext.addNamedFilter(filterName,notFilter);
  }
  return notFilter;
}
