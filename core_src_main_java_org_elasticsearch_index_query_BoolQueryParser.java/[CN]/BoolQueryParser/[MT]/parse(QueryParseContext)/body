{
  XContentParser parser=parseContext.parser();
  boolean disableCoord=false;
  float boost=1.0f;
  String minimumShouldMatch=null;
  List<BooleanClause> clauses=new ArrayList<>();
  boolean adjustPureNegative=true;
  String queryName=null;
  String currentFieldName=null;
  XContentParser.Token token;
  while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
    if (token == XContentParser.Token.FIELD_NAME) {
      currentFieldName=parser.currentName();
    }
 else     if (parseContext.isDeprecatedSetting(currentFieldName)) {
    }
 else     if (token == XContentParser.Token.START_OBJECT) {
switch (currentFieldName) {
case "must":
        Query query=parseContext.parseInnerQuery();
      if (query != null) {
        clauses.add(new BooleanClause(query,BooleanClause.Occur.MUST));
      }
    break;
case "should":
  query=parseContext.parseInnerQuery();
if (query != null) {
  clauses.add(new BooleanClause(query,BooleanClause.Occur.SHOULD));
  if (parseContext.isFilter() && minimumShouldMatch == null) {
    minimumShouldMatch="1";
  }
}
break;
case "filter":
query=parseContext.parseInnerFilter();
if (query != null) {
clauses.add(new BooleanClause(query,BooleanClause.Occur.FILTER));
}
break;
case "must_not":
case "mustNot":
query=parseContext.parseInnerFilter();
if (query != null) {
clauses.add(new BooleanClause(query,BooleanClause.Occur.MUST_NOT));
}
break;
default :
throw new QueryParsingException(parseContext,"[bool] query does not support [" + currentFieldName + "]");
}
}
 else if (token == XContentParser.Token.START_ARRAY) {
while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
switch (currentFieldName) {
case "must":
Query query=parseContext.parseInnerQuery();
if (query != null) {
clauses.add(new BooleanClause(query,BooleanClause.Occur.MUST));
}
break;
case "should":
query=parseContext.parseInnerQuery();
if (query != null) {
clauses.add(new BooleanClause(query,BooleanClause.Occur.SHOULD));
if (parseContext.isFilter() && minimumShouldMatch == null) {
minimumShouldMatch="1";
}
}
break;
case "filter":
query=parseContext.parseInnerFilter();
if (query != null) {
clauses.add(new BooleanClause(query,BooleanClause.Occur.FILTER));
}
break;
case "must_not":
case "mustNot":
query=parseContext.parseInnerFilter();
if (query != null) {
clauses.add(new BooleanClause(query,BooleanClause.Occur.MUST_NOT));
}
break;
default :
throw new QueryParsingException(parseContext,"bool query does not support [" + currentFieldName + "]");
}
}
}
 else if (token.isValue()) {
if ("disable_coord".equals(currentFieldName) || "disableCoord".equals(currentFieldName)) {
disableCoord=parser.booleanValue();
}
 else if ("minimum_should_match".equals(currentFieldName) || "minimumShouldMatch".equals(currentFieldName)) {
minimumShouldMatch=parser.textOrNull();
}
 else if ("boost".equals(currentFieldName)) {
boost=parser.floatValue();
}
 else if ("minimum_number_should_match".equals(currentFieldName) || "minimumNumberShouldMatch".equals(currentFieldName)) {
minimumShouldMatch=parser.textOrNull();
}
 else if ("adjust_pure_negative".equals(currentFieldName) || "adjustPureNegative".equals(currentFieldName)) {
adjustPureNegative=parser.booleanValue();
}
 else if ("_name".equals(currentFieldName)) {
queryName=parser.text();
}
 else {
throw new QueryParsingException(parseContext,"[bool] query does not support [" + currentFieldName + "]");
}
}
}
if (clauses.isEmpty()) {
return new MatchAllDocsQuery();
}
BooleanQuery booleanQuery=new BooleanQuery(disableCoord);
for (BooleanClause clause : clauses) {
booleanQuery.add(clause);
}
booleanQuery.setBoost(boost);
booleanQuery=Queries.applyMinimumShouldMatch(booleanQuery,minimumShouldMatch);
Query query=adjustPureNegative ? fixNegativeQueryIfNeeded(booleanQuery) : booleanQuery;
if (queryName != null) {
parseContext.addNamedQuery(queryName,query);
}
return query;
}
