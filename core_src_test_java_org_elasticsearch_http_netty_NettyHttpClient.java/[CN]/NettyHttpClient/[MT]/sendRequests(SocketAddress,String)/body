{
  final CountDownLatch latch=new CountDownLatch(uris.length);
  final Collection<HttpResponse> content=Collections.synchronizedList(new ArrayList<HttpResponse>(uris.length));
  clientBootstrap.setPipelineFactory(new CountDownLatchPipelineFactory(latch,content));
  ChannelFuture channelFuture=null;
  try {
    channelFuture=clientBootstrap.connect(remoteAddress);
    channelFuture.await(1000);
    for (int i=0; i < uris.length; i++) {
      final HttpRequest httpRequest=new DefaultHttpRequest(HTTP_1_1,HttpMethod.GET,uris[i]);
      httpRequest.headers().add(HOST,"localhost");
      httpRequest.headers().add("X-Opaque-ID",String.valueOf(i));
      channelFuture.getChannel().write(httpRequest);
    }
    latch.await();
  }
  finally {
    if (channelFuture != null) {
      channelFuture.getChannel().close();
    }
  }
  return content;
}
