{
  parseField(builder,name,numberNode,parserContext);
  for (Iterator<Map.Entry<String,Object>> iterator=numberNode.entrySet().iterator(); iterator.hasNext(); ) {
    Map.Entry<String,Object> entry=iterator.next();
    String propName=Strings.toUnderscoreCase(entry.getKey());
    Object propNode=entry.getValue();
    if (propName.equals("precision_step")) {
      builder.precisionStep(nodeIntegerValue(propNode));
      iterator.remove();
    }
 else     if (propName.equals("ignore_malformed")) {
      builder.ignoreMalformed(nodeBooleanValue("ignore_malformed",propNode,parserContext));
      iterator.remove();
    }
 else     if (propName.equals("coerce")) {
      builder.coerce(nodeBooleanValue("coerce",propNode,parserContext));
      iterator.remove();
    }
 else     if (propName.equals("omit_norms")) {
      builder.omitNorms(nodeBooleanValue("omit_norms",propNode,parserContext));
      iterator.remove();
    }
 else     if (propName.equals("similarity")) {
      SimilarityProvider similarityProvider=resolveSimilarity(parserContext,name,propNode.toString());
      builder.similarity(similarityProvider);
      iterator.remove();
    }
 else     if (parseMultiField(builder,name,parserContext,propName,propNode)) {
      iterator.remove();
    }
  }
}
