{
  int numDocs=indexRandomNumbers("whitespace",-1,false);
  final int iters=scaledRandomIntBetween(50,100);
  for (int i=0; i < iters; i++) {
    int resultSize=numDocs;
    int rescoreWindow=between(1,3) * resultSize;
    String intToEnglish=English.intToEnglish(between(0,numDocs - 1));
    String query=intToEnglish.split(" ")[0];
    SearchResponse rescored=client().prepareSearch().setSearchType(SearchType.QUERY_THEN_FETCH).setPreference("test").setQuery(QueryBuilders.matchQuery("field1",query).operator(MatchQueryBuilder.Operator.OR)).setFrom(0).setSize(resultSize).setRescorer(RescoreBuilder.queryRescorer(QueryBuilders.constantScoreQuery(QueryBuilders.matchPhraseQuery("field1",intToEnglish).slop(3))).setQueryWeight(1.0f).setRescoreQueryWeight(0.0f)).setRescoreWindow(rescoreWindow).execute().actionGet();
    SearchResponse plain=client().prepareSearch().setSearchType(SearchType.QUERY_THEN_FETCH).setPreference("test").setQuery(QueryBuilders.matchQuery("field1",query).operator(MatchQueryBuilder.Operator.OR)).setFrom(0).setSize(resultSize).execute().actionGet();
    assertEquivalent(query,plain,rescored);
    rescored=client().prepareSearch().setSearchType(SearchType.QUERY_THEN_FETCH).setPreference("test").setQuery(QueryBuilders.matchQuery("field1",query).operator(MatchQueryBuilder.Operator.OR)).setFrom(0).setSize(resultSize).setRescorer(RescoreBuilder.queryRescorer(QueryBuilders.constantScoreQuery(QueryBuilders.matchPhraseQuery("field1","not in the index").slop(3))).setQueryWeight(1.0f).setRescoreQueryWeight(1.0f)).setRescoreWindow(rescoreWindow).execute().actionGet();
    assertEquivalent(query,plain,rescored);
    rescored=client().prepareSearch().setSearchType(SearchType.QUERY_THEN_FETCH).setPreference("test").setQuery(QueryBuilders.matchQuery("field1",query).operator(MatchQueryBuilder.Operator.OR)).setFrom(0).setSize(resultSize).setRescorer(RescoreBuilder.queryRescorer(QueryBuilders.matchPhraseQuery("field1",intToEnglish).slop(0)).setQueryWeight(1.0f).setRescoreQueryWeight(1.0f)).setRescoreWindow(2 * rescoreWindow).execute().actionGet();
    assertEquivalentOrSubstringMatch(intToEnglish,plain,rescored);
  }
}
