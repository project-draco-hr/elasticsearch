{
  for (  FileSystemException ex : Arrays.asList(new FileSystemException("a","b","c"),new NoSuchFileException("a","b","c"),new NotDirectoryException("a"),new DirectoryNotEmptyException("a"),new AtomicMoveNotSupportedException("a","b","c"),new FileAlreadyExistsException("a","b","c"),new AccessDeniedException("a","b","c"),new FileSystemLoopException("a"))) {
    FileSystemException serialize=serialize(ex);
    assertEquals(serialize.getClass(),ex.getClass());
    assertEquals("a",serialize.getFile());
    if (serialize.getClass() == NotDirectoryException.class || serialize.getClass() == FileSystemLoopException.class || serialize.getClass() == DirectoryNotEmptyException.class) {
      assertNull(serialize.getOtherFile());
      assertNull(serialize.getReason());
    }
 else {
      assertEquals(serialize.getClass().toString(),"b",serialize.getOtherFile());
      assertEquals(serialize.getClass().toString(),"c",serialize.getReason());
    }
  }
}
