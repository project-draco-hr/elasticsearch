{
  int numDocs=ir.numDocs();
  FreqQ res=new FreqQ(words.size());
  for (  String word : words.keySet()) {
    int tf=words.get(word).x;
    if (minTermFreq > 0 && tf < minTermFreq) {
      continue;
    }
    String topField=fieldNames[0];
    int docFreq=0;
    for (    String fieldName : fieldNames) {
      int freq=ir.docFreq(new Term(fieldName,word));
      topField=(freq > docFreq) ? fieldName : topField;
      docFreq=(freq > docFreq) ? freq : docFreq;
    }
    if (minDocFreq > 0 && docFreq < minDocFreq) {
      continue;
    }
    if (docFreq > maxDocFreq) {
      continue;
    }
    if (docFreq == 0) {
      continue;
    }
    float idf=similarity.idf(docFreq,numDocs);
    float score=tf * idf;
    res.insertWithOverflow(new Object[]{word,topField,score,idf,docFreq,tf});
  }
  return res;
}
