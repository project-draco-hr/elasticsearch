{
  blobStore.executor().execute(new Runnable(){
    @Override public void run(){
      File file=new File(path,blobName);
      RandomAccessFile raf;
      try {
        raf=new RandomAccessFile(file,"rw");
        raf.setLength(0);
      }
 catch (      Throwable e) {
        listener.onFailure(e);
        return;
      }
      boolean success=false;
      try {
        boolean innerSuccess=false;
        try {
          long bytesWritten=0;
          byte[] buffer=new byte[blobStore.bufferSizeInBytes()];
          int bytesRead;
          while ((bytesRead=is.read(buffer)) != -1) {
            raf.write(buffer,0,bytesRead);
            bytesWritten+=bytesRead;
          }
          if (bytesWritten != sizeInBytes) {
            listener.onFailure(new ElasticsearchIllegalStateException("[" + blobName + "]: wrote ["+ bytesWritten+ "], expected to write ["+ sizeInBytes+ "]"));
            return;
          }
          innerSuccess=true;
        }
  finally {
          if (innerSuccess) {
            IOUtils.close(is,raf);
          }
 else {
            IOUtils.closeWhileHandlingException(is,raf);
          }
        }
        FileSystemUtils.syncFile(file);
        success=true;
      }
 catch (      Throwable e) {
        listener.onFailure(e);
        try {
          if (file.exists()) {
            file.delete();
          }
        }
 catch (        Exception e1) {
        }
      }
 finally {
        if (success) {
          listener.onCompleted();
        }
      }
    }
  }
);
}
