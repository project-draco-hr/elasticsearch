{
  super(maxLength);
  this.passageFormatter=passageFormatter;
  this.noMatchSize=noMatchSize;
  if (mergeValues) {
    String rawValue=Strings.collectionToDelimitedString(fieldValues,String.valueOf(getMultiValuedSeparator("")));
    String fieldValue=rawValue.substring(0,Math.min(rawValue.length(),maxLength));
    this.fieldValues=new String[]{fieldValue};
    this.fieldValuesOffsets=new int[]{0};
    this.totalContentLength=fieldValue.length();
  }
 else {
    this.fieldValues=new String[fieldValues.size()];
    this.fieldValuesOffsets=new int[fieldValues.size()];
    int contentLength=0;
    int offset=0;
    int previousLength=-1;
    for (int i=0; i < fieldValues.size(); i++) {
      String rawValue=fieldValues.get(i).toString();
      String fieldValue=rawValue.substring(0,Math.min(rawValue.length(),maxLength));
      this.fieldValues[i]=fieldValue;
      contentLength+=fieldValue.length();
      offset+=previousLength + 1;
      this.fieldValuesOffsets[i]=offset;
      previousLength=fieldValue.length();
    }
    this.totalContentLength=contentLength;
  }
}
