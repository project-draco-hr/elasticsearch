{
  if (numWhitespace > 0) {
    numEaten+=numWhitespace;
    addOffCorrectMap(numReturned,numEaten);
    numWhitespace=0;
  }
  numReturned++;
  while (true) {
    int lastNumRead=numRead;
    int ch=next();
switch (ch) {
case '&':
      saveState();
    ch=readEntity();
  if (ch >= 0)   return ch;
if (ch == MISMATCH) {
  restoreState();
  return '&';
}
break;
case '<':
saveState();
ch=next();
int ret=MISMATCH;
if (ch == '!') {
ret=readBang(false);
}
 else if (ch == '/') {
ret=readName(true);
if (ret == MATCH) {
ch=nextSkipWS();
ret=ch == '>' ? MATCH : MISMATCH;
}
}
 else if (isAlpha(ch)) {
push(ch);
ret=readTag();
}
 else if (ch == '?') {
ret=readProcessingInstruction();
}
if (ret == MATCH) {
numWhitespace=(numRead - lastNumRead) - 1;
return ' ';
}
restoreState();
return '<';
default :
return ch;
}
}
}
