{
  int eaten=2;
  int ch=next();
  int base=10;
  boolean invalid=false;
  sb.setLength(0);
  if (isDigit(ch)) {
    sb.append((char)ch);
    for (int i=0; i < 10; i++) {
      ch=next();
      if (isDigit(ch)) {
        sb.append((char)ch);
      }
 else {
        break;
      }
    }
  }
 else   if (ch == 'x') {
    eaten++;
    base=16;
    sb.setLength(0);
    for (int i=0; i < 10; i++) {
      ch=next();
      if (isHex(ch)) {
        sb.append((char)ch);
      }
 else {
        break;
      }
    }
  }
 else {
    return MISMATCH;
  }
  try {
    if (ch == ';' || ch == -1) {
      numWhitespace=sb.length() + eaten;
      return Integer.parseInt(sb.toString(),base);
    }
    if (isSpace(ch)) {
      push(ch);
      numWhitespace=sb.length() + eaten;
      return Integer.parseInt(sb.toString(),base);
    }
  }
 catch (  NumberFormatException e) {
    return MISMATCH;
  }
  return MISMATCH;
}
