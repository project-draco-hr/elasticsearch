{
  Settings settings=settingsBuilder().put("discovery.zen.minimum_master_nodes",1).put("discovery.zen.ping_timeout","200ms").put("discovery.initial_state_timeout","500ms").put("plugin.types",TestPlugin.class.getName()).build();
  InternalNode node1=(InternalNode)startNode("node1",settings);
  ClusterService clusterService1=node1.injector().getInstance(ClusterService.class);
  MasterAwareService testService1=node1.injector().getInstance(MasterAwareService.class);
  assertThat(clusterService1.state().nodes().masterNode(),notNullValue());
  assertThat(clusterService1.state().nodes().localNodeMaster(),is(true));
  assertThat(testService1.master(),is(true));
  InternalNode node2=(InternalNode)startNode("node2",settings);
  ClusterService clusterService2=node2.injector().getInstance(ClusterService.class);
  MasterAwareService testService2=node2.injector().getInstance(MasterAwareService.class);
  ClusterHealthResponse clusterHealth=node2.client().admin().cluster().prepareHealth().setWaitForNodes("2").execute().actionGet();
  assertThat(clusterHealth.timedOut(),equalTo(false));
  assertThat(clusterService2.state().nodes().localNodeMaster(),is(false));
  assertThat(testService2.master(),is(false));
  node1.close();
  clusterHealth=node2.client().admin().cluster().prepareHealth().setWaitForNodes("1").execute().actionGet();
  assertThat(clusterHealth.timedOut(),equalTo(false));
  assertThat(clusterService2.state().nodes().localNodeMaster(),is(true));
  assertThat(testService2.master(),is(true));
  Settings newSettings=settingsBuilder().put("discovery.zen.minimum_master_nodes",2).build();
  node2.client().admin().cluster().prepareUpdateSettings().setTransientSettings(newSettings).execute().actionGet();
  Thread.sleep(200);
  assertThat(clusterService2.state().nodes().masterNode(),is(nullValue()));
  assertThat(testService2.master(),is(false));
  node1=(InternalNode)startNode("node1",settings);
  clusterService1=node1.injector().getInstance(ClusterService.class);
  testService1=node1.injector().getInstance(MasterAwareService.class);
  clusterHealth=node2.client().admin().cluster().prepareHealth().setWaitForNodes("2").execute().actionGet();
  assertThat(clusterHealth.timedOut(),equalTo(false));
  assertThat(clusterService1.state().nodes().masterNode(),is(notNullValue()));
  if ("node1".equals(clusterService1.state().nodes().masterNode().name())) {
    assertThat(testService1.master(),is(true));
    assertThat(testService2.master(),is(false));
  }
 else {
    assertThat(testService1.master(),is(false));
    assertThat(testService2.master(),is(true));
  }
}
