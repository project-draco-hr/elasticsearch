{
  buffer=new NamedWriteableAwareStreamInput(buffer,transport.namedWriteableRegistry);
  final TransportResponse response=handler.newInstance();
  response.remoteAddress(new InetSocketTransportAddress((InetSocketAddress)channel.getRemoteAddress()));
  response.remoteAddress();
  try {
    response.readFrom(buffer);
  }
 catch (  Throwable e) {
    handleException(handler,new TransportSerializationException("Failed to deserialize response of type [" + response.getClass().getName() + "]",e));
    return;
  }
  try {
    if (ThreadPool.Names.SAME.equals(handler.executor())) {
      handler.handleResponse(response);
    }
 else {
      threadPool.executor(handler.executor()).execute(new ResponseHandler(handler,response));
    }
  }
 catch (  Throwable e) {
    handleException(handler,new ResponseHandlerFailureTransportException(e));
  }
}
