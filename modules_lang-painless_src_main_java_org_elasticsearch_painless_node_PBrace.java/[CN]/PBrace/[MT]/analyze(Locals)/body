{
  prefix.analyze(locals);
  prefix.expected=prefix.actual;
  prefix=prefix.cast(locals);
  Sort sort=prefix.actual.sort;
  if (sort == Sort.ARRAY) {
    sub=new PSubBrace(location,prefix.actual,index);
  }
 else   if (sort == Sort.DEF) {
    sub=new PSubDefArray(location,index);
  }
 else   if (Map.class.isAssignableFrom(prefix.actual.clazz)) {
    sub=new PSubMapShortcut(location,prefix.actual.struct,index);
  }
 else   if (List.class.isAssignableFrom(prefix.actual.clazz)) {
    sub=new PSubListShortcut(location,prefix.actual.struct,index);
  }
 else {
    throw createError(new IllegalArgumentException("Illegal array access on type [" + prefix.actual.name + "]."));
  }
  sub.write=write;
  sub.read=read;
  sub.expected=expected;
  sub.explicit=explicit;
  sub.analyze(locals);
  actual=sub.actual;
}
