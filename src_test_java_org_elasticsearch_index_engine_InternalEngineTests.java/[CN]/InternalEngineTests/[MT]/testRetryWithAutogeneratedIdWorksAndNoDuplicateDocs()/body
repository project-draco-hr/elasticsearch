{
  ParsedDocument doc=testParsedDocument("1","1","test",null,-1,-1,testDocument(),B_1,false);
  boolean canHaveDuplicates=false;
  boolean autoGeneratedId=true;
  Engine.Create index=new Engine.Create(null,newUid("1"),doc,Versions.MATCH_ANY,VersionType.INTERNAL,PRIMARY,System.nanoTime(),canHaveDuplicates,autoGeneratedId);
  engine.create(index);
  assertThat(index.version(),equalTo(1l));
  index=new Engine.Create(null,newUid("1"),doc,index.version(),index.versionType().versionTypeForReplicationAndRecovery(),REPLICA,System.nanoTime(),canHaveDuplicates,autoGeneratedId);
  replicaEngine.create(index);
  assertThat(index.version(),equalTo(1l));
  canHaveDuplicates=true;
  index=new Engine.Create(null,newUid("1"),doc,Versions.MATCH_ANY,VersionType.INTERNAL,PRIMARY,System.nanoTime(),canHaveDuplicates,autoGeneratedId);
  engine.create(index);
  assertThat(index.version(),equalTo(1l));
  engine.refresh("test");
  Engine.Searcher searcher=engine.acquireSearcher("test");
  TopDocs topDocs=searcher.searcher().search(new MatchAllDocsQuery(),10);
  assertThat(topDocs.totalHits,equalTo(1));
  index=new Engine.Create(null,newUid("1"),doc,index.version(),index.versionType().versionTypeForReplicationAndRecovery(),REPLICA,System.nanoTime(),canHaveDuplicates,autoGeneratedId);
  try {
    replicaEngine.create(index);
    fail();
  }
 catch (  VersionConflictEngineException e) {
  }
  replicaEngine.refresh("test");
  Engine.Searcher replicaSearcher=replicaEngine.acquireSearcher("test");
  topDocs=replicaSearcher.searcher().search(new MatchAllDocsQuery(),10);
  assertThat(topDocs.totalHits,equalTo(1));
  searcher.close();
  replicaSearcher.close();
}
