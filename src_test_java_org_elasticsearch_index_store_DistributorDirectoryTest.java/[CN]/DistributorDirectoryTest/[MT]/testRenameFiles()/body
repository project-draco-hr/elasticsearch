{
  final int iters=1 + random().nextInt(10);
  for (int i=0; i < iters; i++) {
    Directory[] dirs=new Directory[1 + random().nextInt(5)];
    for (int j=0; j < dirs.length; j++) {
      MockDirectoryWrapper directory=newMockDirectory();
      directory.setEnableVirusScanner(false);
      directory.setCheckIndexOnClose(false);
      dirs[j]=directory;
    }
    DistributorDirectory dd=new DistributorDirectory(dirs);
    String file=RandomPicks.randomFrom(random(),Arrays.asList(Store.CHECKSUMS_PREFIX,IndexFileNames.OLD_SEGMENTS_GEN,IndexFileNames.SEGMENTS,IndexFileNames.PENDING_SEGMENTS));
    String tmpFileName=RandomPicks.randomFrom(random(),Arrays.asList("recovery.","foobar.","test.")) + Math.max(0,Math.abs(random().nextLong())) + "."+ file;
    try (IndexOutput out=dd.createOutput(tmpFileName,IOContext.DEFAULT)){
      out.writeInt(1);
    }
     Directory theDir=null;
    for (    Directory d : dirs) {
      try {
        if (d.fileLength(tmpFileName) > 0) {
          theDir=d;
          break;
        }
      }
 catch (      IOException ex) {
      }
    }
    assertNotNull("file must be in at least one dir",theDir);
    dd.renameFile(tmpFileName,file);
    try {
      dd.fileLength(tmpFileName);
      fail("file [" + tmpFileName + "] was renamed but still exists");
    }
 catch (    FileNotFoundException|NoSuchFileException ex) {
    }
    try {
      theDir.fileLength(tmpFileName);
      fail("file [" + tmpFileName + "] was renamed but still exists");
    }
 catch (    FileNotFoundException|NoSuchFileException ex) {
    }
    assertEquals(theDir.fileLength(file),4);
    try (IndexOutput out=dd.createOutput("foo.bar",IOContext.DEFAULT)){
      out.writeInt(1);
    }
     assertNotNull(dd);
    if (dd.getDirectory("foo.bar") != dd.getDirectory(file)) {
      try {
        dd.renameFile("foo.bar",file);
        fail("target file already exists in a different directory");
      }
 catch (      IOException ex) {
      }
    }
    assertTrue(DistributorDirectory.assertConsistency(logger,dd));
    IOUtils.close(dd);
  }
}
