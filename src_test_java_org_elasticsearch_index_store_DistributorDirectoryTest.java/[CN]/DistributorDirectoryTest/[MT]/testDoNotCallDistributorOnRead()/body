{
  Directory dir=newDirectory();
  dir.createOutput("one.txt",IOContext.DEFAULT).close();
  final Directory[] dirs=new Directory[]{dir};
  Distributor distrib=new Distributor(){
    @Override public Directory primary(){
      return dirs[0];
    }
    @Override public Directory[] all(){
      return dirs;
    }
    @Override public synchronized Directory any(){
      throw new IllegalStateException("any should not be called");
    }
  }
;
  DistributorDirectory dd=new DistributorDirectory(distrib);
  assertEquals(0,dd.fileLength("one.txt"));
  dd.openInput("one.txt",IOContext.DEFAULT).close();
  try {
    dd.createOutput("three.txt",IOContext.DEFAULT).close();
    fail("didn't hit expected exception");
  }
 catch (  IllegalStateException ise) {
  }
  dd.close();
}
