{
  final Set<String> syncedFiles=new HashSet<>();
  final Directory[] directories=new Directory[RandomInts.randomIntBetween(random(),1,5)];
  for (int i=0; i < directories.length; ++i) {
    final Directory dir=newDirectory();
    directories[i]=new FilterDirectory(dir){
      @Override public void sync(      Collection<String> names) throws IOException {
        super.sync(names);
        syncedFiles.addAll(names);
      }
    }
;
  }
  final Directory directory=new DistributorDirectory(directories);
  for (  String file : Arrays.asList("a.bin","b.bin")) {
    try (IndexOutput out=directory.createOutput(file,IOContext.DEFAULT)){
      out.writeInt(random().nextInt());
    }
   }
  try {
    directory.sync(Arrays.asList("a.bin","c.bin"));
  }
 catch (  FileNotFoundException e) {
  }
  assertEquals(ImmutableSet.of(),syncedFiles);
  directory.sync(Arrays.asList("a.bin","b.bin"));
  assertEquals(ImmutableSet.of("a.bin","b.bin"),syncedFiles);
  directory.close();
}
