{
  Directory directory=newDirectory();
  RandomIndexWriter indexWriter=new RandomIndexWriter(random(),directory);
  for (int i=1; i <= 10000; i++) {
    Document document=new Document();
    String fieldName=i % 2 == 0 ? "field1" : "field2";
    document.add(new StringField(fieldName,format(i),Field.Store.NO));
    indexWriter.addDocument(document);
  }
  IndexReader indexReader=DirectoryReader.open(indexWriter.w,false);
  TermsEnum[] compoundTermsEnums=new TermsEnum[]{new ParentChildIntersectTermsEnum(SlowCompositeReaderWrapper.wrap(indexReader),"field1","field2")};
  for (  TermsEnum termsEnum : compoundTermsEnums) {
    int expected=0;
    for (BytesRef term=termsEnum.next(); term != null; term=termsEnum.next()) {
      ++expected;
      assertThat(term.utf8ToString(),equalTo(format(expected)));
      DocsEnum docsEnum=termsEnum.docs(null,null);
      assertThat(docsEnum,notNullValue());
      int docId=docsEnum.nextDoc();
      assertThat(docId,not(equalTo(-1)));
      assertThat(docId,not(equalTo(DocsEnum.NO_MORE_DOCS)));
      assertThat(docsEnum.nextDoc(),equalTo(DocsEnum.NO_MORE_DOCS));
    }
  }
  indexWriter.close();
  indexReader.close();
  directory.close();
}
