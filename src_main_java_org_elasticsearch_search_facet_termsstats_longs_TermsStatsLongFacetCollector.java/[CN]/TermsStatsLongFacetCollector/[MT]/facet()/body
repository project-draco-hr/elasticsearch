{
  if (aggregator.entries.isEmpty()) {
    return new InternalTermsStatsLongFacet(facetName,comparatorType,size,ImmutableList.<InternalTermsStatsLongFacet.LongEntry>of(),aggregator.missing);
  }
  if (size == 0) {
    return new InternalTermsStatsLongFacet(facetName,comparatorType,0,aggregator.entries.valueCollection(),aggregator.missing);
  }
  Object[] values=aggregator.entries.internalValues();
  Arrays.sort(values,(Comparator)comparatorType.comparator());
  int limit=size;
  List<InternalTermsStatsLongFacet.LongEntry> ordered=Lists.newArrayList();
  for (int i=0; i < limit; i++) {
    InternalTermsStatsLongFacet.LongEntry value=(InternalTermsStatsLongFacet.LongEntry)values[i];
    if (value == null) {
      break;
    }
    ordered.add(value);
  }
  CacheRecycler.pushLongObjectMap(aggregator.entries);
  return new InternalTermsStatsLongFacet(facetName,comparatorType,size,ordered,aggregator.missing);
}
