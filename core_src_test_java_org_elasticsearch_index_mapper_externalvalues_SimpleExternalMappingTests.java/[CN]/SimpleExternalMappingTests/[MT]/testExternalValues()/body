{
  Version version=VersionUtils.randomVersionBetween(random(),Version.V_1_0_0,Version.CURRENT);
  Settings settings=Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED,version).build();
  IndexService indexService=createIndex("test",settings);
  MapperRegistry mapperRegistry=new MapperRegistry(Collections.singletonMap(ExternalMapperPlugin.EXTERNAL,new ExternalMapper.TypeParser(ExternalMapperPlugin.EXTERNAL,"foo")),Collections.singletonMap(ExternalMetadataMapper.CONTENT_TYPE,new ExternalMetadataMapper.TypeParser()));
  DocumentMapperParser parser=new DocumentMapperParser(indexService.getIndexSettings(),indexService.mapperService(),indexService.analysisService(),indexService.similarityService(),mapperRegistry);
  DocumentMapper documentMapper=parser.parse("type",new CompressedXContent(XContentFactory.jsonBuilder().startObject().startObject("type").startObject(ExternalMetadataMapper.CONTENT_TYPE).endObject().startObject("properties").startObject("field").field("type","external").endObject().endObject().endObject().endObject().string()));
  ParsedDocument doc=documentMapper.parse("test","type","1",XContentFactory.jsonBuilder().startObject().field("field","1234").endObject().bytes());
  assertThat(doc.rootDoc().getField("field.bool"),notNullValue());
  assertThat(doc.rootDoc().getField("field.bool").stringValue(),is("T"));
  assertThat(doc.rootDoc().getField("field.point"),notNullValue());
  if (version.before(Version.V_2_2_0)) {
    assertThat(doc.rootDoc().getField("field.point").stringValue(),is("42.0,51.0"));
  }
 else {
    assertThat(Long.parseLong(doc.rootDoc().getField("field.point").stringValue()),is(GeoUtils.mortonHash(51.0,42.0)));
  }
  assertThat(doc.rootDoc().getField("field.shape"),notNullValue());
  assertThat(doc.rootDoc().getField("field.field"),notNullValue());
  assertThat(doc.rootDoc().getField("field.field").stringValue(),is("foo"));
  assertThat(doc.rootDoc().getField(ExternalMetadataMapper.FIELD_NAME).stringValue(),is(ExternalMetadataMapper.FIELD_VALUE));
}
