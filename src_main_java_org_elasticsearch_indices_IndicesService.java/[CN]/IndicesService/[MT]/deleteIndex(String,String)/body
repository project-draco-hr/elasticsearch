{
  removeIndex(index,reason,true,new IndexCloseListener(){
    @Override public void onAllShardsClosed(    Index index,    @IndexSettings Settings indexSettings,    List<Throwable> failures){
      try {
        nodeEnv.deleteIndexDirectorySafe(index,indexSettings);
        logger.debug("deleted index [{}] from filesystem - failures {}",index,failures);
      }
 catch (      Exception e) {
        for (        Throwable t : failures) {
          e.addSuppressed(t);
        }
        logger.debug("failed to deleted index [{}] from filesystem",e,index);
      }
    }
    @Override public void onShardClosed(    ShardId shardId,    @IndexSettings Settings indexSettings){
      try {
        IOUtils.rm(nodeEnv.shardPaths(shardId,indexSettings));
        logger.debug("deleted shard [{}] from filesystem",shardId);
      }
 catch (      IOException e) {
        logger.warn("Can't delete shard {} ",e,shardId);
      }
    }
    @Override public void onShardCloseFailed(    ShardId shardId,    @IndexSettings Settings indexSettings,    Throwable t){
    }
  }
);
}
