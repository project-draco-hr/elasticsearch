{
  registerMapper(ByteFieldMapper.CONTENT_TYPE,new ByteFieldMapper.TypeParser());
  registerMapper(ShortFieldMapper.CONTENT_TYPE,new ShortFieldMapper.TypeParser());
  registerMapper(IntegerFieldMapper.CONTENT_TYPE,new IntegerFieldMapper.TypeParser());
  registerMapper(LongFieldMapper.CONTENT_TYPE,new LongFieldMapper.TypeParser());
  registerMapper(FloatFieldMapper.CONTENT_TYPE,new FloatFieldMapper.TypeParser());
  registerMapper(DoubleFieldMapper.CONTENT_TYPE,new DoubleFieldMapper.TypeParser());
  registerMapper(BooleanFieldMapper.CONTENT_TYPE,new BooleanFieldMapper.TypeParser());
  registerMapper(BinaryFieldMapper.CONTENT_TYPE,new BinaryFieldMapper.TypeParser());
  registerMapper(DateFieldMapper.CONTENT_TYPE,new DateFieldMapper.TypeParser());
  registerMapper(IpFieldMapper.CONTENT_TYPE,new IpFieldMapper.TypeParser());
  registerMapper(StringFieldMapper.CONTENT_TYPE,new StringFieldMapper.TypeParser());
  registerMapper(TokenCountFieldMapper.CONTENT_TYPE,new TokenCountFieldMapper.TypeParser());
  registerMapper(ObjectMapper.CONTENT_TYPE,new ObjectMapper.TypeParser());
  registerMapper(ObjectMapper.NESTED_CONTENT_TYPE,new ObjectMapper.TypeParser());
  registerMapper(CompletionFieldMapper.CONTENT_TYPE,new CompletionFieldMapper.TypeParser());
  registerMapper(GeoPointFieldMapper.CONTENT_TYPE,new GeoPointFieldMapper.TypeParser());
  if (ShapesAvailability.JTS_AVAILABLE && ShapesAvailability.SPATIAL4J_AVAILABLE) {
    registerMapper(GeoShapeFieldMapper.CONTENT_TYPE,new GeoShapeFieldMapper.TypeParser());
  }
}
