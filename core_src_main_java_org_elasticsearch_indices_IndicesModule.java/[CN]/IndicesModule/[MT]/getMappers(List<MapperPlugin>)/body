{
  Map<String,Mapper.TypeParser> mappers=new LinkedHashMap<>();
  for (  NumberFieldMapper.NumberType type : NumberFieldMapper.NumberType.values()) {
    mappers.put(type.typeName(),new NumberFieldMapper.TypeParser(type));
  }
  mappers.put(BooleanFieldMapper.CONTENT_TYPE,new BooleanFieldMapper.TypeParser());
  mappers.put(BinaryFieldMapper.CONTENT_TYPE,new BinaryFieldMapper.TypeParser());
  mappers.put(DateFieldMapper.CONTENT_TYPE,new DateFieldMapper.TypeParser());
  mappers.put(IpFieldMapper.CONTENT_TYPE,new IpFieldMapper.TypeParser());
  mappers.put(StringFieldMapper.CONTENT_TYPE,new StringFieldMapper.TypeParser());
  mappers.put(TextFieldMapper.CONTENT_TYPE,new TextFieldMapper.TypeParser());
  mappers.put(KeywordFieldMapper.CONTENT_TYPE,new KeywordFieldMapper.TypeParser());
  mappers.put(TokenCountFieldMapper.CONTENT_TYPE,new TokenCountFieldMapper.TypeParser());
  mappers.put(ObjectMapper.CONTENT_TYPE,new ObjectMapper.TypeParser());
  mappers.put(ObjectMapper.NESTED_CONTENT_TYPE,new ObjectMapper.TypeParser());
  mappers.put(CompletionFieldMapper.CONTENT_TYPE,new CompletionFieldMapper.TypeParser());
  mappers.put(GeoPointFieldMapper.CONTENT_TYPE,new GeoPointFieldMapper.TypeParser());
  if (ShapesAvailability.JTS_AVAILABLE && ShapesAvailability.SPATIAL4J_AVAILABLE) {
    mappers.put(GeoShapeFieldMapper.CONTENT_TYPE,new GeoShapeFieldMapper.TypeParser());
  }
  for (  MapperPlugin mapperPlugin : mapperPlugins) {
    for (    Map.Entry<String,Mapper.TypeParser> entry : mapperPlugin.getMappers().entrySet()) {
      if (mappers.put(entry.getKey(),entry.getValue()) != null) {
        throw new IllegalArgumentException("Mapper [" + entry.getKey() + "] is already registered");
      }
    }
  }
  return Collections.unmodifiableMap(mappers);
}
