{
  Version version=VersionUtils.randomVersionBetween(random(),Version.V_2_0_0,Version.V_5_0_0_alpha5);
  XContentBuilder mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("point").field("type","geo_point");
  if (version.before(Version.V_2_2_0)) {
    mapping.field("coerce",true);
  }
  mapping.field("ignore_malformed",true).endObject().endObject().endObject().endObject();
  Settings settings=Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,version).build();
  DocumentMapper defaultMapper=createIndex("test",settings).mapperService().documentMapperParser().parse("type",new CompressedXContent(mapping.string()));
  ParsedDocument doc=defaultMapper.parse("test","type","1",XContentFactory.jsonBuilder().startObject().startObject("point").field("lat",91).field("lon",181).endObject().endObject().bytes());
  if (version.before(Version.V_2_2_0)) {
    assertThat(doc.rootDoc().get("point"),equalTo("89.0,1.0"));
  }
 else {
    assertThat(Long.parseLong(doc.rootDoc().get("point")),equalTo(GeoPointField.encodeLatLon(89.0,1.0)));
  }
  doc=defaultMapper.parse("test","type","1",XContentFactory.jsonBuilder().startObject().startObject("point").field("lat",-91).field("lon",-181).endObject().endObject().bytes());
  if (version.before(Version.V_2_2_0)) {
    assertThat(doc.rootDoc().get("point"),equalTo("-89.0,-1.0"));
  }
 else {
    assertThat(Long.parseLong(doc.rootDoc().get("point")),equalTo(GeoPointField.encodeLatLon(-89.0,-1.0)));
  }
  doc=defaultMapper.parse("test","type","1",XContentFactory.jsonBuilder().startObject().startObject("point").field("lat",181).field("lon",361).endObject().endObject().bytes());
  if (version.before(Version.V_2_2_0)) {
    assertThat(doc.rootDoc().get("point"),equalTo("-1.0,-179.0"));
  }
 else {
    assertThat(Long.parseLong(doc.rootDoc().get("point")),equalTo(GeoPointField.encodeLatLon(-1.0,-179.0)));
  }
}
