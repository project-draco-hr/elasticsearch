{
  long value;
  if (jsonContext.jp().getCurrentToken() == JsonToken.VALUE_NULL) {
    if (nullValue == null) {
      return null;
    }
    value=nullValue;
    if (includeInAll == null || includeInAll) {
      jsonContext.allEntries().addText(names.fullName(),nullValueAsString,boost);
    }
  }
 else {
    if (jsonContext.jp().getCurrentToken() == JsonToken.VALUE_STRING) {
      value=Long.parseLong(jsonContext.jp().getText());
    }
 else {
      value=jsonContext.jp().getLongValue();
    }
    if (includeInAll == null || includeInAll) {
      jsonContext.allEntries().addText(names.fullName(),jsonContext.jp().getText(),boost);
    }
  }
  Field field=null;
  if (stored()) {
    field=new Field(names.indexName(),Numbers.longToBytes(value),store);
    if (indexed()) {
      field.setTokenStream(popCachedStream(precisionStep).setLongValue(value));
    }
  }
 else   if (indexed()) {
    field=new Field(names.indexName(),popCachedStream(precisionStep).setLongValue(value));
  }
  return field;
}
