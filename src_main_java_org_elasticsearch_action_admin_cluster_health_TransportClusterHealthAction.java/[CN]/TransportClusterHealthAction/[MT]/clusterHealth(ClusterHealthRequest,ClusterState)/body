{
  if (logger.isTraceEnabled()) {
    logger.trace("Calculating health based on state version [{}]",clusterState.version());
  }
  RoutingTableValidation validation=clusterState.routingTable().validate(clusterState.metaData());
  ClusterHealthResponse response=new ClusterHealthResponse(clusterName.value(),validation.failures());
  response.numberOfNodes=clusterState.nodes().size();
  response.numberOfDataNodes=clusterState.nodes().dataNodes().size();
  String[] concreteIndices;
  try {
    concreteIndices=clusterState.metaData().concreteIndicesIgnoreMissing(request.indices());
  }
 catch (  IndexMissingException e) {
    return response;
  }
  for (  String index : concreteIndices) {
    IndexRoutingTable indexRoutingTable=clusterState.routingTable().index(index);
    IndexMetaData indexMetaData=clusterState.metaData().index(index);
    if (indexRoutingTable == null) {
      continue;
    }
    ClusterIndexHealth indexHealth=new ClusterIndexHealth(indexMetaData,indexRoutingTable);
    response.indices.put(indexHealth.getIndex(),indexHealth);
  }
  for (  ClusterIndexHealth indexHealth : response) {
    response.activePrimaryShards+=indexHealth.activePrimaryShards;
    response.activeShards+=indexHealth.activeShards;
    response.relocatingShards+=indexHealth.relocatingShards;
    response.initializingShards+=indexHealth.initializingShards;
    response.unassignedShards+=indexHealth.unassignedShards;
  }
  response.status=ClusterHealthStatus.GREEN;
  if (!response.getValidationFailures().isEmpty()) {
    response.status=ClusterHealthStatus.RED;
  }
 else   if (clusterState.blocks().hasGlobalBlock(RestStatus.SERVICE_UNAVAILABLE)) {
    response.status=ClusterHealthStatus.RED;
  }
 else {
    for (    ClusterIndexHealth indexHealth : response) {
      if (indexHealth.getStatus() == ClusterHealthStatus.RED) {
        response.status=ClusterHealthStatus.RED;
        break;
      }
      if (indexHealth.getStatus() == ClusterHealthStatus.YELLOW) {
        response.status=ClusterHealthStatus.YELLOW;
      }
    }
  }
  return response;
}
