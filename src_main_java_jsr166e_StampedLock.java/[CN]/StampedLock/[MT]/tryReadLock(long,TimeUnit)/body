{
  long s, m, next, deadline;
  long nanos=unit.toNanos(time);
  if (!Thread.interrupted()) {
    if ((m=(s=state) & ABITS) != WBIT) {
      if (m < RFULL) {
        if (U.compareAndSwapLong(this,STATE,s,next=s + RUNIT))         return next;
      }
 else       if ((next=tryIncReaderOverflow(s)) != 0L)       return next;
    }
    if (nanos <= 0L)     return 0L;
    if ((deadline=System.nanoTime() + nanos) == 0L)     deadline=1L;
    if ((next=acquireRead(true,deadline)) != INTERRUPTED)     return next;
  }
  throw new InterruptedException();
}
