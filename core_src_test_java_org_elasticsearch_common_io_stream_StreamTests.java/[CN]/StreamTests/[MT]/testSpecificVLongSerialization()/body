{
  List<Tuple<Long,byte[]>> values=Arrays.asList(new Tuple<>(0L,new byte[]{0}),new Tuple<>(-1L,new byte[]{1}),new Tuple<>(1L,new byte[]{2}),new Tuple<>(-2L,new byte[]{3}),new Tuple<>(2L,new byte[]{4}),new Tuple<>(Long.MIN_VALUE,new byte[]{-1,-1,-1,-1,-1,-1,-1,-1,-1,1}),new Tuple<>(Long.MAX_VALUE,new byte[]{-2,-1,-1,-1,-1,-1,-1,-1,-1,1}));
  for (  Tuple<Long,byte[]> value : values) {
    BytesStreamOutput out=new BytesStreamOutput();
    out.writeZLong(value.v1());
    assertArrayEquals(Long.toString(value.v1()),value.v2(),BytesReference.toBytes(out.bytes()));
    BytesReference bytes=new BytesArray(value.v2());
    assertEquals(Arrays.toString(value.v2()),(long)value.v1(),bytes.streamInput().readZLong());
  }
}
