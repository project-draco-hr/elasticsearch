{
  assumeTrue("requires a 64-bit JRE ... ?!",Constants.JRE_IS_64BIT);
  BytesStreamOutput out=new BytesStreamOutput();
  out.writeBoolean(false);
  out.writeByte((byte)1);
  out.writeShort((short)-1);
  out.writeInt(-1);
  out.writeVInt(2);
  out.writeLong(-3);
  out.writeVLong(4);
  out.writeFloat(1.1f);
  out.writeDouble(2.2);
  int[] intArray={1,2,3};
  out.writeGenericValue(intArray);
  int[] vIntArray={4,5,6};
  out.writeVIntArray(vIntArray);
  long[] longArray={1,2,3};
  out.writeGenericValue(longArray);
  long[] vLongArray={4,5,6};
  out.writeVLongArray(vLongArray);
  float[] floatArray={1.1f,2.2f,3.3f};
  out.writeGenericValue(floatArray);
  double[] doubleArray={1.1,2.2,3.3};
  out.writeGenericValue(doubleArray);
  out.writeString("hello");
  out.writeString("goodbye");
  out.writeGenericValue(BytesRefs.toBytesRef("bytesref"));
  out.writeStringArray(new String[]{"a","b","cat"});
  out.writeBytesReference(new BytesArray("test"));
  out.writeOptionalBytesReference(new BytesArray("test"));
  out.writeOptionalDouble(null);
  out.writeOptionalDouble(1.2);
  final byte[] bytes=out.bytes().toBytes();
  StreamInput in=StreamInput.wrap(out.bytes().toBytes());
  assertEquals(in.available(),bytes.length);
  assertThat(in.readBoolean(),equalTo(false));
  assertThat(in.readByte(),equalTo((byte)1));
  assertThat(in.readShort(),equalTo((short)-1));
  assertThat(in.readInt(),equalTo(-1));
  assertThat(in.readVInt(),equalTo(2));
  assertThat(in.readLong(),equalTo((long)-3));
  assertThat(in.readVLong(),equalTo((long)4));
  assertThat((double)in.readFloat(),closeTo(1.1,0.0001));
  assertThat(in.readDouble(),closeTo(2.2,0.0001));
  assertThat(in.readGenericValue(),equalTo((Object)intArray));
  assertThat(in.readVIntArray(),equalTo(vIntArray));
  assertThat(in.readGenericValue(),equalTo((Object)longArray));
  assertThat(in.readVLongArray(),equalTo(vLongArray));
  assertThat(in.readGenericValue(),equalTo((Object)floatArray));
  assertThat(in.readGenericValue(),equalTo((Object)doubleArray));
  assertThat(in.readString(),equalTo("hello"));
  assertThat(in.readString(),equalTo("goodbye"));
  assertThat(in.readGenericValue(),equalTo((Object)BytesRefs.toBytesRef("bytesref")));
  assertThat(in.readStringArray(),equalTo(new String[]{"a","b","cat"}));
  assertThat(in.readBytesReference(),equalTo(new BytesArray("test")));
  assertThat(in.readOptionalBytesReference(),equalTo(new BytesArray("test")));
  assertNull(in.readOptionalDouble());
  assertThat(in.readOptionalDouble(),closeTo(1.2,0.0001));
  assertEquals(0,in.available());
  in.close();
  out.close();
}
