{
  SearchResponse response=client().prepareSearch("idx_with_gaps").addAggregation(histogram("histo").field(FIELD_1_NAME).interval(1).subAggregation(histogram("inner_histo").field(FIELD_1_NAME).interval(1).extendedBounds(1L,4L).minDocCount(0).subAggregation(derivative("derivative","_count").gapPolicy(GapPolicy.INSERT_ZEROS)))).execute().actionGet();
  assertSearchResponse(response);
  Histogram histo=response.getAggregations().get("histo");
  assertThat(histo,notNullValue());
  assertThat(histo.getName(),equalTo("histo"));
  List<? extends Bucket> buckets=histo.getBuckets();
  assertThat(buckets.size(),equalTo(3));
  Histogram.Bucket bucket=buckets.get(0);
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKeyAsString(),equalTo("1.0"));
  Histogram innerHisto=bucket.getAggregations().get("inner_histo");
  assertThat(innerHisto,notNullValue());
  List<? extends Histogram.Bucket> innerBuckets=innerHisto.getBuckets();
  assertThat(innerBuckets,notNullValue());
  assertThat(innerBuckets.size(),equalTo(4));
  for (int i=0; i < innerBuckets.size(); i++) {
    Histogram.Bucket innerBucket=innerBuckets.get(i);
    if (i == 0) {
      assertThat(innerBucket.getAggregations().get("derivative"),nullValue());
    }
 else {
      assertThat(innerBucket.getAggregations().get("derivative"),notNullValue());
    }
  }
  bucket=buckets.get(1);
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKeyAsString(),equalTo("2.0"));
  innerHisto=bucket.getAggregations().get("inner_histo");
  assertThat(innerHisto,notNullValue());
  innerBuckets=innerHisto.getBuckets();
  assertThat(innerBuckets,notNullValue());
  assertThat(innerBuckets.size(),equalTo(4));
  for (int i=0; i < innerBuckets.size(); i++) {
    Histogram.Bucket innerBucket=innerBuckets.get(i);
    if (i == 0) {
      assertThat(innerBucket.getAggregations().get("derivative"),nullValue());
    }
 else {
      assertThat(innerBucket.getAggregations().get("derivative"),notNullValue());
    }
  }
  bucket=buckets.get(2);
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKeyAsString(),equalTo("3.0"));
  innerHisto=bucket.getAggregations().get("inner_histo");
  assertThat(innerHisto,notNullValue());
  innerBuckets=innerHisto.getBuckets();
  assertThat(innerBuckets,notNullValue());
  assertThat(innerBuckets.size(),equalTo(4));
  for (int i=0; i < innerBuckets.size(); i++) {
    Histogram.Bucket innerBucket=innerBuckets.get(i);
    if (i == 0) {
      assertThat(innerBucket.getAggregations().get("derivative"),nullValue());
    }
 else {
      assertThat(innerBucket.getAggregations().get("derivative"),notNullValue());
    }
  }
}
