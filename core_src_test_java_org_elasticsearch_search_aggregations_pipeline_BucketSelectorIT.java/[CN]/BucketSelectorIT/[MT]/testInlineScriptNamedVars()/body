{
  Script script=new Script("Double.isNaN(my_value1) ? false : (my_value1 + my_value2 > 100)",ScriptType.INLINE,CustomScriptPlugin.NAME,null);
  Map<String,String> bucketPathsMap=new HashMap<>();
  bucketPathsMap.put("my_value1","field2Sum");
  bucketPathsMap.put("my_value2","field3Sum");
  SearchResponse response=client().prepareSearch("idx").addAggregation(histogram("histo").field(FIELD_1_NAME).interval(interval).subAggregation(sum("field2Sum").field(FIELD_2_NAME)).subAggregation(sum("field3Sum").field(FIELD_3_NAME)).subAggregation(bucketSelector("bucketSelector",bucketPathsMap,script))).execute().actionGet();
  assertSearchResponse(response);
  Histogram histo=response.getAggregations().get("histo");
  assertThat(histo,notNullValue());
  assertThat(histo.getName(),equalTo("histo"));
  List<? extends Bucket> buckets=histo.getBuckets();
  for (int i=0; i < buckets.size(); ++i) {
    Histogram.Bucket bucket=buckets.get(i);
    Sum field2Sum=bucket.getAggregations().get("field2Sum");
    assertThat(field2Sum,notNullValue());
    double field2SumValue=field2Sum.getValue();
    Sum field3Sum=bucket.getAggregations().get("field3Sum");
    assertThat(field3Sum,notNullValue());
    double field3SumValue=field3Sum.getValue();
    assertThat(field2SumValue + field3SumValue,greaterThan(100.0));
  }
}
