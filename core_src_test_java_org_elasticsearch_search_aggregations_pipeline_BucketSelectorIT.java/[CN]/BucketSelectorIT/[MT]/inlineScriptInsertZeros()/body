{
  SearchResponse response=client().prepareSearch("idx").addAggregation(histogram("histo").field(FIELD_1_NAME).interval(interval).subAggregation(sum("field2Sum").field(FIELD_2_NAME)).subAggregation(sum("field3Sum").field(FIELD_3_NAME)).subAggregation(having("having").setBucketsPaths("field2Sum","field3Sum").gapPolicy(GapPolicy.INSERT_ZEROS).script(new Script("_value0 + _value1 > 100",ScriptType.INLINE,null,null)))).execute().actionGet();
  assertSearchResponse(response);
  InternalHistogram<Bucket> histo=response.getAggregations().get("histo");
  assertThat(histo,notNullValue());
  assertThat(histo.getName(),equalTo("histo"));
  List<? extends Bucket> buckets=histo.getBuckets();
  for (int i=0; i < buckets.size(); ++i) {
    Histogram.Bucket bucket=buckets.get(i);
    Sum field2Sum=bucket.getAggregations().get("field2Sum");
    assertThat(field2Sum,notNullValue());
    double field2SumValue=field2Sum.getValue();
    Sum field3Sum=bucket.getAggregations().get("field3Sum");
    assertThat(field3Sum,notNullValue());
    double field3SumValue=field3Sum.getValue();
    assertThat(field2SumValue + field3SumValue,greaterThan(100.0));
  }
}
