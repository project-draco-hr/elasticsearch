{
  createIndex("idx");
  List<IndexRequestBuilder> builders=new ArrayList<>();
  numDocs=randomIntBetween(10,100);
  for (int i=0; i < numDocs; i++) {
    builders.add(client().prepareIndex("idx","type","" + i).setSource(jsonBuilder().startObject().field("value",randomAsciiOfLengthBetween(5,15)).field("l_value",i).endObject()));
  }
  indexRandom(true,builders);
  prepareCreate("empty_bucket_idx").addMapping("type","value","type=integer").execute().actionGet();
  builders=new ArrayList<>();
  for (int i=0; i < 2; i++) {
    builders.add(client().prepareIndex("empty_bucket_idx","type","" + i).setSource(jsonBuilder().startObject().field("value",i * 2).endObject()));
  }
  assertAcked(client().admin().cluster().preparePutStoredScript().setScriptLang(GroovyScriptEngineService.NAME).setId("initScript_indexed").setSource(new BytesArray("{\"script\":\"vars.multiplier = 3\"}")));
  assertAcked(client().admin().cluster().preparePutStoredScript().setScriptLang(GroovyScriptEngineService.NAME).setId("mapScript_indexed").setSource(new BytesArray("{\"script\":\"_agg.add(vars.multiplier)\"}")));
  assertAcked(client().admin().cluster().preparePutStoredScript().setScriptLang(GroovyScriptEngineService.NAME).setId("combineScript_indexed").setSource(new BytesArray("{\"script\":\"newaggregation = []; sum = 0;for (a in _agg) { sum += a}; newaggregation.add(sum); return newaggregation\"}")));
  assertAcked(client().admin().cluster().preparePutStoredScript().setScriptLang(GroovyScriptEngineService.NAME).setId("reduceScript_indexed").setSource(new BytesArray("{\"script\":\"newaggregation = []; sum = 0;for (agg in _aggs) { for (a in agg) { sum += a} }; newaggregation.add(sum); return newaggregation\"}")));
  indexRandom(true,builders);
  ensureSearchable();
}
