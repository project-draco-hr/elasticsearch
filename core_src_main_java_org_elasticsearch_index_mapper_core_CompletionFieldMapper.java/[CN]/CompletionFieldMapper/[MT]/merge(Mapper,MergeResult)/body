{
  super.merge(mergeWith,mergeResult);
  CompletionFieldMapper fieldMergeWith=(CompletionFieldMapper)mergeWith;
  if (fieldType().analyzingSuggestLookupProvider.hasPayloads() != fieldMergeWith.fieldType().analyzingSuggestLookupProvider.hasPayloads()) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different payload values");
  }
  if (fieldType().analyzingSuggestLookupProvider.getPreservePositionsIncrements() != fieldMergeWith.fieldType().analyzingSuggestLookupProvider.getPreservePositionsIncrements()) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different 'preserve_position_increments' values");
  }
  if (fieldType().analyzingSuggestLookupProvider.getPreserveSep() != fieldMergeWith.fieldType().analyzingSuggestLookupProvider.getPreserveSep()) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different 'preserve_separators' values");
  }
  if (!ContextMapping.mappingsAreEqual(fieldType().getContextMapping(),fieldMergeWith.fieldType().getContextMapping())) {
    mergeResult.addConflict("mapper [" + fieldType.names().fullName() + "] has different 'context_mapping' values");
  }
  if (!mergeResult.simulate()) {
    this.maxInputLength=fieldMergeWith.maxInputLength;
  }
}
