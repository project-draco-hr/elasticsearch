{
  Version version=VersionUtils.randomVersionBetween(random(),Version.V_2_0_0,Version.CURRENT);
  Settings settings=Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED,version).build();
  String stage1Mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("point").field("type","geo_point").field("lat_lon",true).field("geohash",true).endObject().endObject().endObject().endObject().string();
  MapperService mapperService=createIndex("test",settings).mapperService();
  DocumentMapper stage1=mapperService.merge("type",new CompressedXContent(stage1Mapping),MapperService.MergeReason.MAPPING_UPDATE,false);
  String stage2Mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("point").field("type","geo_point").field("lat_lon",false).field("geohash",false).endObject().endObject().endObject().endObject().string();
  try {
    mapperService.merge("type",new CompressedXContent(stage2Mapping),MapperService.MergeReason.MAPPING_UPDATE,false);
    fail();
  }
 catch (  IllegalArgumentException e) {
    assertThat(e.getMessage(),containsString("mapper [point] has different [lat_lon]"));
    assertThat(e.getMessage(),containsString("mapper [point] has different [geohash]"));
    assertThat(e.getMessage(),containsString("mapper [point] has different [geohash_precision]"));
  }
  stage2Mapping=XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("point").field("type","geo_point").field("lat_lon",true).field("geohash",true).endObject().endObject().endObject().endObject().string();
  mapperService.merge("type",new CompressedXContent(stage2Mapping),MapperService.MergeReason.MAPPING_UPDATE,false);
}
