{
  AllocationService allocation=createAllocationService();
  logger.info("--> building initial cluster state");
  AllocationId allocationId=AllocationId.newRelocation(AllocationId.newInitializing());
  final IndexMetaData indexMetaData=IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(0).putInSyncAllocationIds(1,Collections.singleton(allocationId.getId())).build();
  final Index index=indexMetaData.getIndex();
  ClusterState.Builder stateBuilder=ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).metaData(MetaData.builder().put(indexMetaData,false));
  final ShardRouting initShard=TestShardRouting.newShardRouting(new ShardId(index,0),"node1",true,ShardRoutingState.INITIALIZING);
  final ShardRouting relocatingShard=TestShardRouting.newShardRouting(new ShardId(index,1),"node1","node2",true,ShardRoutingState.RELOCATING,allocationId);
  stateBuilder.routingTable(RoutingTable.builder().add(IndexRoutingTable.builder(index).addIndexShard(new IndexShardRoutingTable.Builder(initShard.shardId()).addShard(initShard).build()).addIndexShard(new IndexShardRoutingTable.Builder(relocatingShard.shardId()).addShard(relocatingShard).build())).build());
  ClusterState state=stateBuilder.build();
  logger.info("--> test starting of shard");
  ClusterState newState=allocation.applyStartedShards(state,Arrays.asList(initShard),false);
  assertThat("failed to start " + initShard + "\ncurrent routing table:"+ newState.routingTable().prettyPrint(),newState,not(equalTo(state)));
  assertTrue(initShard + "isn't started \ncurrent routing table:" + newState.routingTable().prettyPrint(),newState.routingTable().index("test").shard(initShard.id()).allShardsStarted());
  logger.info("--> testing starting of relocating shards");
  newState=allocation.applyStartedShards(state,Arrays.asList(relocatingShard.getTargetRelocatingShard()),false);
  assertThat("failed to start " + relocatingShard + "\ncurrent routing table:"+ newState.routingTable().prettyPrint(),newState,not(equalTo(state)));
  ShardRouting shardRouting=newState.routingTable().index("test").shard(relocatingShard.id()).getShards().get(0);
  assertThat(shardRouting.state(),equalTo(ShardRoutingState.STARTED));
  assertThat(shardRouting.currentNodeId(),equalTo("node2"));
  assertThat(shardRouting.relocatingNodeId(),nullValue());
}
