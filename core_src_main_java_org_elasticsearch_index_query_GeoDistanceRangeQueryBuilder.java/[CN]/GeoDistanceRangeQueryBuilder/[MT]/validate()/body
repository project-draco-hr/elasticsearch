{
  QueryValidationException errors=null;
  if (fieldName == null) {
    errors=QueryValidationException.addValidationError(NAME,"fieldName must not be null",errors);
  }
  if (point == null) {
    errors=QueryValidationException.addValidationError(NAME,"point must not be null",errors);
  }
  if (from == null && to == null) {
    errors=QueryValidationException.addValidationError(NAME,"Must define at least one parameter from [from, to]",errors);
  }
  if (from != null && !(from instanceof Number || from instanceof String)) {
    errors=QueryValidationException.addValidationError(NAME,"from must either be a number or a string. Found [" + from.getClass().getName() + "]",errors);
  }
  if (to != null && !(to instanceof Number || to instanceof String)) {
    errors=QueryValidationException.addValidationError(NAME,"to must either be a number or a string. Found [" + to.getClass().getName() + "]",errors);
  }
  if (optimizeBbox != null && !(optimizeBbox.equals("none") || optimizeBbox.equals("memory") || optimizeBbox.equals("indexed"))) {
    errors=QueryValidationException.addValidationError(NAME,"optimizeBbox must be one of [none, memory, indexed]",errors);
  }
  return errors;
}
