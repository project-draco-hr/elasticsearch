{
  double value;
  float boost=fieldType().boost();
  if (context.externalValueSet()) {
    Object externalValue=context.externalValue();
    if (externalValue == null) {
      if (fieldType().nullValue() == null) {
        return;
      }
      value=fieldType().nullValue();
    }
 else     if (externalValue instanceof String) {
      String sExternalValue=(String)externalValue;
      if (sExternalValue.length() == 0) {
        if (fieldType().nullValue() == null) {
          return;
        }
        value=fieldType().nullValue();
      }
 else {
        value=Double.parseDouble(sExternalValue);
      }
    }
 else {
      value=((Number)externalValue).doubleValue();
    }
    if (context.includeInAll(includeInAll,this)) {
      context.allEntries().addText(fieldType().name(),Double.toString(value),boost);
    }
  }
 else {
    XContentParser parser=context.parser();
    if (parser.currentToken() == XContentParser.Token.VALUE_NULL || (parser.currentToken() == XContentParser.Token.VALUE_STRING && parser.textLength() == 0)) {
      if (fieldType().nullValue() == null) {
        return;
      }
      value=fieldType().nullValue();
      if (fieldType().nullValueAsString() != null && (context.includeInAll(includeInAll,this))) {
        context.allEntries().addText(fieldType().name(),fieldType().nullValueAsString(),boost);
      }
    }
 else     if (parser.currentToken() == XContentParser.Token.START_OBJECT) {
      XContentParser.Token token;
      String currentFieldName=null;
      Double objValue=fieldType().nullValue();
      while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
        if (token == XContentParser.Token.FIELD_NAME) {
          currentFieldName=parser.currentName();
        }
 else {
          if ("value".equals(currentFieldName) || "_value".equals(currentFieldName)) {
            if (parser.currentToken() != XContentParser.Token.VALUE_NULL) {
              objValue=parser.doubleValue(coerce.value());
            }
          }
 else           if ("boost".equals(currentFieldName) || "_boost".equals(currentFieldName)) {
            boost=parser.floatValue();
          }
 else {
            throw new IllegalArgumentException("unknown property [" + currentFieldName + "]");
          }
        }
      }
      if (objValue == null) {
        return;
      }
      value=objValue;
    }
 else {
      value=parser.doubleValue(coerce.value());
      if (context.includeInAll(includeInAll,this)) {
        context.allEntries().addText(fieldType().name(),parser.text(),boost);
      }
    }
  }
  if (fieldType().indexOptions() != IndexOptions.NONE || fieldType().stored()) {
    CustomDoubleNumericField field=new CustomDoubleNumericField(value,fieldType());
    field.setBoost(boost);
    fields.add(field);
  }
  if (fieldType().hasDocValues()) {
    addDocValue(context,fields,doubleToSortableLong(value));
  }
}
