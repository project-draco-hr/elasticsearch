{
  int numberOfHits=0;
  for (  QueryFetchSearchResult shardResult : queryFetchResults.values()) {
    numberOfHits+=shardResult.queryResult().topDocs().scoreDocs.length;
  }
  ShardDoc[] docs=new ShardDoc[numberOfHits];
  int counter=0;
  for (  QueryFetchSearchResult shardResult : queryFetchResults.values()) {
    ScoreDoc[] scoreDocs=shardResult.queryResult().topDocs().scoreDocs;
    for (    ScoreDoc scoreDoc : scoreDocs) {
      docs[counter++]=new ShardScoreDoc(shardResult.shardTarget(),scoreDoc.doc,0.0f);
    }
  }
  final InternalSearchResponse internalResponse=searchPhaseController.merge(docs,queryFetchResults,queryFetchResults);
  ((InternalSearchHits)internalResponse.hits()).totalHits=Long.parseLong(this.scrollId.getAttributes().get("total_hits"));
  for (  QueryFetchSearchResult shardResult : queryFetchResults.values()) {
    if (shardResult.queryResult().topDocs().scoreDocs.length < shardResult.queryResult().size()) {
      queryFetchResults.remove(shardResult.shardTarget());
    }
  }
  String scrollId=null;
  if (request.getScroll() != null) {
    scrollId=TransportSearchHelper.buildScrollId(this.scrollId.getType(),queryFetchResults.values(),this.scrollId.getAttributes());
  }
  listener.onResponse(new SearchResponse(internalResponse,scrollId,this.scrollId.getContext().length,successfulOps.get(),System.currentTimeMillis() - startTime,buildShardFailures()));
}
