{
  URLConnection connection=aSource.openConnection();
  if (hasTimestamp) {
    connection.setIfModifiedSince(timestamp);
  }
  boolean isSecureProcotol="https".equalsIgnoreCase(aSource.getProtocol());
  boolean isAuthInfoSet=!Strings.isNullOrEmpty(aSource.getUserInfo());
  if (isAuthInfoSet) {
    if (!isSecureProcotol) {
      throw new IOException("Basic auth is only supported for HTTPS!");
    }
    String basicAuth=Base64.encodeBytes(aSource.getUserInfo().getBytes(StandardCharsets.UTF_8));
    connection.setRequestProperty("Authorization","Basic " + basicAuth);
  }
  if (connection instanceof HttpURLConnection) {
    ((HttpURLConnection)connection).setInstanceFollowRedirects(false);
    connection.setUseCaches(true);
    connection.setConnectTimeout(5000);
  }
  connection.setRequestProperty("ES-Version",Version.CURRENT.toString());
  connection.setRequestProperty("ES-Build-Hash",Build.CURRENT.hashShort());
  connection.setRequestProperty("User-Agent","elasticsearch-plugin-manager");
  connection.connect();
  if (connection instanceof HttpURLConnection) {
    HttpURLConnection httpConnection=(HttpURLConnection)connection;
    int responseCode=httpConnection.getResponseCode();
    if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP || responseCode == HttpURLConnection.HTTP_SEE_OTHER) {
      String newLocation=httpConnection.getHeaderField("Location");
      URL newURL=new URL(newLocation);
      if (!redirectionAllowed(aSource,newURL)) {
        return null;
      }
      return openConnection(newURL);
    }
    long lastModified=httpConnection.getLastModified();
    if (responseCode == HttpURLConnection.HTTP_NOT_MODIFIED || (lastModified != 0 && hasTimestamp && timestamp >= lastModified)) {
      return null;
    }
    if (responseCode == HttpURLConnection.HTTP_UNAUTHORIZED) {
      String message="HTTP Authorization failure";
      throw new IOException(message);
    }
  }
  return connection;
}
