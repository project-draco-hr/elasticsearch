{
  logger.info("-->  creating azure repository with container name [{}]",container);
  assertThat(awaitBusy(new Predicate<Object>(){
    public boolean apply(    Object obj){
      try {
        PutRepositoryResponse putRepositoryResponse=client().admin().cluster().preparePutRepository("test-repo").setType("azure").setSettings(ImmutableSettings.settingsBuilder().put(Repository.CONTAINER,container).put(Repository.BASE_PATH,getRepositoryPath()).put(Repository.CHUNK_SIZE,randomIntBetween(1000,10000))).get();
        client().admin().cluster().prepareDeleteRepository("test-repo").get();
        try {
          logger.info("--> remove container [{}]",container);
          cleanRepositoryFiles(container);
        }
 catch (        StorageException|URISyntaxException e) {
        }
        return (putRepositoryResponse.isAcknowledged() == correct);
      }
 catch (      RepositoryVerificationException e) {
        if (!correct) {
          return true;
        }
        logger.debug(" -> container is being removed. Let's wait a bit...");
        return false;
      }
    }
  }
,5,TimeUnit.MINUTES),equalTo(true));
}
