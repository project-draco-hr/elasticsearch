{
{
    ElasticsearchException ex=new ElasticsearchException("foo",new ElasticsearchException("bar",new ElasticsearchIllegalArgumentException("index is closed",new RuntimeException("foobar"))));
    XContentBuilder builder=XContentFactory.jsonBuilder().prettyPrint();
    builder.startObject();
    ex.toXContent(builder,ToXContent.EMPTY_PARAMS);
    builder.endObject();
    String expected="{\n" + "  \"type\" : \"exception\",\n" + "  \"reason\" : \"foo\",\n"+ "  \"caused_by\" : {\n"+ "    \"type\" : \"exception\",\n"+ "    \"reason\" : \"bar\",\n"+ "    \"caused_by\" : {\n"+ "      \"type\" : \"illegal_argument_exception\",\n"+ "      \"reason\" : \"index is closed\",\n"+ "      \"caused_by\" : {\n"+ "        \"type\" : \"runtime_exception\",\n"+ "        \"reason\" : \"foobar\"\n"+ "      }\n"+ "    }\n"+ "  }\n"+ "}";
    assertEquals(expected,builder.string());
  }
{
    Exception ex=new FileNotFoundException("foo not found");
    if (randomBoolean()) {
      ex=new RemoteTransportException("foobar",ex);
    }
    XContentBuilder builder=XContentFactory.jsonBuilder().prettyPrint();
    builder.startObject();
    ElasticsearchException.toXContent(builder,ToXContent.EMPTY_PARAMS,ex);
    builder.endObject();
    String expected="{\n" + "  \"type\" : \"file_not_found_exception\",\n" + "  \"reason\" : \"foo not found\"\n"+ "}";
    assertEquals(expected,builder.string());
  }
{
    ElasticsearchException ex=new RemoteTransportException("foobar",new FileNotFoundException("foo not found"));
    XContentBuilder builder=XContentFactory.jsonBuilder().prettyPrint();
    builder.startObject();
    ElasticsearchException.toXContent(builder,ToXContent.EMPTY_PARAMS,ex);
    builder.endObject();
    XContentBuilder otherBuilder=XContentFactory.jsonBuilder().prettyPrint();
    otherBuilder.startObject();
    ex.toXContent(otherBuilder,ToXContent.EMPTY_PARAMS);
    otherBuilder.endObject();
    assertEquals(otherBuilder.string(),builder.string());
  }
}
