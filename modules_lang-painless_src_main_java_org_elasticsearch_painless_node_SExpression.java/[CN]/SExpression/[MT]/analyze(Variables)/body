{
  expression.read=lastSource;
  expression.analyze(variables);
  if (!lastSource && !expression.statement) {
    throw createError(new IllegalArgumentException("Not a statement."));
  }
  final boolean rtn=lastSource && expression.actual.sort != Sort.VOID;
  expression.expected=rtn ? Definition.OBJECT_TYPE : expression.actual;
  expression.internal=rtn;
  expression=expression.cast(variables);
  methodEscape=rtn;
  loopEscape=rtn;
  allEscape=rtn;
  statementCount=1;
  return this;
}
