{
  Type rtnType=locals.getReturnType();
  boolean isVoid=rtnType.sort == Sort.VOID;
  expression.read=lastSource && !isVoid;
  expression.analyze(locals);
  if (!lastSource && !expression.statement) {
    throw createError(new IllegalArgumentException("Not a statement."));
  }
  boolean rtn=lastSource && !isVoid && expression.actual.sort != Sort.VOID;
  expression.expected=rtn ? rtnType : expression.actual;
  expression.internal=rtn;
  expression=expression.cast(locals);
  methodEscape=rtn;
  loopEscape=rtn;
  allEscape=rtn;
  statementCount=1;
}
