{
  if (dateParser == null) {
    dateParser=this.dateMathParser;
  }
  Terms terms=org.apache.lucene.index.MultiFields.getTerms(reader,name());
  if (terms == null) {
    return Relation.DISJOINT;
  }
  long minValue=LegacyNumericUtils.getMinLong(terms);
  long maxValue=LegacyNumericUtils.getMaxLong(terms);
  long fromInclusive=Long.MIN_VALUE;
  if (from != null) {
    fromInclusive=parseToMilliseconds(from,!includeLower,timeZone,dateParser);
    if (includeLower == false) {
      if (fromInclusive == Long.MAX_VALUE) {
        return Relation.DISJOINT;
      }
      ++fromInclusive;
    }
  }
  long toInclusive=Long.MAX_VALUE;
  if (to != null) {
    toInclusive=parseToMilliseconds(to,includeUpper,timeZone,dateParser);
    if (includeUpper == false) {
      if (toInclusive == Long.MIN_VALUE) {
        return Relation.DISJOINT;
      }
      --toInclusive;
    }
  }
  if (minValue >= fromInclusive && maxValue <= toInclusive) {
    return Relation.WITHIN;
  }
 else   if (maxValue < fromInclusive || minValue > toInclusive) {
    return Relation.DISJOINT;
  }
 else {
    return Relation.INTERSECTS;
  }
}
