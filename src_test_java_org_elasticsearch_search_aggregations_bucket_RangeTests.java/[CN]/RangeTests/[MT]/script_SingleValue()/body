{
  SearchResponse response=client().prepareSearch("idx").addAggregation(range("range").script("doc['" + SINGLE_VALUED_FIELD_NAME + "'].value").addUnboundedTo(3).addRange(3,6).addUnboundedFrom(6)).execute().actionGet();
  assertSearchResponse(response);
  Range range=response.getAggregations().get("range");
  assertThat(range,notNullValue());
  assertThat(range.getName(),equalTo("range"));
  assertThat(range.getBuckets().size(),equalTo(3));
  Range.Bucket bucket=range.getBucketByKey("*-3.0");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("*-3.0"));
  assertThat(bucket.getFrom().doubleValue(),equalTo(Double.NEGATIVE_INFINITY));
  assertThat(bucket.getTo().doubleValue(),equalTo(3.0));
  assertThat(bucket.getFromAsString(),nullValue());
  assertThat(bucket.getToAsString(),equalTo("3.0"));
  assertThat(bucket.getDocCount(),equalTo(2l));
  bucket=range.getBucketByKey("3.0-6.0");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("3.0-6.0"));
  assertThat(bucket.getFrom().doubleValue(),equalTo(3.0));
  assertThat(bucket.getTo().doubleValue(),equalTo(6.0));
  assertThat(bucket.getFromAsString(),equalTo("3.0"));
  assertThat(bucket.getToAsString(),equalTo("6.0"));
  assertThat(bucket.getDocCount(),equalTo(3l));
  bucket=range.getBucketByKey("6.0-*");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("6.0-*"));
  assertThat(bucket.getFrom().doubleValue(),equalTo(6.0));
  assertThat(bucket.getTo().doubleValue(),equalTo(Double.POSITIVE_INFINITY));
  assertThat(bucket.getFromAsString(),equalTo("6.0"));
  assertThat(bucket.getToAsString(),nullValue());
  assertThat(bucket.getDocCount(),equalTo(numDocs - 5l));
}
