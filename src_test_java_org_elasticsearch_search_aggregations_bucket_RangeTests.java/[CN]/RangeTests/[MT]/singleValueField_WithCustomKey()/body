{
  SearchResponse response=client().prepareSearch("idx").addAggregation(range("range").field(SINGLE_VALUED_FIELD_NAME).addUnboundedTo("r1",3).addRange("r2",3,6).addUnboundedFrom("r3",6)).execute().actionGet();
  assertSearchResponse(response);
  Range range=response.getAggregations().get("range");
  assertThat(range,notNullValue());
  assertThat(range.getName(),equalTo("range"));
  assertThat(range.buckets().size(),equalTo(3));
  Range.Bucket bucket=range.getByKey("r1");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("r1"));
  assertThat(bucket.getFrom(),equalTo(Double.NEGATIVE_INFINITY));
  assertThat(bucket.getTo(),equalTo(3.0));
  assertThat(bucket.getDocCount(),equalTo(2l));
  bucket=range.getByKey("r2");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("r2"));
  assertThat(bucket.getFrom(),equalTo(3.0));
  assertThat(bucket.getTo(),equalTo(6.0));
  assertThat(bucket.getDocCount(),equalTo(3l));
  bucket=range.getByKey("r3");
  assertThat(bucket,notNullValue());
  assertThat(bucket.getKey(),equalTo("r3"));
  assertThat(bucket.getFrom(),equalTo(6.0));
  assertThat(bucket.getTo(),equalTo(Double.POSITIVE_INFINITY));
  assertThat(bucket.getDocCount(),equalTo(numDocs - 5L));
}
