{
  DiscoverySettings discoverySettings=internalCluster().getInstance(DiscoverySettings.class);
  assertThat(discoverySettings.getPublishTimeout(),equalTo(DiscoverySettings.PUBLISH_TIMEOUT_SETTING.get(Settings.EMPTY)));
  ClusterUpdateSettingsResponse response=client().admin().cluster().prepareUpdateSettings().setTransientSettings(Settings.builder().put(DiscoverySettings.PUBLISH_TIMEOUT_SETTING.getKey(),"1s").build()).get();
  assertAcked(response);
  assertThat(response.getTransientSettings().getAsMap().get(DiscoverySettings.PUBLISH_TIMEOUT_SETTING.getKey()),equalTo("1s"));
  assertThat(discoverySettings.getPublishTimeout().seconds(),equalTo(1l));
  try {
    client().admin().cluster().prepareUpdateSettings().setTransientSettings(Settings.builder().put(DiscoverySettings.PUBLISH_TIMEOUT_SETTING.getKey(),"whatever").build()).get();
    fail("bogus value");
  }
 catch (  IllegalArgumentException ex) {
    assertEquals(ex.getMessage(),"Failed to parse setting [discovery.zen.publish_timeout] with value [whatever] as a time value: unit is missing or unrecognized");
  }
  assertThat(discoverySettings.getPublishTimeout().seconds(),equalTo(1l));
  try {
    client().admin().cluster().prepareUpdateSettings().setTransientSettings(Settings.builder().put(DiscoverySettings.PUBLISH_TIMEOUT_SETTING.getKey(),-1).build()).get();
    fail("bogus value");
  }
 catch (  IllegalArgumentException ex) {
    assertEquals(ex.getMessage(),"Failed to parse value [-1] for setting [discovery.zen.publish_timeout] must be >= 0s");
  }
  assertThat(discoverySettings.getPublishTimeout().seconds(),equalTo(1l));
}
