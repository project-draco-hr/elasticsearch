{
  String key1="cluster.routing.allocation.enable";
  Settings transientSettings=Settings.builder().put(key1,EnableAllocationDecider.Allocation.NONE.name()).build();
  String key2="cluster.routing.allocation.node_concurrent_recoveries";
  Settings persistentSettings=Settings.builder().put(key2,"5").build();
  ClusterUpdateSettingsRequestBuilder request=client().admin().cluster().prepareUpdateSettings().setTransientSettings(transientSettings).setPersistentSettings(persistentSettings);
  try {
    setClusterReadOnly(true);
    assertBlocked(request,MetaData.CLUSTER_READ_ONLY_BLOCK);
    Settings settings=settingsBuilder().put(MetaData.SETTING_READ_ONLY_SETTING.getKey(),false).build();
    assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(settings).get());
  }
  finally {
    setClusterReadOnly(false);
  }
  ClusterUpdateSettingsResponse response=request.execute().actionGet();
  assertAcked(response);
  assertThat(response.getTransientSettings().get(key1),notNullValue());
  assertThat(response.getTransientSettings().get(key2),nullValue());
  assertThat(response.getPersistentSettings().get(key1),nullValue());
  assertThat(response.getPersistentSettings().get(key2),notNullValue());
}
