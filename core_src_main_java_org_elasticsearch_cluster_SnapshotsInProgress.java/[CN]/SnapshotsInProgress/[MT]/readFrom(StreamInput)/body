{
  Entry[] entries=new Entry[in.readVInt()];
  for (int i=0; i < entries.length; i++) {
    SnapshotId snapshotId=SnapshotId.readSnapshotId(in);
    boolean includeGlobalState=in.readBoolean();
    State state=State.fromValue(in.readByte());
    int indices=in.readVInt();
    List<String> indexBuilder=new ArrayList<>();
    for (int j=0; j < indices; j++) {
      indexBuilder.add(in.readString());
    }
    long startTime=in.readLong();
    ImmutableOpenMap.Builder<ShardId,ShardSnapshotStatus> builder=ImmutableOpenMap.builder();
    int shards=in.readVInt();
    for (int j=0; j < shards; j++) {
      ShardId shardId=ShardId.readShardId(in);
      String nodeId=in.readOptionalString();
      State shardState=State.fromValue(in.readByte());
      builder.put(shardId,new ShardSnapshotStatus(nodeId,shardState));
    }
    entries[i]=new Entry(snapshotId,includeGlobalState,state,Collections.unmodifiableList(indexBuilder),startTime,builder.build());
  }
  return new SnapshotsInProgress(entries);
}
