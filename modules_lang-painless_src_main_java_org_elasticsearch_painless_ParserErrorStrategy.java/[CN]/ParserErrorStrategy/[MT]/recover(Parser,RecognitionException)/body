{
  Token token=re.getOffendingToken();
  String message;
  if (token == null) {
    message="Error: no parse token found.";
  }
 else   if (re instanceof InputMismatchException) {
    message="Error[" + token.getLine() + ":"+ token.getCharPositionInLine()+ "]:"+ " unexpected token ["+ getTokenErrorDisplay(token)+ "]"+ " was expecting one of ["+ re.getExpectedTokens().toString(recognizer.getVocabulary())+ "].";
  }
 else   if (re instanceof NoViableAltException) {
    if (token.getType() == PainlessParser.EOF) {
      message="Error: unexpected end of script.";
    }
 else {
      message="Error[" + token.getLine() + ":"+ token.getCharPositionInLine()+ "]:"+ "invalid sequence of tokens near ["+ getTokenErrorDisplay(token)+ "].";
    }
  }
 else {
    message="Error[" + token.getLine() + ":"+ token.getCharPositionInLine()+ "]:"+ " unexpected token near ["+ getTokenErrorDisplay(token)+ "].";
  }
  ParseException parseException=new ParseException(message,token == null ? -1 : token.getStartIndex());
  parseException.initCause(re);
  throw new RuntimeException(parseException);
}
