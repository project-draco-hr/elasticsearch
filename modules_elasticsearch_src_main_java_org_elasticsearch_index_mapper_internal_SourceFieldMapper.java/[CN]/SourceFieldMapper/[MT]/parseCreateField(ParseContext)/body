{
  if (!enabled) {
    return null;
  }
  if (store == Field.Store.NO) {
    return null;
  }
  if (context.flyweight()) {
    return null;
  }
  byte[] data=context.source();
  int dataOffset=context.sourceOffset();
  int dataLength=context.sourceLength();
  if (compress != null && compress && !LZF.isCompressed(data,dataOffset,dataLength)) {
    if (compressThreshold == -1 || dataLength > compressThreshold) {
      CachedStreamOutput.Entry cachedEntry=CachedStreamOutput.popEntry();
      LZFStreamOutput streamOutput=cachedEntry.cachedLZFBytes();
      streamOutput.writeBytes(data,dataOffset,dataLength);
      streamOutput.flush();
      data=cachedEntry.bytes().copiedByteArray();
      dataOffset=0;
      dataLength=data.length;
      CachedStreamOutput.pushEntry(cachedEntry);
      context.source(data,dataOffset,dataLength);
    }
  }
  return new Field(names().indexName(),data,dataOffset,dataLength);
}
