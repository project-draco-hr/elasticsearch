{
  super(facetName);
  this.fieldName=fieldName;
  this.interval=interval;
  this.comparatorType=comparatorType;
  this.fieldDataCache=context.fieldDataCache();
  MapperService.SmartNameFieldMappers smartMappers=context.mapperService().smartName(fieldName);
  if (smartMappers == null || !smartMappers.hasMapper()) {
    throw new FacetPhaseExecutionException(facetName,"No mapping found for field [" + fieldName + "]");
  }
  if (smartMappers.hasDocMapper()) {
    setFilter(context.filterCache().cache(smartMappers.docMapper().typeFilter()));
  }
  this.valueScript=new SearchScript(context.scriptSearchLookup(),scriptLang,valueScript,params,context.scriptService());
  FieldMapper mapper=smartMappers.mapper();
  indexFieldName=mapper.names().indexName();
  fieldDataType=mapper.fieldDataType();
  histoProc=new HistogramProc(interval,this.valueScript);
}
