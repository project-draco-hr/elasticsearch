{
  readerA.reset(a.bytes,a.offset,a.length);
  scratchA.length=readerA.readShort();
  scratchA.bytes=a.bytes;
  scratchA.offset=readerA.getPosition();
  readerB.reset(b.bytes,b.offset,b.length);
  scratchB.bytes=b.bytes;
  scratchB.length=readerB.readShort();
  scratchB.offset=readerB.getPosition();
  int cmp=scratchA.compareTo(scratchB);
  if (cmp != 0) {
    return cmp;
  }
  readerA.skipBytes(scratchA.length);
  readerB.skipBytes(scratchB.length);
  long aCost=readerA.readInt();
  long bCost=readerB.readInt();
  if (aCost < bCost) {
    return -1;
  }
 else   if (aCost > bCost) {
    return 1;
  }
  if (hasPayloads) {
    scratchA.length=readerA.readShort();
    scratchA.offset=readerA.getPosition();
    scratchB.length=readerB.readShort();
    scratchB.offset=readerB.getPosition();
  }
 else {
    scratchA.offset=readerA.getPosition();
    scratchA.length=a.length - scratchA.offset;
    scratchB.offset=readerB.getPosition();
    scratchB.length=b.length - scratchB.offset;
  }
  return scratchA.compareTo(scratchB);
}
