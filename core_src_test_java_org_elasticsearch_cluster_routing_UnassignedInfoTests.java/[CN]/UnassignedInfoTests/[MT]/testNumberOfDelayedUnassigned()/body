{
  MockAllocationService allocation=createAllocationService(Settings.EMPTY,new DelayedShardsMockGatewayAllocator());
  MetaData metaData=MetaData.builder().put(IndexMetaData.builder("test1").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).put(IndexMetaData.builder("test2").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).build();
  ClusterState clusterState=ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(RoutingTable.builder().addAsNew(metaData.index("test1")).addAsNew(metaData.index("test2")).build()).build();
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode("node1")).add(newNode("node2"))).build();
  clusterState=allocation.reroute(clusterState,"reroute");
  assertThat(UnassignedInfo.getNumberOfDelayedUnassigned(clusterState),equalTo(0));
  clusterState=allocation.applyStartedShards(clusterState,clusterState.getRoutingNodes().shardsWithState(INITIALIZING));
  clusterState=allocation.applyStartedShards(clusterState,clusterState.getRoutingNodes().shardsWithState(INITIALIZING));
  assertThat(clusterState.getRoutingNodes().unassigned().size() > 0,equalTo(false));
  clusterState=ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove("node2")).build();
  clusterState=allocation.deassociateDeadNodes(clusterState,true,"reroute");
  assertThat(clusterState.prettyPrint(),UnassignedInfo.getNumberOfDelayedUnassigned(clusterState),equalTo(2));
}
