{
  final long baseTime=System.nanoTime();
  UnassignedInfo unassignedInfo=new UnassignedInfo(UnassignedInfo.Reason.NODE_LEFT,"test",null,baseTime,System.currentTimeMillis());
  final long totalDelayNanos=TimeValue.timeValueMillis(10).nanos();
  final Settings settings=Settings.builder().put(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING.getKey(),TimeValue.timeValueNanos(totalDelayNanos)).build();
  unassignedInfo=unassignedInfo.updateDelay(baseTime,settings,Settings.EMPTY);
  long delay=unassignedInfo.getLastComputedLeftDelayNanos();
  assertThat(delay,equalTo(totalDelayNanos));
  assertThat(delay,equalTo(unassignedInfo.getLastComputedLeftDelayNanos()));
  long delta1=randomIntBetween(1,(int)(totalDelayNanos - 1));
  unassignedInfo=unassignedInfo.updateDelay(baseTime + delta1,settings,Settings.EMPTY);
  delay=unassignedInfo.getLastComputedLeftDelayNanos();
  assertThat(delay,equalTo(totalDelayNanos - delta1));
  assertThat(delay,equalTo(unassignedInfo.getLastComputedLeftDelayNanos()));
  unassignedInfo=unassignedInfo.updateDelay(baseTime + totalDelayNanos,settings,Settings.EMPTY);
  delay=unassignedInfo.getLastComputedLeftDelayNanos();
  assertThat(delay,equalTo(0L));
  assertThat(delay,equalTo(unassignedInfo.getLastComputedLeftDelayNanos()));
  unassignedInfo=unassignedInfo.updateDelay(baseTime + totalDelayNanos + randomIntBetween(1,20),settings,Settings.EMPTY);
  delay=unassignedInfo.getLastComputedLeftDelayNanos();
  assertThat(delay,equalTo(0L));
  assertThat(delay,equalTo(unassignedInfo.getLastComputedLeftDelayNanos()));
}
