{
  final CountDownLatch latch2=new CountDownLatch(1);
  serviceA.registerRequestHandler("foobar",StringMessageRequest.class,ThreadPool.Names.GENERIC,new TransportRequestHandler<StringMessageRequest>(){
    @Override public void messageReceived(    StringMessageRequest request,    TransportChannel channel){
      try {
        latch2.await();
        logger.info("Stop ServiceB now");
        serviceB.stop();
      }
 catch (      Exception e) {
        fail(e.getMessage());
      }
    }
  }
);
  TransportFuture<TransportResponse.Empty> foobar=serviceB.submitRequest(nodeA,"foobar",new StringMessageRequest(""),options(),EmptyTransportResponseHandler.INSTANCE_SAME);
  latch2.countDown();
  try {
    foobar.txGet();
    fail("TransportException expected");
  }
 catch (  TransportException ex) {
  }
  serviceA.removeHandler("sayHelloTimeoutDelayedResponse");
}
