{
  int readPos=(int)indexInput.getFilePointer();
  byte[] output=new byte[length];
  while (readPos < length) {
switch (randomIntBetween(0,3)) {
case 0:
      output[readPos++]=indexInput.readByte();
    break;
case 1:
  int len=randomIntBetween(1,length - readPos);
indexInput.readBytes(output,readPos,len);
readPos+=len;
break;
case 2:
len=randomIntBetween(1,length - readPos);
byte[] temp=new byte[len];
indexInput.readBytes(temp,0,len);
System.arraycopy(temp,0,output,readPos,len);
readPos+=len;
break;
case 3:
len=randomIntBetween(1,length - readPos);
IndexInput slice=indexInput.slice("slice (" + readPos + ", "+ len+ ") of "+ indexInput.toString(),readPos,len);
temp=randomReadAndSlice(slice,len);
assertEquals(readPos,indexInput.getFilePointer());
System.arraycopy(temp,0,output,readPos,len);
readPos+=len;
indexInput.seek(readPos);
assertEquals(readPos,indexInput.getFilePointer());
break;
default :
fail();
}
assertEquals(readPos,indexInput.getFilePointer());
}
return output;
}
