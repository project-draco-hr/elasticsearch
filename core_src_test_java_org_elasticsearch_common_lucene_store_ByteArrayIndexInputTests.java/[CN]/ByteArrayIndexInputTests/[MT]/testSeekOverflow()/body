{
  for (int i=0; i < 100; i++) {
    byte[] input=randomUnicodeOfLength(randomIntBetween(1,1000)).getBytes(StandardCharsets.UTF_8);
    ByteArrayIndexInput indexInput=new ByteArrayIndexInput("test",input);
    int firstReadLen=randomIntBetween(0,input.length - 1);
    randomReadAndSlice(indexInput,firstReadLen);
    try {
switch (randomIntBetween(0,2)) {
case 0:
        indexInput.seek(Integer.MAX_VALUE + 4L);
      break;
case 1:
    indexInput.seek(-randomIntBetween(1,10));
  break;
case 2:
int seek=input.length + randomIntBetween(1,100);
indexInput.seek(seek);
break;
default :
fail();
}
fail();
}
 catch (IOException ex) {
assertThat(ex.getMessage(),containsString("EOF"));
}
catch (IllegalArgumentException ex) {
assertThat(ex.getMessage(),containsString("negative position"));
}
}
}
