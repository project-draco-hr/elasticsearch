{
  if (currentCells == null) {
    throw new ElasticsearchIllegalStateException("no block started...");
  }
  if (!inHeaders) {
    if (currentCells.size() == headers.size()) {
      throw new ElasticsearchIllegalStateException("can't add more cells to a row than the header");
    }
  }
  Map<String,String> mAttr;
  if (attributes.length() == 0) {
    if (inHeaders) {
      mAttr=ImmutableMap.of();
    }
 else {
      mAttr=headers.get(currentCells.size()).attr;
    }
  }
 else {
    mAttr=new HashMap<String,String>();
    if (!inHeaders) {
      mAttr.putAll(headers.get(currentCells.size()).attr);
    }
    String[] sAttrs=Strings.splitStringToArray(attributes,';');
    for (    String sAttr : sAttrs) {
      if (sAttr.length() == 0) {
        continue;
      }
      int idx=sAttr.indexOf(':');
      mAttr.put(sAttr.substring(0,idx),sAttr.substring(idx + 1));
    }
  }
  Cell cell=new Cell(value,mAttr);
  int cellIndex=currentCells.size();
  currentCells.add(cell);
  if (!inHeaders) {
    String hdr=(String)headers.get(cellIndex).value;
    map.get(hdr).add(cell);
  }
  return this;
}
