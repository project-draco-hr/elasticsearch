{
  Version version=VersionUtils.getPreviousVersion();
  Settings theSettings=Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED,version).build();
  IndexSettings settings=new IndexSettings(new Index("index"),theSettings,Collections.EMPTY_LIST);
  assertEquals(version,settings.getIndexVersionCreated());
  assertEquals("_na_",settings.getUUID());
  try {
    settings.updateSettings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.CURRENT).put("index.test.setting.int",42).build());
    fail("version has changed");
  }
 catch (  IllegalArgumentException ex) {
    assertTrue(ex.getMessage(),ex.getMessage().startsWith("version mismatch on settings update expected: "));
  }
  theSettings=Settings.settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.CURRENT).put(IndexMetaData.SETTING_INDEX_UUID,"0xdeadbeef").build();
  settings=new IndexSettings(new Index("index"),theSettings,Collections.EMPTY_LIST);
  try {
    settings.updateSettings(Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.CURRENT).put("index.test.setting.int",42).build());
    fail("uuid missing/change");
  }
 catch (  IllegalArgumentException ex) {
    assertEquals("uuid mismatch on settings update expected: 0xdeadbeef but was: _na_",ex.getMessage());
  }
  assertSame(theSettings,settings.getSettings());
}
