{
  AtomicNumericFieldData leftData=random.nextBoolean() ? left.load(context) : left.loadDirect(context);
  AtomicNumericFieldData rightData=random.nextBoolean() ? right.load(context) : right.loadDirect(context);
  int numDocs=context.reader().maxDoc();
  DoubleValues leftDoubleValues=leftData.getDoubleValues();
  DoubleValues rightDoubleValues=rightData.getDoubleValues();
  for (int i=0; i < numDocs; i++) {
    int numValues=0;
    assertThat((numValues=leftDoubleValues.setDocument(i)),equalTo(rightDoubleValues.setDocument(i)));
    double previous=0;
    for (int j=0; j < numValues; j++) {
      double current=rightDoubleValues.nextValue();
      if (Double.isNaN(current)) {
        assertTrue(Double.isNaN(leftDoubleValues.nextValue()));
      }
 else {
        assertThat(leftDoubleValues.nextValue(),closeTo(current,0.0001));
      }
      if (j > 0) {
        assertThat(Double.compare(previous,current),lessThan(0));
      }
      previous=current;
    }
  }
}
