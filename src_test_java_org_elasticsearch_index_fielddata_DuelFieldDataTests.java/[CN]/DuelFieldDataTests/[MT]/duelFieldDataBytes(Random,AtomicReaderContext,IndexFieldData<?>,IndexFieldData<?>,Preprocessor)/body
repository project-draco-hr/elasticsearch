{
  AtomicFieldData<?> leftData=random.nextBoolean() ? left.load(context) : left.loadDirect(context);
  AtomicFieldData<?> rightData=random.nextBoolean() ? right.load(context) : right.loadDirect(context);
  assertThat(leftData.getNumDocs(),equalTo(rightData.getNumDocs()));
  int numDocs=leftData.getNumDocs();
  BytesValues leftBytesValues=leftData.getBytesValues(random.nextBoolean());
  BytesValues rightBytesValues=rightData.getBytesValues(random.nextBoolean());
  BytesRef leftSpare=new BytesRef();
  BytesRef rightSpare=new BytesRef();
  for (int i=0; i < numDocs; i++) {
    int numValues=0;
    assertThat((numValues=leftBytesValues.setDocument(i)),equalTo(rightBytesValues.setDocument(i)));
    for (int j=0; j < numValues; j++) {
      rightSpare.copyBytes(rightBytesValues.nextValue());
      leftSpare.copyBytes(leftBytesValues.nextValue());
      assertThat(rightSpare.hashCode(),equalTo(rightBytesValues.currentValueHash()));
      assertThat(leftSpare.hashCode(),equalTo(leftBytesValues.currentValueHash()));
      pre.toString(rightSpare);
      pre.toString(leftSpare);
      assertThat(pre.toString(leftSpare),equalTo(pre.toString(rightSpare)));
      if (leftSpare.equals(rightSpare)) {
        assertThat(leftBytesValues.currentValueHash(),equalTo(rightBytesValues.currentValueHash()));
      }
    }
  }
}
