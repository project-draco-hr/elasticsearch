{
  assumeTrue("requires a 64-bit JRE ... ?!",Constants.JRE_IS_64BIT);
  BytesStreamOutput out=new BytesStreamOutput();
  out.writeBoolean(false);
  out.writeByte((byte)1);
  out.writeShort((short)-1);
  out.writeInt(-1);
  out.writeVInt(2);
  out.writeLong(-3);
  out.writeVLong(4);
  out.writeFloat(1.1f);
  out.writeDouble(2.2);
  int[] intArray={1,2,3};
  out.writeGenericValue(intArray);
  long[] longArray={1,2,3};
  out.writeGenericValue(longArray);
  float[] floatArray={1.1f,2.2f,3.3f};
  out.writeGenericValue(floatArray);
  double[] doubleArray={1.1,2.2,3.3};
  out.writeGenericValue(doubleArray);
  out.writeString("hello");
  out.writeString("goodbye");
  out.writeStringList(Arrays.asList(new String[]{"Hello","Again"}));
  out.writeGenericValue(BytesRefs.toBytesRef("bytesref"));
  BytesStreamInput in=new BytesStreamInput(out.bytes().toBytes());
  assertThat(in.readBoolean(),equalTo(false));
  assertThat(in.readByte(),equalTo((byte)1));
  assertThat(in.readShort(),equalTo((short)-1));
  assertThat(in.readInt(),equalTo(-1));
  assertThat(in.readVInt(),equalTo(2));
  assertThat(in.readLong(),equalTo((long)-3));
  assertThat(in.readVLong(),equalTo((long)4));
  assertThat((double)in.readFloat(),closeTo(1.1,0.0001));
  assertThat(in.readDouble(),closeTo(2.2,0.0001));
  assertThat(in.readGenericValue(),equalTo((Object)intArray));
  assertThat(in.readGenericValue(),equalTo((Object)longArray));
  assertThat(in.readGenericValue(),equalTo((Object)floatArray));
  assertThat(in.readGenericValue(),equalTo((Object)doubleArray));
  assertThat(in.readString(),equalTo("hello"));
  assertThat(in.readString(),equalTo("goodbye"));
  assertThat(in.readStringList(),equalTo(Arrays.asList(new String[]{"Hello","Again"})));
  assertThat(in.readGenericValue(),equalTo((Object)BytesRefs.toBytesRef("bytesref")));
  in.close();
  out.close();
}
