{
  SearchResponse searchResponse=searchAction.execute(request.searchRequest()).actionGet();
  if (searchResponse.failedShards() > 0) {
    throw new ElasticSearchException("search failed with failed shards: " + Arrays.toString(searchResponse.shardFailures()));
  }
  final AtomicReference<Throwable> failureRef=new AtomicReference<Throwable>();
  final CountDownLatch latch=new CountDownLatch(1);
  clusterService.submitStateUpdateTask("put_warmer [" + request.name() + "]",new ProcessedClusterStateUpdateTask(){
    @Override public ClusterState execute(    ClusterState currentState){
      MetaData metaData=currentState.metaData();
      String[] concreteIndices=metaData.concreteIndices(request.searchRequest().indices());
      BytesReference source=null;
      if (request.searchRequest().source() != null && request.searchRequest().source().length() > 0) {
        source=request.searchRequest().source();
      }
 else       if (request.searchRequest().extraSource() != null && request.searchRequest().extraSource().length() > 0) {
        source=request.searchRequest().extraSource();
      }
      MetaData.Builder mdBuilder=MetaData.builder().metaData(currentState.metaData());
      for (      String index : concreteIndices) {
        IndexMetaData indexMetaData=metaData.index(index);
        if (indexMetaData == null) {
          throw new IndexMissingException(new Index(index));
        }
        IndexWarmersMetaData warmers=indexMetaData.custom(IndexWarmersMetaData.TYPE);
        if (warmers == null) {
          logger.info("[{}] putting warmer [{}]",index,request.name());
          warmers=new IndexWarmersMetaData(new IndexWarmersMetaData.Entry(request.name(),request.searchRequest().types(),source));
        }
 else {
          boolean found=false;
          List<IndexWarmersMetaData.Entry> entries=new ArrayList<IndexWarmersMetaData.Entry>(warmers.entries().size() + 1);
          for (          IndexWarmersMetaData.Entry entry : warmers.entries()) {
            if (entry.name().equals(request.name())) {
              found=true;
              entries.add(new IndexWarmersMetaData.Entry(request.name(),request.searchRequest().types(),source));
            }
 else {
              entries.add(entry);
            }
          }
          if (!found) {
            logger.info("[{}] put warmer [{}]",index,request.name());
            entries.add(new IndexWarmersMetaData.Entry(request.name(),request.searchRequest().types(),source));
          }
 else {
            logger.info("[{}] update warmer [{}]",index,request.name());
          }
          warmers=new IndexWarmersMetaData(entries.toArray(new IndexWarmersMetaData.Entry[entries.size()]));
        }
        IndexMetaData.Builder indexBuilder=IndexMetaData.newIndexMetaDataBuilder(indexMetaData).putCustom(IndexWarmersMetaData.TYPE,warmers);
        mdBuilder.put(indexBuilder);
      }
      return ClusterState.builder().state(currentState).metaData(mdBuilder).build();
    }
    @Override public void clusterStateProcessed(    ClusterState clusterState){
      latch.countDown();
    }
  }
);
  try {
    latch.await();
  }
 catch (  InterruptedException e) {
    failureRef.set(e);
  }
  if (failureRef.get() != null) {
    if (failureRef.get() instanceof ElasticSearchException) {
      throw (ElasticSearchException)failureRef.get();
    }
 else {
      throw new ElasticSearchException(failureRef.get().getMessage(),failureRef.get());
    }
  }
  return new PutWarmerResponse(true);
}
