{
  if (!Strings.hasLength(version)) {
    return Version.CURRENT;
  }
  String[] parts=version.split("\\.");
  if (parts.length < 3 || parts.length > 4) {
    throw new IllegalArgumentException("the version needs to contain major, minor and revision, and optionally the build");
  }
  try {
    int major=Integer.parseInt(parts[0]) * 1000000;
    int minor=Integer.parseInt(parts[1]) * 10000;
    int revision=Integer.parseInt(parts[2]) * 100;
    int build=99;
    if (parts.length == 4) {
      String buildStr=parts[3];
      if (buildStr.startsWith("Beta")) {
        build=Integer.parseInt(buildStr.substring(4));
      }
      if (buildStr.startsWith("RC")) {
        build=Integer.parseInt(buildStr.substring(2)) + 50;
      }
    }
    return fromId(major + minor + revision+ build);
  }
 catch (  NumberFormatException e) {
    throw new IllegalArgumentException("unable to parse version " + version,e);
  }
}
