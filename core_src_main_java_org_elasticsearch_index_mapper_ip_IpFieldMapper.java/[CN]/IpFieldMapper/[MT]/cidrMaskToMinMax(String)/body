{
  Matcher matcher=MASK_PATTERN.matcher(cidr);
  if (!matcher.matches()) {
    return null;
  }
  int addr=((Integer.parseInt(matcher.group(1)) << 24) & 0xFF000000) | ((Integer.parseInt(matcher.group(2)) << 16) & 0xFF0000) | ((Integer.parseInt(matcher.group(3)) << 8) & 0xFF00)| (Integer.parseInt(matcher.group(4)) & 0xFF);
  int mask=(-1) << (32 - Integer.parseInt(matcher.group(5)));
  if (Integer.parseInt(matcher.group(5)) == 0) {
    mask=0 << 32;
  }
  int from=addr & mask;
  long longFrom=intIpToLongIp(from);
  if (longFrom == 0) {
    longFrom=-1;
  }
  int to=from + (~mask);
  long longTo=intIpToLongIp(to) + 1;
  if (longTo == MAX_IP) {
    longTo=-1;
  }
  return new long[]{longFrom,longTo};
}
