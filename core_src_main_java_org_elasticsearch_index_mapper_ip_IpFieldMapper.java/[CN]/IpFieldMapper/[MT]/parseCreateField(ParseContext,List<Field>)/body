{
  Object addressAsObject;
  if (context.externalValueSet()) {
    addressAsObject=context.externalValue();
  }
 else {
    addressAsObject=context.parser().text();
  }
  if (addressAsObject == null) {
    addressAsObject=fieldType().nullValue();
  }
  if (addressAsObject == null) {
    return;
  }
  String addressAsString=addressAsObject.toString();
  InetAddress address;
  if (addressAsObject instanceof InetAddress) {
    address=(InetAddress)addressAsObject;
  }
 else {
    try {
      address=InetAddresses.forString(addressAsString);
    }
 catch (    IllegalArgumentException e) {
      if (ignoreMalformed.value()) {
        return;
      }
 else {
        throw e;
      }
    }
  }
  if (context.includeInAll(includeInAll,this)) {
    context.allEntries().addText(fieldType().name(),addressAsString,fieldType().boost());
  }
  if (fieldType().indexOptions() != IndexOptions.NONE) {
    fields.add(new InetAddressPoint(fieldType().name(),address));
  }
  if (fieldType().hasDocValues()) {
    fields.add(new SortedSetDocValuesField(fieldType().name(),new BytesRef(InetAddressPoint.encode(address))));
  }
  if (fieldType().stored()) {
    fields.add(new StoredField(fieldType().name(),new BytesRef(InetAddressPoint.encode(address))));
  }
}
