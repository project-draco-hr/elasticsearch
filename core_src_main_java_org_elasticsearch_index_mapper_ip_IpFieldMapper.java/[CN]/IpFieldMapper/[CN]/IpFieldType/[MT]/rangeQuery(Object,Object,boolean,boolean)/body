{
  if (includeLower == false || includeUpper == false) {
    throw new IllegalArgumentException("range on ip addresses only supports inclusive bounds");
  }
  InetAddress lower;
  if (lowerTerm == null) {
    lower=InetAddressPoint.decode(new byte[16]);
  }
 else {
    lower=parse(lowerTerm);
  }
  InetAddress upper;
  if (upperTerm == null) {
    byte[] bytes=new byte[16];
    Arrays.fill(bytes,(byte)255);
    upper=InetAddressPoint.decode(bytes);
  }
 else {
    upper=parse(upperTerm);
  }
  return InetAddressPoint.newRangeQuery(name(),lower,upper);
}
