{
  final List<String> nodes=internalCluster().startNodesAsync(3,nodeSettings).get();
  ClusterHealthResponse clusterHealthResponse=client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForNodes("3").get();
  assertThat(clusterHealthResponse.isTimedOut(),is(false));
  assertAcked(prepareCreate("test").setSettings(ImmutableSettings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,2)).get());
  ensureGreen("test");
  String isolatedNode=findMasterNode(nodes).getName();
  String notIsolatedNode=null;
  for (  String node : nodes) {
    if (!node.equals(isolatedNode)) {
      notIsolatedNode=node;
      break;
    }
  }
  logger.info("Isolating node[" + isolatedNode + "]");
  for (  String nodeId : nodes) {
    if (!nodeId.equals(isolatedNode)) {
      addFailToSendNoConnectRule(nodeId,isolatedNode);
      addFailToSendNoConnectRule(isolatedNode,nodeId);
    }
  }
  ensureYellow("test");
  IndexResponse indexResponse=internalCluster().client(notIsolatedNode).prepareIndex("test","type").setSource("field","value").get();
  assertThat(indexResponse.getVersion(),equalTo(1l));
  logger.info("Verifying if document exists via node[" + notIsolatedNode + "]");
  GetResponse getResponse=internalCluster().client(notIsolatedNode).prepareGet("test","type",indexResponse.getId()).setPreference("_local").get();
  assertThat(getResponse.isExists(),is(true));
  assertThat(getResponse.getVersion(),equalTo(1l));
  assertThat(getResponse.getId(),equalTo(indexResponse.getId()));
  for (  String nodeId : nodes) {
    if (!nodeId.equals(isolatedNode)) {
      clearNoConnectRule(nodeId,isolatedNode);
      clearNoConnectRule(isolatedNode,nodeId);
    }
  }
  ensureGreen("test");
  for (  String node : nodes) {
    logger.info("Verifying if document exists after isolating node[" + isolatedNode + "] via node["+ node+ "]");
    getResponse=internalCluster().client(node).prepareGet("test","type",indexResponse.getId()).setPreference("_local").get();
    assertThat(getResponse.isExists(),is(true));
    assertThat(getResponse.getVersion(),equalTo(1l));
    assertThat(getResponse.getId(),equalTo(indexResponse.getId()));
  }
}
