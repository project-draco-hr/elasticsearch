{
  List<String> nodes=startCluster(3);
  final String masterNode=internalCluster().getMasterName();
  logger.info("---> legit elected master node=" + masterNode);
  Set<String> nonMasters=new HashSet<>(nodes);
  nonMasters.remove(masterNode);
  final String unluckyNode=randomFrom(nonMasters.toArray(Strings.EMPTY_ARRAY));
  NetworkDisconnectPartition networkDisconnect=new NetworkDisconnectPartition(masterNode,unluckyNode,getRandom());
  setDisruptionScheme(networkDisconnect);
  networkDisconnect.startDisrupting();
  ensureStableCluster(2,masterNode);
  assertNoMaster(unluckyNode);
  networkDisconnect.stopDisrupting();
  ensureStableCluster(3);
  assertMaster(masterNode,nodes);
}
