{
  BytesReference inputBytes=new BytesArray(" {\"fields\" : [\"a\",  \"b\",\"c\"], \"offsets\":false, \"positions\":false, \"payloads\":true}");
  TermVectorRequest tvr=new TermVectorRequest(null,null,null);
  XContentParser parser=XContentFactory.xContent(XContentType.JSON).createParser(inputBytes);
  TermVectorRequest.parseRequest(tvr,parser);
  Set<String> fields=tvr.selectedFields();
  assertThat(fields.contains("a"),equalTo(true));
  assertThat(fields.contains("b"),equalTo(true));
  assertThat(fields.contains("c"),equalTo(true));
  assertThat(tvr.offsets(),equalTo(false));
  assertThat(tvr.positions(),equalTo(false));
  assertThat(tvr.payloads(),equalTo(true));
  String additionalFields="b,c  ,d, e  ";
  RestTermVectorAction.addFieldStringsFromParameter(tvr,additionalFields);
  assertThat(tvr.selectedFields().size(),equalTo(5));
  assertThat(fields.contains("d"),equalTo(true));
  assertThat(fields.contains("e"),equalTo(true));
  additionalFields="";
  RestTermVectorAction.addFieldStringsFromParameter(tvr,additionalFields);
  inputBytes=new BytesArray(" {\"offsets\":false, \"positions\":false, \"payloads\":true}");
  tvr=new TermVectorRequest(null,null,null);
  parser=XContentFactory.xContent(XContentType.JSON).createParser(inputBytes);
  TermVectorRequest.parseRequest(tvr,parser);
  additionalFields="";
  RestTermVectorAction.addFieldStringsFromParameter(tvr,additionalFields);
  assertThat(tvr.selectedFields(),equalTo(null));
  additionalFields="b,c  ,d, e  ";
  RestTermVectorAction.addFieldStringsFromParameter(tvr,additionalFields);
  assertThat(tvr.selectedFields().size(),equalTo(4));
}
