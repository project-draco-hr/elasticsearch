{
  XContentParser.Token token;
  String currentFieldName=null;
  if (data.length() > 0) {
    try (XContentParser parser=XContentFactory.xContent(data).createParser(data)){
      while ((token=parser.nextToken()) != XContentParser.Token.END_OBJECT) {
        if (token == XContentParser.Token.FIELD_NAME) {
          currentFieldName=parser.currentName();
        }
 else         if (token == XContentParser.Token.START_ARRAY) {
          if ("docs".equals(currentFieldName)) {
            while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
              if (token != XContentParser.Token.START_OBJECT) {
                throw new IllegalArgumentException("docs array element should include an object");
              }
              TermVectorsRequest termVectorsRequest=new TermVectorsRequest(template);
              TermVectorsRequest.parseRequest(termVectorsRequest,parser);
              add(termVectorsRequest);
            }
          }
 else           if ("ids".equals(currentFieldName)) {
            while ((token=parser.nextToken()) != XContentParser.Token.END_ARRAY) {
              if (!token.isValue()) {
                throw new IllegalArgumentException("ids array element should only contain ids");
              }
              ids.add(parser.text());
            }
          }
 else {
            throw new ElasticsearchParseException("No parameter named " + currentFieldName + "and type ARRAY");
          }
        }
 else         if (token == XContentParser.Token.START_OBJECT && currentFieldName != null) {
          if ("parameters".equals(currentFieldName)) {
            TermVectorsRequest.parseRequest(template,parser);
          }
 else {
            throw new ElasticsearchParseException("No parameter named " + currentFieldName + "and type OBJECT");
          }
        }
 else         if (currentFieldName != null) {
          throw new ElasticsearchParseException("_mtermvectors: Parameter " + currentFieldName + "not supported");
        }
      }
    }
   }
  for (  String id : ids) {
    TermVectorsRequest curRequest=new TermVectorsRequest(template);
    curRequest.id(id);
    requests.add(curRequest);
  }
}
