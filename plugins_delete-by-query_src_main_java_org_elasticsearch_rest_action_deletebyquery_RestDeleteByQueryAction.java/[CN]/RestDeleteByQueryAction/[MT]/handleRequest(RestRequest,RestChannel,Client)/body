{
  DeleteByQueryRequest delete=new DeleteByQueryRequest(Strings.splitStringByCommaToArray(request.param("index")));
  delete.indicesOptions(IndicesOptions.fromRequest(request,delete.indicesOptions()));
  delete.routing(request.param("routing"));
  if (request.hasParam("timeout")) {
    delete.timeout(request.paramAsTime("timeout",null));
  }
  if (request.hasContent()) {
    XContentParser requestParser=XContentFactory.xContent(request.content()).createParser(request.content());
    QueryParseContext context=new QueryParseContext(indicesQueriesRegistry);
    context.reset(requestParser);
    context.parseFieldMatcher(parseFieldMatcher);
    final QueryBuilder<?> builder=context.parseInnerQueryBuilder();
    delete.query(builder);
  }
 else {
    String source=request.param("source");
    if (source != null) {
      XContentParser requestParser=XContentFactory.xContent(source).createParser(source);
      QueryParseContext context=new QueryParseContext(indicesQueriesRegistry);
      context.reset(requestParser);
      final QueryBuilder<?> builder=context.parseInnerQueryBuilder();
      delete.query(builder);
    }
 else {
      QueryBuilder<?> queryBuilder=RestActions.urlParamsToQueryBuilder(request);
      if (queryBuilder != null) {
        delete.query(queryBuilder);
      }
    }
  }
  delete.types(Strings.splitStringByCommaToArray(request.param("type")));
  client.execute(INSTANCE,delete,new RestToXContentListener<DeleteByQueryResponse>(channel));
}
