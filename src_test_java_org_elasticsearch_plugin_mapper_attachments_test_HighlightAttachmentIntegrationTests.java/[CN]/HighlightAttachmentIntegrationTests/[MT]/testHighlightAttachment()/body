{
  String mapping=copyToStringFromClasspath("/org/elasticsearch/index/mapper/xcontent/test-highlight-mapping.json");
  byte[] html=copyToBytesFromClasspath("/org/elasticsearch/index/mapper/xcontent/testXHTML.html");
  client().admin().indices().putMapping(putMappingRequest("test").type("person").source(mapping)).actionGet();
  index("test","person",jsonBuilder().startObject().field("file",html).endObject());
  refresh();
  SearchResponse searchResponse=client().prepareSearch("test").setQuery(matchQuery("file","apache tika")).addHighlightedField("file").setNoFields().get();
  logger.info("{}",searchResponse);
  assertThat(searchResponse.getHits().getTotalHits(),equalTo(1l));
  assertThat(searchResponse.getHits().getAt(0).getHighlightFields(),notNullValue());
  assertThat(searchResponse.getHits().getAt(0).getHighlightFields().keySet(),contains("file"));
  searchResponse.getHits().getAt(0).getHighlightFields();
  for (  HighlightField highlightField : searchResponse.getHits().getAt(0).getHighlightFields().values()) {
    for (    Text fragment : highlightField.getFragments()) {
      assertThat(fragment.string(),containsString("<em>Apache</em>"));
      assertThat(fragment.string(),containsString("<em>Tika</em>"));
    }
  }
}
