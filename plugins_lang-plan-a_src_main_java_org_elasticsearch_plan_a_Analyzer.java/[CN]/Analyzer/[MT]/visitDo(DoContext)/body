{
  final StatementMetadata dosmd=adapter.getStatementMetadata(ctx);
  incrementScope();
  final BlockContext blockctx=ctx.block();
  final StatementMetadata blocksmd=adapter.createStatementMetadata(blockctx);
  visit(blockctx);
  if (blocksmd.allReturn) {
    throw new IllegalArgumentException(error(ctx) + "All paths return so the loop is not necessary.");
  }
  if (blocksmd.allBreak) {
    throw new IllegalArgumentException(error(ctx) + "All paths break so the loop is not necessary.");
  }
  if (blocksmd.allContinue) {
    throw new IllegalArgumentException(error(ctx) + "The loop will never exit.");
  }
  final ExpressionContext exprctx=adapter.updateExpressionTree(ctx.expression());
  final ExpressionMetadata expremd=adapter.createExpressionMetadata(exprctx);
  expremd.to=definition.booleanType;
  visit(exprctx);
  markCast(expremd);
  if (expremd.postConst != null) {
    final boolean exitrequired=(boolean)expremd.postConst;
    if (exitrequired && !blocksmd.anyReturn && !blocksmd.anyBreak) {
      throw new IllegalArgumentException(error(ctx) + "The loop will never exit.");
    }
    if (exitrequired && blocksmd.anyReturn && !blocksmd.anyBreak) {
      dosmd.allExit=true;
      dosmd.allReturn=true;
    }
    if (!exitrequired && !blocksmd.anyContinue) {
      throw new IllegalArgumentException(error(ctx) + "All paths exit so the loop is not necessary.");
    }
  }
  decrementScope();
  return null;
}
