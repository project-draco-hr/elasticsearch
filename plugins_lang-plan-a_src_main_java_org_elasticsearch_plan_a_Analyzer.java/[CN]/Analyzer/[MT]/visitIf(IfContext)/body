{
  final StatementMetadata ifsmd=adapter.getStatementMetadata(ctx);
  incrementScope();
  final ExpressionContext exprctx=adapter.updateExpressionTree(ctx.expression());
  final ExpressionMetadata expremd=adapter.createExpressionMetadata(exprctx);
  expremd.to=definition.booleanType;
  visit(exprctx);
  markCast(expremd);
  if (expremd.postConst != null) {
    throw new IllegalArgumentException(error(ctx) + "If statement is not necessary.");
  }
  final BlockContext blockctx0=ctx.block(0);
  final StatementMetadata blocksmd0=adapter.createStatementMetadata(blockctx0);
  blocksmd0.last=ifsmd.last;
  visit(blockctx0);
  ifsmd.anyReturn=blocksmd0.anyReturn;
  ifsmd.anyBreak=blocksmd0.anyBreak;
  ifsmd.anyContinue=blocksmd0.anyContinue;
  if (ctx.ELSE() != null) {
    final BlockContext blockctx1=ctx.block(1);
    final StatementMetadata blocksmd1=adapter.createStatementMetadata(blockctx1);
    blocksmd1.last=ifsmd.last;
    visit(blockctx1);
    ifsmd.allExit=blocksmd0.allExit && blocksmd1.allExit;
    ifsmd.allReturn=blocksmd0.allReturn && blocksmd1.allReturn;
    ifsmd.anyReturn|=blocksmd1.anyReturn;
    ifsmd.allBreak=blocksmd0.allBreak && blocksmd1.allBreak;
    ifsmd.anyBreak|=blocksmd1.anyBreak;
    ifsmd.allContinue=blocksmd0.allContinue && blocksmd1.allContinue;
    ifsmd.anyContinue|=blocksmd1.anyContinue;
  }
  decrementScope();
  return null;
}
