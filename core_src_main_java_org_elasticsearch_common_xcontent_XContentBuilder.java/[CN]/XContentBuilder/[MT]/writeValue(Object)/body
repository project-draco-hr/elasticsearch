{
  if (value == null) {
    generator.writeNull();
    return;
  }
  Class type=value.getClass();
  if (type == String.class) {
    generator.writeString((String)value);
  }
 else   if (type == Integer.class) {
    generator.writeNumber(((Integer)value).intValue());
  }
 else   if (type == Long.class) {
    generator.writeNumber(((Long)value).longValue());
  }
 else   if (type == Float.class) {
    generator.writeNumber(((Float)value).floatValue());
  }
 else   if (type == Double.class) {
    generator.writeNumber(((Double)value).doubleValue());
  }
 else   if (type == Byte.class) {
    generator.writeNumber(((Byte)value).byteValue());
  }
 else   if (type == Short.class) {
    generator.writeNumber(((Short)value).shortValue());
  }
 else   if (type == Boolean.class) {
    generator.writeBoolean(((Boolean)value).booleanValue());
  }
 else   if (type == GeoPoint.class) {
    generator.writeStartObject();
    generator.writeNumberField("lat",((GeoPoint)value).lat());
    generator.writeNumberField("lon",((GeoPoint)value).lon());
    generator.writeEndObject();
  }
 else   if (value instanceof Map) {
    writeMap((Map)value);
  }
 else   if (value instanceof Iterable) {
    generator.writeStartArray();
    for (    Object v : (Iterable)value) {
      writeValue(v);
    }
    generator.writeEndArray();
  }
 else   if (value instanceof Object[]) {
    generator.writeStartArray();
    for (    Object v : (Object[])value) {
      writeValue(v);
    }
    generator.writeEndArray();
  }
 else   if (type == byte[].class) {
    generator.writeBinary((byte[])value);
  }
 else   if (value instanceof Date) {
    generator.writeString(XContentBuilder.defaultDatePrinter.print(((Date)value).getTime()));
  }
 else   if (value instanceof Calendar) {
    generator.writeString(XContentBuilder.defaultDatePrinter.print((((Calendar)value)).getTimeInMillis()));
  }
 else   if (value instanceof ReadableInstant) {
    generator.writeString(XContentBuilder.defaultDatePrinter.print((((ReadableInstant)value)).getMillis()));
  }
 else   if (value instanceof BytesReference) {
    BytesReference bytes=(BytesReference)value;
    if (!bytes.hasArray()) {
      bytes=bytes.toBytesArray();
    }
    generator.writeBinary(bytes.array(),bytes.arrayOffset(),bytes.length());
  }
 else   if (value instanceof BytesRef) {
    BytesRef bytes=(BytesRef)value;
    generator.writeBinary(bytes.bytes,bytes.offset,bytes.length);
  }
 else   if (value instanceof Text) {
    Text text=(Text)value;
    if (text.hasBytes() && text.bytes().hasArray()) {
      generator.writeUTF8String(text.bytes().array(),text.bytes().arrayOffset(),text.bytes().length());
    }
 else     if (text.hasString()) {
      generator.writeString(text.string());
    }
 else {
      BytesArray bytesArray=text.bytes().toBytesArray();
      generator.writeUTF8String(bytesArray.array(),bytesArray.arrayOffset(),bytesArray.length());
    }
  }
 else   if (value instanceof ToXContent) {
    ((ToXContent)value).toXContent(this,ToXContent.EMPTY_PARAMS);
  }
 else   if (value instanceof double[]) {
    generator.writeStartArray();
    for (    double v : (double[])value) {
      generator.writeNumber(v);
    }
    generator.writeEndArray();
  }
 else   if (value instanceof long[]) {
    generator.writeStartArray();
    for (    long v : (long[])value) {
      generator.writeNumber(v);
    }
    generator.writeEndArray();
  }
 else   if (value instanceof int[]) {
    generator.writeStartArray();
    for (    int v : (int[])value) {
      generator.writeNumber(v);
    }
    generator.writeEndArray();
  }
 else   if (value instanceof float[]) {
    generator.writeStartArray();
    for (    float v : (float[])value) {
      generator.writeNumber(v);
    }
    generator.writeEndArray();
  }
 else   if (value instanceof short[]) {
    generator.writeStartArray();
    for (    short v : (short[])value) {
      generator.writeNumber(v);
    }
    generator.writeEndArray();
  }
 else {
    generator.writeString(value.toString());
  }
}
