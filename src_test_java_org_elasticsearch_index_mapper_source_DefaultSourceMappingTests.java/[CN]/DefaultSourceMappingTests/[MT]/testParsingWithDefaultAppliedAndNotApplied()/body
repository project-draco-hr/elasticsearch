{
  String defaultMapping=XContentFactory.jsonBuilder().startObject().startObject(MapperService.DEFAULT_MAPPING).startObject("_source").array("includes","default_field_path.").endObject().endObject().endObject().string();
  MapperService mapperService=createIndex("test").mapperService();
  mapperService.merge(MapperService.DEFAULT_MAPPING,new CompressedString(defaultMapping),true);
  String mapping=XContentFactory.jsonBuilder().startObject().startObject("my_type").startObject("_source").array("includes","custom_field_path.").endObject().endObject().endObject().string();
  mapperService.merge("my_type",new CompressedString(mapping),true);
  DocumentMapper mapper=mapperService.documentMapper("my_type");
  assertThat(mapper.type(),equalTo("my_type"));
  assertThat(mapper.sourceMapper().includes().length,equalTo(2));
  assertThat(mapper.sourceMapper().includes(),hasItemInArray("default_field_path."));
  assertThat(mapper.sourceMapper().includes(),hasItemInArray("custom_field_path."));
  mapping=XContentFactory.jsonBuilder().startObject().startObject("my_type").startObject("properties").startObject("text").field("type","string").endObject().endObject().endObject().endObject().string();
  mapperService.merge("my_type",new CompressedString(mapping),false);
  mapper=mapperService.documentMapper("my_type");
  assertThat(mapper.type(),equalTo("my_type"));
  assertThat(mapper.sourceMapper().includes(),hasItemInArray("default_field_path."));
  assertThat(mapper.sourceMapper().includes(),hasItemInArray("custom_field_path."));
  assertThat(mapper.sourceMapper().includes().length,equalTo(2));
}
