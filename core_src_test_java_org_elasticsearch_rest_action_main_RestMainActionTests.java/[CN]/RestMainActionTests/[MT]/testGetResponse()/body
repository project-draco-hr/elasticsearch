{
  final String nodeName="node1";
  final ClusterName clusterName=new ClusterName("cluster1");
  final boolean available=randomBoolean();
  final RestStatus expectedStatus=available ? RestStatus.OK : RestStatus.SERVICE_UNAVAILABLE;
  final Version version=Version.CURRENT;
  final Build build=Build.CURRENT;
  final boolean prettyPrint=randomBoolean();
  final MainResponse mainResponse=new MainResponse(nodeName,version,clusterName,build,available);
  XContentBuilder builder=JsonXContent.contentBuilder();
  Map<String,String> params=new HashMap<>();
  if (prettyPrint == false) {
    params.put("pretty",String.valueOf(prettyPrint));
  }
  RestRequest restRequest=new FakeRestRequest(Collections.emptyMap(),params);
  BytesRestResponse response=RestMainAction.convertMainResponse(mainResponse,restRequest,builder);
  assertNotNull(response);
  assertEquals(expectedStatus,response.status());
  assertThat(response.content().length(),greaterThan(0));
  XContentBuilder responseBuilder=JsonXContent.contentBuilder();
  if (prettyPrint) {
    responseBuilder.prettyPrint().lfAtEnd();
  }
  mainResponse.toXContent(responseBuilder,ToXContent.EMPTY_PARAMS);
  BytesReference xcontentBytes=responseBuilder.bytes();
  assertTrue(BytesReference.Helper.bytesEqual(xcontentBytes,response.content()));
}
