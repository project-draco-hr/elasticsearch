{
  ClusterName clusterName=new ClusterName("abc");
  DiscoveryNodes nodes1=DiscoveryNodes.builder().masterNodeId("a").build();
  DiscoveryNodes nodes2=DiscoveryNodes.builder().masterNodeId("b").build();
  LinkedList<ProcessClusterState> queue=new LinkedList<>();
  ProcessClusterState thirdMostRecent=new ProcessClusterState(ClusterState.builder(clusterName).version(1).nodes(nodes1).build(),null);
  queue.offer(thirdMostRecent);
  ProcessClusterState secondMostRecent=new ProcessClusterState(ClusterState.builder(clusterName).version(2).nodes(nodes1).build(),null);
  queue.offer(secondMostRecent);
  ProcessClusterState mostRecent=new ProcessClusterState(ClusterState.builder(clusterName).version(3).nodes(nodes1).build(),null);
  queue.offer(mostRecent);
  Collections.shuffle(queue,getRandom());
  queue.offer(new ProcessClusterState(ClusterState.builder(clusterName).version(4).nodes(nodes2).build(),null));
  queue.offer(new ProcessClusterState(ClusterState.builder(clusterName).version(5).nodes(nodes1).build(),null));
  assertThat(ZenDiscovery.selectNextStateToProcess(queue),sameInstance(mostRecent.clusterState));
  assertThat(thirdMostRecent.processed,is(true));
  assertThat(secondMostRecent.processed,is(true));
  assertThat(mostRecent.processed,is(true));
  assertThat(queue.size(),equalTo(2));
  assertThat(queue.get(0).processed,is(false));
  assertThat(queue.get(1).processed,is(false));
}
