{
  double[] percents=new double[]{1.0,5.0,25.0,50.0,75.0,95.0,99.0};
  int counter=0;
  Object percentParam=unparsedParams.get(PERCENTS.getPreferredName());
  if (percentParam != null) {
    if (percentParam instanceof List) {
      percents=new double[((List)percentParam).size()];
      for (      Object p : (List)percentParam) {
        if (p instanceof Double) {
          percents[counter]=(Double)p;
          counter+=1;
        }
 else {
          throw new ParseException("Parameter [" + PERCENTS.getPreferredName() + "] must be an array of doubles, type `"+ percentParam.getClass().getSimpleName()+ "` provided instead",0);
        }
      }
      unparsedParams.remove(PERCENTS.getPreferredName());
    }
 else {
      throw new ParseException("Parameter [" + PERCENTS.getPreferredName() + "] must be an array of doubles, type `"+ percentParam.getClass().getSimpleName()+ "` provided instead",0);
    }
  }
  return new PercentilesBucketPipelineAggregator.Factory(pipelineAggregatorName,bucketsPaths,gapPolicy,formatter,percents);
}
