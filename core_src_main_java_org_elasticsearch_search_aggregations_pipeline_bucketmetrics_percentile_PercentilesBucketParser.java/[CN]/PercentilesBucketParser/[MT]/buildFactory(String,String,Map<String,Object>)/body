{
  double[] percents=null;
  int counter=0;
  Object percentParam=unparsedParams.get(PERCENTS.getPreferredName());
  if (percentParam != null) {
    if (percentParam instanceof List) {
      percents=new double[((List)percentParam).size()];
      for (      Object p : (List)percentParam) {
        if (p instanceof Double) {
          percents[counter]=(Double)p;
          counter+=1;
        }
 else {
          throw new ParseException("Parameter [" + PERCENTS.getPreferredName() + "] must be an array of doubles, type `"+ percentParam.getClass().getSimpleName()+ "` provided instead",0);
        }
      }
      unparsedParams.remove(PERCENTS.getPreferredName());
    }
 else {
      throw new ParseException("Parameter [" + PERCENTS.getPreferredName() + "] must be an array of doubles, type `"+ percentParam.getClass().getSimpleName()+ "` provided instead",0);
    }
  }
  PercentilesBucketPipelineAggregator.PercentilesBucketPipelineAggregatorBuilder factory=new PercentilesBucketPipelineAggregator.PercentilesBucketPipelineAggregatorBuilder(pipelineAggregatorName,bucketsPath);
  if (percents != null) {
    factory.percents(percents);
  }
  return factory;
}
