{
  if (false == transportClient) {
    pipelineAggregationParserRegistry.register(spec.parser,spec.name);
  }
  namedWriteableRegistry.register(PipelineAggregationBuilder.class,spec.name.getPreferredName(),spec.builderReader);
  for (  Map.Entry<String,Writeable.Reader<? extends PipelineAggregator>> resultReader : spec.resultReaders.entrySet()) {
    namedWriteableRegistry.register(PipelineAggregator.class,resultReader.getKey(),resultReader.getValue());
  }
  for (  Map.Entry<String,Writeable.Reader<? extends InternalAggregation>> bucketReaders : spec.bucketReaders.entrySet()) {
    namedWriteableRegistry.register(InternalAggregation.class,bucketReaders.getKey(),bucketReaders.getValue());
  }
}
