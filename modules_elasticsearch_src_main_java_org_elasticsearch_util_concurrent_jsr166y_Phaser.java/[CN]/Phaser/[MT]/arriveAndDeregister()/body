{
  Phaser par=parent;
  int phase;
  for (; ; ) {
    long s=state;
    phase=phaseOf(s);
    if (phase < 0)     break;
    int parties=partiesOf(s) - 1;
    int unarrived=unarrivedOf(s) - 1;
    if (parties >= 0) {
      if (unarrived > 0 || (unarrived == 0 && par != null)) {
        if (casState(s,stateFor(phase,parties,unarrived))) {
          if (unarrived == 0) {
            par.arriveAndDeregister();
            reconcileState();
          }
          break;
        }
        continue;
      }
      if (unarrived == 0) {
        if (casState(s,trippedStateFor(onAdvance(phase,parties) ? -1 : ((phase + 1) & phaseMask),parties))) {
          releaseWaiters(phase);
          break;
        }
        continue;
      }
      if (par != null && phase != phaseOf(root.state)) {
        reconcileState();
        continue;
      }
    }
    throw new IllegalStateException(badBounds(parties,unarrived));
  }
  return phase;
}
