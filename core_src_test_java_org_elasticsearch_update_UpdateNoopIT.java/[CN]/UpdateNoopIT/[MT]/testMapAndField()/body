{
  updateAndCheckSource(1,XContentFactory.jsonBuilder().startObject().field("f","foo").startObject("m").field("mf1","foo").field("mf2","baz").endObject().endObject());
  updateAndCheckSource(1,XContentFactory.jsonBuilder().startObject().field("f","foo").startObject("m").field("mf1","foo").field("mf2","baz").endObject().endObject());
  updateAndCheckSource(2,XContentFactory.jsonBuilder().startObject().field("f","foo").startObject("m").field("mf1","foo").field("mf2","bir").endObject().endObject());
  updateAndCheckSource(2,XContentFactory.jsonBuilder().startObject().field("f","foo").startObject("m").field("mf1","foo").field("mf2","bir").endObject().endObject());
  updateAndCheckSource(3,XContentFactory.jsonBuilder().startObject().field("f","foo").startObject("m").field("mf1","foo").field("mf2","foo").endObject().endObject());
  updateAndCheckSource(4,XContentFactory.jsonBuilder().startObject().field("f","bar").startObject("m").field("mf1","foo").field("mf2","foo").endObject().endObject());
  updateAndCheckSource(4,XContentFactory.jsonBuilder().startObject().field("f","bar").startObject("m").field("mf1","foo").field("mf2","foo").endObject().endObject());
  updateAndCheckSource(5,XContentFactory.jsonBuilder().startObject().field("f","baz").startObject("m").field("mf1","foo").field("mf2","foo").endObject().endObject());
  updateAndCheckSource(6,XContentFactory.jsonBuilder().startObject().field("f","bop").startObject("m").field("mf1","foo").field("mf2","foo").endObject().endObject());
  assertEquals(3,totalNoopUpdates());
}
