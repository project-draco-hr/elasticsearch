{
  super(settings);
  this.clusterService=clusterService;
  this.indicesService=indicesService;
  this.allocationService=allocationService;
  this.aliasValidator=aliasValidator;
  this.env=env;
  this.nodeServicesProvider=nodeServicesProvider;
  this.indexScopedSettings=indexScopedSettings;
  if (indexTemplateFilters.isEmpty()) {
    this.indexTemplateFilter=DEFAULT_INDEX_TEMPLATE_FILTER;
  }
 else {
    IndexTemplateFilter[] templateFilters=new IndexTemplateFilter[indexTemplateFilters.size() + 1];
    templateFilters[0]=DEFAULT_INDEX_TEMPLATE_FILTER;
    int i=1;
    for (    IndexTemplateFilter indexTemplateFilter : indexTemplateFilters) {
      templateFilters[i++]=indexTemplateFilter;
    }
    this.indexTemplateFilter=new IndexTemplateFilter.Compound(templateFilters);
  }
  this.activeShardsObserver=new ActiveShardsObserver(settings,clusterService,threadPool);
}
