{
  engine.create(new Engine.Create(doc().add(field("_uid","1")).add(field("value","test")).build(),Lucene.STANDARD_ANALYZER,"test","1",B_1));
  engine.flush(new Engine.Flush());
  engine.create(new Engine.Create(doc().add(field("_uid","2")).add(field("value","test")).build(),Lucene.STANDARD_ANALYZER,"test","2",B_2));
  engine.recover(new Engine.RecoveryHandler(){
    @Override public void phase1(    SnapshotIndexCommit snapshot) throws EngineException {
    }
    @Override public void phase2(    Translog.Snapshot snapshot) throws EngineException {
      assertThat(snapshot.hasNext(),equalTo(true));
      Translog.Create create=(Translog.Create)snapshot.next();
      assertThat(create.source(),equalTo(B_2));
      assertThat(snapshot.hasNext(),equalTo(false));
    }
    @Override public void phase3(    Translog.Snapshot snapshot) throws EngineException {
      assertThat(snapshot,translogSize(0));
    }
  }
);
  engine.flush(new Engine.Flush());
  engine.close();
}
