{
  ParsedDocument doc1=new ParsedDocument("1","1","test",null,doc().add(uidField("1")).add(field("value","test")).build(),Lucene.STANDARD_ANALYZER,B_1,false);
  engine.create(new Engine.Create(null,newUid("1"),doc1));
  engine.flush(new Engine.Flush());
  ParsedDocument doc2=new ParsedDocument("2","2","test",null,doc().add(uidField("2")).add(field("value","test")).build(),Lucene.STANDARD_ANALYZER,B_2,false);
  engine.create(new Engine.Create(null,newUid("2"),doc2));
  engine.recover(new Engine.RecoveryHandler(){
    @Override public void phase1(    SnapshotIndexCommit snapshot) throws EngineException {
    }
    @Override public void phase2(    Translog.Snapshot snapshot) throws EngineException {
      assertThat(snapshot.hasNext(),equalTo(true));
      Translog.Create create=(Translog.Create)snapshot.next();
      assertThat(create.source(),equalTo(B_2));
      assertThat(snapshot.hasNext(),equalTo(false));
    }
    @Override public void phase3(    Translog.Snapshot snapshot) throws EngineException {
      assertThat(snapshot,translogSize(0));
    }
  }
);
  engine.flush(new Engine.Flush());
  engine.close();
}
