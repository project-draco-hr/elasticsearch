{
  AtomicBoolean shouldFail=new AtomicBoolean();
  AtomicBoolean invoked=new AtomicBoolean();
  JvmGcMonitorService.JvmMonitor monitor=new JvmGcMonitorService.JvmMonitor(Collections.emptyMap(),IGNORE){
    @Override void onMonitorFailure(    Throwable t){
      invoked.set(true);
      assertThat(t,instanceOf(RuntimeException.class));
      assertThat(t,hasToString(containsString("simulated")));
    }
    @Override synchronized void monitorGc(){
      if (shouldFail.get()) {
        throw new RuntimeException("simulated");
      }
    }
    @Override void onSlowGc(    final Threshold threshold,    final long seq,    final SlowGcEvent slowGcEvent){
    }
    @Override void onGcOverhead(    Threshold threshold,    long total,    long elapsed,    long seq){
    }
  }
;
  monitor.run();
  assertFalse(invoked.get());
  shouldFail.set(true);
  monitor.run();
  assertTrue(invoked.get());
}
