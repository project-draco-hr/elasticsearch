{
  final String[] repositories=request.paramAsStringArray("repository",Strings.EMPTY_ARRAY);
  GetRepositoriesRequest getRepositoriesRequest=getRepositoryRequest(repositories);
  getRepositoriesRequest.masterNodeTimeout(request.paramAsTime("master_timeout",getRepositoriesRequest.masterNodeTimeout()));
  getRepositoriesRequest.local(request.paramAsBoolean("local",getRepositoriesRequest.local()));
  client.admin().cluster().getRepositories(getRepositoriesRequest,new RestBuilderListener<GetRepositoriesResponse>(channel){
    @Override public RestResponse buildResponse(    GetRepositoriesResponse response,    XContentBuilder builder) throws Exception {
      builder.startObject();
      for (      RepositoryMetaData repositoryMetaData : response.repositories()) {
        RepositoriesMetaData.FACTORY.toXContent(repositoryMetaData,builder,request);
      }
      builder.endObject();
      return new BytesRestResponse(OK,builder);
    }
  }
);
}
