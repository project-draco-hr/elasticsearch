{
  InputStream database=GeoIpProcessor.class.getResourceAsStream("/GeoLite2-City.mmdb");
  GeoIpProcessor processor=new GeoIpProcessor("source_field",new DatabaseReader.Builder(database).build(),"target_field",EnumSet.allOf(GeoIpProcessor.Field.class));
  Map<String,Object> document=new HashMap<>();
  document.put("source_field","82.170.213.79");
  Data data=new Data("_index","_type","_id",document);
  processor.execute(data);
  assertThat(data.getDocument().size(),equalTo(2));
  assertThat(data.getDocument().get("source_field"),equalTo("82.170.213.79"));
  @SuppressWarnings("unchecked") Map<String,Object> geoData=(Map<String,Object>)data.getDocument().get("target_field");
  assertThat(geoData.size(),equalTo(10));
  assertThat(geoData.get("ip"),equalTo("82.170.213.79"));
  assertThat(geoData.get("country_iso_code"),equalTo("NL"));
  assertThat(geoData.get("country_name"),equalTo("Netherlands"));
  assertThat(geoData.get("continent_name"),equalTo("Europe"));
  assertThat(geoData.get("region_name"),equalTo("North Holland"));
  assertThat(geoData.get("city_name"),equalTo("Amsterdam"));
  assertThat(geoData.get("timezone"),equalTo("Europe/Amsterdam"));
  assertThat(geoData.get("latitude"),equalTo(52.374));
  assertThat(geoData.get("longitude"),equalTo(4.8897));
  assertThat(geoData.get("location"),equalTo(new double[]{4.8897,52.374}));
}
