{
  startNode("server1");
  client("server1").admin().indices().create(createIndexRequest("test")).actionGet(5000);
  logger.info("Running Cluster Health");
  ClusterHealthResponse clusterHealth=client("server1").admin().cluster().health(clusterHealth().waitForYellowStatus()).actionGet();
  logger.info("Done Cluster Health, status " + clusterHealth.status());
  assertThat(clusterHealth.timedOut(),equalTo(false));
  assertThat(clusterHealth.status(),equalTo(ClusterHealthStatus.YELLOW));
  client("server1").index(indexRequest("test").type("type1").id("1").source(source("1","test"))).actionGet();
  FlushResponse flushResponse=client("server1").admin().indices().flush(flushRequest("test")).actionGet();
  assertThat(flushResponse.totalShards(),equalTo(10));
  assertThat(flushResponse.successfulShards(),equalTo(5));
  assertThat(flushResponse.failedShards(),equalTo(0));
  client("server1").index(indexRequest("test").type("type1").id("2").source(source("2","test"))).actionGet();
  RefreshResponse refreshResponse=client("server1").admin().indices().refresh(refreshRequest("test")).actionGet();
  assertThat(refreshResponse.totalShards(),equalTo(10));
  assertThat(refreshResponse.successfulShards(),equalTo(5));
  assertThat(refreshResponse.failedShards(),equalTo(0));
  logger.info("Count");
  for (int i=0; i < 5; i++) {
    CountResponse countResponse=client("server1").count(countRequest("test").querySource(termQuery("_type","type1")).operationThreading(BroadcastOperationThreading.NO_THREADS)).actionGet();
    assertThat(countResponse.count(),equalTo(2l));
    assertThat(countResponse.totalShards(),equalTo(5));
    assertThat(countResponse.successfulShards(),equalTo(5));
    assertThat(countResponse.failedShards(),equalTo(0));
  }
  for (int i=0; i < 5; i++) {
    CountResponse countResponse=client("server1").count(countRequest("test").querySource(termQuery("_type","type1")).operationThreading(BroadcastOperationThreading.SINGLE_THREAD)).actionGet();
    assertThat(countResponse.count(),equalTo(2l));
    assertThat(countResponse.totalShards(),equalTo(5));
    assertThat(countResponse.successfulShards(),equalTo(5));
    assertThat(countResponse.failedShards(),equalTo(0));
  }
  for (int i=0; i < 5; i++) {
    CountResponse countResponse=client("server1").count(countRequest("test").querySource(termQuery("_type","type1")).operationThreading(BroadcastOperationThreading.THREAD_PER_SHARD)).actionGet();
    assertThat(countResponse.count(),equalTo(2l));
    assertThat(countResponse.totalShards(),equalTo(5));
    assertThat(countResponse.successfulShards(),equalTo(5));
    assertThat(countResponse.failedShards(),equalTo(0));
  }
  for (int i=0; i < 5; i++) {
    CountResponse countResponse=client("server1").count(countRequest("test").querySource(Unicode.fromStringAsBytes("{ term : { _type : \"type1 } }"))).actionGet();
    assertThat(countResponse.count(),equalTo(0l));
    assertThat(countResponse.totalShards(),equalTo(5));
    assertThat(countResponse.successfulShards(),equalTo(0));
    assertThat(countResponse.failedShards(),equalTo(5));
    for (    ShardOperationFailedException exp : countResponse.shardFailures()) {
      assertThat(exp.reason(),containsString("QueryParsingException"));
    }
  }
}
