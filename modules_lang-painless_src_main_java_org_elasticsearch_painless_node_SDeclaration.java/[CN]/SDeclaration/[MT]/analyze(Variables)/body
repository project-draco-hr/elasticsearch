{
  final Type type;
  try {
    type=Definition.getType(this.type);
  }
 catch (  IllegalArgumentException exception) {
    throw new IllegalArgumentException(error("Not a type [" + this.type + "]."));
  }
  if (expression != null) {
    expression.expected=type;
    expression.analyze(variables);
    expression=expression.cast(variables);
  }
  variable=variables.addVariable(location,type,name,false,false);
  return this;
}
