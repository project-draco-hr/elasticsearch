{
  checkPermission();
  if (factory == null)   throw new NullPointerException();
  if (parallelism <= 0 || parallelism > MAX_CAP)   throw new IllegalArgumentException();
  this.parallelism=parallelism;
  this.factory=factory;
  this.ueh=handler;
  this.localMode=asyncMode ? FIFO_QUEUE : LIFO_QUEUE;
  long np=(long)(-parallelism);
  this.ctl=((np << AC_SHIFT) & AC_MASK) | ((np << TC_SHIFT) & TC_MASK);
  int n=parallelism - 1;
  n|=n >>> 1;
  n|=n >>> 2;
  n|=n >>> 4;
  n|=n >>> 8;
  n|=n >>> 16;
  int size=(n + 1) << 1;
  this.submitMask=size - 1;
  this.workQueues=new WorkQueue[size];
  this.termination=(this.lock=new Mutex()).newCondition();
  this.stealCount=new AtomicLong();
  this.nextWorkerNumber=new AtomicInteger();
  int pn=poolNumberGenerator.incrementAndGet();
  StringBuilder sb=new StringBuilder("ForkJoinPool-");
  sb.append(Integer.toString(pn));
  sb.append("-worker-");
  this.workerNamePrefix=sb.toString();
  lock.lock();
  this.runState=1;
  lock.unlock();
}
