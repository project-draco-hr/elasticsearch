{
  Mutex lock=this.lock;
  WorkQueue w=null;
  if (wt != null && (w=wt.workQueue) != null) {
    w.runState=-1;
    stealCount.getAndAdd(w.totalSteals + w.nsteals);
    int idx=w.poolIndex;
    lock.lock();
    try {
      WorkQueue[] ws=workQueues;
      if (ws != null && idx >= 0 && idx < ws.length && ws[idx] == w)       ws[idx]=null;
    }
  finally {
      lock.unlock();
    }
  }
  long c;
  do {
  }
 while (!U.compareAndSwapLong(this,CTL,c=ctl,(((c - AC_UNIT) & AC_MASK) | ((c - TC_UNIT) & TC_MASK) | (c & ~(AC_MASK | TC_MASK)))));
  if (!tryTerminate(false,false) && w != null) {
    w.cancelAll();
    if (w.array != null)     signalWork();
    if (ex == null)     ForkJoinTask.helpExpungeStaleExceptions();
  }
  if (ex != null)   U.throwException(ex);
}
