{
  List<ForkJoinTask<T>> fs=new ArrayList<ForkJoinTask<T>>(tasks.size());
  @SuppressWarnings({"unchecked","rawtypes"}) List<Future<T>> futures=(List<Future<T>>)(List)fs;
  boolean done=false;
  try {
    for (    Callable<T> t : tasks) {
      ForkJoinTask<T> f=new ForkJoinTask.AdaptedCallable<T>(t);
      doSubmit(f);
      fs.add(f);
    }
    for (    ForkJoinTask<T> f : fs)     f.quietlyJoin();
    done=true;
    return futures;
  }
  finally {
    if (!done)     for (    ForkJoinTask<T> f : fs)     f.cancel(false);
  }
}
