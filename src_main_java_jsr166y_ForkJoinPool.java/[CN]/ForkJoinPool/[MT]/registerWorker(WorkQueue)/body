{
  Mutex lock=this.lock;
  lock.lock();
  try {
    WorkQueue[] ws=workQueues;
    if (w != null && ws != null) {
      int rs, n=ws.length, m=n - 1;
      int s=nextSeed+=SEED_INCREMENT;
      w.seed=(s == 0) ? 1 : s;
      int r=(s << 1) | 1;
      if (ws[r&=m] != null) {
        int probes=0;
        int step=(n <= 4) ? 2 : ((n >>> 1) & SQMASK) + 2;
        while (ws[r=(r + step) & m] != null) {
          if (++probes >= n) {
            workQueues=ws=Arrays.copyOf(ws,n<<=1);
            m=n - 1;
            probes=0;
          }
        }
      }
      w.eventCount=w.poolIndex=r;
      ws[r]=w;
      runState=((rs=runState) & SHUTDOWN) | ((rs + 2) & ~SHUTDOWN);
    }
  }
  finally {
    lock.unlock();
  }
}
