{
  super(index,indexSettings,name,settings);
  Reader rulesReader=null;
  if (settings.getAsArray("synonyms",null) != null) {
    List<String> rules=Analysis.getWordList(env,settings,"synonyms");
    StringBuilder sb=new StringBuilder();
    for (    String line : rules) {
      sb.append(line).append(System.getProperty("line.separator"));
    }
    rulesReader=new FastStringReader(sb.toString());
  }
 else   if (settings.get("synonyms_path") != null) {
    rulesReader=Analysis.getReaderFromFile(env,settings,"synonyms_path");
  }
 else {
    throw new ElasticsearchIllegalArgumentException("synonym requires either `synonyms` or `synonyms_path` to be configured");
  }
  this.ignoreCase=settings.getAsBoolean("ignore_case",false);
  boolean expand=settings.getAsBoolean("expand",true);
  String tokenizerName=settings.get("tokenizer","whitespace");
  TokenizerFactoryFactory tokenizerFactoryFactory=tokenizerFactories.get(tokenizerName);
  if (tokenizerFactoryFactory == null) {
    tokenizerFactoryFactory=indicesAnalysisService.tokenizerFactoryFactory(tokenizerName);
  }
  if (tokenizerFactoryFactory == null) {
    throw new ElasticsearchIllegalArgumentException("failed to find tokenizer [" + tokenizerName + "] for synonym token filter");
  }
  final TokenizerFactory tokenizerFactory=tokenizerFactoryFactory.create(tokenizerName,indexSettings);
  Analyzer analyzer=new Analyzer(){
    @Override protected TokenStreamComponents createComponents(    String fieldName,    Reader reader){
      Tokenizer tokenizer=tokenizerFactory == null ? new WhitespaceTokenizer(Lucene.ANALYZER_VERSION,reader) : tokenizerFactory.create(reader);
      TokenStream stream=ignoreCase ? new LowerCaseFilter(Lucene.ANALYZER_VERSION,tokenizer) : tokenizer;
      return new TokenStreamComponents(tokenizer,stream);
    }
  }
;
  try {
    SynonymMap.Builder parser=null;
    if ("wordnet".equalsIgnoreCase(settings.get("format"))) {
      parser=new WordnetSynonymParser(true,expand,analyzer);
      ((WordnetSynonymParser)parser).parse(rulesReader);
    }
 else {
      parser=new SolrSynonymParser(true,expand,analyzer);
      ((SolrSynonymParser)parser).parse(rulesReader);
    }
    synonymMap=parser.build();
  }
 catch (  Exception e) {
    throw new ElasticsearchIllegalArgumentException("failed to build synonyms",e);
  }
}
