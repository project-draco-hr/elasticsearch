{
  String originalText="This is an elasticsearch mapper attachment test.";
  String forcedName="dummyname.txt";
  String bytes=Base64.encodeBytes(originalText.getBytes(StandardCharsets.ISO_8859_1));
  MapperService mapperService=MapperTestUtils.newMapperService(createTempDir(),Settings.EMPTY,getIndicesModuleWithRegisteredAttachmentMapper());
  String mapping=copyToStringFromClasspath("/org/elasticsearch/index/mapper/attachment/test/unit/multifield/multifield-mapping.json");
  DocumentMapper documentMapper=mapperService.documentMapperParser().parse("person",new CompressedXContent(mapping));
  ParsedDocument doc=documentMapper.parse("person","person","1",XContentFactory.jsonBuilder().startObject().field("file",bytes).endObject().bytes());
  assertThat(doc.rootDoc().getField("file.content"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content").stringValue(),is(originalText + "\n"));
  assertThat(doc.rootDoc().getField("file.content_type"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content_type").stringValue(),startsWith("text/plain;"));
  assertThat(doc.rootDoc().getField("file.content_type.suggest"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content_type.suggest").stringValue(),startsWith("text/plain;"));
  assertThat(doc.rootDoc().getField("file.content_length"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content_length").numericValue().intValue(),is(originalText.length()));
  assertThat(doc.rootDoc().getField("file.content.suggest"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content.suggest").stringValue(),is(originalText + "\n"));
  doc=documentMapper.parse("person","person","1",XContentFactory.jsonBuilder().startObject().startObject("file").field("_content",bytes).field("_name",forcedName).endObject().endObject().bytes());
  assertThat(doc.rootDoc().getField("file.content"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content").stringValue(),is(originalText + "\n"));
  assertThat(doc.rootDoc().getField("file.content_type"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content_type").stringValue(),startsWith("text/plain;"));
  assertThat(doc.rootDoc().getField("file.content_type.suggest"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content_type.suggest").stringValue(),startsWith("text/plain;"));
  assertThat(doc.rootDoc().getField("file.content_length"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content_length").numericValue().intValue(),is(originalText.length()));
  assertThat(doc.rootDoc().getField("file.content.suggest"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content.suggest").stringValue(),is(originalText + "\n"));
  assertThat(doc.rootDoc().getField("file.name"),notNullValue());
  assertThat(doc.rootDoc().getField("file.name").stringValue(),is(forcedName));
  assertThat(doc.rootDoc().getField("file.name").fieldType().stored(),is(false));
  assertThat(doc.rootDoc().getField("file.name.suggest"),notNullValue());
  assertThat(doc.rootDoc().getField("file.name.suggest").stringValue(),is(forcedName));
  assertThat(doc.rootDoc().getField("file.name.suggest").fieldType().stored(),is(true));
}
