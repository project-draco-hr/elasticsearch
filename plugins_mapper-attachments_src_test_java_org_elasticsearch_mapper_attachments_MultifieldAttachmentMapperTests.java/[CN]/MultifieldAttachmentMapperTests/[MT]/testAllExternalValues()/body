{
  String originalText="This is an elasticsearch mapper attachment test.";
  String forcedName=randomAsciiOfLength(20);
  String forcedLanguage=randomAsciiOfLength(20);
  String forcedContentType=randomAsciiOfLength(20);
  String bytes=Base64.getEncoder().encodeToString(originalText.getBytes(StandardCharsets.ISO_8859_1));
  MapperService mapperService=MapperTestUtils.newMapperService(createTempDir(),Settings.builder().put(AttachmentMapper.INDEX_ATTACHMENT_DETECT_LANGUAGE_SETTING.getKey(),true).build(),getIndicesModuleWithRegisteredAttachmentMapper());
  String mapping=copyToStringFromClasspath("/org/elasticsearch/index/mapper/attachment/test/unit/multifield/multifield-mapping.json");
  DocumentMapper documentMapper=mapperService.documentMapperParser().parse("person",new CompressedXContent(mapping));
  ParsedDocument doc=documentMapper.parse("person","person","1",XContentFactory.jsonBuilder().startObject().startObject("file").field("_content",bytes).field("_name",forcedName).field("_language",forcedLanguage).field("_content_type",forcedContentType).endObject().endObject().bytes());
  assertThat(doc.rootDoc().getField("file.content"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content").stringValue(),is(originalText + "\n"));
  assertThat(doc.rootDoc().getField("file.name"),notNullValue());
  assertThat(doc.rootDoc().getField("file.name").stringValue(),is(forcedName));
  assertThat(doc.rootDoc().getField("file.language"),notNullValue());
  assertThat(doc.rootDoc().getField("file.language").stringValue(),is(forcedLanguage));
  assertThat(doc.rootDoc().getField("file.content_type"),notNullValue());
  assertThat(doc.rootDoc().getField("file.content_type").stringValue(),is(forcedContentType));
}
