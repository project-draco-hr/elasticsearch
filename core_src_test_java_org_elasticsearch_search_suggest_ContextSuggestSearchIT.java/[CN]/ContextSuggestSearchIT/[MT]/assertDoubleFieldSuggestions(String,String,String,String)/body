{
  String suggestionName=randomAsciiOfLength(10);
  CompletionSuggestionBuilder context=SuggestBuilders.completionSuggestion(suggestionName).field(FIELD).text(suggest).size(10).addContextField("st",field1).addContextField("nd",field2);
  SuggestRequestBuilder suggestionRequest=client().prepareSuggest(INDEX).addSuggestion(context);
  SuggestResponse suggestResponse=suggestionRequest.execute().actionGet();
  ArrayList<String> suggestions=new ArrayList<>();
  Suggest suggest2=suggestResponse.getSuggest();
  for (  Suggestion<? extends Entry<? extends Option>> s : suggest2) {
    CompletionSuggestion suggestion=(CompletionSuggestion)s;
    for (    CompletionSuggestion.Entry entry : suggestion) {
      List<CompletionSuggestion.Entry.Option> options=entry.getOptions();
      for (      CompletionSuggestion.Entry.Option option : options) {
        String payload=option.getPayloadAsString();
        String text=option.getText().string();
        assertEquals(field1 + "|" + field2,payload);
        suggestions.add(text);
      }
    }
  }
  assertSuggestionsMatch(suggestions,hits);
}
