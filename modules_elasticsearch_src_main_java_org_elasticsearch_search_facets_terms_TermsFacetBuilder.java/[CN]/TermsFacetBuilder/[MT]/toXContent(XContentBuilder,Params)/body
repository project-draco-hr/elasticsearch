{
  if (fieldName == null && fieldsNames == null) {
    throw new SearchSourceBuilderException("field must be set on terms facet for facet [" + name + "]");
  }
  builder.startObject(name);
  builder.startObject(TermsFacetCollectorParser.NAME);
  if (fieldsNames != null) {
    if (fieldsNames.length == 1) {
      builder.field("field",fieldsNames[0]);
    }
 else {
      builder.field("fields",fieldsNames);
    }
  }
 else {
    builder.field("field",fieldName);
  }
  builder.field("size",size);
  if (exclude != null) {
    builder.startArray("exclude");
    for (    String ex : exclude) {
      builder.value(ex);
    }
    builder.endArray();
  }
  if (regex != null) {
    builder.field("regex",regex);
    if (regexFlags != 0) {
      builder.field("regex_flags",Regex.flagsToString(regexFlags));
    }
  }
  if (comparatorType != null) {
    builder.field("order",comparatorType.name().toLowerCase());
  }
  if (script != null) {
    builder.field("script",script);
    if (lang != null) {
      builder.field("lang",lang);
    }
    if (this.params != null) {
      builder.field("params",this.params);
    }
  }
  builder.endObject();
  addFilterFacetAndGlobal(builder,params);
  builder.endObject();
}
