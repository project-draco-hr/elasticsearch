{
  Collection<String> geohashes;
  if (locations == null || locations.size() == 0) {
    if (mapping.fieldName != null) {
      IndexableField[] fields=doc.getFields(mapping.fieldName);
      if (fields.length > 0) {
        geohashes=new ArrayList<>(fields.length);
        GeoPoint spare=new GeoPoint();
        for (        IndexableField field : fields) {
          spare.resetFromString(field.stringValue());
          geohashes.add(spare.geohash());
        }
      }
 else {
        geohashes=mapping.defaultLocations;
      }
    }
 else {
      geohashes=mapping.defaultLocations;
    }
  }
 else {
    geohashes=locations;
  }
  Collection<String> locations=new HashSet<>();
  for (  String geohash : geohashes) {
    for (    int p : mapping.precision) {
      int precision=Math.min(p,geohash.length());
      geohash=geohash.substring(0,precision);
      if (mapping.neighbors) {
        GeoHashUtils.addNeighbors(geohash,precision,locations);
      }
      locations.add(geohash);
    }
  }
  return new PrefixTokenFilter(stream,ContextMapping.SEPARATOR,locations);
}
