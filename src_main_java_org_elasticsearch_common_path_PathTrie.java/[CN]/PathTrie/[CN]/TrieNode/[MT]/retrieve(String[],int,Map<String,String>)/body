{
  if (index >= path.length)   return null;
  String token=path[index];
  TrieNode<T> node=children.get(token);
  boolean usedWildcard=false;
  if (node == null) {
    node=children.get(wildcard);
    if (node == null) {
      return null;
    }
 else {
      usedWildcard=true;
      if (params != null && node.isNamedWildcard()) {
        put(params,node.namedWildcard(),token);
      }
    }
  }
  if (index == (path.length - 1)) {
    if (params != null && node.isNamedWildcard()) {
      put(params,node.namedWildcard(),token);
    }
    return node.value;
  }
  T res=node.retrieve(path,index + 1,params);
  if (res == null && !usedWildcard) {
    node=children.get(wildcard);
    if (node != null) {
      if (params != null && node.isNamedWildcard()) {
        put(params,node.namedWildcard(),token);
      }
      res=node.retrieve(path,index + 1,params);
    }
  }
  return res;
}
