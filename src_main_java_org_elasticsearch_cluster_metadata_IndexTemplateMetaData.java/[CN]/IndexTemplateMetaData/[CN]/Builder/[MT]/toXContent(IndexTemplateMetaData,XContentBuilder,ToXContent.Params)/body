{
  builder.startObject(indexTemplateMetaData.name(),XContentBuilder.FieldCaseConversion.NONE);
  builder.field("order",indexTemplateMetaData.order());
  builder.field("template",indexTemplateMetaData.template());
  builder.startObject("settings");
  for (  Map.Entry<String,String> entry : indexTemplateMetaData.settings().getAsMap().entrySet()) {
    builder.field(entry.getKey(),entry.getValue());
  }
  builder.endObject();
  if (params.paramAsBoolean("reduce_mappings",false)) {
    builder.startObject("mappings");
    for (    ObjectObjectCursor<String,CompressedString> cursor : indexTemplateMetaData.mappings()) {
      byte[] mappingSource=cursor.value.uncompressed();
      XContentParser parser=XContentFactory.xContent(mappingSource).createParser(mappingSource);
      Map<String,Object> mapping=parser.map();
      if (mapping.size() == 1 && mapping.containsKey(cursor.key)) {
        mapping=(Map<String,Object>)mapping.get(cursor.key);
      }
      builder.field(cursor.key);
      builder.map(mapping);
    }
    builder.endObject();
  }
 else {
    builder.startArray("mappings");
    for (    ObjectObjectCursor<String,CompressedString> cursor : indexTemplateMetaData.mappings()) {
      byte[] data=cursor.value.uncompressed();
      XContentParser parser=XContentFactory.xContent(data).createParser(data);
      Map<String,Object> mapping=parser.mapOrderedAndClose();
      builder.map(mapping);
    }
    builder.endArray();
  }
  for (  ObjectObjectCursor<String,IndexMetaData.Custom> cursor : indexTemplateMetaData.customs()) {
    builder.startObject(cursor.key,XContentBuilder.FieldCaseConversion.NONE);
    IndexMetaData.lookupFactorySafe(cursor.key).toXContent(cursor.value,builder,params);
    builder.endObject();
  }
  builder.startObject("aliases");
  for (  ObjectCursor<AliasMetaData> cursor : indexTemplateMetaData.aliases().values()) {
    AliasMetaData.Builder.toXContent(cursor.value,builder,params);
  }
  builder.endObject();
  builder.endObject();
}
