{
  int numErrorsBefore=errors.size();
  Set<InjectionPoint> injectionPoints;
  try {
    injectionPoints=InjectionPoint.forInstanceMethodsAndFields(type);
  }
 catch (  ConfigurationException e) {
    errors.merge(e.getErrorMessages());
    injectionPoints=e.getPartialValue();
  }
  List<SingleMemberInjector> injectors=getInjectors(injectionPoints,errors);
  errors.throwIfNewErrors(numErrorsBefore);
  EncounterImpl<T> encounter=new EncounterImpl<>(errors,injector.lookups);
  for (  TypeListenerBinding typeListener : typeListenerBindings) {
    if (typeListener.getTypeMatcher().matches(type)) {
      try {
        typeListener.getListener().hear(type,encounter);
      }
 catch (      RuntimeException e) {
        errors.errorNotifyingTypeListener(typeListener,type,e);
      }
    }
  }
  encounter.invalidate();
  errors.throwIfNewErrors(numErrorsBefore);
  return new MembersInjectorImpl<>(injector,type,encounter,injectors);
}
